source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r14 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208004341
@global_var_1001b5cc.3 = global i32 0
@global_var_1001b5dc.4 = local_unnamed_addr global i32* @global_var_1001b5cc.3
@global_var_1001b7b8.6 = global i32 0
@global_var_10000314.7 = constant i32 1207993325
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001b744.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_10000bdc.14 = constant i32 939524096
@global_var_10000f14.15 = constant i32 939524096
@global_var_1001b748.16 = local_unnamed_addr global i32 0
@global_var_10001aa0.17 = constant [3 x i8] c"8~\00"
@global_var_10001ab0.18 = constant [3 x i8] c"8~\00"
@global_var_10001ac0.19 = constant [3 x i8] c"8~\00"
@global_var_100026fc.20 = constant [3 x i8] c"8`\00"
@global_var_100027ec.21 = constant [3 x i8] c"9!\00"
@global_var_10002e78.22 = constant [3 x i8] c"8`\00"
@global_var_100034c0.23 = constant [3 x i8] c"8`\00"
@global_var_10004174.24 = constant i32 939524104
@global_var_100041a4.25 = constant i32 939524096
@global_var_1000459c.26 = constant [3 x i8] c"8`\00"
@global_var_100045a4.27 = constant [3 x i8] c"8`\00"
@global_var_100045ac.28 = constant [3 x i8] c"8`\00"
@global_var_100046ac.29 = constant [3 x i8] c"9@\00"
@global_var_1000b024.30 = constant i32 788529152
@global_var_100049f4.31 = constant [3 x i8] c"8`\00"
@global_var_100049fc.32 = constant [3 x i8] c"8`\00"
@global_var_10004a04.33 = constant [3 x i8] c"8`\00"
@global_var_10004a0c.34 = constant [3 x i8] c"8`\00"
@global_var_10004a78.35 = constant [3 x i8] c"8`\00"
@global_var_10004a80.36 = constant [3 x i8] c"8`\00"
@global_var_10004a88.37 = constant [3 x i8] c"8`\00"
@global_var_1001b754.38 = local_unnamed_addr global i32 0
@global_var_10004ba4.39 = constant i32 939524096
@global_var_1001b750.40 = local_unnamed_addr global i32 0
@global_var_1001b74c.41 = local_unnamed_addr global i32 0
@global_var_10004bc8.42 = constant [3 x i8] c"8`\00"
@global_var_10004c48.43 = constant [3 x i8] c"8`\00"
@global_var_10004c50.44 = constant [3 x i8] c"8`\00"
@global_var_10004cb4.45 = constant i32 1207975617
@global_var_10004cc8.46 = constant [3 x i8] c"8`\00"
@global_var_10004ce4.47 = constant [3 x i8] c"8`\00"
@global_var_10004d94.48 = constant [3 x i8] c"8`\00"
@global_var_10004e24.49 = constant [3 x i8] c"8`\00"
@global_var_10004e2c.50 = constant [3 x i8] c"8`\00"
@global_var_10004e9c.51 = constant [3 x i8] c"8`\00"
@global_var_10004ea4.52 = constant i32 1207973909
@global_var_10004f54.53 = constant [3 x i8] c"8`\00"
@global_var_10005028.54 = constant [3 x i8] c"8`\00"
@global_var_10005060.55 = constant [3 x i8] c"8`\00"
@global_var_10005084.56 = constant [3 x i8] c"8`\00"
@global_var_1001b728.57 = local_unnamed_addr global i32 268468588
@global_var_1001b720.58 = local_unnamed_addr global i32 -1
@global_var_1000524c.60 = constant [3 x i8] c"8`\00"
@global_var_1001b820.61 = global i32 0
@global_var_1000b028.62 = constant [14 x i8] c"139.59.71.253\00"
@global_var_1001b824.63 = local_unnamed_addr global i32 0
@global_var_1001b822.64 = local_unnamed_addr global i32 0
@global_var_1001b758.65 = local_unnamed_addr global i32 0
@global_var_10005354.66 = constant [3 x i8] c"8`\00"
@global_var_100053b0.67 = constant [3 x i8] c"8`\00"
@global_var_100053e8.68 = constant [3 x i8] c"8`\00"
@global_var_100053f0.69 = constant [3 x i8] c"8`\00"
@global_var_100054b0.70 = constant i32 1207971005
@global_var_100054ec.71 = constant i32 1207961245
@global_var_10005508.72 = constant [3 x i8] c";a\00"
@global_var_1000556c.73 = constant i32 1207961037
@global_var_100055c0.74 = constant [3 x i8] c"8`\00"
@global_var_1000b038.75 = constant i32 167772160
@global_var_100055f8.76 = constant [3 x i8] c"8`\00"
@global_var_1000560c.77 = constant i32 1207971941
@global_var_100056b0.78 = constant [3 x i8] c"8`\00"
@global_var_100056b8.79 = constant [3 x i8] c"8`\00"
@global_var_100056c0.80 = constant [3 x i8] c"8`\00"
@global_var_100056c8.81 = constant i32 989855744
@global_var_100056d8.82 = constant [3 x i8] c";a\00"
@global_var_1001b724.83 = local_unnamed_addr global i32 -1
@global_var_10005864.85 = constant i32 939589631
@global_var_10005948.86 = constant i32 939589631
@global_var_10005a28.87 = constant i32 939589631
@global_var_10005a34.88 = constant i32 1006685388
@global_var_1000b03c.89 = constant i32 1
@global_var_10005aec.90 = constant i32 939589631
@global_var_1001b7dc.91 = local_unnamed_addr global i32 0
@global_var_1001b7d0.92 = local_unnamed_addr global i32 0
@global_var_1001b7d8.93 = local_unnamed_addr global i32 0
@global_var_1001b7d4.94 = local_unnamed_addr global i32 0
@global_var_1001b76c.95 = local_unnamed_addr global i32 0
@global_var_1001b760.96 = local_unnamed_addr global i32 0
@global_var_1001b764.97 = local_unnamed_addr global i32 0
@global_var_1001b778.99 = local_unnamed_addr global i32 0
@global_var_10006198.100 = constant [3 x i8] c"8`\00"
@global_var_100061b4.101 = constant i32 939524096
@global_var_1001b770.102 = local_unnamed_addr global i32 0
@global_var_1001b774.103 = local_unnamed_addr global i32 0
@global_var_1001b7e0.104 = global i32 0
@global_var_1001b7f4.105 = global i32 0
@global_var_1000b0cc.106 = constant i32 0
@global_var_1001b7e2.107 = local_unnamed_addr global i32 0
@global_var_1001b800.108 = local_unnamed_addr global i32 0
@global_var_1001b7e8.109 = local_unnamed_addr global i32 0
@global_var_1001b7e9.110 = local_unnamed_addr global i32 0
@global_var_1001b7e4.111 = local_unnamed_addr global i32 0
@global_var_1000b0c8.112 = constant [5 x i8] c"&;; \00"
@global_var_1000b060.114 = constant [8 x i8] c"0125!8 \00"
@global_var_1001b802.115 = local_unnamed_addr global i32 0
@global_var_1000b044.116 = constant [5 x i8] c"5:?;\00"
@global_var_1000b04c.117 = constant [9 x i8] c"<!: acam\00"
@global_var_1000b058.118 = constant [7 x i8] c" 18:1 \00"
@global_var_1000b068.119 = constant [9 x i8] c"$5''#;&0\00"
@global_var_1000b074.120 = constant [6 x i8] c"509=:\00"
@global_var_1000b09c.121 = constant [6 x i8] c"efg`a\00"
@global_var_1000b07c.122 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000b084.123 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000b08c.124 = constant i32 1663122969
@global_var_1000b0a4.125 = constant [5 x i8] c"!'1&\00"
@global_var_1000b0ac.126 = constant i32 455883832
@global_var_1000b0b8.127 = constant i32 124138003
@global_var_1001b7ec.128 = local_unnamed_addr global i32 0
@global_var_1001b7f0.129 = local_unnamed_addr global i32 0
@global_var_1001b7ea.130 = local_unnamed_addr global i32 0
@global_var_1001b804.131 = local_unnamed_addr global i32 0
@global_var_1001b7f8.132 = local_unnamed_addr global i32 0
@global_var_10006a8c.134 = constant [3 x i8] c"8`\00"
@global_var_10006a94.135 = constant i32 939524096
@global_var_1000b0d0.136 = constant i32 -17852
@global_var_1001b830.156 = global i32 0
@global_var_1001b72c.157 = local_unnamed_addr global i32 -555811921
@global_var_1000b10c.158 = constant [3 x i8] c"Qm\00"
@global_var_100079ec.159 = constant [3 x i8] c"8`\00"
@global_var_1001b838.160 = local_unnamed_addr global i32 0
@global_var_1001b83c.161 = local_unnamed_addr global i32 0
@global_var_1000b110.162 = constant i32 1407844352
@global_var_10007a10.163 = constant [3 x i8] c"8`\00"
@global_var_1001b840.164 = local_unnamed_addr global i32 0
@global_var_1001b844.165 = local_unnamed_addr global i32 0
@global_var_1000b278.166 = constant i32 271921200
@global_var_10007a34.167 = constant i32 939524125
@global_var_1001b84c.168 = local_unnamed_addr global i32 0
@global_var_1001b848.169 = local_unnamed_addr global i32 0
@global_var_1000b114.170 = constant [7 x i8] c"'<188T\00"
@global_var_10007a5c.171 = constant [3 x i8] c"8`\00"
@global_var_1001b850.172 = local_unnamed_addr global i32 0
@global_var_1001b854.173 = local_unnamed_addr global i32 0
@global_var_1000b11c.174 = constant [8 x i8] c"1:5681T\00"
@global_var_10007a84.175 = constant [3 x i8] c"8`\00"
@global_var_1001b858.176 = local_unnamed_addr global i32 0
@global_var_1001b85c.177 = local_unnamed_addr global i32 0
@global_var_1000b124.178 = constant [8 x i8] c"'-' 19T\00"
@global_var_10007aa8.179 = constant [3 x i8] c"8`\00"
@global_var_1001b860.180 = local_unnamed_addr global i32 0
@global_var_1001b864.181 = local_unnamed_addr global i32 0
@global_var_1000b12c.182 = constant [4 x i8] c"'<T\00"
@global_var_10007acc.183 = constant i32 939524099
@global_var_1001b86c.184 = local_unnamed_addr global i32 0
@global_var_1001b868.185 = local_unnamed_addr global i32 0
@global_var_1000b130.186 = constant i32 2067152186
@global_var_10007af4.187 = constant [3 x i8] c"8`\00"
@global_var_1001b870.188 = local_unnamed_addr global i32 0
@global_var_1001b874.189 = local_unnamed_addr global i32 0
@global_var_1000b144.190 = constant i32 505087772
@global_var_10007b18.191 = constant i32 939524120
@global_var_1001b87c.192 = local_unnamed_addr global i32 0
@global_var_1001b878.193 = local_unnamed_addr global i32 0
@global_var_1000b160.194 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10007b40.195 = constant i32 939524105
@global_var_1001b884.196 = local_unnamed_addr global i32 0
@global_var_1001b880.197 = local_unnamed_addr global i32 0
@global_var_1000b16c.198 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10007b68.199 = constant [3 x i8] c"8`\00"
@global_var_1001b888.200 = local_unnamed_addr global i32 0
@global_var_1001b88c.201 = local_unnamed_addr global i32 0
@global_var_1000b180.202 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_10007b8c.203 = constant i32 939524118
@global_var_1001b894.204 = local_unnamed_addr global i32 0
@global_var_1001b890.205 = local_unnamed_addr global i32 0
@global_var_1000b198.206 = constant [8 x i8] c"{$&;7{T\00"
@global_var_10007bb4.207 = constant [3 x i8] c"8`\00"
@global_var_1001b898.208 = local_unnamed_addr global i32 0
@global_var_1001b89c.209 = local_unnamed_addr global i32 0
@global_var_1000b1a0.210 = constant [6 x i8] c"{1,1T\00"
@global_var_10007bd8.211 = constant [3 x i8] c"8`\00"
@global_var_1001b8a0.212 = local_unnamed_addr global i32 0
@global_var_1001b8a4.213 = local_unnamed_addr global i32 0
@global_var_1000b1a8.214 = constant [5 x i8] c"{20T\00"
@global_var_10007bfc.215 = constant i32 939524100
@global_var_1001b8ac.216 = local_unnamed_addr global i32 0
@global_var_1001b8a8.217 = local_unnamed_addr global i32 0
@global_var_1000b1b0.218 = constant [7 x i8] c"{95$'T\00"
@global_var_10007c24.219 = constant [3 x i8] c"8`\00"
@global_var_1001b8b0.220 = local_unnamed_addr global i32 0
@global_var_1001b8b4.221 = local_unnamed_addr global i32 0
@global_var_1000b1b8.222 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10007c48.223 = constant [3 x i8] c"8`\00"
@global_var_1001b8b8.224 = local_unnamed_addr global i32 0
@global_var_1001b8bc.225 = local_unnamed_addr global i32 0
@global_var_1000b1c8.226 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10007c6c.227 = constant [3 x i8] c"8`\00"
@global_var_1001b918.228 = local_unnamed_addr global i32 0
@global_var_1001b91c.229 = local_unnamed_addr global i32 0
@global_var_1000b1d4.230 = constant [8 x i8] c"z5:=91T\00"
@global_var_10007c90.231 = constant [3 x i8] c"8`\00"
@global_var_1001b920.232 = local_unnamed_addr global i32 0
@global_var_1001b924.233 = local_unnamed_addr global i32 0
@global_var_1000b1dc.234 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10007cb4.235 = constant [3 x i8] c"8`\00"
@global_var_1001b8c0.236 = local_unnamed_addr global i32 0
@global_var_1001b8c4.237 = local_unnamed_addr global i32 0
@global_var_1000b1f0.238 = constant [9 x i8] c"5''#;&0T\00"
@global_var_10007cd8.239 = constant [3 x i8] c"8`\00"
@global_var_1001b8c8.240 = local_unnamed_addr global i32 0
@global_var_1001b8cc.241 = local_unnamed_addr global i32 0
@global_var_1000b298.242 = constant i32 473889
@global_var_10007cfc.243 = constant i32 939524117
@global_var_1001b8d4.244 = local_unnamed_addr global i32 0
@global_var_1001b8d0.245 = local_unnamed_addr global i32 0
@global_var_1000b1fc.246 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_10007d24.247 = constant i32 939524113
@global_var_1001b8dc.248 = local_unnamed_addr global i32 0
@global_var_1001b8d8.249 = local_unnamed_addr global i32 0
@global_var_1000b210.250 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10007d4c.251 = constant i32 939524108
@global_var_1001b8e4.252 = local_unnamed_addr global i32 0
@global_var_1001b8e0.253 = local_unnamed_addr global i32 0
@global_var_1000b220.254 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10007d74.255 = constant [3 x i8] c"8`\00"
@global_var_1001b8e8.256 = local_unnamed_addr global i32 0
@global_var_1001b8ec.257 = local_unnamed_addr global i32 0
@global_var_1000b230.258 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10007d98.259 = constant [3 x i8] c"8`\00"
@global_var_1001b8f0.260 = local_unnamed_addr global i32 0
@global_var_1001b8f4.261 = local_unnamed_addr global i32 0
@global_var_1000b244.262 = constant [9 x i8] c"$662*7!E\00"
@global_var_10007dbc.263 = constant [3 x i8] c"8`\00"
@global_var_1001b8f8.264 = local_unnamed_addr global i32 0
@global_var_1001b8fc.265 = local_unnamed_addr global i32 0
@global_var_1000b250.266 = constant [6 x i8] c";3=:T\00"
@global_var_10007de0.267 = constant [3 x i8] c"8`\00"
@global_var_1001b900.268 = local_unnamed_addr global i32 0
@global_var_1001b904.269 = local_unnamed_addr global i32 0
@global_var_1000b258.270 = constant [7 x i8] c"1: 1&T\00"
@global_var_10007e04.271 = constant [3 x i8] c"8`\00"
@global_var_1001b908.272 = local_unnamed_addr global i32 0
@global_var_1001b90c.273 = local_unnamed_addr global i32 0
@global_var_1000b260.274 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_10007e28.275 = constant i32 939524119
@global_var_1001b914.276 = local_unnamed_addr global i32 0
@global_var_1001b910.277 = local_unnamed_addr global i32 0
@global_var_10008190.278 = constant i32 939524096
@global_var_100084d8.279 = constant i32 1207959564
@global_var_100089b4.280 = constant i32 939524118
@global_var_1000a0a4.281 = constant [3 x i8] c"8`\00"
@global_var_10008b0c.282 = constant i32 939524105
@global_var_10008b28.283 = constant i32 939589631
@global_var_10008c50.284 = constant i32 1207959797
@global_var_10008c54.285 = constant i32 939524108
@global_var_1001b79c.286 = global i32 0
@global_var_10009398.287 = constant i32 939524118
@global_var_10009420.288 = constant i32 939524118
@global_var_1001b928.289 = global i32 0
@global_var_1001b808.290 = global i32 0
@global_var_1001b730 = external global i32
@global_var_1000b3bc.292 = constant i32 33554944
@global_var_1001b78c.293 = local_unnamed_addr global i32 0
@global_var_1001b9a8.294 = global i32 0
@global_var_1000967c.295 = constant i32 939524108
@global_var_100096d0.296 = constant i32 939524108
@global_var_10009784.297 = constant [3 x i8] c"8`\00"
@global_var_10009830.298 = constant [3 x i8] c"8`\00"
@global_var_10009b58.299 = constant i32 1207959640
@global_var_10009b94.300 = constant i32 1207959580
@global_var_1001b73c.301 = local_unnamed_addr global i32* @global_var_1000b3bc.292
@global_var_10009d88.302 = constant i32 939524130
@global_var_1001b6f0.303 = global i32 0
@global_var_1001b780.304 = local_unnamed_addr global i32 0
@global_var_10009e1c.305 = constant i32 1207960053
@global_var_10009e20.306 = constant [3 x i8] c"= \00"
@global_var_1001b5c0.307 = global i32 -1
@global_var_1001b790.308 = local_unnamed_addr global i32 0
@global_var_1001b794.309 = local_unnamed_addr global i32 0
@global_var_1000b2b0.310 = constant [10 x i8] c"/dev/null\00"
@global_var_1001b798.311 = local_unnamed_addr global i32 0
@global_var_1001b784.313 = local_unnamed_addr global i32 0
@global_var_1001b788.314 = local_unnamed_addr global i32 0
@global_var_1000a3bc.315 = constant i32 939524096
@global_var_1000a648.317 = constant i32 939524118
@global_var_1000a844.318 = constant i32 939589631
@global_var_1001b7b0.319 = local_unnamed_addr global i32 0
@global_var_1001b708.320 = global i32 0
@global_var_1000ad68.321 = constant i32 939524129
@global_var_1001b7a4.322 = local_unnamed_addr global i32 0
@global_var_1000addc.323 = constant [3 x i8] c"8`\00"
@global_var_1000ae14.324 = constant i32 939524129
@global_var_1001b7a8.325 = local_unnamed_addr global i32 0
@global_var_1001b7ac.326 = local_unnamed_addr global i32 0
@global_var_1001b5c4.327 = global i32 0
@global_var_1001b7b4.2 = local_unnamed_addr global i8 0
@global_var_1001b740.9 = local_unnamed_addr global i8 0
@global_var_1001b741.13 = global i8 0
@global_var_1001b5e0.59 = local_unnamed_addr global i8 1
@global_var_1001b75c.84 = local_unnamed_addr global i16 0
@global_var_1001b768.98 = global i16 0
@global_var_1001b7f6.113 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000af98(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001b7b4.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001b5dc.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001b5dc.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001b5dc.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001b7b4.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001b7b4.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268547536 to i32*), align 16
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268547536
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000a190(i32 268456952, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268480516, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_10008670()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_10008670()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_10009e3c(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_10008700()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_10008748(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_10009db8()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001b740.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001b744.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003ac = load i32, i32* @r31, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003d0 = load i32, i32* @r27, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003d0, i32* @r27, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  store i32 %v0_100003ac, i32* @r31, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_100096a0(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_100096a0(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_100096a0(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10007eec(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_10008d44()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_10009710()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_10009710()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_10009710()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 2, 7, 3, 10, 11, 8, 9, 12, 13, 14, 16, 17, 15, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 3, 1, 2, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_100090dc(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10007f90(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_100096a0(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001b744.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268439924, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_10009810(i32 %v3_1000076c, i32 %v1_1000077c, i32 268439924)
  %v3_10000784 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001b744.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001b740.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_100096a0(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001b740.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001b744.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268444004, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_10009810(i32 %v3_100007c0, i32 %v1_100007d0, i32 268444004)
  %v3_100007d8 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001b744.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001b740.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_100096a0(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001b744.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268444996, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_10009810(i32 %v3_10000814, i32 %v1_10000824, i32 268444996)
  %v3_1000082c = load i8, i8* @global_var_1001b740.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001b744.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001b740.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_100096a0(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001b744.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268438276, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_10009810(i32 %v3_10000868, i32 %v1_10000878, i32 268438276)
  %v3_10000880 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001b744.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001b740.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_100096a0(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001b744.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268451368, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_10009810(i32 %v3_100008bc, i32 %v1_100008cc, i32 268451368)
  %v3_100008d4 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001b744.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001b740.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_100096a0(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001b740.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001b744.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268449860, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_10009810(i32 %v3_10000910, i32 %v1_10000920, i32 268449860)
  %v3_10000928 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001b744.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001b740.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_100096a0(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001b744.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268448252, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_10009810(i32 %v3_10000964, i32 %v1_10000974, i32 268448252)
  %v3_1000097c = load i8, i8* @global_var_1001b740.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001b744.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001b740.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_100096a0(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001b744.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268446644, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_10009810(i32 %v3_100009b8, i32 %v1_100009c8, i32 268446644)
  %v3_100009d0 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001b744.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001b740.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_100096a0(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001b744.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268442640, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_10009810(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268442640)
  %v3_10000a24 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001b744.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001b740.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_100096a0(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001b744.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268441168, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_10009810(i32 %v3_10000a60, i32 %v1_10000a70, i32 268441168)
  %v3_10000a78 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001b740.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001b744.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_100096a0(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001b744.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268439100, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_10009810(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268439100)
  %v3_10000acc = load i8, i8* @global_var_1001b740.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001b744.10, align 4
  store i32 ptrtoint (i8* @global_var_1001b741.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001b740.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001b741.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b740.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b38 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b40 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268438372, i32* @lr, align 4
  %v2_10000b60 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_10000b60, i32* %r27.global-to-local, align 4
  %v0_10000b6c = load i32, i32* @r30, align 4
  store i32 %v0_10000b6c, i32* %r3.global-to-local, align 4
  store i32 268438388, i32* @lr, align 4
  %v2_10000b70 = call i32 @function_100096a0(i32 %v0_10000b6c, i32 4)
  %v0_10000b78 = load i32, i32* @r28, align 4
  store i32 %v2_10000b70, i32* %r26.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b78 to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 7, i32 65535)
  %v0_10000b98 = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 65536
  store i32 %v1_10000ba0, i32* %r21.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b98 to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 6, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  %v1_10000bb0 = urem i32 %v5_10000ba8, 65536
  store i32 %v1_10000bb0, i32* %r22.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 0, i32 512)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bc8 = urem i32 %v5_10000bc0, 65536
  store i32 %v1_10000bc8, i32* @r31, align 4
  %v0_10000bd0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000bdc.14 to i32), i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd0, i32* %v4_10000bd8, i32 1, i32 1)
  store i32 %v5_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000be8 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000be8 = icmp eq i32 %v0_10000be8, 65535
  %v1_10000bf0 = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bf0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000be8, label %dec_label_pc_10000dec, label %dec_label_pc_10000c04

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000dec
  %v0_10000c04 = load i32, i32* @r30, align 4
  %v1_10000c04 = icmp slt i32 %v0_10000c04, 0
  %v3_10000c04 = icmp eq i32 %v0_10000c04, 0
  store i1 %v1_10000c04, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000c04, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000c04, 1
  br i1 %tmp38, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c0c

dec_label_pc_10000c0c:                            ; preds = %dec_label_pc_10000c04
  %v0_10000c10 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000c10, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000c1c = load i32, i32* %r21.global-to-local, align 4
  %v4_10000c1c = icmp eq i32 %v0_10000c1c, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10000d6c = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000c1c, label %dec_label_pc_10000d3c, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000ca4
  %v0_10000c3c = phi i32 [ %v0_10000cb8, %dec_label_pc_10000ca4 ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000c3c = add i32 %v0_10000c3c, 1
  store i32 %v1_10000c3c, i32* %r24.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v2_10000c40 = call i32 @function_100096a0(i32 65535, i32 1)
  %v0_10000c44 = load i32, i32* %r21.global-to-local, align 4
  %v1_10000c44 = trunc i32 %v0_10000c44 to i16
  %v2_10000c44 = load i32, i32* @r28, align 4
  %v3_10000c44 = add i32 %v2_10000c44, 2
  %v4_10000c44 = inttoptr i32 %v3_10000c44 to i16*
  store i16 %v1_10000c44, i16* %v4_10000c44, align 2
  %v1_10000c48 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c48 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000c48 = add i32 %v2_10000c48, %v1_10000c48
  %v4_10000c48 = inttoptr i32 %v3_10000c48 to i32*
  store i32 %v2_10000c40, i32* %v4_10000c48, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v3_10000c58 = call i32 @function_10009344(i32 2, i32 2, i32 17)
  store i32 %v3_10000c58, i32* %r3.global-to-local, align 4
  %v3_10000c60 = icmp eq i32 %v3_10000c58, -1
  %v1_10000c68 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c68 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000c68 = add i32 %v2_10000c68, %v1_10000c68
  %v4_10000c68 = inttoptr i32 %v3_10000c68 to i32*
  store i32 %v3_10000c58, i32* %v4_10000c68, align 4
  br i1 %v3_10000c60, label %dec_label_pc_10000da0, label %dec_label_pc_10000c70

dec_label_pc_10000c70:                            ; preds = %dec_label_pc_10000c30
  %v0_10000c70 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000c70, i32* %stack_var_-72, align 4
  store i32 268438656, i32* @lr, align 4
  %v0_10000c7c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000c7c = call i32 @function_10009110(i32 %v0_10000c7c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000c7c, i32* %r3.global-to-local, align 4
  %v0_10000c80 = load i32, i32* @r28, align 4
  %v1_10000c80 = add i32 %v0_10000c80, 20
  %v2_10000c80 = inttoptr i32 %v1_10000c80 to i8*
  %v3_10000c80 = load i8, i8* %v2_10000c80, align 1
  %v2_10000c84 = icmp ugt i8 %v3_10000c80, 31
  br i1 %v2_10000c84, label %dec_label_pc_10000ca4, label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c70
  %v1_10000c8c = add i32 %v0_10000c80, 16
  %v2_10000c8c = inttoptr i32 %v1_10000c8c to i32*
  %v3_10000c8c = load i32, i32* %v2_10000c8c, align 4
  store i32 %v3_10000c8c, i32* %r29.global-to-local, align 4
  %v0_10000c90 = call i32 @function_10005b38()
  store i32 %v0_10000c90, i32* %r3.global-to-local, align 4
  %v0_10000c94 = load i32, i32* @r28, align 4
  %v1_10000c94 = add i32 %v0_10000c94, 20
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i8*
  %v3_10000c94 = load i8, i8* %v2_10000c94, align 1
  %tmp = urem i8 %v3_10000c94, 64
  %v2_10000c98 = zext i8 %tmp to i32
  %v3_10000c98 = lshr i32 %v0_10000c90, %v2_10000c98
  %v0_10000c9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000c9c = add i32 %v3_10000c98, %v0_10000c9c
  store i32 %v2_10000c9c, i32* %r3.global-to-local, align 4
  %v2_10000ca0 = add i32 %v0_10000c94, 4
  %v3_10000ca0 = inttoptr i32 %v2_10000ca0 to i32*
  store i32 %v2_10000c9c, i32* %v3_10000ca0, align 4
  br label %dec_label_pc_10000ca4

dec_label_pc_10000ca4:                            ; preds = %dec_label_pc_10000c70, %dec_label_pc_10000c8c
  %v0_10000ca4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000ca4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000ca4 = add i32 %v1_10000ca4, %v0_10000ca4
  %v3_10000ca4 = inttoptr i32 %v2_10000ca4 to i32*
  %v4_10000ca4 = load i32, i32* %v3_10000ca4, align 4
  store i32 %v4_10000ca4, i32* @r3, align 4
  %v1_10000cb0 = add i32 %v0_10000ca4, 4
  store i32 %v1_10000cb0, i32* %r25.global-to-local, align 4
  store i32 268438712, i32* @lr, align 4
  %v0_10000cb4 = call i32 @function_10009144()
  store i32 %v0_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* @r30, align 4
  %v4_10000cb8 = icmp eq i32 %v0_10000cb8, %v1_10000cb8
  %v0_10000cbc = load i32, i32* @r28, align 4
  %v1_10000cbc = add i32 %v0_10000cbc, 24
  store i32 %v1_10000cbc, i32* @r28, align 4
  br i1 %v4_10000cb8, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c30

dec_label_pc_10000cc4:                            ; preds = %dec_label_pc_10000ca4, %dec_label_pc_10000d1c, %dec_label_pc_10000c04
  %v0_10000cc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000cc4 = icmp eq i32 %v0_10000cc4, 0
  store i1 %v3_10000cc4, i1* %cr3_eq.global-to-local, align 1
  %v0_10000cc8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cc8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000cc8.outer

dec_label_pc_10000cc8.outer:                      ; preds = %dec_label_pc_10000cfc, %dec_label_pc_10000e34, %dec_label_pc_10000cc4
  %v1_10000cc8.ph39 = phi i1 [ %v1_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v1_10000e34, %dec_label_pc_10000e34 ], [ %v1_10000cfc, %dec_label_pc_10000cfc ]
  %v0_10000cc8.ph40 = phi i1 [ %v0_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v0_10000e34, %dec_label_pc_10000e34 ], [ %v0_10000cfc, %dec_label_pc_10000cfc ]
  %v2_10000cc8 = or i1 %v1_10000cc8.ph39, %v0_10000cc8.ph40
  br label %dec_label_pc_10000cc8

dec_label_pc_10000cc8:                            ; preds = %dec_label_pc_10000cc8.outer, %dec_label_pc_10000cc8
  br i1 %v2_10000cc8, label %dec_label_pc_10000cc8, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000e34, %dec_label_pc_10000cfc, %dec_label_pc_10000cc8
  %v0_10000ccc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ccc, label %dec_label_pc_10000cd0, label %dec_label_pc_10000df8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cd8:                            ; preds = %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge, %dec_label_pc_10000cd0
  %v0_10000cdc = phi i32 [ %v0_10000cf4, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v0_10000cec = phi i32 [ %v0_10000cd8.pre, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v1_10000cd8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000cd8 = add i32 %v1_10000cd8, %v0_10000cec
  %v3_10000cd8 = inttoptr i32 %v2_10000cd8 to i32*
  %v4_10000cd8 = load i32, i32* %v3_10000cd8, align 4
  store i32 %v4_10000cd8, i32* %r3.global-to-local, align 4
  %v1_10000cdc = add i32 %v0_10000cdc, 1
  store i32 %v1_10000cdc, i32* %r28.global-to-local, align 4
  %v1_10000ce0 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000ce0 = add i32 %v1_10000ce0, %v0_10000cec
  %v3_10000ce0 = inttoptr i32 %v2_10000ce0 to i32*
  %v4_10000ce0 = load i32, i32* %v3_10000ce0, align 4
  %v0_10000ce4 = load i32, i32* @r31, align 4
  %v1_10000cec = add i32 %v0_10000cec, 4
  store i32 %v1_10000cec, i32* %r29.global-to-local, align 4
  store i32 268438772, i32* @lr, align 4
  %v4_10000cf0 = call i32 @function_10009290(i32 %v4_10000cd8, i32 %v4_10000ce0, i32 %v0_10000ce4, i32 16384)
  store i32 %v4_10000cf0, i32* %r3.global-to-local, align 4
  %v0_10000cf4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000cf4 = load i32, i32* @r30, align 4
  %v4_10000cf4 = icmp eq i32 %v0_10000cf4, %v1_10000cf4
  br i1 %v4_10000cf4, label %dec_label_pc_10000cfc, label %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge

dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge: ; preds = %dec_label_pc_10000cd8
  %v0_10000cd8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cfc:                            ; preds = %dec_label_pc_10000cd8
  %v0_10000cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000cfc = or i1 %v0_10000cfc, %v1_10000cfc
  br i1 %v2_10000cfc, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d80, %dec_label_pc_10000d9c
  %v0_10000d1c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000d1c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000d1c = add i32 %v1_10000d1c, %v0_10000d1c
  %v3_10000d1c = inttoptr i32 %v2_10000d1c to i32*
  %v4_10000d1c = load i32, i32* %v3_10000d1c, align 4
  store i32 %v4_10000d1c, i32* @r3, align 4
  %v1_10000d28 = add i32 %v0_10000d1c, 4
  store i32 %v1_10000d28, i32* %r25.global-to-local, align 4
  store i32 268438832, i32* @lr, align 4
  %v0_10000d2c = call i32 @function_10009144()
  store i32 %v0_10000d2c, i32* %r3.global-to-local, align 4
  %v0_10000d30 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d30 = load i32, i32* @r30, align 4
  %v4_10000d30 = icmp eq i32 %v0_10000d30, %v1_10000d30
  %v0_10000d34 = load i32, i32* @r28, align 4
  %v1_10000d34 = add i32 %v0_10000d34, 24
  store i32 %v1_10000d34, i32* @r28, align 4
  br i1 %v4_10000d30, label %dec_label_pc_10000cc4, label %dec_label_pc_10000d3c

dec_label_pc_10000d3c:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000d1c
  %v0_10000d48 = phi i32 [ %v0_10000d30, %dec_label_pc_10000d1c ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000d48 = add i32 %v0_10000d48, 1
  store i32 %v1_10000d48, i32* %r24.global-to-local, align 4
  store i32 268438864, i32* @lr, align 4
  %v2_10000d4c = call i32 @function_100096a0(i32 65535, i32 1)
  store i32 %v2_10000d4c, i32* %r3.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d50 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000d50 = add i32 %v2_10000d50, %v1_10000d50
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d4c, i32* %v4_10000d50, align 4
  %v0_10000d54 = call i32 @function_10005b38()
  %v1_10000d54 = trunc i32 %v0_10000d54 to i16
  %v3_10000d58 = load i32, i32* @r28, align 4
  %v4_10000d58 = add i32 %v3_10000d58, 2
  %v5_10000d58 = inttoptr i32 %v4_10000d58 to i16*
  store i16 %v1_10000d54, i16* %v5_10000d58, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438892, i32* @lr, align 4
  %v3_10000d68 = call i32 @function_10009344(i32 2, i32 2, i32 17)
  store i32 %v3_10000d68, i32* %r3.global-to-local, align 4
  %v3_10000d70 = icmp eq i32 %v3_10000d68, -1
  %v1_10000d78 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d78 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000d78 = add i32 %v2_10000d78, %v1_10000d78
  %v4_10000d78 = inttoptr i32 %v3_10000d78 to i32*
  store i32 %v3_10000d68, i32* %v4_10000d78, align 4
  br i1 %v3_10000d70, label %dec_label_pc_10000da0, label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000d3c
  %v0_10000d80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d80, i32* %stack_var_-72, align 4
  store i32 268438928, i32* @lr, align 4
  %v0_10000d8c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000d8c = call i32 @function_10009110(i32 %v0_10000d8c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000d8c, i32* %r3.global-to-local, align 4
  %v0_10000d90 = load i32, i32* @r28, align 4
  %v1_10000d90 = add i32 %v0_10000d90, 20
  %v2_10000d90 = inttoptr i32 %v1_10000d90 to i8*
  %v3_10000d90 = load i8, i8* %v2_10000d90, align 1
  %v2_10000d94 = icmp ugt i8 %v3_10000d90, 31
  br i1 %v2_10000d94, label %dec_label_pc_10000d1c, label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d80
  %v1_10000d04 = add i32 %v0_10000d90, 16
  %v2_10000d04 = inttoptr i32 %v1_10000d04 to i32*
  %v3_10000d04 = load i32, i32* %v2_10000d04, align 4
  store i32 %v3_10000d04, i32* %r29.global-to-local, align 4
  %v0_10000d08 = call i32 @function_10005b38()
  store i32 %v0_10000d08, i32* %r3.global-to-local, align 4
  %v0_10000d0c = load i32, i32* @r28, align 4
  %v1_10000d0c = add i32 %v0_10000d0c, 20
  %v2_10000d0c = inttoptr i32 %v1_10000d0c to i8*
  %v3_10000d0c = load i8, i8* %v2_10000d0c, align 1
  %tmp43 = urem i8 %v3_10000d0c, 64
  %v2_10000d10 = zext i8 %tmp43 to i32
  %v3_10000d10 = lshr i32 %v0_10000d08, %v2_10000d10
  %v0_10000d14 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000d14 = add i32 %v3_10000d10, %v0_10000d14
  store i32 %v2_10000d14, i32* %r3.global-to-local, align 4
  %v2_10000d18 = add i32 %v0_10000d0c, 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i32*
  store i32 %v2_10000d14, i32* %v3_10000d18, align 4
  br label %dec_label_pc_10000d1c

dec_label_pc_10000da0:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000d3c
  %v1_10000db4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000b0c)
  store i32 %v0_10000b38, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b40, i32* %r29.global-to-local, align 4
  %v0_10000de8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000de8

dec_label_pc_10000dec:                            ; preds = %dec_label_pc_10000b04
  %v0_10000dec = call i32 @function_10005b38()
  store i32 %v0_10000dec, i32* %r3.global-to-local, align 4
  %v1_10000df0 = urem i32 %v0_10000dec, 65536
  store i32 %v1_10000df0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000c04

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e00:                            ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge, %dec_label_pc_10000df8
  %v0_10000e08 = phi i32 [ %v0_10000e2c, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v0_10000e00 = phi i32 [ %v0_10000e00.pre, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v1_10000e00 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000e00 = add i32 %v1_10000e00, %v0_10000e00
  %v3_10000e00 = inttoptr i32 %v2_10000e00 to i32*
  %v4_10000e00 = load i32, i32* %v3_10000e00, align 4
  store i32 %v4_10000e00, i32* @r29, align 4
  %v0_10000e04 = load i32, i32* @r31, align 4
  store i32 %v0_10000e04, i32* @r4, align 4
  %v1_10000e08 = add i32 %v0_10000e08, 1
  store i32 %v1_10000e08, i32* %r25.global-to-local, align 4
  store i32 %v4_10000e00, i32* @r3, align 4
  %v0_10000e10 = call i32 @function_10005d0c()
  store i32 %v0_10000e10, i32* %r3.global-to-local, align 4
  %v0_10000e14 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, %v0_10000e14
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  %v4_10000e14 = load i32, i32* %v3_10000e14, align 4
  store i32 %v4_10000e14, i32* %r3.global-to-local, align 4
  %v0_10000e18 = load i32, i32* @r29, align 4
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e24 = add i32 %v0_10000e14, 4
  store i32 %v1_10000e24, i32* %r28.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v4_10000e28 = call i32 @function_10009290(i32 %v4_10000e14, i32 %v0_10000e18, i32 %v0_10000e1c, i32 16384)
  store i32 %v4_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000e2c = load i32, i32* @r30, align 4
  %v4_10000e2c = icmp eq i32 %v0_10000e2c, %v1_10000e2c
  br i1 %v4_10000e2c, label %dec_label_pc_10000e34, label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge

dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge: ; preds = %dec_label_pc_10000e00
  %v0_10000e00.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e34:                            ; preds = %dec_label_pc_10000e00
  %v0_10000e34 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000e34 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000e34 = or i1 %v0_10000e34, %v1_10000e34
  br i1 %v2_10000e34, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

; uselistorder directives
  uselistorder i1 %v1_10000e34, { 1, 0 }
  uselistorder i1 %v0_10000e34, { 1, 0 }
  uselistorder i32 %v0_10000e2c, { 1, 0 }
  uselistorder i32 %v0_10000e14, { 1, 0 }
  uselistorder i32 %v0_10000d1c, { 1, 0 }
  uselistorder i1 %v1_10000cfc, { 1, 0 }
  uselistorder i1 %v0_10000cfc, { 1, 0 }
  uselistorder i32 %v0_10000cf4, { 1, 0 }
  uselistorder i32 %v0_10000cec, { 2, 0, 1 }
  uselistorder i32 %v0_10000cb8, { 1, 0 }
  uselistorder i32 %v0_10000ca4, { 1, 0 }
  uselistorder i32 %v2_10000d6c, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 21, 7, 8, 10, 11, 12, 13, 14, 15, 9, 2, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10000da0, { 1, 0 }
  uselistorder label %dec_label_pc_10000d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c30, { 1, 0 }
  uselistorder label %dec_label_pc_10000c04, { 1, 0 }
}

define i32 @function_10000e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000e3c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000e44 = call i32 @__asm_mfcr()
  store i32 %v0_10000e44, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000e70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000e78 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268439196, i32* @lr, align 4
  %v2_10000e98 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_10000e98, i32* %r27.global-to-local, align 4
  %v0_10000ea4 = load i32, i32* @r30, align 4
  store i32 %v0_10000ea4, i32* %r3.global-to-local, align 4
  store i32 268439212, i32* @lr, align 4
  %v2_10000ea8 = call i32 @function_100096a0(i32 %v0_10000ea4, i32 4)
  %v0_10000eb0 = load i32, i32* @r28, align 4
  store i32 %v2_10000ea8, i32* %r26.global-to-local, align 4
  %v0_10000ec0 = load i32, i32* @r29, align 4
  store i32 %v0_10000ec0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v4_10000ec4 = inttoptr i32 %v0_10000eb0 to i32*
  %v5_10000ec4 = call i32 @function_100006a8(i32 %v0_10000ec0, i32* %v4_10000ec4, i32 7, i32 65535)
  %v0_10000ed0 = load i32, i32* @r28, align 4
  %v1_10000ed8 = urem i32 %v5_10000ec4, 65536
  store i32 %v1_10000ed8, i32* %r21.global-to-local, align 4
  %v0_10000edc = load i32, i32* @r29, align 4
  store i32 %v0_10000edc, i32* %r3.global-to-local, align 4
  store i32 268439268, i32* @lr, align 4
  %v4_10000ee0 = inttoptr i32 %v0_10000ed0 to i32*
  %v5_10000ee0 = call i32 @function_100006a8(i32 %v0_10000edc, i32* %v4_10000ee0, i32 6, i32 65535)
  %v0_10000ee4 = load i32, i32* @r28, align 4
  %v1_10000ee8 = urem i32 %v5_10000ee0, 65536
  store i32 %v1_10000ee8, i32* %r22.global-to-local, align 4
  %v0_10000ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ef4, i32* %r3.global-to-local, align 4
  store i32 268439292, i32* @lr, align 4
  %v4_10000ef8 = inttoptr i32 %v0_10000ee4 to i32*
  %v5_10000ef8 = call i32 @function_100006a8(i32 %v0_10000ef4, i32* %v4_10000ef8, i32 0, i32 1024)
  %v0_10000efc = load i32, i32* @r28, align 4
  %v1_10000f00 = urem i32 %v5_10000ef8, 65536
  store i32 %v1_10000f00, i32* @r31, align 4
  %v0_10000f08 = load i32, i32* @r29, align 4
  store i32 %v0_10000f08, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000f14.15 to i32), i32* @lr, align 4
  %v4_10000f10 = inttoptr i32 %v0_10000efc to i32*
  %v5_10000f10 = call i32 @function_100006a8(i32 %v0_10000f08, i32* %v4_10000f10, i32 1, i32 1)
  store i32 %v5_10000f10, i32* %r3.global-to-local, align 4
  %v0_10000f20 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000f20 = icmp eq i32 %v0_10000f20, 65535
  %v1_10000f28 = urem i32 %v5_10000f10, 256
  store i32 %v1_10000f28, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000f20, label %dec_label_pc_10001124, label %dec_label_pc_10000f3c

dec_label_pc_10000f3c:                            ; preds = %dec_label_pc_10000e3c, %dec_label_pc_10001124
  %v0_10000f3c = load i32, i32* @r30, align 4
  %v1_10000f3c = icmp slt i32 %v0_10000f3c, 0
  %v3_10000f3c = icmp eq i32 %v0_10000f3c, 0
  store i1 %v1_10000f3c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000f3c, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000f3c, 1
  br i1 %tmp38, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f44

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000f3c
  %v0_10000f48 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000f48, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000f54 = load i32, i32* %r21.global-to-local, align 4
  %v4_10000f54 = icmp eq i32 %v0_10000f54, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100010a4 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000f54, label %dec_label_pc_10001074, label %dec_label_pc_10000f68

dec_label_pc_10000f68:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10000fdc
  %v0_10000f74 = phi i32 [ %v0_10000ff0, %dec_label_pc_10000fdc ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 1
  store i32 %v1_10000f74, i32* %r24.global-to-local, align 4
  store i32 268439420, i32* @lr, align 4
  %v2_10000f78 = call i32 @function_100096a0(i32 65535, i32 1)
  %v0_10000f7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10000f7c = trunc i32 %v0_10000f7c to i16
  %v2_10000f7c = load i32, i32* @r28, align 4
  %v3_10000f7c = add i32 %v2_10000f7c, 2
  %v4_10000f7c = inttoptr i32 %v3_10000f7c to i16*
  store i16 %v1_10000f7c, i16* %v4_10000f7c, align 2
  %v1_10000f80 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000f80 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000f80 = add i32 %v2_10000f80, %v1_10000f80
  %v4_10000f80 = inttoptr i32 %v3_10000f80 to i32*
  store i32 %v2_10000f78, i32* %v4_10000f80, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439444, i32* @lr, align 4
  %v3_10000f90 = call i32 @function_10009344(i32 2, i32 2, i32 0)
  store i32 %v3_10000f90, i32* %r3.global-to-local, align 4
  %v3_10000f98 = icmp eq i32 %v3_10000f90, -1
  %v1_10000fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fa0 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000fa0 = add i32 %v2_10000fa0, %v1_10000fa0
  %v4_10000fa0 = inttoptr i32 %v3_10000fa0 to i32*
  store i32 %v3_10000f90, i32* %v4_10000fa0, align 4
  br i1 %v3_10000f98, label %dec_label_pc_100010d8, label %dec_label_pc_10000fa8

dec_label_pc_10000fa8:                            ; preds = %dec_label_pc_10000f68
  %v0_10000fa8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fa8, i32* %stack_var_-72, align 4
  store i32 268439480, i32* @lr, align 4
  %v0_10000fb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10000fb4 = call i32 @function_10009110(i32 %v0_10000fb4, i32 %v2_100010a4, i32 16)
  store i32 %v3_10000fb4, i32* %r3.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* @r28, align 4
  %v1_10000fb8 = add i32 %v0_10000fb8, 20
  %v2_10000fb8 = inttoptr i32 %v1_10000fb8 to i8*
  %v3_10000fb8 = load i8, i8* %v2_10000fb8, align 1
  %v2_10000fbc = icmp ugt i8 %v3_10000fb8, 31
  br i1 %v2_10000fbc, label %dec_label_pc_10000fdc, label %dec_label_pc_10000fc4

dec_label_pc_10000fc4:                            ; preds = %dec_label_pc_10000fa8
  %v1_10000fc4 = add i32 %v0_10000fb8, 16
  %v2_10000fc4 = inttoptr i32 %v1_10000fc4 to i32*
  %v3_10000fc4 = load i32, i32* %v2_10000fc4, align 4
  store i32 %v3_10000fc4, i32* %r29.global-to-local, align 4
  %v0_10000fc8 = call i32 @function_10005b38()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  %v0_10000fcc = load i32, i32* @r28, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 20
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i8*
  %v3_10000fcc = load i8, i8* %v2_10000fcc, align 1
  %tmp = urem i8 %v3_10000fcc, 64
  %v2_10000fd0 = zext i8 %tmp to i32
  %v3_10000fd0 = lshr i32 %v0_10000fc8, %v2_10000fd0
  %v0_10000fd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000fd4 = add i32 %v3_10000fd0, %v0_10000fd4
  store i32 %v2_10000fd4, i32* %r3.global-to-local, align 4
  %v2_10000fd8 = add i32 %v0_10000fcc, 4
  %v3_10000fd8 = inttoptr i32 %v2_10000fd8 to i32*
  store i32 %v2_10000fd4, i32* %v3_10000fd8, align 4
  br label %dec_label_pc_10000fdc

dec_label_pc_10000fdc:                            ; preds = %dec_label_pc_10000fa8, %dec_label_pc_10000fc4
  %v0_10000fdc = load i32, i32* %r25.global-to-local, align 4
  %v1_10000fdc = load i32, i32* %r26.global-to-local, align 4
  %v2_10000fdc = add i32 %v1_10000fdc, %v0_10000fdc
  %v3_10000fdc = inttoptr i32 %v2_10000fdc to i32*
  %v4_10000fdc = load i32, i32* %v3_10000fdc, align 4
  store i32 %v4_10000fdc, i32* @r3, align 4
  %v1_10000fe8 = add i32 %v0_10000fdc, 4
  store i32 %v1_10000fe8, i32* %r25.global-to-local, align 4
  store i32 268439536, i32* @lr, align 4
  %v0_10000fec = call i32 @function_10009144()
  store i32 %v0_10000fec, i32* %r3.global-to-local, align 4
  %v0_10000ff0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ff0 = load i32, i32* @r30, align 4
  %v4_10000ff0 = icmp eq i32 %v0_10000ff0, %v1_10000ff0
  %v0_10000ff4 = load i32, i32* @r28, align 4
  %v1_10000ff4 = add i32 %v0_10000ff4, 24
  store i32 %v1_10000ff4, i32* @r28, align 4
  br i1 %v4_10000ff0, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f68

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fdc, %dec_label_pc_10001054, %dec_label_pc_10000f3c
  %v0_10000ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10000ffc = icmp eq i32 %v0_10000ffc, 0
  store i1 %v3_10000ffc, i1* %cr3_eq.global-to-local, align 1
  %v0_10001000.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001000.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001000.outer

dec_label_pc_10001000.outer:                      ; preds = %dec_label_pc_10001034, %dec_label_pc_1000116c, %dec_label_pc_10000ffc
  %v1_10001000.ph39 = phi i1 [ %v1_10001000.pre, %dec_label_pc_10000ffc ], [ %v1_1000116c, %dec_label_pc_1000116c ], [ %v1_10001034, %dec_label_pc_10001034 ]
  %v0_10001000.ph40 = phi i1 [ %v0_10001000.pre, %dec_label_pc_10000ffc ], [ %v0_1000116c, %dec_label_pc_1000116c ], [ %v0_10001034, %dec_label_pc_10001034 ]
  %v2_10001000 = or i1 %v1_10001000.ph39, %v0_10001000.ph40
  br label %dec_label_pc_10001000

dec_label_pc_10001000:                            ; preds = %dec_label_pc_10001000.outer, %dec_label_pc_10001000
  br i1 %v2_10001000, label %dec_label_pc_10001000, label %dec_label_pc_10001004

dec_label_pc_10001004:                            ; preds = %dec_label_pc_1000116c, %dec_label_pc_10001034, %dec_label_pc_10001000
  %v0_10001004 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001004, label %dec_label_pc_10001008, label %dec_label_pc_10001130

dec_label_pc_10001008:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge, %dec_label_pc_10001008
  %v0_10001014 = phi i32 [ %v0_1000102c, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v0_10001024 = phi i32 [ %v0_10001010.pre, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v1_10001010 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001010 = add i32 %v1_10001010, %v0_10001024
  %v3_10001010 = inttoptr i32 %v2_10001010 to i32*
  %v4_10001010 = load i32, i32* %v3_10001010, align 4
  store i32 %v4_10001010, i32* %r3.global-to-local, align 4
  %v1_10001014 = add i32 %v0_10001014, 1
  store i32 %v1_10001014, i32* %r28.global-to-local, align 4
  %v1_10001018 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001018 = add i32 %v1_10001018, %v0_10001024
  %v3_10001018 = inttoptr i32 %v2_10001018 to i32*
  %v4_10001018 = load i32, i32* %v3_10001018, align 4
  %v0_1000101c = load i32, i32* @r31, align 4
  %v1_10001024 = add i32 %v0_10001024, 4
  store i32 %v1_10001024, i32* %r29.global-to-local, align 4
  store i32 268439596, i32* @lr, align 4
  %v4_10001028 = call i32 @function_10009290(i32 %v4_10001010, i32 %v4_10001018, i32 %v0_1000101c, i32 16384)
  store i32 %v4_10001028, i32* %r3.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000102c = load i32, i32* @r30, align 4
  %v4_1000102c = icmp eq i32 %v0_1000102c, %v1_1000102c
  br i1 %v4_1000102c, label %dec_label_pc_10001034, label %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge

dec_label_pc_10001010.dec_label_pc_10001010_crit_edge: ; preds = %dec_label_pc_10001010
  %v0_10001010.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001034:                            ; preds = %dec_label_pc_10001010
  %v0_10001034 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001034 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001034 = or i1 %v0_10001034, %v1_10001034
  br i1 %v2_10001034, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

dec_label_pc_10001054:                            ; preds = %dec_label_pc_100010b8, %dec_label_pc_100010d4
  %v0_10001054 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001054 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001054 = add i32 %v1_10001054, %v0_10001054
  %v3_10001054 = inttoptr i32 %v2_10001054 to i32*
  %v4_10001054 = load i32, i32* %v3_10001054, align 4
  store i32 %v4_10001054, i32* @r3, align 4
  %v1_10001060 = add i32 %v0_10001054, 4
  store i32 %v1_10001060, i32* %r25.global-to-local, align 4
  store i32 268439656, i32* @lr, align 4
  %v0_10001064 = call i32 @function_10009144()
  store i32 %v0_10001064, i32* %r3.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001068 = load i32, i32* @r30, align 4
  %v4_10001068 = icmp eq i32 %v0_10001068, %v1_10001068
  %v0_1000106c = load i32, i32* @r28, align 4
  %v1_1000106c = add i32 %v0_1000106c, 24
  store i32 %v1_1000106c, i32* @r28, align 4
  br i1 %v4_10001068, label %dec_label_pc_10000ffc, label %dec_label_pc_10001074

dec_label_pc_10001074:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10001054
  %v0_10001080 = phi i32 [ %v0_10001068, %dec_label_pc_10001054 ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001080 = add i32 %v0_10001080, 1
  store i32 %v1_10001080, i32* %r24.global-to-local, align 4
  store i32 268439688, i32* @lr, align 4
  %v2_10001084 = call i32 @function_100096a0(i32 65535, i32 1)
  store i32 %v2_10001084, i32* %r3.global-to-local, align 4
  %v1_10001088 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001088 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001088 = add i32 %v2_10001088, %v1_10001088
  %v4_10001088 = inttoptr i32 %v3_10001088 to i32*
  store i32 %v2_10001084, i32* %v4_10001088, align 4
  %v0_1000108c = call i32 @function_10005b38()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  %v3_10001090 = load i32, i32* @r28, align 4
  %v4_10001090 = add i32 %v3_10001090, 2
  %v5_10001090 = inttoptr i32 %v4_10001090 to i16*
  store i16 %v1_1000108c, i16* %v5_10001090, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439716, i32* @lr, align 4
  %v3_100010a0 = call i32 @function_10009344(i32 2, i32 2, i32 0)
  store i32 %v3_100010a0, i32* %r3.global-to-local, align 4
  %v3_100010a8 = icmp eq i32 %v3_100010a0, -1
  %v1_100010b0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100010b0 = load i32, i32* %r26.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010b0, %v1_100010b0
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i32*
  store i32 %v3_100010a0, i32* %v4_100010b0, align 4
  br i1 %v3_100010a8, label %dec_label_pc_100010d8, label %dec_label_pc_100010b8

dec_label_pc_100010b8:                            ; preds = %dec_label_pc_10001074
  %v0_100010b8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100010b8, i32* %stack_var_-72, align 4
  store i32 268439752, i32* @lr, align 4
  %v0_100010c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100010c4 = call i32 @function_10009110(i32 %v0_100010c4, i32 %v2_100010a4, i32 16)
  store i32 %v3_100010c4, i32* %r3.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  %v1_100010c8 = add i32 %v0_100010c8, 20
  %v2_100010c8 = inttoptr i32 %v1_100010c8 to i8*
  %v3_100010c8 = load i8, i8* %v2_100010c8, align 1
  %v2_100010cc = icmp ugt i8 %v3_100010c8, 31
  br i1 %v2_100010cc, label %dec_label_pc_10001054, label %dec_label_pc_100010d4

dec_label_pc_100010d4:                            ; preds = %dec_label_pc_100010b8
  %v1_1000103c = add i32 %v0_100010c8, 16
  %v2_1000103c = inttoptr i32 %v1_1000103c to i32*
  %v3_1000103c = load i32, i32* %v2_1000103c, align 4
  store i32 %v3_1000103c, i32* %r29.global-to-local, align 4
  %v0_10001040 = call i32 @function_10005b38()
  store i32 %v0_10001040, i32* %r3.global-to-local, align 4
  %v0_10001044 = load i32, i32* @r28, align 4
  %v1_10001044 = add i32 %v0_10001044, 20
  %v2_10001044 = inttoptr i32 %v1_10001044 to i8*
  %v3_10001044 = load i8, i8* %v2_10001044, align 1
  %tmp43 = urem i8 %v3_10001044, 64
  %v2_10001048 = zext i8 %tmp43 to i32
  %v3_10001048 = lshr i32 %v0_10001040, %v2_10001048
  %v0_1000104c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000104c = add i32 %v3_10001048, %v0_1000104c
  store i32 %v2_1000104c, i32* %r3.global-to-local, align 4
  %v2_10001050 = add i32 %v0_10001044, 4
  %v3_10001050 = inttoptr i32 %v2_10001050 to i32*
  store i32 %v2_1000104c, i32* %v3_10001050, align 4
  br label %dec_label_pc_10001054

dec_label_pc_100010d8:                            ; preds = %dec_label_pc_10000f68, %dec_label_pc_10001074
  %v1_100010ec = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000e44)
  store i32 %v0_10000e70, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r29.global-to-local, align 4
  %v0_10001120 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001120

dec_label_pc_10001124:                            ; preds = %dec_label_pc_10000e3c
  %v0_10001124 = call i32 @function_10005b38()
  store i32 %v0_10001124, i32* %r3.global-to-local, align 4
  %v1_10001128 = urem i32 %v0_10001124, 65536
  store i32 %v1_10001128, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000f3c

dec_label_pc_10001130:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_10001138:                            ; preds = %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge, %dec_label_pc_10001130
  %v0_10001140 = phi i32 [ %v0_10001164, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v0_10001138 = phi i32 [ %v0_10001138.pre, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v1_10001138 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001138 = add i32 %v1_10001138, %v0_10001138
  %v3_10001138 = inttoptr i32 %v2_10001138 to i32*
  %v4_10001138 = load i32, i32* %v3_10001138, align 4
  store i32 %v4_10001138, i32* @r29, align 4
  %v0_1000113c = load i32, i32* @r31, align 4
  store i32 %v0_1000113c, i32* @r4, align 4
  %v1_10001140 = add i32 %v0_10001140, 1
  store i32 %v1_10001140, i32* %r25.global-to-local, align 4
  store i32 %v4_10001138, i32* @r3, align 4
  %v0_10001148 = call i32 @function_10005d0c()
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  %v0_1000114c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000114c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000114c = add i32 %v1_1000114c, %v0_1000114c
  %v3_1000114c = inttoptr i32 %v2_1000114c to i32*
  %v4_1000114c = load i32, i32* %v3_1000114c, align 4
  store i32 %v4_1000114c, i32* %r3.global-to-local, align 4
  %v0_10001150 = load i32, i32* @r29, align 4
  %v0_10001154 = load i32, i32* @r31, align 4
  %v1_1000115c = add i32 %v0_1000114c, 4
  store i32 %v1_1000115c, i32* %r28.global-to-local, align 4
  store i32 268439908, i32* @lr, align 4
  %v4_10001160 = call i32 @function_10009290(i32 %v4_1000114c, i32 %v0_10001150, i32 %v0_10001154, i32 16384)
  store i32 %v4_10001160, i32* %r3.global-to-local, align 4
  %v0_10001164 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001164 = load i32, i32* @r30, align 4
  %v4_10001164 = icmp eq i32 %v0_10001164, %v1_10001164
  br i1 %v4_10001164, label %dec_label_pc_1000116c, label %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge

dec_label_pc_10001138.dec_label_pc_10001138_crit_edge: ; preds = %dec_label_pc_10001138
  %v0_10001138.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_1000116c:                            ; preds = %dec_label_pc_10001138
  %v0_1000116c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000116c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000116c = or i1 %v0_1000116c, %v1_1000116c
  br i1 %v2_1000116c, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

; uselistorder directives
  uselistorder i1 %v1_1000116c, { 1, 0 }
  uselistorder i1 %v0_1000116c, { 1, 0 }
  uselistorder i32 %v0_10001164, { 1, 0 }
  uselistorder i32 %v0_1000114c, { 1, 0 }
  uselistorder i32 %v0_10001054, { 1, 0 }
  uselistorder i1 %v1_10001034, { 1, 0 }
  uselistorder i1 %v0_10001034, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 1, 0 }
  uselistorder i32 %v0_10001024, { 2, 0, 1 }
  uselistorder i32 %v0_10000ff0, { 1, 0 }
  uselistorder i32 %v0_10000fdc, { 1, 0 }
  uselistorder i32 %v2_100010a4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 21, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100010d8, { 1, 0 }
  uselistorder label %dec_label_pc_10001074, { 1, 0 }
  uselistorder label %dec_label_pc_10001054, { 1, 0 }
  uselistorder label %dec_label_pc_10001000, { 1, 0 }
  uselistorder label %dec_label_pc_10001000.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ffc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000f68, { 1, 0 }
  uselistorder label %dec_label_pc_10000f3c, { 1, 0 }
}

define i32 @function_10001174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001174:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001178 = load i32, i32* @lr, align 4
  store i32 %v0_10001178, i32* %r0.global-to-local, align 4
  %v0_1000117c = call i32 @__asm_mfcr()
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_1000118c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000117c, i32* %r19.global-to-local, align 4
  %v0_100011c0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100011c8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100011d0 = load i32, i32* @r30, align 4
  %v0_100011d4 = load i32, i32* @r31, align 4
  store i32 268440040, i32* @lr, align 4
  %v2_100011e4 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_100011e4, i32* %r20.global-to-local, align 4
  %v0_100011ec = load i32, i32* @r28, align 4
  %v0_100011f8 = load i32, i32* @r29, align 4
  store i32 %v0_100011f8, i32* %r3.global-to-local, align 4
  store i32 268440064, i32* @lr, align 4
  %v4_100011fc = inttoptr i32 %v0_100011ec to i32*
  %v5_100011fc = call i32 @function_100006a8(i32 %v0_100011f8, i32* %v4_100011fc, i32 2, i32 0)
  %v0_1000120c = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_100011fc, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_1000120c to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 3, i32 65535)
  %v0_1000121c = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r23.global-to-local, align 4
  %v0_1000122c = load i32, i32* @r29, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = inttoptr i32 %v0_1000121c to i32*
  %v5_10001230 = call i32 @function_100006a8(i32 %v0_1000122c, i32* %v4_10001230, i32 4, i32 64)
  %v0_10001234 = load i32, i32* @r28, align 4
  %v1_10001240 = urem i32 %v5_10001230, 256
  store i32 %v1_10001240, i32* %r16.global-to-local, align 4
  %v0_10001244 = load i32, i32* @r29, align 4
  store i32 %v0_10001244, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v4_10001248 = inttoptr i32 %v0_10001234 to i32*
  %v5_10001248 = call i32 @function_100006a8(i32 %v0_10001244, i32* %v4_10001248, i32 5, i32 0)
  %v0_10001258 = load i32, i32* @r28, align 4
  %v1_1000125c = urem i32 %v5_10001248, 256
  store i32 %v1_1000125c, i32* @r31, align 4
  %v0_10001260 = load i32, i32* @r29, align 4
  store i32 %v0_10001260, i32* %r3.global-to-local, align 4
  store i32 268440168, i32* @lr, align 4
  %v4_10001264 = inttoptr i32 %v0_10001258 to i32*
  %v5_10001264 = call i32 @function_100006a8(i32 %v0_10001260, i32* %v4_10001264, i32 6, i32 65535)
  %v0_1000126c = load i32, i32* @r28, align 4
  store i32 %v5_10001264, i32* %r24.global-to-local, align 4
  %v0_1000127c = load i32, i32* @r29, align 4
  store i32 %v0_1000127c, i32* %r3.global-to-local, align 4
  store i32 268440196, i32* @lr, align 4
  %v4_10001280 = inttoptr i32 %v0_1000126c to i32*
  %v5_10001280 = call i32 @function_100006a8(i32 %v0_1000127c, i32* %v4_10001280, i32 7, i32 65535)
  %v0_10001284 = load i32, i32* @r28, align 4
  store i32 %v5_10001280, i32* %r25.global-to-local, align 4
  %v0_10001294 = load i32, i32* @r29, align 4
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  store i32 268440220, i32* @lr, align 4
  %v4_10001298 = inttoptr i32 %v0_10001284 to i32*
  %v5_10001298 = call i32 @function_100006a8(i32 %v0_10001294, i32* %v4_10001298, i32 0, i32 512)
  %v0_1000129c = load i32, i32* @r28, align 4
  store i32 %v5_10001298, i32* %r26.global-to-local, align 4
  %v0_100012ac = load i32, i32* @r29, align 4
  store i32 %v0_100012ac, i32* %r3.global-to-local, align 4
  store i32 268440244, i32* @lr, align 4
  %v4_100012b0 = inttoptr i32 %v0_1000129c to i32*
  %v5_100012b0 = call i32 @function_100006a8(i32 %v0_100012ac, i32* %v4_100012b0, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100012b8 = load i32, i32* @global_var_1001b748.16, align 4
  %v0_100012bc = load i32, i32* @r28, align 4
  %v1_100012c4 = urem i32 %v5_100012b0, 256
  store i32 %v1_100012c4, i32* %r17.global-to-local, align 4
  %v0_100012c8 = load i32, i32* @r29, align 4
  store i32 %v0_100012c8, i32* %r3.global-to-local, align 4
  store i32 268440272, i32* @lr, align 4
  %v4_100012cc = inttoptr i32 %v0_100012bc to i32*
  %v5_100012cc = call i32 @function_100006a8(i32 %v0_100012c8, i32* %v4_100012cc, i32 25, i32 %v3_100012b8)
  store i32 %v5_100012cc, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440292, i32* @lr, align 4
  %v3_100012e0 = call i32 @function_10009344(i32 2, i32 3, i32 17)
  store i32 %v3_100012e0, i32* %r3.global-to-local, align 4
  %v3_100012e4 = icmp eq i32 %v3_100012e0, -1
  store i32 %v3_100012e0, i32* %r21.global-to-local, align 4
  br i1 %v3_100012e4, label %dec_label_pc_10001540, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_10001174
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100012fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440332, i32* @lr, align 4
  %v4_10001308 = call i32 @function_10009308(i32 0, i32 3, i32 %v2_100012fc, i32 4)
  store i32 %v4_10001308, i32* %r3.global-to-local, align 4
  %v3_1000130c = icmp eq i32 %v4_10001308, -1
  br i1 %v3_1000130c, label %dec_label_pc_10001538, label %dec_label_pc_10001314

dec_label_pc_10001314:                            ; preds = %dec_label_pc_100012f0
  %v0_10001314 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001314 = urem i32 %v0_10001314, 65536
  store i32 %v1_10001314, i32* %r18.global-to-local, align 4
  %v0_10001318 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001318 = urem i32 %v0_10001318, 65536
  store i32 %v1_10001318, i32* %r22.global-to-local, align 4
  %v0_10001320 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001320 = urem i32 %v0_10001320, 65536
  store i32 %v1_10001320, i32* %r23.global-to-local, align 4
  %v0_10001324 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001324 = urem i32 %v0_10001324, 65536
  store i32 %v1_10001324, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10001314, 1461
  br i1 %tmp30, label %dec_label_pc_10001330, label %dec_label_pc_1000132c

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_10001314
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10001330

dec_label_pc_10001330:                            ; preds = %dec_label_pc_10001314, %dec_label_pc_1000132c
  %v0_10001640 = phi i32 [ %v1_10001314, %dec_label_pc_10001314 ], [ 1460, %dec_label_pc_1000132c ]
  %v0_10001330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001330 = icmp slt i32 %v0_10001330, 0
  %v3_10001330 = icmp eq i32 %v0_10001330, 0
  store i1 %v1_10001330, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001330, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_10001330, 1
  br i1 %tmp31, label %dec_label_pc_10001638, label %dec_label_pc_10001340

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  %v0_10001340 = load i32, i32* @r31, align 4
  %v3_10001340 = icmp eq i32 %v0_10001340, 0
  %v1_10001344 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001344, i32* %r25.global-to-local, align 4
  %v1_10001348 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001348, i32* %r26.global-to-local, align 4
  %v1_1000134c = urem i32 %v1_10001344, 65536
  store i32 %v1_1000134c, i32* @r28, align 4
  %v1_10001350 = urem i32 %v1_10001348, 65536
  store i32 %v1_10001350, i32* @r29, align 4
  br i1 %v3_10001340, label %dec_label_pc_10001358, label %dec_label_pc_100015a0

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_1000135c

dec_label_pc_1000135c:                            ; preds = %dec_label_pc_1000135c, %dec_label_pc_10001358
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440424, i32* @lr, align 4
  %v2_10001364 = call i32 @function_100096a0(i32 1510, i32 1)
  store i32 %v2_10001364, i32* %r3.global-to-local, align 4
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001368, i32* %r9.global-to-local, align 4
  %v0_1000136c = load i32, i32* @r31, align 4
  %v1_1000136c = mul i32 %v0_1000136c, 4
  store i32 %v1_1000136c, i32* %r0.global-to-local, align 4
  %v1_10001370 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001370 = add i32 %v1_10001370, %v1_1000136c
  %v4_10001370 = inttoptr i32 %v3_10001370 to i32*
  store i32 %v2_10001364, i32* %v4_10001370, align 4
  %v0_10001374 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001374 = mul i32 %v0_10001374, 4
  store i32 %v1_10001374, i32* %r9.global-to-local, align 4
  %v1_10001378 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001378 = add i32 %v1_10001378, %v1_10001374
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  %v4_10001378 = load i32, i32* %v3_10001378, align 4
  store i32 %v4_10001378, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001380 = inttoptr i32 %v4_10001378 to i32*
  %v2_10001380 = load i32, i32* %v1_10001380, align 4
  store i32 %v2_10001380, i32* %r0.global-to-local, align 4
  %v1_10001384 = add i32 %v4_10001378, 20
  store i32 %v1_10001384, i32* %r10.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001388 = trunc i32 %v0_10001388 to i8
  %v3_10001388 = add i32 %v4_10001378, 8
  %v4_10001388 = inttoptr i32 %v3_10001388 to i8*
  store i8 %v1_10001388, i8* %v4_10001388, align 1
  %v1_1000138c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000138c, i32* %r0.global-to-local, align 4
  %v0_10001390 = load i32, i32* @r30, align 4
  %v1_10001390 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, 12
  %v3_10001390 = inttoptr i32 %v2_10001390 to i32*
  store i32 %v0_10001390, i32* %v3_10001390, align 4
  %v1_10001394 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001398 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001398 = trunc i32 %v0_10001398 to i16
  %v2_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001398 = add i32 %v2_10001398, 4
  %v4_10001398 = inttoptr i32 %v3_10001398 to i16*
  store i16 %v1_10001398, i16* %v4_10001398, align 2
  %v1_1000139c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  store i32 %v1_10001394, i32* %v2_1000139c, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 9
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i8*
  store i8 17, i8* %v4_100013a4, align 1
  %v0_100013a8 = load i32, i32* %r15.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 1
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i32, i32* @r28, align 4
  %v1_100013ac = trunc i32 %v0_100013ac to i16
  %v2_100013ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100013ac = add i32 %v2_100013ac, 2
  %v4_100013ac = inttoptr i32 %v3_100013ac to i16*
  store i16 %v1_100013ac, i16* %v4_100013ac, align 2
  %v3_100013b0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100013b0, i32* %r9.global-to-local, align 4
  %v0_100013b4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100013b4 = trunc i32 %v0_100013b4 to i16
  %v2_100013b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 20
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 %v1_100013b4, i16* %v4_100013b4, align 2
  %v0_100013b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013b8 = add i32 %v0_100013b8, 1
  store i32 %v1_100013b8, i32* %r31.global-to-local, align 4
  %v1_100013bc = mul i32 %v0_100013b8, 24
  store i32 %v1_100013bc, i32* %r9.global-to-local, align 4
  %v1_100013c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100013c0 = icmp slt i32 %v1_100013b8, %v1_100013c0
  %v0_100013c4 = load i32, i32* @r29, align 4
  %v1_100013c4 = trunc i32 %v0_100013c4 to i16
  %v2_100013c4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100013c4 = add i32 %v2_100013c4, 4
  %v4_100013c4 = inttoptr i32 %v3_100013c4 to i16*
  store i16 %v1_100013c4, i16* %v4_100013c4, align 2
  %v0_100013c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, %v0_100013c8
  store i32 %v2_100013c8, i32* %r9.global-to-local, align 4
  %v0_100013cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100013cc = trunc i32 %v0_100013cc to i16
  %v2_100013cc = load i32, i32* %r10.global-to-local, align 4
  %v3_100013cc = add i32 %v2_100013cc, 2
  %v4_100013cc = inttoptr i32 %v3_100013cc to i16*
  store i16 %v1_100013cc, i16* %v4_100013cc, align 2
  %v0_100013d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013d0 = add i32 %v0_100013d0, 16
  %v2_100013d0 = inttoptr i32 %v1_100013d0 to i32*
  %v3_100013d0 = load i32, i32* %v2_100013d0, align 4
  store i32 %v3_100013d0, i32* %r0.global-to-local, align 4
  %v1_100013d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v3_100013d0, i32* %v3_100013d4, align 4
  %v0_100013d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100013d8, i32* %stack_var_-104, align 4
  br i1 %v2_100013c0, label %dec_label_pc_1000135c, label %dec_label_pc_100013e0

dec_label_pc_100013e0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_1000135c
  %v0_100013e0 = load i32, i32* @r30, align 4
  %v3_100013e0 = icmp eq i32 %v0_100013e0, -1
  store i1 %v3_100013e0, i1* %cr2_eq.global-to-local, align 1
  %v0_100013e4 = load i32, i32* %r17.global-to-local, align 4
  %v3_100013e4 = icmp eq i32 %v0_100013e4, 0
  store i1 %v3_100013e4, i1* %cr3_eq.global-to-local, align 1
  %v0_100013e8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100013e8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100013e8.preheader

dec_label_pc_100013e8.preheader:                  ; preds = %dec_label_pc_100014b4, %dec_label_pc_10001638, %dec_label_pc_100013e0
  %v1_100013e8 = phi i1 [ %v1_10001330, %dec_label_pc_10001638 ], [ %v1_100013e8.pre, %dec_label_pc_100013e0 ], [ %v1_100014b4, %dec_label_pc_100014b4 ]
  %v0_100013e8 = phi i1 [ %v3_10001330, %dec_label_pc_10001638 ], [ %v0_100013e8.pre, %dec_label_pc_100013e0 ], [ %v0_100014b4, %dec_label_pc_100014b4 ]
  %v2_100013e8 = or i1 %v1_100013e8, %v0_100013e8
  br label %dec_label_pc_100013e8

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013e8.preheader, %dec_label_pc_100013e8
  br i1 %v2_100013e8, label %dec_label_pc_100013e8, label %dec_label_pc_100013ec

dec_label_pc_100013ec:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_100014b4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_10001444, %dec_label_pc_100013ec
  %v0_100013fc = phi i32 [ %v1_100014a4, %dec_label_pc_10001444 ], [ 0, %dec_label_pc_100013ec ]
  %v1_100013fc = mul i32 %v0_100013fc, 24
  store i32 %v1_100013fc, i32* %r0.global-to-local, align 4
  %v1_10001400 = mul i32 %v0_100013fc, 4
  store i32 %v1_10001400, i32* %r11.global-to-local, align 4
  %v1_10001404 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001404 = add i32 %v1_10001404, %v1_10001400
  %v3_10001404 = inttoptr i32 %v2_10001404 to i32*
  %v4_10001404 = load i32, i32* %v3_10001404, align 4
  store i32 %v4_10001404, i32* %r28.global-to-local, align 4
  %v1_10001408 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001408 = add i32 %v1_10001408, %v1_100013fc
  store i32 %v2_10001408, i32* %r10.global-to-local, align 4
  %v1_1000140c = add i32 %v2_10001408, 20
  %v2_1000140c = inttoptr i32 %v1_1000140c to i8*
  %v3_1000140c = load i8, i8* %v2_1000140c, align 1
  %v4_1000140c = zext i8 %v3_1000140c to i32
  store i32 %v4_1000140c, i32* %r9.global-to-local, align 4
  %v1_10001410 = add i32 %v4_10001404, 20
  store i32 %v1_10001410, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_1000140c, 32
  br i1 %tmp32, label %dec_label_pc_100014bc, label %dec_label_pc_1000141c

dec_label_pc_1000141c:                            ; preds = %dec_label_pc_100013fc
  %v0_1000141c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000141c, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_10001420:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 65535, i32* @r29, align 4
  %v0_10001428 = load i32, i32* %r22.global-to-local, align 4
  %v4_10001428 = icmp eq i32 %v0_10001428, 65535
  br i1 %v4_10001428, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_10001430:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v1_10001430 = phi i32 [ %v1_100014f4, %dec_label_pc_100014e4 ], [ 65535, %dec_label_pc_10001420 ]
  %v0_10001430 = load i32, i32* %r23.global-to-local, align 4
  %v4_10001430 = icmp eq i32 %v0_10001430, %v1_10001430
  br i1 %v4_10001430, label %dec_label_pc_1000150c, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge, %dec_label_pc_10001430
  %v1_10001438 = phi i32 [ %v1_10001438.pre, %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge ], [ %v1_10001430, %dec_label_pc_10001430 ]
  %v0_10001438 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001438 = icmp eq i32 %v0_10001438, %v1_10001438
  br i1 %v4_10001438, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_10001440 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001440, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001444:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c, %dec_label_pc_10001528
  %v0_10001444 = load i32, i32* @r30, align 4
  %v1_10001444 = trunc i32 %v0_10001444 to i16
  %v2_10001444 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001444 = add i32 %v2_10001444, 10
  %v4_10001444 = inttoptr i32 %v3_10001444 to i16*
  store i16 %v1_10001444, i16* %v4_10001444, align 2
  %v0_1000144c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000144c, i32* @r3, align 4
  %v2_10001450 = call i32 @function_100043cc(i32 %v0_1000144c, i32 20)
  %v3_10001450 = trunc i32 %v2_10001450 to i16
  %v0_10001454 = load i32, i32* @r31, align 4
  store i32 %v0_10001454, i32* @r4, align 4
  %v4_10001458 = add i32 %v0_1000144c, 10
  %v5_10001458 = inttoptr i32 %v4_10001458 to i16*
  store i16 %v3_10001450, i16* %v5_10001458, align 2
  %v0_1000145c = load i32, i32* %r26.global-to-local, align 4
  %v0_10001460 = load i32, i32* @r30, align 4
  %v1_10001460 = trunc i32 %v0_10001460 to i16
  %v2_10001460 = load i32, i32* @r31, align 4
  %v3_10001460 = add i32 %v2_10001460, 6
  %v4_10001460 = inttoptr i32 %v3_10001460 to i16*
  store i16 %v1_10001460, i16* %v4_10001460, align 2
  %v0_10001464 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001464, i32* %r3.global-to-local, align 4
  %v0_10001468 = load i32, i32* @r31, align 4
  %v1_10001468 = add i32 %v0_10001468, 4
  %v2_10001468 = inttoptr i32 %v1_10001468 to i16*
  %v3_10001468 = load i16, i16* %v2_10001468, align 2
  %v4_10001468 = zext i16 %v3_10001468 to i32
  %v4_1000146c = call i32 @function_10004430(i32 %v0_10001464, i32 %v0_10001454, i32 %v4_10001468, i32 %v0_1000145c)
  %v5_1000146c = trunc i32 %v4_1000146c to i16
  store i32 %v4_1000146c, i32* %r3.global-to-local, align 4
  %v3_10001470 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001470, i32* %r7.global-to-local, align 4
  %v0_10001474 = load i32, i32* @r31, align 4
  %v1_10001474 = add i32 %v0_10001474, 2
  %v2_10001474 = inttoptr i32 %v1_10001474 to i16*
  %v3_10001474 = load i16, i16* %v2_10001474, align 2
  %v4_10001474 = zext i16 %v3_10001474 to i32
  store i32 %v4_10001474, i32* %r0.global-to-local, align 4
  %v0_10001478 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000147c = mul i32 %v3_10001470, 24
  store i32 %v1_1000147c, i32* %r7.global-to-local, align 4
  %v4_10001480 = add i32 %v0_10001474, 6
  %v5_10001480 = inttoptr i32 %v4_10001480 to i16*
  store i16 %v5_1000146c, i16* %v5_10001480, align 2
  %v0_10001484 = load i32, i32* %r25.global-to-local, align 4
  %v0_10001488 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001488, i32* %r3.global-to-local, align 4
  %v0_1000148c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000148c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000148c = add i32 %v1_1000148c, %v0_1000148c
  store i32 %v2_1000148c, i32* %r7.global-to-local, align 4
  %v0_10001494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001494 = trunc i32 %v0_10001494 to i16
  %v3_10001494 = add i32 %v2_1000148c, 2
  %v4_10001494 = inttoptr i32 %v3_10001494 to i16*
  store i16 %v1_10001494, i16* %v4_10001494, align 2
  store i32 268440736, i32* @lr, align 4
  %v6_1000149c = call i32 @function_100092c8(i32 %v0_10001488, i32 %v0_10001478, i32 %v0_10001484, i32 16384, i32 %v2_1000148c, i32 16)
  store i32 %v6_1000149c, i32* %r3.global-to-local, align 4
  %v3_100014a0 = load i32, i32* %stack_var_-104, align 4
  %v1_100014a4 = add i32 %v3_100014a0, 1
  store i32 %v1_100014a4, i32* %r9.global-to-local, align 4
  %v1_100014a8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100014a8 = icmp slt i32 %v1_100014a4, %v1_100014a8
  store i32 %v1_100014a4, i32* %stack_var_-104, align 4
  br i1 %v2_100014a8, label %dec_label_pc_100013fc, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001444
  %v0_100014b4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100014b4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100014b4 = or i1 %v0_100014b4, %v1_100014b4
  br i1 %v2_100014b4, label %dec_label_pc_100013e8.preheader, label %dec_label_pc_100013ec

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100013fc
  %v1_100014bc = add i32 %v2_10001408, 16
  %v2_100014bc = inttoptr i32 %v1_100014bc to i32*
  %v3_100014bc = load i32, i32* %v2_100014bc, align 4
  store i32 %v3_100014bc, i32* %r29.global-to-local, align 4
  %v0_100014c0 = call i32 @function_10005b38()
  store i32 %v0_100014c0, i32* %r3.global-to-local, align 4
  %v3_100014c4 = load i32, i32* %stack_var_-104, align 4
  %v1_100014c8 = mul i32 %v3_100014c4, 24
  %v1_100014cc = load i32, i32* %r27.global-to-local, align 4
  %v2_100014cc = add i32 %v1_100014cc, %v1_100014c8
  store i32 %v2_100014cc, i32* %r9.global-to-local, align 4
  %v1_100014d0 = add i32 %v2_100014cc, 20
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i8*
  %v3_100014d0 = load i8, i8* %v2_100014d0, align 1
  %v4_100014d0 = zext i8 %v3_100014d0 to i32
  store i32 %v4_100014d0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100014d0, 64
  %v2_100014d4 = zext i8 %tmp to i32
  %v3_100014d4 = lshr i32 %v0_100014c0, %v2_100014d4
  store i32 %v3_100014d4, i32* %r3.global-to-local, align 4
  %v0_100014d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014d8 = add i32 %v3_100014d4, %v0_100014d8
  store i32 %v2_100014d8, i32* %r29.global-to-local, align 4
  %v1_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v2_100014dc = add i32 %v1_100014dc, 16
  %v3_100014dc = inttoptr i32 %v2_100014dc to i32*
  store i32 %v2_100014d8, i32* %v3_100014dc, align 4
  %v0_100014e0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014e0, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100014e8 = call i32 @function_10005b38()
  store i32 %v0_100014e8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100014f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100014f0 = add i32 %v1_100014f0, 12
  %v3_100014f0 = inttoptr i32 %v2_100014f0 to i32*
  store i32 %v0_100014e8, i32* %v3_100014f0, align 4
  %v0_100014f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100014f4 = load i32, i32* @r29, align 4
  %v4_100014f4 = icmp eq i32 %v0_100014f4, %v1_100014f4
  br i1 %v4_100014f4, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_100014fc:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v0_100014fc = call i32 @function_10005b38()
  %v1_100014fc = trunc i32 %v0_100014fc to i16
  store i32 %v0_100014fc, i32* %r3.global-to-local, align 4
  %v0_10001500 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r29, align 4
  %v4_10001500 = icmp eq i32 %v0_10001500, %v1_10001500
  %v3_10001504 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001504 = add i32 %v3_10001504, 4
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v1_100014fc, i16* %v5_10001504, align 2
  br i1 %v4_10001500, label %dec_label_pc_1000150c, label %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge

dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge: ; preds = %dec_label_pc_100014fc
  %v1_10001438.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001438

dec_label_pc_1000150c:                            ; preds = %dec_label_pc_100014fc, %dec_label_pc_10001430
  %v0_1000150c = call i32 @function_10005b38()
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  store i32 %v0_1000150c, i32* %r3.global-to-local, align 4
  %v0_10001510 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001510 = load i32, i32* @r29, align 4
  %v4_10001510 = icmp eq i32 %v0_10001510, %v1_10001510
  %v3_10001514 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001514 = add i32 %v3_10001514, 20
  %v5_10001514 = inttoptr i32 %v4_10001514 to i16*
  store i16 %v1_1000150c, i16* %v5_10001514, align 2
  br i1 %v4_10001510, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_1000151c:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_1000151c = call i32 @function_10005b38()
  %v1_1000151c = trunc i32 %v0_1000151c to i16
  store i32 %v0_1000151c, i32* %r3.global-to-local, align 4
  %v3_10001520 = load i32, i32* @r31, align 4
  %v4_10001520 = add i32 %v3_10001520, 2
  %v5_10001520 = inttoptr i32 %v4_10001520 to i16*
  store i16 %v1_1000151c, i16* %v5_10001520, align 2
  %v0_10001524 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001524, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001528:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c
  %v0_10001528 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001528 = add i32 %v0_10001528, 28
  store i32 %v1_10001528, i32* @r3, align 4
  %v0_1000152c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000152c, i32* @r4, align 4
  %v0_10001530 = call i32 @function_10005d0c()
  store i32 %v0_10001530, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001444

dec_label_pc_10001538:                            ; preds = %dec_label_pc_100012f0
  %v0_10001538 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001538, i32* %r3.global-to-local, align 4
  store i32 268440896, i32* @lr, align 4
  %v0_1000153c = call i32 @function_10008628()
  store i32 %v0_1000153c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001540

dec_label_pc_10001540:                            ; preds = %dec_label_pc_10001174, %dec_label_pc_10001538
  store i32 %v0_1000118c, i32* %r0.global-to-local, align 4
  %v1_10001554 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000117c)
  store i32 %v0_100011c0, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c8, i32* %r29.global-to-local, align 4
  store i32 %v0_100011d0, i32* %r30.global-to-local, align 4
  store i32 %v0_100011d4, i32* %r31.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000159c

dec_label_pc_100015a0:                            ; preds = %dec_label_pc_10001340
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100015a8

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100015a0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* @lr, align 4
  %v2_100015b0 = call i32 @function_100096a0(i32 1510, i32 1)
  store i32 %v2_100015b0, i32* %r3.global-to-local, align 4
  %v3_100015b4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015b4, i32* %r9.global-to-local, align 4
  %v0_100015b8 = load i32, i32* @r31, align 4
  %v1_100015b8 = mul i32 %v0_100015b8, 4
  store i32 %v1_100015b8, i32* %r0.global-to-local, align 4
  %v1_100015bc = load i32, i32* %r20.global-to-local, align 4
  %v3_100015bc = add i32 %v1_100015bc, %v1_100015b8
  %v4_100015bc = inttoptr i32 %v3_100015bc to i32*
  store i32 %v2_100015b0, i32* %v4_100015bc, align 4
  %v0_100015c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100015c0 = mul i32 %v0_100015c0, 4
  store i32 %v1_100015c0, i32* %r9.global-to-local, align 4
  %v1_100015c4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015c4 = add i32 %v1_100015c4, %v1_100015c0
  %v3_100015c4 = inttoptr i32 %v2_100015c4 to i32*
  %v4_100015c4 = load i32, i32* %v3_100015c4, align 4
  store i32 %v4_100015c4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100015cc = inttoptr i32 %v4_100015c4 to i32*
  %v2_100015cc = load i32, i32* %v1_100015cc, align 4
  store i32 %v2_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = add i32 %v4_100015c4, 20
  store i32 %v1_100015d0, i32* %r10.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100015d4 = trunc i32 %v0_100015d4 to i8
  %v3_100015d4 = add i32 %v4_100015c4, 8
  %v4_100015d4 = inttoptr i32 %v3_100015d4 to i8*
  store i8 %v1_100015d4, i8* %v4_100015d4, align 1
  %v1_100015d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100015d8, i32* %r0.global-to-local, align 4
  %v0_100015dc = load i32, i32* @r30, align 4
  %v1_100015dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100015dc = add i32 %v1_100015dc, 12
  %v3_100015dc = inttoptr i32 %v2_100015dc to i32*
  store i32 %v0_100015dc, i32* %v3_100015dc, align 4
  %v1_100015e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100015e4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100015e4 = trunc i32 %v0_100015e4 to i16
  %v2_100015e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015e4 = add i32 %v2_100015e4, 4
  %v4_100015e4 = inttoptr i32 %v3_100015e4 to i16*
  store i16 %v1_100015e4, i16* %v4_100015e4, align 2
  %v1_100015e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100015e8 = inttoptr i32 %v1_100015e8 to i32*
  store i32 %v1_100015e0, i32* %v2_100015e8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100015f0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f0 = add i32 %v2_100015f0, 9
  %v4_100015f0 = inttoptr i32 %v3_100015f0 to i8*
  store i8 17, i8* %v4_100015f0, align 1
  %v0_100015f4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100015f4 = trunc i32 %v0_100015f4 to i8
  %v2_100015f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f4 = add i32 %v2_100015f4, 1
  %v4_100015f4 = inttoptr i32 %v3_100015f4 to i8*
  store i8 %v1_100015f4, i8* %v4_100015f4, align 1
  %v0_100015f8 = load i32, i32* @r28, align 4
  %v1_100015f8 = trunc i32 %v0_100015f8 to i16
  %v2_100015f8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f8 = add i32 %v2_100015f8, 2
  %v4_100015f8 = inttoptr i32 %v3_100015f8 to i16*
  store i16 %v1_100015f8, i16* %v4_100015f8, align 2
  %v3_100015fc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015fc, i32* %r9.global-to-local, align 4
  %v0_10001600 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001600 = trunc i32 %v0_10001600 to i16
  %v2_10001600 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001600 = add i32 %v2_10001600, 20
  %v4_10001600 = inttoptr i32 %v3_10001600 to i16*
  store i16 %v1_10001600, i16* %v4_10001600, align 2
  %v0_10001604 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001604 = add i32 %v0_10001604, 1
  store i32 %v1_10001604, i32* %r31.global-to-local, align 4
  %v1_10001608 = mul i32 %v0_10001604, 24
  %v1_1000160c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000160c = icmp slt i32 %v1_10001604, %v1_1000160c
  %v1_10001610 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001610 = add i32 %v1_10001610, %v1_10001608
  store i32 %v2_10001610, i32* %r9.global-to-local, align 4
  %v1_10001614 = add i32 %v2_10001610, 16
  %v2_10001614 = inttoptr i32 %v1_10001614 to i32*
  %v3_10001614 = load i32, i32* %v2_10001614, align 4
  store i32 %v3_10001614, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_1000161c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000161c = add i32 %v2_1000161c, 6
  %v4_1000161c = inttoptr i32 %v3_1000161c to i16*
  store i16 16384, i16* %v4_1000161c, align 2
  %v0_10001620 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001620 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001620 = add i32 %v1_10001620, 16
  %v3_10001620 = inttoptr i32 %v2_10001620 to i32*
  store i32 %v0_10001620, i32* %v3_10001620, align 4
  %v0_10001624 = load i32, i32* @r29, align 4
  %v1_10001624 = trunc i32 %v0_10001624 to i16
  %v2_10001624 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001624 = add i32 %v2_10001624, 4
  %v4_10001624 = inttoptr i32 %v3_10001624 to i16*
  store i16 %v1_10001624, i16* %v4_10001624, align 2
  %v0_10001628 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001628 = trunc i32 %v0_10001628 to i16
  %v2_10001628 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001628 = add i32 %v2_10001628, 2
  %v4_10001628 = inttoptr i32 %v3_10001628 to i16*
  store i16 %v1_10001628, i16* %v4_10001628, align 2
  %v0_1000162c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000162c, i32* %stack_var_-104, align 4
  br i1 %v2_1000160c, label %dec_label_pc_100015a8, label %dec_label_pc_100013e0

dec_label_pc_10001638:                            ; preds = %dec_label_pc_10001330
  %v0_10001638 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001638 = icmp eq i32 %v0_10001638, -1
  store i1 %v3_10001638, i1* %cr2_eq.global-to-local, align 1
  %v0_1000163c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000163c = icmp eq i32 %v0_1000163c, 0
  store i1 %v3_1000163c, i1* %cr3_eq.global-to-local, align 1
  %v1_10001640 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001640, i32* %r25.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001644, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100013e8.preheader

; uselistorder directives
  uselistorder i32 %v1_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_1000151c, { 1, 0 }
  uselistorder i32 %v0_1000150c, { 1, 0 }
  uselistorder i32 %v0_100014fc, { 1, 0 }
  uselistorder i32 %v1_100014f4, { 1, 0 }
  uselistorder i1 %v1_100014b4, { 1, 0 }
  uselistorder i1 %v0_100014b4, { 1, 0 }
  uselistorder i32 %v1_100014a4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000146c, { 1, 0 }
  uselistorder i32 %v1_10001400, { 1, 0 }
  uselistorder i32 %v1_10001374, { 1, 0 }
  uselistorder i32 %v1_1000136c, { 1, 0 }
  uselistorder i32 %v0_10001640, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10001314, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 14, 16, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001540, { 1, 0 }
  uselistorder label %dec_label_pc_10001528, { 1, 0 }
  uselistorder label %dec_label_pc_10001444, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100013ec, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001330, { 1, 0 }
}

define i32 @function_10001650(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001650:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001654 = load i32, i32* @lr, align 4
  store i32 %v0_10001654, i32* %r0.global-to-local, align 4
  %v0_10001658 = call i32 @__asm_mfcr()
  store i32 %v0_10001658, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10001668 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001658, i32* %r18.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100016a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100016ac = load i32, i32* @r30, align 4
  %v0_100016b0 = load i32, i32* @r31, align 4
  store i32 268441284, i32* @lr, align 4
  %v2_100016c0 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_100016c0, i32* %r19.global-to-local, align 4
  %v0_100016c8 = load i32, i32* @r28, align 4
  %v0_100016d4 = load i32, i32* @r29, align 4
  store i32 %v0_100016d4, i32* %r3.global-to-local, align 4
  store i32 268441308, i32* @lr, align 4
  %v4_100016d8 = inttoptr i32 %v0_100016c8 to i32*
  %v5_100016d8 = call i32 @function_100006a8(i32 %v0_100016d4, i32* %v4_100016d8, i32 2, i32 0)
  %v0_100016e8 = load i32, i32* @r28, align 4
  %v1_100016ec = urem i32 %v5_100016d8, 256
  store i32 %v1_100016ec, i32* %r14.global-to-local, align 4
  %v0_100016f0 = load i32, i32* @r29, align 4
  store i32 %v0_100016f0, i32* %r3.global-to-local, align 4
  store i32 268441336, i32* @lr, align 4
  %v4_100016f4 = inttoptr i32 %v0_100016e8 to i32*
  %v5_100016f4 = call i32 @function_100006a8(i32 %v0_100016f0, i32* %v4_100016f4, i32 3, i32 65535)
  %v0_100016f8 = load i32, i32* @r28, align 4
  store i32 %v5_100016f4, i32* %r24.global-to-local, align 4
  %v0_10001708 = load i32, i32* @r29, align 4
  store i32 %v0_10001708, i32* %r3.global-to-local, align 4
  store i32 268441360, i32* @lr, align 4
  %v4_1000170c = inttoptr i32 %v0_100016f8 to i32*
  %v5_1000170c = call i32 @function_100006a8(i32 %v0_10001708, i32* %v4_1000170c, i32 4, i32 64)
  %v0_10001710 = load i32, i32* @r28, align 4
  %v1_1000171c = urem i32 %v5_1000170c, 256
  store i32 %v1_1000171c, i32* %r20.global-to-local, align 4
  %v0_10001720 = load i32, i32* @r29, align 4
  store i32 %v0_10001720, i32* %r3.global-to-local, align 4
  store i32 268441384, i32* @lr, align 4
  %v4_10001724 = inttoptr i32 %v0_10001710 to i32*
  %v5_10001724 = call i32 @function_100006a8(i32 %v0_10001720, i32* %v4_10001724, i32 5, i32 1)
  %v0_10001734 = load i32, i32* @r28, align 4
  %v1_10001738 = urem i32 %v5_10001724, 256
  store i32 %v1_10001738, i32* @r31, align 4
  %v0_1000173c = load i32, i32* @r29, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* @lr, align 4
  %v4_10001740 = inttoptr i32 %v0_10001734 to i32*
  %v5_10001740 = call i32 @function_100006a8(i32 %v0_1000173c, i32* %v4_10001740, i32 6, i32 65535)
  %v0_10001748 = load i32, i32* @r28, align 4
  store i32 %v5_10001740, i32* %r26.global-to-local, align 4
  %v0_10001758 = load i32, i32* @r29, align 4
  store i32 %v0_10001758, i32* %r3.global-to-local, align 4
  store i32 268441440, i32* @lr, align 4
  %v4_1000175c = inttoptr i32 %v0_10001748 to i32*
  %v5_1000175c = call i32 @function_100006a8(i32 %v0_10001758, i32* %v4_1000175c, i32 7, i32 65535)
  %v0_10001760 = load i32, i32* @r28, align 4
  store i32 %v5_1000175c, i32* %r27.global-to-local, align 4
  %v0_10001770 = load i32, i32* @r29, align 4
  store i32 %v0_10001770, i32* %r3.global-to-local, align 4
  store i32 268441464, i32* @lr, align 4
  %v4_10001774 = inttoptr i32 %v0_10001760 to i32*
  %v5_10001774 = call i32 @function_100006a8(i32 %v0_10001770, i32* %v4_10001774, i32 0, i32 512)
  %v0_10001778 = load i32, i32* @r28, align 4
  store i32 %v5_10001774, i32* %r15.global-to-local, align 4
  %v0_10001788 = load i32, i32* @r29, align 4
  store i32 %v0_10001788, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v4_1000178c = inttoptr i32 %v0_10001778 to i32*
  %v5_1000178c = call i32 @function_100006a8(i32 %v0_10001788, i32* %v4_1000178c, i32 1, i32 1)
  %v0_10001790 = load i32, i32* @r28, align 4
  %v1_1000179c = urem i32 %v5_1000178c, 256
  store i32 %v1_1000179c, i32* %r21.global-to-local, align 4
  %v0_100017a0 = load i32, i32* @r29, align 4
  store i32 %v0_100017a0, i32* %r3.global-to-local, align 4
  store i32 268441512, i32* @lr, align 4
  %v4_100017a4 = inttoptr i32 %v0_10001790 to i32*
  %v5_100017a4 = call i32 @function_100006a8(i32 %v0_100017a0, i32* %v4_100017a4, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100017ac = load i32, i32* @global_var_1001b748.16, align 4
  %v0_100017b0 = load i32, i32* @r28, align 4
  store i32 %v5_100017a4, i32* %r30.global-to-local, align 4
  %v0_100017bc = load i32, i32* @r29, align 4
  store i32 %v0_100017bc, i32* %r3.global-to-local, align 4
  store i32 268441540, i32* @lr, align 4
  %v4_100017c0 = inttoptr i32 %v0_100017b0 to i32*
  %v5_100017c0 = call i32 @function_100006a8(i32 %v0_100017bc, i32* %v4_100017c0, i32 25, i32 %v3_100017ac)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441560, i32* @lr, align 4
  %v3_100017d4 = call i32 @function_10009344(i32 2, i32 3, i32 6)
  store i32 %v3_100017d4, i32* %r3.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v3_100017d4, -1
  store i1 %v3_100017d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017d4, i32* %r23.global-to-local, align 4
  br i1 %v3_100017d8, label %dec_label_pc_1000197c, label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_10001650
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017f0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268441600, i32* @lr, align 4
  %v4_100017fc = call i32 @function_10009308(i32 0, i32 3, i32 %v2_100017f0, i32 4)
  store i32 %v4_100017fc, i32* %r3.global-to-local, align 4
  %v3_10001800 = icmp eq i32 %v4_100017fc, -1
  store i1 %v3_10001800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001800, label %dec_label_pc_10001974, label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_100017e4
  %v0_10001808 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001808 = icmp slt i32 %v0_10001808, 0
  %v3_10001808 = icmp eq i32 %v0_10001808, 0
  store i1 %v1_10001808, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001814 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001814 = urem i32 %v0_10001814, 65536
  store i32 %v1_10001814, i32* %r24.global-to-local, align 4
  %v0_10001818 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001818 = urem i32 %v0_10001818, 65536
  store i32 %v1_10001818, i32* %r16.global-to-local, align 4
  %v0_1000181c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000181c = urem i32 %v0_1000181c, 65536
  store i32 %v1_1000181c, i32* %r17.global-to-local, align 4
  %v0_10001820 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001820 = urem i32 %v0_10001820, 256
  store i32 %v1_10001820, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10001808, 1
  br i1 %tmp37, label %dec_label_pc_100019dc, label %dec_label_pc_10001828

dec_label_pc_10001828:                            ; preds = %dec_label_pc_10001808
  %v0_10001828 = load i32, i32* @r31, align 4
  %v3_10001828 = icmp eq i32 %v0_10001828, 0
  store i1 %v3_10001828, i1* %cr2_eq.global-to-local, align 1
  %v3_1000182c = icmp eq i32 %v1_10001820, 0
  store i1 %v3_1000182c, i1* %cr3_eq.global-to-local, align 1
  %v0_10001830 = load i32, i32* %r15.global-to-local, align 4
  %v1_10001830 = urem i32 %v0_10001830, 65536
  %v0_10001814.not = or i32 %v0_10001814, -65536
  %v1_10001834 = xor i32 %v0_10001814.not, 65535
  store i32 %v1_10001834, i32* %r11.global-to-local, align 4
  %v1_1000183c = add nuw nsw i32 %v1_10001830, 66
  store i32 %v1_1000183c, i32* %r0.global-to-local, align 4
  %v1_10001840 = add nuw nsw i32 %v1_10001830, 28
  store i32 %v1_10001840, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001830, 66
  %v1_10001844 = urem i32 %fold, 65536
  store i32 %v1_10001844, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001830, 28
  %v1_10001848 = urem i32 %fold8, 65536
  store i32 %v1_10001848, i32* %r26.global-to-local, align 4
  %v1_1000184c = urem i32 %v1_10001834, 65536
  store i32 %v1_1000184c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001830, 8
  %v1_10001850 = urem i32 %fold9, 65536
  store i32 %v1_10001850, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001884

dec_label_pc_1000185c:                            ; preds = %dec_label_pc_10001950
  %v0_1000185c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 16
  %v2_1000185c = inttoptr i32 %v1_1000185c to i32*
  %v3_1000185c = load i32, i32* %v2_1000185c, align 4
  store i32 %v3_1000185c, i32* %r0.global-to-local, align 4
  %v1_10001860 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001860 = add i32 %v1_10001860, 16
  %v3_10001860 = inttoptr i32 %v2_10001860 to i32*
  store i32 %v3_1000185c, i32* %v3_10001860, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001864:                            ; preds = %dec_label_pc_1000196c, %dec_label_pc_1000185c
  %v3_10001864 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001864, i32* %r9.global-to-local, align 4
  %v0_10001868 = load i32, i32* @r28, align 4
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v2_10001868 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001868 = add i32 %v2_10001868, 4
  %v4_10001868 = inttoptr i32 %v3_10001868 to i16*
  store i16 %v1_10001868, i16* %v4_10001868, align 2
  %v0_1000186c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000186c = add i32 %v0_1000186c, 1
  store i32 %v1_1000186c, i32* %r31.global-to-local, align 4
  %v0_10001870 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001870 = trunc i32 %v0_10001870 to i16
  %v2_10001870 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001870 = inttoptr i32 %v2_10001870 to i16*
  store i16 %v1_10001870, i16* %v3_10001870, align 2
  %v0_10001874 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001874 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001874 = icmp slt i32 %v0_10001874, %v1_10001874
  %v4_10001874 = icmp eq i32 %v0_10001874, %v1_10001874
  store i1 %v4_10001874, i1* %cr7_eq.global-to-local, align 1
  %v0_10001878 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001878 = trunc i32 %v0_10001878 to i16
  %v2_10001878 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001878 = add i32 %v2_10001878, 2
  %v4_10001878 = inttoptr i32 %v3_10001878 to i16*
  store i16 %v1_10001878, i16* %v4_10001878, align 2
  %v0_1000187c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000187c, i32* %stack_var_-104, align 4
  br i1 %v2_10001874, label %dec_label_pc_10001884, label %dec_label_pc_100019e0

dec_label_pc_10001884:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_10001828
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v2_1000188c = call i32 @function_100096a0(i32 1510, i32 4)
  store i32 %v2_1000188c, i32* %r3.global-to-local, align 4
  %v3_10001890 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001890, i32* %r9.global-to-local, align 4
  %v0_10001894 = load i32, i32* @r31, align 4
  %v1_10001894 = mul i32 %v0_10001894, 4
  store i32 %v1_10001894, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000189c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000189c = add i32 %v1_1000189c, %v1_10001894
  %v4_1000189c = inttoptr i32 %v3_1000189c to i32*
  store i32 %v2_1000188c, i32* %v4_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100018a0 = mul i32 %v0_100018a0, 4
  store i32 %v1_100018a0, i32* %r9.global-to-local, align 4
  %v1_100018a4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100018a4 = add i32 %v1_100018a4, %v1_100018a0
  %v3_100018a4 = inttoptr i32 %v2_100018a4 to i32*
  %v4_100018a4 = load i32, i32* %v3_100018a4, align 4
  store i32 %v4_100018a4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100018ac = inttoptr i32 %v4_100018a4 to i32*
  %v2_100018ac = load i32, i32* %v1_100018ac, align 4
  store i32 %v2_100018ac, i32* %r0.global-to-local, align 4
  %v1_100018b0 = add i32 %v4_100018a4, 38
  store i32 %v1_100018b0, i32* %r30.global-to-local, align 4
  %v0_100018b4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100018b4 = trunc i32 %v0_100018b4 to i8
  %v3_100018b4 = add i32 %v4_100018a4, 8
  %v4_100018b4 = inttoptr i32 %v3_100018b4 to i8*
  store i8 %v1_100018b4, i8* %v4_100018b4, align 1
  %v0_100018b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018b8 = add i32 %v0_100018b8, 58
  store i32 %v1_100018b8, i32* %r29.global-to-local, align 4
  %v1_100018bc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100018bc, i32* %r0.global-to-local, align 4
  %v0_100018c0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100018c0 = trunc i32 %v0_100018c0 to i16
  %v2_100018c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018c0 = add i32 %v2_100018c0, 4
  %v4_100018c0 = inttoptr i32 %v3_100018c0 to i16*
  store i16 %v1_100018c0, i16* %v4_100018c0, align 2
  %v1_100018c4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100018c4, i32* %r0.global-to-local, align 4
  %v0_100018c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018c8 = add i32 %v0_100018c8, 20
  store i32 %v1_100018c8, i32* %r9.global-to-local, align 4
  %v2_100018cc = inttoptr i32 %v0_100018c8 to i32*
  store i32 %v1_100018c4, i32* %v2_100018cc, align 4
  %v0_100018d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018d0 = add i32 %v0_100018d0, 24
  store i32 %v1_100018d0, i32* %r11.global-to-local, align 4
  %v0_100018d4 = load i32, i32* %r14.global-to-local, align 4
  %v1_100018d4 = trunc i32 %v0_100018d4 to i8
  %v3_100018d4 = add i32 %v0_100018d0, 1
  %v4_100018d4 = inttoptr i32 %v3_100018d4 to i8*
  store i8 %v1_100018d4, i8* %v4_100018d4, align 1
  %v0_100018d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100018d8 = trunc i32 %v0_100018d8 to i16
  %v2_100018d8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018d8 = add i32 %v2_100018d8, 2
  %v4_100018d8 = inttoptr i32 %v3_100018d8 to i16*
  store i16 %v1_100018d8, i16* %v4_100018d8, align 2
  %v0_100018dc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100018dc, label %dec_label_pc_100018e8, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_10001884
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100018e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018e4 = add i32 %v2_100018e4, 6
  %v4_100018e4 = inttoptr i32 %v3_100018e4 to i16*
  store i16 16384, i16* %v4_100018e4, align 2
  br label %dec_label_pc_100018e8

dec_label_pc_100018e8:                            ; preds = %dec_label_pc_10001884, %dec_label_pc_100018e0
  %v2_100018ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100018ec = add i32 %v2_100018ec, 9
  %v4_100018ec = inttoptr i32 %v3_100018ec to i8*
  store i8 47, i8* %v4_100018ec, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_100018f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100018f4 = add i32 %v2_100018f4, 2
  %v4_100018f4 = inttoptr i32 %v3_100018f4 to i16*
  store i16 25944, i16* %v4_100018f4, align 2
  %v2_100018fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100018fc = add i32 %v2_100018fc, 12
  %v4_100018fc = inttoptr i32 %v3_100018fc to i16*
  store i16 2048, i16* %v4_100018fc, align 2
  %v3_10001900 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_100017c0, i32* %r11.global-to-local, align 4
  %v1_10001908 = mul i32 %v3_10001900, 24
  store i32 %v1_10001908, i32* %r9.global-to-local, align 4
  %v0_1000190c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000190c = add i32 %v0_1000190c, 38
  %v2_1000190c = inttoptr i32 %v1_1000190c to i32*
  %v3_1000190c = load i32, i32* %v2_1000190c, align 4
  store i32 %v3_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = add i32 %v0_1000190c, 12
  %v3_10001910 = inttoptr i32 %v2_10001910 to i32*
  store i32 %v5_100017c0, i32* %v3_10001910, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001918 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001918 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001918 = add i32 %v1_10001918, %v0_10001918
  store i32 %v2_10001918, i32* %r9.global-to-local, align 4
  %v1_1000191c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000191c, i32* %r0.global-to-local, align 4
  %v0_10001920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001920 = add i32 %v0_10001920, 16
  %v2_10001920 = inttoptr i32 %v1_10001920 to i32*
  %v3_10001920 = load i32, i32* %v2_10001920, align 4
  store i32 %v3_10001920, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001928 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001928, i32* %r0.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000192c = add i32 %v1_1000192c, 38
  %v3_1000192c = inttoptr i32 %v2_1000192c to i32*
  store i32 %v1_10001928, i32* %v3_1000192c, align 4
  %v0_10001930 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001930 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001930 = add i32 %v1_10001930, 16
  %v3_10001930 = inttoptr i32 %v2_10001930 to i32*
  store i32 %v0_10001930, i32* %v3_10001930, align 4
  %v0_10001934 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001934 = trunc i32 %v0_10001934 to i8
  %v2_10001934 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001934 = add i32 %v2_10001934, 1
  %v4_10001934 = inttoptr i32 %v3_10001934 to i8*
  store i8 %v1_10001934, i8* %v4_10001934, align 1
  %v0_10001938 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001938 = trunc i32 %v0_10001938 to i16
  %v2_10001938 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001938 = add i32 %v2_10001938, 2
  %v4_10001938 = inttoptr i32 %v3_10001938 to i16*
  store i16 %v1_10001938, i16* %v4_10001938, align 2
  %v0_1000193c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000193c = trunc i32 %v0_1000193c to i16
  %v2_1000193c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000193c = add i32 %v2_1000193c, 4
  %v4_1000193c = inttoptr i32 %v3_1000193c to i16*
  store i16 %v1_1000193c, i16* %v4_1000193c, align 2
  %v0_10001940 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001940 = trunc i32 %v0_10001940 to i8
  %v2_10001940 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001940 = add i32 %v2_10001940, 8
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 %v1_10001940, i8* %v4_10001940, align 1
  %v0_10001944 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001944, label %dec_label_pc_10001950, label %dec_label_pc_10001948

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018e8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_1000194c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000194c = add i32 %v2_1000194c, 6
  %v4_1000194c = inttoptr i32 %v3_1000194c to i16*
  store i16 16384, i16* %v4_1000194c, align 2
  br label %dec_label_pc_10001950

dec_label_pc_10001950:                            ; preds = %dec_label_pc_100018e8, %dec_label_pc_10001948
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001954 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001954 = add i32 %v2_10001954, 9
  %v4_10001954 = inttoptr i32 %v3_10001954 to i8*
  store i8 17, i8* %v4_10001954, align 1
  %v0_10001958 = call i32 @function_10005b38()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001958, -1024
  store i32 %v1_1000195c, i32* %r0.global-to-local, align 4
  %v1_10001960 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001960 = add i32 %v1_10001960, 12
  %v3_10001960 = inttoptr i32 %v2_10001960 to i32*
  store i32 %v0_10001958, i32* %v3_10001960, align 4
  %v0_10001964 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001964 = sub i32 -1, %v0_10001964
  store i32 %v1_10001964, i32* %r0.global-to-local, align 4
  %v0_10001968 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001968, label %dec_label_pc_1000196c, label %dec_label_pc_1000185c

dec_label_pc_1000196c:                            ; preds = %dec_label_pc_10001950
  %v1_1000196c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000196c = add i32 %v1_1000196c, 16
  %v3_1000196c = inttoptr i32 %v2_1000196c to i32*
  store i32 %v1_10001964, i32* %v3_1000196c, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001974:                            ; preds = %dec_label_pc_100017e4
  %v0_10001974 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001974, i32* %r3.global-to-local, align 4
  store i32 268441980, i32* @lr, align 4
  %v0_10001978 = call i32 @function_10008628()
  store i32 %v0_10001978, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000197c

dec_label_pc_1000197c:                            ; preds = %dec_label_pc_10001650, %dec_label_pc_10001974
  store i32 %v0_10001668, i32* %r0.global-to-local, align 4
  %v1_10001990 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001658)
  store i32 %v0_1000169c, i32* %r28.global-to-local, align 4
  store i32 %v0_100016a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100016ac, i32* %r30.global-to-local, align 4
  store i32 %v0_100016b0, i32* %r31.global-to-local, align 4
  %v0_100019d8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100019d8

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_10001808
  %v3_100019dc = icmp eq i32 %v1_10001820, 0
  store i1 %v3_100019dc, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100019e0

dec_label_pc_100019e0:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_100019dc
  store i32 %v5_100017c0, i32* %r0.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r21.global-to-local, align 4
  %v3_100019e4 = icmp eq i32 %v0_100019e4, 0
  store i1 %v3_100019e4, i1* %cr2_eq.global-to-local, align 1
  %v2_100019e8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100019e8, i32* %r14.global-to-local, align 4
  %v0_100019ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100019ec = add i32 %v0_100019ec, 8
  store i32 %v1_100019ec, i32* %r21.global-to-local, align 4
  %v3_100019f0 = icmp eq i32 %v5_100017c0, -1
  store i1 %v3_100019f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100019f4 = add i32 %v0_100019ec, 66
  store i32 %v1_100019f4, i32* %r22.global-to-local, align 4
  %v0_100019f8 = call i32 @__asm_mfcr()
  store i32 %v0_100019f8, i32* %r3.global-to-local, align 4
  %v1_100019fc = mul i32 %v0_100019f8, 268435456
  store i32 %v1_100019fc, i32* %r20.global-to-local, align 4
  %v2_10001a90 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10001ab4 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10001ac4 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10001a00.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001a00.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001a00.outer

dec_label_pc_10001a00.outer:                      ; preds = %dec_label_pc_10001b64, %dec_label_pc_100019e0
  %v1_10001a00.ph = phi i1 [ %v1_10001a00.pre, %dec_label_pc_100019e0 ], [ %v1_10001b64, %dec_label_pc_10001b64 ]
  %v0_10001a00.ph = phi i1 [ %v0_10001a00.pre, %dec_label_pc_100019e0 ], [ %v0_10001b64, %dec_label_pc_10001b64 ]
  %v2_10001a00 = or i1 %v1_10001a00.ph, %v0_10001a00.ph
  br label %dec_label_pc_10001a00

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_10001a00.outer, %dec_label_pc_10001a00
  br i1 %v2_10001a00, label %dec_label_pc_10001a00, label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001a00, %dec_label_pc_10001b64
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001a14

dec_label_pc_10001a14:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001a04
  %v0_10001a14 = phi i32 [ %v1_10001b54, %dec_label_pc_10001ad4 ], [ 0, %dec_label_pc_10001a04 ]
  %v1_10001a14 = mul i32 %v0_10001a14, 24
  store i32 %v1_10001a14, i32* %r0.global-to-local, align 4
  %v1_10001a18 = mul i32 %v0_10001a14, 4
  store i32 %v1_10001a18, i32* %r11.global-to-local, align 4
  %v1_10001a1c = load i32, i32* %r19.global-to-local, align 4
  %v2_10001a1c = add i32 %v1_10001a1c, %v1_10001a18
  %v3_10001a1c = inttoptr i32 %v2_10001a1c to i32*
  %v4_10001a1c = load i32, i32* %v3_10001a1c, align 4
  store i32 %v4_10001a1c, i32* %r28.global-to-local, align 4
  %v1_10001a20 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001a20 = add i32 %v1_10001a20, %v1_10001a14
  %v1_10001a24 = add i32 %v2_10001a20, 20
  %v2_10001a24 = inttoptr i32 %v1_10001a24 to i8*
  %v3_10001a24 = load i8, i8* %v2_10001a24, align 1
  %v4_10001a24 = zext i8 %v3_10001a24 to i32
  store i32 %v4_10001a24, i32* %r9.global-to-local, align 4
  %v1_10001a28 = add i32 %v4_10001a1c, 24
  store i32 %v1_10001a28, i32* @r30, align 4
  %v1_10001a2c = add i32 %v4_10001a1c, 38
  store i32 %v1_10001a2c, i32* @r31, align 4
  %v1_10001a30 = add i32 %v4_10001a1c, 58
  store i32 %v1_10001a30, i32* %r27.global-to-local, align 4
  %v3_10001a34 = icmp eq i8 %v3_10001a24, 31
  store i1 %v3_10001a34, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10001a24, 32
  br i1 %tmp39, label %dec_label_pc_10001b6c, label %dec_label_pc_10001a3c

dec_label_pc_10001a3c:                            ; preds = %dec_label_pc_10001a14
  %v0_10001a3c = load i32, i32* %r20.global-to-local, align 4
  %v1_10001a3c = mul i32 %v0_10001a3c, 16
  %v2_10001a3c = udiv i32 %v0_10001a3c, 268435456
  %v3_10001a3c = or i32 %v2_10001a3c, %v1_10001a3c
  store i32 %v3_10001a3c, i32* %r20.global-to-local, align 4
  %v1_10001a40 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001a3c)
  %v1_10001a44 = mul nuw i32 %v2_10001a3c, 268435456
  %v2_10001a44 = urem i32 %v0_10001a3c, 268435456
  %v3_10001a44 = or i32 %v1_10001a44, %v2_10001a44
  store i32 %v3_10001a44, i32* %r20.global-to-local, align 4
  %v0_10001a48 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001a48, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001a4c:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 65535, i32* @r29, align 4
  %v0_10001a54 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001a54 = icmp eq i32 %v0_10001a54, 65535
  store i1 %v4_10001a54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a54, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v1_10001a5c = phi i32 [ %v1_10001bb0, %dec_label_pc_10001ba0 ], [ 65535, %dec_label_pc_10001a4c ]
  %v0_10001a5c = load i32, i32* %r16.global-to-local, align 4
  %v4_10001a5c = icmp eq i32 %v0_10001a5c, %v1_10001a5c
  store i1 %v4_10001a5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a5c, label %dec_label_pc_10001bd8, label %dec_label_pc_10001a64

dec_label_pc_10001a64:                            ; preds = %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge, %dec_label_pc_10001a5c
  %v1_10001a64 = phi i32 [ %v1_10001a64.pre, %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge ], [ %v1_10001a5c, %dec_label_pc_10001a5c ]
  %v0_10001a64 = load i32, i32* %r17.global-to-local, align 4
  %v4_10001a64 = icmp eq i32 %v0_10001a64, %v1_10001a64
  store i1 %v4_10001a64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a64, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001a6c:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001a6c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001a6c, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001a70 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001a70 = add i32 %v0_10001a70, 16
  %v2_10001a70 = inttoptr i32 %v1_10001a70 to i32*
  %v3_10001a70 = load i32, i32* %v2_10001a70, align 4
  store i32 %v3_10001a70, i32* %r0.global-to-local, align 4
  %v1_10001a74 = load i32, i32* @r31, align 4
  %v2_10001a74 = add i32 %v1_10001a74, 16
  %v3_10001a74 = inttoptr i32 %v2_10001a74 to i32*
  store i32 %v3_10001a70, i32* %v3_10001a74, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001a78:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001a70
  %v0_10001a78 = call i32 @function_10005b38()
  store i32 %v0_10001a78, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a78, i32* %stack_var_-100, align 4
  %v0_10001a80 = call i32 @function_10005b38()
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a80, i32* %stack_var_-96, align 4
  %v0_10001a88 = call i32 @function_10005b38()
  store i32 %v0_10001a88, i32* %stack_var_-92, align 4
  %v0_10001a94 = load i32, i32* @r30, align 4
  store i32 %v0_10001a94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001aa0.17 to i32), i32* @lr, align 4
  %v3_10001a9c = call i32 @function_10007eec(i32 %v0_10001a94, i32 %v2_10001a90, i32 4)
  %v0_10001aa0 = load i32, i32* @r30, align 4
  %v1_10001aa0 = add i32 %v0_10001aa0, 6
  store i32 %v1_10001aa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ab0.18 to i32), i32* @lr, align 4
  %v3_10001aac = call i32 @function_10007eec(i32 %v1_10001aa0, i32 %v2_100019e8, i32 4)
  %v0_10001ab0 = load i32, i32* @r30, align 4
  %v1_10001ab0 = add i32 %v0_10001ab0, 4
  store i32 %v1_10001ab0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ac0.19 to i32), i32* @lr, align 4
  %v3_10001abc = call i32 @function_10007eec(i32 %v1_10001ab0, i32 %v2_10001ab4, i32 2)
  %v0_10001ac0 = load i32, i32* @r30, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 10
  store i32 %v1_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v3_10001acc = call i32 @function_10007eec(i32 %v1_10001ac0, i32 %v2_10001ac4, i32 2)
  store i32 %v3_10001acc, i32* %r3.global-to-local, align 4
  %v0_10001ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ad0, label %dec_label_pc_10001ad4, label %dec_label_pc_10001c00

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001a78, %dec_label_pc_10001c00
  %v0_10001ad4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001ad4 = trunc i32 %v0_10001ad4 to i16
  %v2_10001ad4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001ad4 = add i32 %v2_10001ad4, 10
  %v4_10001ad4 = inttoptr i32 %v3_10001ad4 to i16*
  store i16 %v1_10001ad4, i16* %v4_10001ad4, align 2
  %v0_10001adc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v2_10001ae0 = call i32 @function_100043cc(i32 %v0_10001adc, i32 20)
  %v3_10001ae0 = trunc i32 %v2_10001ae0 to i16
  %v4_10001ae8 = add i32 %v0_10001adc, 10
  %v5_10001ae8 = inttoptr i32 %v4_10001ae8 to i16*
  store i16 %v3_10001ae0, i16* %v5_10001ae8, align 2
  %v0_10001aec = load i32, i32* @r31, align 4
  store i32 %v0_10001aec, i32* @r3, align 4
  %v0_10001af0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001af0 = trunc i32 %v0_10001af0 to i16
  %v3_10001af0 = add i32 %v0_10001aec, 10
  %v4_10001af0 = inttoptr i32 %v3_10001af0 to i16*
  store i16 %v1_10001af0, i16* %v4_10001af0, align 2
  %v2_10001af4 = call i32 @function_100043cc(i32 %v0_10001aec, i32 20)
  %v3_10001af4 = trunc i32 %v2_10001af4 to i16
  %v0_10001af8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001af8, i32* @r4, align 4
  %v3_10001afc = load i32, i32* @r31, align 4
  %v4_10001afc = add i32 %v3_10001afc, 10
  %v5_10001afc = inttoptr i32 %v4_10001afc to i16*
  store i16 %v3_10001af4, i16* %v5_10001afc, align 2
  %v0_10001b00 = load i32, i32* %r21.global-to-local, align 4
  %v0_10001b04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b04 = trunc i32 %v0_10001b04 to i16
  %v2_10001b04 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001b04 = add i32 %v2_10001b04, 6
  %v4_10001b04 = inttoptr i32 %v3_10001b04 to i16*
  store i16 %v1_10001b04, i16* %v4_10001b04, align 2
  %v0_10001b08 = load i32, i32* @r31, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  %v0_10001b0c = load i32, i32* %r27.global-to-local, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 4
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i16*
  %v3_10001b0c = load i16, i16* %v2_10001b0c, align 2
  %v4_10001b0c = zext i16 %v3_10001b0c to i32
  %v4_10001b10 = call i32 @function_10004430(i32 %v0_10001b08, i32 %v0_10001af8, i32 %v4_10001b0c, i32 %v0_10001b00)
  %v5_10001b10 = trunc i32 %v4_10001b10 to i16
  store i32 %v4_10001b10, i32* %r3.global-to-local, align 4
  %v3_10001b14 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b14, i32* %r0.global-to-local, align 4
  %v0_10001b18 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001b18 = add i32 %v0_10001b18, 16
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i32*
  %v3_10001b18 = load i32, i32* %v2_10001b18, align 4
  store i32 %v3_10001b18, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001b20 = mul i32 %v3_10001b14, 24
  store i32 %v1_10001b20, i32* %r0.global-to-local, align 4
  %v3_10001b24 = load i32, i32* %r27.global-to-local, align 4
  %v4_10001b24 = add i32 %v3_10001b24, 6
  %v5_10001b24 = inttoptr i32 %v4_10001b24 to i16*
  store i16 %v5_10001b10, i16* %v5_10001b24, align 2
  %v0_10001b28 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001b2c, i32* %r3.global-to-local, align 4
  %v0_10001b30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b30 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b30 = add i32 %v1_10001b30, %v0_10001b30
  %v0_10001b34 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b34 = trunc i32 %v0_10001b34 to i16
  %v5_10001b34 = inttoptr i32 %v2_10001b30 to i16*
  store i16 %v3_10001b34, i16* %v5_10001b34, align 2
  %v0_10001b38 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001b38 = add i32 %v2_10001b30, 4
  %v3_10001b38 = inttoptr i32 %v2_10001b38 to i32*
  store i32 %v0_10001b38, i32* %v3_10001b38, align 4
  %v0_10001b3c = load i32, i32* %r22.global-to-local, align 4
  %v0_10001b40 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b40 = trunc i32 %v0_10001b40 to i16
  %v3_10001b40 = add i32 %v2_10001b30, 2
  %v4_10001b40 = inttoptr i32 %v3_10001b40 to i16*
  store i16 %v1_10001b40, i16* %v4_10001b40, align 2
  store i32 268442448, i32* @lr, align 4
  %v6_10001b4c = call i32 @function_100092c8(i32 %v0_10001b2c, i32 %v0_10001b28, i32 %v0_10001b3c, i32 16384, i32 %v2_10001b30, i32 16)
  store i32 %v6_10001b4c, i32* %r3.global-to-local, align 4
  %v3_10001b50 = load i32, i32* %stack_var_-104, align 4
  %v1_10001b54 = add i32 %v3_10001b50, 1
  store i32 %v1_10001b54, i32* %r9.global-to-local, align 4
  %v1_10001b58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001b58 = icmp slt i32 %v1_10001b54, %v1_10001b58
  %v4_10001b58 = icmp eq i32 %v1_10001b54, %v1_10001b58
  store i1 %v4_10001b58, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001b54, i32* %stack_var_-104, align 4
  br i1 %v2_10001b58, label %dec_label_pc_10001a14, label %dec_label_pc_10001b64

dec_label_pc_10001b64:                            ; preds = %dec_label_pc_10001ad4
  %v0_10001b64 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001b64 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001b64 = or i1 %v0_10001b64, %v1_10001b64
  br i1 %v2_10001b64, label %dec_label_pc_10001a00.outer, label %dec_label_pc_10001a04

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001a14
  %v1_10001b6c = add i32 %v2_10001a20, 16
  %v2_10001b6c = inttoptr i32 %v1_10001b6c to i32*
  %v3_10001b6c = load i32, i32* %v2_10001b6c, align 4
  store i32 %v3_10001b6c, i32* %r29.global-to-local, align 4
  %v0_10001b70 = call i32 @function_10005b38()
  store i32 %v0_10001b70, i32* %r3.global-to-local, align 4
  %v3_10001b74 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b74, i32* %r9.global-to-local, align 4
  %v0_10001b78 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001b78 = mul i32 %v0_10001b78, 16
  %v2_10001b78 = udiv i32 %v0_10001b78, 268435456
  %v3_10001b78 = or i32 %v2_10001b78, %v1_10001b78
  store i32 %v3_10001b78, i32* %r20.global-to-local, align 4
  %v1_10001b7c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001b78)
  %v1_10001b80 = mul nuw i32 %v2_10001b78, 268435456
  %v2_10001b80 = urem i32 %v0_10001b78, 268435456
  %v3_10001b80 = or i32 %v1_10001b80, %v2_10001b80
  store i32 %v3_10001b80, i32* %r20.global-to-local, align 4
  %v0_10001b84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b84 = mul i32 %v0_10001b84, 24
  %v1_10001b88 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b88 = add i32 %v1_10001b88, %v1_10001b84
  store i32 %v2_10001b88, i32* %r9.global-to-local, align 4
  %v1_10001b8c = add i32 %v2_10001b88, 20
  %v2_10001b8c = inttoptr i32 %v1_10001b8c to i8*
  %v3_10001b8c = load i8, i8* %v2_10001b8c, align 1
  %v4_10001b8c = zext i8 %v3_10001b8c to i32
  store i32 %v4_10001b8c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001b8c, 64
  %v2_10001b90 = zext i8 %tmp to i32
  %v3_10001b90 = lshr i32 %v0_10001b70, %v2_10001b90
  store i32 %v3_10001b90, i32* %r3.global-to-local, align 4
  %v0_10001b94 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b94 = add i32 %v3_10001b90, %v0_10001b94
  store i32 %v2_10001b94, i32* %r29.global-to-local, align 4
  %v1_10001b98 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001b98 = add i32 %v1_10001b98, 16
  %v3_10001b98 = inttoptr i32 %v2_10001b98 to i32*
  store i32 %v2_10001b94, i32* %v3_10001b98, align 4
  %v0_10001b9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001b9c, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001ba4 = call i32 @function_10005b38()
  store i32 %v0_10001ba4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bac = add i32 %v1_10001bac, 12
  %v3_10001bac = inttoptr i32 %v2_10001bac to i32*
  store i32 %v0_10001ba4, i32* %v3_10001bac, align 4
  %v0_10001bb0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001bb0 = load i32, i32* @r29, align 4
  %v4_10001bb0 = icmp eq i32 %v0_10001bb0, %v1_10001bb0
  store i1 %v4_10001bb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001bb0, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001bb8:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v0_10001bb8 = call i32 @function_10005b38()
  %v0_10001bbc = load i32, i32* %r16.global-to-local, align 4
  %v1_10001bbc = load i32, i32* @r29, align 4
  %v4_10001bbc = icmp eq i32 %v0_10001bbc, %v1_10001bbc
  store i1 %v4_10001bbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10001bc0 = urem i32 %v0_10001bb8, 65536
  store i32 %v1_10001bc0, i32* %r3.global-to-local, align 4
  %v1_10001bc4 = add nsw i32 %v1_10001bc0, -1000
  store i32 %v1_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = trunc i32 %v0_10001bb8 to i16
  %v2_10001bc8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001bc8 = add i32 %v2_10001bc8, 4
  %v4_10001bc8 = inttoptr i32 %v3_10001bc8 to i16*
  store i16 %v1_10001bc8, i16* %v4_10001bc8, align 2
  %v0_10001bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10001bcc = sub i32 -1, %v0_10001bcc
  store i32 %v1_10001bcc, i32* %r0.global-to-local, align 4
  %v1_10001bd0 = trunc i32 %v1_10001bcc to i16
  %v2_10001bd0 = load i32, i32* @r31, align 4
  %v3_10001bd0 = add i32 %v2_10001bd0, 4
  %v4_10001bd0 = inttoptr i32 %v3_10001bd0 to i16*
  store i16 %v1_10001bd0, i16* %v4_10001bd0, align 2
  br i1 %v4_10001bbc, label %dec_label_pc_10001bd8, label %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge

dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge: ; preds = %dec_label_pc_10001bb8
  %v1_10001a64.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001a64

dec_label_pc_10001bd8:                            ; preds = %dec_label_pc_10001bb8, %dec_label_pc_10001a5c
  %v0_10001bd8 = call i32 @function_10005b38()
  %v1_10001bd8 = trunc i32 %v0_10001bd8 to i16
  store i32 %v0_10001bd8, i32* %r3.global-to-local, align 4
  %v0_10001bdc = load i32, i32* %r17.global-to-local, align 4
  %v1_10001bdc = load i32, i32* @r29, align 4
  %v4_10001bdc = icmp eq i32 %v0_10001bdc, %v1_10001bdc
  store i1 %v4_10001bdc, i1* %cr7_eq.global-to-local, align 1
  %v3_10001be0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001be0 = add i32 %v3_10001be0, 58
  %v5_10001be0 = inttoptr i32 %v4_10001be0 to i16*
  store i16 %v1_10001bd8, i16* %v5_10001be0, align 2
  br i1 %v4_10001bdc, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001be8:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001be8 = call i32 @function_10005b38()
  %v1_10001be8 = trunc i32 %v0_10001be8 to i16
  store i32 %v0_10001be8, i32* %r3.global-to-local, align 4
  %v3_10001bec = load i32, i32* %r27.global-to-local, align 4
  %v4_10001bec = add i32 %v3_10001bec, 2
  %v5_10001bec = inttoptr i32 %v4_10001bec to i16*
  store i16 %v1_10001be8, i16* %v5_10001bec, align 2
  %v0_10001bf0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001bf0, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001bf4 = call i32 @function_10005b38()
  store i32 %v0_10001bf4, i32* %r3.global-to-local, align 4
  %v1_10001bf8 = load i32, i32* @r31, align 4
  %v2_10001bf8 = add i32 %v1_10001bf8, 16
  %v3_10001bf8 = inttoptr i32 %v2_10001bf8 to i32*
  store i32 %v0_10001bf4, i32* %v3_10001bf8, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001c00:                            ; preds = %dec_label_pc_10001a78
  %v0_10001c00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001c00, 8
  store i32 %v1_10001c00, i32* @r3, align 4
  %v0_10001c04 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10001c04, i32* @r4, align 4
  %v0_10001c08 = call i32 @function_10005d0c()
  store i32 %v0_10001c08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ad4

; uselistorder directives
  uselistorder i32 %v0_10001be8, { 1, 0 }
  uselistorder i32 %v0_10001bd8, { 1, 0 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v1_10001bc0, { 1, 0 }
  uselistorder i32 %v0_10001bb8, { 1, 0 }
  uselistorder i32 %v1_10001bb0, { 1, 0 }
  uselistorder i32 %v0_10001b78, { 2, 1, 0 }
  uselistorder i1 %v1_10001b64, { 1, 0 }
  uselistorder i1 %v0_10001b64, { 1, 0 }
  uselistorder i32 %v1_10001b54, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001b30, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001b10, { 1, 0 }
  uselistorder i32 %v0_10001a3c, { 2, 1, 0 }
  uselistorder i32 %v4_10001a1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001a18, { 1, 0 }
  uselistorder i32 %v1_10001964, { 1, 0 }
  uselistorder i32 %v1_100018a0, { 1, 0 }
  uselistorder i32 %v1_10001894, { 1, 0 }
  uselistorder i32 %v1_10001830, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001820, { 1, 2, 0 }
  uselistorder i32 %v0_10001814, { 1, 0 }
  uselistorder i32 %v5_100017c0, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 32, 23, 24, 25, 29, 30, 31, 3, 33, 34, 35, 36, 37, 38, 39, 40, 41, 26, 27, 28, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r24.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 12, 28, 29, 30, 16, 17 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a04, { 1, 0 }
  uselistorder label %dec_label_pc_10001a00, { 1, 0 }
  uselistorder label %dec_label_pc_100019e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000197c, { 1, 0 }
  uselistorder label %dec_label_pc_10001950, { 1, 0 }
  uselistorder label %dec_label_pc_100018e8, { 1, 0 }
}

define i32 @function_10001c10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001c10:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001c14 = load i32, i32* @lr, align 4
  store i32 %v0_10001c14, i32* %r0.global-to-local, align 4
  %v0_10001c18 = call i32 @__asm_mfcr()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10001c28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001c18, i32* %r19.global-to-local, align 4
  %v0_10001c5c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001c64 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001c6c = load i32, i32* @r30, align 4
  %v0_10001c70 = load i32, i32* @r31, align 4
  store i32 268442756, i32* @lr, align 4
  %v2_10001c80 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_10001c80, i32* %r20.global-to-local, align 4
  %v0_10001c88 = load i32, i32* @r28, align 4
  %v0_10001c94 = load i32, i32* @r29, align 4
  store i32 %v0_10001c94, i32* %r3.global-to-local, align 4
  store i32 268442780, i32* @lr, align 4
  %v4_10001c98 = inttoptr i32 %v0_10001c88 to i32*
  %v5_10001c98 = call i32 @function_100006a8(i32 %v0_10001c94, i32* %v4_10001c98, i32 2, i32 0)
  %v0_10001ca8 = load i32, i32* @r28, align 4
  %v1_10001cac = urem i32 %v5_10001c98, 256
  store i32 %v1_10001cac, i32* %r14.global-to-local, align 4
  %v0_10001cb0 = load i32, i32* @r29, align 4
  store i32 %v0_10001cb0, i32* %r3.global-to-local, align 4
  store i32 268442808, i32* @lr, align 4
  %v4_10001cb4 = inttoptr i32 %v0_10001ca8 to i32*
  %v5_10001cb4 = call i32 @function_100006a8(i32 %v0_10001cb0, i32* %v4_10001cb4, i32 3, i32 65535)
  %v0_10001cb8 = load i32, i32* @r28, align 4
  store i32 %v5_10001cb4, i32* %r25.global-to-local, align 4
  %v0_10001cc8 = load i32, i32* @r29, align 4
  store i32 %v0_10001cc8, i32* %r3.global-to-local, align 4
  store i32 268442832, i32* @lr, align 4
  %v4_10001ccc = inttoptr i32 %v0_10001cb8 to i32*
  %v5_10001ccc = call i32 @function_100006a8(i32 %v0_10001cc8, i32* %v4_10001ccc, i32 4, i32 64)
  %v0_10001cd0 = load i32, i32* @r28, align 4
  %v1_10001cdc = urem i32 %v5_10001ccc, 256
  store i32 %v1_10001cdc, i32* %r21.global-to-local, align 4
  %v0_10001ce0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ce0, i32* %r3.global-to-local, align 4
  store i32 268442856, i32* @lr, align 4
  %v4_10001ce4 = inttoptr i32 %v0_10001cd0 to i32*
  %v5_10001ce4 = call i32 @function_100006a8(i32 %v0_10001ce0, i32* %v4_10001ce4, i32 5, i32 1)
  %v0_10001cf4 = load i32, i32* @r28, align 4
  %v1_10001cf8 = urem i32 %v5_10001ce4, 256
  store i32 %v1_10001cf8, i32* @r31, align 4
  %v0_10001cfc = load i32, i32* @r29, align 4
  store i32 %v0_10001cfc, i32* %r3.global-to-local, align 4
  store i32 268442884, i32* @lr, align 4
  %v4_10001d00 = inttoptr i32 %v0_10001cf4 to i32*
  %v5_10001d00 = call i32 @function_100006a8(i32 %v0_10001cfc, i32* %v4_10001d00, i32 6, i32 65535)
  %v0_10001d08 = load i32, i32* @r28, align 4
  store i32 %v5_10001d00, i32* %r24.global-to-local, align 4
  %v0_10001d18 = load i32, i32* @r29, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d08 to i32*
  %v5_10001d1c = call i32 @function_100006a8(i32 %v0_10001d18, i32* %v4_10001d1c, i32 7, i32 65535)
  %v0_10001d20 = load i32, i32* @r28, align 4
  store i32 %v5_10001d1c, i32* %r27.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r29, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_100006a8(i32 %v0_10001d30, i32* %v4_10001d34, i32 0, i32 512)
  %v0_10001d38 = load i32, i32* @r28, align 4
  store i32 %v5_10001d34, i32* %r16.global-to-local, align 4
  %v0_10001d48 = load i32, i32* @r29, align 4
  store i32 %v0_10001d48, i32* %r3.global-to-local, align 4
  store i32 268442960, i32* @lr, align 4
  %v4_10001d4c = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d4c = call i32 @function_100006a8(i32 %v0_10001d48, i32* %v4_10001d4c, i32 1, i32 1)
  %v0_10001d50 = load i32, i32* @r28, align 4
  %v1_10001d5c = urem i32 %v5_10001d4c, 256
  store i32 %v1_10001d5c, i32* %r15.global-to-local, align 4
  %v0_10001d60 = load i32, i32* @r29, align 4
  store i32 %v0_10001d60, i32* %r3.global-to-local, align 4
  store i32 268442984, i32* @lr, align 4
  %v4_10001d64 = inttoptr i32 %v0_10001d50 to i32*
  %v5_10001d64 = call i32 @function_100006a8(i32 %v0_10001d60, i32* %v4_10001d64, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001d6c = load i32, i32* @global_var_1001b748.16, align 4
  %v0_10001d70 = load i32, i32* @r28, align 4
  store i32 %v5_10001d64, i32* %r30.global-to-local, align 4
  %v0_10001d7c = load i32, i32* @r29, align 4
  store i32 %v0_10001d7c, i32* %r3.global-to-local, align 4
  store i32 268443012, i32* @lr, align 4
  %v4_10001d80 = inttoptr i32 %v0_10001d70 to i32*
  %v5_10001d80 = call i32 @function_100006a8(i32 %v0_10001d7c, i32* %v4_10001d80, i32 25, i32 %v3_10001d6c)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443032, i32* @lr, align 4
  %v3_10001d94 = call i32 @function_10009344(i32 2, i32 3, i32 6)
  store i32 %v3_10001d94, i32* %r3.global-to-local, align 4
  %v3_10001d98 = icmp eq i32 %v3_10001d94, -1
  store i1 %v3_10001d98, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001d94, i32* %r23.global-to-local, align 4
  br i1 %v3_10001d98, label %dec_label_pc_10001f30, label %dec_label_pc_10001da4

dec_label_pc_10001da4:                            ; preds = %dec_label_pc_10001c10
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001db0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268443072, i32* @lr, align 4
  %v4_10001dbc = call i32 @function_10009308(i32 0, i32 3, i32 %v2_10001db0, i32 4)
  store i32 %v4_10001dbc, i32* %r3.global-to-local, align 4
  %v3_10001dc0 = icmp eq i32 %v4_10001dbc, -1
  store i1 %v3_10001dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001dc0, label %dec_label_pc_10001f28, label %dec_label_pc_10001dc8

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001da4
  %v0_10001dc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc8 = icmp slt i32 %v0_10001dc8, 0
  %v3_10001dc8 = icmp eq i32 %v0_10001dc8, 0
  store i1 %v1_10001dc8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001dc8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001dd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001dd4 = urem i32 %v0_10001dd4, 65536
  store i32 %v1_10001dd4, i32* %r25.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001dd8 = urem i32 %v0_10001dd8, 65536
  store i32 %v1_10001dd8, i32* %r17.global-to-local, align 4
  %v0_10001ddc = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ddc = urem i32 %v0_10001ddc, 65536
  store i32 %v1_10001ddc, i32* %r18.global-to-local, align 4
  %v0_10001de0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001de0 = urem i32 %v0_10001de0, 256
  store i32 %v1_10001de0, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10001dc8, 1
  br i1 %tmp33, label %dec_label_pc_10001f90, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001dc8
  %v0_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = icmp eq i32 %v0_10001de8, 0
  store i1 %v3_10001de8, i1* %cr2_eq.global-to-local, align 1
  %v3_10001dec = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001dec, i1* %cr3_eq.global-to-local, align 1
  %v0_10001df0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001df0 = urem i32 %v0_10001df0, 65536
  %v0_10001dd4.not = or i32 %v0_10001dd4, -65536
  %v1_10001df4 = xor i32 %v0_10001dd4.not, 65535
  store i32 %v1_10001df4, i32* %r11.global-to-local, align 4
  %v1_10001dfc = add nuw nsw i32 %v1_10001df0, 52
  store i32 %v1_10001dfc, i32* %r0.global-to-local, align 4
  %v1_10001e00 = add nuw nsw i32 %v1_10001df0, 28
  store i32 %v1_10001e00, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001df0, 52
  %v1_10001e04 = urem i32 %fold, 65536
  store i32 %v1_10001e04, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001df0, 28
  %v1_10001e08 = urem i32 %fold8, 65536
  store i32 %v1_10001e08, i32* %r24.global-to-local, align 4
  %v1_10001e0c = urem i32 %v1_10001df4, 65536
  store i32 %v1_10001e0c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001df0, 8
  %v1_10001e10 = urem i32 %fold9, 65536
  store i32 %v1_10001e10, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001e44

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001f04
  %v0_10001e1c = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 16
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v1_10001e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001e20 = add i32 %v1_10001e20, 16
  %v3_10001e20 = inttoptr i32 %v2_10001e20 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001f20, %dec_label_pc_10001e1c
  %v3_10001e24 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e24, i32* %r9.global-to-local, align 4
  %v0_10001e28 = load i32, i32* @r28, align 4
  %v1_10001e28 = trunc i32 %v0_10001e28 to i16
  %v2_10001e28 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e28 = add i32 %v2_10001e28, 4
  %v4_10001e28 = inttoptr i32 %v3_10001e28 to i16*
  store i16 %v1_10001e28, i16* %v4_10001e28, align 2
  %v0_10001e2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e2c = add i32 %v0_10001e2c, 1
  store i32 %v1_10001e2c, i32* %r31.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001e30 = trunc i32 %v0_10001e30 to i16
  %v2_10001e30 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e30 = inttoptr i32 %v2_10001e30 to i16*
  store i16 %v1_10001e30, i16* %v3_10001e30, align 2
  %v0_10001e34 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e34 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001e34 = icmp slt i32 %v0_10001e34, %v1_10001e34
  %v4_10001e34 = icmp eq i32 %v0_10001e34, %v1_10001e34
  store i1 %v4_10001e34, i1* %cr7_eq.global-to-local, align 1
  %v0_10001e38 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001e38 = trunc i32 %v0_10001e38 to i16
  %v2_10001e38 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e38 = add i32 %v2_10001e38, 2
  %v4_10001e38 = inttoptr i32 %v3_10001e38 to i16*
  store i16 %v1_10001e38, i16* %v4_10001e38, align 2
  %v0_10001e3c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001e3c, i32* %stack_var_-104, align 4
  br i1 %v2_10001e34, label %dec_label_pc_10001e44, label %dec_label_pc_10001f94

dec_label_pc_10001e44:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001de8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443216, i32* @lr, align 4
  %v2_10001e4c = call i32 @function_100096a0(i32 1510, i32 4)
  store i32 %v2_10001e4c, i32* %r3.global-to-local, align 4
  %v3_10001e50 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e50, i32* %r9.global-to-local, align 4
  %v0_10001e54 = load i32, i32* @r31, align 4
  %v1_10001e54 = mul i32 %v0_10001e54, 4
  store i32 %v1_10001e54, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001e5c = load i32, i32* %r20.global-to-local, align 4
  %v3_10001e5c = add i32 %v1_10001e5c, %v1_10001e54
  %v4_10001e5c = inttoptr i32 %v3_10001e5c to i32*
  store i32 %v2_10001e4c, i32* %v4_10001e5c, align 4
  %v0_10001e60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e60 = mul i32 %v0_10001e60, 4
  store i32 %v1_10001e60, i32* %r9.global-to-local, align 4
  %v1_10001e64 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001e64 = add i32 %v1_10001e64, %v1_10001e60
  %v3_10001e64 = inttoptr i32 %v2_10001e64 to i32*
  %v4_10001e64 = load i32, i32* %v3_10001e64, align 4
  store i32 %v4_10001e64, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001e6c = inttoptr i32 %v4_10001e64 to i32*
  %v2_10001e6c = load i32, i32* %v1_10001e6c, align 4
  store i32 %v2_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = add i32 %v4_10001e64, 24
  store i32 %v1_10001e70, i32* %r30.global-to-local, align 4
  %v0_10001e74 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001e74 = trunc i32 %v0_10001e74 to i8
  %v3_10001e74 = add i32 %v4_10001e64, 8
  %v4_10001e74 = inttoptr i32 %v3_10001e74 to i8*
  store i8 %v1_10001e74, i8* %v4_10001e74, align 1
  %v0_10001e78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e78 = add i32 %v0_10001e78, 44
  store i32 %v1_10001e78, i32* %r29.global-to-local, align 4
  %v1_10001e7c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001e7c, i32* %r0.global-to-local, align 4
  %v0_10001e80 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e80 = trunc i32 %v0_10001e80 to i16
  %v2_10001e80 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e80 = add i32 %v2_10001e80, 4
  %v4_10001e80 = inttoptr i32 %v3_10001e80 to i16*
  store i16 %v1_10001e80, i16* %v4_10001e80, align 2
  %v1_10001e84 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001e84, i32* %r0.global-to-local, align 4
  %v0_10001e88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e88 = add i32 %v0_10001e88, 20
  store i32 %v1_10001e88, i32* %r9.global-to-local, align 4
  %v2_10001e8c = inttoptr i32 %v0_10001e88 to i32*
  store i32 %v1_10001e84, i32* %v2_10001e8c, align 4
  %v0_10001e90 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001e90 = trunc i32 %v0_10001e90 to i8
  %v2_10001e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e90 = add i32 %v2_10001e90, 1
  %v4_10001e90 = inttoptr i32 %v3_10001e90 to i8*
  store i8 %v1_10001e90, i8* %v4_10001e90, align 1
  %v0_10001e94 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001e94 = trunc i32 %v0_10001e94 to i16
  %v2_10001e94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e94 = add i32 %v2_10001e94, 2
  %v4_10001e94 = inttoptr i32 %v3_10001e94 to i16*
  store i16 %v1_10001e94, i16* %v4_10001e94, align 2
  %v0_10001e98 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001e98, label %dec_label_pc_10001ea4, label %dec_label_pc_10001e9c

dec_label_pc_10001e9c:                            ; preds = %dec_label_pc_10001e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001ea0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001ea0 = add i32 %v2_10001ea0, 6
  %v4_10001ea0 = inttoptr i32 %v3_10001ea0 to i16*
  store i16 16384, i16* %v4_10001ea0, align 2
  br label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001e44, %dec_label_pc_10001e9c
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001eac = load i32, i32* %r31.global-to-local, align 4
  %v3_10001eac = add i32 %v2_10001eac, 9
  %v4_10001eac = inttoptr i32 %v3_10001eac to i8*
  store i8 47, i8* %v4_10001eac, align 1
  %v0_10001eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001eb0 = trunc i32 %v0_10001eb0 to i16
  %v2_10001eb0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001eb0 = add i32 %v2_10001eb0, 2
  %v4_10001eb0 = inttoptr i32 %v3_10001eb0 to i16*
  store i16 %v1_10001eb0, i16* %v4_10001eb0, align 2
  %v3_10001eb4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001d80, i32* %r11.global-to-local, align 4
  %v1_10001ebc = mul i32 %v3_10001eb4, 24
  store i32 %v1_10001ebc, i32* %r9.global-to-local, align 4
  %v0_10001ec0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001ec0 = add i32 %v0_10001ec0, 24
  %v2_10001ec0 = inttoptr i32 %v1_10001ec0 to i32*
  %v3_10001ec0 = load i32, i32* %v2_10001ec0, align 4
  store i32 %v3_10001ec0, i32* %r0.global-to-local, align 4
  %v2_10001ec4 = add i32 %v0_10001ec0, 12
  %v3_10001ec4 = inttoptr i32 %v2_10001ec4 to i32*
  store i32 %v5_10001d80, i32* %v3_10001ec4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001ecc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ecc = load i32, i32* %r26.global-to-local, align 4
  %v2_10001ecc = add i32 %v1_10001ecc, %v0_10001ecc
  store i32 %v2_10001ecc, i32* %r9.global-to-local, align 4
  %v1_10001ed0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001ed0, i32* %r0.global-to-local, align 4
  %v0_10001ed4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ed4 = add i32 %v0_10001ed4, 16
  %v2_10001ed4 = inttoptr i32 %v1_10001ed4 to i32*
  %v3_10001ed4 = load i32, i32* %v2_10001ed4, align 4
  store i32 %v3_10001ed4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001edc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001edc, i32* %r0.global-to-local, align 4
  %v1_10001ee0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee0 = add i32 %v1_10001ee0, 24
  %v3_10001ee0 = inttoptr i32 %v2_10001ee0 to i32*
  store i32 %v1_10001edc, i32* %v3_10001ee0, align 4
  %v0_10001ee4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001ee4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee4 = add i32 %v1_10001ee4, 16
  %v3_10001ee4 = inttoptr i32 %v2_10001ee4 to i32*
  store i32 %v0_10001ee4, i32* %v3_10001ee4, align 4
  %v0_10001ee8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001ee8 = trunc i32 %v0_10001ee8 to i8
  %v2_10001ee8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ee8 = add i32 %v2_10001ee8, 1
  %v4_10001ee8 = inttoptr i32 %v3_10001ee8 to i8*
  store i8 %v1_10001ee8, i8* %v4_10001ee8, align 1
  %v0_10001eec = load i32, i32* %r24.global-to-local, align 4
  %v1_10001eec = trunc i32 %v0_10001eec to i16
  %v2_10001eec = load i32, i32* %r30.global-to-local, align 4
  %v3_10001eec = add i32 %v2_10001eec, 2
  %v4_10001eec = inttoptr i32 %v3_10001eec to i16*
  store i16 %v1_10001eec, i16* %v4_10001eec, align 2
  %v0_10001ef0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ef0 = trunc i32 %v0_10001ef0 to i16
  %v2_10001ef0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef0 = add i32 %v2_10001ef0, 4
  %v4_10001ef0 = inttoptr i32 %v3_10001ef0 to i16*
  store i16 %v1_10001ef0, i16* %v4_10001ef0, align 2
  %v0_10001ef4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001ef4 = trunc i32 %v0_10001ef4 to i8
  %v2_10001ef4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef4 = add i32 %v2_10001ef4, 8
  %v4_10001ef4 = inttoptr i32 %v3_10001ef4 to i8*
  store i8 %v1_10001ef4, i8* %v4_10001ef4, align 1
  %v0_10001ef8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ef8, label %dec_label_pc_10001f04, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ea4
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10001f00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f00 = add i32 %v2_10001f00, 6
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 16384, i16* %v4_10001f00, align 2
  br label %dec_label_pc_10001f04

dec_label_pc_10001f04:                            ; preds = %dec_label_pc_10001ea4, %dec_label_pc_10001efc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001f08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f08 = add i32 %v2_10001f08, 9
  %v4_10001f08 = inttoptr i32 %v3_10001f08 to i8*
  store i8 17, i8* %v4_10001f08, align 1
  %v0_10001f0c = call i32 @function_10005b38()
  store i32 %v0_10001f0c, i32* %r3.global-to-local, align 4
  %v1_10001f10 = add i32 %v0_10001f0c, -1024
  store i32 %v1_10001f10, i32* %r0.global-to-local, align 4
  %v1_10001f14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f14 = add i32 %v1_10001f14, 12
  %v3_10001f14 = inttoptr i32 %v2_10001f14 to i32*
  store i32 %v0_10001f0c, i32* %v3_10001f14, align 4
  %v0_10001f18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f18 = sub i32 -1, %v0_10001f18
  store i32 %v1_10001f18, i32* %r0.global-to-local, align 4
  %v0_10001f1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001f1c, label %dec_label_pc_10001f20, label %dec_label_pc_10001e1c

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001f04
  %v1_10001f20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 16
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f18, i32* %v3_10001f20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001f28:                            ; preds = %dec_label_pc_10001da4
  %v0_10001f28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001f28, i32* %r3.global-to-local, align 4
  store i32 268443440, i32* @lr, align 4
  %v0_10001f2c = call i32 @function_10008628()
  store i32 %v0_10001f2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f30

dec_label_pc_10001f30:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001f28
  store i32 %v0_10001c28, i32* %r0.global-to-local, align 4
  %v1_10001f44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c18)
  store i32 %v0_10001c5c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c64, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c6c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001c70, i32* %r31.global-to-local, align 4
  %v0_10001f8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f8c

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001dc8
  %v3_10001f90 = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001f90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001f90
  store i32 %v5_10001d80, i32* %r0.global-to-local, align 4
  %v0_10001f98 = load i32, i32* %r15.global-to-local, align 4
  %v3_10001f98 = icmp eq i32 %v0_10001f98, 0
  store i1 %v3_10001f98, i1* %cr2_eq.global-to-local, align 1
  %v0_10001f9c = load i32, i32* %r16.global-to-local, align 4
  %v1_10001f9c = add i32 %v0_10001f9c, 8
  store i32 %v1_10001f9c, i32* %r22.global-to-local, align 4
  %v1_10001fa0 = add i32 %v0_10001f9c, 52
  store i32 %v1_10001fa0, i32* %r24.global-to-local, align 4
  %v3_10001fa4 = icmp eq i32 %v5_10001d80, -1
  store i1 %v3_10001fa4, i1* %cr7_eq.global-to-local, align 1
  %v0_10001fa8 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa8, i32* %r3.global-to-local, align 4
  %v1_10001fac = mul i32 %v0_10001fa8, 268435456
  store i32 %v1_10001fac, i32* %r21.global-to-local, align 4
  %v0_10001fb0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001fb0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001fb0.outer

dec_label_pc_10001fb0.outer:                      ; preds = %dec_label_pc_100020b8, %dec_label_pc_10001f94
  %v1_10001fb0.ph = phi i1 [ %v1_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v1_100020b8, %dec_label_pc_100020b8 ]
  %v0_10001fb0.ph = phi i1 [ %v0_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v0_100020b8, %dec_label_pc_100020b8 ]
  %v2_10001fb0 = or i1 %v1_10001fb0.ph, %v0_10001fb0.ph
  br label %dec_label_pc_10001fb0

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001fb0.outer, %dec_label_pc_10001fb0
  br i1 %v2_10001fb0, label %dec_label_pc_10001fb0, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001fb0, %dec_label_pc_100020b8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001fc4

dec_label_pc_10001fc4:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_10001fb4
  %v0_10001fc4 = phi i32 [ %v1_100020a8, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_10001fb4 ]
  %v1_10001fc4 = mul i32 %v0_10001fc4, 24
  store i32 %v1_10001fc4, i32* %r0.global-to-local, align 4
  %v1_10001fc8 = mul i32 %v0_10001fc4, 4
  store i32 %v1_10001fc8, i32* %r11.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r20.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, %v1_10001fc8
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  %v4_10001fcc = load i32, i32* %v3_10001fcc, align 4
  store i32 %v4_10001fcc, i32* %r28.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, %v1_10001fc4
  %v1_10001fd4 = add i32 %v2_10001fd0, 20
  %v2_10001fd4 = inttoptr i32 %v1_10001fd4 to i8*
  %v3_10001fd4 = load i8, i8* %v2_10001fd4, align 1
  %v4_10001fd4 = zext i8 %v3_10001fd4 to i32
  store i32 %v4_10001fd4, i32* %r9.global-to-local, align 4
  %v1_10001fd8 = add i32 %v4_10001fcc, 24
  store i32 %v1_10001fd8, i32* @r31, align 4
  %v1_10001fdc = add i32 %v4_10001fcc, 44
  store i32 %v1_10001fdc, i32* @r30, align 4
  %v3_10001fe0 = icmp eq i8 %v3_10001fd4, 31
  store i1 %v3_10001fe0, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001fd4, 32
  br i1 %tmp35, label %dec_label_pc_100020c0, label %dec_label_pc_10001fe8

dec_label_pc_10001fe8:                            ; preds = %dec_label_pc_10001fc4
  %v0_10001fe8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001fe8 = mul i32 %v0_10001fe8, 16
  %v2_10001fe8 = udiv i32 %v0_10001fe8, 268435456
  %v3_10001fe8 = or i32 %v2_10001fe8, %v1_10001fe8
  store i32 %v3_10001fe8, i32* %r21.global-to-local, align 4
  %v1_10001fec = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001fe8)
  %v1_10001ff0 = mul nuw i32 %v2_10001fe8, 268435456
  %v2_10001ff0 = urem i32 %v0_10001fe8, 268435456
  %v3_10001ff0 = or i32 %v1_10001ff0, %v2_10001ff0
  store i32 %v3_10001ff0, i32* %r21.global-to-local, align 4
  %v0_10001ff4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ff4, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 65535, i32* @r29, align 4
  %v0_10002000 = load i32, i32* %r25.global-to-local, align 4
  %v4_10002000 = icmp eq i32 %v0_10002000, 65535
  store i1 %v4_10002000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002000, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v1_10002008 = phi i32 [ %v1_10002104, %dec_label_pc_100020f4 ], [ 65535, %dec_label_pc_10001ff8 ]
  %v0_10002008 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002008 = icmp eq i32 %v0_10002008, %v1_10002008
  store i1 %v4_10002008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002008, label %dec_label_pc_1000212c, label %dec_label_pc_10002010

dec_label_pc_10002010:                            ; preds = %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge, %dec_label_pc_10002008
  %v1_10002010 = phi i32 [ %v1_10002010.pre, %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge ], [ %v1_10002008, %dec_label_pc_10002008 ]
  %v0_10002010 = load i32, i32* %r18.global-to-local, align 4
  %v4_10002010 = icmp eq i32 %v0_10002010, %v1_10002010
  store i1 %v4_10002010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002010, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_10002018 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002018, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_1000201c:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_1000201c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000201c = add i32 %v0_1000201c, 16
  %v2_1000201c = inttoptr i32 %v1_1000201c to i32*
  %v3_1000201c = load i32, i32* %v2_1000201c, align 4
  store i32 %v3_1000201c, i32* %r0.global-to-local, align 4
  %v1_10002020 = load i32, i32* @r31, align 4
  %v2_10002020 = add i32 %v1_10002020, 16
  %v3_10002020 = inttoptr i32 %v2_10002020 to i32*
  store i32 %v3_1000201c, i32* %v3_10002020, align 4
  %v0_10002024 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002024, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002028:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148, %dec_label_pc_10002154
  %v0_10002028 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002028 = trunc i32 %v0_10002028 to i16
  %v2_10002028 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002028 = add i32 %v2_10002028, 10
  %v4_10002028 = inttoptr i32 %v3_10002028 to i16*
  store i16 %v1_10002028, i16* %v4_10002028, align 2
  %v0_10002030 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002030, i32* @r3, align 4
  %v2_10002034 = call i32 @function_100043cc(i32 %v0_10002030, i32 20)
  %v3_10002034 = trunc i32 %v2_10002034 to i16
  %v4_1000203c = add i32 %v0_10002030, 10
  %v5_1000203c = inttoptr i32 %v4_1000203c to i16*
  store i16 %v3_10002034, i16* %v5_1000203c, align 2
  %v0_10002040 = load i32, i32* @r31, align 4
  store i32 %v0_10002040, i32* @r3, align 4
  %v0_10002044 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002044 = trunc i32 %v0_10002044 to i16
  %v3_10002044 = add i32 %v0_10002040, 10
  %v4_10002044 = inttoptr i32 %v3_10002044 to i16*
  store i16 %v1_10002044, i16* %v4_10002044, align 2
  %v2_10002048 = call i32 @function_100043cc(i32 %v0_10002040, i32 20)
  %v3_10002048 = trunc i32 %v2_10002048 to i16
  %v0_1000204c = load i32, i32* @r30, align 4
  store i32 %v0_1000204c, i32* @r4, align 4
  %v3_10002050 = load i32, i32* @r31, align 4
  %v4_10002050 = add i32 %v3_10002050, 10
  %v5_10002050 = inttoptr i32 %v4_10002050 to i16*
  store i16 %v3_10002048, i16* %v5_10002050, align 2
  %v0_10002054 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002058 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002058 = trunc i32 %v0_10002058 to i16
  %v2_10002058 = load i32, i32* @r30, align 4
  %v3_10002058 = add i32 %v2_10002058, 6
  %v4_10002058 = inttoptr i32 %v3_10002058 to i16*
  store i16 %v1_10002058, i16* %v4_10002058, align 2
  %v0_1000205c = load i32, i32* @r31, align 4
  store i32 %v0_1000205c, i32* %r3.global-to-local, align 4
  %v0_10002060 = load i32, i32* @r30, align 4
  %v1_10002060 = add i32 %v0_10002060, 4
  %v2_10002060 = inttoptr i32 %v1_10002060 to i16*
  %v3_10002060 = load i16, i16* %v2_10002060, align 2
  %v4_10002060 = zext i16 %v3_10002060 to i32
  %v4_10002064 = call i32 @function_10004430(i32 %v0_1000205c, i32 %v0_1000204c, i32 %v4_10002060, i32 %v0_10002054)
  %v5_10002064 = trunc i32 %v4_10002064 to i16
  store i32 %v4_10002064, i32* %r3.global-to-local, align 4
  %v3_10002068 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002068, i32* %r0.global-to-local, align 4
  %v0_1000206c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000206c = add i32 %v0_1000206c, 16
  %v2_1000206c = inttoptr i32 %v1_1000206c to i32*
  %v3_1000206c = load i32, i32* %v2_1000206c, align 4
  store i32 %v3_1000206c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002074 = mul i32 %v3_10002068, 24
  store i32 %v1_10002074, i32* %r0.global-to-local, align 4
  %v3_10002078 = load i32, i32* @r30, align 4
  %v4_10002078 = add i32 %v3_10002078, 6
  %v5_10002078 = inttoptr i32 %v4_10002078 to i16*
  store i16 %v5_10002064, i16* %v5_10002078, align 2
  %v0_1000207c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002080 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  %v0_10002084 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002084 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002084 = add i32 %v1_10002084, %v0_10002084
  %v0_10002088 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002088 = trunc i32 %v0_10002088 to i16
  %v5_10002088 = inttoptr i32 %v2_10002084 to i16*
  store i16 %v3_10002088, i16* %v5_10002088, align 2
  %v0_1000208c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000208c = add i32 %v2_10002084, 4
  %v3_1000208c = inttoptr i32 %v2_1000208c to i32*
  store i32 %v0_1000208c, i32* %v3_1000208c, align 4
  %v0_10002090 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002094 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002094 = trunc i32 %v0_10002094 to i16
  %v3_10002094 = add i32 %v2_10002084, 2
  %v4_10002094 = inttoptr i32 %v3_10002094 to i16*
  store i16 %v1_10002094, i16* %v4_10002094, align 2
  store i32 268443812, i32* @lr, align 4
  %v6_100020a0 = call i32 @function_100092c8(i32 %v0_10002080, i32 %v0_1000207c, i32 %v0_10002090, i32 16384, i32 %v2_10002084, i32 16)
  store i32 %v6_100020a0, i32* %r3.global-to-local, align 4
  %v3_100020a4 = load i32, i32* %stack_var_-104, align 4
  %v1_100020a8 = add i32 %v3_100020a4, 1
  store i32 %v1_100020a8, i32* %r9.global-to-local, align 4
  %v1_100020ac = load i32, i32* %r19.global-to-local, align 4
  %v2_100020ac = icmp slt i32 %v1_100020a8, %v1_100020ac
  %v4_100020ac = icmp eq i32 %v1_100020a8, %v1_100020ac
  store i1 %v4_100020ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100020a8, i32* %stack_var_-104, align 4
  br i1 %v2_100020ac, label %dec_label_pc_10001fc4, label %dec_label_pc_100020b8

dec_label_pc_100020b8:                            ; preds = %dec_label_pc_10002028
  %v0_100020b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100020b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100020b8 = or i1 %v0_100020b8, %v1_100020b8
  br i1 %v2_100020b8, label %dec_label_pc_10001fb0.outer, label %dec_label_pc_10001fb4

dec_label_pc_100020c0:                            ; preds = %dec_label_pc_10001fc4
  %v1_100020c0 = add i32 %v2_10001fd0, 16
  %v2_100020c0 = inttoptr i32 %v1_100020c0 to i32*
  %v3_100020c0 = load i32, i32* %v2_100020c0, align 4
  store i32 %v3_100020c0, i32* %r29.global-to-local, align 4
  %v0_100020c4 = call i32 @function_10005b38()
  store i32 %v0_100020c4, i32* %r3.global-to-local, align 4
  %v3_100020c8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100020c8, i32* %r9.global-to-local, align 4
  %v0_100020cc = load i32, i32* %r21.global-to-local, align 4
  %v1_100020cc = mul i32 %v0_100020cc, 16
  %v2_100020cc = udiv i32 %v0_100020cc, 268435456
  %v3_100020cc = or i32 %v2_100020cc, %v1_100020cc
  store i32 %v3_100020cc, i32* %r21.global-to-local, align 4
  %v1_100020d0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100020cc)
  %v1_100020d4 = mul nuw i32 %v2_100020cc, 268435456
  %v2_100020d4 = urem i32 %v0_100020cc, 268435456
  %v3_100020d4 = or i32 %v1_100020d4, %v2_100020d4
  store i32 %v3_100020d4, i32* %r21.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100020d8 = mul i32 %v0_100020d8, 24
  %v1_100020dc = load i32, i32* %r26.global-to-local, align 4
  %v2_100020dc = add i32 %v1_100020dc, %v1_100020d8
  store i32 %v2_100020dc, i32* %r9.global-to-local, align 4
  %v1_100020e0 = add i32 %v2_100020dc, 20
  %v2_100020e0 = inttoptr i32 %v1_100020e0 to i8*
  %v3_100020e0 = load i8, i8* %v2_100020e0, align 1
  %v4_100020e0 = zext i8 %v3_100020e0 to i32
  store i32 %v4_100020e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100020e0, 64
  %v2_100020e4 = zext i8 %tmp to i32
  %v3_100020e4 = lshr i32 %v0_100020c4, %v2_100020e4
  store i32 %v3_100020e4, i32* %r3.global-to-local, align 4
  %v0_100020e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100020e8 = add i32 %v3_100020e4, %v0_100020e8
  store i32 %v2_100020e8, i32* %r29.global-to-local, align 4
  %v1_100020ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100020ec = add i32 %v1_100020ec, 16
  %v3_100020ec = inttoptr i32 %v2_100020ec to i32*
  store i32 %v2_100020e8, i32* %v3_100020ec, align 4
  %v0_100020f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100020f0, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_100020f4:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100020f8 = call i32 @function_10005b38()
  store i32 %v0_100020f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002100 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002100 = add i32 %v1_10002100, 12
  %v3_10002100 = inttoptr i32 %v2_10002100 to i32*
  store i32 %v0_100020f8, i32* %v3_10002100, align 4
  %v0_10002104 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002104 = load i32, i32* @r29, align 4
  %v4_10002104 = icmp eq i32 %v0_10002104, %v1_10002104
  store i1 %v4_10002104, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002104, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_1000210c:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v0_1000210c = call i32 @function_10005b38()
  %v0_10002110 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002110 = load i32, i32* @r29, align 4
  %v4_10002110 = icmp eq i32 %v0_10002110, %v1_10002110
  store i1 %v4_10002110, i1* %cr7_eq.global-to-local, align 1
  %v1_10002114 = urem i32 %v0_1000210c, 65536
  store i32 %v1_10002114, i32* %r3.global-to-local, align 4
  %v1_10002118 = add nsw i32 %v1_10002114, -1000
  store i32 %v1_10002118, i32* %r0.global-to-local, align 4
  %v1_1000211c = trunc i32 %v0_1000210c to i16
  %v2_1000211c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000211c = add i32 %v2_1000211c, 4
  %v4_1000211c = inttoptr i32 %v3_1000211c to i16*
  store i16 %v1_1000211c, i16* %v4_1000211c, align 2
  %v0_10002120 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002120 = sub i32 -1, %v0_10002120
  store i32 %v1_10002120, i32* %r0.global-to-local, align 4
  %v1_10002124 = trunc i32 %v1_10002120 to i16
  %v2_10002124 = load i32, i32* @r31, align 4
  %v3_10002124 = add i32 %v2_10002124, 4
  %v4_10002124 = inttoptr i32 %v3_10002124 to i16*
  store i16 %v1_10002124, i16* %v4_10002124, align 2
  br i1 %v4_10002110, label %dec_label_pc_1000212c, label %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge

dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge: ; preds = %dec_label_pc_1000210c
  %v1_10002010.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002010

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_1000210c, %dec_label_pc_10002008
  %v0_1000212c = call i32 @function_10005b38()
  %v1_1000212c = trunc i32 %v0_1000212c to i16
  store i32 %v0_1000212c, i32* %r3.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002130 = load i32, i32* @r29, align 4
  %v4_10002130 = icmp eq i32 %v0_10002130, %v1_10002130
  store i1 %v4_10002130, i1* %cr7_eq.global-to-local, align 1
  %v3_10002134 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002134 = add i32 %v3_10002134, 44
  %v5_10002134 = inttoptr i32 %v4_10002134 to i16*
  store i16 %v1_1000212c, i16* %v5_10002134, align 2
  br i1 %v4_10002130, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_1000213c:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_1000213c = call i32 @function_10005b38()
  %v1_1000213c = trunc i32 %v0_1000213c to i16
  store i32 %v0_1000213c, i32* %r3.global-to-local, align 4
  %v3_10002140 = load i32, i32* @r30, align 4
  %v4_10002140 = add i32 %v3_10002140, 2
  %v5_10002140 = inttoptr i32 %v4_10002140 to i16*
  store i16 %v1_1000213c, i16* %v5_10002140, align 2
  %v0_10002144 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002144, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_10002148:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_10002148 = call i32 @function_10005b38()
  store i32 %v0_10002148, i32* %r3.global-to-local, align 4
  %v1_1000214c = load i32, i32* @r31, align 4
  %v2_1000214c = add i32 %v1_1000214c, 16
  %v3_1000214c = inttoptr i32 %v2_1000214c to i32*
  store i32 %v0_10002148, i32* %v3_1000214c, align 4
  %v0_10002150 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002150, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002154:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148
  %v0_10002154 = load i32, i32* @r30, align 4
  %v1_10002154 = add i32 %v0_10002154, 8
  store i32 %v1_10002154, i32* @r3, align 4
  %v0_10002158 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002158, i32* @r4, align 4
  %v0_1000215c = call i32 @function_10005d0c()
  store i32 %v0_1000215c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002028

; uselistorder directives
  uselistorder i32 %v0_1000213c, { 1, 0 }
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_10002120, { 1, 0 }
  uselistorder i32 %v1_10002114, { 1, 0 }
  uselistorder i32 %v0_1000210c, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v0_100020cc, { 2, 1, 0 }
  uselistorder i1 %v1_100020b8, { 1, 0 }
  uselistorder i1 %v0_100020b8, { 1, 0 }
  uselistorder i32 %v1_100020a8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002084, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002064, { 1, 0 }
  uselistorder i32 %v0_10001fe8, { 2, 1, 0 }
  uselistorder i32 %v4_10001fcc, { 1, 0, 2 }
  uselistorder i32 %v1_10001fc8, { 1, 0 }
  uselistorder i32 %v1_10001f18, { 1, 0 }
  uselistorder i32 %v1_10001e60, { 1, 0 }
  uselistorder i32 %v1_10001e54, { 1, 0 }
  uselistorder i32 %v1_10001df0, { 1, 0 }
  uselistorder i32 %v0_10001df0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001de0, { 1, 2, 0 }
  uselistorder i32 %v0_10001dd4, { 1, 0 }
  uselistorder i32 %v5_10001d80, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10002154, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10001f94, { 1, 0 }
  uselistorder label %dec_label_pc_10001f30, { 1, 0 }
  uselistorder label %dec_label_pc_10001f04, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
}

define i32 @function_10002164(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002164:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10002168 = load i32, i32* @lr, align 4
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v0_1000216c = call i32 @__asm_mfcr()
  store i32 %v0_1000216c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_1000216c, i32* %r23.global-to-local, align 4
  %v0_100021a4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100021ac = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100021b4 = load i32, i32* @r30, align 4
  store i32 268444116, i32* @lr, align 4
  %v2_100021d0 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_100021d0, i32* %r24.global-to-local, align 4
  %v0_100021d8 = load i32, i32* @r28, align 4
  %v0_100021dc = load i32, i32* @r29, align 4
  store i32 %v0_100021dc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268444140, i32* @lr, align 4
  %v4_100021e8 = inttoptr i32 %v0_100021d8 to i32*
  %v5_100021e8 = call i32 @function_100006a8(i32 %v0_100021dc, i32* %v4_100021e8, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100021f8 = load i32, i32* @r28, align 4
  %v1_100021fc = urem i32 %v5_100021e8, 256
  store i32 %v1_100021fc, i32* %r19.global-to-local, align 4
  %v0_10002200 = load i32, i32* @r29, align 4
  store i32 %v0_10002200, i32* %r3.global-to-local, align 4
  store i32 268444168, i32* @lr, align 4
  %v4_10002204 = inttoptr i32 %v0_100021f8 to i32*
  %v5_10002204 = call i32 @function_100006a8(i32 %v0_10002200, i32* %v4_10002204, i32 3, i32 65535)
  %v0_10002208 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10002204, i32* %r21.global-to-local, align 4
  %v0_10002218 = load i32, i32* @r29, align 4
  store i32 %v0_10002218, i32* %r3.global-to-local, align 4
  store i32 268444192, i32* @lr, align 4
  %v4_1000221c = inttoptr i32 %v0_10002208 to i32*
  %v5_1000221c = call i32 @function_100006a8(i32 %v0_10002218, i32* %v4_1000221c, i32 4, i32 64)
  %v0_10002220 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1000222c = urem i32 %v5_1000221c, 256
  store i32 %v1_1000222c, i32* %r26.global-to-local, align 4
  %v0_10002230 = load i32, i32* @r29, align 4
  store i32 %v0_10002230, i32* %r3.global-to-local, align 4
  store i32 268444216, i32* @lr, align 4
  %v4_10002234 = inttoptr i32 %v0_10002220 to i32*
  %v5_10002234 = call i32 @function_100006a8(i32 %v0_10002230, i32* %v4_10002234, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10002244 = load i32, i32* @r28, align 4
  %v1_10002248 = urem i32 %v5_10002234, 256
  store i32 %v1_10002248, i32* @r31, align 4
  %v0_1000224c = load i32, i32* @r29, align 4
  store i32 %v0_1000224c, i32* %r3.global-to-local, align 4
  store i32 268444244, i32* @lr, align 4
  %v4_10002250 = inttoptr i32 %v0_10002244 to i32*
  %v5_10002250 = call i32 @function_100006a8(i32 %v0_1000224c, i32* %v4_10002250, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_1000225c = load i32, i32* @r28, align 4
  store i32 %v5_10002250, i32* %r22.global-to-local, align 4
  %v0_10002264 = load i32, i32* @r29, align 4
  store i32 %v0_10002264, i32* %r3.global-to-local, align 4
  store i32 268444268, i32* @lr, align 4
  %v4_10002268 = inttoptr i32 %v0_1000225c to i32*
  %v5_10002268 = call i32 @function_100006a8(i32 %v0_10002264, i32* %v4_10002268, i32 7, i32 27015)
  store i32 %v5_10002268, i32* %r29.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 268444280, i32* @lr, align 4
  %v1_10002274 = call i32 @function_100078f0(i32 20)
  store i32 20, i32* %r3.global-to-local, align 4
  %v3_10002280 = call i32 @function_1000783c(i32 20, i32* nonnull %stack_var_-84)
  store i32 %v3_10002280, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444312, i32* @lr, align 4
  %v3_10002294 = call i32 @function_10009344(i32 2, i32 3, i32 17)
  store i32 %v3_10002294, i32* %r3.global-to-local, align 4
  %v3_10002298 = icmp eq i32 %v3_10002294, -1
  store i32 %v3_10002294, i32* %r25.global-to-local, align 4
  br i1 %v3_10002298, label %dec_label_pc_100024e8, label %dec_label_pc_100022a4

dec_label_pc_100022a4:                            ; preds = %dec_label_pc_10002164
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_100022b0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100022b0, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268444352, i32* @lr, align 4
  %v4_100022bc = call i32 @function_10009308(i32 0, i32 3, i32 %v2_100022b0, i32 4)
  store i32 %v4_100022bc, i32* %r3.global-to-local, align 4
  %v3_100022c0 = icmp eq i32 %v4_100022bc, -1
  br i1 %v3_100022c0, label %dec_label_pc_100024e0, label %dec_label_pc_100022c8

dec_label_pc_100022c8:                            ; preds = %dec_label_pc_100022a4
  %v0_100022c8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100022c8 = icmp slt i32 %v0_100022c8, 0
  %v3_100022c8 = icmp eq i32 %v0_100022c8, 0
  store i1 %v1_100022c8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100022c8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100022d0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100022d0 = urem i32 %v0_100022d0, 65536
  store i32 %v1_100022d0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_100022d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100022d8 = urem i32 %v0_100022d8, 65536
  store i32 %v1_100022d8, i32* %r21.global-to-local, align 4
  %v0_100022dc = load i32, i32* %r29.global-to-local, align 4
  %v1_100022dc = urem i32 %v0_100022dc, 65536
  store i32 %v1_100022dc, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100022c8, 1
  br i1 %tmp32, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %dec_label_pc_100022c8
  %v0_100022e4 = load i32, i32* @r31, align 4
  %v3_100022e4 = icmp eq i32 %v0_100022e4, 0
  store i1 %v3_100022e4, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_10002360, %dec_label_pc_100022e4
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268444432, i32* @lr, align 4
  %v2_1000230c = call i32 @function_100096a0(i32 128, i32 1)
  store i32 %v2_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002310, i32* %r0.global-to-local, align 4
  %v0_10002314 = load i32, i32* @r31, align 4
  %v1_10002314 = mul i32 %v0_10002314, 4
  store i32 %v1_10002314, i32* %r9.global-to-local, align 4
  %v0_10002318 = load i32, i32* @r30, align 4
  %v2_1000231c = load i32, i32* %r24.global-to-local, align 4
  %v3_1000231c = add i32 %v2_1000231c, %v1_10002314
  %v4_1000231c = inttoptr i32 %v3_1000231c to i32*
  store i32 %v2_1000230c, i32* %v4_1000231c, align 4
  %v0_10002320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002320 = mul i32 %v0_10002320, 4
  store i32 %v1_10002320, i32* %r0.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002324 = add i32 %v0_10002324, %v1_10002320
  %v3_10002324 = inttoptr i32 %v2_10002324 to i32*
  %v4_10002324 = load i32, i32* %v3_10002324, align 4
  store i32 %v4_10002324, i32* %r10.global-to-local, align 4
  %v1_10002328 = inttoptr i32 %v4_10002324 to i32*
  %v2_10002328 = load i32, i32* %v1_10002328, align 4
  store i32 %v2_10002328, i32* %r0.global-to-local, align 4
  %v1_1000232c = add i32 %v4_10002324, 32
  store i32 %v1_1000232c, i32* %r3.global-to-local, align 4
  %v0_10002330 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  %v3_10002330 = add i32 %v4_10002324, 4
  %v4_10002330 = inttoptr i32 %v3_10002330 to i16*
  store i16 %v1_10002330, i16* %v4_10002330, align 2
  %v0_10002334 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002334 = add i32 %v0_10002334, 20
  store i32 %v1_10002334, i32* %r8.global-to-local, align 4
  %v1_10002338 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002338, i32* %r0.global-to-local, align 4
  %v1_1000233c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000233c, i32* %r0.global-to-local, align 4
  %v1_10002340 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002340 = inttoptr i32 %v1_10002340 to i32*
  store i32 %v1_1000233c, i32* %v2_10002340, align 4
  %v0_10002344 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002344 = trunc i32 %v0_10002344 to i8
  %v2_10002344 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002344 = add i32 %v2_10002344, 1
  %v4_10002344 = inttoptr i32 %v3_10002344 to i8*
  store i8 %v1_10002344, i8* %v4_10002344, align 1
  %v3_10002348 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002348, i32* %r9.global-to-local, align 4
  %v0_1000234c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000234c = trunc i32 %v0_1000234c to i8
  %v2_1000234c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000234c = add i32 %v2_1000234c, 8
  %v4_1000234c = inttoptr i32 %v3_1000234c to i8*
  store i8 %v1_1000234c, i8* %v4_1000234c, align 1
  %v0_10002350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002350 = add i32 %v0_10002350, 32
  store i32 %v1_10002350, i32* %r9.global-to-local, align 4
  %v1_10002354 = trunc i32 %v1_10002350 to i16
  %v2_10002354 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002354 = add i32 %v2_10002354, 2
  %v4_10002354 = inttoptr i32 %v3_10002354 to i16*
  store i16 %v1_10002354, i16* %v4_10002354, align 2
  %v0_10002358 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002358, label %dec_label_pc_10002360, label %dec_label_pc_1000235c

dec_label_pc_1000235c:                            ; preds = %dec_label_pc_10002304
  %v0_1000235c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000235c = trunc i32 %v0_1000235c to i16
  %v2_1000235c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000235c = add i32 %v2_1000235c, 6
  %v4_1000235c = inttoptr i32 %v3_1000235c to i16*
  store i16 %v1_1000235c, i16* %v4_1000235c, align 2
  br label %dec_label_pc_10002360

dec_label_pc_10002360:                            ; preds = %dec_label_pc_10002304, %dec_label_pc_1000235c
  %v0_10002360 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002360 = trunc i32 %v0_10002360 to i8
  %v2_10002360 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002360 = add i32 %v2_10002360, 9
  %v4_10002360 = inttoptr i32 %v3_10002360 to i8*
  store i8 %v1_10002360, i8* %v4_10002360, align 1
  %v0_10002364 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002364 = trunc i32 %v0_10002364 to i16
  %v2_10002364 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002364 = add i32 %v2_10002364, 20
  %v4_10002364 = inttoptr i32 %v3_10002364 to i16*
  store i16 %v1_10002364, i16* %v4_10002364, align 2
  %v3_10002368 = load i32, i32* %stack_var_-88, align 4
  %v3_1000236c = load i32, i32* @global_var_1001b748.16, align 4
  store i32 %v3_1000236c, i32* %r0.global-to-local, align 4
  %v1_10002370 = mul i32 %v3_10002368, 24
  store i32 %v1_10002370, i32* %r9.global-to-local, align 4
  %v0_10002374 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002374 = trunc i32 %v0_10002374 to i16
  %v2_10002374 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002374 = add i32 %v2_10002374, 2
  %v4_10002374 = inttoptr i32 %v3_10002374 to i16*
  store i16 %v1_10002374, i16* %v4_10002374, align 2
  %v0_10002378 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002378 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002378 = add i32 %v1_10002378, 12
  %v3_10002378 = inttoptr i32 %v2_10002378 to i32*
  store i32 %v0_10002378, i32* %v3_10002378, align 4
  %v0_1000237c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000237c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000237c = add i32 %v1_1000237c, %v0_1000237c
  store i32 %v2_1000237c, i32* %r9.global-to-local, align 4
  %v1_10002380 = add i32 %v2_1000237c, 16
  %v2_10002380 = inttoptr i32 %v1_10002380 to i32*
  %v3_10002380 = load i32, i32* %v2_10002380, align 4
  store i32 %v3_10002380, i32* %r0.global-to-local, align 4
  %v3_10002384 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002384, i32* %r11.global-to-local, align 4
  %v0_10002388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002388 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002388 = add i32 %v1_10002388, 28
  %v3_10002388 = inttoptr i32 %v2_10002388 to i32*
  store i32 %v0_10002388, i32* %v3_10002388, align 4
  %v0_1000238c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000238c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000238c = add i32 %v1_1000238c, 16
  %v3_1000238c = inttoptr i32 %v2_1000238c to i32*
  store i32 %v0_1000238c, i32* %v3_1000238c, align 4
  %v0_10002390 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002390 = add i32 %v0_10002390, 12
  store i32 %v1_10002390, i32* %r11.global-to-local, align 4
  %v1_10002394 = trunc i32 %v1_10002390 to i16
  %v2_10002394 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002394 = add i32 %v2_10002394, 4
  %v4_10002394 = inttoptr i32 %v3_10002394 to i16*
  store i16 %v1_10002394, i16* %v4_10002394, align 2
  %v3_10002398 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002398, i32* %r5.global-to-local, align 4
  store i32 268444576, i32* @lr, align 4
  %v3_1000239c = call i32 @function_10007eec(i32 %v3_10002398, i32 %v0_10002318, i32 %v3_10002398)
  store i32 %v3_1000239c, i32* %r3.global-to-local, align 4
  %v3_100023a0 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_100023a0, i32* %r9.global-to-local, align 4
  %v1_100023a4 = add i32 %v3_100023a0, 1
  %v1_100023a8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023a8 = icmp slt i32 %v1_100023a4, %v1_100023a8
  store i32 %v1_100023a4, i32* %stack_var_-88, align 4
  br i1 %v2_100023a8, label %dec_label_pc_10002304, label %dec_label_pc_100023b4.preheader.loopexit

dec_label_pc_100023b4.preheader.loopexit:         ; preds = %dec_label_pc_10002360
  %v0_100023b4.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100023b4.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100023b4.outer

dec_label_pc_100023b4.outer:                      ; preds = %dec_label_pc_10002480, %dec_label_pc_100022c8, %dec_label_pc_100023b4.preheader.loopexit
  %v1_100023b4.ph34 = phi i1 [ %v1_100022c8, %dec_label_pc_100022c8 ], [ %v1_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v1_10002480, %dec_label_pc_10002480 ]
  %v0_100023b4.ph35 = phi i1 [ %v3_100022c8, %dec_label_pc_100022c8 ], [ %v0_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v0_10002480, %dec_label_pc_10002480 ]
  %v2_100023b4 = or i1 %v1_100023b4.ph34, %v0_100023b4.ph35
  br label %dec_label_pc_100023b4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_100023b4.outer, %dec_label_pc_100023b4
  br i1 %v2_100023b4, label %dec_label_pc_100023b4, label %dec_label_pc_100023b8

dec_label_pc_100023b8:                            ; preds = %dec_label_pc_100023b4, %dec_label_pc_10002480
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100023c8

dec_label_pc_100023c8:                            ; preds = %dec_label_pc_10002408, %dec_label_pc_100023b8
  %v0_100023d8 = phi i32 [ %v1_10002470, %dec_label_pc_10002408 ], [ 0, %dec_label_pc_100023b8 ]
  %v1_100023c8 = mul i32 %v0_100023d8, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, %v1_100023c8
  store i32 %v2_100023d4, i32* %r10.global-to-local, align 4
  %v1_100023d8 = mul i32 %v0_100023d8, 4
  store i32 %v1_100023d8, i32* %r0.global-to-local, align 4
  %v1_100023dc = add i32 %v2_100023d4, 20
  %v2_100023dc = inttoptr i32 %v1_100023dc to i8*
  %v3_100023dc = load i8, i8* %v2_100023dc, align 1
  %v4_100023dc = zext i8 %v3_100023dc to i32
  store i32 %v4_100023dc, i32* %r9.global-to-local, align 4
  %v0_100023e0 = load i32, i32* %r24.global-to-local, align 4
  %v2_100023e0 = add i32 %v0_100023e0, %v1_100023d8
  %v3_100023e0 = inttoptr i32 %v2_100023e0 to i32*
  %v4_100023e0 = load i32, i32* %v3_100023e0, align 4
  store i32 %v4_100023e0, i32* %r28.global-to-local, align 4
  %v1_100023e8 = add i32 %v4_100023e0, 20
  store i32 %v1_100023e8, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_100023dc, 32
  br i1 %tmp33, label %dec_label_pc_10002488, label %dec_label_pc_100023f0

dec_label_pc_100023f0:                            ; preds = %dec_label_pc_100023c8
  %v0_100023f0 = load i32, i32* %r20.global-to-local, align 4
  %v4_100023f0 = icmp eq i32 %v0_100023f0, 65535
  br i1 %v4_100023f0, label %dec_label_pc_100024b4, label %dec_label_pc_100023f8

dec_label_pc_100023f8:                            ; preds = %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge, %dec_label_pc_100023f0
  %v1_100023f8 = phi i32 [ %v1_100023f8.pre, %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge ], [ 65535, %dec_label_pc_100023f0 ]
  %v0_100023f8 = load i32, i32* %r21.global-to-local, align 4
  %v4_100023f8 = icmp eq i32 %v0_100023f8, %v1_100023f8
  br i1 %v4_100023f8, label %dec_label_pc_100024c4, label %dec_label_pc_10002400

dec_label_pc_10002400:                            ; preds = %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge, %dec_label_pc_100023f8
  %v1_10002400 = phi i32 [ %v1_10002400.pre, %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge ], [ %v1_100023f8, %dec_label_pc_100023f8 ]
  %v0_10002400 = load i32, i32* %r22.global-to-local, align 4
  %v4_10002400 = icmp eq i32 %v0_10002400, %v1_10002400
  br i1 %v4_10002400, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_10002408:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400, %dec_label_pc_100024d4
  %v0_10002408 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002408 = trunc i32 %v0_10002408 to i16
  %v2_10002408 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002408 = add i32 %v2_10002408, 10
  %v4_10002408 = inttoptr i32 %v3_10002408 to i16*
  store i16 %v1_10002408, i16* %v4_10002408, align 2
  %v0_10002410 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002410, i32* @r3, align 4
  %v2_10002414 = call i32 @function_100043cc(i32 %v0_10002410, i32 20)
  %v3_10002414 = trunc i32 %v2_10002414 to i16
  store i32 %v2_10002414, i32* %r3.global-to-local, align 4
  %v3_10002418 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002418, i32* %r6.global-to-local, align 4
  %v3_1000241c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000241c = add i32 %v3_1000241c, 10
  %v5_1000241c = inttoptr i32 %v4_1000241c to i16*
  store i16 %v3_10002414, i16* %v5_1000241c, align 2
  %v0_10002420 = load i32, i32* @r31, align 4
  store i32 %v0_10002420, i32* @r4, align 4
  %v0_10002424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002424 = trunc i32 %v0_10002424 to i16
  %v3_10002424 = add i32 %v0_10002420, 6
  %v4_10002424 = inttoptr i32 %v3_10002424 to i16*
  store i16 %v1_10002424, i16* %v4_10002424, align 2
  %v0_10002428 = load i32, i32* %r6.global-to-local, align 4
  %v1_10002428 = add i32 %v0_10002428, 12
  store i32 %v1_10002428, i32* %r6.global-to-local, align 4
  %v0_1000242c = load i32, i32* @r31, align 4
  %v1_1000242c = add i32 %v0_1000242c, 4
  %v2_1000242c = inttoptr i32 %v1_1000242c to i16*
  %v3_1000242c = load i16, i16* %v2_1000242c, align 2
  %v4_1000242c = zext i16 %v3_1000242c to i32
  store i32 %v4_1000242c, i32* %r5.global-to-local, align 4
  %v0_10002430 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  %v4_10002434 = call i32 @function_10004430(i32 %v0_10002430, i32 %v0_10002420, i32 %v4_1000242c, i32 %v1_10002428)
  %v5_10002434 = trunc i32 %v4_10002434 to i16
  store i32 %v4_10002434, i32* %r3.global-to-local, align 4
  %v3_10002438 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002438, i32* %r7.global-to-local, align 4
  %v0_1000243c = load i32, i32* @r31, align 4
  %v1_1000243c = add i32 %v0_1000243c, 2
  %v2_1000243c = inttoptr i32 %v1_1000243c to i16*
  %v3_1000243c = load i16, i16* %v2_1000243c, align 2
  %v4_1000243c = zext i16 %v3_1000243c to i32
  store i32 %v4_1000243c, i32* %r0.global-to-local, align 4
  %v0_10002440 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002444 = mul i32 %v3_10002438, 24
  store i32 %v1_10002444, i32* %r7.global-to-local, align 4
  %v3_10002448 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002448, i32* %r5.global-to-local, align 4
  %v4_1000244c = add i32 %v0_1000243c, 6
  %v5_1000244c = inttoptr i32 %v4_1000244c to i16*
  store i16 %v5_10002434, i16* %v5_1000244c, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10002454 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002454 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002454 = add i32 %v1_10002454, %v0_10002454
  store i32 %v2_10002454, i32* %r7.global-to-local, align 4
  %v0_10002458 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002458 = add i32 %v0_10002458, 32
  store i32 %v1_10002458, i32* %r5.global-to-local, align 4
  %v0_1000245c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000245c = trunc i32 %v0_1000245c to i16
  %v3_1000245c = add i32 %v2_10002454, 2
  %v4_1000245c = inttoptr i32 %v3_1000245c to i16*
  store i16 %v1_1000245c, i16* %v4_1000245c, align 2
  %v0_10002460 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268444780, i32* @lr, align 4
  %v6_10002468 = call i32 @function_100092c8(i32 %v0_10002460, i32 %v0_10002440, i32 %v1_10002458, i32 16384, i32 %v2_10002454, i32 16)
  store i32 %v6_10002468, i32* %r3.global-to-local, align 4
  %v3_1000246c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_1000246c, i32* %r9.global-to-local, align 4
  %v1_10002470 = add i32 %v3_1000246c, 1
  store i32 %v1_10002470, i32* %r11.global-to-local, align 4
  %v1_10002474 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002474 = icmp slt i32 %v1_10002470, %v1_10002474
  store i32 %v1_10002470, i32* %stack_var_-88, align 4
  br i1 %v2_10002474, label %dec_label_pc_100023c8, label %dec_label_pc_10002480

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002408
  %v0_10002480 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002480 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002480 = or i1 %v0_10002480, %v1_10002480
  br i1 %v2_10002480, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100023b8

dec_label_pc_10002488:                            ; preds = %dec_label_pc_100023c8
  %v1_10002488 = add i32 %v2_100023d4, 16
  %v2_10002488 = inttoptr i32 %v1_10002488 to i32*
  %v3_10002488 = load i32, i32* %v2_10002488, align 4
  store i32 %v3_10002488, i32* %r29.global-to-local, align 4
  %v0_1000248c = call i32 @function_10005b38()
  store i32 %v0_1000248c, i32* %r3.global-to-local, align 4
  %v3_10002490 = load i32, i32* %stack_var_-88, align 4
  %v0_10002494 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002494 = load i32, i32* %r30.global-to-local, align 4
  %v4_10002494 = icmp eq i32 %v0_10002494, %v1_10002494
  %v1_10002498 = mul i32 %v3_10002490, 24
  %v1_1000249c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000249c = add i32 %v1_1000249c, %v1_10002498
  store i32 %v2_1000249c, i32* %r9.global-to-local, align 4
  %v1_100024a0 = add i32 %v2_1000249c, 20
  %v2_100024a0 = inttoptr i32 %v1_100024a0 to i8*
  %v3_100024a0 = load i8, i8* %v2_100024a0, align 1
  %v4_100024a0 = zext i8 %v3_100024a0 to i32
  store i32 %v4_100024a0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100024a0, 64
  %v2_100024a4 = zext i8 %tmp to i32
  %v3_100024a4 = lshr i32 %v0_1000248c, %v2_100024a4
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v0_100024a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100024a8 = add i32 %v3_100024a4, %v0_100024a8
  store i32 %v2_100024a8, i32* %r29.global-to-local, align 4
  %v1_100024ac = load i32, i32* %r28.global-to-local, align 4
  %v2_100024ac = add i32 %v1_100024ac, 16
  %v3_100024ac = inttoptr i32 %v2_100024ac to i32*
  store i32 %v2_100024a8, i32* %v3_100024ac, align 4
  br i1 %v4_10002494, label %dec_label_pc_100024b4, label %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge

dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge: ; preds = %dec_label_pc_10002488
  %v1_100023f8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100023f8

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002488, %dec_label_pc_100023f0
  %v0_100024b4 = call i32 @function_10005b38()
  %v1_100024b4 = trunc i32 %v0_100024b4 to i16
  store i32 %v0_100024b4, i32* %r3.global-to-local, align 4
  %v0_100024b8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024b8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024b8 = icmp eq i32 %v0_100024b8, %v1_100024b8
  %v3_100024bc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024bc = add i32 %v3_100024bc, 4
  %v5_100024bc = inttoptr i32 %v4_100024bc to i16*
  store i16 %v1_100024b4, i16* %v5_100024bc, align 2
  br i1 %v4_100024b8, label %dec_label_pc_100024c4, label %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge

dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge: ; preds = %dec_label_pc_100024b4
  %v1_10002400.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002400

dec_label_pc_100024c4:                            ; preds = %dec_label_pc_100024b4, %dec_label_pc_100023f8
  %v0_100024c4 = call i32 @function_10005b38()
  %v1_100024c4 = trunc i32 %v0_100024c4 to i16
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  %v0_100024c8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100024c8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024c8 = icmp eq i32 %v0_100024c8, %v1_100024c8
  %v3_100024cc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024cc = add i32 %v3_100024cc, 20
  %v5_100024cc = inttoptr i32 %v4_100024cc to i16*
  store i16 %v1_100024c4, i16* %v5_100024cc, align 2
  br i1 %v4_100024c8, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_100024d4:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400
  %v0_100024d4 = call i32 @function_10005b38()
  %v1_100024d4 = trunc i32 %v0_100024d4 to i16
  store i32 %v0_100024d4, i32* %r3.global-to-local, align 4
  %v3_100024d8 = load i32, i32* @r31, align 4
  %v4_100024d8 = add i32 %v3_100024d8, 2
  %v5_100024d8 = inttoptr i32 %v4_100024d8 to i16*
  store i16 %v1_100024d4, i16* %v5_100024d8, align 2
  br label %dec_label_pc_10002408

dec_label_pc_100024e0:                            ; preds = %dec_label_pc_100022a4
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100024e0, i32* %r3.global-to-local, align 4
  store i32 268444904, i32* @lr, align 4
  %v0_100024e4 = call i32 @function_10008628()
  store i32 %v0_100024e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_10002164, %dec_label_pc_100024e0
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v1_100024fc = call %0 @__asm_mtcrf(i32 24, i32 %v0_1000216c)
  store i32 %v0_100021a4, i32* %r28.global-to-local, align 4
  store i32 %v0_100021ac, i32* %r29.global-to-local, align 4
  store i32 %v0_100021b4, i32* %r30.global-to-local, align 4
  %v0_10002540 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002540

; uselistorder directives
  uselistorder i32 %v0_100024d4, { 1, 0 }
  uselistorder i32 %v0_100024c4, { 1, 0 }
  uselistorder i32 %v0_100024b4, { 1, 0 }
  uselistorder i1 %v1_10002480, { 1, 0 }
  uselistorder i1 %v0_10002480, { 1, 0 }
  uselistorder i32 %v1_10002470, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002434, { 1, 0 }
  uselistorder i32 %v2_10002414, { 1, 0 }
  uselistorder i32 %v1_100023d8, { 1, 0 }
  uselistorder i32 %v1_10002320, { 1, 0 }
  uselistorder i32 %v1_10002314, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_10002408, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100023b8, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10002360, { 1, 0 }
}

define i32 @function_10002544(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002544:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10002548 = load i32, i32* @lr, align 4
  store i32 %v0_10002548, i32* %r0.global-to-local, align 4
  %v0_1000254c = call i32 @__asm_mfcr()
  store i32 %v0_1000254c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_1000255c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000254c, i32* %r15.global-to-local, align 4
  %v0_1000257c = load i32, i32* @r24, align 4
  %v0_10002580 = load i32, i32* @r25, align 4
  %v0_10002584 = load i32, i32* @r26, align 4
  %v0_10002588 = load i32, i32* @r27, align 4
  %v0_1000258c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_1000259c = load i32, i32* @r31, align 4
  %v0_100025b0 = load i32, i32* @r30, align 4
  store i32 268445112, i32* @lr, align 4
  %v2_100025b4 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_100025b4, i32* %r16.global-to-local, align 4
  %v0_100025bc = load i32, i32* @r28, align 4
  %v0_100025c8 = load i32, i32* @r29, align 4
  store i32 %v0_100025c8, i32* %r3.global-to-local, align 4
  store i32 268445136, i32* @lr, align 4
  %v4_100025cc = inttoptr i32 %v0_100025bc to i32*
  %v5_100025cc = call i32 @function_100006a8(i32 %v0_100025c8, i32* %v4_100025cc, i32 2, i32 0)
  %v5_100025dc = trunc i32 %v5_100025cc to i8
  %v0_100025e4 = load i32, i32* @r28, align 4
  %v0_100025e8 = load i32, i32* @r29, align 4
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 268445168, i32* @lr, align 4
  %v4_100025ec = inttoptr i32 %v0_100025e4 to i32*
  %v5_100025ec = call i32 @function_100006a8(i32 %v0_100025e8, i32* %v4_100025ec, i32 3, i32 65535)
  %v0_100025f0 = load i32, i32* @r28, align 4
  store i32 %v5_100025ec, i32* %r19.global-to-local, align 4
  %v0_10002600 = load i32, i32* @r29, align 4
  store i32 %v0_10002600, i32* %r3.global-to-local, align 4
  store i32 268445192, i32* @lr, align 4
  %v4_10002604 = inttoptr i32 %v0_100025f0 to i32*
  %v5_10002604 = call i32 @function_100006a8(i32 %v0_10002600, i32* %v4_10002604, i32 4, i32 64)
  %v0_10002608 = load i32, i32* @r28, align 4
  %v5_10002614 = trunc i32 %v5_10002604 to i8
  %v0_1000261c = load i32, i32* @r29, align 4
  store i32 %v0_1000261c, i32* %r3.global-to-local, align 4
  store i32 268445220, i32* @lr, align 4
  %v4_10002620 = inttoptr i32 %v0_10002608 to i32*
  %v5_10002620 = call i32 @function_100006a8(i32 %v0_1000261c, i32* %v4_10002620, i32 5, i32 0)
  %v0_10002630 = load i32, i32* @r28, align 4
  %v1_10002634 = urem i32 %v5_10002620, 256
  store i32 %v1_10002634, i32* %r27.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r29, align 4
  store i32 %v0_10002638, i32* %r3.global-to-local, align 4
  store i32 268445248, i32* @lr, align 4
  %v4_1000263c = inttoptr i32 %v0_10002630 to i32*
  %v5_1000263c = call i32 @function_100006a8(i32 %v0_10002638, i32* %v4_1000263c, i32 6, i32 65535)
  %v0_10002640 = load i32, i32* @r28, align 4
  store i32 %v5_1000263c, i32* %r20.global-to-local, align 4
  %v0_10002650 = load i32, i32* @r29, align 4
  store i32 %v0_10002650, i32* %r3.global-to-local, align 4
  store i32 268445272, i32* @lr, align 4
  %v4_10002654 = inttoptr i32 %v0_10002640 to i32*
  %v5_10002654 = call i32 @function_100006a8(i32 %v0_10002650, i32* %v4_10002654, i32 7, i32 53)
  %v0_1000265c = load i32, i32* @r28, align 4
  store i32 %v5_10002654, i32* %r23.global-to-local, align 4
  %v0_1000266c = load i32, i32* @r29, align 4
  store i32 %v0_1000266c, i32* %r3.global-to-local, align 4
  store i32 268445300, i32* @lr, align 4
  %v4_10002670 = inttoptr i32 %v0_1000265c to i32*
  %v5_10002670 = call i32 @function_100006a8(i32 %v0_1000266c, i32* %v4_10002670, i32 9, i32 65535)
  %v0_10002674 = load i32, i32* @r28, align 4
  store i32 %v5_10002670, i32* %r24.global-to-local, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002674 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 0, i32 12)
  %v0_10002694 = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r26.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_10002694 to i32*
  %v5_100026a0 = call i32 @function_10000238(i32 %v0_1000269c, i32* %v4_100026a0, i32 8, i32 0)
  store i32 %v5_100026a0, i32* %r25.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445360, i32* @lr, align 4
  %v1_100026ac = call i32 @function_100078f0(i32 21)
  store i32 21, i32* %r3.global-to-local, align 4
  %v3_100026b8 = call i32 @function_1000783c(i32 21, i32* null)
  store i32 %v3_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445384, i32* @lr, align 4
  %v2_100026c4 = call i32 @function_10008790(i32 %v3_100026b8, i32 0)
  store i32 %v2_100026c4, i32* @r31, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445396, i32* @lr, align 4
  %v1_100026d0 = call i32 @function_10007864(i32 21)
  store i32 %v1_100026d0, i32* %r3.global-to-local, align 4
  %v0_100026d4 = load i32, i32* @r31, align 4
  %v1_100026d4 = icmp slt i32 %v0_100026d4, 0
  %v3_100026d4 = icmp eq i32 %v0_100026d4, 0
  store i1 %v3_100026d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100026d4, label %dec_label_pc_100027a4, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002544
  %v2_100026dc = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_100026dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445424, i32* @lr, align 4
  %v3_100026ec = call i32 @function_10008860(i32 %v0_100026d4, i32 %v2_100026dc, i32 2048)
  store i32 %v3_100026ec, i32* %r30.global-to-local, align 4
  %v0_100026f4 = load i32, i32* @r31, align 4
  store i32 %v0_100026f4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100026fc.20 to i32), i32* @lr, align 4
  %v0_100026f8 = call i32 @function_10008628()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445444, i32* @lr, align 4
  %v1_10002700 = call i32 @function_100078f0(i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  %v3_1000270c = call i32 @function_1000783c(i32 22, i32* null)
  %v0_10002710 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100026dc, i32* %r3.global-to-local, align 4
  %v3_1000271c = bitcast i32* %stack_var_-2148 to i8*
  %v4_1000271c = call i32 @function_10008218(i8* %v3_1000271c, i32 %v0_10002710, i32 %v3_1000270c)
  store i32 %v4_1000271c, i32* @r31, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v1_10002728 = call i32 @function_10007864(i32 22)
  store i32 %v1_10002728, i32* %r3.global-to-local, align 4
  %v0_1000272c = load i32, i32* @r31, align 4
  %v3_1000272c = icmp eq i32 %v0_1000272c, -1
  store i1 %v3_1000272c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000272c, label %dec_label_pc_100027a4, label %dec_label_pc_10002734

dec_label_pc_10002734:                            ; preds = %dec_label_pc_100026dc
  %v0_10002734 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002734 = icmp sgt i32 %v0_10002734, %v0_1000272c
  %v4_10002734 = icmp eq i32 %v0_10002734, %v0_1000272c
  store i1 %v4_10002734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002734, label %dec_label_pc_1000273c, label %dec_label_pc_100027a4

dec_label_pc_1000273c:                            ; preds = %dec_label_pc_10002734
  %v2_1000273c = sub i32 %v0_10002734, %v0_1000272c
  store i32 %v2_1000273c, i32* %r0.global-to-local, align 4
  %v1_10002740 = add i32 %v0_10002734, -1
  store i32 %v1_10002740, i32* %r3.global-to-local, align 4
  store i32 %v2_1000273c, i32* %ctr.global-to-local, align 4
  %v0_1000274c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000274c = add i32 %v0_1000274c, %v0_1000272c
  store i32 %v2_1000274c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10002754 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10002754, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002758

dec_label_pc_10002758:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_1000273c
  %v0_100027a0 = phi i32 [ %v1_100027a0, %dec_label_pc_1000279c ], [ %v2_1000273c, %dec_label_pc_1000273c ]
  %v0_1000279c = phi i32 [ %v1_1000279c, %dec_label_pc_1000279c ], [ %v0_1000272c, %dec_label_pc_1000273c ]
  %v0_10002764 = phi i32 [ %v1_10002764, %dec_label_pc_1000279c ], [ %v2_1000274c, %dec_label_pc_1000273c ]
  %v0_10002758 = phi i32 [ %v0_100027584, %dec_label_pc_1000279c ], [ 0, %dec_label_pc_1000273c ]
  %v3_10002758 = icmp eq i32 %v0_10002758, 0
  store i1 %v3_10002758, i1* %cr7_eq.global-to-local, align 1
  %v1_1000275c = inttoptr i32 %v0_10002764 to i8*
  %v2_1000275c = load i8, i8* %v1_1000275c, align 1
  %v3_1000275c = zext i8 %v2_1000275c to i32
  store i32 %v3_1000275c, i32* %r9.global-to-local, align 4
  %v4_10002760 = icmp eq i32 %v1_10002740, %v0_1000279c
  %v1_10002764 = add i32 %v0_10002764, 1
  store i32 %v1_10002764, i32* %r11.global-to-local, align 4
  br i1 %v3_10002758, label %dec_label_pc_10002774, label %dec_label_pc_10002784

dec_label_pc_10002774:                            ; preds = %dec_label_pc_10002758
  %v3_10002774 = icmp eq i8 %v2_1000275c, 9
  store i1 %v3_10002774, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_1000275c, label %dec_label_pc_10002780 [
    i8 32, label %dec_label_pc_1000279c
    i8 9, label %dec_label_pc_1000279c
  ]

dec_label_pc_10002780:                            ; preds = %dec_label_pc_10002774
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10002784

dec_label_pc_10002784:                            ; preds = %dec_label_pc_10002758, %dec_label_pc_10002780
  %v0_100027585 = phi i32 [ %v0_10002758, %dec_label_pc_10002758 ], [ 1, %dec_label_pc_10002780 ]
  %v1_10002784 = add nuw nsw i32 %v3_1000275c, 208
  %v1_10002788 = urem i32 %v1_10002784, 256
  store i32 %v1_10002788, i32* %r0.global-to-local, align 4
  %v2_1000278c = icmp ugt i32 %v1_10002788, 9
  %v3_1000278c = icmp eq i32 %v1_10002788, 9
  store i1 %v3_1000278c, i1* %cr7_eq.global-to-local, align 1
  %v3_10002768.not = icmp ne i8 %v2_1000275c, 46
  %brmerge.not = and i1 %v3_10002768.not, %v2_1000278c
  %brmerge26 = or i1 %v4_10002760, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_100027d8, label %dec_label_pc_1000279c

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002784, %dec_label_pc_10002774, %dec_label_pc_10002774
  %v0_100027584 = phi i32 [ 0, %dec_label_pc_10002774 ], [ 0, %dec_label_pc_10002774 ], [ %v0_100027585, %dec_label_pc_10002784 ]
  %v1_1000279c = add i32 %v0_1000279c, 1
  %v1_100027a0 = add i32 %v0_100027a0, -1
  store i32 %v1_100027a0, i32* %ctr.global-to-local, align 4
  %v2_100027a0 = icmp eq i32 %v1_100027a0, 0
  br i1 %v2_100027a0, label %dec_label_pc_100027a4, label %dec_label_pc_10002758

dec_label_pc_100027a4:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_10002734, %dec_label_pc_100026dc, %dec_label_pc_10002544
  %v0_100027a4 = call i32 @function_10005b38()
  %v1_100027a8 = urem i32 %v0_100027a4, 4
  store i32 %v1_100027a8, i32* %r3.global-to-local, align 4
  %v3_100027ac = icmp eq i32 %v1_100027a8, 1
  store i1 %v3_100027ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027ac, label %dec_label_pc_10002b90, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a4
  %v1_100027ac = icmp eq i32 %v1_100027a8, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100027ac, label %dec_label_pc_10002ba8, label %dec_label_pc_100027bc

dec_label_pc_100027bc:                            ; preds = %dec_label_pc_100027b4
  %v2_100027bc = icmp eq i32 %v1_100027a8, 3
  %v3_100027bc = icmp eq i32 %v1_100027a8, 2
  store i1 %v3_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027bc, label %dec_label_pc_10002b9c, label %dec_label_pc_100027c4

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_100027bc
  store i1 %v2_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100027bc, label %dec_label_pc_100027cc, label %dec_label_pc_10002808

dec_label_pc_100027cc:                            ; preds = %dec_label_pc_100027c4
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_100027d8:                            ; preds = %dec_label_pc_10002784
  %v2_100027d8 = sub i32 %v0_1000279c, %v0_1000272c
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100027ec.21 to i32), i32* @lr, align 4
  %v3_100027e8 = call i32 @function_10007eec(i32 %v2_10002754, i32 %v2_1000274c, i32 %v2_100027d8)
  %v2_100027ec = ptrtoint i32* %stack_var_-2184 to i32
  %v2_100027f0 = add i32 %v2_100027d8, %v2_100027ec
  store i32 %v2_100027f0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100027f8 = add i32 %v2_100027f0, 4
  %v4_100027f8 = inttoptr i32 %v3_100027f8 to i8*
  store i8 0, i8* %v4_100027f8, align 1
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 268445700, i32* @lr, align 4
  %v1_10002800 = call i32 @function_100090dc(i32 %v2_10002754)
  store i32 %v1_10002800, i32* %r3.global-to-local, align 4
  store i32 %v1_10002800, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002808:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_10002ba8, %dec_label_pc_10002b9c, %dec_label_pc_10002b90, %dec_label_pc_100027cc, %dec_label_pc_100027d8
  %v0_10002808 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002808 = icmp eq i32 %v0_10002808, 0
  store i1 %v3_10002808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002808, label %dec_label_pc_10002b30, label %dec_label_pc_10002810

dec_label_pc_10002810:                            ; preds = %dec_label_pc_10002808
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445720, i32* @lr, align 4
  %v1_10002814 = inttoptr i32 %v0_10002808 to i8*
  %v2_10002814 = call i32 @function_10007e68(i8* %v1_10002814)
  store i32 %v2_10002814, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445740, i32* @lr, align 4
  %v3_10002828 = call i32 @function_10009344(i32 2, i32 3, i32 17)
  store i32 %v3_10002828, i32* %r3.global-to-local, align 4
  %v3_1000282c = icmp eq i32 %v3_10002828, -1
  store i1 %v3_1000282c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002828, i32* %r22.global-to-local, align 4
  br i1 %v3_1000282c, label %dec_label_pc_10002b30, label %dec_label_pc_10002838

dec_label_pc_10002838:                            ; preds = %dec_label_pc_10002810
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002844 = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268445780, i32* @lr, align 4
  %v4_10002850 = call i32 @function_10009308(i32 0, i32 3, i32 %v2_10002844, i32 4)
  store i32 %v4_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = icmp eq i32 %v4_10002850, -1
  store i1 %v3_10002854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002854, label %dec_label_pc_10002b28, label %dec_label_pc_1000285c

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_10002838
  %v0_1000285c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000285c = icmp slt i32 %v0_1000285c, 0
  %v3_1000285c = icmp eq i32 %v0_1000285c, 0
  store i1 %v1_1000285c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000285c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r17.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r18.global-to-local, align 4
  %v0_1000286c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000286c = urem i32 %v0_1000286c, 65536
  store i32 %v1_1000286c, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 65536
  store i32 %v1_10002874, i32* %r20.global-to-local, align 4
  %v0_10002878 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002878 = urem i32 %v0_10002878, 256
  store i32 %v1_10002878, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_1000285c, 1
  %v1_10002b1c = load i32, i32* @r29, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v1_10002878
  store i32 %v2_10002b1c, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_10002880

dec_label_pc_10002880:                            ; preds = %dec_label_pc_1000285c
  %v1_10002884 = icmp slt i32 %v1_10002b1c, 0
  %v3_10002884 = icmp eq i32 %v1_10002b1c, 0
  store i1 %v1_10002884, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002884, i1* %cr3_eq.global-to-local, align 1
  %v1_10002888 = urem i32 %v2_10002b1c, 65536
  %v0_1000288c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000288c = icmp eq i32 %v0_1000288c, 0
  store i1 %v3_1000288c, i1* %cr2_eq.global-to-local, align 1
  %v1_10002890 = add nuw nsw i32 %v1_10002888, 27
  store i32 %v1_10002890, i32* %r0.global-to-local, align 4
  %v1_10002894 = add nuw nsw i32 %v1_10002888, 47
  store i32 %v1_10002894, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10002b1c, 47
  %v1_10002898 = urem i32 %fold, 65536
  store i32 %v1_10002898, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10002b1c, 27
  %v1_1000289c = urem i32 %fold3, 65536
  store i32 %v1_1000289c, i32* %r27.global-to-local, align 4
  %v1_100028a0 = add i32 %v1_10002b1c, 1
  store i32 %v1_100028a0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100028f0 = sext i8 %v5_100025dc to i32
  %v4_100028f8 = sext i8 %v5_10002614 to i32
  br label %dec_label_pc_100028a8

dec_label_pc_100028a8:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002880
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268445876, i32* @lr, align 4
  %v2_100028b0 = call i32 @function_100096a0(i32 600, i32 1)
  store i32 %v2_100028b0, i32* %r3.global-to-local, align 4
  %v3_100028b4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100028b4, i32* %r0.global-to-local, align 4
  %v0_100028b8 = load i32, i32* @r31, align 4
  %v1_100028b8 = mul i32 %v0_100028b8, 4
  store i32 %v1_100028b8, i32* %r9.global-to-local, align 4
  %v2_100028bc = load i32, i32* %r16.global-to-local, align 4
  %v3_100028bc = add i32 %v2_100028bc, %v1_100028b8
  %v4_100028bc = inttoptr i32 %v3_100028bc to i32*
  store i32 %v2_100028b0, i32* %v4_100028bc, align 4
  %v0_100028c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100028c0 = mul i32 %v0_100028c0, 4
  store i32 %v1_100028c0, i32* %r0.global-to-local, align 4
  %v0_100028c4 = load i32, i32* %r16.global-to-local, align 4
  %v2_100028c4 = add i32 %v0_100028c4, %v1_100028c0
  %v3_100028c4 = inttoptr i32 %v2_100028c4 to i32*
  %v4_100028c4 = load i32, i32* %v3_100028c4, align 4
  store i32 %v4_100028c4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100028cc = inttoptr i32 %v4_100028c4 to i32*
  %v2_100028cc = load i32, i32* %v1_100028cc, align 4
  store i32 %v2_100028cc, i32* %r9.global-to-local, align 4
  %v1_100028d0 = add i32 %v4_100028c4, 20
  store i32 %v1_100028d0, i32* %r10.global-to-local, align 4
  %v0_100028d4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100028d4 = trunc i32 %v0_100028d4 to i16
  %v3_100028d4 = add i32 %v4_100028c4, 4
  %v4_100028d4 = inttoptr i32 %v3_100028d4 to i16*
  store i16 %v1_100028d4, i16* %v4_100028d4, align 2
  %v0_100028d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100028d8 = add i32 %v0_100028d8, 28
  store i32 %v1_100028d8, i32* %r8.global-to-local, align 4
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100028e4, i32* %r9.global-to-local, align 4
  %v1_100028e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v0_100028ec = load i32, i32* %r26.global-to-local, align 4
  %v1_100028ec = trunc i32 %v0_100028ec to i16
  %v2_100028ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100028ec = add i32 %v2_100028ec, 2
  %v4_100028ec = inttoptr i32 %v3_100028ec to i16*
  store i16 %v1_100028ec, i16* %v4_100028ec, align 2
  store i32 %v4_100028f0, i32* %r0.global-to-local, align 4
  %v2_100028f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100028f4 = add i32 %v2_100028f4, 1
  %v4_100028f4 = inttoptr i32 %v3_100028f4 to i8*
  store i8 %v5_100025dc, i8* %v4_100028f4, align 1
  store i32 %v4_100028f8, i32* %r7.global-to-local, align 4
  %v2_100028fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100028fc = add i32 %v2_100028fc, 8
  %v4_100028fc = inttoptr i32 %v3_100028fc to i8*
  store i8 %v5_10002614, i8* %v4_100028fc, align 1
  %v0_10002900 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002900, label %dec_label_pc_1000290c, label %dec_label_pc_10002904

dec_label_pc_10002904:                            ; preds = %dec_label_pc_100028a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002908 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002908 = add i32 %v2_10002908, 6
  %v4_10002908 = inttoptr i32 %v3_10002908 to i16*
  store i16 16384, i16* %v4_10002908, align 2
  br label %dec_label_pc_1000290c

dec_label_pc_1000290c:                            ; preds = %dec_label_pc_100028a8, %dec_label_pc_10002904
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_10002914 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002914 = add i32 %v2_10002914, 9
  %v4_10002914 = inttoptr i32 %v3_10002914 to i8*
  store i8 17, i8* %v4_10002914, align 1
  %v0_10002918 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002918 = add i32 %v0_10002918, 41
  store i32 %v1_10002918, i32* %r9.global-to-local, align 4
  %v0_1000291c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000291c = add i32 %v2_1000291c, 4
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v0_10002920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002920 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002920 = add i32 %v1_10002920, %v0_10002920
  store i32 %v2_10002920, i32* %r30.global-to-local, align 4
  %v3_10002924 = load i32, i32* @global_var_1001b748.16, align 4
  store i32 %v3_10002924, i32* %r0.global-to-local, align 4
  %v1_10002928 = add i32 %v2_10002920, 1
  store i32 %v1_10002928, i32* %r31.global-to-local, align 4
  %v0_1000292c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000292c = trunc i32 %v0_1000292c to i16
  %v2_1000292c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000292c = add i32 %v2_1000292c, 2
  %v4_1000292c = inttoptr i32 %v3_1000292c to i16*
  store i16 %v1_1000292c, i16* %v4_1000292c, align 2
  %v0_10002930 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002930, i32* %r3.global-to-local, align 4
  %v0_10002934 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002934 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002934 = add i32 %v1_10002934, 12
  %v3_10002934 = inttoptr i32 %v2_10002934 to i32*
  store i32 %v0_10002934, i32* %v3_10002934, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_1000293c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000293c = trunc i32 %v0_1000293c to i16
  %v2_1000293c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000293c = add i32 %v2_1000293c, 20
  %v4_1000293c = inttoptr i32 %v3_1000293c to i16*
  store i16 %v1_1000293c, i16* %v4_1000293c, align 2
  %v0_10002940 = load i32, i32* %r25.global-to-local, align 4
  %v0_10002944 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002944 = trunc i32 %v0_10002944 to i16
  %v2_10002944 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002944 = add i32 %v2_10002944, 2
  %v4_10002944 = inttoptr i32 %v3_10002944 to i16*
  store i16 %v1_10002944, i16* %v4_10002944, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000294c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000294c = add i32 %v2_1000294c, 4
  %v4_1000294c = inttoptr i32 %v3_1000294c to i16*
  store i16 1, i16* %v4_1000294c, align 2
  %v0_10002950 = load i32, i32* @r28, align 4
  %v0_10002954 = load i32, i32* @r21, align 4
  %v1_10002954 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002954 = add i32 %v1_10002954, 16
  %v3_10002954 = inttoptr i32 %v2_10002954 to i32*
  store i32 %v0_10002954, i32* %v3_10002954, align 4
  %v0_10002958 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002958 = trunc i32 %v0_10002958 to i16
  %v2_10002958 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002958 = add i32 %v2_10002958, 28
  %v4_10002958 = inttoptr i32 %v3_10002958 to i16*
  store i16 %v1_10002958, i16* %v4_10002958, align 2
  %v0_1000295c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000295c = trunc i32 %v0_1000295c to i8
  %v2_1000295c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000295c = add i32 %v2_1000295c, 40
  %v4_1000295c = inttoptr i32 %v3_1000295c to i8*
  store i8 %v1_1000295c, i8* %v4_1000295c, align 1
  store i32 268446052, i32* @lr, align 4
  %v3_10002960 = call i32 @function_10007eec(i32 %v0_10002930, i32 %v0_10002940, i32 %v0_10002950)
  store i32 %v3_10002960, i32* %r3.global-to-local, align 4
  %v0_10002964 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10002964 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10002964 = or i1 %v0_10002964, %v1_10002964
  br i1 %v2_10002964, label %dec_label_pc_100029b0, label %dec_label_pc_10002968

dec_label_pc_10002968:                            ; preds = %dec_label_pc_1000290c
  %v0_10002968 = load i32, i32* @r29, align 4
  store i32 %v0_10002968, i32* %ctr.global-to-local, align 4
  %v0_1000296c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000296c, i32* %r3.global-to-local, align 4
  %v0_10002970 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10002970, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10002990

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002990
  %v1_10002980 = urem i32 %v1_10002994, 256
  br label %dec_label_pc_10002984

dec_label_pc_10002984:                            ; preds = %dec_label_pc_100029a0, %dec_label_pc_10002980
  %v0_1000298c = phi i32 [ %v0_1000298c.pre, %dec_label_pc_100029a0 ], [ %v0_1000298c18, %dec_label_pc_10002980 ]
  %v0_10002988 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v0_1000298816, %dec_label_pc_10002980 ]
  %v2_100029a013 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v2_100029a0, %dec_label_pc_10002980 ]
  %v0_10002984 = phi i32 [ %v0_10002984.pre, %dec_label_pc_100029a0 ], [ %v0_10002990, %dec_label_pc_10002980 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100029a0 ], [ %v1_10002980, %dec_label_pc_10002980 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_10002984 = add i32 %v0_10002984, 1
  store i32 %v1_10002984, i32* %r10.global-to-local, align 4
  %v1_10002988 = add i32 %v0_10002988, 1
  store i32 %v1_10002988, i32* %r3.global-to-local, align 4
  %v1_1000298c = add i32 %v0_1000298c, -1
  store i32 %v1_1000298c, i32* %ctr.global-to-local, align 4
  %v2_1000298c = icmp eq i32 %v1_1000298c, 0
  br i1 %v2_1000298c, label %dec_label_pc_100029b8.loopexit, label %dec_label_pc_10002990

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002984, %dec_label_pc_10002968
  %v0_1000298c18 = phi i32 [ %v1_1000298c, %dec_label_pc_10002984 ], [ %v0_10002968, %dec_label_pc_10002968 ]
  %v0_1000298816 = phi i32 [ %v1_10002988, %dec_label_pc_10002984 ], [ %v0_1000296c, %dec_label_pc_10002968 ]
  %v2_100029a0 = phi i32 [ %v2_100029a013, %dec_label_pc_10002984 ], [ %v0_10002970, %dec_label_pc_10002968 ]
  %v0_100029a0 = phi i32 [ %storemerge, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v0_10002990 = phi i32 [ %v1_10002984, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v1_10002990 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002990 = add i32 %v1_10002990, %v0_10002990
  %v3_10002990 = inttoptr i32 %v2_10002990 to i8*
  %v4_10002990 = load i8, i8* %v3_10002990, align 1
  %v5_10002990 = zext i8 %v4_10002990 to i32
  store i32 %v5_10002990, i32* %r0.global-to-local, align 4
  %v1_10002994 = add nsw i32 %v0_100029a0, 1
  store i32 %v1_10002994, i32* %r11.global-to-local, align 4
  %v3_10002998 = icmp eq i8 %v4_10002990, 46
  store i1 %v3_10002998, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002998, label %dec_label_pc_100029a0, label %dec_label_pc_10002980

dec_label_pc_100029a0:                            ; preds = %dec_label_pc_10002990
  %v1_100029a0 = trunc i32 %v0_100029a0 to i8
  %v3_100029a0 = inttoptr i32 %v2_100029a0 to i8*
  store i8 %v1_100029a0, i8* %v3_100029a0, align 1
  %v0_100029a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100029a4, i32* %r9.global-to-local, align 4
  %v0_10002984.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000298c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10002984

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_1000290c
  %v0_100029b0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100029b0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8.loopexit:                   ; preds = %dec_label_pc_10002984
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.loopexit, %dec_label_pc_100029b0
  %v2_100029b8 = phi i32 [ %v2_100029a013, %dec_label_pc_100029b8.loopexit ], [ %v0_100029b0, %dec_label_pc_100029b0 ]
  %v0_100029b8.off0 = phi i8 [ %extract.t, %dec_label_pc_100029b8.loopexit ], [ 0, %dec_label_pc_100029b0 ]
  %v3_100029b8 = inttoptr i32 %v2_100029b8 to i8*
  store i8 %v0_100029b8.off0, i8* %v3_100029b8, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100029c0 = load i32, i32* @r29, align 4
  %v2_100029c0 = add i32 %v1_100029c0, %v0_100029c0
  store i32 %v2_100029c0, i32* %r9.global-to-local, align 4
  %v3_100029c4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100029c4, i32* %r11.global-to-local, align 4
  %v3_100029c8 = add i32 %v2_100029c0, 4
  %v4_100029c8 = inttoptr i32 %v3_100029c8 to i16*
  store i16 1, i16* %v4_100029c8, align 2
  %v0_100029cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100029cc = add i32 %v0_100029cc, 1
  store i32 %v1_100029cc, i32* %r31.global-to-local, align 4
  %v0_100029d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100029d0 = trunc i32 %v0_100029d0 to i16
  %v2_100029d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100029d0 = add i32 %v2_100029d0, 2
  %v4_100029d0 = inttoptr i32 %v3_100029d0 to i16*
  store i16 %v1_100029d0, i16* %v4_100029d0, align 2
  %v0_100029d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100029d4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100029d4 = icmp slt i32 %v0_100029d4, %v1_100029d4
  %v4_100029d4 = icmp eq i32 %v0_100029d4, %v1_100029d4
  store i1 %v4_100029d4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100029d4, i32* %stack_var_-2184, align 4
  br i1 %v2_100029d4, label %dec_label_pc_100028a8, label %dec_label_pc_100029e0.preheader.loopexit

dec_label_pc_100029e0.preheader.loopexit:         ; preds = %dec_label_pc_100029b8
  %v0_100029e0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029e0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029e0.preheader

dec_label_pc_100029e0.preheader:                  ; preds = %dec_label_pc_10002ad8, %dec_label_pc_1000285c, %dec_label_pc_100029e0.preheader.loopexit
  %v1_100029e0 = phi i1 [ %v1_1000285c, %dec_label_pc_1000285c ], [ %v1_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v1_10002ad8, %dec_label_pc_10002ad8 ]
  %v0_100029e0 = phi i1 [ %v3_1000285c, %dec_label_pc_1000285c ], [ %v0_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v0_10002ad8, %dec_label_pc_10002ad8 ]
  %v2_100029e0 = or i1 %v1_100029e0, %v0_100029e0
  br label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_100029e0.preheader, %dec_label_pc_100029e0
  br i1 %v2_100029e0, label %dec_label_pc_100029e0, label %dec_label_pc_100029e4

dec_label_pc_100029e4:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_10002ad8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_100029f4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100029f4 = icmp eq i32 %v0_100029f4, 65535
  store i1 %v4_100029f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100029f8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100029f8 = icmp slt i32 %v0_100029f8, 65535
  %v4_100029f8 = icmp eq i32 %v0_100029f8, 65535
  store i1 %v2_100029f8, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_100029f8, i1* %cr3_eq.global-to-local, align 1
  %v0_100029fc = load i32, i32* %r20.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  store i1 %v4_100029fc, i1* %cr2_eq.global-to-local, align 1
  %v0_10002a00 = load i32, i32* @r24, align 4
  %v1_10002a00 = add i32 %v0_10002a00, 27
  store i32 %v1_10002a00, i32* @r30, align 4
  %v0_10002a04 = call i32 @__asm_mfcr()
  store i32 %v0_10002a04, i32* %r3.global-to-local, align 4
  %v1_10002a08 = mul i32 %v0_10002a04, 268435456
  store i32 %v1_10002a08, i32* @r26, align 4
  %v0_10002a0c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002a0c = load i32, i32* %r0.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  store i1 %v4_10002a0c, i1* %cr7_eq.global-to-local, align 1
  %v0_10002a10 = load i32, i32* @r24, align 4
  %v1_10002a10 = add i32 %v0_10002a10, 47
  store i32 %v1_10002a10, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002a18 = call i32 @__asm_mfcr()
  store i32 %v0_10002a18, i32* %r3.global-to-local, align 4
  %v1_10002a1c = mul i32 %v0_10002a18, 268435456
  store i32 %v1_10002a1c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_10002a24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, %dec_label_pc_100029e4
  %v0_10002a28 = phi i32 [ %v0_10002a28.pre, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v1_10002a1c, %dec_label_pc_100029e4 ]
  %v0_10002a24 = phi i32 [ %v1_10002ac8, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v0_10002a24.pre, %dec_label_pc_100029e4 ]
  %v1_10002a24 = mul i32 %v0_10002a24, 4
  store i32 %v1_10002a24, i32* %r0.global-to-local, align 4
  %v1_10002a28 = mul i32 %v0_10002a28, 16
  %v2_10002a28 = udiv i32 %v0_10002a28, 268435456
  %v3_10002a28 = or i32 %v2_10002a28, %v1_10002a28
  store i32 %v3_10002a28, i32* %r27.global-to-local, align 4
  %v1_10002a2c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a28)
  %v1_10002a30 = mul nuw i32 %v2_10002a28, 268435456
  %v2_10002a30 = urem i32 %v0_10002a28, 268435456
  %v3_10002a30 = or i32 %v1_10002a30, %v2_10002a30
  store i32 %v3_10002a30, i32* @r27, align 4
  %v0_10002a34 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002a34 = load i32, i32* %r0.global-to-local, align 4
  %v2_10002a34 = add i32 %v1_10002a34, %v0_10002a34
  %v3_10002a34 = inttoptr i32 %v2_10002a34 to i32*
  %v4_10002a34 = load i32, i32* %v3_10002a34, align 4
  store i32 %v4_10002a34, i32* @r29, align 4
  %v1_10002a38 = add i32 %v4_10002a34, 20
  store i32 %v1_10002a38, i32* @r28, align 4
  %v0_10002a3c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a3c, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a40

dec_label_pc_10002a40:                            ; preds = %dec_label_pc_10002a24
  %v0_10002a40 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a40, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002a44 = load i32, i32* @r26, align 4
  %v1_10002a44 = mul i32 %v0_10002a44, 16
  %v2_10002a44 = udiv i32 %v0_10002a44, 268435456
  %v3_10002a44 = or i32 %v2_10002a44, %v1_10002a44
  store i32 %v3_10002a44, i32* %r26.global-to-local, align 4
  %v1_10002a48 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a44)
  %v1_10002a4c = mul nuw i32 %v2_10002a44, 268435456
  %v2_10002a4c = urem i32 %v0_10002a44, 268435456
  %v3_10002a4c = or i32 %v1_10002a4c, %v2_10002a4c
  store i32 %v3_10002a4c, i32* @r26, align 4
  %v0_10002a50 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a50, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002a54:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002a54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a54, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002a58:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54, %dec_label_pc_10002b10
  %v0_10002a58 = load i32, i32* @r29, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 41
  store i32 %v1_10002a58, i32* %r3.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r23.global-to-local, align 4
  store i32 268446308, i32* @lr, align 4
  %v2_10002a60 = inttoptr i32 %v1_10002a58 to i8*
  %v3_10002a60 = call i32 @function_10005bf8(i8* %v2_10002a60, i32 %v0_10002a5c)
  %v0_10002a64 = load i32, i32* @r25, align 4
  %v1_10002a64 = trunc i32 %v0_10002a64 to i16
  %v2_10002a64 = load i32, i32* @r29, align 4
  %v3_10002a64 = add i32 %v2_10002a64, 10
  %v4_10002a64 = inttoptr i32 %v3_10002a64 to i16*
  store i16 %v1_10002a64, i16* %v4_10002a64, align 2
  %v0_10002a6c = load i32, i32* @r29, align 4
  store i32 %v0_10002a6c, i32* @r3, align 4
  %v2_10002a70 = call i32 @function_100043cc(i32 %v0_10002a6c, i32 20)
  %v3_10002a70 = trunc i32 %v2_10002a70 to i16
  %v0_10002a74 = load i32, i32* @r28, align 4
  store i32 %v0_10002a74, i32* @r4, align 4
  %v3_10002a78 = load i32, i32* @r29, align 4
  %v4_10002a78 = add i32 %v3_10002a78, 10
  %v5_10002a78 = inttoptr i32 %v4_10002a78 to i16*
  store i16 %v3_10002a70, i16* %v5_10002a78, align 2
  %v0_10002a7c = load i32, i32* @r30, align 4
  %v0_10002a80 = load i32, i32* @r25, align 4
  %v1_10002a80 = trunc i32 %v0_10002a80 to i16
  %v2_10002a80 = load i32, i32* @r28, align 4
  %v3_10002a80 = add i32 %v2_10002a80, 6
  %v4_10002a80 = inttoptr i32 %v3_10002a80 to i16*
  store i16 %v1_10002a80, i16* %v4_10002a80, align 2
  %v0_10002a84 = load i32, i32* @r29, align 4
  store i32 %v0_10002a84, i32* %r3.global-to-local, align 4
  %v0_10002a88 = load i32, i32* @r28, align 4
  %v1_10002a88 = add i32 %v0_10002a88, 4
  %v2_10002a88 = inttoptr i32 %v1_10002a88 to i16*
  %v3_10002a88 = load i16, i16* %v2_10002a88, align 2
  %v4_10002a88 = zext i16 %v3_10002a88 to i32
  %v4_10002a8c = call i32 @function_10004430(i32 %v0_10002a84, i32 %v0_10002a74, i32 %v4_10002a88, i32 %v0_10002a7c)
  %v5_10002a8c = trunc i32 %v4_10002a8c to i16
  store i32 %v4_10002a8c, i32* %r3.global-to-local, align 4
  %v3_10002a90 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002a90, i32* %r7.global-to-local, align 4
  %v0_10002a94 = load i32, i32* @r28, align 4
  %v1_10002a94 = add i32 %v0_10002a94, 2
  %v2_10002a94 = inttoptr i32 %v1_10002a94 to i16*
  %v3_10002a94 = load i16, i16* %v2_10002a94, align 2
  %v4_10002a94 = zext i16 %v3_10002a94 to i32
  store i32 %v4_10002a94, i32* %r0.global-to-local, align 4
  %v0_10002a98 = load i32, i32* @r29, align 4
  %v1_10002a9c = mul i32 %v3_10002a90, 24
  store i32 %v1_10002a9c, i32* %r7.global-to-local, align 4
  %v4_10002aa0 = add i32 %v0_10002a94, 6
  %v5_10002aa0 = inttoptr i32 %v4_10002aa0 to i16*
  store i16 %v5_10002a8c, i16* %v5_10002aa0, align 2
  %v0_10002aa4 = load i32, i32* @r31, align 4
  %v0_10002aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002aa8, i32* %r3.global-to-local, align 4
  %v0_10002aac = load i32, i32* %r7.global-to-local, align 4
  %v1_10002aac = load i32, i32* %r14.global-to-local, align 4
  %v2_10002aac = add i32 %v1_10002aac, %v0_10002aac
  store i32 %v2_10002aac, i32* %r7.global-to-local, align 4
  %v0_10002ab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ab4 = trunc i32 %v0_10002ab4 to i16
  %v3_10002ab4 = add i32 %v2_10002aac, 2
  %v4_10002ab4 = inttoptr i32 %v3_10002ab4 to i16*
  store i16 %v1_10002ab4, i16* %v4_10002ab4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10002abc = load i32, i32* @r21, align 4
  %v2_10002abc = add i32 %v2_10002aac, 4
  %v3_10002abc = inttoptr i32 %v2_10002abc to i32*
  store i32 %v0_10002abc, i32* %v3_10002abc, align 4
  store i32 268446404, i32* @lr, align 4
  %v6_10002ac0 = call i32 @function_100092c8(i32 %v0_10002aa8, i32 %v0_10002a98, i32 %v0_10002aa4, i32 16384, i32 %v2_10002aac, i32 16)
  store i32 %v6_10002ac0, i32* %r3.global-to-local, align 4
  %v3_10002ac4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002ac4, i32* %r9.global-to-local, align 4
  %v1_10002ac8 = add i32 %v3_10002ac4, 1
  store i32 %v1_10002ac8, i32* %r0.global-to-local, align 4
  %v1_10002acc = load i32, i32* %r15.global-to-local, align 4
  %v2_10002acc = icmp slt i32 %v1_10002ac8, %v1_10002acc
  %v4_10002acc = icmp eq i32 %v1_10002ac8, %v1_10002acc
  store i1 %v4_10002acc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002ac8, i32* %stack_var_-2184, align 4
  br i1 %v2_10002acc, label %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, label %dec_label_pc_10002ad8

dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge: ; preds = %dec_label_pc_10002a58
  %v0_10002a28.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002ad8:                            ; preds = %dec_label_pc_10002a58
  %v0_10002ad8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002ad8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002ad8 = or i1 %v0_10002ad8, %v1_10002ad8
  br i1 %v2_10002ad8, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_100029e4

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002a24
  %v0_10002ae0 = call i32 @function_10005b38()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v3_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = add i32 %v3_10002ae4, 4
  %v5_10002ae4 = inttoptr i32 %v4_10002ae4 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae4, align 2
  %v0_10002ae8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ae8, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002aec:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002aec = call i32 @function_10005b38()
  %v1_10002aec = trunc i32 %v0_10002aec to i16
  store i32 %v0_10002aec, i32* %r3.global-to-local, align 4
  %v0_10002af0 = load i32, i32* @r26, align 4
  %v1_10002af0 = mul i32 %v0_10002af0, 16
  %v2_10002af0 = udiv i32 %v0_10002af0, 268435456
  %v3_10002af0 = or i32 %v2_10002af0, %v1_10002af0
  store i32 %v3_10002af0, i32* %r26.global-to-local, align 4
  %v1_10002af4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002af0)
  %v1_10002af8 = mul nuw i32 %v2_10002af0, 268435456
  %v2_10002af8 = urem i32 %v0_10002af0, 268435456
  %v3_10002af8 = or i32 %v1_10002af8, %v2_10002af8
  store i32 %v3_10002af8, i32* @r26, align 4
  %v3_10002afc = load i32, i32* @r29, align 4
  %v4_10002afc = add i32 %v3_10002afc, 20
  %v5_10002afc = inttoptr i32 %v4_10002afc to i16*
  store i16 %v1_10002aec, i16* %v5_10002afc, align 2
  %v0_10002b00 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b00, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002b04 = call i32 @function_10005b38()
  %v1_10002b04 = trunc i32 %v0_10002b04 to i16
  store i32 %v0_10002b04, i32* %r3.global-to-local, align 4
  %v3_10002b08 = load i32, i32* @r28, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b04, i16* %v5_10002b08, align 2
  %v0_10002b0c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002b0c, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54
  %v0_10002b10 = call i32 @function_10005b38()
  %v1_10002b10 = trunc i32 %v0_10002b10 to i16
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v3_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = add i32 %v3_10002b14, 28
  %v5_10002b14 = inttoptr i32 %v4_10002b14 to i16*
  store i16 %v1_10002b10, i16* %v5_10002b14, align 2
  br label %dec_label_pc_10002a58

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002838
  %v0_10002b28 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002b28, i32* %r3.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v0_10002b2c = call i32 @function_10008628()
  store i32 %v0_10002b2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b30

dec_label_pc_10002b30:                            ; preds = %dec_label_pc_10002810, %dec_label_pc_10002808, %dec_label_pc_10002b28
  store i32 %v0_1000255c, i32* %r0.global-to-local, align 4
  %v1_10002b44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000254c)
  store i32 %v0_1000257c, i32* %r24.global-to-local, align 4
  store i32 %v0_10002580, i32* %r25.global-to-local, align 4
  store i32 %v0_10002584, i32* %r26.global-to-local, align 4
  store i32 %v0_10002588, i32* %r27.global-to-local, align 4
  store i32 %v0_1000258c, i32* %r28.global-to-local, align 4
  store i32 %v0_100025b0, i32* %r30.global-to-local, align 4
  store i32 %v0_1000259c, i32* %r31.global-to-local, align 4
  %v0_10002b8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b8c

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_100027a4
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002b9c:                            ; preds = %dec_label_pc_100027bc
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002ba8:                            ; preds = %dec_label_pc_100027b4
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10002808

; uselistorder directives
  uselistorder i32 %v0_10002b10, { 1, 0 }
  uselistorder i32 %v0_10002b04, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 2, 1, 0 }
  uselistorder i32 %v0_10002aec, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i1 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v0_10002ad8, { 1, 0 }
  uselistorder i32 %v1_10002ac8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002a8c, { 1, 0 }
  uselistorder i32 %v0_10002a44, { 2, 1, 0 }
  uselistorder i32 %v0_10002a28, { 2, 1, 0 }
  uselistorder i32 %v1_10002a1c, { 1, 0 }
  uselistorder i32 %v0_100029a4, { 2, 0, 1 }
  uselistorder i32 %v1_10002994, { 1, 0 }
  uselistorder i32 %v1_1000298c, { 0, 2, 1 }
  uselistorder i32 %v1_100028c0, { 1, 0 }
  uselistorder i32 %v1_100028b8, { 1, 0 }
  uselistorder i32 %v2_10002b1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002b1c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002878, { 1, 0 }
  uselistorder i32 %v0_10002808, { 1, 0, 2 }
  uselistorder i1 %v2_100027bc, { 1, 0 }
  uselistorder i32 %v1_100027a8, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100027a0, { 2, 1, 0 }
  uselistorder i32 %v1_10002788, { 1, 2, 0 }
  uselistorder i32 %v1_10002764, { 1, 0 }
  uselistorder i32 %v0_10002758, { 1, 0 }
  uselistorder i32 %v2_10002754, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10002734, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000272c, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_100026d4, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10002614, { 1, 0 }
  uselistorder i8 %v5_100025dc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 2, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder label %dec_label_pc_10002b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002a58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100029e4, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000290c, { 1, 0 }
  uselistorder label %dec_label_pc_10002808, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10002784, { 1, 0 }
}

define i32 @function_10002bb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bb4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10002bb8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bb8, i32* %r0.global-to-local, align 4
  %v0_10002bbc = call i32 @__asm_mfcr()
  store i32 %v0_10002bbc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10002bcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bbc, i32* %r21.global-to-local, align 4
  %v0_10002c04 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c0c = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268446760, i32* @lr, align 4
  %v2_10002c24 = call i32 @function_100096a0(i32 16, i32 16)
  store i32 %v2_10002c24, i32* %r22.global-to-local, align 4
  %v0_10002c30 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r3.global-to-local, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_100096a0(i32 %v0_10002c30, i32 4)
  %v0_10002c38 = load i32, i32* @r28, align 4
  store i32 %v2_10002c34, i32* %r23.global-to-local, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c38 to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* @r31, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v1_10002ca8 = urem i32 %v5_10002ca0, 256
  %v0_10002cb4 = load i32, i32* @r28, align 4
  %v0_10002cbc = load i32, i32* @r29, align 4
  store i32 %v0_10002cbc, i32* %r3.global-to-local, align 4
  store i32 268446916, i32* @lr, align 4
  %v4_10002cc0 = inttoptr i32 %v0_10002cb4 to i32*
  %v5_10002cc0 = call i32 @function_100006a8(i32 %v0_10002cbc, i32* %v4_10002cc0, i32 7, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  %v5_10002cd0 = trunc i32 %v5_10002cc0 to i16
  %v0_10002cd8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd8, i32* %r3.global-to-local, align 4
  store i32 268446944, i32* @lr, align 4
  %v4_10002cdc = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cdc = call i32 @function_100006a8(i32 %v0_10002cd8, i32* %v4_10002cdc, i32 11, i32 1)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  %v1_10002ce4 = urem i32 %v5_10002cdc, 256
  %v0_10002cf4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf4, i32* %r3.global-to-local, align 4
  store i32 268446972, i32* @lr, align 4
  %v4_10002cf8 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf8 = call i32 @function_100006a8(i32 %v0_10002cf4, i32* %v4_10002cf8, i32 12, i32 1)
  %v0_10002cfc = load i32, i32* @r28, align 4
  %v1_10002d08 = urem i32 %v5_10002cf8, 256
  %v0_10002d0c = load i32, i32* @r29, align 4
  store i32 %v0_10002d0c, i32* %r3.global-to-local, align 4
  store i32 268446996, i32* @lr, align 4
  %v4_10002d10 = inttoptr i32 %v0_10002cfc to i32*
  %v5_10002d10 = call i32 @function_100006a8(i32 %v0_10002d0c, i32* %v4_10002d10, i32 13, i32 1)
  %v0_10002d14 = load i32, i32* @r28, align 4
  %v1_10002d20 = urem i32 %v5_10002d10, 256
  %v0_10002d24 = load i32, i32* @r29, align 4
  store i32 %v0_10002d24, i32* %r3.global-to-local, align 4
  store i32 268447020, i32* @lr, align 4
  %v4_10002d28 = inttoptr i32 %v0_10002d14 to i32*
  %v5_10002d28 = call i32 @function_100006a8(i32 %v0_10002d24, i32* %v4_10002d28, i32 14, i32 1)
  %v0_10002d2c = load i32, i32* @r28, align 4
  %v1_10002d38 = urem i32 %v5_10002d28, 256
  %v0_10002d3c = load i32, i32* @r29, align 4
  store i32 %v0_10002d3c, i32* %r3.global-to-local, align 4
  store i32 268447044, i32* @lr, align 4
  %v4_10002d40 = inttoptr i32 %v0_10002d2c to i32*
  %v5_10002d40 = call i32 @function_100006a8(i32 %v0_10002d3c, i32* %v4_10002d40, i32 15, i32 1)
  %v0_10002d44 = load i32, i32* @r28, align 4
  %v1_10002d50 = urem i32 %v5_10002d40, 256
  %v0_10002d54 = load i32, i32* @r29, align 4
  store i32 %v0_10002d54, i32* %r3.global-to-local, align 4
  store i32 268447068, i32* @lr, align 4
  %v4_10002d58 = inttoptr i32 %v0_10002d44 to i32*
  %v5_10002d58 = call i32 @function_100006a8(i32 %v0_10002d54, i32* %v4_10002d58, i32 16, i32 1)
  %v0_10002d64 = load i32, i32* @r28, align 4
  %v1_10002d68 = urem i32 %v5_10002d58, 256
  %v0_10002d6c = load i32, i32* @r29, align 4
  store i32 %v0_10002d6c, i32* %r3.global-to-local, align 4
  store i32 268447092, i32* @lr, align 4
  %v4_10002d70 = inttoptr i32 %v0_10002d64 to i32*
  %v5_10002d70 = call i32 @function_100006a8(i32 %v0_10002d6c, i32* %v4_10002d70, i32 0, i32 768)
  %v0_10002d74 = load i32, i32* @r28, align 4
  store i32 %v5_10002d70, i32* %r25.global-to-local, align 4
  %v0_10002d84 = load i32, i32* @r29, align 4
  store i32 %v0_10002d84, i32* %r3.global-to-local, align 4
  store i32 268447116, i32* @lr, align 4
  %v4_10002d88 = inttoptr i32 %v0_10002d74 to i32*
  %v5_10002d88 = call i32 @function_100006a8(i32 %v0_10002d84, i32* %v4_10002d88, i32 1, i32 1)
  %v1_10002d90 = urem i32 %v5_10002d88, 256
  store i32 %v1_10002d90, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v3_10002d9c = call i32 @function_10009344(i32 2, i32 3, i32 6)
  store i32 %v3_10002d9c, i32* %r3.global-to-local, align 4
  %v3_10002da0 = icmp eq i32 %v3_10002d9c, -1
  store i1 %v3_10002da0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002d9c, i32* %r24.global-to-local, align 4
  br i1 %v3_10002da0, label %dec_label_pc_10002f60, label %dec_label_pc_10002dac

dec_label_pc_10002dac:                            ; preds = %dec_label_pc_10002bb4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002db8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268447176, i32* @lr, align 4
  %v4_10002dc4 = call i32 @function_10009308(i32 0, i32 3, i32 %v2_10002db8, i32 4)
  store i32 %v4_10002dc4, i32* %r3.global-to-local, align 4
  %v3_10002dc8 = icmp eq i32 %v4_10002dc4, -1
  store i1 %v3_10002dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002dc8, label %dec_label_pc_10002f58, label %dec_label_pc_10002dd0

dec_label_pc_10002dd0:                            ; preds = %dec_label_pc_10002dac
  %v0_10002dd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002dd0 = icmp slt i32 %v0_10002dd0, 0
  %v3_10002dd0 = icmp eq i32 %v0_10002dd0, 0
  store i1 %v1_10002dd0, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002dd0, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10002ddc = load i32, i32* @r31, align 4
  %v1_10002ddc = urem i32 %v0_10002ddc, 65536
  store i32 %v1_10002ddc, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10002dd0, 1
  br i1 %tmp49, label %dec_label_pc_100030f8, label %dec_label_pc_10002de4

dec_label_pc_10002de4:                            ; preds = %dec_label_pc_10002dd0
  %v4_10002de4 = sext i16 %v5_10002cd0 to i32
  store i32 %v4_10002de4, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10002e88 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002e94 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10002e98 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10002ed0 = zext i16 %tmp13 to i32
  %v1_10002f00 = and i32 %tmp, 1179648
  %v3_10003014 = icmp eq i32 %v1_10002ca8, 0
  %v4_10003034 = sext i8 %v5_10002c5c to i32
  %v4_1000303c = sext i8 %v5_10002c94 to i32
  %v1_10002f04 = and i32 %tmp, 327680
  %v3_10002f04 = icmp eq i32 %v1_10002f04, 0
  %v4_10002f0c = icmp eq i32 %v1_10002f00, 1179648
  br label %dec_label_pc_10002df0

dec_label_pc_10002df0:                            ; preds = %dec_label_pc_100030e4, %dec_label_pc_10002f18, %dec_label_pc_10002de4
  %v0_10002df0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002df0 = add i32 %v0_10002df0, 40
  store i32 %v1_10002df0, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e0053 = call i32 @function_10009344(i32 2, i32 1, i32 0)
  store i32 %v3_10002e0053, i32* %r3.global-to-local, align 4
  %v3_10002e0455 = icmp eq i32 %v3_10002e0053, -1
  store i1 %v3_10002e0455, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e0053, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e0455, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0
  store i32 3, i32* @r4, align 4
  store i32 268447264, i32* @lr, align 4
  %v1_10002e1c = call i32 @function_10008540(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10002e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e28, i32* %r3.global-to-local, align 4
  store i32 268447284, i32* @lr, align 4
  %v2_10002e30 = call i32 @function_10008540(i32 %v0_10002e28)
  store i32 %v2_10002e30, i32* %r3.global-to-local, align 4
  %v3_10002e34 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002e3c = mul i32 %v3_10002e34, 24
  store i32 %v1_10002e3c, i32* %r0.global-to-local, align 4
  %v0_10002e44 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002e44 = add i32 %v0_10002e44, %v1_10002e3c
  store i32 %v2_10002e44, i32* %r11.global-to-local, align 4
  %v1_10002e48 = add i32 %v2_10002e44, 20
  %v2_10002e48 = inttoptr i32 %v1_10002e48 to i8*
  %v3_10002e48 = load i8, i8* %v2_10002e48, align 1
  %v4_10002e48 = zext i8 %v3_10002e48 to i32
  store i32 %v4_10002e48, i32* %r9.global-to-local, align 4
  %v3_10002e4c = icmp eq i8 %v3_10002e48, 31
  store i1 %v3_10002e4c, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10002e48, 32
  %v1_10002f24 = add i32 %v2_10002e44, 16
  %v2_10002f24 = inttoptr i32 %v1_10002f24 to i32*
  %v3_10002f24 = load i32, i32* %v2_10002f24, align 4
  br i1 %tmp50, label %dec_label_pc_10002f24, label %dec_label_pc_10002e54

dec_label_pc_10002e54:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r0.global-to-local, align 4
  %v0_10002e5c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e5c, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.0 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  store i32 %v4_10002de4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002e68:                            ; preds = %dec_label_pc_10002f4c, %dec_label_pc_10002e60
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002f4c ], [ %stack_var_-396.0, %dec_label_pc_10002e60 ]
  %storemerge = phi i16 [ %v1_10002f4c, %dec_label_pc_10002f4c ], [ %v5_10002cd0, %dec_label_pc_10002e60 ]
  %v0_10002e70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e70, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002e78.22 to i32), i32* @lr, align 4
  %v0_10002e74 = call i32 @function_10009144()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447360, i32* @lr, align 4
  %v0_10002e7c = call i32 @function_100089f8()
  store i32 %v0_10002e7c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002e7c, i32* @r31, align 4
  %v4_10002ec4 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10002ed4 = zext i16 %storemerge to i32
  %v4_10002ed8 = icmp eq i16 %storemerge, %tmp13
  %v4_10002ec4.not = xor i1 %v4_10002ec4, true
  br label %dec_label_pc_10002e84

dec_label_pc_10002e84:                            ; preds = %dec_label_pc_10002ee0, %dec_label_pc_10002e68
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002e94, i32* %r7.global-to-local, align 4
  store i32 %v2_10002e98, i32* %r8.global-to-local, align 4
  %v0_10002e9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002e9c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268447400, i32* @lr, align 4
  %v6_10002ea4 = call i32 @function_10009250(i32 %v0_10002e9c, i32 %v2_10002e88, i32 256, i32 16384, i32 %v2_10002e94, i32 %v2_10002e98)
  store i32 %v6_10002ea4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002eb0 = icmp eq i32 %v6_10002ea4, -1
  store i1 %v3_10002eb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002eb0, label %dec_label_pc_10002f60, label %dec_label_pc_10002ebc

dec_label_pc_10002ebc:                            ; preds = %dec_label_pc_10002e84
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10002ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002ea4, 41
  %or.cond = or i1 %tmp51, %v4_10002ec4.not
  br i1 %or.cond, label %dec_label_pc_10002ee0, label %dec_label_pc_10002ed0

dec_label_pc_10002ed0:                            ; preds = %dec_label_pc_10002ebc
  store i32 %v4_10002ed0, i32* %r0.global-to-local, align 4
  store i32 %v4_10002ed4, i32* %r8.global-to-local, align 4
  store i1 %v4_10002ed8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ed8, label %dec_label_pc_10002efc, label %dec_label_pc_10002ee0

dec_label_pc_10002ee0:                            ; preds = %dec_label_pc_10002ebc, %dec_label_pc_10002f14, %dec_label_pc_10002ed0
  store i32 268447460, i32* @lr, align 4
  %v0_10002ee0 = call i32 @function_100089f8()
  %v0_10002ee4 = load i32, i32* @r31, align 4
  %v2_10002ee4 = sub i32 %v0_10002ee0, %v0_10002ee4
  store i32 %v2_10002ee4, i32* %r3.global-to-local, align 4
  %v3_10002ee8 = icmp eq i32 %v2_10002ee4, 10
  store i1 %v3_10002ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10002ee4, 11
  br i1 %tmp52, label %dec_label_pc_10002e84, label %dec_label_pc_10002ef0

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002ee0
  %v0_10002ef0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ef0, i32* %r3.global-to-local, align 4
  store i32 268447480, i32* @lr, align 4
  %v0_10002ef4 = call i32 @function_10008628()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e00 = call i32 @function_10009344(i32 2, i32 1, i32 0)
  store i32 %v3_10002e00, i32* %r3.global-to-local, align 4
  %v3_10002e04 = icmp eq i32 %v3_10002e00, -1
  store i1 %v3_10002e04, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e00, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002ed0
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10002f00, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10002f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f0c, label %dec_label_pc_10002fc0, label %dec_label_pc_10002f14

dec_label_pc_10002f14:                            ; preds = %dec_label_pc_10002efc
  br i1 %v3_10002f04, label %dec_label_pc_10002ee0, label %dec_label_pc_10002f18

dec_label_pc_10002f18:                            ; preds = %dec_label_pc_10002f14
  %v0_10002f18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002f18, i32* %r3.global-to-local, align 4
  store i32 268447520, i32* @lr, align 4
  %v0_10002f1c = call i32 @function_10008628()
  store i32 %v0_10002f1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002df0

dec_label_pc_10002f24:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r29.global-to-local, align 4
  %v0_10002f28 = call i32 @function_10005b38()
  store i32 %v0_10002f28, i32* %r3.global-to-local, align 4
  %v3_10002f2c = load i32, i32* %stack_var_-408, align 4
  %v1_10002f30 = mul i32 %v3_10002f2c, 24
  %v1_10002f34 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f34 = add i32 %v1_10002f34, %v1_10002f30
  store i32 %v2_10002f34, i32* %r9.global-to-local, align 4
  %v1_10002f38 = add i32 %v2_10002f34, 20
  %v2_10002f38 = inttoptr i32 %v1_10002f38 to i8*
  %v3_10002f38 = load i8, i8* %v2_10002f38, align 1
  %v4_10002f38 = zext i8 %v3_10002f38 to i32
  store i32 %v4_10002f38, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10002f38, 64
  %v2_10002f3c = zext i8 %tmp56 to i32
  %v3_10002f3c = lshr i32 %v0_10002f28, %v2_10002f3c
  store i32 %v3_10002f3c, i32* %r3.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002f40 = add i32 %v3_10002f3c, %v0_10002f40
  store i32 %v2_10002f40, i32* %r29.global-to-local, align 4
  %v0_10002f48 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f48, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002f4c:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.2 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  %v0_10002f4c = call i32 @function_10005b38()
  %v1_10002f4c = trunc i32 %v0_10002f4c to i16
  store i32 %v0_10002f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002f58:                            ; preds = %dec_label_pc_10002dac
  %v0_10002f58 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002f58, i32* %r3.global-to-local, align 4
  store i32 268447584, i32* @lr, align 4
  %v0_10002f5c = call i32 @function_10008628()
  store i32 %v0_10002f5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002e84, %dec_label_pc_10002bb4, %dec_label_pc_10002f58
  store i32 %v0_10002bcc, i32* %r0.global-to-local, align 4
  %v1_10002f74 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bbc)
  store i32 %v0_10002c04, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c0c, i32* %r29.global-to-local, align 4
  %v0_10002fbc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fbc

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002efc
  %v3_10002fc0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002fc0, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002fc4, i32* @r3, align 4
  %v0_10002fc8 = load i32, i32* @r30, align 4
  %v1_10002fc8 = add i32 %v0_10002fc8, 2
  %v2_10002fc8 = inttoptr i32 %v1_10002fc8 to i16*
  %v3_10002fc8 = load i16, i16* %v2_10002fc8, align 2
  %v4_10002fc8 = zext i16 %v3_10002fc8 to i32
  store i32 %v4_10002fc8, i32* %r11.global-to-local, align 4
  %v1_10002fcc = mul i32 %v3_10002fc0, 16
  store i32 %v1_10002fcc, i32* %r9.global-to-local, align 4
  %v1_10002fd0 = mul i32 %v3_10002fc0, 4
  store i32 %v1_10002fd0, i32* @r29, align 4
  %v1_10002fd4 = load i32, i32* %r22.global-to-local, align 4
  %v3_10002fd4 = add i32 %v1_10002fd4, %v1_10002fcc
  %v4_10002fd4 = inttoptr i32 %v3_10002fd4 to i32*
  store i32 %tmp14, i32* %v4_10002fd4, align 4
  %v0_10002fd8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002fd8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fd8 = add i32 %v1_10002fd8, %v0_10002fd8
  store i32 %v2_10002fd8, i32* %r9.global-to-local, align 4
  %v0_10002fdc = load i32, i32* %r8.global-to-local, align 4
  %v1_10002fdc = trunc i32 %v0_10002fdc to i16
  %v3_10002fdc = add i32 %v2_10002fd8, 14
  %v4_10002fdc = inttoptr i32 %v3_10002fdc to i16*
  store i16 %v1_10002fdc, i16* %v4_10002fdc, align 2
  %v0_10002fe0 = load i32, i32* @r30, align 4
  %v1_10002fe0 = add i32 %v0_10002fe0, 4
  %v2_10002fe0 = inttoptr i32 %v1_10002fe0 to i32*
  %v3_10002fe0 = load i32, i32* %v2_10002fe0, align 4
  store i32 %v3_10002fe0, i32* %r0.global-to-local, align 4
  %v0_10002fe4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002fe4 = trunc i32 %v0_10002fe4 to i16
  %v2_10002fe4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fe4 = add i32 %v2_10002fe4, 12
  %v4_10002fe4 = inttoptr i32 %v3_10002fe4 to i16*
  store i16 %v1_10002fe4, i16* %v4_10002fe4, align 2
  %v0_10002fe8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fe8 = add i32 %v1_10002fe8, 4
  %v3_10002fe8 = inttoptr i32 %v2_10002fe8 to i32*
  store i32 %v0_10002fe8, i32* %v3_10002fe8, align 4
  %v0_10002fec = load i32, i32* @r30, align 4
  %v1_10002fec = add i32 %v0_10002fec, 8
  %v2_10002fec = inttoptr i32 %v1_10002fec to i32*
  %v3_10002fec = load i32, i32* %v2_10002fec, align 4
  store i32 %v3_10002fec, i32* %r0.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 8
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v3_10002fec, i32* %v3_10002ff0, align 4
  store i32 268447736, i32* @lr, align 4
  %v0_10002ff4 = call i32 @function_10009548()
  store i32 %v0_10002ff4, i32* %r3.global-to-local, align 4
  %v3_10002ff8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002ff8, i32* %r0.global-to-local, align 4
  %v1_10002ffc = load i32, i32* @r29, align 4
  %v2_10002ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10002ffc = add i32 %v2_10002ffc, %v1_10002ffc
  %v4_10002ffc = inttoptr i32 %v3_10002ffc to i32*
  store i32 %v0_10002ff4, i32* %v4_10002ffc, align 4
  %v0_10003000 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003000 = mul i32 %v0_10003000, 4
  store i32 %v1_10003000, i32* %r0.global-to-local, align 4
  %v0_10003004 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003004 = add i32 %v0_10003004, %v1_10003000
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  %v4_10003004 = load i32, i32* %v3_10003004, align 4
  store i32 %v4_10003004, i32* @r31, align 4
  store i32 %v1_10002ca8, i32* %r0.global-to-local, align 4
  %v1_1000300c = inttoptr i32 %v4_10003004 to i32*
  %v2_1000300c = load i32, i32* %v1_1000300c, align 4
  store i32 %v2_1000300c, i32* %r9.global-to-local, align 4
  %v1_10003010 = add i32 %v4_10003004, 20
  store i32 %v1_10003010, i32* @r30, align 4
  store i1 %v3_10003014, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000301c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000301c, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003024 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003028 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003028 = trunc i32 %v0_10003028 to i16
  %v2_10003028 = load i32, i32* @r31, align 4
  %v3_10003028 = add i32 %v2_10003028, 4
  %v4_10003028 = inttoptr i32 %v3_10003028 to i16*
  store i16 %v1_10003028, i16* %v4_10003028, align 2
  %v1_1000302c = load i32, i32* @r31, align 4
  %v2_1000302c = inttoptr i32 %v1_1000302c to i32*
  store i32 %v1_10003024, i32* %v2_1000302c, align 4
  %v0_10003030 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  %v2_10003030 = load i32, i32* @r31, align 4
  %v3_10003030 = add i32 %v2_10003030, 2
  %v4_10003030 = inttoptr i32 %v3_10003030 to i16*
  store i16 %v1_10003030, i16* %v4_10003030, align 2
  store i32 %v4_10003034, i32* %r9.global-to-local, align 4
  %v2_10003038 = load i32, i32* @r31, align 4
  %v3_10003038 = add i32 %v2_10003038, 1
  %v4_10003038 = inttoptr i32 %v3_10003038 to i8*
  store i8 %v5_10002c5c, i8* %v4_10003038, align 1
  store i32 %v4_1000303c, i32* %r0.global-to-local, align 4
  %v2_10003040 = load i32, i32* @r31, align 4
  %v3_10003040 = add i32 %v2_10003040, 8
  %v4_10003040 = inttoptr i32 %v3_10003040 to i8*
  store i8 %v5_10002c94, i8* %v4_10003040, align 1
  %v0_10003044 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003044, label %dec_label_pc_10003050, label %dec_label_pc_10003048

dec_label_pc_10003048:                            ; preds = %dec_label_pc_10002fc0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000304c = load i32, i32* @r31, align 4
  %v3_1000304c = add i32 %v2_1000304c, 6
  %v4_1000304c = inttoptr i32 %v3_1000304c to i16*
  store i16 16384, i16* %v4_1000304c, align 2
  br label %dec_label_pc_10003050

dec_label_pc_10003050:                            ; preds = %dec_label_pc_10002fc0, %dec_label_pc_10003048
  %v2_10003058 = load i32, i32* @r31, align 4
  %v3_10003058 = add i32 %v2_10003058, 9
  %v4_10003058 = inttoptr i32 %v3_10003058 to i8*
  store i8 6, i8* %v4_10003058, align 1
  %v3_1000305c = load i32, i32* @global_var_1001b748.16, align 4
  store i32 %v3_1000305c, i32* %r0.global-to-local, align 4
  %v1_10003060 = load i32, i32* @r31, align 4
  %v2_10003060 = add i32 %v1_10003060, 12
  %v3_10003060 = inttoptr i32 %v2_10003060 to i32*
  store i32 %v3_1000305c, i32* %v3_10003060, align 4
  %v3_10003064 = load i32, i32* %stack_var_-408, align 4
  %v1_10003068 = mul i32 %v3_10003064, 16
  store i32 %v1_10003068, i32* %r9.global-to-local, align 4
  %v1_1000306c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000306c = add i32 %v1_1000306c, %v1_10003068
  %v3_1000306c = inttoptr i32 %v2_1000306c to i32*
  %v4_1000306c = load i32, i32* %v3_1000306c, align 4
  store i32 %v4_1000306c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000306c, i32* %r9.global-to-local, align 4
  %v1_10003074 = add i32 %v2_1000306c, 12
  %v2_10003074 = inttoptr i32 %v1_10003074 to i16*
  %v3_10003074 = load i16, i16* %v2_10003074, align 2
  %v4_10003074 = zext i16 %v3_10003074 to i32
  store i32 %v4_10003074, i32* %r11.global-to-local, align 4
  %v1_10003078 = load i32, i32* @r31, align 4
  %v2_10003078 = add i32 %v1_10003078, 16
  %v3_10003078 = inttoptr i32 %v2_10003078 to i32*
  store i32 %v4_1000306c, i32* %v3_10003078, align 4
  %v0_1000307c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000307c = trunc i32 %v0_1000307c to i16
  %v2_1000307c = load i32, i32* @r31, align 4
  %v3_1000307c = add i32 %v2_1000307c, 20
  %v4_1000307c = inttoptr i32 %v3_1000307c to i16*
  store i16 %v1_1000307c, i16* %v4_1000307c, align 2
  %v0_10003080 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003080 = add i32 %v0_10003080, 8
  %v2_10003080 = inttoptr i32 %v1_10003080 to i32*
  %v3_10003080 = load i32, i32* %v2_10003080, align 4
  store i32 %v3_10003080, i32* %r0.global-to-local, align 4
  %v0_10003084 = load i32, i32* @r30, align 4
  %v1_10003084 = add i32 %v0_10003084, 12
  %v2_10003084 = inttoptr i32 %v1_10003084 to i32*
  %v3_10003084 = load i32, i32* %v2_10003084, align 4
  store i32 %v3_10003084, i32* %r11.global-to-local, align 4
  %v2_10003088 = add i32 %v0_10003084, 4
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v3_10003080, i32* %v3_10003088, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003090 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003090, i32* %r11.global-to-local, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = add i32 %v0_10003094, 14
  %v2_10003094 = inttoptr i32 %v1_10003094 to i16*
  %v3_10003094 = load i16, i16* %v2_10003094, align 2
  %v4_10003094 = zext i16 %v3_10003094 to i32
  store i32 %v4_10003094, i32* %r0.global-to-local, align 4
  %v1_10003098 = add i32 %v0_10003094, 4
  %v2_10003098 = inttoptr i32 %v1_10003098 to i32*
  %v3_10003098 = load i32, i32* %v2_10003098, align 4
  store i32 %v3_10003098, i32* %r10.global-to-local, align 4
  %v1_1000309c = or i32 %v1_10003090, 1114112
  store i32 %v1_1000309c, i32* %r11.global-to-local, align 4
  %v2_100030a0 = load i32, i32* @r30, align 4
  %v3_100030a0 = add i32 %v2_100030a0, 2
  %v4_100030a0 = inttoptr i32 %v3_100030a0 to i16*
  store i16 %v3_10003094, i16* %v4_100030a0, align 2
  %v0_100030a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100030a4 = load i32, i32* @r30, align 4
  %v2_100030a4 = add i32 %v1_100030a4, 8
  %v3_100030a4 = inttoptr i32 %v2_100030a4 to i32*
  store i32 %v0_100030a4, i32* %v3_100030a4, align 4
  %v0_100030a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100030a8 = load i32, i32* @r30, align 4
  %v2_100030a8 = add i32 %v1_100030a8, 12
  %v3_100030a8 = inttoptr i32 %v2_100030a8 to i32*
  store i32 %v0_100030a8, i32* %v3_100030a8, align 4
  %v0_100030ac = call i32 @function_10005b38()
  %v1_100030ac = trunc i32 %v0_100030ac to i16
  store i32 %v1_10002ce4, i32* %r9.global-to-local, align 4
  %v3_100030b4 = load i32, i32* @r30, align 4
  %v4_100030b4 = add i32 %v3_100030b4, 14
  %v5_100030b4 = inttoptr i32 %v4_100030b4 to i16*
  store i16 %v1_100030ac, i16* %v5_100030b4, align 2
  %v0_100030b8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100030b8, i32* @r4, align 4
  %v0_100030bc = load i32, i32* @r31, align 4
  %v1_100030bc = add i32 %v0_100030bc, 40
  store i32 %v1_100030bc, i32* @r3, align 4
  %v0_100030c0 = load i32, i32* @r30, align 4
  %v1_100030c0 = add i32 %v0_100030c0, 12
  %v2_100030c0 = inttoptr i32 %v1_100030c0 to i32*
  %v3_100030c0 = load i32, i32* %v2_100030c0, align 4
  store i32 %v3_100030c0, i32* %r0.global-to-local, align 4
  %v1_100030c4 = call i32 @__asm_rlwimi(i32 %v1_10002ce4, i32 21, i32 10, i32 10)
  store i32 %v1_100030c4, i32* %r0.global-to-local, align 4
  %v1_100030c8 = call i32 @__asm_rlwimi(i32 %v1_10002d08, i32 20, i32 11, i32 11)
  store i32 %v1_100030c8, i32* %r0.global-to-local, align 4
  %v1_100030cc = call i32 @__asm_rlwimi(i32 %v1_10002d20, i32 19, i32 12, i32 12)
  store i32 %v1_100030cc, i32* %r0.global-to-local, align 4
  %v1_100030d0 = call i32 @__asm_rlwimi(i32 %v1_10002d38, i32 18, i32 13, i32 13)
  store i32 %v1_100030d0, i32* %r0.global-to-local, align 4
  %v1_100030d4 = call i32 @__asm_rlwimi(i32 %v1_10002d50, i32 17, i32 14, i32 14)
  store i32 %v1_100030d4, i32* %r0.global-to-local, align 4
  %v1_100030d8 = call i32 @__asm_rlwimi(i32 %v1_10002d68, i32 16, i32 15, i32 15)
  store i32 %v1_100030d8, i32* %r0.global-to-local, align 4
  %v1_100030dc = load i32, i32* @r30, align 4
  %v2_100030dc = add i32 %v1_100030dc, 12
  %v3_100030dc = inttoptr i32 %v2_100030dc to i32*
  store i32 %v1_100030d8, i32* %v3_100030dc, align 4
  %v0_100030e0 = call i32 @function_10005d0c()
  store i32 %v0_100030e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100030e4

dec_label_pc_100030e4:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0, %dec_label_pc_10003050
  %v3_100030e4 = load i32, i32* %stack_var_-408, align 4
  %v1_100030e8 = add i32 %v3_100030e4, 1
  store i32 %v1_100030e8, i32* %r9.global-to-local, align 4
  %v1_100030ec = load i32, i32* %r21.global-to-local, align 4
  %v2_100030ec = icmp slt i32 %v1_100030e8, %v1_100030ec
  %v4_100030ec = icmp eq i32 %v1_100030e8, %v1_100030ec
  store i1 %v4_100030ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100030e8, i32* %stack_var_-408, align 4
  br i1 %v2_100030ec, label %dec_label_pc_10002df0, label %dec_label_pc_100030f8.loopexit

dec_label_pc_100030f8.loopexit:                   ; preds = %dec_label_pc_100030e4
  %v0_10003104.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003104.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100030f8

dec_label_pc_100030f8:                            ; preds = %dec_label_pc_100030f8.loopexit, %dec_label_pc_10002dd0
  %v1_10003104.pre = phi i1 [ %v1_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v1_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_10003104.pre = phi i1 [ %v0_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v3_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_100030f8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100030f8 = icmp eq i32 %v0_100030f8, 0
  store i1 %v3_100030f8, i1* %cr2_eq.global-to-local, align 1
  %v0_100030fc = load i32, i32* %r25.global-to-local, align 4
  %v1_100030fc = add i32 %v0_100030fc, 40
  store i32 %v1_100030fc, i32* %r26.global-to-local, align 4
  %v1_10003100 = add i32 %v0_100030fc, 20
  store i32 %v1_10003100, i32* @r31, align 4
  br label %dec_label_pc_10003104.outer

dec_label_pc_10003104.outer:                      ; preds = %dec_label_pc_100031d8, %dec_label_pc_100030f8
  %v1_10003104.ph = phi i1 [ %v1_10003104.pre, %dec_label_pc_100030f8 ], [ %v1_100031d8, %dec_label_pc_100031d8 ]
  %v0_10003104.ph = phi i1 [ %v0_10003104.pre, %dec_label_pc_100030f8 ], [ %v0_100031d8, %dec_label_pc_100031d8 ]
  %v2_10003104 = or i1 %v1_10003104.ph, %v0_10003104.ph
  br label %dec_label_pc_10003104

dec_label_pc_10003104:                            ; preds = %dec_label_pc_10003104.outer, %dec_label_pc_10003104
  br i1 %v2_10003104, label %dec_label_pc_10003104, label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10003104, %dec_label_pc_100031d8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003118 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003118 = icmp eq i32 %v0_10003118, 65535
  store i1 %v4_10003118, i1* %cr4_eq.global-to-local, align 1
  %v0_1000311c = load i32, i32* @r31, align 4
  %v1_1000311c = urem i32 %v0_1000311c, 65536
  store i32 %v1_1000311c, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003128

dec_label_pc_10003128:                            ; preds = %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, %dec_label_pc_10003108
  %v0_10003134 = phi i1 [ %v0_10003134.pre, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ %v4_10003118, %dec_label_pc_10003108 ]
  %v0_10003128 = phi i32 [ %v1_100031c8, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ 0, %dec_label_pc_10003108 ]
  %v1_10003128 = mul i32 %v0_10003128, 4
  store i32 %v1_10003128, i32* %r0.global-to-local, align 4
  %v0_1000312c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000312c = add i32 %v0_1000312c, %v1_10003128
  %v3_1000312c = inttoptr i32 %v2_1000312c to i32*
  %v4_1000312c = load i32, i32* %v3_1000312c, align 4
  store i32 %v4_1000312c, i32* @r29, align 4
  %v1_10003130 = add i32 %v4_1000312c, 20
  store i32 %v1_10003130, i32* %r28.global-to-local, align 4
  br i1 %v0_10003134, label %dec_label_pc_100031e0, label %dec_label_pc_10003138

dec_label_pc_10003138:                            ; preds = %dec_label_pc_10003128
  %v1_10003138 = add i32 %v4_1000312c, 40
  store i32 %v1_10003138, i32* @r3, align 4
  %v0_1000313c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000313c, i32* @r4, align 4
  %v0_10003140 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003140, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_10003144:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0, %dec_label_pc_100031f4
  %v2_10003144 = phi i32 [ %v4_1000312c, %dec_label_pc_10003138 ], [ %v0_100031ec, %dec_label_pc_100031e0 ], [ %v2_10003144.pre, %dec_label_pc_100031f4 ]
  %v0_10003144 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003144 = trunc i32 %v0_10003144 to i16
  %v3_10003144 = add i32 %v2_10003144, 10
  %v4_10003144 = inttoptr i32 %v3_10003144 to i16*
  store i16 %v1_10003144, i16* %v4_10003144, align 2
  %v0_1000314c = load i32, i32* @r29, align 4
  store i32 %v0_1000314c, i32* @r3, align 4
  %v2_10003150 = call i32 @function_100043cc(i32 %v0_1000314c, i32 20)
  %v3_10003150 = trunc i32 %v2_10003150 to i16
  store i32 %v2_10003150, i32* %r3.global-to-local, align 4
  %v3_10003154 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003154, i32* %r9.global-to-local, align 4
  %v3_10003158 = load i32, i32* @r29, align 4
  %v4_10003158 = add i32 %v3_10003158, 10
  %v5_10003158 = inttoptr i32 %v4_10003158 to i16*
  store i16 %v3_10003150, i16* %v5_10003158, align 2
  %v0_1000315c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000315c, i32* @r4, align 4
  %v0_10003160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003160 = mul i32 %v0_10003160, 16
  store i32 %v1_10003160, i32* %r9.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003164 = trunc i32 %v0_10003164 to i16
  %v3_10003164 = add i32 %v0_1000315c, 16
  %v4_10003164 = inttoptr i32 %v3_10003164 to i16*
  store i16 %v1_10003164, i16* %v4_10003164, align 2
  %v0_10003168 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003168 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003168 = add i32 %v1_10003168, %v0_10003168
  store i32 %v2_10003168, i32* %r9.global-to-local, align 4
  %v0_1000316c = load i32, i32* @r30, align 4
  %v1_10003170 = add i32 %v2_10003168, 4
  %v2_10003170 = inttoptr i32 %v1_10003170 to i32*
  %v3_10003170 = load i32, i32* %v2_10003170, align 4
  store i32 %v3_10003170, i32* %r11.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r31, align 4
  %v0_10003178 = load i32, i32* @r29, align 4
  store i32 %v0_10003178, i32* %r3.global-to-local, align 4
  %v1_1000317c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000317c = add i32 %v1_1000317c, 4
  %v3_1000317c = inttoptr i32 %v2_1000317c to i32*
  store i32 %v3_10003170, i32* %v3_1000317c, align 4
  %v0_10003180 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003180 = add i32 %v0_10003180, 1
  store i32 %v1_10003180, i32* %r11.global-to-local, align 4
  %v1_10003184 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003184 = add i32 %v1_10003184, 4
  %v3_10003184 = inttoptr i32 %v2_10003184 to i32*
  store i32 %v1_10003180, i32* %v3_10003184, align 4
  %v0_10003188 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003188 = add i32 %v0_10003188, 8
  %v2_10003188 = inttoptr i32 %v1_10003188 to i32*
  %v3_10003188 = load i32, i32* %v2_10003188, align 4
  store i32 %v3_10003188, i32* %r0.global-to-local, align 4
  %v1_1000318c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000318c = add i32 %v1_1000318c, 8
  %v3_1000318c = inttoptr i32 %v2_1000318c to i32*
  store i32 %v3_10003188, i32* %v3_1000318c, align 4
  %v4_10003190 = call i32 @function_10004430(i32 %v0_10003178, i32 %v0_1000315c, i32 %v0_1000316c, i32 %v0_10003174)
  %v5_10003190 = trunc i32 %v4_10003190 to i16
  store i32 %v4_10003190, i32* %r3.global-to-local, align 4
  %v3_10003194 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003194, i32* %r7.global-to-local, align 4
  %v0_10003198 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003198 = add i32 %v0_10003198, 2
  %v2_10003198 = inttoptr i32 %v1_10003198 to i16*
  %v3_10003198 = load i16, i16* %v2_10003198, align 2
  %v4_10003198 = zext i16 %v3_10003198 to i32
  store i32 %v4_10003198, i32* %r0.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r29, align 4
  %v1_100031a0 = mul i32 %v3_10003194, 24
  store i32 %v1_100031a0, i32* %r7.global-to-local, align 4
  %v4_100031a4 = add i32 %v0_10003198, 16
  %v5_100031a4 = inttoptr i32 %v4_100031a4 to i16*
  store i16 %v5_10003190, i16* %v5_100031a4, align 2
  %v0_100031a8 = load i32, i32* %r26.global-to-local, align 4
  %v0_100031ac = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100031ac, i32* %r3.global-to-local, align 4
  %v0_100031b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100031b0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100031b0 = add i32 %v1_100031b0, %v0_100031b0
  store i32 %v2_100031b0, i32* %r7.global-to-local, align 4
  %v0_100031b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100031b8 = trunc i32 %v0_100031b8 to i16
  %v3_100031b8 = add i32 %v2_100031b0, 2
  %v4_100031b8 = inttoptr i32 %v3_100031b8 to i16*
  store i16 %v1_100031b8, i16* %v4_100031b8, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448196, i32* @lr, align 4
  %v6_100031c0 = call i32 @function_100092c8(i32 %v0_100031ac, i32 %v0_1000319c, i32 %v0_100031a8, i32 16384, i32 %v2_100031b0, i32 16)
  store i32 %v6_100031c0, i32* %r3.global-to-local, align 4
  %v3_100031c4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100031c4, i32* %r9.global-to-local, align 4
  %v1_100031c8 = add i32 %v3_100031c4, 1
  store i32 %v1_100031c8, i32* %r0.global-to-local, align 4
  %v1_100031cc = load i32, i32* %r21.global-to-local, align 4
  %v2_100031cc = icmp slt i32 %v1_100031c8, %v1_100031cc
  %v4_100031cc = icmp eq i32 %v1_100031c8, %v1_100031cc
  store i1 %v4_100031cc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100031c8, i32* %stack_var_-408, align 4
  br i1 %v2_100031cc, label %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, label %dec_label_pc_100031d8

dec_label_pc_10003144.dec_label_pc_10003128_crit_edge: ; preds = %dec_label_pc_10003144
  %v0_10003134.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003128

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_10003144
  %v0_100031d8 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100031d8 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100031d8 = or i1 %v0_100031d8, %v1_100031d8
  br i1 %v2_100031d8, label %dec_label_pc_10003104.outer, label %dec_label_pc_10003108

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_10003128
  %v0_100031e0 = call i32 @function_10005b38()
  %v1_100031e0 = trunc i32 %v0_100031e0 to i16
  %v0_100031e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100031e4, i32* @r4, align 4
  %v3_100031e8 = load i32, i32* @r29, align 4
  %v4_100031e8 = add i32 %v3_100031e8, 4
  %v5_100031e8 = inttoptr i32 %v4_100031e8 to i16*
  store i16 %v1_100031e0, i16* %v5_100031e8, align 2
  %v0_100031ec = load i32, i32* @r29, align 4
  %v1_100031ec = add i32 %v0_100031ec, 40
  store i32 %v1_100031ec, i32* @r3, align 4
  %v0_100031f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100031f0, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_100031f4:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0
  %v0_100031f4 = call i32 @function_10005d0c()
  store i32 %v0_100031f4, i32* %r3.global-to-local, align 4
  %v2_10003144.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003144

; uselistorder directives
  uselistorder i32 %v0_100031ec, { 1, 0 }
  uselistorder i1 %v1_100031d8, { 1, 0 }
  uselistorder i1 %v0_100031d8, { 1, 0 }
  uselistorder i32 %v1_100031c8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003190, { 1, 0 }
  uselistorder i32 %v0_1000315c, { 1, 0, 2 }
  uselistorder i32 %v2_10003150, { 1, 0 }
  uselistorder i32 %v1_10003128, { 1, 0 }
  uselistorder i32 %v1_100030e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000306c, { 1, 0, 2 }
  uselistorder i32 %v1_10003068, { 1, 0 }
  uselistorder i32 %v1_10003000, { 1, 0 }
  uselistorder i32 %v1_10002fcc, { 1, 0 }
  uselistorder i32 %v0_10002f4c, { 1, 0 }
  uselistorder i32 %v2_10002f40, { 1, 2, 0 }
  uselistorder i1 %v4_10002ec4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002f24, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10002f00, { 1, 0 }
  uselistorder i32 %v1_10002ca8, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268447236, { 1, 0 }
  uselistorder label %dec_label_pc_100031f4, { 1, 0 }
  uselistorder label %dec_label_pc_10003144, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_10003104, { 1, 0 }
  uselistorder label %dec_label_pc_100030e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003050, { 1, 0 }
  uselistorder label %dec_label_pc_10002f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ee0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10002e10, { 1, 0 }
}

define i32 @function_100031fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100031fc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10003200 = load i32, i32* @lr, align 4
  store i32 %v0_10003200, i32* %r0.global-to-local, align 4
  %v0_10003204 = call i32 @__asm_mfcr()
  store i32 %v0_10003204, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003214 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003204, i32* %r21.global-to-local, align 4
  %v0_1000324c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003254 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448368, i32* @lr, align 4
  %v2_1000326c = call i32 @function_100096a0(i32 16, i32 16)
  store i32 %v2_1000326c, i32* %r22.global-to-local, align 4
  %v0_10003278 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003278, i32* %r3.global-to-local, align 4
  store i32 268448384, i32* @lr, align 4
  %v2_1000327c = call i32 @function_100096a0(i32 %v0_10003278, i32 4)
  %v0_10003280 = load i32, i32* @r28, align 4
  store i32 %v2_1000327c, i32* %r23.global-to-local, align 4
  %v0_10003290 = load i32, i32* @r29, align 4
  store i32 %v0_10003290, i32* %r3.global-to-local, align 4
  store i32 268448408, i32* @lr, align 4
  %v4_10003294 = inttoptr i32 %v0_10003280 to i32*
  %v5_10003294 = call i32 @function_100006a8(i32 %v0_10003290, i32* %v4_10003294, i32 2, i32 0)
  %v5_100032a4 = trunc i32 %v5_10003294 to i8
  %v0_100032ac = load i32, i32* @r28, align 4
  %v0_100032b0 = load i32, i32* @r29, align 4
  store i32 %v0_100032b0, i32* %r3.global-to-local, align 4
  store i32 268448440, i32* @lr, align 4
  %v4_100032b4 = inttoptr i32 %v0_100032ac to i32*
  %v5_100032b4 = call i32 @function_100006a8(i32 %v0_100032b0, i32* %v4_100032b4, i32 3, i32 65535)
  %v0_100032b8 = load i32, i32* @r28, align 4
  store i32 %v5_100032b4, i32* @r31, align 4
  %v0_100032c8 = load i32, i32* @r29, align 4
  store i32 %v0_100032c8, i32* %r3.global-to-local, align 4
  store i32 268448464, i32* @lr, align 4
  %v4_100032cc = inttoptr i32 %v0_100032b8 to i32*
  %v5_100032cc = call i32 @function_100006a8(i32 %v0_100032c8, i32* %v4_100032cc, i32 4, i32 64)
  %v0_100032d0 = load i32, i32* @r28, align 4
  %v5_100032dc = trunc i32 %v5_100032cc to i8
  %v0_100032e4 = load i32, i32* @r29, align 4
  store i32 %v0_100032e4, i32* %r3.global-to-local, align 4
  store i32 268448492, i32* @lr, align 4
  %v4_100032e8 = inttoptr i32 %v0_100032d0 to i32*
  %v5_100032e8 = call i32 @function_100006a8(i32 %v0_100032e4, i32* %v4_100032e8, i32 5, i32 1)
  %v1_100032f0 = urem i32 %v5_100032e8, 256
  %v0_100032fc = load i32, i32* @r28, align 4
  %v0_10003304 = load i32, i32* @r29, align 4
  store i32 %v0_10003304, i32* %r3.global-to-local, align 4
  store i32 268448524, i32* @lr, align 4
  %v4_10003308 = inttoptr i32 %v0_100032fc to i32*
  %v5_10003308 = call i32 @function_100006a8(i32 %v0_10003304, i32* %v4_10003308, i32 7, i32 65535)
  %v0_1000330c = load i32, i32* @r28, align 4
  %v5_10003318 = trunc i32 %v5_10003308 to i16
  %v0_10003320 = load i32, i32* @r29, align 4
  store i32 %v0_10003320, i32* %r3.global-to-local, align 4
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = inttoptr i32 %v0_1000330c to i32*
  %v5_10003324 = call i32 @function_100006a8(i32 %v0_10003320, i32* %v4_10003324, i32 11, i32 0)
  %v0_10003328 = load i32, i32* @r28, align 4
  %v1_1000332c = urem i32 %v5_10003324, 256
  %v0_1000333c = load i32, i32* @r29, align 4
  store i32 %v0_1000333c, i32* %r3.global-to-local, align 4
  store i32 268448580, i32* @lr, align 4
  %v4_10003340 = inttoptr i32 %v0_10003328 to i32*
  %v5_10003340 = call i32 @function_100006a8(i32 %v0_1000333c, i32* %v4_10003340, i32 12, i32 1)
  %v0_10003344 = load i32, i32* @r28, align 4
  %v1_10003350 = urem i32 %v5_10003340, 256
  %v0_10003354 = load i32, i32* @r29, align 4
  store i32 %v0_10003354, i32* %r3.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v4_10003358 = inttoptr i32 %v0_10003344 to i32*
  %v5_10003358 = call i32 @function_100006a8(i32 %v0_10003354, i32* %v4_10003358, i32 13, i32 1)
  %v0_1000335c = load i32, i32* @r28, align 4
  %v1_10003368 = urem i32 %v5_10003358, 256
  %v0_1000336c = load i32, i32* @r29, align 4
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  store i32 268448628, i32* @lr, align 4
  %v4_10003370 = inttoptr i32 %v0_1000335c to i32*
  %v5_10003370 = call i32 @function_100006a8(i32 %v0_1000336c, i32* %v4_10003370, i32 14, i32 0)
  %v0_10003374 = load i32, i32* @r28, align 4
  %v1_10003380 = urem i32 %v5_10003370, 256
  %v0_10003384 = load i32, i32* @r29, align 4
  store i32 %v0_10003384, i32* %r3.global-to-local, align 4
  store i32 268448652, i32* @lr, align 4
  %v4_10003388 = inttoptr i32 %v0_10003374 to i32*
  %v5_10003388 = call i32 @function_100006a8(i32 %v0_10003384, i32* %v4_10003388, i32 15, i32 0)
  %v0_1000338c = load i32, i32* @r28, align 4
  %v1_10003398 = urem i32 %v5_10003388, 256
  %v0_1000339c = load i32, i32* @r29, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v4_100033a0 = inttoptr i32 %v0_1000338c to i32*
  %v5_100033a0 = call i32 @function_100006a8(i32 %v0_1000339c, i32* %v4_100033a0, i32 16, i32 0)
  %v0_100033ac = load i32, i32* @r28, align 4
  %v1_100033b0 = urem i32 %v5_100033a0, 256
  %v0_100033b4 = load i32, i32* @r29, align 4
  store i32 %v0_100033b4, i32* %r3.global-to-local, align 4
  store i32 268448700, i32* @lr, align 4
  %v4_100033b8 = inttoptr i32 %v0_100033ac to i32*
  %v5_100033b8 = call i32 @function_100006a8(i32 %v0_100033b4, i32* %v4_100033b8, i32 0, i32 768)
  %v0_100033bc = load i32, i32* @r28, align 4
  store i32 %v5_100033b8, i32* %r25.global-to-local, align 4
  %v0_100033cc = load i32, i32* @r29, align 4
  store i32 %v0_100033cc, i32* %r3.global-to-local, align 4
  store i32 268448724, i32* @lr, align 4
  %v4_100033d0 = inttoptr i32 %v0_100033bc to i32*
  %v5_100033d0 = call i32 @function_100006a8(i32 %v0_100033cc, i32* %v4_100033d0, i32 1, i32 1)
  %v1_100033d8 = urem i32 %v5_100033d0, 256
  store i32 %v1_100033d8, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448744, i32* @lr, align 4
  %v3_100033e4 = call i32 @function_10009344(i32 2, i32 3, i32 6)
  store i32 %v3_100033e4, i32* %r3.global-to-local, align 4
  %v3_100033e8 = icmp eq i32 %v3_100033e4, -1
  store i1 %v3_100033e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100033e4, i32* %r24.global-to-local, align 4
  br i1 %v3_100033e8, label %dec_label_pc_100035a8, label %dec_label_pc_100033f4

dec_label_pc_100033f4:                            ; preds = %dec_label_pc_100031fc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003400 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448784, i32* @lr, align 4
  %v4_1000340c = call i32 @function_10009308(i32 0, i32 3, i32 %v2_10003400, i32 4)
  store i32 %v4_1000340c, i32* %r3.global-to-local, align 4
  %v3_10003410 = icmp eq i32 %v4_1000340c, -1
  store i1 %v3_10003410, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003410, label %dec_label_pc_100035a0, label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033f4
  %v0_10003418 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003418 = icmp slt i32 %v0_10003418, 0
  %v3_10003418 = icmp eq i32 %v0_10003418, 0
  store i1 %v1_10003418, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003418, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003424 = load i32, i32* @r31, align 4
  %v1_10003424 = urem i32 %v0_10003424, 65536
  store i32 %v1_10003424, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003418, 1
  br i1 %tmp49, label %dec_label_pc_10003740, label %dec_label_pc_1000342c

dec_label_pc_1000342c:                            ; preds = %dec_label_pc_10003418
  %v4_1000342c = sext i16 %v5_10003318 to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_100034d0 = ptrtoint i32* %stack_var_-368 to i32
  %v2_100034dc = ptrtoint i32* %stack_var_-384 to i32
  %v2_100034e0 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003518 = zext i16 %tmp13 to i32
  %v1_10003548 = and i32 %tmp, 1179648
  %v3_1000365c = icmp eq i32 %v1_100032f0, 0
  %v4_1000367c = sext i8 %v5_100032a4 to i32
  %v4_10003684 = sext i8 %v5_100032dc to i32
  %v1_1000354c = and i32 %tmp, 327680
  %v3_1000354c = icmp eq i32 %v1_1000354c, 0
  %v4_10003554 = icmp eq i32 %v1_10003548, 1179648
  br label %dec_label_pc_10003438

dec_label_pc_10003438:                            ; preds = %dec_label_pc_1000372c, %dec_label_pc_10003560, %dec_label_pc_1000342c
  %v0_10003438 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003438 = add i32 %v0_10003438, 40
  store i32 %v1_10003438, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_1000344853 = call i32 @function_10009344(i32 2, i32 1, i32 0)
  store i32 %v3_1000344853, i32* %r3.global-to-local, align 4
  %v3_1000344c55 = icmp eq i32 %v3_1000344853, -1
  store i1 %v3_1000344c55, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000344853, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c55, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003458:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538
  store i32 3, i32* @r4, align 4
  store i32 268448872, i32* @lr, align 4
  %v1_10003464 = call i32 @function_10008540(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10003470 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003470, i32* %r3.global-to-local, align 4
  store i32 268448892, i32* @lr, align 4
  %v2_10003478 = call i32 @function_10008540(i32 %v0_10003470)
  store i32 %v2_10003478, i32* %r3.global-to-local, align 4
  %v3_1000347c = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003484 = mul i32 %v3_1000347c, 24
  store i32 %v1_10003484, i32* %r0.global-to-local, align 4
  %v0_1000348c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000348c = add i32 %v0_1000348c, %v1_10003484
  store i32 %v2_1000348c, i32* %r11.global-to-local, align 4
  %v1_10003490 = add i32 %v2_1000348c, 20
  %v2_10003490 = inttoptr i32 %v1_10003490 to i8*
  %v3_10003490 = load i8, i8* %v2_10003490, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  store i32 %v4_10003490, i32* %r9.global-to-local, align 4
  %v3_10003494 = icmp eq i8 %v3_10003490, 31
  store i1 %v3_10003494, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10003490, 32
  %v1_1000356c = add i32 %v2_1000348c, 16
  %v2_1000356c = inttoptr i32 %v1_1000356c to i32*
  %v3_1000356c = load i32, i32* %v2_1000356c, align 4
  br i1 %tmp50, label %dec_label_pc_1000356c, label %dec_label_pc_1000349c

dec_label_pc_1000349c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r0.global-to-local, align 4
  %v0_100034a4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100034a4, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.0 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  store i32 %v4_1000342c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100034b0:                            ; preds = %dec_label_pc_10003594, %dec_label_pc_100034a8
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003594 ], [ %stack_var_-396.0, %dec_label_pc_100034a8 ]
  %storemerge = phi i16 [ %v1_10003594, %dec_label_pc_10003594 ], [ %v5_10003318, %dec_label_pc_100034a8 ]
  %v0_100034b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100034b8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100034c0.23 to i32), i32* @lr, align 4
  %v0_100034bc = call i32 @function_10009144()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v0_100034c4 = call i32 @function_100089f8()
  store i32 %v0_100034c4, i32* %r3.global-to-local, align 4
  store i32 %v0_100034c4, i32* @r31, align 4
  %v4_1000350c = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_1000351c = zext i16 %storemerge to i32
  %v4_10003520 = icmp eq i16 %storemerge, %tmp13
  %v4_1000350c.not = xor i1 %v4_1000350c, true
  br label %dec_label_pc_100034cc

dec_label_pc_100034cc:                            ; preds = %dec_label_pc_10003528, %dec_label_pc_100034b0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100034dc, i32* %r7.global-to-local, align 4
  store i32 %v2_100034e0, i32* %r8.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100034e4, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449008, i32* @lr, align 4
  %v6_100034ec = call i32 @function_10009250(i32 %v0_100034e4, i32 %v2_100034d0, i32 256, i32 16384, i32 %v2_100034dc, i32 %v2_100034e0)
  store i32 %v6_100034ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100034f8 = icmp eq i32 %v6_100034ec, -1
  store i1 %v3_100034f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100034f8, label %dec_label_pc_100035a8, label %dec_label_pc_10003504

dec_label_pc_10003504:                            ; preds = %dec_label_pc_100034cc
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_1000350c, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_100034ec, 41
  %or.cond = or i1 %tmp51, %v4_1000350c.not
  br i1 %or.cond, label %dec_label_pc_10003528, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_10003504
  store i32 %v4_10003518, i32* %r0.global-to-local, align 4
  store i32 %v4_1000351c, i32* %r8.global-to-local, align 4
  store i1 %v4_10003520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003520, label %dec_label_pc_10003544, label %dec_label_pc_10003528

dec_label_pc_10003528:                            ; preds = %dec_label_pc_10003504, %dec_label_pc_1000355c, %dec_label_pc_10003518
  store i32 268449068, i32* @lr, align 4
  %v0_10003528 = call i32 @function_100089f8()
  %v0_1000352c = load i32, i32* @r31, align 4
  %v2_1000352c = sub i32 %v0_10003528, %v0_1000352c
  store i32 %v2_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = icmp eq i32 %v2_1000352c, 10
  store i1 %v3_10003530, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_1000352c, 11
  br i1 %tmp52, label %dec_label_pc_100034cc, label %dec_label_pc_10003538

dec_label_pc_10003538:                            ; preds = %dec_label_pc_10003528
  %v0_10003538 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003538, i32* %r3.global-to-local, align 4
  store i32 268449088, i32* @lr, align 4
  %v0_1000353c = call i32 @function_10008628()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_10003448 = call i32 @function_10009344(i32 2, i32 1, i32 0)
  store i32 %v3_10003448, i32* %r3.global-to-local, align 4
  %v3_1000344c = icmp eq i32 %v3_10003448, -1
  store i1 %v3_1000344c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003448, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003544:                            ; preds = %dec_label_pc_10003518
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10003548, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10003554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003554, label %dec_label_pc_10003608, label %dec_label_pc_1000355c

dec_label_pc_1000355c:                            ; preds = %dec_label_pc_10003544
  br i1 %v3_1000354c, label %dec_label_pc_10003528, label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_1000355c
  %v0_10003560 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  store i32 268449128, i32* @lr, align 4
  %v0_10003564 = call i32 @function_10008628()
  store i32 %v0_10003564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003438

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r29.global-to-local, align 4
  %v0_10003570 = call i32 @function_10005b38()
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  %v3_10003574 = load i32, i32* %stack_var_-408, align 4
  %v1_10003578 = mul i32 %v3_10003574, 24
  %v1_1000357c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000357c = add i32 %v1_1000357c, %v1_10003578
  store i32 %v2_1000357c, i32* %r9.global-to-local, align 4
  %v1_10003580 = add i32 %v2_1000357c, 20
  %v2_10003580 = inttoptr i32 %v1_10003580 to i8*
  %v3_10003580 = load i8, i8* %v2_10003580, align 1
  %v4_10003580 = zext i8 %v3_10003580 to i32
  store i32 %v4_10003580, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10003580, 64
  %v2_10003584 = zext i8 %tmp56 to i32
  %v3_10003584 = lshr i32 %v0_10003570, %v2_10003584
  store i32 %v3_10003584, i32* %r3.global-to-local, align 4
  %v0_10003588 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003588 = add i32 %v3_10003584, %v0_10003588
  store i32 %v2_10003588, i32* %r29.global-to-local, align 4
  %v0_10003590 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003590, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_10003594:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.2 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  %v0_10003594 = call i32 @function_10005b38()
  %v1_10003594 = trunc i32 %v0_10003594 to i16
  store i32 %v0_10003594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100035a0:                            ; preds = %dec_label_pc_100033f4
  %v0_100035a0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100035a0, i32* %r3.global-to-local, align 4
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @function_10008628()
  store i32 %v0_100035a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100034cc, %dec_label_pc_100031fc, %dec_label_pc_100035a0
  store i32 %v0_10003214, i32* %r0.global-to-local, align 4
  %v1_100035bc = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003204)
  store i32 %v0_1000324c, i32* %r28.global-to-local, align 4
  store i32 %v0_10003254, i32* %r29.global-to-local, align 4
  %v0_10003604 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003604

dec_label_pc_10003608:                            ; preds = %dec_label_pc_10003544
  %v3_10003608 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003608, i32* %r29.global-to-local, align 4
  %v0_1000360c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000360c, i32* @r3, align 4
  %v0_10003610 = load i32, i32* @r30, align 4
  %v1_10003610 = add i32 %v0_10003610, 2
  %v2_10003610 = inttoptr i32 %v1_10003610 to i16*
  %v3_10003610 = load i16, i16* %v2_10003610, align 2
  %v4_10003610 = zext i16 %v3_10003610 to i32
  store i32 %v4_10003610, i32* %r11.global-to-local, align 4
  %v1_10003614 = mul i32 %v3_10003608, 16
  store i32 %v1_10003614, i32* %r9.global-to-local, align 4
  %v1_10003618 = mul i32 %v3_10003608, 4
  store i32 %v1_10003618, i32* @r29, align 4
  %v1_1000361c = load i32, i32* %r22.global-to-local, align 4
  %v3_1000361c = add i32 %v1_1000361c, %v1_10003614
  %v4_1000361c = inttoptr i32 %v3_1000361c to i32*
  store i32 %tmp14, i32* %v4_1000361c, align 4
  %v0_10003620 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003620 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003620 = add i32 %v1_10003620, %v0_10003620
  store i32 %v2_10003620, i32* %r9.global-to-local, align 4
  %v0_10003624 = load i32, i32* %r8.global-to-local, align 4
  %v1_10003624 = trunc i32 %v0_10003624 to i16
  %v3_10003624 = add i32 %v2_10003620, 14
  %v4_10003624 = inttoptr i32 %v3_10003624 to i16*
  store i16 %v1_10003624, i16* %v4_10003624, align 2
  %v0_10003628 = load i32, i32* @r30, align 4
  %v1_10003628 = add i32 %v0_10003628, 4
  %v2_10003628 = inttoptr i32 %v1_10003628 to i32*
  %v3_10003628 = load i32, i32* %v2_10003628, align 4
  store i32 %v3_10003628, i32* %r0.global-to-local, align 4
  %v0_1000362c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000362c = trunc i32 %v0_1000362c to i16
  %v2_1000362c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000362c = add i32 %v2_1000362c, 12
  %v4_1000362c = inttoptr i32 %v3_1000362c to i16*
  store i16 %v1_1000362c, i16* %v4_1000362c, align 2
  %v0_10003630 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003630 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003630 = add i32 %v1_10003630, 4
  %v3_10003630 = inttoptr i32 %v2_10003630 to i32*
  store i32 %v0_10003630, i32* %v3_10003630, align 4
  %v0_10003634 = load i32, i32* @r30, align 4
  %v1_10003634 = add i32 %v0_10003634, 8
  %v2_10003634 = inttoptr i32 %v1_10003634 to i32*
  %v3_10003634 = load i32, i32* %v2_10003634, align 4
  store i32 %v3_10003634, i32* %r0.global-to-local, align 4
  %v1_10003638 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003638 = add i32 %v1_10003638, 8
  %v3_10003638 = inttoptr i32 %v2_10003638 to i32*
  store i32 %v3_10003634, i32* %v3_10003638, align 4
  store i32 268449344, i32* @lr, align 4
  %v0_1000363c = call i32 @function_10009548()
  store i32 %v0_1000363c, i32* %r3.global-to-local, align 4
  %v3_10003640 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003640, i32* %r0.global-to-local, align 4
  %v1_10003644 = load i32, i32* @r29, align 4
  %v2_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003644 = add i32 %v2_10003644, %v1_10003644
  %v4_10003644 = inttoptr i32 %v3_10003644 to i32*
  store i32 %v0_1000363c, i32* %v4_10003644, align 4
  %v0_10003648 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003648 = mul i32 %v0_10003648, 4
  store i32 %v1_10003648, i32* %r0.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000364c = add i32 %v0_1000364c, %v1_10003648
  %v3_1000364c = inttoptr i32 %v2_1000364c to i32*
  %v4_1000364c = load i32, i32* %v3_1000364c, align 4
  store i32 %v4_1000364c, i32* @r31, align 4
  store i32 %v1_100032f0, i32* %r0.global-to-local, align 4
  %v1_10003654 = inttoptr i32 %v4_1000364c to i32*
  %v2_10003654 = load i32, i32* %v1_10003654, align 4
  store i32 %v2_10003654, i32* %r9.global-to-local, align 4
  %v1_10003658 = add i32 %v4_1000364c, 20
  store i32 %v1_10003658, i32* @r30, align 4
  store i1 %v3_1000365c, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003664 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003664, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1000366c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003670 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003670 = trunc i32 %v0_10003670 to i16
  %v2_10003670 = load i32, i32* @r31, align 4
  %v3_10003670 = add i32 %v2_10003670, 4
  %v4_10003670 = inttoptr i32 %v3_10003670 to i16*
  store i16 %v1_10003670, i16* %v4_10003670, align 2
  %v1_10003674 = load i32, i32* @r31, align 4
  %v2_10003674 = inttoptr i32 %v1_10003674 to i32*
  store i32 %v1_1000366c, i32* %v2_10003674, align 4
  %v0_10003678 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003678 = trunc i32 %v0_10003678 to i16
  %v2_10003678 = load i32, i32* @r31, align 4
  %v3_10003678 = add i32 %v2_10003678, 2
  %v4_10003678 = inttoptr i32 %v3_10003678 to i16*
  store i16 %v1_10003678, i16* %v4_10003678, align 2
  store i32 %v4_1000367c, i32* %r9.global-to-local, align 4
  %v2_10003680 = load i32, i32* @r31, align 4
  %v3_10003680 = add i32 %v2_10003680, 1
  %v4_10003680 = inttoptr i32 %v3_10003680 to i8*
  store i8 %v5_100032a4, i8* %v4_10003680, align 1
  store i32 %v4_10003684, i32* %r0.global-to-local, align 4
  %v2_10003688 = load i32, i32* @r31, align 4
  %v3_10003688 = add i32 %v2_10003688, 8
  %v4_10003688 = inttoptr i32 %v3_10003688 to i8*
  store i8 %v5_100032dc, i8* %v4_10003688, align 1
  %v0_1000368c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000368c, label %dec_label_pc_10003698, label %dec_label_pc_10003690

dec_label_pc_10003690:                            ; preds = %dec_label_pc_10003608
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003694 = load i32, i32* @r31, align 4
  %v3_10003694 = add i32 %v2_10003694, 6
  %v4_10003694 = inttoptr i32 %v3_10003694 to i16*
  store i16 16384, i16* %v4_10003694, align 2
  br label %dec_label_pc_10003698

dec_label_pc_10003698:                            ; preds = %dec_label_pc_10003608, %dec_label_pc_10003690
  %v2_100036a0 = load i32, i32* @r31, align 4
  %v3_100036a0 = add i32 %v2_100036a0, 9
  %v4_100036a0 = inttoptr i32 %v3_100036a0 to i8*
  store i8 6, i8* %v4_100036a0, align 1
  %v3_100036a4 = load i32, i32* @global_var_1001b748.16, align 4
  store i32 %v3_100036a4, i32* %r0.global-to-local, align 4
  %v1_100036a8 = load i32, i32* @r31, align 4
  %v2_100036a8 = add i32 %v1_100036a8, 12
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v3_100036a4, i32* %v3_100036a8, align 4
  %v3_100036ac = load i32, i32* %stack_var_-408, align 4
  %v1_100036b0 = mul i32 %v3_100036ac, 16
  store i32 %v1_100036b0, i32* %r9.global-to-local, align 4
  %v1_100036b4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100036b4 = add i32 %v1_100036b4, %v1_100036b0
  %v3_100036b4 = inttoptr i32 %v2_100036b4 to i32*
  %v4_100036b4 = load i32, i32* %v3_100036b4, align 4
  store i32 %v4_100036b4, i32* %r0.global-to-local, align 4
  store i32 %v2_100036b4, i32* %r9.global-to-local, align 4
  %v1_100036bc = add i32 %v2_100036b4, 12
  %v2_100036bc = inttoptr i32 %v1_100036bc to i16*
  %v3_100036bc = load i16, i16* %v2_100036bc, align 2
  %v4_100036bc = zext i16 %v3_100036bc to i32
  store i32 %v4_100036bc, i32* %r11.global-to-local, align 4
  %v1_100036c0 = load i32, i32* @r31, align 4
  %v2_100036c0 = add i32 %v1_100036c0, 16
  %v3_100036c0 = inttoptr i32 %v2_100036c0 to i32*
  store i32 %v4_100036b4, i32* %v3_100036c0, align 4
  %v0_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* @r31, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 20
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v0_100036c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036c8 = add i32 %v0_100036c8, 8
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  %v3_100036c8 = load i32, i32* %v2_100036c8, align 4
  store i32 %v3_100036c8, i32* %r0.global-to-local, align 4
  %v0_100036cc = load i32, i32* @r30, align 4
  %v1_100036cc = add i32 %v0_100036cc, 12
  %v2_100036cc = inttoptr i32 %v1_100036cc to i32*
  %v3_100036cc = load i32, i32* %v2_100036cc, align 4
  store i32 %v3_100036cc, i32* %r11.global-to-local, align 4
  %v2_100036d0 = add i32 %v0_100036cc, 4
  %v3_100036d0 = inttoptr i32 %v2_100036d0 to i32*
  store i32 %v3_100036c8, i32* %v3_100036d0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_100036d8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_100036d8, i32* %r11.global-to-local, align 4
  %v0_100036dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036dc = add i32 %v0_100036dc, 14
  %v2_100036dc = inttoptr i32 %v1_100036dc to i16*
  %v3_100036dc = load i16, i16* %v2_100036dc, align 2
  %v4_100036dc = zext i16 %v3_100036dc to i32
  store i32 %v4_100036dc, i32* %r0.global-to-local, align 4
  %v1_100036e0 = add i32 %v0_100036dc, 4
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  store i32 %v3_100036e0, i32* %r10.global-to-local, align 4
  %v1_100036e4 = or i32 %v1_100036d8, 1114112
  store i32 %v1_100036e4, i32* %r11.global-to-local, align 4
  %v2_100036e8 = load i32, i32* @r30, align 4
  %v3_100036e8 = add i32 %v2_100036e8, 2
  %v4_100036e8 = inttoptr i32 %v3_100036e8 to i16*
  store i16 %v3_100036dc, i16* %v4_100036e8, align 2
  %v0_100036ec = load i32, i32* %r10.global-to-local, align 4
  %v1_100036ec = load i32, i32* @r30, align 4
  %v2_100036ec = add i32 %v1_100036ec, 8
  %v3_100036ec = inttoptr i32 %v2_100036ec to i32*
  store i32 %v0_100036ec, i32* %v3_100036ec, align 4
  %v0_100036f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036f0 = load i32, i32* @r30, align 4
  %v2_100036f0 = add i32 %v1_100036f0, 12
  %v3_100036f0 = inttoptr i32 %v2_100036f0 to i32*
  store i32 %v0_100036f0, i32* %v3_100036f0, align 4
  %v0_100036f4 = call i32 @function_10005b38()
  %v1_100036f4 = trunc i32 %v0_100036f4 to i16
  store i32 %v1_1000332c, i32* %r9.global-to-local, align 4
  %v3_100036fc = load i32, i32* @r30, align 4
  %v4_100036fc = add i32 %v3_100036fc, 14
  %v5_100036fc = inttoptr i32 %v4_100036fc to i16*
  store i16 %v1_100036f4, i16* %v5_100036fc, align 2
  %v0_10003700 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003700, i32* @r4, align 4
  %v0_10003704 = load i32, i32* @r31, align 4
  %v1_10003704 = add i32 %v0_10003704, 40
  store i32 %v1_10003704, i32* @r3, align 4
  %v0_10003708 = load i32, i32* @r30, align 4
  %v1_10003708 = add i32 %v0_10003708, 12
  %v2_10003708 = inttoptr i32 %v1_10003708 to i32*
  %v3_10003708 = load i32, i32* %v2_10003708, align 4
  store i32 %v3_10003708, i32* %r0.global-to-local, align 4
  %v1_1000370c = call i32 @__asm_rlwimi(i32 %v1_1000332c, i32 21, i32 10, i32 10)
  store i32 %v1_1000370c, i32* %r0.global-to-local, align 4
  %v1_10003710 = call i32 @__asm_rlwimi(i32 %v1_10003350, i32 20, i32 11, i32 11)
  store i32 %v1_10003710, i32* %r0.global-to-local, align 4
  %v1_10003714 = call i32 @__asm_rlwimi(i32 %v1_10003368, i32 19, i32 12, i32 12)
  store i32 %v1_10003714, i32* %r0.global-to-local, align 4
  %v1_10003718 = call i32 @__asm_rlwimi(i32 %v1_10003380, i32 18, i32 13, i32 13)
  store i32 %v1_10003718, i32* %r0.global-to-local, align 4
  %v1_1000371c = call i32 @__asm_rlwimi(i32 %v1_10003398, i32 17, i32 14, i32 14)
  store i32 %v1_1000371c, i32* %r0.global-to-local, align 4
  %v1_10003720 = call i32 @__asm_rlwimi(i32 %v1_100033b0, i32 16, i32 15, i32 15)
  store i32 %v1_10003720, i32* %r0.global-to-local, align 4
  %v1_10003724 = load i32, i32* @r30, align 4
  %v2_10003724 = add i32 %v1_10003724, 12
  %v3_10003724 = inttoptr i32 %v2_10003724 to i32*
  store i32 %v1_10003720, i32* %v3_10003724, align 4
  %v0_10003728 = call i32 @function_10005d0c()
  store i32 %v0_10003728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000372c

dec_label_pc_1000372c:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538, %dec_label_pc_10003698
  %v3_1000372c = load i32, i32* %stack_var_-408, align 4
  %v1_10003730 = add i32 %v3_1000372c, 1
  store i32 %v1_10003730, i32* %r9.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003734 = icmp slt i32 %v1_10003730, %v1_10003734
  %v4_10003734 = icmp eq i32 %v1_10003730, %v1_10003734
  store i1 %v4_10003734, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003730, i32* %stack_var_-408, align 4
  br i1 %v2_10003734, label %dec_label_pc_10003438, label %dec_label_pc_10003740.loopexit

dec_label_pc_10003740.loopexit:                   ; preds = %dec_label_pc_1000372c
  %v0_1000374c.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000374c.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003740

dec_label_pc_10003740:                            ; preds = %dec_label_pc_10003740.loopexit, %dec_label_pc_10003418
  %v1_1000374c.pre = phi i1 [ %v1_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v1_10003418, %dec_label_pc_10003418 ]
  %v0_1000374c.pre = phi i1 [ %v0_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v3_10003418, %dec_label_pc_10003418 ]
  %v0_10003740 = load i32, i32* %r27.global-to-local, align 4
  %v3_10003740 = icmp eq i32 %v0_10003740, 0
  store i1 %v3_10003740, i1* %cr2_eq.global-to-local, align 1
  %v0_10003744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003744 = add i32 %v0_10003744, 40
  store i32 %v1_10003744, i32* %r26.global-to-local, align 4
  %v1_10003748 = add i32 %v0_10003744, 20
  store i32 %v1_10003748, i32* @r31, align 4
  br label %dec_label_pc_1000374c.outer

dec_label_pc_1000374c.outer:                      ; preds = %dec_label_pc_10003820, %dec_label_pc_10003740
  %v1_1000374c.ph = phi i1 [ %v1_1000374c.pre, %dec_label_pc_10003740 ], [ %v1_10003820, %dec_label_pc_10003820 ]
  %v0_1000374c.ph = phi i1 [ %v0_1000374c.pre, %dec_label_pc_10003740 ], [ %v0_10003820, %dec_label_pc_10003820 ]
  %v2_1000374c = or i1 %v1_1000374c.ph, %v0_1000374c.ph
  br label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_1000374c.outer, %dec_label_pc_1000374c
  br i1 %v2_1000374c, label %dec_label_pc_1000374c, label %dec_label_pc_10003750

dec_label_pc_10003750:                            ; preds = %dec_label_pc_1000374c, %dec_label_pc_10003820
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003760 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003760 = icmp eq i32 %v0_10003760, 65535
  store i1 %v4_10003760, i1* %cr4_eq.global-to-local, align 1
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = urem i32 %v0_10003764, 65536
  store i32 %v1_10003764, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, %dec_label_pc_10003750
  %v0_1000377c = phi i1 [ %v0_1000377c.pre, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ %v4_10003760, %dec_label_pc_10003750 ]
  %v0_10003770 = phi i32 [ %v1_10003810, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ 0, %dec_label_pc_10003750 ]
  %v1_10003770 = mul i32 %v0_10003770, 4
  store i32 %v1_10003770, i32* %r0.global-to-local, align 4
  %v0_10003774 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003774 = add i32 %v0_10003774, %v1_10003770
  %v3_10003774 = inttoptr i32 %v2_10003774 to i32*
  %v4_10003774 = load i32, i32* %v3_10003774, align 4
  store i32 %v4_10003774, i32* @r29, align 4
  %v1_10003778 = add i32 %v4_10003774, 20
  store i32 %v1_10003778, i32* %r28.global-to-local, align 4
  br i1 %v0_1000377c, label %dec_label_pc_10003828, label %dec_label_pc_10003780

dec_label_pc_10003780:                            ; preds = %dec_label_pc_10003770
  %v1_10003780 = add i32 %v4_10003774, 40
  store i32 %v1_10003780, i32* @r3, align 4
  %v0_10003784 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003784, i32* @r4, align 4
  %v0_10003788 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003788, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000378c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828, %dec_label_pc_1000383c
  %v2_1000378c = phi i32 [ %v4_10003774, %dec_label_pc_10003780 ], [ %v0_10003834, %dec_label_pc_10003828 ], [ %v2_1000378c.pre, %dec_label_pc_1000383c ]
  %v0_1000378c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v3_1000378c = add i32 %v2_1000378c, 10
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003794 = load i32, i32* @r29, align 4
  store i32 %v0_10003794, i32* @r3, align 4
  %v2_10003798 = call i32 @function_100043cc(i32 %v0_10003794, i32 20)
  %v3_10003798 = trunc i32 %v2_10003798 to i16
  store i32 %v2_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000379c, i32* %r9.global-to-local, align 4
  %v3_100037a0 = load i32, i32* @r29, align 4
  %v4_100037a0 = add i32 %v3_100037a0, 10
  %v5_100037a0 = inttoptr i32 %v4_100037a0 to i16*
  store i16 %v3_10003798, i16* %v5_100037a0, align 2
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100037a4, i32* @r4, align 4
  %v0_100037a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037a8 = mul i32 %v0_100037a8, 16
  store i32 %v1_100037a8, i32* %r9.global-to-local, align 4
  %v0_100037ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100037ac = trunc i32 %v0_100037ac to i16
  %v3_100037ac = add i32 %v0_100037a4, 16
  %v4_100037ac = inttoptr i32 %v3_100037ac to i16*
  store i16 %v1_100037ac, i16* %v4_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100037b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100037b0 = add i32 %v1_100037b0, %v0_100037b0
  store i32 %v2_100037b0, i32* %r9.global-to-local, align 4
  %v0_100037b4 = load i32, i32* @r30, align 4
  %v1_100037b8 = add i32 %v2_100037b0, 4
  %v2_100037b8 = inttoptr i32 %v1_100037b8 to i32*
  %v3_100037b8 = load i32, i32* %v2_100037b8, align 4
  store i32 %v3_100037b8, i32* %r11.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v0_100037c0 = load i32, i32* @r29, align 4
  store i32 %v0_100037c0, i32* %r3.global-to-local, align 4
  %v1_100037c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037c4 = add i32 %v1_100037c4, 4
  %v3_100037c4 = inttoptr i32 %v2_100037c4 to i32*
  store i32 %v3_100037b8, i32* %v3_100037c4, align 4
  %v0_100037c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100037c8 = add i32 %v0_100037c8, 1
  store i32 %v1_100037c8, i32* %r11.global-to-local, align 4
  %v1_100037cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100037cc = add i32 %v1_100037cc, 4
  %v3_100037cc = inttoptr i32 %v2_100037cc to i32*
  store i32 %v1_100037c8, i32* %v3_100037cc, align 4
  %v0_100037d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037d0, 8
  %v2_100037d0 = inttoptr i32 %v1_100037d0 to i32*
  %v3_100037d0 = load i32, i32* %v2_100037d0, align 4
  store i32 %v3_100037d0, i32* %r0.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037d4 = add i32 %v1_100037d4, 8
  %v3_100037d4 = inttoptr i32 %v2_100037d4 to i32*
  store i32 %v3_100037d0, i32* %v3_100037d4, align 4
  %v4_100037d8 = call i32 @function_10004430(i32 %v0_100037c0, i32 %v0_100037a4, i32 %v0_100037b4, i32 %v0_100037bc)
  %v5_100037d8 = trunc i32 %v4_100037d8 to i16
  store i32 %v4_100037d8, i32* %r3.global-to-local, align 4
  %v3_100037dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100037dc, i32* %r7.global-to-local, align 4
  %v0_100037e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037e0 = add i32 %v0_100037e0, 2
  %v2_100037e0 = inttoptr i32 %v1_100037e0 to i16*
  %v3_100037e0 = load i16, i16* %v2_100037e0, align 2
  %v4_100037e0 = zext i16 %v3_100037e0 to i32
  store i32 %v4_100037e0, i32* %r0.global-to-local, align 4
  %v0_100037e4 = load i32, i32* @r29, align 4
  %v1_100037e8 = mul i32 %v3_100037dc, 24
  store i32 %v1_100037e8, i32* %r7.global-to-local, align 4
  %v4_100037ec = add i32 %v0_100037e0, 16
  %v5_100037ec = inttoptr i32 %v4_100037ec to i16*
  store i16 %v5_100037d8, i16* %v5_100037ec, align 2
  %v0_100037f0 = load i32, i32* %r26.global-to-local, align 4
  %v0_100037f4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100037f4, i32* %r3.global-to-local, align 4
  %v0_100037f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v0_100037f8
  store i32 %v2_100037f8, i32* %r7.global-to-local, align 4
  %v0_10003800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003800 = trunc i32 %v0_10003800 to i16
  %v3_10003800 = add i32 %v2_100037f8, 2
  %v4_10003800 = inttoptr i32 %v3_10003800 to i16*
  store i16 %v1_10003800, i16* %v4_10003800, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449804, i32* @lr, align 4
  %v6_10003808 = call i32 @function_100092c8(i32 %v0_100037f4, i32 %v0_100037e4, i32 %v0_100037f0, i32 16384, i32 %v2_100037f8, i32 16)
  store i32 %v6_10003808, i32* %r3.global-to-local, align 4
  %v3_1000380c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000380c, i32* %r9.global-to-local, align 4
  %v1_10003810 = add i32 %v3_1000380c, 1
  store i32 %v1_10003810, i32* %r0.global-to-local, align 4
  %v1_10003814 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003814 = icmp slt i32 %v1_10003810, %v1_10003814
  %v4_10003814 = icmp eq i32 %v1_10003810, %v1_10003814
  store i1 %v4_10003814, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003810, i32* %stack_var_-408, align 4
  br i1 %v2_10003814, label %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, label %dec_label_pc_10003820

dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge: ; preds = %dec_label_pc_1000378c
  %v0_1000377c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003770

dec_label_pc_10003820:                            ; preds = %dec_label_pc_1000378c
  %v0_10003820 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003820 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003820 = or i1 %v0_10003820, %v1_10003820
  br i1 %v2_10003820, label %dec_label_pc_1000374c.outer, label %dec_label_pc_10003750

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003770
  %v0_10003828 = call i32 @function_10005b38()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  %v0_1000382c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000382c, i32* @r4, align 4
  %v3_10003830 = load i32, i32* @r29, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  %v0_10003834 = load i32, i32* @r29, align 4
  %v1_10003834 = add i32 %v0_10003834, 40
  store i32 %v1_10003834, i32* @r3, align 4
  %v0_10003838 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003838, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000383c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828
  %v0_1000383c = call i32 @function_10005d0c()
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  %v2_1000378c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000378c

; uselistorder directives
  uselistorder i32 %v0_10003834, { 1, 0 }
  uselistorder i1 %v1_10003820, { 1, 0 }
  uselistorder i1 %v0_10003820, { 1, 0 }
  uselistorder i32 %v1_10003810, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100037d8, { 1, 0 }
  uselistorder i32 %v0_100037a4, { 1, 0, 2 }
  uselistorder i32 %v2_10003798, { 1, 0 }
  uselistorder i32 %v1_10003770, { 1, 0 }
  uselistorder i32 %v1_10003730, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100036b4, { 1, 0, 2 }
  uselistorder i32 %v1_100036b0, { 1, 0 }
  uselistorder i32 %v1_10003648, { 1, 0 }
  uselistorder i32 %v1_10003614, { 1, 0 }
  uselistorder i32 %v0_10003594, { 1, 0 }
  uselistorder i32 %v2_10003588, { 1, 2, 0 }
  uselistorder i1 %v4_1000350c, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_1000356c, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10003548, { 1, 0 }
  uselistorder i32 %v1_100032f0, { 1, 0 }
  uselistorder i8 %v5_100032dc, { 1, 0 }
  uselistorder i8 %v5_100032a4, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i8 31, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 268448844, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000383c, { 1, 0 }
  uselistorder label %dec_label_pc_1000378c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003750, { 1, 0 }
  uselistorder label %dec_label_pc_1000374c, { 1, 0 }
  uselistorder label %dec_label_pc_1000372c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003698, { 1, 0 }
  uselistorder label %dec_label_pc_100035a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003528, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003458, { 1, 0 }
}

define i32 @function_10003844(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003844:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003848 = load i32, i32* @lr, align 4
  store i32 %v0_10003848, i32* %r0.global-to-local, align 4
  %v0_1000384c = call i32 @__asm_mfcr()
  store i32 %v0_1000384c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000385c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000384c, i32* %r21.global-to-local, align 4
  %v0_1000389c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100038a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100038ac = load i32, i32* @r30, align 4
  store i32 268449976, i32* @lr, align 4
  %v2_100038b4 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_100038b4, i32* %r22.global-to-local, align 4
  %v0_100038bc = load i32, i32* @r28, align 4
  %v0_100038c8 = load i32, i32* @r29, align 4
  store i32 %v0_100038c8, i32* %r3.global-to-local, align 4
  store i32 268450000, i32* @lr, align 4
  %v4_100038cc = inttoptr i32 %v0_100038bc to i32*
  %v5_100038cc = call i32 @function_100006a8(i32 %v0_100038c8, i32* %v4_100038cc, i32 2, i32 0)
  %v5_100038dc = trunc i32 %v5_100038cc to i8
  %v0_100038e4 = load i32, i32* @r28, align 4
  %v0_100038e8 = load i32, i32* @r29, align 4
  store i32 %v0_100038e8, i32* %r3.global-to-local, align 4
  store i32 268450032, i32* @lr, align 4
  %v4_100038ec = inttoptr i32 %v0_100038e4 to i32*
  %v5_100038ec = call i32 @function_100006a8(i32 %v0_100038e8, i32* %v4_100038ec, i32 3, i32 65535)
  %v0_100038f0 = load i32, i32* @r28, align 4
  store i32 %v5_100038ec, i32* %r18.global-to-local, align 4
  %v0_10003900 = load i32, i32* @r29, align 4
  store i32 %v0_10003900, i32* %r3.global-to-local, align 4
  store i32 268450056, i32* @lr, align 4
  %v4_10003904 = inttoptr i32 %v0_100038f0 to i32*
  %v5_10003904 = call i32 @function_100006a8(i32 %v0_10003900, i32* %v4_10003904, i32 4, i32 64)
  %v0_10003908 = load i32, i32* @r28, align 4
  %v5_10003914 = trunc i32 %v5_10003904 to i8
  %v0_1000391c = load i32, i32* @r29, align 4
  store i32 %v0_1000391c, i32* %r3.global-to-local, align 4
  store i32 268450084, i32* @lr, align 4
  %v4_10003920 = inttoptr i32 %v0_10003908 to i32*
  %v5_10003920 = call i32 @function_100006a8(i32 %v0_1000391c, i32* %v4_10003920, i32 5, i32 0)
  %v0_10003930 = load i32, i32* @r28, align 4
  %v1_10003934 = urem i32 %v5_10003920, 256
  store i32 %v1_10003934, i32* @r31, align 4
  %v0_10003938 = load i32, i32* @r29, align 4
  store i32 %v0_10003938, i32* %r3.global-to-local, align 4
  store i32 268450112, i32* @lr, align 4
  %v4_1000393c = inttoptr i32 %v0_10003930 to i32*
  %v5_1000393c = call i32 @function_100006a8(i32 %v0_10003938, i32* %v4_1000393c, i32 6, i32 65535)
  %v0_10003944 = load i32, i32* @r28, align 4
  store i32 %v5_1000393c, i32* %r19.global-to-local, align 4
  %v0_10003954 = load i32, i32* @r29, align 4
  store i32 %v0_10003954, i32* %r3.global-to-local, align 4
  store i32 268450140, i32* @lr, align 4
  %v4_10003958 = inttoptr i32 %v0_10003944 to i32*
  %v5_10003958 = call i32 @function_100006a8(i32 %v0_10003954, i32* %v4_10003958, i32 7, i32 65535)
  %v0_10003960 = load i32, i32* @r28, align 4
  store i32 %v5_10003958, i32* %r20.global-to-local, align 4
  %v0_10003970 = load i32, i32* @r29, align 4
  store i32 %v0_10003970, i32* %r3.global-to-local, align 4
  store i32 268450168, i32* @lr, align 4
  %v4_10003974 = inttoptr i32 %v0_10003960 to i32*
  %v5_10003974 = call i32 @function_100006a8(i32 %v0_10003970, i32* %v4_10003974, i32 17, i32 65535)
  %v0_1000397c = load i32, i32* @r28, align 4
  store i32 %v5_10003974, i32* %r15.global-to-local, align 4
  %v0_1000398c = load i32, i32* @r29, align 4
  store i32 %v0_1000398c, i32* %r3.global-to-local, align 4
  store i32 268450196, i32* @lr, align 4
  %v4_10003990 = inttoptr i32 %v0_1000397c to i32*
  %v5_10003990 = call i32 @function_100006a8(i32 %v0_1000398c, i32* %v4_10003990, i32 18, i32 65535)
  %v0_10003994 = load i32, i32* @r28, align 4
  store i32 %v5_10003990, i32* %r17.global-to-local, align 4
  %v0_100039a4 = load i32, i32* @r29, align 4
  store i32 %v0_100039a4, i32* %r3.global-to-local, align 4
  store i32 268450220, i32* @lr, align 4
  %v4_100039a8 = inttoptr i32 %v0_10003994 to i32*
  %v5_100039a8 = call i32 @function_100006a8(i32 %v0_100039a4, i32* %v4_100039a8, i32 11, i32 0)
  %v0_100039ac = load i32, i32* @r28, align 4
  %v0_100039bc = load i32, i32* @r29, align 4
  store i32 %v0_100039bc, i32* %r3.global-to-local, align 4
  store i32 268450244, i32* @lr, align 4
  %v4_100039c0 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039c0 = call i32 @function_100006a8(i32 %v0_100039bc, i32* %v4_100039c0, i32 12, i32 1)
  %v0_100039c4 = load i32, i32* @r28, align 4
  store i32 %v5_100039c0, i32* %r14.global-to-local, align 4
  %v0_100039d4 = load i32, i32* @r29, align 4
  store i32 %v0_100039d4, i32* %r3.global-to-local, align 4
  store i32 268450268, i32* @lr, align 4
  %v4_100039d8 = inttoptr i32 %v0_100039c4 to i32*
  %v5_100039d8 = call i32 @function_100006a8(i32 %v0_100039d4, i32* %v4_100039d8, i32 13, i32 0)
  %v0_100039dc = load i32, i32* @r28, align 4
  store i32 %v5_100039d8, i32* %r24.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r29, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_100006a8(i32 %v0_100039ec, i32* %v4_100039f0, i32 14, i32 0)
  %v0_100039f4 = load i32, i32* @r28, align 4
  store i32 %v5_100039f0, i32* %r27.global-to-local, align 4
  %v0_10003a04 = load i32, i32* @r29, align 4
  store i32 %v0_10003a04, i32* %r3.global-to-local, align 4
  store i32 268450316, i32* @lr, align 4
  %v4_10003a08 = inttoptr i32 %v0_100039f4 to i32*
  %v5_10003a08 = call i32 @function_100006a8(i32 %v0_10003a04, i32* %v4_10003a08, i32 15, i32 0)
  %v0_10003a0c = load i32, i32* @r28, align 4
  store i32 %v5_10003a08, i32* %r26.global-to-local, align 4
  %v0_10003a1c = load i32, i32* @r29, align 4
  store i32 %v0_10003a1c, i32* %r3.global-to-local, align 4
  store i32 268450340, i32* @lr, align 4
  %v4_10003a20 = inttoptr i32 %v0_10003a0c to i32*
  %v5_10003a20 = call i32 @function_100006a8(i32 %v0_10003a1c, i32* %v4_10003a20, i32 16, i32 0)
  %v0_10003a24 = load i32, i32* @r28, align 4
  store i32 %v5_10003a20, i32* %r30.global-to-local, align 4
  %v0_10003a34 = load i32, i32* @r29, align 4
  store i32 %v0_10003a34, i32* %r3.global-to-local, align 4
  store i32 268450364, i32* @lr, align 4
  %v4_10003a38 = inttoptr i32 %v0_10003a24 to i32*
  %v5_10003a38 = call i32 @function_100006a8(i32 %v0_10003a34, i32* %v4_10003a38, i32 0, i32 512)
  %v0_10003a3c = load i32, i32* @r28, align 4
  store i32 %v5_10003a38, i32* %r16.global-to-local, align 4
  %v0_10003a4c = load i32, i32* @r29, align 4
  store i32 %v0_10003a4c, i32* %r3.global-to-local, align 4
  store i32 268450388, i32* @lr, align 4
  %v4_10003a50 = inttoptr i32 %v0_10003a3c to i32*
  %v5_10003a50 = call i32 @function_100006a8(i32 %v0_10003a4c, i32* %v4_10003a50, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003a58 = load i32, i32* @global_var_1001b748.16, align 4
  %v1_10003a5c = urem i32 %v5_10003a50, 256
  %v0_10003a60 = load i32, i32* @r28, align 4
  %v0_10003a6c = load i32, i32* @r29, align 4
  store i32 %v0_10003a6c, i32* %r3.global-to-local, align 4
  store i32 268450420, i32* @lr, align 4
  %v5_10003a70 = inttoptr i32 %v0_10003a60 to i32*
  %v6_10003a70 = call i32 @function_10000628(i32 %v0_10003a6c, i32* %v5_10003a70, i32 25, i32 %v3_10003a58, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450440, i32* @lr, align 4
  %v3_10003a84 = call i32 @function_10009344(i32 2, i32 3, i32 6)
  store i32 %v3_10003a84, i32* %r3.global-to-local, align 4
  %v3_10003a88 = icmp eq i32 %v3_10003a84, -1
  store i32 %v3_10003a84, i32* %r23.global-to-local, align 4
  br i1 %v3_10003a88, label %dec_label_pc_10003dc8, label %dec_label_pc_10003a94

dec_label_pc_10003a94:                            ; preds = %dec_label_pc_10003844
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003aa0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450480, i32* @lr, align 4
  %v4_10003aac = call i32 @function_10009308(i32 0, i32 3, i32 %v2_10003aa0, i32 4)
  store i32 %v4_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v4_10003aac, -1
  br i1 %v3_10003ab0, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003a94
  %v0_10003ab8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ab8 = icmp slt i32 %v0_10003ab8, 0
  %v3_10003ab8 = icmp eq i32 %v0_10003ab8, 0
  store i1 %v1_10003ab8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ab8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003ac4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003ac4 = urem i32 %v0_10003ac4, 65536
  store i32 %v1_10003ac4, i32* %r18.global-to-local, align 4
  %v0_10003ac8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003ac8 = urem i32 %v0_10003ac8, 65536
  store i32 %v1_10003ac8, i32* %r19.global-to-local, align 4
  %v0_10003acc = load i32, i32* %r20.global-to-local, align 4
  %v1_10003acc = urem i32 %v0_10003acc, 65536
  store i32 %v1_10003acc, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003ab8, 1
  br i1 %tmp40, label %dec_label_pc_10003da0, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ab8
  %v0_10003ad8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003ad8 = urem i32 %v0_10003ad8, 256
  %v0_10003adc = load i32, i32* %r16.global-to-local, align 4
  %v1_10003adc = add i32 %v0_10003adc, 40
  store i32 %v1_10003adc, i32* %r24.global-to-local, align 4
  %v3_10003ae0 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003ae0, i1* %cr3_eq.global-to-local, align 1
  %v1_10003ae4 = urem i32 %v5_100039a8, 2
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 2
  store i32 %v1_10003ae8, i32* %r28.global-to-local, align 4
  %v1_10003aec = urem i32 %v0_10003ad8, 2
  store i32 %v1_10003aec, i32* %r26.global-to-local, align 4
  %v1_10003af0 = urem i32 %v1_10003adc, 65536
  store i32 %v1_10003af0, i32* %r0.global-to-local, align 4
  %v0_10003af8 = load i32, i32* @r31, align 4
  %v3_10003af8 = icmp eq i32 %v0_10003af8, 0
  store i1 %v3_10003af8, i1* %cr2_eq.global-to-local, align 1
  %v5_10003afc = trunc i32 %v1_10003adc to i16
  %v0_10003b00 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b00 = urem i32 %v0_10003b00, 2
  store i32 %v1_10003b00, i32* %r14.global-to-local, align 4
  %v0_10003b04 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003b04 = urem i32 %v0_10003b04, 2
  store i32 %v1_10003b04, i32* %r27.global-to-local, align 4
  %v0_10003b08 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003b08 = urem i32 %v0_10003b08, 2
  %v4_10003b58 = sext i8 %v5_100038dc to i32
  br label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450588, i32* @lr, align 4
  %v2_10003b18 = call i32 @function_100096a0(i32 1510, i32 1)
  store i32 %v2_10003b18, i32* %r3.global-to-local, align 4
  %v3_10003b1c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b1c, i32* %r9.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r31, align 4
  %v1_10003b20 = mul i32 %v0_10003b20, 4
  store i32 %v1_10003b20, i32* %r0.global-to-local, align 4
  %v1_10003b24 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003b24 = add i32 %v1_10003b24, %v1_10003b20
  %v4_10003b24 = inttoptr i32 %v3_10003b24 to i32*
  store i32 %v2_10003b18, i32* %v4_10003b24, align 4
  %v0_10003b28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b28 = mul i32 %v0_10003b28, 4
  store i32 %v1_10003b28, i32* %r9.global-to-local, align 4
  %v1_10003b2c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003b2c = add i32 %v1_10003b2c, %v1_10003b28
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  %v4_10003b2c = load i32, i32* %v3_10003b2c, align 4
  store i32 %v4_10003b2c, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003b34 = inttoptr i32 %v4_10003b2c to i32*
  %v2_10003b34 = load i32, i32* %v1_10003b34, align 4
  store i32 %v2_10003b34, i32* %r0.global-to-local, align 4
  %v1_10003b38 = add i32 %v4_10003b2c, 20
  store i32 %v1_10003b38, i32* @r30, align 4
  %v0_10003b3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b3c = trunc i32 %v0_10003b3c to i16
  %v3_10003b3c = add i32 %v4_10003b2c, 4
  %v4_10003b3c = inttoptr i32 %v3_10003b3c to i16*
  store i16 %v1_10003b3c, i16* %v4_10003b3c, align 2
  %v1_10003b40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b40, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003b48 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003b4c = load i32, i32* @r31, align 4
  %v2_10003b4c = inttoptr i32 %v1_10003b4c to i32*
  store i32 %v1_10003b48, i32* %v2_10003b4c, align 4
  %v2_10003b54 = load i32, i32* @r31, align 4
  %v3_10003b54 = add i32 %v2_10003b54, 8
  %v4_10003b54 = inttoptr i32 %v3_10003b54 to i8*
  store i8 %v5_10003914, i8* %v4_10003b54, align 1
  store i32 %v4_10003b58, i32* %r9.global-to-local, align 4
  %v2_10003b5c = load i32, i32* @r31, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v5_100038dc, i8* %v4_10003b5c, align 1
  store i32 %v1_10003adc, i32* %r0.global-to-local, align 4
  %v2_10003b64 = load i32, i32* @r31, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 2
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i16*
  store i16 %v5_10003afc, i16* %v4_10003b64, align 2
  %v0_10003b68 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003b68, label %dec_label_pc_10003b74, label %dec_label_pc_10003b6c

dec_label_pc_10003b6c:                            ; preds = %dec_label_pc_10003b10
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003b70 = load i32, i32* @r31, align 4
  %v3_10003b70 = add i32 %v2_10003b70, 6
  %v4_10003b70 = inttoptr i32 %v3_10003b70 to i16*
  store i16 16384, i16* %v4_10003b70, align 2
  br label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b6c
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003b78 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i16
  %v2_10003b78 = load i32, i32* @r31, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 20
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i16*
  store i16 %v1_10003b78, i16* %v4_10003b78, align 2
  %v0_10003b7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i8
  %v2_10003b7c = load i32, i32* @r31, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 9
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i8*
  store i8 %v1_10003b7c, i8* %v4_10003b7c, align 1
  %v0_10003b80 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b80 = trunc i32 %v0_10003b80 to i16
  %v2_10003b80 = load i32, i32* @r30, align 4
  %v3_10003b80 = add i32 %v2_10003b80, 2
  %v4_10003b80 = inttoptr i32 %v3_10003b80 to i16*
  store i16 %v1_10003b80, i16* %v4_10003b80, align 2
  %v1_10003b88 = load i32, i32* @r31, align 4
  %v2_10003b88 = add i32 %v1_10003b88, 12
  %v3_10003b88 = inttoptr i32 %v2_10003b88 to i32*
  store i32 %v6_10003a70, i32* %v3_10003b88, align 4
  %v3_10003b8c = load i32, i32* %stack_var_-136, align 4
  %v1_10003b90 = mul i32 %v3_10003b8c, 24
  %v1_10003b94 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v1_10003b90
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* @r31, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 16
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v3_10003b98, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* @r30, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 4
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* @r30, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  %v2_10003ba8 = inttoptr i32 %v1_10003ba8 to i32*
  %v3_10003ba8 = load i32, i32* %v2_10003ba8, align 4
  store i32 %v3_10003ba8, i32* %r0.global-to-local, align 4
  %v1_10003bac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003bac, i32* %r0.global-to-local, align 4
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v1_10003bb4 = call i32 @__asm_rlwimi(i32 %v1_10003ae4, i32 21, i32 10, i32 10)
  store i32 %v1_10003bb4, i32* %r0.global-to-local, align 4
  %v1_10003bb8 = call i32 @__asm_rlwimi(i32 %v1_10003b00, i32 20, i32 11, i32 11)
  store i32 %v1_10003bb8, i32* %r0.global-to-local, align 4
  %v1_10003bbc = call i32 @__asm_rlwimi(i32 %v1_10003aec, i32 19, i32 12, i32 12)
  store i32 %v1_10003bbc, i32* %r0.global-to-local, align 4
  %v1_10003bc0 = call i32 @__asm_rlwimi(i32 %v1_10003b04, i32 18, i32 13, i32 13)
  store i32 %v1_10003bc0, i32* %r0.global-to-local, align 4
  %v1_10003bc4 = call i32 @__asm_rlwimi(i32 %v1_10003ae8, i32 17, i32 14, i32 14)
  store i32 %v1_10003bc4, i32* %r0.global-to-local, align 4
  %v1_10003bc8 = call i32 @__asm_rlwimi(i32 %v1_10003b08, i32 16, i32 15, i32 15)
  store i32 %v1_10003bc8, i32* %r0.global-to-local, align 4
  %v1_10003bcc = load i32, i32* @r30, align 4
  %v2_10003bcc = add i32 %v1_10003bcc, 12
  %v3_10003bcc = inttoptr i32 %v2_10003bcc to i32*
  store i32 %v1_10003bc8, i32* %v3_10003bcc, align 4
  %v0_10003bd0 = call i32 @function_10005b38()
  %v1_10003bd0 = trunc i32 %v0_10003bd0 to i16
  %v0_10003bd4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003bd4, i32* @r4, align 4
  %v3_10003bd8 = load i32, i32* @r30, align 4
  %v4_10003bd8 = add i32 %v3_10003bd8, 14
  %v5_10003bd8 = inttoptr i32 %v4_10003bd8 to i16*
  store i16 %v1_10003bd0, i16* %v5_10003bd8, align 2
  %v0_10003bdc = load i32, i32* @r31, align 4
  %v1_10003bdc = add i32 %v0_10003bdc, 40
  store i32 %v1_10003bdc, i32* @r3, align 4
  %v0_10003be0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003be0, label %dec_label_pc_10003bf0, label %dec_label_pc_10003be4

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003b74
  %v0_10003be4 = load i32, i32* @r30, align 4
  %v1_10003be4 = add i32 %v0_10003be4, 12
  %v2_10003be4 = inttoptr i32 %v1_10003be4 to i32*
  %v3_10003be4 = load i32, i32* %v2_10003be4, align 4
  %v1_10003be8 = or i32 %v3_10003be4, 524288
  store i32 %v1_10003be8, i32* %r0.global-to-local, align 4
  store i32 %v1_10003be8, i32* %v2_10003be4, align 4
  br label %dec_label_pc_10003bf0

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003b74, %dec_label_pc_10003be4
  %v0_10003bf0 = call i32 @function_10005d0c()
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v3_10003bf4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003bf4, i32* %r9.global-to-local, align 4
  %v1_10003bf8 = add i32 %v3_10003bf4, 1
  %v1_10003bfc = load i32, i32* %r21.global-to-local, align 4
  %v2_10003bfc = icmp slt i32 %v1_10003bf8, %v1_10003bfc
  store i32 %v1_10003bf8, i32* %stack_var_-136, align 4
  br i1 %v2_10003bfc, label %dec_label_pc_10003b10, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003c0c = load i32, i32* %r16.global-to-local, align 4
  %v1_10003c0c = add i32 %v0_10003c0c, 20
  store i32 %v1_10003c0c, i32* @r30, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v3_10003c14 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003c14, i1* %cr2_eq.global-to-local, align 1
  %v3_10003c18 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003c18, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c1c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c1c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003c1c.preheader:                  ; preds = %dec_label_pc_10003cfc, %dec_label_pc_10003da0, %dec_label_pc_10003c08
  %v1_10003c1c = phi i1 [ %v1_10003ab8, %dec_label_pc_10003da0 ], [ %v1_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v1_10003cfc, %dec_label_pc_10003cfc ]
  %v0_10003c1c = phi i1 [ %v3_10003ab8, %dec_label_pc_10003da0 ], [ %v0_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v0_10003cfc, %dec_label_pc_10003cfc ]
  %v2_10003c1c = or i1 %v1_10003c1c, %v0_10003c1c
  br label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003c1c.preheader, %dec_label_pc_10003c1c
  br i1 %v2_10003c1c, label %dec_label_pc_10003c1c, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003c1c, %dec_label_pc_10003cfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003c24 = load i32, i32* @r30, align 4
  %v1_10003c24 = urem i32 %v0_10003c24, 65536
  store i32 %v1_10003c24, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003c34

dec_label_pc_10003c34:                            ; preds = %dec_label_pc_10003c8c, %dec_label_pc_10003c20
  %v0_10003c34 = phi i32 [ %v1_10003cec, %dec_label_pc_10003c8c ], [ 0, %dec_label_pc_10003c20 ]
  %v1_10003c34 = mul i32 %v0_10003c34, 24
  store i32 %v1_10003c34, i32* %r0.global-to-local, align 4
  %v1_10003c38 = mul i32 %v0_10003c34, 4
  %v1_10003c3c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003c3c = add i32 %v1_10003c3c, %v1_10003c38
  %v3_10003c3c = inttoptr i32 %v2_10003c3c to i32*
  %v4_10003c3c = load i32, i32* %v3_10003c3c, align 4
  store i32 %v4_10003c3c, i32* %r28.global-to-local, align 4
  %v1_10003c40 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003c40 = add i32 %v1_10003c40, %v1_10003c34
  %v1_10003c44 = add i32 %v2_10003c40, 20
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i8*
  %v3_10003c44 = load i8, i8* %v2_10003c44, align 1
  %v4_10003c44 = zext i8 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r9.global-to-local, align 4
  %v1_10003c48 = add i32 %v4_10003c3c, 20
  store i32 %v1_10003c48, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003c44, 32
  br i1 %tmp41, label %dec_label_pc_10003d04, label %dec_label_pc_10003c54

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_10003c34
  %v0_10003c54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003c54, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 65535, i32* @r29, align 4
  %v0_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003c60 = icmp eq i32 %v0_10003c60, 65535
  br i1 %v4_10003c60, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003c68:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v1_10003c68 = phi i32 [ %v1_10003d3c, %dec_label_pc_10003d2c ], [ 65535, %dec_label_pc_10003c58 ]
  %v0_10003c68 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003c68 = icmp eq i32 %v0_10003c68, %v1_10003c68
  br i1 %v4_10003c68, label %dec_label_pc_10003d54, label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge, %dec_label_pc_10003c68
  %v1_10003c70 = phi i32 [ %v1_10003c70.pre, %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge ], [ %v1_10003c68, %dec_label_pc_10003c68 ]
  %v0_10003c70 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c70 = icmp eq i32 %v0_10003c70, %v1_10003c70
  br i1 %v4_10003c70, label %dec_label_pc_10003d64, label %dec_label_pc_10003c78

dec_label_pc_10003c78:                            ; preds = %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge, %dec_label_pc_10003c70
  %v1_10003c78 = phi i32 [ %v1_10003c78.pre, %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge ], [ %v1_10003c70, %dec_label_pc_10003c70 ]
  %v0_10003c78 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003c78 = icmp eq i32 %v0_10003c78, %v1_10003c78
  br i1 %v4_10003c78, label %dec_label_pc_10003d74, label %dec_label_pc_10003c80

dec_label_pc_10003c80:                            ; preds = %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge, %dec_label_pc_10003c78
  %v1_10003c80 = phi i32 [ %v1_10003c80.pre, %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge ], [ %v1_10003c78, %dec_label_pc_10003c78 ]
  %v0_10003c80 = load i32, i32* %r17.global-to-local, align 4
  %v4_10003c80 = icmp eq i32 %v0_10003c80, %v1_10003c80
  br i1 %v4_10003c80, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003c88 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c88, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003c8c:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84, %dec_label_pc_10003d90
  %v0_10003c8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c8c = trunc i32 %v0_10003c8c to i16
  %v2_10003c8c = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c8c = add i32 %v2_10003c8c, 10
  %v4_10003c8c = inttoptr i32 %v3_10003c8c to i16*
  store i16 %v1_10003c8c, i16* %v4_10003c8c, align 2
  %v0_10003c94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c94, i32* @r3, align 4
  %v2_10003c98 = call i32 @function_100043cc(i32 %v0_10003c94, i32 20)
  %v3_10003c98 = trunc i32 %v2_10003c98 to i16
  %v0_10003c9c = load i32, i32* @r31, align 4
  store i32 %v0_10003c9c, i32* @r4, align 4
  %v4_10003ca0 = add i32 %v0_10003c94, 10
  %v5_10003ca0 = inttoptr i32 %v4_10003ca0 to i16*
  store i16 %v3_10003c98, i16* %v5_10003ca0, align 2
  %v0_10003ca4 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003ca8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ca8 = trunc i32 %v0_10003ca8 to i16
  %v2_10003ca8 = load i32, i32* @r31, align 4
  %v3_10003ca8 = add i32 %v2_10003ca8, 16
  %v4_10003ca8 = inttoptr i32 %v3_10003ca8 to i16*
  store i16 %v1_10003ca8, i16* %v4_10003ca8, align 2
  %v0_10003cac = load i32, i32* @r30, align 4
  %v0_10003cb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003cb0, i32* %r3.global-to-local, align 4
  %v4_10003cb4 = call i32 @function_10004430(i32 %v0_10003cb0, i32 %v0_10003c9c, i32 %v0_10003ca4, i32 %v0_10003cac)
  %v5_10003cb4 = trunc i32 %v4_10003cb4 to i16
  store i32 %v4_10003cb4, i32* %r3.global-to-local, align 4
  %v3_10003cb8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003cb8, i32* %r7.global-to-local, align 4
  %v0_10003cbc = load i32, i32* @r31, align 4
  %v1_10003cbc = add i32 %v0_10003cbc, 2
  %v2_10003cbc = inttoptr i32 %v1_10003cbc to i16*
  %v3_10003cbc = load i16, i16* %v2_10003cbc, align 2
  %v4_10003cbc = zext i16 %v3_10003cbc to i32
  store i32 %v4_10003cbc, i32* %r0.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003cc4 = mul i32 %v3_10003cb8, 24
  store i32 %v1_10003cc4, i32* %r7.global-to-local, align 4
  %v4_10003cc8 = add i32 %v0_10003cbc, 16
  %v5_10003cc8 = inttoptr i32 %v4_10003cc8 to i16*
  store i16 %v5_10003cb4, i16* %v5_10003cc8, align 2
  %v0_10003ccc = load i32, i32* %r24.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003cd0, i32* %r3.global-to-local, align 4
  %v0_10003cd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003cd4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, %v0_10003cd4
  store i32 %v2_10003cd4, i32* %r7.global-to-local, align 4
  %v0_10003cdc = load i32, i32* %r0.global-to-local, align 4
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  %v3_10003cdc = add i32 %v2_10003cd4, 2
  %v4_10003cdc = inttoptr i32 %v3_10003cdc to i16*
  store i16 %v1_10003cdc, i16* %v4_10003cdc, align 2
  store i32 268451048, i32* @lr, align 4
  %v6_10003ce4 = call i32 @function_100092c8(i32 %v0_10003cd0, i32 %v0_10003cc0, i32 %v0_10003ccc, i32 16384, i32 %v2_10003cd4, i32 16)
  store i32 %v6_10003ce4, i32* %r3.global-to-local, align 4
  %v3_10003ce8 = load i32, i32* %stack_var_-136, align 4
  %v1_10003cec = add i32 %v3_10003ce8, 1
  store i32 %v1_10003cec, i32* %r9.global-to-local, align 4
  %v1_10003cf0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003cf0 = icmp slt i32 %v1_10003cec, %v1_10003cf0
  store i32 %v1_10003cec, i32* %stack_var_-136, align 4
  br i1 %v2_10003cf0, label %dec_label_pc_10003c34, label %dec_label_pc_10003cfc

dec_label_pc_10003cfc:                            ; preds = %dec_label_pc_10003c8c
  %v0_10003cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003cfc = or i1 %v0_10003cfc, %v1_10003cfc
  br i1 %v2_10003cfc, label %dec_label_pc_10003c1c.preheader, label %dec_label_pc_10003c20

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003c34
  %v1_10003d04 = add i32 %v2_10003c40, 16
  %v2_10003d04 = inttoptr i32 %v1_10003d04 to i32*
  %v3_10003d04 = load i32, i32* %v2_10003d04, align 4
  store i32 %v3_10003d04, i32* %r29.global-to-local, align 4
  %v0_10003d08 = call i32 @function_10005b38()
  store i32 %v0_10003d08, i32* %r3.global-to-local, align 4
  %v3_10003d0c = load i32, i32* %stack_var_-136, align 4
  %v1_10003d10 = mul i32 %v3_10003d0c, 24
  %v1_10003d14 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d14 = add i32 %v1_10003d14, %v1_10003d10
  store i32 %v2_10003d14, i32* %r9.global-to-local, align 4
  %v1_10003d18 = add i32 %v2_10003d14, 20
  %v2_10003d18 = inttoptr i32 %v1_10003d18 to i8*
  %v3_10003d18 = load i8, i8* %v2_10003d18, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  store i32 %v4_10003d18, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d18, 64
  %v2_10003d1c = zext i8 %tmp to i32
  %v3_10003d1c = lshr i32 %v0_10003d08, %v2_10003d1c
  store i32 %v3_10003d1c, i32* %r3.global-to-local, align 4
  %v0_10003d20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d20 = add i32 %v3_10003d1c, %v0_10003d20
  store i32 %v2_10003d20, i32* %r29.global-to-local, align 4
  %v1_10003d24 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d24 = add i32 %v1_10003d24, 16
  %v3_10003d24 = inttoptr i32 %v2_10003d24 to i32*
  store i32 %v2_10003d20, i32* %v3_10003d24, align 4
  %v0_10003d28 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003d28, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003d2c:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003d30 = call i32 @function_10005b38()
  store i32 %v0_10003d30, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003d38 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d38 = add i32 %v1_10003d38, 12
  %v3_10003d38 = inttoptr i32 %v2_10003d38 to i32*
  store i32 %v0_10003d30, i32* %v3_10003d38, align 4
  %v0_10003d3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003d3c = load i32, i32* @r29, align 4
  %v4_10003d3c = icmp eq i32 %v0_10003d3c, %v1_10003d3c
  br i1 %v4_10003d3c, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003d44:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v0_10003d44 = call i32 @function_10005b38()
  %v1_10003d44 = trunc i32 %v0_10003d44 to i16
  store i32 %v0_10003d44, i32* %r3.global-to-local, align 4
  %v0_10003d48 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003d48 = load i32, i32* @r29, align 4
  %v4_10003d48 = icmp eq i32 %v0_10003d48, %v1_10003d48
  %v3_10003d4c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d4c = add i32 %v3_10003d4c, 4
  %v5_10003d4c = inttoptr i32 %v4_10003d4c to i16*
  store i16 %v1_10003d44, i16* %v5_10003d4c, align 2
  br i1 %v4_10003d48, label %dec_label_pc_10003d54, label %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge

dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge: ; preds = %dec_label_pc_10003d44
  %v1_10003c70.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c70

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d44, %dec_label_pc_10003c68
  %v0_10003d54 = call i32 @function_10005b38()
  %v1_10003d54 = trunc i32 %v0_10003d54 to i16
  store i32 %v0_10003d54, i32* %r3.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003d58 = load i32, i32* @r29, align 4
  %v4_10003d58 = icmp eq i32 %v0_10003d58, %v1_10003d58
  %v3_10003d5c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d5c = add i32 %v3_10003d5c, 20
  %v5_10003d5c = inttoptr i32 %v4_10003d5c to i16*
  store i16 %v1_10003d54, i16* %v5_10003d5c, align 2
  br i1 %v4_10003d58, label %dec_label_pc_10003d64, label %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge

dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge: ; preds = %dec_label_pc_10003d54
  %v1_10003c78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c78

dec_label_pc_10003d64:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003c70
  %v0_10003d64 = call i32 @function_10005b38()
  %v1_10003d64 = trunc i32 %v0_10003d64 to i16
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  %v0_10003d68 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003d68 = load i32, i32* @r29, align 4
  %v4_10003d68 = icmp eq i32 %v0_10003d68, %v1_10003d68
  %v3_10003d6c = load i32, i32* @r31, align 4
  %v4_10003d6c = add i32 %v3_10003d6c, 2
  %v5_10003d6c = inttoptr i32 %v4_10003d6c to i16*
  store i16 %v1_10003d64, i16* %v5_10003d6c, align 2
  br i1 %v4_10003d68, label %dec_label_pc_10003d74, label %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge

dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge: ; preds = %dec_label_pc_10003d64
  %v1_10003c80.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c80

dec_label_pc_10003d74:                            ; preds = %dec_label_pc_10003d64, %dec_label_pc_10003c78
  %v0_10003d74 = call i32 @function_10005b38()
  store i32 %v0_10003d74, i32* %r3.global-to-local, align 4
  %v0_10003d78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003d78 = load i32, i32* @r29, align 4
  %v4_10003d78 = icmp eq i32 %v0_10003d78, %v1_10003d78
  %v1_10003d7c = load i32, i32* @r31, align 4
  %v2_10003d7c = add i32 %v1_10003d7c, 4
  %v3_10003d7c = inttoptr i32 %v2_10003d7c to i32*
  store i32 %v0_10003d74, i32* %v3_10003d7c, align 4
  br i1 %v4_10003d78, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003d84:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003d84 = call i32 @function_10005b38()
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v1_10003d88 = load i32, i32* @r31, align 4
  %v2_10003d88 = add i32 %v1_10003d88, 8
  %v3_10003d88 = inttoptr i32 %v2_10003d88 to i32*
  store i32 %v0_10003d84, i32* %v3_10003d88, align 4
  %v0_10003d8c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d8c, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84
  %v0_10003d90 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003d90 = add i32 %v0_10003d90, 40
  store i32 %v1_10003d90, i32* @r3, align 4
  %v0_10003d94 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003d94, i32* @r4, align 4
  %v0_10003d98 = call i32 @function_10005d0c()
  store i32 %v0_10003d98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c8c

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003ab8
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003da4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003da4 = add i32 %v0_10003da4, 40
  store i32 %v1_10003da4, i32* %r24.global-to-local, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v1_10003dac = add i32 %v0_10003da4, 20
  store i32 %v1_10003dac, i32* @r30, align 4
  %v3_10003db0 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003db0, i1* %cr2_eq.global-to-local, align 1
  %v3_10003db4 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003db4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003dc0:                            ; preds = %dec_label_pc_10003a94
  %v0_10003dc0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003dc0, i32* %r3.global-to-local, align 4
  store i32 268451272, i32* @lr, align 4
  %v0_10003dc4 = call i32 @function_10008628()
  store i32 %v0_10003dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003dc8

dec_label_pc_10003dc8:                            ; preds = %dec_label_pc_10003844, %dec_label_pc_10003dc0
  store i32 %v0_1000385c, i32* %r0.global-to-local, align 4
  %v1_10003ddc = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000384c)
  store i32 %v0_1000389c, i32* %r28.global-to-local, align 4
  store i32 %v0_100038a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100038ac, i32* %r30.global-to-local, align 4
  %v0_10003e24 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003e24

; uselistorder directives
  uselistorder i32 %v0_10003d64, { 1, 0 }
  uselistorder i32 %v0_10003d54, { 1, 0 }
  uselistorder i32 %v0_10003d44, { 1, 0 }
  uselistorder i32 %v1_10003d3c, { 1, 0 }
  uselistorder i1 %v1_10003cfc, { 1, 0 }
  uselistorder i1 %v0_10003cfc, { 1, 0 }
  uselistorder i32 %v1_10003cec, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003cb4, { 1, 0 }
  uselistorder i32 %v1_10003b28, { 1, 0 }
  uselistorder i32 %v1_10003b20, { 1, 0 }
  uselistorder i32 %v1_10003b04, { 1, 0 }
  uselistorder i32 %v1_10003b00, { 1, 0 }
  uselistorder i32 %v1_10003aec, { 1, 0 }
  uselistorder i32 %v1_10003ae8, { 1, 0 }
  uselistorder i32 %v1_10003ae4, { 2, 1, 0 }
  uselistorder i32 %v1_10003adc, { 1, 2, 0, 3 }
  uselistorder i32 %v6_10003a70, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003a5c, { 3, 0, 2, 1 }
  uselistorder i8 %v5_100038dc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10005d0c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10003dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003d90, { 1, 0 }
  uselistorder label %dec_label_pc_10003c8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10003b74, { 1, 0 }
}

define i32 @function_10003e28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003e28:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003e2c = load i32, i32* @lr, align 4
  store i32 %v0_10003e2c, i32* %r0.global-to-local, align 4
  %v0_10003e30 = call i32 @__asm_mfcr()
  store i32 %v0_10003e30, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003e30, i32* %r24.global-to-local, align 4
  %v0_10003e80 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003e88 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003e94 = load i32, i32* @r31, align 4
  store i32 268451484, i32* @lr, align 4
  %v2_10003e98 = call i32 @function_100096a0(i32 4, i32 4)
  store i32 %v2_10003e98, i32* %r25.global-to-local, align 4
  %v0_10003ea0 = load i32, i32* @r28, align 4
  %v0_10003eac = load i32, i32* @r29, align 4
  store i32 %v0_10003eac, i32* %r3.global-to-local, align 4
  store i32 268451508, i32* @lr, align 4
  %v4_10003eb0 = inttoptr i32 %v0_10003ea0 to i32*
  %v5_10003eb0 = call i32 @function_100006a8(i32 %v0_10003eac, i32* %v4_10003eb0, i32 2, i32 0)
  %v5_10003ec0 = trunc i32 %v5_10003eb0 to i8
  %v0_10003ec8 = load i32, i32* @r28, align 4
  %v0_10003ecc = load i32, i32* @r29, align 4
  store i32 %v0_10003ecc, i32* %r3.global-to-local, align 4
  store i32 268451540, i32* @lr, align 4
  %v4_10003ed0 = inttoptr i32 %v0_10003ec8 to i32*
  %v5_10003ed0 = call i32 @function_100006a8(i32 %v0_10003ecc, i32* %v4_10003ed0, i32 3, i32 65535)
  %v0_10003ed4 = load i32, i32* @r28, align 4
  store i32 %v5_10003ed0, i32* %r21.global-to-local, align 4
  %v0_10003ee4 = load i32, i32* @r29, align 4
  store i32 %v0_10003ee4, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v4_10003ee8 = inttoptr i32 %v0_10003ed4 to i32*
  %v5_10003ee8 = call i32 @function_100006a8(i32 %v0_10003ee4, i32* %v4_10003ee8, i32 4, i32 64)
  %v0_10003eec = load i32, i32* @r28, align 4
  %v5_10003ef8 = trunc i32 %v5_10003ee8 to i8
  %v0_10003f00 = load i32, i32* @r29, align 4
  store i32 %v0_10003f00, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v4_10003f04 = inttoptr i32 %v0_10003eec to i32*
  %v5_10003f04 = call i32 @function_100006a8(i32 %v0_10003f00, i32* %v4_10003f04, i32 5, i32 1)
  %v0_10003f14 = load i32, i32* @r28, align 4
  %v1_10003f18 = urem i32 %v5_10003f04, 256
  store i32 %v1_10003f18, i32* @r31, align 4
  %v0_10003f1c = load i32, i32* @r29, align 4
  store i32 %v0_10003f1c, i32* %r3.global-to-local, align 4
  store i32 268451620, i32* @lr, align 4
  %v4_10003f20 = inttoptr i32 %v0_10003f14 to i32*
  %v5_10003f20 = call i32 @function_100006a8(i32 %v0_10003f1c, i32* %v4_10003f20, i32 6, i32 65535)
  %v0_10003f28 = load i32, i32* @r28, align 4
  store i32 %v5_10003f20, i32* %r22.global-to-local, align 4
  %v0_10003f38 = load i32, i32* @r29, align 4
  store i32 %v0_10003f38, i32* %r3.global-to-local, align 4
  store i32 268451648, i32* @lr, align 4
  %v4_10003f3c = inttoptr i32 %v0_10003f28 to i32*
  %v5_10003f3c = call i32 @function_100006a8(i32 %v0_10003f38, i32* %v4_10003f3c, i32 7, i32 65535)
  %v0_10003f44 = load i32, i32* @r28, align 4
  store i32 %v5_10003f3c, i32* %r23.global-to-local, align 4
  %v0_10003f54 = load i32, i32* @r29, align 4
  store i32 %v0_10003f54, i32* %r3.global-to-local, align 4
  store i32 268451676, i32* @lr, align 4
  %v4_10003f58 = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f58 = call i32 @function_100006a8(i32 %v0_10003f54, i32* %v4_10003f58, i32 17, i32 65535)
  %v0_10003f5c = load i32, i32* @r28, align 4
  store i32 %v5_10003f58, i32* %r19.global-to-local, align 4
  %v0_10003f6c = load i32, i32* @r29, align 4
  store i32 %v0_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451700, i32* @lr, align 4
  %v4_10003f70 = inttoptr i32 %v0_10003f5c to i32*
  %v5_10003f70 = call i32 @function_100006a8(i32 %v0_10003f6c, i32* %v4_10003f70, i32 18, i32 0)
  %v0_10003f74 = load i32, i32* @r28, align 4
  store i32 %v5_10003f70, i32* %r20.global-to-local, align 4
  %v0_10003f84 = load i32, i32* @r29, align 4
  store i32 %v0_10003f84, i32* %r3.global-to-local, align 4
  store i32 268451724, i32* @lr, align 4
  %v4_10003f88 = inttoptr i32 %v0_10003f74 to i32*
  %v5_10003f88 = call i32 @function_100006a8(i32 %v0_10003f84, i32* %v4_10003f88, i32 11, i32 0)
  %v0_10003f8c = load i32, i32* @r28, align 4
  store i32 %v5_10003f88, i32* %r14.global-to-local, align 4
  %v0_10003f9c = load i32, i32* @r29, align 4
  store i32 %v0_10003f9c, i32* %r3.global-to-local, align 4
  store i32 268451748, i32* @lr, align 4
  %v4_10003fa0 = inttoptr i32 %v0_10003f8c to i32*
  %v5_10003fa0 = call i32 @function_100006a8(i32 %v0_10003f9c, i32* %v4_10003fa0, i32 12, i32 0)
  %v0_10003fa4 = load i32, i32* @r28, align 4
  store i32 %v5_10003fa0, i32* %r17.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_100006a8(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 13, i32 0)
  %v0_10003fbc = load i32, i32* @r28, align 4
  store i32 %v5_10003fb8, i32* %r18.global-to-local, align 4
  %v0_10003fcc = load i32, i32* @r29, align 4
  store i32 %v0_10003fcc, i32* %r3.global-to-local, align 4
  store i32 268451796, i32* @lr, align 4
  %v4_10003fd0 = inttoptr i32 %v0_10003fbc to i32*
  %v5_10003fd0 = call i32 @function_100006a8(i32 %v0_10003fcc, i32* %v4_10003fd0, i32 14, i32 0)
  %v0_10003fd4 = load i32, i32* @r28, align 4
  %v0_10003fe4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fe4, i32* %r3.global-to-local, align 4
  store i32 268451820, i32* @lr, align 4
  %v4_10003fe8 = inttoptr i32 %v0_10003fd4 to i32*
  %v5_10003fe8 = call i32 @function_100006a8(i32 %v0_10003fe4, i32* %v4_10003fe8, i32 15, i32 1)
  %v0_10003fec = load i32, i32* @r28, align 4
  store i32 %v5_10003fe8, i32* %r16.global-to-local, align 4
  %v0_10003ffc = load i32, i32* @r29, align 4
  store i32 %v0_10003ffc, i32* %r3.global-to-local, align 4
  store i32 268451844, i32* @lr, align 4
  %v4_10004000 = inttoptr i32 %v0_10003fec to i32*
  %v5_10004000 = call i32 @function_100006a8(i32 %v0_10003ffc, i32* %v4_10004000, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004008 = load i32, i32* @global_var_1001b748.16, align 4
  %v0_1000400c = load i32, i32* @r28, align 4
  store i32 %v5_10004000, i32* %r30.global-to-local, align 4
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v0_10004018, i32* %r3.global-to-local, align 4
  store i32 268451872, i32* @lr, align 4
  %v5_1000401c = inttoptr i32 %v0_1000400c to i32*
  %v6_1000401c = call i32 @function_10000628(i32 %v0_10004018, i32* %v5_1000401c, i32 25, i32 %v3_10004008, i32 268566528)
  store i32 %v6_1000401c, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451892, i32* @lr, align 4
  %v3_10004030 = call i32 @function_10009344(i32 2, i32 3, i32 6)
  store i32 %v3_10004030, i32* %r3.global-to-local, align 4
  %v3_10004034 = icmp eq i32 %v3_10004030, -1
  store i32 %v3_10004030, i32* %r26.global-to-local, align 4
  br i1 %v3_10004034, label %dec_label_pc_1000436c, label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003e28
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000404c = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268451932, i32* @lr, align 4
  %v4_10004058 = call i32 @function_10009308(i32 0, i32 3, i32 %v2_1000404c, i32 4)
  store i32 %v4_10004058, i32* %r3.global-to-local, align 4
  %v3_1000405c = icmp eq i32 %v4_10004058, -1
  br i1 %v3_1000405c, label %dec_label_pc_10004364, label %dec_label_pc_10004064

dec_label_pc_10004064:                            ; preds = %dec_label_pc_10004040
  %v0_10004064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004064 = icmp slt i32 %v0_10004064, 0
  %v3_10004064 = icmp eq i32 %v0_10004064, 0
  store i1 %v1_10004064, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004064, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10004070 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004070 = urem i32 %v0_10004070, 65536
  store i32 %v1_10004070, i32* %r21.global-to-local, align 4
  %v0_10004074 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004074 = urem i32 %v0_10004074, 65536
  store i32 %v1_10004074, i32* %r22.global-to-local, align 4
  %v0_10004078 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004078 = urem i32 %v0_10004078, 65536
  store i32 %v1_10004078, i32* %r23.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 256
  store i32 %v1_1000407c, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10004064, 1
  br i1 %tmp40, label %dec_label_pc_100041e0, label %dec_label_pc_10004084

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10004064
  store i32 %v5_10003fd0, i32* %r0.global-to-local, align 4
  %v0_10004088 = load i32, i32* @r31, align 4
  %v3_10004088 = icmp eq i32 %v0_10004088, 0
  store i1 %v3_10004088, i1* %cr3_eq.global-to-local, align 1
  %v0_1000408c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 2
  store i32 %v1_1000408c, i32* %r29.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 2
  store i32 %v1_10004090, i32* %r17.global-to-local, align 4
  %v0_10004094 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004094 = urem i32 %v0_10004094, 2
  store i32 %v1_10004094, i32* %r18.global-to-local, align 4
  %v1_10004098 = urem i32 %v5_10003fd0, 2
  store i32 %v1_10004098, i32* %r28.global-to-local, align 4
  %v0_1000409c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000409c = urem i32 %v0_1000409c, 2
  store i32 %v1_1000409c, i32* %r30.global-to-local, align 4
  %v1_100040a0 = urem i32 %v0_1000407c, 2
  store i32 %v1_100040a0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100040f0 = sext i8 %v5_10003ec0 to i32
  %v4_100040f8 = sext i8 %v5_10003ef8 to i32
  br label %dec_label_pc_100040a8

dec_label_pc_100040a8:                            ; preds = %dec_label_pc_1000410c, %dec_label_pc_10004084
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452020, i32* @lr, align 4
  %v2_100040b0 = call i32 @function_100096a0(i32 128, i32 1)
  store i32 %v2_100040b0, i32* %r3.global-to-local, align 4
  %v3_100040b4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100040b4, i32* %r9.global-to-local, align 4
  %v0_100040b8 = load i32, i32* @r31, align 4
  %v1_100040b8 = mul i32 %v0_100040b8, 4
  store i32 %v1_100040b8, i32* %r0.global-to-local, align 4
  %v1_100040bc = load i32, i32* %r25.global-to-local, align 4
  %v3_100040bc = add i32 %v1_100040bc, %v1_100040b8
  %v4_100040bc = inttoptr i32 %v3_100040bc to i32*
  store i32 %v2_100040b0, i32* %v4_100040bc, align 4
  %v0_100040c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040c0 = mul i32 %v0_100040c0, 4
  store i32 %v1_100040c0, i32* %r9.global-to-local, align 4
  %v1_100040c4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100040c4 = add i32 %v1_100040c4, %v1_100040c0
  %v3_100040c4 = inttoptr i32 %v2_100040c4 to i32*
  %v4_100040c4 = load i32, i32* %v3_100040c4, align 4
  store i32 %v4_100040c4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100040cc = inttoptr i32 %v4_100040c4 to i32*
  %v2_100040cc = load i32, i32* %v1_100040cc, align 4
  store i32 %v2_100040cc, i32* %r0.global-to-local, align 4
  %v1_100040d0 = add i32 %v4_100040c4, 20
  store i32 %v1_100040d0, i32* %r11.global-to-local, align 4
  %v0_100040d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100040d4 = trunc i32 %v0_100040d4 to i16
  %v3_100040d4 = add i32 %v4_100040c4, 4
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i16*
  store i16 %v1_100040d4, i16* %v4_100040d4, align 2
  %v1_100040d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100040e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_100040e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100040e8 = inttoptr i32 %v1_100040e8 to i32*
  store i32 %v1_100040e0, i32* %v2_100040e8, align 4
  %v0_100040ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v2_100040ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100040ec = add i32 %v2_100040ec, 2
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  store i32 %v4_100040f0, i32* %r0.global-to-local, align 4
  %v2_100040f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100040f4 = add i32 %v2_100040f4, 1
  %v4_100040f4 = inttoptr i32 %v3_100040f4 to i8*
  store i8 %v5_10003ec0, i8* %v4_100040f4, align 1
  store i32 %v4_100040f8, i32* %r9.global-to-local, align 4
  %v2_100040fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100040fc = add i32 %v2_100040fc, 8
  %v4_100040fc = inttoptr i32 %v3_100040fc to i8*
  store i8 %v5_10003ef8, i8* %v4_100040fc, align 1
  %v0_10004100 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004100, label %dec_label_pc_1000410c, label %dec_label_pc_10004104

dec_label_pc_10004104:                            ; preds = %dec_label_pc_100040a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004108 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004108 = add i32 %v2_10004108, 6
  %v4_10004108 = inttoptr i32 %v3_10004108 to i16*
  store i16 16384, i16* %v4_10004108, align 2
  br label %dec_label_pc_1000410c

dec_label_pc_1000410c:                            ; preds = %dec_label_pc_100040a8, %dec_label_pc_10004104
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10004110 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004110 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004110 = add i32 %v1_10004110, 12
  %v3_10004110 = inttoptr i32 %v2_10004110 to i32*
  store i32 %v0_10004110, i32* %v3_10004110, align 4
  %v0_10004114 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004114 = trunc i32 %v0_10004114 to i8
  %v2_10004114 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 9
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v1_10004114, i8* %v4_10004114, align 1
  %v0_10004118 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004118 = trunc i32 %v0_10004118 to i16
  %v2_10004118 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004118 = add i32 %v2_10004118, 20
  %v4_10004118 = inttoptr i32 %v3_10004118 to i16*
  store i16 %v1_10004118, i16* %v4_10004118, align 2
  %v3_1000411c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000411c, i32* %r9.global-to-local, align 4
  %v0_10004120 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004120 = trunc i32 %v0_10004120 to i16
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 2
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 %v1_10004120, i16* %v4_10004120, align 2
  %v0_10004124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004124 = mul i32 %v0_10004124, 24
  %v1_10004128 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004128 = add i32 %v1_10004128, %v1_10004124
  store i32 %v2_10004128, i32* %r9.global-to-local, align 4
  %v1_1000412c = add i32 %v2_10004128, 16
  %v2_1000412c = inttoptr i32 %v1_1000412c to i32*
  %v3_1000412c = load i32, i32* %v2_1000412c, align 4
  store i32 %v3_1000412c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10004134 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004134 = add i32 %v1_10004134, 16
  %v3_10004134 = inttoptr i32 %v2_10004134 to i32*
  store i32 %v3_1000412c, i32* %v3_10004134, align 4
  %v0_10004138 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, 4
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v0_10004138, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000413c = add i32 %v0_1000413c, 12
  %v2_1000413c = inttoptr i32 %v1_1000413c to i32*
  %v3_1000413c = load i32, i32* %v2_1000413c, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10004140, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004148 = call i32 @__asm_rlwimi(i32 %v1_100040a0, i32 21, i32 10, i32 10)
  store i32 %v1_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = call i32 @__asm_rlwimi(i32 %v1_10004090, i32 20, i32 11, i32 11)
  store i32 %v1_1000414c, i32* %r0.global-to-local, align 4
  %v1_10004150 = call i32 @__asm_rlwimi(i32 %v1_10004094, i32 19, i32 12, i32 12)
  store i32 %v1_10004150, i32* %r0.global-to-local, align 4
  %v1_10004154 = call i32 @__asm_rlwimi(i32 %v1_10004098, i32 18, i32 13, i32 13)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  %v1_10004158 = call i32 @__asm_rlwimi(i32 %v1_1000408c, i32 17, i32 14, i32 14)
  store i32 %v1_10004158, i32* %r0.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 %v1_1000409c, i32 16, i32 15, i32 15)
  %v1_10004160 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004160 = add i32 %v1_10004160, 12
  %v3_10004160 = inttoptr i32 %v2_10004160 to i32*
  store i32 %v1_1000415c, i32* %v3_10004160, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10004168 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004168 = add i32 %v2_10004168, 40
  %v4_10004168 = inttoptr i32 %v3_10004168 to i8*
  store i8 2, i8* %v4_10004168, align 1
  %v0_1000416c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000416c = trunc i32 %v0_1000416c to i8
  %v2_1000416c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000416c = add i32 %v2_1000416c, 41
  %v4_1000416c = inttoptr i32 %v3_1000416c to i8*
  store i8 %v1_1000416c, i8* %v4_1000416c, align 1
  %v0_10004170 = call i32 @function_10005b38()
  %v2_10004178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004178 = add i32 %v2_10004178, 46
  %v4_10004178 = inttoptr i32 %v3_10004178 to i8*
  store i8 8, i8* %v4_10004178, align 1
  %v1_1000417c = urem i32 %v0_10004170, 16
  store i32 %v1_1000417c, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10004188 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004188 = add i32 %v2_10004188, 44
  %v4_10004188 = inttoptr i32 %v3_10004188 to i8*
  store i8 4, i8* %v4_10004188, align 1
  %v0_1000418c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000418c = add i32 %v0_1000418c, 1400
  store i32 %v1_1000418c, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004194 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004194 = trunc i32 %v0_10004194 to i8
  %v2_10004194 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004194 = add i32 %v2_10004194, 45
  %v4_10004194 = inttoptr i32 %v3_10004194 to i8*
  store i8 %v1_10004194, i8* %v4_10004194, align 1
  %v0_10004198 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004198 = trunc i32 %v0_10004198 to i8
  %v2_10004198 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004198 = add i32 %v2_10004198, 47
  %v4_10004198 = inttoptr i32 %v3_10004198 to i8*
  store i8 %v1_10004198, i8* %v4_10004198, align 1
  %v0_1000419c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000419c = trunc i32 %v0_1000419c to i16
  %v2_1000419c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000419c = add i32 %v2_1000419c, 42
  %v4_1000419c = inttoptr i32 %v3_1000419c to i16*
  store i16 %v1_1000419c, i16* %v4_1000419c, align 2
  %v0_100041a0 = call i32 @function_10005b38()
  store i32 %v0_100041a0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_100041ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100041ac = add i32 %v1_100041ac, 52
  %v3_100041ac = inttoptr i32 %v2_100041ac to i32*
  store i32 0, i32* %v3_100041ac, align 4
  %v0_100041b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041b0 = trunc i32 %v0_100041b0 to i8
  %v2_100041b0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041b0 = add i32 %v2_100041b0, 56
  %v4_100041b0 = inttoptr i32 %v3_100041b0 to i8*
  store i8 %v1_100041b0, i8* %v4_100041b0, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_100041bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100041bc = add i32 %v1_100041bc, 48
  %v3_100041bc = inttoptr i32 %v2_100041bc to i32*
  store i32 %v0_100041a0, i32* %v3_100041bc, align 4
  %v0_100041c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041c0 = trunc i32 %v0_100041c0 to i8
  %v2_100041c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c0 = add i32 %v2_100041c0, 59
  %v4_100041c0 = inttoptr i32 %v3_100041c0 to i8*
  store i8 %v1_100041c0, i8* %v4_100041c0, align 1
  %v0_100041c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c4 = trunc i32 %v0_100041c4 to i8
  %v2_100041c4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c4 = add i32 %v2_100041c4, 57
  %v4_100041c4 = inttoptr i32 %v3_100041c4 to i8*
  store i8 %v1_100041c4, i8* %v4_100041c4, align 1
  %v0_100041c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c8 = trunc i32 %v0_100041c8 to i8
  %v2_100041c8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c8 = add i32 %v2_100041c8, 58
  %v4_100041c8 = inttoptr i32 %v3_100041c8 to i8*
  store i8 %v1_100041c8, i8* %v4_100041c8, align 1
  %v3_100041cc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100041cc, i32* %r9.global-to-local, align 4
  %v1_100041d0 = add i32 %v3_100041cc, 1
  store i32 %v1_100041d0, i32* %r31.global-to-local, align 4
  %v1_100041d4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100041d4 = icmp slt i32 %v1_100041d0, %v1_100041d4
  store i32 %v1_100041d0, i32* %stack_var_-120, align 4
  br i1 %v2_100041d4, label %dec_label_pc_100040a8, label %dec_label_pc_100041e0.loopexit

dec_label_pc_100041e0.loopexit:                   ; preds = %dec_label_pc_1000410c
  %v0_100041e4.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_100041e8.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041e8.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041e0

dec_label_pc_100041e0:                            ; preds = %dec_label_pc_100041e0.loopexit, %dec_label_pc_10004064
  %v1_100041e8.pre = phi i1 [ %v1_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_10004064, %dec_label_pc_10004064 ]
  %v0_100041e8.pre = phi i1 [ %v0_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v3_10004064, %dec_label_pc_10004064 ]
  %v0_100041e4 = phi i32 [ %v0_100041e4.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_1000407c, %dec_label_pc_10004064 ]
  %v0_100041e0 = load i32, i32* %r15.global-to-local, align 4
  %v3_100041e0 = icmp eq i32 %v0_100041e0, -1
  store i1 %v3_100041e0, i1* %cr2_eq.global-to-local, align 1
  %v3_100041e4 = icmp eq i32 %v0_100041e4, 0
  store i1 %v3_100041e4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100041e8.outer

dec_label_pc_100041e8.outer:                      ; preds = %dec_label_pc_100042c4, %dec_label_pc_100041e0
  %v1_100041e8.ph = phi i1 [ %v1_100041e8.pre, %dec_label_pc_100041e0 ], [ %v1_100042c4, %dec_label_pc_100042c4 ]
  %v0_100041e8.ph = phi i1 [ %v0_100041e8.pre, %dec_label_pc_100041e0 ], [ %v0_100042c4, %dec_label_pc_100042c4 ]
  %v2_100041e8 = or i1 %v1_100041e8.ph, %v0_100041e8.ph
  br label %dec_label_pc_100041e8

dec_label_pc_100041e8:                            ; preds = %dec_label_pc_100041e8.outer, %dec_label_pc_100041e8
  br i1 %v2_100041e8, label %dec_label_pc_100041e8, label %dec_label_pc_100041ec

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_100041e8, %dec_label_pc_100042c4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_10004254, %dec_label_pc_100041ec
  %v0_100041fc = phi i32 [ %v1_100042b4, %dec_label_pc_10004254 ], [ 0, %dec_label_pc_100041ec ]
  %v1_100041fc = mul i32 %v0_100041fc, 24
  store i32 %v1_100041fc, i32* %r0.global-to-local, align 4
  %v1_10004200 = mul i32 %v0_100041fc, 4
  store i32 %v1_10004200, i32* %r11.global-to-local, align 4
  %v1_10004204 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004204 = add i32 %v1_10004204, %v1_10004200
  %v3_10004204 = inttoptr i32 %v2_10004204 to i32*
  %v4_10004204 = load i32, i32* %v3_10004204, align 4
  store i32 %v4_10004204, i32* %r28.global-to-local, align 4
  %v1_10004208 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004208 = add i32 %v1_10004208, %v1_100041fc
  %v1_1000420c = add i32 %v2_10004208, 20
  %v2_1000420c = inttoptr i32 %v1_1000420c to i8*
  %v3_1000420c = load i8, i8* %v2_1000420c, align 1
  %v4_1000420c = zext i8 %v3_1000420c to i32
  store i32 %v4_1000420c, i32* %r9.global-to-local, align 4
  %v1_10004210 = add i32 %v4_10004204, 20
  store i32 %v1_10004210, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_1000420c, 32
  br i1 %tmp41, label %dec_label_pc_100042cc, label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_100041fc
  %v0_1000421c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000421c, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004228 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004228 = icmp eq i32 %v0_10004228, 65535
  br i1 %v4_10004228, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v1_10004230 = phi i32 [ %v1_10004304, %dec_label_pc_100042f4 ], [ 65535, %dec_label_pc_10004220 ]
  %v0_10004230 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004230 = icmp eq i32 %v0_10004230, %v1_10004230
  br i1 %v4_10004230, label %dec_label_pc_1000431c, label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge, %dec_label_pc_10004230
  %v1_10004238 = phi i32 [ %v1_10004238.pre, %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge ], [ %v1_10004230, %dec_label_pc_10004230 ]
  %v0_10004238 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004238 = icmp eq i32 %v0_10004238, %v1_10004238
  br i1 %v4_10004238, label %dec_label_pc_1000432c, label %dec_label_pc_10004240

dec_label_pc_10004240:                            ; preds = %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge, %dec_label_pc_10004238
  %v1_10004240 = phi i32 [ %v1_10004240.pre, %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge ], [ %v1_10004238, %dec_label_pc_10004238 ]
  %v0_10004240 = load i32, i32* %r19.global-to-local, align 4
  %v4_10004240 = icmp eq i32 %v0_10004240, %v1_10004240
  br i1 %v4_10004240, label %dec_label_pc_1000433c, label %dec_label_pc_10004248

dec_label_pc_10004248:                            ; preds = %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge, %dec_label_pc_10004240
  %v1_10004248 = phi i32 [ %v1_10004248.pre, %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge ], [ %v1_10004240, %dec_label_pc_10004240 ]
  %v0_10004248 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004248 = icmp eq i32 %v0_10004248, %v1_10004248
  br i1 %v4_10004248, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_10004250:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_10004250 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004250, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004254:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c, %dec_label_pc_10004358
  %v0_10004254 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004254 = trunc i32 %v0_10004254 to i16
  %v2_10004254 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004254 = add i32 %v2_10004254, 10
  %v4_10004254 = inttoptr i32 %v3_10004254 to i16*
  store i16 %v1_10004254, i16* %v4_10004254, align 2
  %v0_1000425c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000425c, i32* @r3, align 4
  %v2_10004260 = call i32 @function_100043cc(i32 %v0_1000425c, i32 20)
  %v3_10004260 = trunc i32 %v2_10004260 to i16
  %v0_10004264 = load i32, i32* @r31, align 4
  store i32 %v0_10004264, i32* @r4, align 4
  %v4_10004268 = add i32 %v0_1000425c, 10
  %v5_10004268 = inttoptr i32 %v4_10004268 to i16*
  store i16 %v3_10004260, i16* %v5_10004268, align 2
  %v0_10004270 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004270 = trunc i32 %v0_10004270 to i16
  %v2_10004270 = load i32, i32* @r31, align 4
  %v3_10004270 = add i32 %v2_10004270, 16
  %v4_10004270 = inttoptr i32 %v3_10004270 to i16*
  store i16 %v1_10004270, i16* %v4_10004270, align 2
  %v0_10004278 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004278, i32* %r3.global-to-local, align 4
  %v4_1000427c = call i32 @function_10004430(i32 %v0_10004278, i32 %v0_10004264, i32 40, i32 40)
  %v5_1000427c = trunc i32 %v4_1000427c to i16
  store i32 %v4_1000427c, i32* %r3.global-to-local, align 4
  %v3_10004280 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004280, i32* %r7.global-to-local, align 4
  %v0_10004284 = load i32, i32* @r31, align 4
  %v1_10004284 = add i32 %v0_10004284, 2
  %v2_10004284 = inttoptr i32 %v1_10004284 to i16*
  %v3_10004284 = load i16, i16* %v2_10004284, align 2
  %v4_10004284 = zext i16 %v3_10004284 to i32
  store i32 %v4_10004284, i32* %r0.global-to-local, align 4
  %v0_10004288 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000428c = mul i32 %v3_10004280, 24
  store i32 %v1_1000428c, i32* %r7.global-to-local, align 4
  %v4_10004290 = add i32 %v0_10004284, 16
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v5_1000427c, i16* %v5_10004290, align 2
  %v0_10004298 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004298, i32* %r3.global-to-local, align 4
  %v0_1000429c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000429c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000429c = add i32 %v1_1000429c, %v0_1000429c
  store i32 %v2_1000429c, i32* %r7.global-to-local, align 4
  %v0_100042a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100042a4 = trunc i32 %v0_100042a4 to i16
  %v3_100042a4 = add i32 %v2_1000429c, 2
  %v4_100042a4 = inttoptr i32 %v3_100042a4 to i16*
  store i16 %v1_100042a4, i16* %v4_100042a4, align 2
  store i32 268452528, i32* @lr, align 4
  %v6_100042ac = call i32 @function_100092c8(i32 %v0_10004298, i32 %v0_10004288, i32 60, i32 16384, i32 %v2_1000429c, i32 16)
  store i32 %v6_100042ac, i32* %r3.global-to-local, align 4
  %v3_100042b0 = load i32, i32* %stack_var_-120, align 4
  %v1_100042b4 = add i32 %v3_100042b0, 1
  store i32 %v1_100042b4, i32* %r9.global-to-local, align 4
  %v1_100042b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100042b8 = icmp slt i32 %v1_100042b4, %v1_100042b8
  store i32 %v1_100042b4, i32* %stack_var_-120, align 4
  br i1 %v2_100042b8, label %dec_label_pc_100041fc, label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_10004254
  %v0_100042c4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042c4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042c4 = or i1 %v0_100042c4, %v1_100042c4
  br i1 %v2_100042c4, label %dec_label_pc_100041e8.outer, label %dec_label_pc_100041ec

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100041fc
  %v1_100042cc = add i32 %v2_10004208, 16
  %v2_100042cc = inttoptr i32 %v1_100042cc to i32*
  %v3_100042cc = load i32, i32* %v2_100042cc, align 4
  store i32 %v3_100042cc, i32* %r29.global-to-local, align 4
  %v0_100042d0 = call i32 @function_10005b38()
  store i32 %v0_100042d0, i32* %r3.global-to-local, align 4
  %v3_100042d4 = load i32, i32* %stack_var_-120, align 4
  %v1_100042d8 = mul i32 %v3_100042d4, 24
  %v1_100042dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100042dc = add i32 %v1_100042dc, %v1_100042d8
  store i32 %v2_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v2_100042dc, 20
  %v2_100042e0 = inttoptr i32 %v1_100042e0 to i8*
  %v3_100042e0 = load i8, i8* %v2_100042e0, align 1
  %v4_100042e0 = zext i8 %v3_100042e0 to i32
  store i32 %v4_100042e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100042e0, 64
  %v2_100042e4 = zext i8 %tmp to i32
  %v3_100042e4 = lshr i32 %v0_100042d0, %v2_100042e4
  store i32 %v3_100042e4, i32* %r3.global-to-local, align 4
  %v0_100042e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100042e8 = add i32 %v3_100042e4, %v0_100042e8
  store i32 %v2_100042e8, i32* %r29.global-to-local, align 4
  %v1_100042ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100042ec = add i32 %v1_100042ec, 16
  %v3_100042ec = inttoptr i32 %v2_100042ec to i32*
  store i32 %v2_100042e8, i32* %v3_100042ec, align 4
  %v0_100042f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100042f0, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_100042f4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100042f8 = call i32 @function_10005b38()
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004300 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004300 = add i32 %v1_10004300, 12
  %v3_10004300 = inttoptr i32 %v2_10004300 to i32*
  store i32 %v0_100042f8, i32* %v3_10004300, align 4
  %v0_10004304 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004304 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004304 = icmp eq i32 %v0_10004304, %v1_10004304
  br i1 %v4_10004304, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_1000430c:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v0_1000430c = call i32 @function_10005b38()
  %v1_1000430c = trunc i32 %v0_1000430c to i16
  store i32 %v0_1000430c, i32* %r3.global-to-local, align 4
  %v0_10004310 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004310 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004310 = icmp eq i32 %v0_10004310, %v1_10004310
  %v3_10004314 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004314 = add i32 %v3_10004314, 4
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_1000430c, i16* %v5_10004314, align 2
  br i1 %v4_10004310, label %dec_label_pc_1000431c, label %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge

dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge: ; preds = %dec_label_pc_1000430c
  %v1_10004238.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004238

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_1000430c, %dec_label_pc_10004230
  %v0_1000431c = call i32 @function_10005b38()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v0_10004320 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004320 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004320 = icmp eq i32 %v0_10004320, %v1_10004320
  %v3_10004324 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004324 = add i32 %v3_10004324, 20
  %v5_10004324 = inttoptr i32 %v4_10004324 to i16*
  store i16 %v1_1000431c, i16* %v5_10004324, align 2
  br i1 %v4_10004320, label %dec_label_pc_1000432c, label %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge

dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge: ; preds = %dec_label_pc_1000431c
  %v1_10004240.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004240

dec_label_pc_1000432c:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_10004238
  %v0_1000432c = call i32 @function_10005b38()
  %v1_1000432c = trunc i32 %v0_1000432c to i16
  store i32 %v0_1000432c, i32* %r3.global-to-local, align 4
  %v0_10004330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004330 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004330 = icmp eq i32 %v0_10004330, %v1_10004330
  %v3_10004334 = load i32, i32* @r31, align 4
  %v4_10004334 = add i32 %v3_10004334, 2
  %v5_10004334 = inttoptr i32 %v4_10004334 to i16*
  store i16 %v1_1000432c, i16* %v5_10004334, align 2
  br i1 %v4_10004330, label %dec_label_pc_1000433c, label %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge

dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge: ; preds = %dec_label_pc_1000432c
  %v1_10004248.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_1000432c, %dec_label_pc_10004240
  %v0_1000433c = call i32 @function_10005b38()
  store i32 %v0_1000433c, i32* %r3.global-to-local, align 4
  %v0_10004340 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004340 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004340 = icmp eq i32 %v0_10004340, %v1_10004340
  %v1_10004344 = load i32, i32* @r31, align 4
  %v2_10004344 = add i32 %v1_10004344, 4
  %v3_10004344 = inttoptr i32 %v2_10004344 to i32*
  store i32 %v0_1000433c, i32* %v3_10004344, align 4
  br i1 %v4_10004340, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_1000434c:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_1000434c = call i32 @function_10005b38()
  store i32 %v0_1000434c, i32* %r3.global-to-local, align 4
  %v1_10004350 = load i32, i32* @r31, align 4
  %v2_10004350 = add i32 %v1_10004350, 8
  %v3_10004350 = inttoptr i32 %v2_10004350 to i32*
  store i32 %v0_1000434c, i32* %v3_10004350, align 4
  %v0_10004354 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004354, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c
  %v0_10004358 = call i32 @function_10005b38()
  %v1_10004358 = trunc i32 %v0_10004358 to i16
  store i32 %v0_10004358, i32* %r3.global-to-local, align 4
  %v3_1000435c = load i32, i32* @r31, align 4
  %v4_1000435c = add i32 %v3_1000435c, 18
  %v5_1000435c = inttoptr i32 %v4_1000435c to i16*
  store i16 %v1_10004358, i16* %v5_1000435c, align 2
  br label %dec_label_pc_10004254

dec_label_pc_10004364:                            ; preds = %dec_label_pc_10004040
  %v0_10004364 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004364, i32* %r3.global-to-local, align 4
  store i32 268452716, i32* @lr, align 4
  %v0_10004368 = call i32 @function_10008628()
  store i32 %v0_10004368, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10003e28, %dec_label_pc_10004364
  store i32 %v0_10003e40, i32* %r0.global-to-local, align 4
  %v1_10004380 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003e30)
  store i32 %v0_10003e80, i32* %r28.global-to-local, align 4
  store i32 %v0_10003e88, i32* %r29.global-to-local, align 4
  store i32 %v0_10003e94, i32* %r31.global-to-local, align 4
  %v0_100043c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043c8

; uselistorder directives
  uselistorder i32 %v0_10004358, { 1, 0 }
  uselistorder i32 %v0_1000432c, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_1000430c, { 1, 0 }
  uselistorder i32 %v1_10004304, { 1, 0 }
  uselistorder i1 %v1_100042c4, { 1, 0 }
  uselistorder i1 %v0_100042c4, { 1, 0 }
  uselistorder i32 %v1_100042b4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000427c, { 1, 0 }
  uselistorder i32 %v1_10004200, { 1, 0 }
  uselistorder i32 %v1_100040c0, { 1, 0 }
  uselistorder i32 %v1_100040b8, { 1, 0 }
  uselistorder i32 %v1_100040a0, { 1, 0 }
  uselistorder i32 %v1_1000409c, { 1, 0 }
  uselistorder i32 %v1_10004098, { 1, 0 }
  uselistorder i32 %v1_10004094, { 1, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v1_1000408c, { 1, 0 }
  uselistorder i32 %v1_1000407c, { 1, 0 }
  uselistorder i8 %v5_10003ef8, { 1, 0 }
  uselistorder i8 %v5_10003ec0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 11, 9, 12, 8, 13, 10, 14, 2, 3, 5, 4, 6, 7, 15, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 26, 27, 28, 29, 0, 1, 2, 3, 4 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 2, 0, 3 }
  uselistorder i32 41, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 100, 101, 102, 103, 104, 105, 106, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004358, { 1, 0 }
  uselistorder label %dec_label_pc_10004254, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100041ec, { 1, 0 }
  uselistorder label %dec_label_pc_100041e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000410c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 65535, { 50, 51, 0, 7, 52, 53, 19, 20, 21, 22, 1, 8, 54, 55, 23, 24, 25, 26, 27, 56, 9, 28, 29, 57, 10, 30, 31, 13, 12, 11, 58, 59, 32, 33, 34, 14, 15, 60, 35, 61, 36, 62, 2, 16, 63, 64, 5, 37, 38, 39, 3, 17, 65, 66, 6, 40, 41, 42, 4, 18, 67, 68, 43, 44, 45, 69, 70, 71, 72, 73, 74, 46, 47, 75, 76, 77, 78, 79, 80, 48, 49 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_100044f8 = load i32, i32* @r27, align 4
  %v2_100044fc = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_100044fc, i32* @r27, align 4
  %v2_10004504 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004508 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004518 = load i32, i32* @r25, align 4
  %v2_1000451c = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10004520 = load i32, i32* @r30, align 4
  %v2_10004524 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004524, i32* @r30, align 4
  %v0_10004528 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10004530 = load i32, i32* @r23, align 4
  %v0_10004538 = load i32, i32* @r28, align 4
  store i32 268453184, i32* @lr, align 4
  %v3_1000453c = call i32 @function_10008e2c(i32 %v2_100044fc, i32 0, i32 4096)
  store i32 268453200, i32* @lr, align 4
  %v3_1000454c = call i32 @function_10008e2c(i32 %v2_10004504, i32 0, i32 4096)
  store i32 268453216, i32* @lr, align 4
  %v3_1000455c = call i32 @function_10008e2c(i32 %v2_10004524, i32 0, i32 513)
  %v0_10004568 = load i32, i32* @r29, align 4
  %v0_1000456c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000456c, i32* %stack_var_-8792, align 4
  %v3_1000457c = trunc i32 %v0_10004568 to i8
  %v4_1000457c = call i32 @function_10008344(i8 %v3_1000457c, i32 16, i32 %v2_1000451c)
  store i32 268453256, i32* @lr, align 4
  %v2_10004584 = call i32 @function_10007e68(i8* nonnull %stack_var_-8776)
  %v3_10004588 = icmp eq i32 %v2_10004584, 2
  br i1 %v3_10004588, label %dec_label_pc_10004ac8, label %dec_label_pc_10004590

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_10004ac8
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000459c.26 to i32), i32* @lr, align 4
  %v1_10004598 = call i32 @function_100078f0(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100045a4.27 to i32), i32* @lr, align 4
  %v1_100045a0 = call i32 @function_100078f0(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100045ac.28 to i32), i32* @lr, align 4
  %v1_100045a8 = call i32 @function_100078f0(i32 15)
  store i32 268453300, i32* @lr, align 4
  %v1_100045b0 = call i32 @function_100078f0(i32 17)
  %v3_100045bc = call i32 @function_1000783c(i32 17, i32* null)
  store i32 268453324, i32* @lr, align 4
  %v2_100045c8 = call i32 @function_10008790(i32 %v3_100045bc, i32 0)
  %v3_100045cc = icmp eq i32 %v2_100045c8, -1
  store i32 %v2_100045c8, i32* @r28, align 4
  br i1 %v3_100045cc, label %dec_label_pc_10004a14, label %dec_label_pc_100045d8

dec_label_pc_100045d8:                            ; preds = %dec_label_pc_10004590
  %v2_100045d8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_100045d8, i32* %r26.global-to-local, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e888 = call i32 @function_100080c8(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045c8)
  %v3_100045ec90 = icmp eq i32 %v4_100045e888, 0
  br i1 %v3_100045ec90, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_100045f4:                            ; preds = %dec_label_pc_100045d8, %dec_label_pc_100045dc.backedge
  %v3_100045f4 = load i8, i8* %stack_var_-8760, align 1
  %v3_100045f8 = icmp eq i8 %v3_100045f4, 0
  br i1 %v3_100045f8, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004600

dec_label_pc_100045dc.backedge:                   ; preds = %dec_label_pc_10004614, %dec_label_pc_100045f4, %dec_label_pc_10004684, %dec_label_pc_1000471c, %dec_label_pc_10004768
  %v0_100045e4.pre = load i32, i32* @r28, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e8 = call i32 @function_100080c8(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_100045e4.pre)
  %v3_100045ec = icmp eq i32 %v4_100045e8, 0
  br i1 %v3_100045ec, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_10004600:                            ; preds = %dec_label_pc_100045f4
  %v3_10004600 = icmp eq i8 %v3_100045f4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10004600, label %dec_label_pc_10004634, label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_10004600
  %v1_10004618.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004614

dec_label_pc_10004614:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004610
  %v0_10004614 = phi i32 [ %v1_10004614, %dec_label_pc_10004628 ], [ 0, %dec_label_pc_10004610 ]
  %v1_10004614 = add i32 %v0_10004614, 1
  %v2_10004618 = add i32 %v1_10004614, %v1_10004618.pre
  %v3_10004618 = inttoptr i32 %v2_10004618 to i8*
  %v4_10004618 = load i8, i8* %v3_10004618, align 1
  %v3_1000461c = icmp eq i8 %v4_10004618, 0
  br i1 %v3_1000461c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_10004614
  %v3_10004620 = icmp eq i8 %v4_10004618, 58
  br i1 %v3_10004620, label %dec_label_pc_1000462c, label %dec_label_pc_10004614

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004628
  %v1_1000462c = add i32 %v0_10004614, 4
  store i32 %v1_1000462c, i32* @r31, align 4
  %v1_10004630 = add i32 %v0_10004614, 3
  br label %dec_label_pc_10004634

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004600, %dec_label_pc_1000462c
  %v1_1000468c = phi i32 [ 2, %dec_label_pc_10004600 ], [ %v1_10004630, %dec_label_pc_1000462c ]
  %v0_10004634 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004634 = add i32 %v0_10004634, %v1_1000468c
  %v1_1000463c = add i32 %v2_10004634, 32
  %v2_1000463c = inttoptr i32 %v1_1000463c to i8*
  %v3_1000463c = load i8, i8* %v2_1000463c, align 1
  %v3_10004640 = icmp eq i8 %v3_1000463c, 0
  br i1 %v3_10004640, label %dec_label_pc_10004684, label %dec_label_pc_10004648

dec_label_pc_10004648:                            ; preds = %dec_label_pc_10004634
  %v3_10004648 = icmp eq i8 %v3_1000463c, 32
  %v1_1000464c = add i32 %v1_1000468c, 1
  store i32 %v1_1000464c, i32* @r31, align 4
  br i1 %v3_10004648, label %dec_label_pc_10004684, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004648
  %v0_1000465c = load i32, i32* @r30, align 4
  %v2_1000465c = add i32 %v0_1000465c, %v1_1000464c
  br label %dec_label_pc_10004668

dec_label_pc_10004668:                            ; preds = %dec_label_pc_10004668, %dec_label_pc_10004654
  %v0_1000466c = phi i32 [ %v1_1000466c, %dec_label_pc_10004668 ], [ %v1_1000468c, %dec_label_pc_10004654 ]
  %v0_10004670 = phi i32 [ %v1_10004670, %dec_label_pc_10004668 ], [ %v2_1000465c, %dec_label_pc_10004654 ]
  %v1_10004668 = inttoptr i32 %v0_10004670 to i8*
  %v2_10004668 = load i8, i8* %v1_10004668, align 1
  %v1_1000466c = add i32 %v0_1000466c, 1
  %v1_10004670 = add i32 %v0_10004670, 1
  %tmp60 = or i8 %v2_10004668, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10004680, label %dec_label_pc_10004668

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004668
  %v1_10004680 = add i32 %v0_1000466c, 2
  store i32 %v1_10004680, i32* @r31, align 4
  br label %dec_label_pc_10004684

dec_label_pc_10004684:                            ; preds = %dec_label_pc_10004648, %dec_label_pc_10004634, %dec_label_pc_10004680
  %v1_10004684 = phi i32 [ %v1_1000468c, %dec_label_pc_10004648 ], [ %v1_1000468c, %dec_label_pc_10004634 ], [ %v1_1000466c, %dec_label_pc_10004680 ]
  %v2_10004684 = add i32 %v1_10004684, %v0_10004634
  %v0_1000468c = load i32, i32* @r30, align 4
  %v2_1000468c = add i32 %v0_1000468c, %v1_1000468c
  store i32 %v2_1000468c, i32* @r29, align 4
  %v3_10004690 = add i32 %v2_10004684, 32
  %v4_10004690 = inttoptr i32 %v3_10004690 to i8*
  store i8 0, i8* %v4_10004690, align 1
  %v0_10004694 = load i32, i32* @r29, align 4
  store i32 268453532, i32* @lr, align 4
  %v1_10004698 = inttoptr i32 %v0_10004694 to i8*
  %v2_10004698 = call i32 @function_10007e68(i8* %v1_10004698)
  %v0_100046a4 = load i32, i32* @r29, align 4
  %v3_100046a8 = inttoptr i32 %v0_100046a4 to i8*
  %v4_100046a8 = call i32 @function_10008218(i8* %v3_100046a8, i32 %v2_10004698, i32 %v2_1000451c)
  %v3_100046b0 = icmp eq i32 %v4_100046a8, -1
  br i1 %v3_100046b0, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_100046bc.preheader

dec_label_pc_100046bc.preheader:                  ; preds = %dec_label_pc_10004684
  %v0_100046bc.pre = load i32, i32* @r31, align 4
  %v0_100046c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046bc.outer

dec_label_pc_100046bc.outer:                      ; preds = %dec_label_pc_10004a64, %dec_label_pc_100046bc.preheader
  %v0_100046d828.ph = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  %v0_100046bc.ph = phi i32 [ %v1_1000477076, %dec_label_pc_10004a64 ], [ %v0_100046bc.pre, %dec_label_pc_100046bc.preheader ]
  %v0_1000471c.ph = phi i32 [ 1, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  br label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046bc.outer, %dec_label_pc_10004a54
  %v0_100046d828 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a54 ], [ %v0_100046d828.ph, %dec_label_pc_100046bc.outer ]
  %v0_100046bc = phi i32 [ %v1_1000477076, %dec_label_pc_10004a54 ], [ %v0_100046bc.ph, %dec_label_pc_100046bc.outer ]
  %v1_100046bc = add i32 %v0_100046bc, 1
  %v2_100046c4 = add i32 %v1_100046bc, %v0_100046c4.pre
  %v1_100046f068 = inttoptr i32 %v2_100046c4 to i8*
  %v2_100046f069 = load i8, i8* %v1_100046f068, align 1
  store i32 %v1_100046bc, i32* @r31, align 4
  %v3_100046f871 = icmp eq i8 %v2_100046f069, 0
  br i1 %v3_100046f871, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_100046cc:                            ; preds = %dec_label_pc_10004708
  %v3_100046fc79 = icmp eq i8 %v3_100046fc79.in, 9
  br i1 %v3_100046fc79, label %dec_label_pc_1000470c, label %dec_label_pc_100046d8

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046cc
  %v3_100046cc = icmp eq i32 %v0_100046cc75, 1
  br i1 %v3_100046cc, label %dec_label_pc_10004a4c, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046d8, %dec_label_pc_10004a4c
  %v0_100046e0 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a4c ], [ %v0_1000470c74, %dec_label_pc_100046d8 ]
  %v2_100046e0 = icmp sgt i32 %v0_100046e0, 6
  br i1 %v2_100046e0, label %dec_label_pc_1000471c, label %dec_label_pc_100046ec

dec_label_pc_100046ec:                            ; preds = %dec_label_pc_1000470c, %dec_label_pc_100046e0
  %v0_100046d827 = phi i32 [ %v0_1000470c74, %dec_label_pc_1000470c ], [ %v0_100046e0, %dec_label_pc_100046e0 ]
  %v0_100046cc25 = phi i32 [ 1, %dec_label_pc_1000470c ], [ 0, %dec_label_pc_100046e0 ]
  %v0_100046f022 = add i32 %v0_1000471478, 1
  %v1_100046ec = add i32 %v1_1000477076, 1
  %v1_100046f0 = inttoptr i32 %v0_100046f022 to i8*
  %v2_100046f0 = load i8, i8* %v1_100046f0, align 1
  store i32 %v1_100046ec, i32* @r31, align 4
  %v3_100046f8 = icmp eq i8 %v2_100046f0, 0
  br i1 %v3_100046f8, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_10004708:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_100046ec
  %v3_100046fc79.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v3_1000470080.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v0_1000471478 = phi i32 [ %v0_100046f022, %dec_label_pc_100046ec ], [ %v2_100046c4, %dec_label_pc_100046bc ]
  %v1_1000477076 = phi i32 [ %v1_100046ec, %dec_label_pc_100046ec ], [ %v1_100046bc, %dec_label_pc_100046bc ]
  %v0_100046cc75 = phi i32 [ %v0_100046cc25, %dec_label_pc_100046ec ], [ 0, %dec_label_pc_100046bc ]
  %v0_1000470c74 = phi i32 [ %v0_100046d827, %dec_label_pc_100046ec ], [ %v0_100046d828, %dec_label_pc_100046bc ]
  %v3_1000470080 = icmp eq i8 %v3_1000470080.in, 32
  br i1 %v3_1000470080, label %dec_label_pc_1000470c, label %dec_label_pc_100046cc

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004708, %dec_label_pc_100046cc
  %tmp62 = icmp slt i32 %v0_1000470c74, 7
  br i1 %tmp62, label %dec_label_pc_100046ec, label %dec_label_pc_1000471c

dec_label_pc_1000471c:                            ; preds = %dec_label_pc_100046ec, %dec_label_pc_100046e0, %dec_label_pc_1000470c, %dec_label_pc_100046bc
  %v1_10004770.lcssa = phi i32 [ %v1_100046bc, %dec_label_pc_100046bc ], [ %v1_1000477076, %dec_label_pc_1000470c ], [ %v1_1000477076, %dec_label_pc_100046e0 ], [ %v1_100046ec, %dec_label_pc_100046ec ]
  %v3_1000471c = icmp eq i32 %v0_1000471c.ph, 0
  br i1 %v3_1000471c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004728

dec_label_pc_10004728:                            ; preds = %dec_label_pc_1000471c
  %v0_10004728 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004728 = add i32 %v0_10004728, %v1_10004770.lcssa
  %v1_1000472c = add i32 %v2_10004728, 32
  %v2_1000472c = inttoptr i32 %v1_1000472c to i8*
  %v3_1000472c = load i8, i8* %v2_1000472c, align 1
  %v3_10004730 = icmp eq i8 %v3_1000472c, 0
  br i1 %v3_10004730, label %dec_label_pc_10004768, label %dec_label_pc_10004738

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004728
  %v3_10004738 = icmp eq i8 %v3_1000472c, 32
  br i1 %v3_10004738, label %dec_label_pc_10004768, label %dec_label_pc_10004740

dec_label_pc_10004740:                            ; preds = %dec_label_pc_10004738
  %v1_10004740 = add i32 %v1_10004770.lcssa, 1
  %v2_10004744 = add i32 %v1_10004740, %v0_100046c4.pre
  br label %dec_label_pc_10004750

dec_label_pc_10004750:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004740
  %v0_10004754 = phi i32 [ %v1_10004754, %dec_label_pc_10004750 ], [ %v1_10004770.lcssa, %dec_label_pc_10004740 ]
  %v0_10004758 = phi i32 [ %v1_10004758, %dec_label_pc_10004750 ], [ %v2_10004744, %dec_label_pc_10004740 ]
  %v1_10004750 = inttoptr i32 %v0_10004758 to i8*
  %v2_10004750 = load i8, i8* %v1_10004750, align 1
  %v1_10004754 = add i32 %v0_10004754, 1
  %v1_10004758 = add i32 %v0_10004758, 1
  %tmp63 = or i8 %v2_10004750, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004768, label %dec_label_pc_10004750

dec_label_pc_10004768:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004738, %dec_label_pc_10004728
  %v1_10004768 = phi i32 [ %v1_10004770.lcssa, %dec_label_pc_10004738 ], [ %v1_10004770.lcssa, %dec_label_pc_10004728 ], [ %v1_10004754, %dec_label_pc_10004750 ]
  %v2_10004768 = add i32 %v1_10004768, %v0_10004728
  %v2_10004770 = add i32 %v1_10004770.lcssa, %v0_100046c4.pre
  store i32 %v2_10004770, i32* @r31, align 4
  %v3_10004774 = add i32 %v2_10004768, 32
  %v4_10004774 = inttoptr i32 %v3_10004774 to i8*
  store i8 0, i8* %v4_10004774, align 1
  %v0_10004778 = load i32, i32* @r31, align 4
  store i32 268453760, i32* @lr, align 4
  %v1_1000477c = inttoptr i32 %v0_10004778 to i8*
  %v2_1000477c = call i32 @function_10007e68(i8* %v1_1000477c)
  %v2_10004780 = icmp sgt i32 %v2_1000477c, 15
  br i1 %v2_10004780, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004788

dec_label_pc_10004788:                            ; preds = %dec_label_pc_10004768
  %v0_10004788 = load i32, i32* @r31, align 4
  store i32 %v2_100045d8, i32* @r3, align 4
  %v2_10004790 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10004790 = call i32 @function_10007e90(i8* %v2_10004790, i32 %v0_10004788)
  br label %dec_label_pc_10004794

dec_label_pc_10004794.loopexit:                   ; preds = %dec_label_pc_100045dc.backedge, %dec_label_pc_100045d8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10004794

dec_label_pc_10004794:                            ; preds = %dec_label_pc_10004794.loopexit, %dec_label_pc_10004788
  %v1_100047a0.pre-phi = phi i8* [ %.pre, %dec_label_pc_10004794.loopexit ], [ %v2_10004790, %dec_label_pc_10004788 ]
  store i32 268453788, i32* @lr, align 4
  %v0_10004798 = call i32 @function_10008628()
  store i32 268453796, i32* @lr, align 4
  %v2_100047a0 = call i32 @function_10007e68(i8* %v1_100047a0.pre-phi)
  %v3_100047a4 = icmp eq i32 %v2_100047a0, 0
  br i1 %v3_100047a4, label %dec_label_pc_10004a6c, label %dec_label_pc_100047ac

dec_label_pc_100047ac:                            ; preds = %dec_label_pc_10004794
  %v3_100047b4 = call i32 @function_1000783c(i32 13, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453824, i32* @lr, align 4
  %v1_100047bc = call i32 @function_10008b74(i32 %v3_100047b4)
  store i32 %v1_100047bc, i32* @r23, align 4
  %v3_100047c0 = icmp eq i32 %v1_100047bc, 0
  br i1 %v3_100047c0, label %dec_label_pc_100049f4, label %dec_label_pc_100047c8

dec_label_pc_100047c8:                            ; preds = %dec_label_pc_100047ac
  store i32 0, i32* @r28, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d07 = inttoptr i32 %v1_100047bc to i32*
  %v2_100047d08 = call i32 @function_10008c84(i32* %v1_100047d07)
  %v3_100047d411 = icmp eq i32 %v2_100047d08, 0
  br i1 %v3_100047d411, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader.lr.ph

dec_label_pc_100047dc.preheader.lr.ph:            ; preds = %dec_label_pc_100047c8
  %v2_10004810 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10004980 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_100047dc.preheader

dec_label_pc_100047cc.loopexit:                   ; preds = %dec_label_pc_100047e4, %dec_label_pc_100047fc, %dec_label_pc_10004864
  %v0_100047cc = load i32, i32* @r23, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d0 = inttoptr i32 %v0_100047cc to i32*
  %v2_100047d0 = call i32 @function_10008c84(i32* %v1_100047d0)
  %v3_100047d4 = icmp eq i32 %v2_100047d0, 0
  br i1 %v3_100047d4, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader

dec_label_pc_100047dc.preheader:                  ; preds = %dec_label_pc_100047dc.preheader.lr.ph, %dec_label_pc_100047cc.loopexit
  %v0_100047e435 = phi i32 [ %v2_100047d08, %dec_label_pc_100047dc.preheader.lr.ph ], [ %v2_100047d0, %dec_label_pc_100047cc.loopexit ]
  br label %dec_label_pc_100047dc

dec_label_pc_100047dc:                            ; preds = %dec_label_pc_100047dc.preheader, %dec_label_pc_100049d0
  %v0_100047e4 = phi i32 [ %v0_100047e435, %dec_label_pc_100047dc.preheader ], [ %v2_100049dc, %dec_label_pc_100049d0 ]
  %v0_100047dc = load i32, i32* @r28, align 4
  %v3_100047dc = icmp eq i32 %v0_100047dc, 0
  br i1 %v3_100047dc, label %dec_label_pc_100047e4, label %dec_label_pc_100049e8

dec_label_pc_100047e4:                            ; preds = %dec_label_pc_100047dc
  %v1_100047e4 = add i32 %v0_100047e4, 11
  %v2_100047e4 = inttoptr i32 %v1_100047e4 to i8*
  %v3_100047e4 = load i8, i8* %v2_100047e4, align 1
  %v4_100047e4 = zext i8 %v3_100047e4 to i32
  store i32 %v1_100047e4, i32* @r30, align 4
  %v1_100047ec = add nuw nsw i32 %v4_100047e4, 208
  %v1_100047f0 = urem i32 %v1_100047ec, 256
  %v2_100047f4 = icmp ugt i32 %v1_100047f0, 9
  br i1 %v2_100047f4, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100047fc

dec_label_pc_100047fc:                            ; preds = %dec_label_pc_100047e4
  %v3_10004804 = call i32 @function_1000783c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004810 = call i32 @function_10007e90(i8* %v2_10004810, i32 %v3_10004804)
  store i32 268453916, i32* @lr, align 4
  %v2_10004818 = call i32 @function_10007e68(i8* %v2_10004810)
  %v0_1000481c = load i32, i32* @r30, align 4
  %v0_10004820 = load i32, i32* @r27, align 4
  %v2_10004820 = add i32 %v0_10004820, %v2_10004818
  store i32 %v2_10004820, i32* @r3, align 4
  %v2_10004824 = inttoptr i32 %v2_10004820 to i8*
  %v3_10004824 = call i32 @function_10007e90(i8* %v2_10004824, i32 %v0_1000481c)
  store i32 268453936, i32* @lr, align 4
  %v2_1000482c = call i32 @function_10007e68(i8* %v2_10004810)
  %v3_1000483c = call i32 @function_1000783c(i32 14, i32* null)
  %v0_10004844 = load i32, i32* @r27, align 4
  %v2_10004844 = add i32 %v2_1000482c, %v0_10004844
  store i32 %v2_10004844, i32* @r3, align 4
  %v2_10004848 = inttoptr i32 %v2_10004844 to i8*
  %v3_10004848 = call i32 @function_10007e90(i8* %v2_10004848, i32 %v3_1000483c)
  store i32 4096, i32* @r5, align 4
  store i32 268453980, i32* @lr, align 4
  %v3_10004858 = call i32 @function_100088a8(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_1000485c = icmp eq i32 %v3_10004858, -1
  br i1 %v3_1000485c, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_10004864

dec_label_pc_10004864:                            ; preds = %dec_label_pc_100047fc
  %v3_1000486c = call i32 @function_1000783c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004878 = call i32 @function_10007e90(i8* %v2_10004810, i32 %v3_1000486c)
  store i32 268454020, i32* @lr, align 4
  %v2_10004880 = call i32 @function_10007e68(i8* %v2_10004810)
  %v0_10004884 = load i32, i32* @r30, align 4
  %v0_10004888 = load i32, i32* @r27, align 4
  %v2_10004888 = add i32 %v0_10004888, %v2_10004880
  store i32 %v2_10004888, i32* @r3, align 4
  %v2_1000488c = inttoptr i32 %v2_10004888 to i8*
  %v3_1000488c = call i32 @function_10007e90(i8* %v2_1000488c, i32 %v0_10004884)
  store i32 268454040, i32* @lr, align 4
  %v2_10004894 = call i32 @function_10007e68(i8* %v2_10004810)
  %v3_100048a4 = call i32 @function_1000783c(i32 15, i32* null)
  %v0_100048ac = load i32, i32* @r27, align 4
  %v2_100048ac = add i32 %v2_10004894, %v0_100048ac
  store i32 %v2_100048ac, i32* @r3, align 4
  %v2_100048b0 = inttoptr i32 %v2_100048ac to i8*
  %v3_100048b0 = call i32 @function_10007e90(i8* %v2_100048b0, i32 %v3_100048a4)
  store i32 268454076, i32* @lr, align 4
  %v1_100048b8 = call i32 @function_10008b74(i32 %v2_100044fc)
  store i32 %v1_100048b8, i32* @r25, align 4
  %v3_100048bc = icmp eq i32 %v1_100048b8, 0
  br i1 %v3_100048bc, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100048c4

dec_label_pc_100048c4.loopexit:                   ; preds = %dec_label_pc_100048e4, %dec_label_pc_10004980
  %v0_100048c4.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048c4

dec_label_pc_100048c4:                            ; preds = %dec_label_pc_10004864, %dec_label_pc_100048c4.loopexit
  %v0_100048c4 = phi i32 [ %v0_100048c4.pre, %dec_label_pc_100048c4.loopexit ], [ %v1_100048b8, %dec_label_pc_10004864 ]
  store i32 268454092, i32* @lr, align 4
  %v1_100048c8 = inttoptr i32 %v0_100048c4 to i32*
  %v2_100048c8 = call i32 @function_10008c84(i32* %v1_100048c8)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048c8, i32* @r31, align 4
  %v3_100048d0 = icmp eq i32 %v2_100048c8, 0
  %v0_100048d4 = load i32, i32* @r28, align 4
  store i32 %v2_10004504, i32* @r3, align 4
  %v3_100048d4.not = icmp ne i32 %v0_100048d4, 0
  %brmerge = or i1 %v3_100048d0, %v3_100048d4.not
  br i1 %brmerge, label %dec_label_pc_100049d0, label %dec_label_pc_100048e4

dec_label_pc_100048e4:                            ; preds = %dec_label_pc_100048c4
  store i32 268454120, i32* @lr, align 4
  %v0_100048e4 = call i32 @function_10007f10()
  %v3_100048f0 = call i32 @function_1000783c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_100048fc = call i32 @function_10007e90(i8* %v2_10004810, i32 %v3_100048f0)
  store i32 268454152, i32* @lr, align 4
  %v2_10004904 = call i32 @function_10007e68(i8* %v2_10004810)
  %v0_10004908 = load i32, i32* @r30, align 4
  %v0_1000490c = load i32, i32* @r27, align 4
  %v2_1000490c = add i32 %v0_1000490c, %v2_10004904
  store i32 %v2_1000490c, i32* @r3, align 4
  %v2_10004910 = inttoptr i32 %v2_1000490c to i8*
  %v3_10004910 = call i32 @function_10007e90(i8* %v2_10004910, i32 %v0_10004908)
  store i32 268454172, i32* @lr, align 4
  %v2_10004918 = call i32 @function_10007e68(i8* %v2_10004810)
  %v3_10004928 = call i32 @function_1000783c(i32 15, i32* null)
  %v0_10004930 = load i32, i32* @r27, align 4
  %v2_10004930 = add i32 %v2_10004918, %v0_10004930
  store i32 %v2_10004930, i32* @r3, align 4
  %v2_10004934 = inttoptr i32 %v2_10004930 to i8*
  %v3_10004934 = call i32 @function_10007e90(i8* %v2_10004934, i32 %v3_10004928)
  store i32 268454208, i32* @lr, align 4
  %v2_1000493c = call i32 @function_10007e68(i8* %v2_10004810)
  %v0_10004948 = load i32, i32* @r27, align 4
  %v2_10004948 = add i32 %v0_10004948, %v2_1000493c
  store i32 %v2_10004948, i32* @r3, align 4
  %v2_1000494c = inttoptr i32 %v2_10004948 to i8*
  %v3_1000494c = call i32 @function_10007e90(i8* %v2_1000494c, i32 ptrtoint (i32* @global_var_1000b024.30 to i32))
  store i32 268454232, i32* @lr, align 4
  %v2_10004954 = call i32 @function_10007e68(i8* %v2_10004810)
  %v0_10004958 = load i32, i32* @r31, align 4
  %v1_10004958 = add i32 %v0_10004958, 11
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v0_1000495c, %v2_10004954
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10007e90(i8* %v2_10004960, i32 %v1_10004958)
  store i32 268454260, i32* @lr, align 4
  %v3_10004970 = call i32 @function_100088a8(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_10004974 = icmp eq i32 %v3_10004970, -1
  br i1 %v3_10004974, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_10004980

dec_label_pc_10004980:                            ; preds = %dec_label_pc_100048e4
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_10007e68(i8* %v1_10004980)
  %v4_10004990 = call i32 @function_10008218(i8* %v1_10004980, i32 %v2_10004980, i32 %v2_100045d8)
  %v3_10004998 = icmp eq i32 %v4_10004990, -1
  %v0_1000499c = load i32, i32* @r30, align 4
  store i32 %v0_1000499c, i32* @r3, align 4
  br i1 %v3_10004998, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004980
  store i32 268454312, i32* @lr, align 4
  %v2_100049a4 = call i32 @function_10007f90(i32 %v0_1000499c, i32 10)
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_10008748(i32 %v2_100049a4, i32 9)
  %v0_100049b0 = load i32, i32* @r25, align 4
  store i32 268454328, i32* @lr, align 4
  %v1_100049b4 = inttoptr i32 %v0_100049b0 to i32*
  %v2_100049b4 = call i32 @function_10008c84(i32* %v1_100049b4)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100048c4, %dec_label_pc_100049a4
  %v0_100049d0 = load i32, i32* @r25, align 4
  store i32 268454360, i32* @lr, align 4
  %v1_100049d4 = inttoptr i32 %v0_100049d0 to i32*
  %v2_100049d4 = call i32 @function_10008ad0(i32* %v1_100049d4)
  %v0_100049d8 = load i32, i32* @r23, align 4
  store i32 268454368, i32* @lr, align 4
  %v1_100049dc = inttoptr i32 %v0_100049d8 to i32*
  %v2_100049dc = call i32 @function_10008c84(i32* %v1_100049dc)
  %v3_100049e0 = icmp eq i32 %v2_100049dc, 0
  br i1 %v3_100049e0, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc

dec_label_pc_100049e8:                            ; preds = %dec_label_pc_100047cc.loopexit, %dec_label_pc_100049d0, %dec_label_pc_100047dc, %dec_label_pc_100047c8
  %v0_100049e8 = load i32, i32* @r23, align 4
  %v0_100049ec = load i32, i32* @r28, align 4
  %v1_100049ec = urem i32 %v0_100049ec, 256
  store i32 %v1_100049ec, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100049f4.31 to i32), i32* @lr, align 4
  %v1_100049f0 = inttoptr i32 %v0_100049e8 to i32*
  %v2_100049f0 = call i32 @function_10008ad0(i32* %v1_100049f0)
  br label %dec_label_pc_100049f4

dec_label_pc_100049f4:                            ; preds = %dec_label_pc_100047ac, %dec_label_pc_100049e8
  store i32 ptrtoint ([3 x i8]* @global_var_100049fc.32 to i32), i32* @lr, align 4
  %v1_100049f8 = call i32 @function_10009e3c(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a04.33 to i32), i32* @lr, align 4
  %v1_10004a00 = call i32 @function_10007864(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a0c.34 to i32), i32* @lr, align 4
  %v1_10004a08 = call i32 @function_10007864(i32 14)
  store i32 268454420, i32* @lr, align 4
  %v1_10004a10 = call i32 @function_10007864(i32 15)
  br label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_10004590, %dec_label_pc_100049f4
  %v0_10004a18 = load i32, i32* @r31, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a18

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_100046d8
  %v3_100046d8 = icmp eq i32 %v0_1000470c74, 0
  %v1_10004a4c = add i32 %v0_1000470c74, 1
  br i1 %v3_100046d8, label %dec_label_pc_10004a54, label %dec_label_pc_100046e0

dec_label_pc_10004a54:                            ; preds = %dec_label_pc_10004a4c
  %v0_10004a54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a54 = add i32 %v0_10004a54, %v1_1000477076
  %v1_10004a58 = add i32 %v2_10004a54, 33
  %v2_10004a58 = inttoptr i32 %v1_10004a58 to i8*
  %v3_10004a58 = load i8, i8* %v2_10004a58, align 1
  %v3_10004a5c = icmp eq i8 %v3_10004a58, 65
  br i1 %v3_10004a5c, label %dec_label_pc_10004a64, label %dec_label_pc_100046bc

dec_label_pc_10004a64:                            ; preds = %dec_label_pc_10004a54
  br label %dec_label_pc_100046bc.outer

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004794
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a78.35 to i32), i32* @lr, align 4
  %v1_10004a74 = call i32 @function_10007864(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a80.36 to i32), i32* @lr, align 4
  %v1_10004a7c = call i32 @function_10007864(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a88.37 to i32), i32* @lr, align 4
  %v1_10004a84 = call i32 @function_10007864(i32 15)
  store i32 268454544, i32* @lr, align 4
  %v1_10004a8c = call i32 @function_10007864(i32 17)
  %v0_10004a94 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a94

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_100044e8
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i32 %v2_100049dc, { 1, 0 }
  uselistorder i32 %v1_10004770.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000470c74, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000477076, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_100046f022, { 1, 0 }
  uselistorder i32 %v1_1000468c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_100045d8, { 1, 0, 2 }
  uselistorder i32 %v2_1000451c, { 1, 0 }
  uselistorder i32 %v2_100044fc, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10007f90, { 1, 0 }
  uselistorder i32 268453844, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_100080c8, { 1, 0 }
  uselistorder i32 268453356, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4, { 1, 0 }
  uselistorder label %dec_label_pc_100049e8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049d0, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047cc.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000471c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004708, { 1, 0 }
  uselistorder label %dec_label_pc_100046e0, { 1, 0 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
  uselistorder label %dec_label_pc_10004684, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004634, { 1, 0 }
  uselistorder label %dec_label_pc_100045dc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100045f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004590, { 1, 0 }
}

define i32 @function_10004aec(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004aec:
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8404 = alloca i32, align 4
  %stack_var_-8408 = alloca i32, align 4
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-8384 = alloca i32, align 4
  %stack_var_-8320 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8256 = alloca i32, align 4
  %v0_10004af8 = load i32, i32* @r30, align 4
  %v0_10004b08 = load i32, i32* @r22, align 4
  %v0_10004b0c = load i32, i32* @r23, align 4
  %v0_10004b10 = load i32, i32* @r24, align 4
  %v0_10004b14 = load i32, i32* @r25, align 4
  %v0_10004b18 = load i32, i32* @r26, align 4
  %v0_10004b1c = load i32, i32* @r27, align 4
  %v0_10004b20 = load i32, i32* @r28, align 4
  %v0_10004b24 = load i32, i32* @r29, align 4
  %v0_10004b28 = load i32, i32* @r31, align 4
  store i32 268454704, i32* @lr, align 4
  %v0_10004b2c = call i32 @function_100089f8()
  store i32 %v0_10004b2c, i32* @r30, align 4
  store i32 268454712, i32* @lr, align 4
  %v0_10004b34 = call i32 @function_10008670()
  store i32 %v0_10004b34, i32* @global_var_1001b754.38, align 4
  %tmp52 = icmp slt i32 %v0_10004b34, 1
  br i1 %tmp52, label %dec_label_pc_10004b88, label %dec_label_pc_10004b48

dec_label_pc_10004b48:                            ; preds = %dec_label_pc_10004ca0, %dec_label_pc_10004b90, %dec_label_pc_10004b88, %dec_label_pc_10004aec
  %v0_10004b84 = phi i32 [ -1, %dec_label_pc_10004b90 ], [ -1, %dec_label_pc_10004b88 ], [ %v0_10004b34, %dec_label_pc_10004aec ], [ 0, %dec_label_pc_10004ca0 ]
  store i32 %v0_10004b08, i32* @r22, align 4
  store i32 %v0_10004b0c, i32* @r23, align 4
  store i32 %v0_10004b10, i32* @r24, align 4
  store i32 %v0_10004b14, i32* @r25, align 4
  store i32 %v0_10004b18, i32* @r26, align 4
  store i32 %v0_10004b1c, i32* @r27, align 4
  store i32 %v0_10004b20, i32* @r28, align 4
  store i32 %v0_10004b24, i32* @r29, align 4
  store i32 %v0_10004af8, i32* @r30, align 4
  store i32 %v0_10004b28, i32* @r31, align 4
  ret i32 %v0_10004b84

dec_label_pc_10004b88:                            ; preds = %dec_label_pc_10004aec
  %v3_10004b88 = icmp eq i32 %v0_10004b34, -1
  br i1 %v3_10004b88, label %dec_label_pc_10004b48, label %dec_label_pc_10004b90

dec_label_pc_10004b90:                            ; preds = %dec_label_pc_10004b88
  store i32 268454812, i32* @lr, align 4
  %v1_10004b98 = call i32 @function_10009e3c(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004ba4.39 to i32), i32* @lr, align 4
  %v0_10004ba0 = call i32 @function_10009548()
  store i32 %v0_10004ba0, i32* %r11.global-to-local, align 4
  %v3_10004bb0 = inttoptr i32 %v0_10004ba0 to i8*
  store i8 0, i8* %v3_10004bb0, align 1
  store i32 0, i32* %r28.global-to-local, align 4
  %v0_10004bbc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004bbc, i32* @global_var_1001b750.40, align 4
  store i32 0, i32* @global_var_1001b74c.41, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004bc8.42 to i32), i32* @lr, align 4
  %v1_10004bc4 = call i32 @function_100078f0(i32 13)
  %v2_10004bcc = ptrtoint i32* %stack_var_-8256 to i32
  store i32 %v2_10004bcc, i32* @r25, align 4
  store i32 268454868, i32* @lr, align 4
  %v1_10004bd0 = call i32 @function_100078f0(i32 14)
  %v3_10004bdc = call i32 @function_1000783c(i32 13, i32* null)
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v2_10004be8 = bitcast i32* %stack_var_-8256 to i8*
  %v3_10004be8 = call i32 @function_10007e90(i8* %v2_10004be8, i32 %v3_10004bdc)
  %v0_10004bec = load i32, i32* @r25, align 4
  %v2_10004bec = add i32 %v0_10004bec, %v3_10004be8
  store i32 %v2_10004bec, i32* %r29.global-to-local, align 4
  store i32 268454900, i32* @lr, align 4
  %v0_10004bf0 = call i32 @function_100086b8()
  %v2_10004bf4 = ptrtoint i32* %stack_var_-8400 to i32
  %v3_10004bfc = trunc i32 %v0_10004bf0 to i8
  %v4_10004bfc = call i32 @function_10008344(i8 %v3_10004bfc, i32 10, i32 %v2_10004bf4)
  store i32 %v2_10004bec, i32* @r3, align 4
  %v2_10004c08 = inttoptr i32 %v2_10004bec to i8*
  %v3_10004c08 = call i32 @function_10007e90(i8* %v2_10004c08, i32 %v4_10004bfc)
  %v0_10004c10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004c10 = add i32 %v0_10004c10, %v3_10004c08
  store i32 %v2_10004c10, i32* %r29.global-to-local, align 4
  %v3_10004c18 = call i32 @function_1000783c(i32 14, i32* null)
  store i32 %v2_10004c10, i32* @r3, align 4
  %v2_10004c24 = inttoptr i32 %v2_10004c10 to i8*
  %v3_10004c24 = call i32 @function_10007e90(i8* %v2_10004c24, i32 %v3_10004c18)
  store i32 %v3_10004c24, i32* @r31, align 4
  store i32 268454972, i32* @lr, align 4
  %v2_10004c38 = call i32 @function_10008790(i32 %v2_10004bcc, i32 0)
  %v3_10004c3c = icmp eq i32 %v2_10004c38, -1
  br i1 %v3_10004c3c, label %dec_label_pc_10004b48, label %dec_label_pc_10004c44

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_10004b90
  store i32 ptrtoint ([3 x i8]* @global_var_10004c48.43 to i32), i32* @lr, align 4
  %v0_10004c44 = call i32 @function_10008628()
  store i32 ptrtoint ([3 x i8]* @global_var_10004c50.44 to i32), i32* @lr, align 4
  %v1_10004c4c = call i32 @function_10007864(i32 13)
  store i32 268455000, i32* @lr, align 4
  %v1_10004c54 = call i32 @function_10007864(i32 14)
  %v3_10004c58 = load i32, i32* @global_var_1001b750.40, align 4
  store i32 268455016, i32* @lr, align 4
  %v3_10004c64 = call i32 @function_100088a8(i32 %v2_10004bcc, i32 %v3_10004c58, i32 4095)
  %v3_10004c68 = icmp eq i32 %v3_10004c64, -1
  br i1 %v3_10004c68, label %dec_label_pc_10004c78, label %dec_label_pc_10004c70

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004c44
  %v3_10004c70 = load i32, i32* @global_var_1001b750.40, align 4
  %v0_10004c74 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004c74 = trunc i32 %v0_10004c74 to i8
  %v4_10004c74 = add i32 %v3_10004c70, %v3_10004c64
  %v5_10004c74 = inttoptr i32 %v4_10004c74 to i8*
  store i8 %v3_10004c74, i8* %v5_10004c74, align 1
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c44, %dec_label_pc_10004c70
  %v0_10004c78 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004c78 = load i32, i32* @r31, align 4
  %v2_10004c78 = add i32 %v1_10004c78, %v0_10004c78
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v0_10004c80 = load i32, i32* @r25, align 4
  %v2_10004c80 = sub i32 %v2_10004c78, %v0_10004c80
  store i32 %v2_10004c80, i32* @r4, align 4
  %v0_10004c84 = load i32, i32* @r30, align 4
  store i32 %v0_10004c84, i32* %r29.global-to-local, align 4
  store i32 268455052, i32* @lr, align 4
  %v0_10004c88 = call i32 @function_10007f10()
  store i32 400, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v2_10004c94 = ptrtoint i32* %stack_var_-8320 to i32
  store i32 %v2_10004c94, i32* @r24, align 4
  %v2_10004c98 = ptrtoint i32* %stack_var_-8384 to i32
  store i32 %v2_10004c98, i32* @r22, align 4
  %v2_10004c9c = ptrtoint i32* %stack_var_-4160 to i32
  %v2_10004db0 = bitcast i32* %stack_var_-8320 to i8*
  %v2_10004df4 = bitcast i32* %stack_var_-8384 to i8*
  br label %dec_label_pc_10004ca0

dec_label_pc_10004ca0:                            ; preds = %dec_label_pc_10004d74, %dec_label_pc_10004c78
  store i32 268455080, i32* @lr, align 4
  %v1_10004ca4 = call i32 @function_100078f0(i32 13)
  %v3_10004cb0 = call i32 @function_1000783c(i32 13, i32* null)
  store i32 268455096, i32* @lr, align 4
  %v1_10004cb4 = call i32 @function_10008b74(i32 %v3_10004cb0)
  store i32 %v1_10004cb4, i32* @r27, align 4
  %v3_10004cb8 = icmp eq i32 %v1_10004cb4, 0
  br i1 %v3_10004cb8, label %dec_label_pc_10004b48, label %dec_label_pc_10004cc0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004ca0
  store i32 ptrtoint ([3 x i8]* @global_var_10004cc8.46 to i32), i32* @lr, align 4
  %v1_10004cc4 = call i32 @function_10007864(i32 13)
  store i32 268455124, i32* @lr, align 4
  %v1_10004cd0 = call i32 @function_100044e8(i32 48101)
  store i32 268455132, i32* @lr, align 4
  %v1_10004cd8 = call i32 @function_100044e8(i32 1991)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ce4.47 to i32), i32* @lr, align 4
  %v1_10004ce0 = call i32 @function_100044e8(i32 1338)
  store i32 268455148, i32* @lr, align 4
  %v1_10004ce8 = call i32 @function_100044e8(i32 80)
  store i32 268455156, i32* @lr, align 4
  %v1_10004cf0 = call i32 @function_100044e8(i32 443)
  store i32 268455164, i32* @lr, align 4
  %v1_10004cf8 = call i32 @function_100044e8(i32 4321)
  store i32 268455172, i32* @lr, align 4
  %v1_10004d00 = call i32 @function_100044e8(i32 6667)
  store i32 268455180, i32* @lr, align 4
  %v1_10004d08 = call i32 @function_100044e8(i32 6697)
  %v0_10004d0c8 = load i32, i32* @r27, align 4
  store i32 268455188, i32* @lr, align 4
  %v1_10004d109 = inttoptr i32 %v0_10004d0c8 to i32*
  %v2_10004d1010 = call i32 @function_10008c84(i32* %v1_10004d109)
  %v3_10004d1413 = icmp eq i32 %v2_10004d1010, 0
  br i1 %v3_10004d1413, label %dec_label_pc_10004d74, label %dec_label_pc_10004d1c.preheader

dec_label_pc_10004d1c.preheader:                  ; preds = %dec_label_pc_10004cc0, %dec_label_pc_10004d0c.backedge
  %v0_10004d1c15 = phi i32 [ %v2_10004d10, %dec_label_pc_10004d0c.backedge ], [ %v2_10004d1010, %dec_label_pc_10004cc0 ]
  br label %dec_label_pc_10004d1c

dec_label_pc_10004d1c:                            ; preds = %dec_label_pc_10004d1c.preheader, %dec_label_pc_10004d60
  %v0_10004d30 = phi i32 [ %v0_10004d1c15, %dec_label_pc_10004d1c.preheader ], [ %v2_10004d68, %dec_label_pc_10004d60 ]
  %v1_10004d1c = add i32 %v0_10004d30, 11
  %v2_10004d1c = inttoptr i32 %v1_10004d1c to i8*
  %v3_10004d1c = load i8, i8* %v2_10004d1c, align 1
  %v4_10004d1c = zext i8 %v3_10004d1c to i32
  %v1_10004d20 = add nuw nsw i32 %v4_10004d1c, 208
  %v1_10004d24 = urem i32 %v1_10004d20, 256
  %v2_10004d28 = icmp ugt i32 %v1_10004d24, 9
  br i1 %v2_10004d28, label %dec_label_pc_10004d0c.backedge, label %dec_label_pc_10004d30

dec_label_pc_10004d30:                            ; preds = %dec_label_pc_10004d1c
  store i32 268455232, i32* @lr, align 4
  %v3_10004d3c = call i32 @function_10009bf0(i8* %v2_10004d1c, i32 %v1_10004d24)
  %v0_10004d40 = load i32, i32* @r28, align 4
  %v2_10004d40 = icmp slt i32 %v0_10004d40, %v3_10004d3c
  store i32 %v3_10004d3c, i32* %r30.global-to-local, align 4
  br i1 %v2_10004d40, label %dec_label_pc_10004d80, label %dec_label_pc_10004d4c

dec_label_pc_10004d4c:                            ; preds = %dec_label_pc_10004d30
  store i32 268455252, i32* @lr, align 4
  %v0_10004d50 = call i32 @function_100089f8()
  %v0_10004d54 = load i32, i32* @r29, align 4
  %v2_10004d54 = sub i32 %v0_10004d50, %v0_10004d54
  %tmp53 = icmp slt i32 %v2_10004d54, 601
  br i1 %tmp53, label %dec_label_pc_10004edc, label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004d4c
  %v0_10004d60 = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268455276, i32* @lr, align 4
  %v1_10004d68 = inttoptr i32 %v0_10004d60 to i32*
  %v2_10004d68 = call i32 @function_10008c84(i32* %v1_10004d68)
  %v3_10004d6c = icmp eq i32 %v2_10004d68, 0
  br i1 %v3_10004d6c, label %dec_label_pc_10004d74, label %dec_label_pc_10004d1c

dec_label_pc_10004d74:                            ; preds = %dec_label_pc_10004d0c.backedge, %dec_label_pc_10004d60, %dec_label_pc_10004cc0
  %v0_10004d74 = load i32, i32* @r27, align 4
  store i32 268455292, i32* @lr, align 4
  %v1_10004d78 = inttoptr i32 %v0_10004d74 to i32*
  %v2_10004d78 = call i32 @function_10008ad0(i32* %v1_10004d78)
  br label %dec_label_pc_10004ca0

dec_label_pc_10004d80:                            ; preds = %dec_label_pc_10004d30
  store i32 268455304, i32* @lr, align 4
  %v0_10004d84 = call i32 @function_100089f8()
  store i32 %v0_10004d84, i32* @r23, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d94.48 to i32), i32* @lr, align 4
  %v1_10004d90 = call i32 @function_100078f0(i32 13)
  store i32 268455324, i32* @lr, align 4
  %v1_10004d98 = call i32 @function_100078f0(i32 14)
  %v3_10004da4 = call i32 @function_1000783c(i32 13, i32* null)
  store i32 %v2_10004c94, i32* @r3, align 4
  %v3_10004db0 = call i32 @function_10007e90(i8* %v2_10004db0, i32 %v3_10004da4)
  %v0_10004db4 = load i32, i32* @r31, align 4
  %v0_10004db8 = load i32, i32* @r24, align 4
  %v2_10004db8 = add i32 %v0_10004db8, %v3_10004db0
  store i32 %v2_10004db8, i32* %r28.global-to-local, align 4
  store i32 %v2_10004db8, i32* @r3, align 4
  %v2_10004dc0 = inttoptr i32 %v2_10004db8 to i8*
  %v3_10004dc0 = call i32 @function_10007e90(i8* %v2_10004dc0, i32 %v0_10004db4)
  store i32 %v3_10004dc0, i32* %r29.global-to-local, align 4
  %v3_10004dd0 = call i32 @function_1000783c(i32 14, i32* null)
  %v2_10004dd8 = add i32 %v3_10004dc0, %v2_10004db8
  store i32 %v2_10004dd8, i32* @r3, align 4
  %v2_10004ddc = inttoptr i32 %v2_10004dd8 to i8*
  %v3_10004ddc = call i32 @function_10007e90(i8* %v2_10004ddc, i32 %v3_10004dd0)
  %v3_10004de8 = call i32 @function_1000783c(i32 13, i32* null)
  store i32 %v2_10004c98, i32* @r3, align 4
  %v3_10004df4 = call i32 @function_10007e90(i8* %v2_10004df4, i32 %v3_10004de8)
  %v0_10004df8 = load i32, i32* @r31, align 4
  %v0_10004dfc = load i32, i32* @r22, align 4
  %v2_10004dfc = add i32 %v0_10004dfc, %v3_10004df4
  store i32 %v2_10004dfc, i32* %r28.global-to-local, align 4
  store i32 %v2_10004dfc, i32* @r3, align 4
  %v2_10004e04 = inttoptr i32 %v2_10004dfc to i8*
  %v3_10004e04 = call i32 @function_10007e90(i8* %v2_10004e04, i32 %v0_10004df8)
  store i32 %v3_10004e04, i32* %r29.global-to-local, align 4
  %v3_10004e14 = call i32 @function_1000783c(i32 29, i32* null)
  %v2_10004e1c = add i32 %v3_10004e04, %v2_10004dfc
  store i32 %v2_10004e1c, i32* @r3, align 4
  %v2_10004e20 = inttoptr i32 %v2_10004e1c to i8*
  %v3_10004e20 = call i32 @function_10007e90(i8* %v2_10004e20, i32 %v3_10004e14)
  store i32 ptrtoint ([3 x i8]* @global_var_10004e2c.50 to i32), i32* @lr, align 4
  %v1_10004e28 = call i32 @function_10007864(i32 13)
  store i32 268455476, i32* @lr, align 4
  %v1_10004e30 = call i32 @function_10007864(i32 14)
  store i32 4095, i32* @r5, align 4
  store i32 268455492, i32* @lr, align 4
  %v3_10004e40 = call i32 @function_100088a8(i32 %v2_10004c94, i32 %v2_10004bcc, i32 4095)
  %v3_10004e44 = icmp eq i32 %v3_10004e40, -1
  store i32 %v3_10004e40, i32* %r29.global-to-local, align 4
  br i1 %v3_10004e44, label %dec_label_pc_10004f30, label %dec_label_pc_10004e50

dec_label_pc_10004e50:                            ; preds = %dec_label_pc_10004d80
  %v0_10004e50 = load i32, i32* @r1, align 4
  %v2_10004e50 = add i32 %v0_10004e50, %v3_10004e40
  %v3_10004e58 = add i32 %v2_10004e50, 160
  %v4_10004e58 = inttoptr i32 %v3_10004e58 to i8*
  store i8 0, i8* %v4_10004e58, align 1
  store i32 268455524, i32* @lr, align 4
  %v1_10004e60 = call i32 @function_100078f0(i32 30)
  %v3_10004e6c = call i32 @function_1000783c(i32 30, i32* null)
  %v0_10004e70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004e70 = add i32 %v0_10004e70, -1
  %v4_10004e7c = call i32 @function_10008218(i8* %v2_10004be8, i32 %v1_10004e70, i32 %v3_10004e6c)
  %v3_10004e80 = icmp eq i32 %v4_10004e7c, -1
  br i1 %v3_10004e80, label %dec_label_pc_10004e9c, label %dec_label_pc_10004e88

dec_label_pc_10004e88:                            ; preds = %dec_label_pc_10004e50
  store i32 268455568, i32* @lr, align 4
  %v1_10004e8c = call i32 @function_10008a40(i32 %v2_10004bcc)
  %v0_10004e90 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e9c.51 to i32), i32* @lr, align 4
  %v2_10004e98 = call i32 @function_10008748(i32 %v0_10004e90, i32 9)
  br label %dec_label_pc_10004e9c

dec_label_pc_10004e9c:                            ; preds = %dec_label_pc_10004e50, %dec_label_pc_10004e88
  store i32 ptrtoint (i32* @global_var_10004ea4.52 to i32), i32* @lr, align 4
  %v1_10004ea0 = call i32 @function_10007864(i32 30)
  store i32 268455592, i32* @lr, align 4
  %v0_10004ea4 = call i32 @function_100086b8()
  %v0_10004ea8 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004ea8 = icmp eq i32 %v0_10004ea8, %v0_10004ea4
  br i1 %v4_10004ea8, label %dec_label_pc_10004ed0, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e9c
  store i32 268455604, i32* @lr, align 4
  %v0_10004eb0 = call i32 @function_10008700()
  %v0_10004eb4 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004eb4 = icmp eq i32 %v0_10004eb4, %v0_10004eb0
  br i1 %v4_10004eb4, label %dec_label_pc_10004ed0, label %dec_label_pc_10004ebc

dec_label_pc_10004ebc:                            ; preds = %dec_label_pc_10004eb0
  %v3_10004ebc = load i32, i32* @global_var_1001b750.40, align 4
  %v3_10004ec4 = call i32 @function_100082c4(i8* %v2_10004be8, i32 %v3_10004ebc)
  %v3_10004ec8 = icmp eq i32 %v3_10004ec4, 0
  br i1 %v3_10004ec8, label %dec_label_pc_10004f0c, label %dec_label_pc_10004ebc.dec_label_pc_10004ed0_crit_edge

dec_label_pc_10004ebc.dec_label_pc_10004ed0_crit_edge: ; preds = %dec_label_pc_10004ebc
  %v0_10004ed0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004ed0

dec_label_pc_10004ed0:                            ; preds = %dec_label_pc_10004ebc.dec_label_pc_10004ed0_crit_edge, %dec_label_pc_10004eb0, %dec_label_pc_10004e9c
  %v0_10004ed0 = phi i32 [ %v0_10004ed0.pre, %dec_label_pc_10004ebc.dec_label_pc_10004ed0_crit_edge ], [ %v0_10004eb0, %dec_label_pc_10004eb0 ], [ %v0_10004ea4, %dec_label_pc_10004e9c ]
  store i32 %v0_10004ed0, i32* @r28, align 4
  %v0_10004ed4 = load i32, i32* @r23, align 4
  store i32 %v0_10004ed4, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004d0c.backedge

dec_label_pc_10004d0c.backedge:                   ; preds = %dec_label_pc_10004d1c, %dec_label_pc_10004ed0, %dec_label_pc_10004f00, %dec_label_pc_10005044, %dec_label_pc_10004edc, %dec_label_pc_10004ee4
  %v0_10004d0c = load i32, i32* @r27, align 4
  store i32 268455188, i32* @lr, align 4
  %v1_10004d10 = inttoptr i32 %v0_10004d0c to i32*
  %v2_10004d10 = call i32 @function_10008c84(i32* %v1_10004d10)
  %v3_10004d14 = icmp eq i32 %v2_10004d10, 0
  br i1 %v3_10004d14, label %dec_label_pc_10004d74, label %dec_label_pc_10004d1c.preheader

dec_label_pc_10004edc:                            ; preds = %dec_label_pc_10004d4c
  %v0_10004edc = load i32, i32* %r30.global-to-local, align 4
  %tmp54 = icmp slt i32 %v0_10004edc, 401
  br i1 %tmp54, label %dec_label_pc_10004d0c.backedge, label %dec_label_pc_10004ee4

dec_label_pc_10004ee4:                            ; preds = %dec_label_pc_10004edc
  %v0_10004eec = load i32, i32* @r26, align 4
  %v1_10004ef0 = urem i32 %v0_10004eec, 10
  %v4_10004ef8 = icmp eq i32 %v1_10004ef0, 0
  br i1 %v4_10004ef8, label %dec_label_pc_10004f00, label %dec_label_pc_10004d0c.backedge

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004ee4
  store i32 268455688, i32* @lr, align 4
  %v1_10004f04 = call i32 @function_10009e3c(i32 1)
  br label %dec_label_pc_10004d0c.backedge

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004ebc
  store i32 268455708, i32* @lr, align 4
  %v2_10004f18 = call i32 @function_10008790(i32 %v2_10004bcc, i32 0)
  %v3_10004f1c = icmp eq i32 %v2_10004f18, -1
  store i32 %v2_10004f18, i32* @r31, align 4
  br i1 %v3_10004f1c, label %dec_label_pc_10005098, label %dec_label_pc_10004f28

dec_label_pc_10004f28:                            ; preds = %dec_label_pc_10004f0c, %dec_label_pc_10005098
  store i32 268455728, i32* @lr, align 4
  %v0_10004f2c = call i32 @function_10008628()
  br label %dec_label_pc_10004f30

dec_label_pc_10004f30:                            ; preds = %dec_label_pc_10004d80, %dec_label_pc_10004f28
  store i32 268455744, i32* @lr, align 4
  %v2_10004f3c = call i32 @function_10008790(i32 %v2_10004c94, i32 0)
  %v3_10004f40 = icmp eq i32 %v2_10004f3c, -1
  store i32 %v2_10004f3c, i32* %r28.global-to-local, align 4
  br i1 %v3_10004f40, label %dec_label_pc_10005044, label %dec_label_pc_10004f4c

dec_label_pc_10004f4c:                            ; preds = %dec_label_pc_10004f30
  store i32 ptrtoint ([3 x i8]* @global_var_10004f54.53 to i32), i32* @lr, align 4
  %v1_10004f50 = call i32 @function_100078f0(i32 18)
  store i32 268455772, i32* @lr, align 4
  %v1_10004f58 = call i32 @function_100078f0(i32 19)
  %v3_10004f64 = call i32 @function_1000783c(i32 18, i32* nonnull %stack_var_-8408)
  store i32 %v3_10004f64, i32* @r31, align 4
  %v3_10004f74 = call i32 @function_1000783c(i32 19, i32* nonnull %stack_var_-8404)
  store i32 %v3_10004f74, i32* %r29.global-to-local, align 4
  %v0_10004f7c58 = load i32, i32* %r28.global-to-local, align 4
  store i32 268455820, i32* @lr, align 4
  %v3_10004f8859 = call i32 @function_10008860(i32 %v0_10004f7c58, i32 %v2_10004c9c, i32 4096)
  %tmp5561 = icmp slt i32 %v3_10004f8859, 1
  br i1 %tmp5561, label %dec_label_pc_1000507c, label %dec_label_pc_10004f94

dec_label_pc_10004f94:                            ; preds = %dec_label_pc_10004f4c, %dec_label_pc_10004f7c.backedge
  %v3_10004f8862 = phi i32 [ %v3_10004f88, %dec_label_pc_10004f7c.backedge ], [ %v3_10004f8859, %dec_label_pc_10004f4c ]
  %v3_10004f8c63.in = phi i32 [ %v3_10004f88, %dec_label_pc_10004f7c.backedge ], [ %v3_10004f8859, %dec_label_pc_10004f4c ]
  %v3_10004f8c63 = icmp eq i32 %v3_10004f8c63.in, 0
  %v3_10004f94 = load i32, i32* %stack_var_-8408, align 4
  %v2_10004f98 = icmp slt i32 %v3_10004f8862, %v3_10004f94
  br i1 %v2_10004f98, label %dec_label_pc_10004fd8, label %dec_label_pc_10004fa0

dec_label_pc_10004fa0:                            ; preds = %dec_label_pc_10004f94
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10004fb4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004fb4

dec_label_pc_10004fb4:                            ; preds = %dec_label_pc_10004fa0, %dec_label_pc_10004fd0
  %v0_10004fd4 = phi i32 [ %v3_10004f8862, %dec_label_pc_10004fa0 ], [ %v1_10004fd4, %dec_label_pc_10004fd0 ]
  %v0_10004fd0 = phi i32 [ %v2_10004c9c, %dec_label_pc_10004fa0 ], [ %v1_10004fd0, %dec_label_pc_10004fd0 ]
  %v1_10004fb4 = phi i32 [ 0, %dec_label_pc_10004fa0 ], [ %v1_10004fb419, %dec_label_pc_10004fd0 ]
  %v2_10004fb4 = add i32 %v1_10004fb4, %v0_10004fb4.pre
  %v3_10004fb4 = inttoptr i32 %v2_10004fb4 to i8*
  %v4_10004fb4 = load i8, i8* %v3_10004fb4, align 1
  %v1_10004fb8 = add i32 %v1_10004fb4, 1
  store i32 %v1_10004fb8, i32* %r11.global-to-local, align 4
  %v1_10004fbc = inttoptr i32 %v0_10004fd0 to i8*
  %v2_10004fbc = load i8, i8* %v1_10004fbc, align 1
  %v4_10004fc4 = icmp eq i8 %v2_10004fbc, %v4_10004fb4
  br i1 %v4_10004fc4, label %dec_label_pc_1000501c, label %dec_label_pc_10004fcc

dec_label_pc_10004fcc:                            ; preds = %dec_label_pc_10004fb4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004fd0

dec_label_pc_10004fd0:                            ; preds = %dec_label_pc_1000501c, %dec_label_pc_10004fcc
  %v1_10004fb419 = phi i32 [ %v1_10004fb8, %dec_label_pc_1000501c ], [ 0, %dec_label_pc_10004fcc ]
  %v1_10004fd0 = add i32 %v0_10004fd0, 1
  %v1_10004fd4 = add i32 %v0_10004fd4, -1
  %v2_10004fd4 = icmp eq i32 %v1_10004fd4, 0
  br i1 %v2_10004fd4, label %dec_label_pc_10004fd8, label %dec_label_pc_10004fb4

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10004fd0, %dec_label_pc_10004f94
  %v3_10004fd8 = load i32, i32* %stack_var_-8404, align 4
  %v2_10004fdc = icmp slt i32 %v3_10004f8862, %v3_10004fd8
  br i1 %v2_10004fdc, label %dec_label_pc_10004f7c.backedge, label %dec_label_pc_10004fe4

dec_label_pc_10004fe4:                            ; preds = %dec_label_pc_10004fd8
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10004f8c63, label %dec_label_pc_10004f7c.backedge, label %dec_label_pc_10004ff8.lr.ph

dec_label_pc_10004f7c.backedge:                   ; preds = %dec_label_pc_10004ff4.backedge, %dec_label_pc_10004fe4, %dec_label_pc_10004fd8
  %v0_10004f7c = load i32, i32* %r28.global-to-local, align 4
  store i32 268455820, i32* @lr, align 4
  %v3_10004f88 = call i32 @function_10008860(i32 %v0_10004f7c, i32 %v2_10004c9c, i32 4096)
  %tmp55 = icmp slt i32 %v3_10004f88, 1
  br i1 %tmp55, label %dec_label_pc_1000507c, label %dec_label_pc_10004f94

dec_label_pc_10004ff8.lr.ph:                      ; preds = %dec_label_pc_10004fe4
  %v0_10004ff8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004ff8

dec_label_pc_10004ff8:                            ; preds = %dec_label_pc_10004ff8.lr.ph, %dec_label_pc_10004ff4.backedge
  %v0_10004ff4 = phi i32 [ %v3_10004f8862, %dec_label_pc_10004ff8.lr.ph ], [ %v1_10004ff4, %dec_label_pc_10004ff4.backedge ]
  %storemerge.in = phi i32 [ %v2_10004c9c, %dec_label_pc_10004ff8.lr.ph ], [ %storemerge, %dec_label_pc_10004ff4.backedge ]
  %v1_10004ff8 = phi i32 [ 0, %dec_label_pc_10004ff8.lr.ph ], [ %v1_10004ff825, %dec_label_pc_10004ff4.backedge ]
  %v2_10004ff8 = add i32 %v1_10004ff8, %v0_10004ff8.pre
  %v3_10004ff8 = inttoptr i32 %v2_10004ff8 to i8*
  %v4_10004ff8 = load i8, i8* %v3_10004ff8, align 1
  %v1_10004ffc = add i32 %v1_10004ff8, 1
  store i32 %v1_10004ffc, i32* %r11.global-to-local, align 4
  %v1_10005000 = inttoptr i32 %storemerge.in to i8*
  %v2_10005000 = load i8, i8* %v1_10005000, align 1
  %v4_10005008 = icmp eq i8 %v2_10005000, %v4_10004ff8
  br i1 %v4_10005008, label %dec_label_pc_10005070, label %dec_label_pc_10005010

dec_label_pc_10005010:                            ; preds = %dec_label_pc_10004ff8
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004ff4.backedge

dec_label_pc_10004ff4.backedge:                   ; preds = %dec_label_pc_10005070, %dec_label_pc_10005010
  %v1_10004ff825 = phi i32 [ 0, %dec_label_pc_10005010 ], [ %v1_10004ffc, %dec_label_pc_10005070 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_10004ff4 = add i32 %v0_10004ff4, -1
  %v2_10004ff4 = icmp eq i32 %v1_10004ff4, 0
  br i1 %v2_10004ff4, label %dec_label_pc_10004f7c.backedge, label %dec_label_pc_10004ff8

dec_label_pc_1000501c:                            ; preds = %dec_label_pc_10004fb4
  %v4_10004fc0 = icmp eq i32 %v3_10004f94, %v1_10004fb8
  br i1 %v4_10004fc0, label %dec_label_pc_10005020, label %dec_label_pc_10004fd0

dec_label_pc_10005020:                            ; preds = %dec_label_pc_1000501c, %dec_label_pc_10005070
  store i32 ptrtoint ([3 x i8]* @global_var_10005028.54 to i32), i32* @lr, align 4
  %v1_10005024 = call i32 @function_10007864(i32 18)
  store i32 268455984, i32* @lr, align 4
  %v1_1000502c = call i32 @function_10007864(i32 19)
  store i32 268455992, i32* @lr, align 4
  %v0_10005034 = call i32 @function_10008628()
  %v0_10005038 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456004, i32* @lr, align 4
  %v2_10005040 = call i32 @function_10008748(i32 %v0_10005038, i32 9)
  br label %dec_label_pc_10005044

dec_label_pc_10005044:                            ; preds = %dec_label_pc_10004f30, %dec_label_pc_1000507c, %dec_label_pc_10005020
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004c94, i32* @r3, align 4
  store i32 268456016, i32* @lr, align 4
  %v0_1000504c = call i32 @function_10007f10()
  store i32 %v2_10004c98, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10005058 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005058, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005060.55 to i32), i32* @lr, align 4
  %v0_1000505c = call i32 @function_10007f10()
  store i32 268456040, i32* @lr, align 4
  %v1_10005064 = call i32 @function_10009e3c(i32 1)
  %v0_10005068 = load i32, i32* @r23, align 4
  store i32 %v0_10005068, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004d0c.backedge

dec_label_pc_10005070:                            ; preds = %dec_label_pc_10004ff8
  %v4_10005004 = icmp eq i32 %v3_10004fd8, %v1_10004ffc
  br i1 %v4_10005004, label %dec_label_pc_10005020, label %dec_label_pc_10004ff4.backedge

dec_label_pc_1000507c:                            ; preds = %dec_label_pc_10004f7c.backedge, %dec_label_pc_10004f4c
  store i32 ptrtoint ([3 x i8]* @global_var_10005084.56 to i32), i32* @lr, align 4
  %v1_10005080 = call i32 @function_10007864(i32 18)
  store i32 268456076, i32* @lr, align 4
  %v1_10005088 = call i32 @function_10007864(i32 19)
  store i32 268456084, i32* @lr, align 4
  %v0_10005090 = call i32 @function_10008628()
  br label %dec_label_pc_10005044

dec_label_pc_10005098:                            ; preds = %dec_label_pc_10004f0c
  %v0_10005098 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456100, i32* @lr, align 4
  %v2_100050a0 = call i32 @function_10008748(i32 %v0_10005098, i32 9)
  br label %dec_label_pc_10004f28

; uselistorder directives
  uselistorder i32 %v1_10004ff4, { 1, 0 }
  uselistorder i32 %v1_10004ffc, { 1, 0, 2 }
  uselistorder i32 %v1_10004ff8, { 1, 0 }
  uselistorder i32 %v3_10004f88, { 2, 1, 0 }
  uselistorder i32 %v1_10004fd4, { 1, 0 }
  uselistorder i32 %v1_10004fb4, { 1, 0 }
  uselistorder i32 %v3_10004f8862, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10004d10, { 1, 0 }
  uselistorder i32 %v2_10004d68, { 1, 0 }
  uselistorder i32 %v1_10004d24, { 1, 0 }
  uselistorder i32 %v2_10004c9c, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10004c10, { 1, 0, 2 }
  uselistorder i32 %v2_10004bec, { 1, 0, 2 }
  uselistorder i32 %v2_10004bcc, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b34, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8408, { 1, 0 }
  uselistorder i32* %stack_var_-8404, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 7 }
  uselistorder i32 268455820, { 1, 0 }
  uselistorder i32 (i32*)* @function_10008c84, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455188, { 1, 0 }
  uselistorder i32 (i32)* @function_10008b74, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100088a8, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005044, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005020, { 1, 0 }
  uselistorder label %dec_label_pc_10004ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10004fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10004f94, { 1, 0 }
  uselistorder label %dec_label_pc_10004f30, { 1, 0 }
  uselistorder label %dec_label_pc_10004f28, { 1, 0 }
  uselistorder label %dec_label_pc_10004d0c.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_10004e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d1c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
}

define i32 @function_100050a8() local_unnamed_addr {
dec_label_pc_100050a8:
  store i32 268456612, i32* @global_var_1001b728.57, align 4
  %v0_100050b8 = load i32, i32* @r3, align 4
  ret i32 %v0_100050b8
}

define i32 @function_100050bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100050bc:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_100050dc = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_100050ec = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_100050f8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_100050f8, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268456196, i32* @lr, align 4
  %v3_10005100 = call i32 @function_10009344(i32 2, i32 1, i32 0)
  %v3_10005104 = icmp eq i32 %v3_10005100, -1
  store i32 %v3_10005100, i32* @global_var_1001b720.58, align 4
  br i1 %v3_10005104, label %dec_label_pc_100051b4, label %dec_label_pc_10005120

dec_label_pc_10005120:                            ; preds = %dec_label_pc_100050bc
  %v2_10005108 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268456228, i32* @lr, align 4
  %v5_10005120 = call i32 @function_10009308(i32 %v3_10005100, i32 1, i32 2, i32 %v2_10005108)
  %v3_10005124 = load i32, i32* @global_var_1001b720.58, align 4
  store i32 3, i32* @r4, align 4
  store i32 268456252, i32* @lr, align 4
  %v2_10005138 = call i32 @function_10008540(i32 %v3_10005124)
  store i32 4, i32* @r4, align 4
  store i32 268456272, i32* @lr, align 4
  %v2_1000514c = call i32 @function_10008540(i32 %v3_10005124)
  %v3_10005150 = load i8, i8* @global_var_1001b5e0.59, align 1
  %v3_10005158 = icmp eq i8 %v3_10005150, 0
  br i1 %v3_10005158, label %dec_label_pc_100051d8, label %dec_label_pc_10005164

dec_label_pc_10005164:                            ; preds = %dec_label_pc_10005120
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10005178 = call i32 @function_10008d44()
  %v0_1000517c = load i32, i32* @r27, align 4
  %v2_1000517c = inttoptr i32 %v0_10005178 to i32*
  store i32 %v0_1000517c, i32* %v2_1000517c, align 4
  store i32 %v0_10005178, i32* @r29, align 4
  %v3_1000518c = load i32, i32* @global_var_1001b720.58, align 4
  store i32 268456340, i32* @lr, align 4
  %v3_10005190 = call i32 @function_10009110(i32 %v3_1000518c, i32 %v2_100050f8, i32 16)
  %v3_10005198 = icmp eq i32 %v3_10005190, -1
  br i1 %v3_10005198, label %dec_label_pc_10005220, label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_100051d8, %dec_label_pc_10005164
  %v3_100051ac = load i32, i32* @global_var_1001b720.58, align 4
  store i32 268456372, i32* @lr, align 4
  %v3_100051b0 = call i32 @function_100091e8(i32 %v3_100051ac, i32 1, i32 268566528)
  br label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_100050bc, %dec_label_pc_100051a4
  %v0_100051d4 = phi i32 [ -1, %dec_label_pc_100050bc ], [ %v3_100051b0, %dec_label_pc_100051a4 ]
  store i32 %v0_100050dc, i32* @r28, align 4
  store i32 %v0_100050ec, i32* @r31, align 4
  ret i32 %v0_100051d4

dec_label_pc_100051d8:                            ; preds = %dec_label_pc_10005120
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100051f4 = call i32 @function_10008d44()
  %v0_100051f8 = load i32, i32* @r27, align 4
  %v2_100051f8 = inttoptr i32 %v0_100051f4 to i32*
  store i32 %v0_100051f8, i32* %v2_100051f8, align 4
  store i32 %v0_100051f4, i32* @r29, align 4
  %v3_10005208 = load i32, i32* @global_var_1001b720.58, align 4
  store i32 268456464, i32* @lr, align 4
  %v3_1000520c = call i32 @function_10009110(i32 %v3_10005208, i32 %v2_100050f8, i32 16)
  %v3_10005214 = icmp eq i32 %v3_1000520c, -1
  br i1 %v3_10005214, label %dec_label_pc_10005220, label %dec_label_pc_100051a4

dec_label_pc_10005220:                            ; preds = %dec_label_pc_100051d8, %dec_label_pc_10005164
  %v0_10005220 = load i32, i32* @r29, align 4
  %v1_10005220 = inttoptr i32 %v0_10005220 to i32*
  %v2_10005220 = load i32, i32* %v1_10005220, align 4
  %v3_10005224 = load i32, i32* @global_var_1001b720.58, align 4
  store i32 %v3_10005224, i32* @r3, align 4
  %v3_10005228 = icmp eq i32 %v2_10005220, 99
  br i1 %v3_10005228, label %dec_label_pc_1000528c, label %dec_label_pc_10005230

dec_label_pc_10005230:                            ; preds = %dec_label_pc_1000528c, %dec_label_pc_10005220, %dec_label_pc_10005298
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000524c.60 to i32), i32* @lr, align 4
  %v0_10005248 = call i32 @function_10009144()
  store i32 268456532, i32* @lr, align 4
  %v1_10005250 = call i32 @function_10009e3c(i32 5)
  store i32 268456540, i32* @lr, align 4
  %v0_10005258 = call i32 @function_10008628()
  store i32 268456548, i32* @lr, align 4
  %v1_10005260 = call i32 @function_100044e8(i32 1926)
  store i32 268456552, i32* @lr, align 4
  %v1_10005264 = call i32 @function_100050bc(i32 %v1_10005260)
  store i32 %v0_100050dc, i32* @r28, align 4
  store i32 %v0_100050ec, i32* @r31, align 4
  ret i32 %v1_10005264

dec_label_pc_1000528c:                            ; preds = %dec_label_pc_10005220
  %v3_1000528c = load i8, i8* @global_var_1001b5e0.59, align 1
  %v3_10005290 = icmp eq i8 %v3_1000528c, 0
  br i1 %v3_10005290, label %dec_label_pc_10005230, label %dec_label_pc_10005298

dec_label_pc_10005298:                            ; preds = %dec_label_pc_1000528c
  %v0_1000529c = load i32, i32* @r27, align 4
  %v1_1000529c = trunc i32 %v0_1000529c to i8
  store i8 %v1_1000529c, i8* @global_var_1001b5e0.59, align 1
  br label %dec_label_pc_10005230

; uselistorder directives
  uselistorder i32 %v2_100050f8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_100044e8, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009110, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b5e0.59, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005230, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100051b4, { 1, 0 }
}

define i32 @function_100052a4() local_unnamed_addr {
dec_label_pc_100052a4:
  store i32 268456640, i32* @lr, align 4
  %v1_100052bc = call i32 @function_100078f0(i32 1)
  store i32 268456656, i32* @lr, align 4
  %v2_100052cc = call i32 @function_100090dc(i32 ptrtoint ([14 x i8]* @global_var_1000b028.62 to i32))
  store i32 %v2_100052cc, i32* @global_var_1001b824.63, align 4
  %v3_100052dc = call i32 @function_1000783c(i32 1, i32* null)
  %v4_100052dc = inttoptr i32 %v3_100052dc to i16*
  %v3_100052e0 = load i16, i16* %v4_100052dc, align 2
  store i16 %v3_100052e0, i16* bitcast (i32* @global_var_1001b822.64 to i16*), align 4
  store i32 268456688, i32* @lr, align 4
  %v1_100052ec = call i32 @function_10007864(i32 1)
  ret i32 %v1_100052ec

; uselistorder directives
  uselistorder i32 (i32)* @function_100090dc, { 2, 1, 0 }
}

define i32 @function_10005304(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005304:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %stack_var_-1592 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1604 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1596 = alloca i32, align 4
  %stack_var_-1608 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10005304 = load i32, i32* @lr, align 4
  store i32 %v0_10005304, i32* %r0.global-to-local, align 4
  %v0_1000530c = load i32, i32* @r31, align 4
  store i32 268456728, i32* @lr, align 4
  %v0_10005314 = call i32 @function_10008670()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005314, i32* @global_var_1001b758.65, align 4
  %tmp47 = icmp slt i32 %v0_10005314, 1
  br i1 %tmp47, label %dec_label_pc_1000533c, label %dec_label_pc_10005328

dec_label_pc_10005328:                            ; preds = %dec_label_pc_1000533c, %dec_label_pc_10005304
  store i32 %v0_10005304, i32* %r0.global-to-local, align 4
  store i32 %v0_1000530c, i32* @r31, align 4
  ret i32 %v0_10005314

dec_label_pc_1000533c:                            ; preds = %dec_label_pc_10005304
  %v3_1000533c = icmp eq i32 %v0_10005314, -1
  br i1 %v3_1000533c, label %dec_label_pc_10005328, label %dec_label_pc_10005344

dec_label_pc_10005344:                            ; preds = %dec_label_pc_1000533c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005354.66 to i32), i32* @lr, align 4
  %v1_10005350 = call i32 @function_100078f0(i32 23)
  store i32 268456796, i32* @lr, align 4
  %v1_10005358 = call i32 @function_100078f0(i32 24)
  %v3_10005364 = call i32 @function_1000783c(i32 23, i32* null)
  store i32 268456820, i32* @lr, align 4
  %v2_10005370 = call i32 @function_10008790(i32 %v3_10005364, i32 2)
  %v3_10005374 = icmp eq i32 %v2_10005370, -1
  store i32 %v2_10005370, i32* @r31, align 4
  br i1 %v3_10005374, label %dec_label_pc_100053bc, label %dec_label_pc_10005380

dec_label_pc_10005380:                            ; preds = %dec_label_pc_100053bc, %dec_label_pc_10005344
  %v0_10005384 = phi i32 [ %v2_100053d0, %dec_label_pc_100053bc ], [ %v2_10005370, %dec_label_pc_10005344 ]
  %v2_1000538c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268456856, i32* @lr, align 4
  %v3_10005394 = call i32 @function_10008458(i32 %v0_10005384, i32 -2147199228, i32 %v2_1000538c)
  br label %dec_label_pc_10005398

dec_label_pc_10005398:                            ; preds = %dec_label_pc_10005398, %dec_label_pc_10005380
  %v0_1000539c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100053b0.67 to i32), i32* @lr, align 4
  %v3_100053ac = call i32 @function_10008458(i32 %v0_1000539c, i32 -2147199227, i32 0)
  store i32 268456888, i32* @lr, align 4
  %v1_100053b4 = call i32 @function_10009e3c(i32 10)
  br label %dec_label_pc_10005398

dec_label_pc_100053bc:                            ; preds = %dec_label_pc_10005344
  %v3_100053c4 = call i32 @function_1000783c(i32 24, i32* null)
  store i32 268456916, i32* @lr, align 4
  %v2_100053d0 = call i32 @function_10008790(i32 %v3_100053c4, i32 2)
  %v3_100053d4 = icmp eq i32 %v2_100053d0, -1
  store i32 %v2_100053d0, i32* @r31, align 4
  br i1 %v3_100053d4, label %dec_label_pc_100053e0, label %dec_label_pc_10005380

dec_label_pc_100053e0:                            ; preds = %dec_label_pc_100053bc
  store i32 ptrtoint ([3 x i8]* @global_var_100053e8.68 to i32), i32* @lr, align 4
  %v1_100053e4 = call i32 @function_10007864(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_100053f0.69 to i32), i32* @lr, align 4
  %v1_100053ec = call i32 @function_10007864(i32 24)
  %v0_100053f4 = call i32 @function_10009db8()
  %v0_100053fc = load i32, i32* @lr, align 4
  %v0_10005400 = load i32, i32* @r29, align 4
  %v2_10005404 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10005404, i32* @r29, align 4
  %v0_10005408 = load i32, i32* @r28, align 4
  store i32 %v0_100053f4, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000541c = load i32, i32* %r17.global-to-local, align 4
  store i32 0, i32* %stack_var_-1596, align 4
  store i32 268566528, i32* %r17.global-to-local, align 4
  %v0_10005428 = load i32, i32* %r18.global-to-local, align 4
  %v2_1000542c = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_1000542c, i32* %r18.global-to-local, align 4
  %v0_10005430 = load i32, i32* %r19.global-to-local, align 4
  store i32 268566528, i32* %r19.global-to-local, align 4
  %v0_10005438 = load i32, i32* %r20.global-to-local, align 4
  store i32 268566528, i32* %r20.global-to-local, align 4
  %v0_10005440 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_10005448 = load i32, i32* @r14, align 4
  %v0_1000544c = load i32, i32* %r15.global-to-local, align 4
  %v0_10005450 = load i32, i32* %r16.global-to-local, align 4
  %v0_10005458 = load i32, i32* @r22, align 4
  %v0_1000545c = load i32, i32* @r23, align 4
  %v0_10005460 = load i32, i32* @r24, align 4
  %v0_10005464 = load i32, i32* @r25, align 4
  %v0_10005468 = load i32, i32* @r26, align 4
  %v0_1000546c = load i32, i32* @r27, align 4
  %v0_10005470 = load i32, i32* @r30, align 4
  store i32 268457080, i32* @lr, align 4
  %v1_10005474 = call i32 @function_100093c4(i32 %v2_10005404)
  store i32 %v2_10005404, i32* @r3, align 4
  store i32 268457092, i32* @lr, align 4
  %v2_10005480 = call i32 @function_10009378(i32 %v2_10005404, i32 2)
  store i32 268457108, i32* @lr, align 4
  %v3_10005490 = call i32 @function_10008980(i32 0, i32 %v2_10005404, i32 0)
  store i32 268457120, i32* @lr, align 4
  %v2_1000549c = call i32 @function_100093f0(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100054b0.70 to i32), i32* @lr, align 4
  %v2_100054ac = call i32 @function_100093f0(i32 5, i32 268456104)
  store i32 268457140, i32* @lr, align 4
  %v1_100054b0 = call i32 @function_1000816c(i32 %v2_100054ac)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001b824.63, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001b822.64 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100054b0, i32* @global_var_1001b748.16, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001b820.61 to i16*), align 4
  store i32 268457180, i32* @lr, align 4
  %v2_100054d8 = call i32 @function_1000797c(i32 %v1_100054b0, i32 -1334109607)
  store i32 268456612, i32* %r9.global-to-local, align 4
  store i32 268456612, i32* @global_var_1001b728.57, align 4
  store i32 ptrtoint (i32* @global_var_100054ec.71 to i32), i32* @lr, align 4
  %v1_100054e8 = call i32 @function_100050bc(i32 %v2_100054d8)
  store i32 268457200, i32* @lr, align 4
  %v1_100054ec = call i32 @function_10005b88(i32 %v1_100054e8)
  store i32 %v2_1000542c, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268457212, i32* @lr, align 4
  %v0_100054f8 = call i32 @function_10007f10()
  %v0_100054fc = load i32, i32* @r28, align 4
  %v3_100054fc = icmp eq i32 %v0_100054fc, 2
  br i1 %v3_100054fc, label %dec_label_pc_10005674, label %dec_label_pc_10005504

dec_label_pc_10005504:                            ; preds = %dec_label_pc_10005674, %dec_label_pc_100053e0, %dec_label_pc_10005684
  %v0_10005504 = call i32 @function_10005b38()
  %v2_10005508 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_10005508, i32* @r27, align 4
  store i32 %v0_10005504, i32* %r29.global-to-local, align 4
  %v0_10005510 = load i32, i32* @r31, align 4
  %v1_10005510 = inttoptr i32 %v0_10005510 to i32*
  %v2_10005510 = load i32, i32* %v1_10005510, align 4
  %v2_10005514 = ptrtoint i16* %stack_var_-1608 to i32
  store i32 %v2_10005514, i32* @r25, align 4
  store i32 0, i32* @r26, align 4
  store i32 268457248, i32* @lr, align 4
  %v1_1000551c = inttoptr i32 %v2_10005510 to i8*
  %v2_1000551c = call i32 @function_10007e68(i8* %v1_1000551c)
  store i32 %v2_1000551c, i32* %r28.global-to-local, align 4
  %v0_10005524 = load i32, i32* @r31, align 4
  %v1_10005524 = inttoptr i32 %v0_10005524 to i32*
  %v2_10005524 = load i32, i32* %v1_10005524, align 4
  %v1_10005528 = sub i32 20, %v2_1000551c
  store i32 %v1_10005528, i32* @r28, align 4
  store i32 268457264, i32* @lr, align 4
  %v1_1000552c = inttoptr i32 %v2_10005524 to i8*
  %v2_1000552c = call i32 @function_10007e68(i8* %v1_1000552c)
  %v0_10005530 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005530 = load i32, i32* @r28, align 4
  %v2_10005530 = urem i32 %v0_10005530, %v1_10005530
  %v2_10005534 = sub i32 %v0_10005530, %v2_10005530
  store i32 %v2_10005534, i32* %r0.global-to-local, align 4
  %v2_1000553c = add i32 %v2_10005530, %v2_1000552c
  %v0_10005548 = load i32, i32* @r25, align 4
  %v2_10005548 = add i32 %v0_10005548, %v2_1000553c
  store i32 %v2_10005548, i32* @r29, align 4
  store i32 268457296, i32* @lr, align 4
  %v2_1000554c = bitcast i32* %stack_var_-1584 to i8*
  %v3_1000554c = call i32 @function_10005bf8(i8* %v2_1000554c, i32 %v2_1000553c)
  %v0_10005550 = load i32, i32* @r31, align 4
  %v1_10005550 = inttoptr i32 %v0_10005550 to i32*
  %v2_10005550 = load i32, i32* %v1_10005550, align 4
  store i32 %v2_10005550, i32* @r3, align 4
  %v0_10005554 = load i32, i32* @r26, align 4
  %v1_10005554 = trunc i32 %v0_10005554 to i8
  %v2_10005554 = load i32, i32* @r29, align 4
  %v3_10005554 = add i32 %v2_10005554, 24
  %v4_10005554 = inttoptr i32 %v3_10005554 to i8*
  store i8 %v1_10005554, i8* %v4_10005554, align 1
  %v2_1000555c = inttoptr i32 %v2_10005550 to i8*
  %v3_1000555c = call i32 @function_10007e90(i8* %v2_1000555c, i32 %v2_10005508)
  store i32 32, i32* @r4, align 4
  store i32 %v2_10005508, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000556c.73 to i32), i32* @lr, align 4
  %v0_10005568 = call i32 @function_10007f10()
  %v0_1000556c = call i32 @function_10005b38()
  store i32 %v0_1000556c, i32* %r28.global-to-local, align 4
  %v0_10005574 = load i32, i32* @r31, align 4
  %v1_10005574 = inttoptr i32 %v0_10005574 to i32*
  %v2_10005574 = load i32, i32* %v1_10005574, align 4
  store i32 268457340, i32* @lr, align 4
  %v1_10005578 = inttoptr i32 %v2_10005574 to i8*
  %v2_10005578 = call i32 @function_10007e68(i8* %v1_10005578)
  store i32 %v2_10005578, i32* %r29.global-to-local, align 4
  %v0_10005580 = load i32, i32* @r31, align 4
  %v1_10005580 = inttoptr i32 %v0_10005580 to i32*
  %v2_10005580 = load i32, i32* %v1_10005580, align 4
  %v1_10005584 = sub i32 20, %v2_10005578
  store i32 %v1_10005584, i32* @r29, align 4
  store i32 268457356, i32* @lr, align 4
  %v1_10005588 = inttoptr i32 %v2_10005580 to i8*
  %v2_10005588 = call i32 @function_10007e68(i8* %v1_10005588)
  %v0_1000558c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000558c = load i32, i32* @r29, align 4
  %v2_1000558c = urem i32 %v0_1000558c, %v1_1000558c
  %v2_10005590 = sub i32 %v0_1000558c, %v2_1000558c
  store i32 %v2_10005590, i32* %r0.global-to-local, align 4
  %v2_10005598 = add i32 %v2_1000558c, %v2_10005588
  %v0_100055a4 = load i32, i32* @r25, align 4
  %v2_100055a4 = add i32 %v0_100055a4, %v2_10005598
  store i32 %v2_100055a4, i32* @r28, align 4
  store i32 268457388, i32* @lr, align 4
  %v3_100055a8 = call i32 @function_10005bf8(i8* %v2_1000554c, i32 %v2_10005598)
  %v0_100055ac = load i32, i32* @r26, align 4
  %v1_100055ac = trunc i32 %v0_100055ac to i8
  %v2_100055ac = load i32, i32* @r28, align 4
  %v3_100055ac = add i32 %v2_100055ac, 24
  %v4_100055ac = inttoptr i32 %v3_100055ac to i8*
  store i8 %v1_100055ac, i8* %v4_100055ac, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100055c0.74 to i32), i32* @lr, align 4
  %v2_100055bc = call i32 @function_10008818(i32 15, i32 %v2_10005508)
  store i32 268457416, i32* @lr, align 4
  %v1_100055c4 = call i32 @function_100078f0(i32 3)
  %v3_100055d0 = call i32 @function_1000783c(i32 3, i32* nonnull %stack_var_-1596)
  %v3_100055d4 = load i32, i32* %stack_var_-1596, align 4
  store i32 268457444, i32* @lr, align 4
  %v3_100055e0 = call i32 @function_10008a88(i32 1, i32 %v3_100055d0, i32 %v3_100055d4)
  store i32 ptrtoint ([3 x i8]* @global_var_100055f8.76 to i32), i32* @lr, align 4
  %v3_100055f4 = call i32 @function_10008a88(i32 1, i32 ptrtoint (i32* @global_var_1000b038.75 to i32), i32 1)
  store i32 268457472, i32* @lr, align 4
  %v1_100055fc = call i32 @function_10007864(i32 3)
  store i32 268457476, i32* @lr, align 4
  %v1_10005600 = call i32 @function_1000072c(i32 %v1_100055fc)
  store i32 268457480, i32* @lr, align 4
  %v1_10005604 = call i32 @function_10004aec(i32 %v1_10005600)
  store i32 ptrtoint (i32* @global_var_1000560c.77 to i32), i32* @lr, align 4
  %v1_10005608 = call i32 @function_10005304(i32 %v1_10005604)
  store i32 268457488, i32* @lr, align 4
  %v0_1000560c = call i32 @function_10008670()
  %tmp48 = icmp slt i32 %v0_1000560c, 1
  br i1 %tmp48, label %dec_label_pc_100056ac, label %dec_label_pc_10005618

dec_label_pc_10005618:                            ; preds = %dec_label_pc_10005504
  store i32 %v0_100053fc, i32* %r0.global-to-local, align 4
  store i32 %v0_10005448, i32* @r14, align 4
  store i32 %v0_1000544c, i32* %r15.global-to-local, align 4
  store i32 %v0_10005450, i32* %r16.global-to-local, align 4
  store i32 %v0_1000541c, i32* %r17.global-to-local, align 4
  store i32 %v0_10005428, i32* %r18.global-to-local, align 4
  store i32 %v0_10005430, i32* %r19.global-to-local, align 4
  store i32 %v0_10005438, i32* %r20.global-to-local, align 4
  store i32 %v0_10005458, i32* @r22, align 4
  store i32 %v0_1000545c, i32* @r23, align 4
  store i32 %v0_10005460, i32* @r24, align 4
  store i32 %v0_10005464, i32* @r25, align 4
  store i32 %v0_10005468, i32* @r26, align 4
  store i32 %v0_1000546c, i32* @r27, align 4
  store i32 %v0_10005408, i32* @r28, align 4
  store i32 %v0_10005400, i32* @r29, align 4
  store i32 %v0_10005470, i32* @r30, align 4
  store i32 %v0_10005440, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005674:                            ; preds = %dec_label_pc_100053e0
  %v0_10005674 = load i32, i32* @r31, align 4
  %v1_10005674 = add i32 %v0_10005674, 4
  %v2_10005674 = inttoptr i32 %v1_10005674 to i32*
  %v3_10005674 = load i32, i32* %v2_10005674, align 4
  store i32 268457596, i32* @lr, align 4
  %v1_10005678 = inttoptr i32 %v3_10005674 to i8*
  %v2_10005678 = call i32 @function_10007e68(i8* %v1_10005678)
  %v2_1000567c = icmp sgt i32 %v2_10005678, 31
  br i1 %v2_1000567c, label %dec_label_pc_10005504, label %dec_label_pc_10005684

dec_label_pc_10005684:                            ; preds = %dec_label_pc_10005674
  %v0_10005684 = load i32, i32* @r31, align 4
  %v1_10005684 = add i32 %v0_10005684, 4
  %v2_10005684 = inttoptr i32 %v1_10005684 to i32*
  %v3_10005684 = load i32, i32* %v2_10005684, align 4
  store i32 %v2_1000542c, i32* @r3, align 4
  %v2_1000568c = bitcast i32* %stack_var_-1552 to i8*
  %v3_1000568c = call i32 @function_10007e90(i8* %v2_1000568c, i32 %v3_10005684)
  %v0_10005690 = load i32, i32* @r31, align 4
  %v1_10005690 = add i32 %v0_10005690, 4
  %v2_10005690 = inttoptr i32 %v1_10005690 to i32*
  %v3_10005690 = load i32, i32* %v2_10005690, align 4
  store i32 %v3_10005690, i32* %r29.global-to-local, align 4
  store i32 268457628, i32* @lr, align 4
  %v1_10005698 = inttoptr i32 %v3_10005690 to i8*
  %v2_10005698 = call i32 @function_10007e68(i8* %v1_10005698)
  store i32 %v2_10005698, i32* @r4, align 4
  store i32 %v3_10005690, i32* @r3, align 4
  store i32 268457640, i32* @lr, align 4
  %v0_100056a4 = call i32 @function_10007f10()
  br label %dec_label_pc_10005504

dec_label_pc_100056ac:                            ; preds = %dec_label_pc_10005504
  store i32 ptrtoint ([3 x i8]* @global_var_100056b0.78 to i32), i32* @lr, align 4
  %v1_100056ac = call i32 @function_10008938(i32 %v0_1000560c)
  store i32 ptrtoint ([3 x i8]* @global_var_100056b8.79 to i32), i32* @lr, align 4
  %v0_100056b4 = call i32 @function_10008628()
  store i32 ptrtoint ([3 x i8]* @global_var_100056c0.80 to i32), i32* @lr, align 4
  %v0_100056bc = call i32 @function_10008628()
  store i32 ptrtoint (i32* @global_var_100056c8.81 to i32), i32* @lr, align 4
  %v0_100056c4 = call i32 @function_10008628()
  store i32 0, i32* @r24, align 4
  store i32 268457680, i32* @lr, align 4
  %v1_100056cc = call i32 @function_1000072c(i32 %v0_100056c4)
  %v2_100056d0 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_100056d0, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100056d8.82 to i32), i32* @lr, align 4
  %v1_100056d4 = call i32 @function_10004aec(i32 %v1_100056cc)
  %v2_100056d8 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_100056d8, i32* @r27, align 4
  store i32 268457696, i32* @lr, align 4
  %v1_100056dc = call i32 @function_10005304(i32 %v1_100056d4)
  store i32 268566528, i32* @r23, align 4
  store i32 268457704, i32* @lr, align 4
  %v1_100056e4 = call i32 @function_100060b0(i32 %v1_100056dc)
  store i32 268566528, i32* @r30, align 4
  %v2_100056f0 = ptrtoint i32* %stack_var_-1604 to i32
  store i32 %v2_100056f0, i32* %r15.global-to-local, align 4
  %v2_100056f4 = ptrtoint i32* %stack_var_-1600 to i32
  %v2_100056fc = ptrtoint i32* %stack_var_-1136 to i32
  store i32 %v2_100056fc, i32* %r16.global-to-local, align 4
  %v2_100057d0 = ptrtoint i32* %stack_var_-1592 to i32
  %v1_10005a5c = bitcast i32* %stack_var_-1552 to i8*
  br label %dec_label_pc_10005700

dec_label_pc_10005700:                            ; preds = %dec_label_pc_10005ac0, %dec_label_pc_10005af8, %dec_label_pc_10005ab4, %dec_label_pc_10005a58, %dec_label_pc_100058b0, %dec_label_pc_100058a0, %dec_label_pc_100057b8, %dec_label_pc_10005b2c, %dec_label_pc_10005ae4, %dec_label_pc_10005acc, %dec_label_pc_10005aa0, %dec_label_pc_10005a20, %dec_label_pc_10005948, %dec_label_pc_10005864, %dec_label_pc_100056ac
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000571049 = load i32, i32* @r28, align 4
  %v4_1000571051 = inttoptr i32 %v2_1000571049 to i32*
  store i32 0, i32* %v4_1000571051, align 4
  %v0_1000571452 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000571453 = add i32 %v0_1000571452, 4
  store i32 %v1_1000571453, i32* %r9.global-to-local, align 4
  %v0_1000571854 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000571855 = add i32 %v0_1000571854, -1
  store i32 %v1_1000571855, i32* %ctr.global-to-local, align 4
  %v2_1000571856 = icmp eq i32 %v1_1000571855, 0
  br i1 %v2_1000571856, label %dec_label_pc_1000571c, label %dec_label_pc_10005710.dec_label_pc_10005710_crit_edge

dec_label_pc_10005710.dec_label_pc_10005710_crit_edge: ; preds = %dec_label_pc_10005700, %dec_label_pc_10005710.dec_label_pc_10005710_crit_edge
  %v1_1000571457 = phi i32 [ %v1_10005714, %dec_label_pc_10005710.dec_label_pc_10005710_crit_edge ], [ %v1_1000571453, %dec_label_pc_10005700 ]
  %v0_10005710.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005710 = load i32, i32* @r28, align 4
  %v3_10005710 = add i32 %v2_10005710, %v1_1000571457
  %v4_10005710 = inttoptr i32 %v3_10005710 to i32*
  store i32 %v0_10005710.pre, i32* %v4_10005710, align 4
  %v0_10005714 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005714 = add i32 %v0_10005714, 4
  store i32 %v1_10005714, i32* %r9.global-to-local, align 4
  %v0_10005718 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005718 = add i32 %v0_10005718, -1
  store i32 %v1_10005718, i32* %ctr.global-to-local, align 4
  %v2_10005718 = icmp eq i32 %v1_10005718, 0
  br i1 %v2_10005718, label %dec_label_pc_1000571c, label %dec_label_pc_10005710.dec_label_pc_10005710_crit_edge

dec_label_pc_1000571c:                            ; preds = %dec_label_pc_10005710.dec_label_pc_10005710_crit_edge, %dec_label_pc_10005700
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000572c58 = load i32, i32* @r27, align 4
  %v4_1000572c60 = inttoptr i32 %v2_1000572c58 to i32*
  store i32 0, i32* %v4_1000572c60, align 4
  %v0_1000573061 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000573062 = add i32 %v0_1000573061, 4
  store i32 %v1_1000573062, i32* %r9.global-to-local, align 4
  %v0_1000573463 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000573464 = add i32 %v0_1000573463, -1
  store i32 %v1_1000573464, i32* %ctr.global-to-local, align 4
  %v2_1000573465 = icmp eq i32 %v1_1000573464, 0
  br i1 %v2_1000573465, label %dec_label_pc_10005738, label %dec_label_pc_1000572c.dec_label_pc_1000572c_crit_edge

dec_label_pc_1000572c.dec_label_pc_1000572c_crit_edge: ; preds = %dec_label_pc_1000571c, %dec_label_pc_1000572c.dec_label_pc_1000572c_crit_edge
  %v1_1000573066 = phi i32 [ %v1_10005730, %dec_label_pc_1000572c.dec_label_pc_1000572c_crit_edge ], [ %v1_1000573062, %dec_label_pc_1000571c ]
  %v0_1000572c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_1000572c = load i32, i32* @r27, align 4
  %v3_1000572c = add i32 %v2_1000572c, %v1_1000573066
  %v4_1000572c = inttoptr i32 %v3_1000572c to i32*
  store i32 %v0_1000572c.pre, i32* %v4_1000572c, align 4
  %v0_10005730 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005730 = add i32 %v0_10005730, 4
  store i32 %v1_10005730, i32* %r9.global-to-local, align 4
  %v0_10005734 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005734 = add i32 %v0_10005734, -1
  store i32 %v1_10005734, i32* %ctr.global-to-local, align 4
  %v2_10005734 = icmp eq i32 %v1_10005734, 0
  br i1 %v2_10005734, label %dec_label_pc_10005738, label %dec_label_pc_1000572c.dec_label_pc_1000572c_crit_edge

dec_label_pc_10005738:                            ; preds = %dec_label_pc_1000572c.dec_label_pc_1000572c_crit_edge, %dec_label_pc_1000571c
  %v3_10005738 = load i32, i32* @global_var_1001b720.58, align 4
  %v3_1000573c = icmp eq i32 %v3_10005738, -1
  br i1 %v3_1000573c, label %dec_label_pc_10005764, label %dec_label_pc_10005744

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005738
  %v1_10005744 = call i32 @__asm_rlwinm(i32 %v3_10005738, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000574c = load i32, i32* @r25, align 4
  %v2_1000574c = add i32 %v1_1000574c, %v1_10005744
  %v1_10005750 = urem i32 %v3_10005738, 32
  %v1_10005754 = add i32 %v2_1000574c, 88
  %v2_10005754 = inttoptr i32 %v1_10005754 to i32*
  %v3_10005754 = load i32, i32* %v2_10005754, align 4
  %v3_10005758 = shl i32 1, %v1_10005750
  store i32 %v3_10005758, i32* %r0.global-to-local, align 4
  %v2_1000575c = or i32 %v3_10005754, %v3_10005758
  store i32 %v2_1000575c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000575c, i32* %v2_10005754, align 4
  br label %dec_label_pc_10005764

dec_label_pc_10005764:                            ; preds = %dec_label_pc_10005738, %dec_label_pc_10005744
  %v3_10005764 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 %v3_10005764, i32* %r0.global-to-local, align 4
  %v3_1000576c = icmp eq i32 %v3_10005764, -1
  br i1 %v3_1000576c, label %dec_label_pc_10005960, label %dec_label_pc_10005774

dec_label_pc_10005774:                            ; preds = %dec_label_pc_10005960, %dec_label_pc_10005764, %dec_label_pc_100059b8
  %v3_10005878 = phi i32 [ -1, %dec_label_pc_10005960 ], [ %v3_10005764, %dec_label_pc_10005764 ], [ %v3_10005878.pre, %dec_label_pc_100059b8 ]
  %v3_10005774 = load i8, i8* bitcast (i16* @global_var_1001b75c.84 to i8*), align 2
  %v3_10005778 = icmp eq i8 %v3_10005774, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005880 = call i32 @__asm_rlwinm(i32 %v3_10005878, i32 29, i32 3, i32 29)
  %v1_10005884 = urem i32 %v3_10005878, 32
  %v1_10005888 = load i32, i32* @r25, align 4
  %v2_10005888 = add i32 %v1_10005888, %v1_10005880
  %v0_1000588c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000588c = shl i32 %v0_1000588c, %v1_10005884
  store i32 %v3_1000588c, i32* %r0.global-to-local, align 4
  br i1 %v3_10005778, label %dec_label_pc_10005878, label %dec_label_pc_10005780

dec_label_pc_10005780:                            ; preds = %dec_label_pc_10005774
  %v1_10005798 = add i32 %v2_10005888, 216
  %v2_10005798 = inttoptr i32 %v1_10005798 to i32*
  %v3_10005798 = load i32, i32* %v2_10005798, align 4
  %v2_1000579c = or i32 %v3_10005798, %v3_1000588c
  store i32 %v2_1000579c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000579c, i32* %v2_10005798, align 4
  br label %dec_label_pc_100057a4

dec_label_pc_100057a4:                            ; preds = %dec_label_pc_10005878, %dec_label_pc_10005780
  %v3_100057a4 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 %v3_100057a4, i32* %r0.global-to-local, align 4
  %v3_100057a8 = load i32, i32* @global_var_1001b720.58, align 4
  %v2_100057ac = icmp slt i32 %v3_100057a8, %v3_100057a4
  br i1 %v2_100057ac, label %dec_label_pc_100057b4, label %dec_label_pc_100057b8

dec_label_pc_100057b4:                            ; preds = %dec_label_pc_100057a4
  br label %dec_label_pc_100057b8

dec_label_pc_100057b8:                            ; preds = %dec_label_pc_100057a4, %dec_label_pc_100057b4
  %v0_100057c0 = phi i32 [ %v3_100057a8, %dec_label_pc_100057a4 ], [ %v3_100057a4, %dec_label_pc_100057b4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100057c0 = add i32 %v0_100057c0, 1
  store i32 10, i32* %stack_var_-1592, align 4
  store i32 268457952, i32* @lr, align 4
  %v5_100057dc = call i32 @function_100088f0(i32 %v1_100057c0, i32 %v2_100056d0, i32 %v2_100056d8, i32 0, i32 %v2_100057d0)
  %v6_100057dc = trunc i32 %v5_100057dc to i16
  %v4_100057e0 = icmp eq i16 %v6_100057dc, -1
  br i1 %v4_100057e0, label %dec_label_pc_10005700, label %dec_label_pc_100057e8

dec_label_pc_100057e8:                            ; preds = %dec_label_pc_100057b8
  %v4_100057e8 = icmp eq i16 %v6_100057dc, 0
  br i1 %v4_100057e8, label %dec_label_pc_100057f0, label %dec_label_pc_1000581c

dec_label_pc_100057f0:                            ; preds = %dec_label_pc_100057e8
  %v0_100057f4 = load i32, i32* @r24, align 4
  store i16 0, i16* %stack_var_-1608, align 2
  %v2_10005804 = srem i32 %v0_100057f4, 6
  %v1_10005808 = sub i32 %v0_100057f4, %v2_10005804
  store i32 %v1_10005808, i32* %r9.global-to-local, align 4
  store i32 %v2_10005804, i32* %r0.global-to-local, align 4
  %v1_10005810 = add i32 %v0_100057f4, 1
  store i32 %v1_10005810, i32* @r24, align 4
  %v3_10005814 = icmp eq i32 %v2_10005804, 0
  br i1 %v3_10005814, label %dec_label_pc_100059d4, label %dec_label_pc_1000581c

dec_label_pc_1000581c:                            ; preds = %dec_label_pc_100057e8, %dec_label_pc_100057f0, %dec_label_pc_100059d4
  %v3_1000581c = load i8, i8* bitcast (i16* @global_var_1001b75c.84 to i8*), align 2
  %v4_1000581c = zext i8 %v3_1000581c to i32
  store i32 %v4_1000581c, i32* @r29, align 4
  %v3_10005820 = icmp eq i8 %v3_1000581c, 0
  %v3_100058a0 = load i32, i32* @global_var_1001b724.83, align 4
  br i1 %v3_10005820, label %dec_label_pc_100058a0, label %dec_label_pc_10005828

dec_label_pc_10005828:                            ; preds = %dec_label_pc_1000581c
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v1_10005830 = call i32 @__asm_rlwinm(i32 %v3_100058a0, i32 29, i32 3, i32 29)
  %v1_10005834 = urem i32 %v3_100058a0, 32
  %v1_10005838 = load i32, i32* @r25, align 4
  %v2_10005838 = add i32 %v1_10005838, %v1_10005830
  store i32 %v2_10005838, i32* %r9.global-to-local, align 4
  %v1_1000583c = add i32 %v2_10005838, 216
  %v2_1000583c = inttoptr i32 %v1_1000583c to i32*
  %v3_1000583c = load i32, i32* %v2_1000583c, align 4
  %v3_10005840 = lshr i32 %v3_1000583c, %v1_10005834
  store i32 %v3_10005840, i32* %r0.global-to-local, align 4
  %v1_10005848 = urem i32 %v3_10005840, 2
  %v3_10005848 = icmp eq i32 %v1_10005848, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001b75c.84 to i8*), align 2
  br i1 %v3_10005848, label %dec_label_pc_10005858, label %dec_label_pc_100059f0

dec_label_pc_10005858:                            ; preds = %dec_label_pc_10005828
  %v3_10005858 = icmp eq i32 %v3_100058a0, -1
  br i1 %v3_10005858, label %dec_label_pc_10005864, label %dec_label_pc_10005860

dec_label_pc_10005860:                            ; preds = %dec_label_pc_10005858
  store i32 ptrtoint (i32* @global_var_10005864.85 to i32), i32* @lr, align 4
  %v0_10005860 = call i32 @function_10008628()
  br label %dec_label_pc_10005864

dec_label_pc_10005864:                            ; preds = %dec_label_pc_10005858, %dec_label_pc_10005860
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b724.83, align 4
  store i32 268458100, i32* @lr, align 4
  %v1_10005870 = call i32 @function_10009e3c(i32 1)
  br label %dec_label_pc_10005700

dec_label_pc_10005878:                            ; preds = %dec_label_pc_10005774
  %v1_10005890 = add i32 %v2_10005888, 88
  %v2_10005890 = inttoptr i32 %v1_10005890 to i32*
  %v3_10005890 = load i32, i32* %v2_10005890, align 4
  %v2_10005894 = or i32 %v3_10005890, %v3_1000588c
  store i32 %v2_10005894, i32* %r9.global-to-local, align 4
  store i32 %v2_10005894, i32* %v2_10005890, align 4
  br label %dec_label_pc_100057a4

dec_label_pc_100058a0:                            ; preds = %dec_label_pc_1000581c
  store i32 268566528, i32* @r31, align 4
  %v3_100058a8 = icmp eq i32 %v3_100058a0, -1
  br i1 %v3_100058a8, label %dec_label_pc_10005700, label %dec_label_pc_100058b0

dec_label_pc_100058b0:                            ; preds = %dec_label_pc_100058a0
  %v1_100058b0 = call i32 @__asm_rlwinm(i32 %v3_100058a0, i32 29, i32 3, i32 29)
  %v1_100058b4 = urem i32 %v3_100058a0, 32
  %v1_100058b8 = load i32, i32* @r25, align 4
  %v2_100058b8 = add i32 %v1_100058b8, %v1_100058b0
  store i32 %v2_100058b8, i32* %r9.global-to-local, align 4
  %v1_100058bc = add i32 %v2_100058b8, 88
  %v2_100058bc = inttoptr i32 %v1_100058bc to i32*
  %v3_100058bc = load i32, i32* %v2_100058bc, align 4
  %v3_100058c0 = lshr i32 %v3_100058bc, %v1_100058b4
  store i32 %v3_100058c0, i32* %r0.global-to-local, align 4
  %v1_100058c4 = urem i32 %v3_100058c0, 2
  store i32 %v1_100058c4, i32* %r9.global-to-local, align 4
  %v3_100058c4 = icmp eq i32 %v1_100058c4, 0
  br i1 %v3_100058c4, label %dec_label_pc_10005700, label %dec_label_pc_100058cc

dec_label_pc_100058cc:                            ; preds = %dec_label_pc_100058b0
  %v0_100058cc = load i32, i32* @r29, align 4
  %v6_100058cc = trunc i32 %v0_100058cc to i16
  store i16 %v6_100058cc, i16* %stack_var_-1608, align 2
  %v0_100058d0 = call i32 @function_10008d44()
  %v0_100058d4 = load i32, i32* @r29, align 4
  %v2_100058d4 = inttoptr i32 %v0_100058d0 to i32*
  store i32 %v0_100058d4, i32* %v2_100058d4, align 4
  store i32 %v0_100058d0, i32* @r26, align 4
  %v3_100058e4 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 268458224, i32* @lr, align 4
  %v4_100058ec = call i32 @function_10009218(i32 %v3_100058e4, i32 %v2_10005514, i32 2, i32 16386)
  %v3_100058f0 = icmp eq i32 %v4_100058ec, -1
  br i1 %v3_100058f0, label %dec_label_pc_10005ab4, label %dec_label_pc_100058f8

dec_label_pc_100058f8:                            ; preds = %dec_label_pc_100058cc
  %v3_100058f8 = icmp eq i32 %v4_100058ec, 0
  br i1 %v3_100058f8, label %dec_label_pc_10005938, label %dec_label_pc_10005900

dec_label_pc_10005900:                            ; preds = %dec_label_pc_100058f8
  %v3_10005900 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005900 = sext i16 %v3_10005900 to i32
  %v4_10005904 = icmp eq i16 %v3_10005900, 0
  br i1 %v4_10005904, label %dec_label_pc_10005acc, label %dec_label_pc_1000590c

dec_label_pc_1000590c:                            ; preds = %dec_label_pc_10005900
  %v3_1000590c = icmp ugt i16 %v3_10005900, 1024
  br i1 %v3_1000590c, label %dec_label_pc_10005ae4, label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %dec_label_pc_1000590c
  %v0_10005914 = load i32, i32* @r29, align 4
  %v1_10005914 = load i32, i32* @r26, align 4
  %v2_10005914 = inttoptr i32 %v1_10005914 to i32*
  store i32 %v0_10005914, i32* %v2_10005914, align 4
  %v3_10005920 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 268458280, i32* @lr, align 4
  %v5_10005924 = call i32 @function_10009218(i32 %v3_10005920, i32 %v2_100056fc, i32 %v4_10005900, i32 16386)
  %v3_10005928 = icmp eq i32 %v5_10005924, -1
  br i1 %v3_10005928, label %dec_label_pc_10005ab4, label %dec_label_pc_10005930

dec_label_pc_10005930:                            ; preds = %dec_label_pc_10005914
  %v3_10005930 = icmp eq i32 %v5_10005924, 0
  br i1 %v3_10005930, label %dec_label_pc_10005938, label %dec_label_pc_10005af8

dec_label_pc_10005938:                            ; preds = %dec_label_pc_10005ac0, %dec_label_pc_10005930, %dec_label_pc_100058f8
  %v3_10005938 = load i32, i32* @global_var_1001b724.83, align 4
  %v3_1000593c = icmp eq i32 %v3_10005938, -1
  br i1 %v3_1000593c, label %dec_label_pc_10005948, label %dec_label_pc_10005944

dec_label_pc_10005944:                            ; preds = %dec_label_pc_10005938
  store i32 ptrtoint (i32* @global_var_10005948.86 to i32), i32* @lr, align 4
  %v0_10005944 = call i32 @function_10008628()
  br label %dec_label_pc_10005948

dec_label_pc_10005948:                            ; preds = %dec_label_pc_10005938, %dec_label_pc_10005944
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b724.83, align 4
  store i32 268458332, i32* @lr, align 4
  %v1_10005958 = call i32 @function_10009e3c(i32 1)
  br label %dec_label_pc_10005700

dec_label_pc_10005960:                            ; preds = %dec_label_pc_10005764
  store i32 268458352, i32* @lr, align 4
  %v3_1000596c = call i32 @function_10009344(i32 2, i32 1, i32 0)
  %v3_10005970 = icmp eq i32 %v3_1000596c, -1
  store i32 %v3_1000596c, i32* %r29.global-to-local, align 4
  store i32 %v3_1000596c, i32* @global_var_1001b724.83, align 4
  br i1 %v3_10005970, label %dec_label_pc_10005774, label %dec_label_pc_10005980

dec_label_pc_10005980:                            ; preds = %dec_label_pc_10005960
  store i32 3, i32* @r4, align 4
  store i32 268458384, i32* @lr, align 4
  %v1_1000598c = call i32 @function_10008540(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005998 = load i32, i32* %r29.global-to-local, align 4
  store i32 268458404, i32* @lr, align 4
  %v2_100059a0 = call i32 @function_10008540(i32 %v0_10005998)
  %v3_100059a4 = load i32, i32* @global_var_1001b728.57, align 4
  store i32 %v3_100059a4, i32* %r0.global-to-local, align 4
  %v3_100059a8 = icmp eq i32 %v3_100059a4, 0
  br i1 %v3_100059a8, label %dec_label_pc_100059b8, label %dec_label_pc_100059b0

dec_label_pc_100059b0:                            ; preds = %dec_label_pc_10005980
  store i32 %v3_100059a4, i32* %ctr.global-to-local, align 4
  store i32 268458424, i32* @lr, align 4
  %v2_100059b4 = call i32 @function_1000816c(i32 %v2_100059a0)
  br label %dec_label_pc_100059b8

dec_label_pc_100059b8:                            ; preds = %dec_label_pc_10005980, %dec_label_pc_100059b0
  %v3_100059b8 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 %v3_100059b8, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001b75c.84 to i8*), align 2
  store i32 268458448, i32* @lr, align 4
  %v0_100059cc = call i32 @function_10009144()
  %v3_10005878.pre = load i32, i32* @global_var_1001b724.83, align 4
  br label %dec_label_pc_10005774

dec_label_pc_100059d4:                            ; preds = %dec_label_pc_100057f0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100059dc = load i32, i32* @global_var_1001b724.83, align 4
  store i32 268458476, i32* @lr, align 4
  %v4_100059e8 = call i32 @function_10009290(i32 %v3_100059dc, i32 %v2_10005514, i32 2, i32 16384)
  br label %dec_label_pc_1000581c

dec_label_pc_100059f0:                            ; preds = %dec_label_pc_10005828
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1604, align 4
  store i32 4, i32* %stack_var_-1600, align 4
  store i32 268458516, i32* @lr, align 4
  %v5_10005a10 = call i32 @function_100091ac(i32 1, i32 4, i32 %v2_100056f0, i32 %v2_100056f4, i32 4)
  %v3_10005a14 = load i32, i32* %stack_var_-1604, align 4
  store i32 %v3_10005a14, i32* %r0.global-to-local, align 4
  %v3_10005a18 = icmp eq i32 %v3_10005a14, 0
  br i1 %v3_10005a18, label %dec_label_pc_10005a58, label %dec_label_pc_10005a20

dec_label_pc_10005a20:                            ; preds = %dec_label_pc_100059f0
  store i32 ptrtoint (i32* @global_var_10005a28.87 to i32), i32* @lr, align 4
  %v0_10005a24 = call i32 @function_10008628()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b724.83, align 4
  %v0_10005a30 = call i32 @function_10005b38()
  %v1_10005a30 = sext i32 %v0_10005a30 to i64
  %v5_10005a3c = mul nuw nsw i64 %v1_10005a30, 3435973837
  %v1_10005a402 = udiv i64 %v5_10005a3c, 34359738368
  %v1_10005a40 = trunc i64 %v1_10005a402 to i32
  %v1_10005a44 = mul i32 %v1_10005a40, 10
  store i32 %v1_10005a44, i32* %r0.global-to-local, align 4
  %v3_10005a48 = sub i32 %v0_10005a30, %v1_10005a44
  %v1_10005a4c = add i32 %v3_10005a48, 1
  store i32 268458580, i32* @lr, align 4
  %v1_10005a50 = call i32 @function_10009e3c(i32 %v1_10005a4c)
  br label %dec_label_pc_10005700

dec_label_pc_10005a58:                            ; preds = %dec_label_pc_100059f0
  store i32 268458592, i32* @lr, align 4
  %v2_10005a5c = call i32 @function_10007e68(i8* %v1_10005a5c)
  %v3_10005a5c = trunc i32 %v2_10005a5c to i8
  %v7_10005a60 = sext i8 %v3_10005a5c to i16
  store i16 %v7_10005a60, i16* %stack_var_-1608, align 2
  store i32 268458600, i32* @lr, align 4
  %v2_10005a64 = call i32 @function_1000816c(i32 %v2_10005a5c)
  store i32 %v2_10005a64, i32* @global_var_1001b748.16, align 4
  %v3_10005a70 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 268458624, i32* @lr, align 4
  %v4_10005a7c = call i32 @function_10009290(i32 %v3_10005a70, i32 ptrtoint (i32* @global_var_1000b03c.89 to i32), i32 4, i32 16384)
  %v3_10005a80 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 268458644, i32* @lr, align 4
  %v4_10005a90 = call i32 @function_10009290(i32 %v3_10005a80, i32 %v2_10005514, i32 1, i32 16384)
  %v3_10005a94 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005a98 = icmp eq i16 %v3_10005a94, 0
  br i1 %v4_10005a98, label %dec_label_pc_10005700, label %dec_label_pc_10005aa0

dec_label_pc_10005aa0:                            ; preds = %dec_label_pc_10005a58
  %v4_10005a94 = sext i16 %v3_10005a94 to i32
  %v3_10005aa0 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 268458672, i32* @lr, align 4
  %v5_10005aac = call i32 @function_10009290(i32 %v3_10005aa0, i32 %v2_1000542c, i32 %v4_10005a94, i32 16384)
  br label %dec_label_pc_10005700

dec_label_pc_10005ab4:                            ; preds = %dec_label_pc_10005914, %dec_label_pc_100058cc
  %v0_10005ab4 = load i32, i32* @r26, align 4
  %v1_10005ab4 = inttoptr i32 %v0_10005ab4 to i32*
  %v2_10005ab4 = load i32, i32* %v1_10005ab4, align 4
  %v3_10005ab8 = icmp eq i32 %v2_10005ab4, 11
  br i1 %v3_10005ab8, label %dec_label_pc_10005700, label %dec_label_pc_10005ac0

dec_label_pc_10005ac0:                            ; preds = %dec_label_pc_10005ab4
  %v3_10005ac0 = icmp eq i32 %v2_10005ab4, 4
  br i1 %v3_10005ac0, label %dec_label_pc_10005700, label %dec_label_pc_10005938

dec_label_pc_10005acc:                            ; preds = %dec_label_pc_10005900
  %v3_10005acc = load i32, i32* @global_var_1001b724.83, align 4
  store i32 268458720, i32* @lr, align 4
  %v4_10005adc = call i32 @function_10009218(i32 %v3_10005acc, i32 %v2_10005514, i32 2, i32 16384)
  br label %dec_label_pc_10005700

dec_label_pc_10005ae4:                            ; preds = %dec_label_pc_1000590c
  store i32 ptrtoint (i32* @global_var_10005aec.90 to i32), i32* @lr, align 4
  %v0_10005ae8 = call i32 @function_10008628()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b724.83, align 4
  br label %dec_label_pc_10005700

dec_label_pc_10005af8:                            ; preds = %dec_label_pc_10005930
  %v3_10005af8 = load i32, i32* @global_var_1001b724.83, align 4
  store i32 268458764, i32* @lr, align 4
  %v4_10005b08 = call i32 @function_10009218(i32 %v3_10005af8, i32 %v2_10005514, i32 2, i32 16384)
  %v3_10005b0c = load i32, i32* @global_var_1001b724.83, align 4
  %v3_10005b10 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005b10 = sext i16 %v3_10005b10 to i32
  store i32 268458784, i32* @lr, align 4
  %v5_10005b1c = call i32 @function_10009218(i32 %v3_10005b0c, i32 %v2_100056fc, i32 %v4_10005b10, i32 16384)
  %v3_10005b20 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005b24 = icmp eq i16 %v3_10005b20, 0
  br i1 %v4_10005b24, label %dec_label_pc_10005700, label %dec_label_pc_10005b2c

dec_label_pc_10005b2c:                            ; preds = %dec_label_pc_10005af8
  %v4_10005b20 = sext i16 %v3_10005b20 to i32
  store i32 268458804, i32* @lr, align 4
  %v3_10005b30 = call i32 @function_10000394(i32 %v2_100056fc, i32 %v4_10005b20)
  br label %dec_label_pc_10005700

; uselistorder directives
  uselistorder i16 %v3_10005b20, { 1, 0 }
  uselistorder i16 %v3_10005a94, { 1, 0 }
  uselistorder i32 %v3_1000596c, { 1, 0, 2 }
  uselistorder i32 %v1_100058c4, { 1, 0 }
  uselistorder i32 %v3_100058a0, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v2_10005804, { 1, 0, 2 }
  uselistorder i32 %v0_100057f4, { 2, 0, 1 }
  uselistorder i32 %v2_10005888, { 1, 0 }
  uselistorder i32 %v1_10005734, { 1, 0 }
  uselistorder i32 %v1_10005730, { 1, 0 }
  uselistorder i32 %v1_10005718, { 1, 0 }
  uselistorder i32 %v1_10005714, { 1, 0 }
  uselistorder i32 %v2_100056fc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005598, { 1, 0 }
  uselistorder i32 %v2_1000553c, { 1, 0 }
  uselistorder i32 %v2_10005514, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v1_100054b0, { 1, 0 }
  uselistorder i32 %v2_10005404, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_100053d0, { 1, 2, 0 }
  uselistorder i32 %v0_10005314, { 2, 3, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1608, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1596, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 24, 13, 14, 15, 21, 22, 16, 17, 18, 19, 20 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 9, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009290, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i16* @global_var_1001b75c.84 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001b724.83, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32 (i32)* @function_10005304, { 1, 0 }
  uselistorder i32 (i32)* @function_10004aec, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008a88, { 1, 0 }
  uselistorder i32 (i32)* @function_100050bc, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_100093f0, { 1, 0 }
  uselistorder i32 (i32)* @function_10009e3c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100059b8, { 1, 0 }
  uselistorder label %dec_label_pc_10005948, { 1, 0 }
  uselistorder label %dec_label_pc_10005864, { 1, 0 }
  uselistorder label %dec_label_pc_1000581c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100057b8, { 1, 0 }
  uselistorder label %dec_label_pc_10005774, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005764, { 1, 0 }
  uselistorder label %dec_label_pc_1000572c.dec_label_pc_1000572c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005710.dec_label_pc_10005710_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005700, { 7, 1, 8, 9, 0, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_10005504, { 2, 0, 1 }
}

define i32 @function_10005b38() local_unnamed_addr {
dec_label_pc_10005b38:
  %v3_10005b40 = load i32, i32* @global_var_1001b7dc.91, align 4
  %v3_10005b48 = load i32, i32* @global_var_1001b7d0.92, align 4
  %v1_10005b50 = udiv i32 %v3_10005b40, 524288
  %v3_10005b54 = load i32, i32* @global_var_1001b7d8.93, align 4
  %v1_10005b58 = mul i32 %v3_10005b48, 2048
  %v2_10005b5c = xor i32 %v1_10005b50, %v3_10005b40
  %v2_10005b60 = xor i32 %v1_10005b58, %v3_10005b48
  %v3_10005b64 = load i32, i32* @global_var_1001b7d4.94, align 4
  %v2_10005b68 = xor i32 %v2_10005b5c, %v2_10005b60
  %v1_10005b6c = udiv i32 %v2_10005b60, 256
  %v2_10005b70 = xor i32 %v2_10005b68, %v1_10005b6c
  store i32 %v3_10005b64, i32* @global_var_1001b7d0.92, align 4
  store i32 %v3_10005b54, i32* @global_var_1001b7d4.94, align 4
  store i32 %v3_10005b40, i32* @global_var_1001b7d8.93, align 4
  store i32 %v2_10005b70, i32* @global_var_1001b7dc.91, align 4
  ret i32 %v2_10005b70

; uselistorder directives
  uselistorder i32 %v2_10005b70, { 1, 0 }
  uselistorder i32 %v3_10005b48, { 1, 0 }
  uselistorder i32 %v3_10005b40, { 2, 1, 0 }
}

define i32 @function_10005b88(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005b88:
  store i32 268458920, i32* @lr, align 4
  %v0_10005ba4 = call i32 @function_100089f8()
  store i32 %v0_10005ba4, i32* @global_var_1001b7d0.92, align 4
  store i32 268458932, i32* @lr, align 4
  %v0_10005bb0 = call i32 @function_100086b8()
  store i32 268458940, i32* @lr, align 4
  %v0_10005bb8 = call i32 @function_10008700()
  %v2_10005bbc = xor i32 %v0_10005bb0, %v0_10005bb8
  store i32 %v2_10005bbc, i32* @global_var_1001b7d4.94, align 4
  store i32 268458952, i32* @lr, align 4
  %v1_10005bc4 = call i32 @function_10008d50(i32 %v0_10005bb8)
  %v3_10005bc8 = load i32, i32* @global_var_1001b7d4.94, align 4
  %v2_10005bd8 = xor i32 %v3_10005bc8, %v1_10005bc4
  store i32 %v2_10005bd8, i32* @global_var_1001b7dc.91, align 4
  store i32 %v1_10005bc4, i32* @global_var_1001b7d8.93, align 4
  ret i32 %v1_10005bc4

; uselistorder directives
  uselistorder i32 %v1_10005bc4, { 2, 1, 0 }
  uselistorder i32 %v0_10005bb8, { 1, 0 }
  uselistorder i32 ()* @function_10008700, { 2, 1, 0 }
}

define i32 @function_10005bf8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005bf8:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10005c14 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268459064, i32* @lr, align 4
  %v1_10005c34 = call i32 @function_100078f0(i32 28)
  %v3_10005c40 = call i32 @function_1000783c(i32 28, i32* null)
  %v2_10005c4c = inttoptr i32 %v3_10005c40 to i8*
  %v3_10005c4c = call i32 @function_10008ebc(i32 %v2_10005c14, i8* %v2_10005c4c)
  %v3_10005c50 = icmp eq i32 %arg2, 0
  br i1 %v3_10005c50, label %dec_label_pc_10005cd4, label %dec_label_pc_10005c58

dec_label_pc_10005c58:                            ; preds = %dec_label_pc_10005bf8
  %v1_10005c58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005c58 = add i32 %v1_10005c58, %arg2
  store i32 %v2_10005c58, i32* %r26.global-to-local, align 4
  %v1_10005cac = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005c6c

dec_label_pc_10005c6c:                            ; preds = %dec_label_pc_10005c6c, %dec_label_pc_10005c58
  %v3_10005c6c = load i32, i32* @global_var_1001b7dc.91, align 4
  %v3_10005c74 = load i32, i32* @global_var_1001b7d0.92, align 4
  %v1_10005c78 = udiv i32 %v3_10005c6c, 524288
  %v3_10005c7c = load i32, i32* @global_var_1001b7d8.93, align 4
  %v1_10005c80 = mul i32 %v3_10005c74, 2048
  %v2_10005c84 = xor i32 %v1_10005c78, %v3_10005c6c
  %v2_10005c88 = xor i32 %v1_10005c80, %v3_10005c74
  %v3_10005c8c = load i32, i32* @global_var_1001b7d4.94, align 4
  %v2_10005c90 = xor i32 %v2_10005c84, %v2_10005c88
  %v1_10005c94 = udiv i32 %v2_10005c88, 256
  %v2_10005c98 = xor i32 %v2_10005c90, %v1_10005c94
  store i32 %v2_10005c98, i32* %r29.global-to-local, align 4
  store i32 %v3_10005c8c, i32* @global_var_1001b7d0.92, align 4
  store i32 %v2_10005c98, i32* @global_var_1001b7dc.91, align 4
  store i32 %v3_10005c7c, i32* @global_var_1001b7d4.94, align 4
  store i32 %v3_10005c6c, i32* @global_var_1001b7d8.93, align 4
  store i32 268459184, i32* @lr, align 4
  %v2_10005cac = call i32 @function_10007e68(i8* %v1_10005cac)
  %v0_10005cb0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005cb0 = urem i32 %v0_10005cb0, %v2_10005cac
  store i32 %v2_10005cb0, i32* %r29.global-to-local, align 4
  %v0_10005cbc = load i32, i32* @r1, align 4
  %v2_10005cbc = add i32 %v0_10005cbc, %v2_10005cb0
  %v1_10005cc0 = add i32 %v2_10005cbc, 8
  %v2_10005cc0 = inttoptr i32 %v1_10005cc0 to i8*
  %v3_10005cc0 = load i8, i8* %v2_10005cc0, align 1
  %v2_10005cc4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005cc4 = inttoptr i32 %v2_10005cc4 to i8*
  store i8 %v3_10005cc0, i8* %v3_10005cc4, align 1
  %v0_10005cc8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005cc8 = add i32 %v0_10005cc8, 1
  store i32 %v1_10005cc8, i32* %r31.global-to-local, align 4
  %v1_10005ccc = load i32, i32* %r26.global-to-local, align 4
  %v4_10005ccc = icmp eq i32 %v1_10005cc8, %v1_10005ccc
  br i1 %v4_10005ccc, label %dec_label_pc_10005cd4, label %dec_label_pc_10005c6c

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_10005c6c, %dec_label_pc_10005bf8
  store i32 268459228, i32* @lr, align 4
  %v1_10005cd8 = call i32 @function_10007864(i32 28)
  ret i32 %v1_10005cd8

; uselistorder directives
  uselistorder i32 %v3_10005c74, { 1, 0 }
  uselistorder i32 %v3_10005c6c, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10007864, { 2, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_1000783c, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32 (i32)* @function_100078f0, { 3, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10005d0c() local_unnamed_addr {
dec_label_pc_10005d0c:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10005d0c = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10005d0c, 1
  br i1 %tmp19, label %dec_label_pc_10005d0c.dec_label_pc_10005dc0_crit_edge, label %dec_label_pc_10005d24

dec_label_pc_10005d0c.dec_label_pc_10005dc0_crit_edge: ; preds = %dec_label_pc_10005d0c
  %v0_10005dd0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005dc0

dec_label_pc_10005d24:                            ; preds = %dec_label_pc_10005d0c
  %v3_10005d34 = load i32, i32* @global_var_1001b7dc.91, align 4
  store i32 %v3_10005d34, i32* %r7.global-to-local, align 4
  %v3_10005d38 = load i32, i32* @global_var_1001b7d8.93, align 4
  store i32 %v3_10005d38, i32* %r5.global-to-local, align 4
  %v3_10005d3c = load i32, i32* @global_var_1001b7d4.94, align 4
  store i32 %v3_10005d3c, i32* %r6.global-to-local, align 4
  %v3_10005d40 = load i32, i32* @global_var_1001b7d0.92, align 4
  br label %dec_label_pc_10005d6c

dec_label_pc_10005d48:                            ; preds = %dec_label_pc_10005d6c
  %v1_10005d48 = load i32, i32* @r3, align 4
  %v2_10005d48 = inttoptr i32 %v1_10005d48 to i32*
  store i32 %v2_10005d90, i32* %v2_10005d48, align 4
  %v0_10005d4c = load i32, i32* @r4, align 4
  %v1_10005d4c = add i32 %v0_10005d4c, -4
  store i32 %v1_10005d4c, i32* @r4, align 4
  %v0_10005d50 = load i32, i32* @r3, align 4
  %v1_10005d50 = add i32 %v0_10005d50, 4
  br label %dec_label_pc_10005d54

dec_label_pc_10005d54:                            ; preds = %dec_label_pc_10005da4, %dec_label_pc_10005d48
  %v0_10005d54 = phi i32 [ %v0_10005d54.pr, %dec_label_pc_10005da4 ], [ %v1_10005d4c, %dec_label_pc_10005d48 ]
  %storemerge = phi i32 [ %v1_10005da8, %dec_label_pc_10005da4 ], [ %v1_10005d50, %dec_label_pc_10005d48 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10005d58 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10005d54, 1
  br i1 %tmp20, label %dec_label_pc_10005db0, label %dec_label_pc_10005d60

dec_label_pc_10005d60:                            ; preds = %dec_label_pc_10005d54
  %v0_10005d60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005d60, i32* %r6.global-to-local, align 4
  %v0_10005d64 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005d64, i32* %r5.global-to-local, align 4
  %v0_10005d68 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005d68, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10005d6c

dec_label_pc_10005d6c:                            ; preds = %dec_label_pc_10005d24, %dec_label_pc_10005d60
  %v0_10005e0c = phi i32 [ %v3_10005d3c, %dec_label_pc_10005d24 ], [ %v0_10005d60, %dec_label_pc_10005d60 ]
  %v0_10005df0 = phi i32 [ %v3_10005d38, %dec_label_pc_10005d24 ], [ %v0_10005d64, %dec_label_pc_10005d60 ]
  %v0_10005df4 = phi i32 [ %v3_10005d34, %dec_label_pc_10005d24 ], [ %v0_10005d68, %dec_label_pc_10005d60 ]
  %v0_10005dd4 = phi i32 [ %v3_10005d40, %dec_label_pc_10005d24 ], [ %v0_10005d58, %dec_label_pc_10005d60 ]
  %v0_10005d9c = phi i32 [ %v0_10005d0c, %dec_label_pc_10005d24 ], [ %v0_10005d54, %dec_label_pc_10005d60 ]
  %v2_10005d6c = icmp sgt i32 %v0_10005d9c, 3
  %v1_10005d70 = mul i32 %v0_10005dd4, 2048
  %v1_10005d74 = udiv i32 %v0_10005df4, 524288
  %v2_10005d78 = xor i32 %v1_10005d70, %v0_10005dd4
  %v2_10005d7c = xor i32 %v1_10005d74, %v0_10005df4
  %v2_10005d84 = xor i32 %v2_10005d7c, %v2_10005d78
  %v1_10005d88 = udiv i32 %v2_10005d78, 256
  %v2_10005d90 = xor i32 %v2_10005d84, %v1_10005d88
  store i32 %v2_10005d90, i32* %r0.global-to-local, align 4
  br i1 %v2_10005d6c, label %dec_label_pc_10005d48, label %dec_label_pc_10005d98

dec_label_pc_10005d98:                            ; preds = %dec_label_pc_10005d6c
  %v3_10005d80 = icmp eq i32 %v0_10005d9c, 1
  store i32 %v2_10005d90, i32* %r0.global-to-local, align 4
  %v1_10005d9c = add i32 %v0_10005d9c, -2
  store i32 %v1_10005d9c, i32* @r4, align 4
  br i1 %v3_10005d80, label %dec_label_pc_10005dd4, label %dec_label_pc_10005da4

dec_label_pc_10005da4:                            ; preds = %dec_label_pc_10005d98
  %v1_10005da4 = trunc i32 %v2_10005d90 to i16
  %v2_10005da4 = load i32, i32* @r3, align 4
  %v3_10005da4 = inttoptr i32 %v2_10005da4 to i16*
  store i16 %v1_10005da4, i16* %v3_10005da4, align 2
  %v0_10005da8 = load i32, i32* @r3, align 4
  %v1_10005da8 = add i32 %v0_10005da8, 2
  %v0_10005d54.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005d54

dec_label_pc_10005db0:                            ; preds = %dec_label_pc_10005d54
  %v0_10005db0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005db0, i32* @global_var_1001b7dc.91, align 4
  %v0_10005db4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005db4, i32* @global_var_1001b7d8.93, align 4
  %v0_10005db8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005db8, i32* @global_var_1001b7d4.94, align 4
  store i32 %v0_10005d58, i32* @global_var_1001b7d0.92, align 4
  br label %dec_label_pc_10005dc0

dec_label_pc_10005dc0:                            ; preds = %dec_label_pc_10005d0c.dec_label_pc_10005dc0_crit_edge, %dec_label_pc_10005db0
  %v0_10005dd0 = phi i32 [ %v0_10005dd0.pre, %dec_label_pc_10005d0c.dec_label_pc_10005dc0_crit_edge ], [ %storemerge, %dec_label_pc_10005db0 ]
  ret i32 %v0_10005dd0

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005d98
  store i32 %v2_10005d90, i32* %r0.global-to-local, align 4
  store i32 %v0_10005df0, i32* @global_var_1001b7d4.94, align 4
  store i32 %v0_10005df4, i32* @global_var_1001b7d8.93, align 4
  store i32 %v2_10005d90, i32* @global_var_1001b7dc.91, align 4
  store i32 %v0_10005e0c, i32* @global_var_1001b7d0.92, align 4
  %v1_10005e10 = trunc i32 %v2_10005d90 to i8
  %v2_10005e10 = load i32, i32* @r3, align 4
  %v3_10005e10 = inttoptr i32 %v2_10005e10 to i8*
  store i8 %v1_10005e10, i8* %v3_10005e10, align 1
  %v0_10005e14 = load i32, i32* @r3, align 4
  ret i32 %v0_10005e14

; uselistorder directives
  uselistorder i32 %v2_10005d90, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005dd4, { 1, 0 }
  uselistorder i32 %v0_10005df4, { 1, 2, 0 }
  uselistorder i32 %v0_10005d0c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10005dc0, { 1, 0 }
  uselistorder label %dec_label_pc_10005d6c, { 1, 0 }
}

define i32 @function_10005e18() local_unnamed_addr {
dec_label_pc_10005e18:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005e20 = load i32, i32* @r31, align 4
  %v0_10005e24 = load i32, i32* @r3, align 4
  store i32 %v0_10005e24, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10005e34 = add i32 %v0_10005e24, 4
  %v2_10005e34 = inttoptr i32 %v1_10005e34 to i32*
  %v3_10005e34 = load i32, i32* %v2_10005e34, align 4
  %v3_10005e3c = icmp eq i32 %v3_10005e34, -1
  br i1 %v3_10005e3c, label %dec_label_pc_10005e54, label %dec_label_pc_10005e50

dec_label_pc_10005e50:                            ; preds = %dec_label_pc_10005e18
  store i32 268459604, i32* @lr, align 4
  %v0_10005e50 = call i32 @function_10008628()
  br label %dec_label_pc_10005e54

dec_label_pc_10005e54:                            ; preds = %dec_label_pc_10005e18, %dec_label_pc_10005e50
  store i32 268459620, i32* @lr, align 4
  %v3_10005e60 = call i32 @function_10009344(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10005e6c = load i32, i32* @r31, align 4
  %v1_10005e6c = add i32 %v0_10005e6c, 28
  store i32 %v1_10005e6c, i32* @r3, align 4
  %v3_10005e70 = icmp eq i32 %v3_10005e60, -1
  %v2_10005e74 = add i32 %v0_10005e6c, 4
  %v3_10005e74 = inttoptr i32 %v2_10005e74 to i32*
  store i32 %v3_10005e60, i32* %v3_10005e74, align 4
  br i1 %v3_10005e70, label %dec_label_pc_10005e54.dec_label_pc_10005eec_crit_edge, label %dec_label_pc_10005e7c

dec_label_pc_10005e54.dec_label_pc_10005eec_crit_edge: ; preds = %dec_label_pc_10005e54
  %v0_10005f00.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005eec

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005e54
  %v0_10005e7c = load i32, i32* %r29.global-to-local, align 4
  %v1_10005e7c = load i32, i32* @r31, align 4
  %v2_10005e7c = add i32 %v1_10005e7c, 24
  %v3_10005e7c = inttoptr i32 %v2_10005e7c to i32*
  store i32 %v0_10005e7c, i32* %v3_10005e7c, align 4
  store i32 268459652, i32* @lr, align 4
  %v0_10005e80 = call i32 @function_10007f10()
  %v0_10005e84 = load i32, i32* @r31, align 4
  %v1_10005e84 = add i32 %v0_10005e84, 4
  %v2_10005e84 = inttoptr i32 %v1_10005e84 to i32*
  %v3_10005e84 = load i32, i32* %v2_10005e84, align 4
  store i32 %v3_10005e84, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268459676, i32* @lr, align 4
  %v2_10005e98 = call i32 @function_10008540(i32 %v3_10005e84)
  store i32 4, i32* @r4, align 4
  store i32 268459696, i32* @lr, align 4
  %v2_10005eac = call i32 @function_10008540(i32 %v3_10005e84)
  %v3_10005eb4 = load i32, i32* @global_var_1001b76c.95, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10005ebc = load i32, i32* @r31, align 4
  %v2_10005ec4 = add i32 %v0_10005ebc, 8
  %v3_10005ec4 = inttoptr i32 %v2_10005ec4 to i32*
  store i32 %v3_10005eb4, i32* %v3_10005ec4, align 4
  %v0_10005ecc = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ecc = load i32, i32* @r31, align 4
  %v2_10005ecc = add i32 %v1_10005ecc, 12
  %v3_10005ecc = inttoptr i32 %v2_10005ecc to i32*
  store i32 %v0_10005ecc, i32* %v3_10005ecc, align 4
  %v0_10005ed4 = load i32, i32* @r31, align 4
  %v1_10005ed4 = add i32 %v0_10005ed4, 4
  %v2_10005ed4 = inttoptr i32 %v1_10005ed4 to i32*
  %v3_10005ed4 = load i32, i32* %v2_10005ed4, align 4
  store i32 %v3_10005ed4, i32* @r3, align 4
  %v1_10005ed8 = add i32 %v0_10005ed4, 16
  %v2_10005ed8 = inttoptr i32 %v1_10005ed8 to i32*
  %v3_10005ed8 = load i32, i32* %v2_10005ed8, align 4
  store i32 %v3_10005ed8, i32* %r9.global-to-local, align 4
  store i32 268459756, i32* @lr, align 4
  %v0_10005ee8 = call i32 @function_10009144()
  br label %dec_label_pc_10005eec

dec_label_pc_10005eec:                            ; preds = %dec_label_pc_10005e54.dec_label_pc_10005eec_crit_edge, %dec_label_pc_10005e7c
  %v0_10005f00 = phi i32 [ %v0_10005f00.pre, %dec_label_pc_10005e54.dec_label_pc_10005eec_crit_edge ], [ %v0_10005ee8, %dec_label_pc_10005e7c ]
  store i32 %v0_10005e20, i32* @r31, align 4
  ret i32 %v0_10005f00

; uselistorder directives
  uselistorder i32 ()* @function_10007f10, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10005eec, { 1, 0 }
  uselistorder label %dec_label_pc_10005e54, { 1, 0 }
}

define i32 @function_10005f04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005f04:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005f08 = load i32, i32* @lr, align 4
  store i32 %v0_10005f08, i32* %r0.global-to-local, align 4
  %v3_10005f14 = load i32, i32* @global_var_1001b760.96, align 4
  %v1_10005f20 = mul i32 %v3_10005f14, 16
  store i32 %v1_10005f20, i32* %r9.global-to-local, align 4
  %v0_10005f24 = load i32, i32* @r28, align 4
  %v3_10005f2c = load i32, i32* @global_var_1001b764.97, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10005f38 = add i32 %v1_10005f20, 16
  %v0_10005f50 = load i32, i32* @r29, align 4
  %v0_10005f54 = load i32, i32* @r30, align 4
  store i32 268459872, i32* @lr, align 4
  %v3_10005f5c = call i32 @function_10009810(i32 %v3_10005f2c, i32 %v1_10005f38, i32 %v1_10005f20)
  store i32 %v3_10005f5c, i32* %r25.global-to-local, align 4
  %v0_10005f64 = load i32, i32* @r28, align 4
  store i32 %v3_10005f5c, i32* @global_var_1001b764.97, align 4
  %v3_10005f6c = load i32, i32* @global_var_1001b760.96, align 4
  store i32 %v3_10005f6c, i32* %r24.global-to-local, align 4
  store i32 268459892, i32* @lr, align 4
  %v1_10005f70 = inttoptr i32 %v0_10005f64 to i8*
  %v2_10005f70 = call i32 @function_10007e68(i8* %v1_10005f70)
  %sext = mul i32 %v2_10005f70, 16777216
  %v1_10005f74 = sdiv i32 %sext, 16777216
  %v2_10005f74 = add nsw i32 %v1_10005f74, 1
  store i32 %v2_10005f74, i32* @r29, align 4
  store i32 %v1_10005f74, i32* @r30, align 4
  store i32 %v2_10005f74, i32* @r3, align 4
  store i32 268459908, i32* @lr, align 4
  %v0_10005f80 = call i32 @function_10009548()
  %v0_10005f84 = load i32, i32* @r28, align 4
  %v0_10005f88 = load i32, i32* @r29, align 4
  store i32 %v0_10005f80, i32* %r31.global-to-local, align 4
  store i32 268459924, i32* @lr, align 4
  %v3_10005f90 = call i32 @function_10007eec(i32 %v0_10005f84, i32 %v0_10005f88, i32 %v0_10005f88)
  %v0_10005f94 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10005f94, 1
  %extract.t6 = trunc i32 %v0_10005f94 to i8
  br i1 %tmp21, label %dec_label_pc_10005fb8, label %dec_label_pc_10005f9c

dec_label_pc_10005f9c:                            ; preds = %dec_label_pc_10005f04
  store i32 %v0_10005f94, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005fa4

dec_label_pc_10005fa4:                            ; preds = %dec_label_pc_10005fa4, %dec_label_pc_10005f9c
  %v1_10005fac = phi i32 [ %v1_10005fb0, %dec_label_pc_10005fa4 ], [ 0, %dec_label_pc_10005f9c ]
  %v1_10005fa4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005fa4 = add i32 %v1_10005fa4, %v1_10005fac
  %v3_10005fa4 = inttoptr i32 %v2_10005fa4 to i8*
  %v4_10005fa4 = load i8, i8* %v3_10005fa4, align 1
  %v5_10005fa4 = zext i8 %v4_10005fa4 to i32
  %v1_10005fa8 = xor i32 %v5_10005fa4, 84
  store i32 %v1_10005fa8, i32* %r0.global-to-local, align 4
  %v3_10005fac = trunc i32 %v1_10005fa8 to i8
  store i8 %v3_10005fac, i8* %v3_10005fa4, align 1
  %v0_10005fb0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005fb0 = add i32 %v0_10005fb0, 1
  store i32 %v1_10005fb0, i32* %r9.global-to-local, align 4
  %v0_10005fb4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005fb4 = add i32 %v0_10005fb4, -1
  store i32 %v1_10005fb4, i32* %ctr.global-to-local, align 4
  %v2_10005fb4 = icmp eq i32 %v1_10005fb4, 0
  br i1 %v2_10005fb4, label %dec_label_pc_10005fb8.loopexit, label %dec_label_pc_10005fa4

dec_label_pc_10005fb8.loopexit:                   ; preds = %dec_label_pc_10005fa4
  %v0_10005fd0.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10005fd0.pre to i8
  br label %dec_label_pc_10005fb8

dec_label_pc_10005fb8:                            ; preds = %dec_label_pc_10005fb8.loopexit, %dec_label_pc_10005f04
  %v0_10005fd0.off0 = phi i8 [ %extract.t, %dec_label_pc_10005fb8.loopexit ], [ %extract.t6, %dec_label_pc_10005f04 ]
  %v3_10005fb8 = load i32, i32* @global_var_1001b760.96, align 4
  %v0_10005fbc = load i32, i32* %r23.global-to-local, align 4
  %v3_10005fc0 = load i32, i32* @global_var_1001b764.97, align 4
  %v1_10005fc4 = mul i32 %v3_10005fb8, 16
  %v2_10005fc8 = add i32 %v3_10005fc0, %v1_10005fc4
  store i32 %v2_10005fc8, i32* %r9.global-to-local, align 4
  %v0_10005fcc = load i32, i32* %r24.global-to-local, align 4
  %v1_10005fcc = mul i32 %v0_10005fcc, 16
  store i32 %v1_10005fcc, i32* %r0.global-to-local, align 4
  %v3_10005fd0 = add i32 %v2_10005fc8, 12
  %v4_10005fd0 = inttoptr i32 %v3_10005fd0 to i8*
  store i8 %v0_10005fd0.off0, i8* %v4_10005fd0, align 1
  %v0_10005fd4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005fd4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005fd4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005fd4 = add i32 %v2_10005fd4, %v1_10005fd4
  %v4_10005fd4 = inttoptr i32 %v3_10005fd4 to i32*
  store i32 %v0_10005fd4, i32* %v4_10005fd4, align 4
  %v3_10005fd8 = load i32, i32* @global_var_1001b760.96, align 4
  store i32 %v3_10005fd8, i32* @r30, align 4
  %v3_10005fdc = load i32, i32* @global_var_1001b764.97, align 4
  store i32 %v3_10005fdc, i32* %r25.global-to-local, align 4
  store i32 268460004, i32* @lr, align 4
  %v1_10005fe0 = inttoptr i32 %v0_10005fbc to i8*
  %v2_10005fe0 = call i32 @function_10007e68(i8* %v1_10005fe0)
  %sext1 = mul i32 %v2_10005fe0, 16777216
  %v1_10005fe4 = sdiv i32 %sext1, 16777216
  %v2_10005fe4 = add nsw i32 %v1_10005fe4, 1
  store i32 %v2_10005fe4, i32* @r29, align 4
  store i32 %v1_10005fe4, i32* @r28, align 4
  store i32 %v2_10005fe4, i32* @r3, align 4
  store i32 268460020, i32* @lr, align 4
  %v0_10005ff0 = call i32 @function_10009548()
  %v0_10005ff4 = load i32, i32* %r23.global-to-local, align 4
  %v0_10005ff8 = load i32, i32* @r29, align 4
  store i32 %v0_10005ff0, i32* %r31.global-to-local, align 4
  store i32 268460036, i32* @lr, align 4
  %v3_10006000 = call i32 @function_10007eec(i32 %v0_10005ff4, i32 %v0_10005ff8, i32 %v0_10005ff8)
  %v0_10006004 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10006004, 1
  %extract.t8 = trunc i32 %v0_10006004 to i8
  br i1 %tmp22, label %dec_label_pc_10006028, label %dec_label_pc_1000600c

dec_label_pc_1000600c:                            ; preds = %dec_label_pc_10005fb8
  store i32 %v0_10006004, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006014

dec_label_pc_10006014:                            ; preds = %dec_label_pc_10006014, %dec_label_pc_1000600c
  %v1_1000601c = phi i32 [ %v1_10006020, %dec_label_pc_10006014 ], [ 0, %dec_label_pc_1000600c ]
  %v1_10006014 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006014 = add i32 %v1_10006014, %v1_1000601c
  %v3_10006014 = inttoptr i32 %v2_10006014 to i8*
  %v4_10006014 = load i8, i8* %v3_10006014, align 1
  %v5_10006014 = zext i8 %v4_10006014 to i32
  %v1_10006018 = xor i32 %v5_10006014, 84
  store i32 %v1_10006018, i32* %r0.global-to-local, align 4
  %v3_1000601c = trunc i32 %v1_10006018 to i8
  store i8 %v3_1000601c, i8* %v3_10006014, align 1
  %v0_10006020 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006020 = add i32 %v0_10006020, 1
  store i32 %v1_10006020, i32* %r9.global-to-local, align 4
  %v0_10006024 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006024 = add i32 %v0_10006024, -1
  store i32 %v1_10006024, i32* %ctr.global-to-local, align 4
  %v2_10006024 = icmp eq i32 %v1_10006024, 0
  br i1 %v2_10006024, label %dec_label_pc_10006028.loopexit, label %dec_label_pc_10006014

dec_label_pc_10006028.loopexit:                   ; preds = %dec_label_pc_10006014
  %v0_1000603c.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_1000603c.pre to i8
  br label %dec_label_pc_10006028

dec_label_pc_10006028:                            ; preds = %dec_label_pc_10006028.loopexit, %dec_label_pc_10005fb8
  %v0_1000603c.off0 = phi i8 [ %extract.t7, %dec_label_pc_10006028.loopexit ], [ %extract.t8, %dec_label_pc_10005fb8 ]
  %v3_10006028 = load i32, i32* @global_var_1001b760.96, align 4
  %v3_10006030 = load i32, i32* @global_var_1001b764.97, align 4
  %v1_10006034 = mul i32 %v3_10006028, 16
  %v2_10006038 = or i32 %v1_10006034, 13
  %v3_1000603c = add i32 %v2_10006038, %v3_10006030
  %v4_1000603c = inttoptr i32 %v3_1000603c to i8*
  store i8 %v0_1000603c.off0, i8* %v4_1000603c, align 1
  %v0_10006040 = load i32, i32* @r30, align 4
  %v1_10006040 = mul i32 %v0_10006040, 16
  %v1_10006044 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006044 = add i32 %v1_10006044, %v1_10006040
  store i32 %v2_10006044, i32* %r9.global-to-local, align 4
  %v3_10006048 = load i32, i32* @global_var_1001b760.96, align 4
  %v3_1000604c = load i32, i32* @global_var_1001b764.97, align 4
  %v1_10006050 = mul i32 %v3_10006048, 16
  %v3_10006054 = load i16, i16* @global_var_1001b768.98, align 2
  %v4_10006054 = zext i16 %v3_10006054 to i32
  store i32 %v4_10006054, i32* %r7.global-to-local, align 4
  %v2_10006058 = add i32 %v3_1000604c, %v1_10006050
  store i32 %v2_10006058, i32* %r11.global-to-local, align 4
  store i32 %v0_10005f08, i32* %r0.global-to-local, align 4
  %v1_10006060 = add i32 %v3_10006048, 1
  store i32 %v1_10006060, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001b768.98 to i32), i32* %r8.global-to-local, align 4
  %v0_10006068 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006068 = add i32 %v2_10006044, 4
  %v3_10006068 = inttoptr i32 %v2_10006068 to i32*
  store i32 %v0_10006068, i32* %v3_10006068, align 4
  %v0_10006070 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006070, i32* @global_var_1001b760.96, align 4
  store i32 %v0_10005f24, i32* @r28, align 4
  store i32 %v0_10005f50, i32* @r29, align 4
  store i32 %v0_10005f54, i32* @r30, align 4
  %v0_100060a0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100060a0 = trunc i32 %v0_100060a0 to i16
  %v2_100060a0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100060a0 = add i32 %v2_100060a0, 10
  %v4_100060a0 = inttoptr i32 %v3_100060a0 to i16*
  store i16 %v1_100060a0, i16* %v4_100060a0, align 2
  %v0_100060a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100060a4 = trunc i32 %v0_100060a4 to i16
  %v2_100060a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100060a4 = add i32 %v2_100060a4, 8
  %v4_100060a4 = inttoptr i32 %v3_100060a4 to i16*
  store i16 %v1_100060a4, i16* %v4_100060a4, align 2
  %v0_100060a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100060a8 = trunc i32 %v0_100060a8 to i16
  store i16 %v1_100060a8, i16* @global_var_1001b768.98, align 2
  ret i32 %v3_10006000

; uselistorder directives
  uselistorder i32 %v3_10006048, { 1, 0 }
  uselistorder i32 %v1_10006024, { 1, 0 }
  uselistorder i32 %v1_10006020, { 1, 0 }
  uselistorder i32 %v0_10006004, { 1, 0, 2 }
  uselistorder i32 %v1_10005fb4, { 1, 0 }
  uselistorder i32 %v1_10005fb0, { 1, 0 }
  uselistorder i32 %v0_10005f94, { 1, 0, 2 }
  uselistorder i32 %v1_10005f20, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r31.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 (i8*)* @function_10007e68, { 23, 0, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22 }
  uselistorder i32 (i32, i32, i32)* @function_10009810, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100060b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100060b0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %tmp56 = call i8 @__decompiler_undefined_function_2()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_100060b0 = load i32, i32* @lr, align 4
  store i32 %v0_100060b0, i32* %r0.global-to-local, align 4
  %v0_100060b8 = call i32 @__asm_mfcr()
  store i32 %v0_100060b8, i32* %r3.global-to-local, align 4
  %v0_100060e4 = load i32, i32* @r24, align 4
  %v0_100060e8 = load i32, i32* @r25, align 4
  %v0_100060f0 = load i32, i32* @r27, align 4
  %v0_100060f4 = load i32, i32* @r28, align 4
  %v0_100060f8 = load i32, i32* @r29, align 4
  %v0_100060fc = load i32, i32* @r30, align 4
  %v0_10006100 = load i32, i32* @r31, align 4
  %v0_10006104 = load i32, i32* %r0.global-to-local, align 4
  store i32 268460304, i32* @lr, align 4
  %v0_1000610c = call i32 @function_10008670()
  store i32 %v0_1000610c, i32* %r3.global-to-local, align 4
  %v1_10006110 = icmp slt i32 %v0_1000610c, 0
  %v3_10006110 = icmp eq i32 %v0_1000610c, 0
  store i1 %v1_10006110, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006110, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_1000610c, i32* @global_var_1001b778.99, align 4
  %tmp98 = icmp slt i32 %v0_1000610c, 1
  br i1 %tmp98, label %dec_label_pc_10006180, label %dec_label_pc_10006120

dec_label_pc_10006120:                            ; preds = %dec_label_pc_10006180, %dec_label_pc_100060b0
  store i32 %v0_10006104, i32* %r0.global-to-local, align 4
  %v1_10006134 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100060b8)
  store i32 %v0_100060e4, i32* @r24, align 4
  store i32 %v0_100060e8, i32* @r25, align 4
  store i32 %v0_100060f0, i32* @r27, align 4
  store i32 %v0_100060f4, i32* @r28, align 4
  store i32 %v0_100060f8, i32* %r29.global-to-local, align 4
  store i32 %v0_100060fc, i32* %r30.global-to-local, align 4
  store i32 %v0_10006100, i32* @r31, align 4
  ret i32 %v0_1000610c

dec_label_pc_10006180:                            ; preds = %dec_label_pc_100060b0
  %v1_10006180 = icmp slt i32 %v0_1000610c, -1
  %v3_10006180 = icmp eq i32 %v0_1000610c, -1
  store i1 %v1_10006180, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006180, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006180, label %dec_label_pc_10006120, label %dec_label_pc_10006188

dec_label_pc_10006188:                            ; preds = %dec_label_pc_10006180
  store i32 268460428, i32* @lr, align 4
  %v1_10006188 = call i32 @function_1000816c(i32 %v0_1000610c)
  store i32 %v1_10006188, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10006188, i32* @global_var_1001b748.16, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006198.100 to i32), i32* @lr, align 4
  %v1_10006194 = call i32 @function_10005b88(i32 %v1_10006188)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268460452, i32* @lr, align 4
  %v0_100061a0 = call i32 @function_100089f8()
  store i32 %v0_100061a0, i32* @global_var_1001b76c.95, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100061b4.101 to i32), i32* @lr, align 4
  %v2_100061b0 = call i32 @function_100096a0(i32 256, i32 288)
  store i32 %v2_100061b0, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_100061b0, i32* @global_var_1001b770.102, align 4
  store i32 %v2_100061b0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100061e0 = add i32 %v2_100061b0, 4
  store i32 %v1_100061e0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100061e4

dec_label_pc_100061e4:                            ; preds = %dec_label_pc_100061e4.dec_label_pc_100061e4_crit_edge, %dec_label_pc_10006188
  %v1_100061f8 = phi i32 [ %v1_10006200, %dec_label_pc_100061e4.dec_label_pc_100061e4_crit_edge ], [ %v1_100061e0, %dec_label_pc_10006188 ]
  %v0_100061f8 = phi i32 [ %v0_100061f8.pre, %dec_label_pc_100061e4.dec_label_pc_100061e4_crit_edge ], [ -1, %dec_label_pc_10006188 ]
  %v1_100061f4 = phi i32 [ %v1_100061f4.pre, %dec_label_pc_100061e4.dec_label_pc_100061e4_crit_edge ], [ %v2_100061b0, %dec_label_pc_10006188 ]
  %v0_100061f0 = phi i32 [ %v0_10006204, %dec_label_pc_100061e4.dec_label_pc_100061e4_crit_edge ], [ 0, %dec_label_pc_10006188 ]
  %v1_100061e4 = mul i32 %v0_100061f0, 256
  store i32 %v1_100061e4, i32* %r0.global-to-local, align 4
  %v2_100061ec = mul i32 %v0_100061f0, 288
  %v1_100061f0 = add i32 %v0_100061f0, 1
  store i32 %v1_100061f0, i32* %r10.global-to-local, align 4
  %v2_100061f4 = add i32 %v2_100061ec, %v1_100061f4
  store i32 %v2_100061f4, i32* %r9.global-to-local, align 4
  %v2_100061f8 = inttoptr i32 %v1_100061f8 to i32*
  store i32 %v0_100061f8, i32* %v2_100061f8, align 4
  %v0_100061fc = load i32, i32* %r7.global-to-local, align 4
  %v1_100061fc = load i32, i32* %r9.global-to-local, align 4
  %v2_100061fc = add i32 %v1_100061fc, 12
  %v3_100061fc = inttoptr i32 %v2_100061fc to i32*
  store i32 %v0_100061fc, i32* %v3_100061fc, align 4
  %v0_10006200 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006200 = add i32 %v0_10006200, 288
  store i32 %v1_10006200, i32* %r11.global-to-local, align 4
  %v0_10006204 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006204, i32* %r9.global-to-local, align 4
  %v0_10006208 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006208 = add i32 %v0_10006208, -1
  store i32 %v1_10006208, i32* %ctr.global-to-local, align 4
  %v2_10006208 = icmp eq i32 %v1_10006208, 0
  br i1 %v2_10006208, label %dec_label_pc_1000620c, label %dec_label_pc_100061e4.dec_label_pc_100061e4_crit_edge

dec_label_pc_100061e4.dec_label_pc_100061e4_crit_edge: ; preds = %dec_label_pc_100061e4
  %v1_100061f4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100061f8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100061e4

dec_label_pc_1000620c:                            ; preds = %dec_label_pc_100061e4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1916, align 8
  store i32 268460580, i32* @lr, align 4
  %v3_10006220 = call i32 @function_10009344(i32 2, i32 3, i32 6)
  %v4_10006220 = trunc i32 %v3_10006220 to i16
  store i32 %v3_10006220, i32* %r3.global-to-local, align 4
  %v2_10006224 = icmp slt i16 %v4_10006220, -1
  %v4_10006224 = icmp eq i16 %v4_10006220, -1
  store i1 %v2_10006224, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006224, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10006220, i32* %r29.global-to-local, align 4
  store i32 %v3_10006220, i32* @global_var_1001b774.103, align 4
  br i1 %v4_10006224, label %dec_label_pc_10006844, label %dec_label_pc_10006238

dec_label_pc_10006238:                            ; preds = %dec_label_pc_1000620c
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268460616, i32* @lr, align 4
  %v1_10006244 = call i32 @function_10008540(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_1000624c = or i32 %v1_10006244, 2048
  store i32 %v1_1000624c, i32* %r5.global-to-local, align 4
  %v0_10006250 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006250, i32* %r3.global-to-local, align 4
  store i32 268460636, i32* @lr, align 4
  %v2_10006258 = call i32 @function_10008540(i32 %v0_10006250)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006260 = load i32, i32* @global_var_1001b774.103, align 4
  store i32 %v3_10006260, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006270 = ptrtoint i64* %stack_var_-1916 to i32
  store i32 %v2_10006270, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268460672, i32* @lr, align 4
  %v5_1000627c = call i32 @function_10009308(i32 %v3_10006260, i32 0, i32 3, i32 %v2_10006270)
  store i32 %v5_1000627c, i32* %r3.global-to-local, align 4
  %v1_10006280 = icmp slt i32 %v5_1000627c, 0
  %v3_10006280 = icmp eq i32 %v5_1000627c, 0
  store i1 %v1_10006280, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006280, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006280, label %dec_label_pc_10006288, label %dec_label_pc_10007814

dec_label_pc_10006288:                            ; preds = %dec_label_pc_10006238, %dec_label_pc_10006288
  %v0_10006288 = call i32 @function_10005b38()
  store i32 %v0_10006288, i32* %r3.global-to-local, align 4
  %v1_1000628c = urem i32 %v0_10006288, 65536
  store i32 %v1_1000628c, i32* @r22, align 4
  %v1_10006290 = icmp ult i32 %v1_1000628c, 1023
  %v3_10006290 = icmp eq i32 %v1_1000628c, 1023
  store i1 %v1_10006290, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006290, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = icmp ult i32 %v1_1000628c, 1024
  br i1 %tmp99, label %dec_label_pc_10006288, label %dec_label_pc_10006298

dec_label_pc_10006298:                            ; preds = %dec_label_pc_10006288
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_100062a0 = load i32, i32* @global_var_1001b7e0.104, align 4
  store i32 %v3_100062a0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b7e0.104 to i32), i32* @r23, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b7f4.105 to i32), i32* @r24, align 4
  %v1_100062b0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100062b0, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_100062b8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100062b8, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_100062b8, i32* @global_var_1001b7e0.104, align 4
  store i32 ptrtoint (i32* @global_var_1000b0cc.106 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001b7e2.107 to i16*), align 4
  %v0_100062cc = call i32 @function_10005b38()
  %v1_100062cc = trunc i32 %v0_100062cc to i16
  store i32 %v0_100062cc, i32* %r3.global-to-local, align 4
  %v3_100062d0 = load i32, i32* @global_var_1001b800.108, align 4
  store i32 %v3_100062d0, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001b7e8.109 to i8*), align 4
  %v1_100062e0 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100062e0, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_100062e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062e8 = trunc i32 %v0_100062e8 to i8
  store i8 %v1_100062e8, i8* bitcast (i32* @global_var_1001b7e9.110 to i8*), align 4
  store i16 %v1_100062cc, i16* bitcast (i32* @global_var_1001b7e4.111 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000b0c8.112 to i32), i32* @r29, align 4
  store i32 %v1_100062e0, i32* @global_var_1001b800.108, align 4
  store i16 23, i16* @global_var_1001b7f6.113, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000b060.114 to i32), i32* @r27, align 4
  %v0_10006308 = load i32, i32* @r22, align 4
  %v1_10006308 = trunc i32 %v0_10006308 to i16
  store i16 %v1_10006308, i16* bitcast (i32* @global_var_1001b7f4.105 to i16*), align 4
  %v2_1000630c = ptrtoint i32* %stack_var_-1928 to i32
  store i32 %v2_1000630c, i32* @r14, align 4
  %v0_10006310 = call i32 @function_10005b38()
  %v1_10006310 = trunc i32 %v0_10006310 to i16
  %v0_10006314 = load i32, i32* @r28, align 4
  store i16 %v1_10006310, i16* bitcast (i32* @global_var_1001b802.115 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10006320 = load i32, i32* @r29, align 4
  store i32 %v0_10006320, i32* %r3.global-to-local, align 4
  %v3_10006324 = load i32, i32* @global_var_1001b800.108, align 4
  %v1_10006328 = or i32 %v3_10006324, 131072
  store i32 %v1_10006328, i32* %r0.global-to-local, align 4
  store i32 %v1_10006328, i32* @global_var_1001b800.108, align 4
  store i32 268460852, i32* @lr, align 4
  %v4_10006330 = call i32 @function_10005f04(i32 %v0_10006320, i32 %v0_10006314, i32 4)
  %v0_10006338 = load i32, i32* @r29, align 4
  store i32 %v0_10006338, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268460872, i32* @lr, align 4
  %v5_10006344 = call i32 @function_10005f04(i32 %v0_10006338, i32 ptrtoint ([5 x i8]* @global_var_1000b044.116 to i32), i32 8)
  %v0_1000634c = load i32, i32* @r29, align 4
  store i32 %v0_1000634c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268460892, i32* @lr, align 4
  %v5_10006358 = call i32 @function_10005f04(i32 %v0_1000634c, i32 ptrtoint ([9 x i8]* @global_var_1000b04c.117 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_1000b058.118 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268460912, i32* @lr, align 4
  %v4_1000636c = call i32 @function_10005f04(i32 ptrtoint ([7 x i8]* @global_var_1000b058.118 to i32), i32 12, i32 12)
  %v0_10006370 = load i32, i32* @r28, align 4
  %v0_10006374 = load i32, i32* @r27, align 4
  store i32 %v0_10006374, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268460928, i32* @lr, align 4
  %v4_1000637c = call i32 @function_10005f04(i32 %v0_10006374, i32 %v0_10006370, i32 7)
  %v0_10006384 = load i32, i32* @r29, align 4
  store i32 %v0_10006384, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r28, align 4
  store i32 268460952, i32* @lr, align 4
  %v5_10006394 = call i32 @function_10005f04(i32 %v0_10006384, i32 ptrtoint ([9 x i8]* @global_var_1000b068.119 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1000b074.120 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000b09c.121 to i32), i32* @r28, align 4
  store i32 268460976, i32* @lr, align 4
  %v4_100063ac = call i32 @function_10005f04(i32 ptrtoint ([6 x i8]* @global_var_1000b074.120 to i32), i32 10, i32 10)
  %v0_100063b4 = load i32, i32* @r29, align 4
  store i32 %v0_100063b4, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268460996, i32* @lr, align 4
  %v5_100063c0 = call i32 @function_10005f04(i32 %v0_100063b4, i32 ptrtoint ([6 x i8]* @global_var_1000b07c.122 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_1000b084.123 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268461016, i32* @lr, align 4
  %v4_100063d4 = call i32 @function_10005f04(i32 ptrtoint ([8 x i8]* @global_var_1000b084.123 to i32), i32 14, i32 14)
  %v0_100063d8 = load i32, i32* @r29, align 4
  store i32 %v0_100063d8, i32* %r3.global-to-local, align 4
  %v0_100063dc = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268461032, i32* @lr, align 4
  %v5_100063e4 = call i32 @function_10005f04(i32 %v0_100063d8, i32 %v0_100063dc, i32 11)
  %v0_100063ec = load i32, i32* @r29, align 4
  store i32 %v0_100063ec, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268461052, i32* @lr, align 4
  %v4_100063f8 = call i32 @function_10005f04(i32 %v0_100063ec, i32 ptrtoint (i32* @global_var_1000b08c.124 to i32), i32 17)
  %v0_100063fc = load i32, i32* @r29, align 4
  store i32 %v0_100063fc, i32* %r3.global-to-local, align 4
  %v0_10006404 = load i32, i32* @r28, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000b0a4.125 to i32), i32* @r29, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461076, i32* @lr, align 4
  %v5_10006410 = call i32 @function_10005f04(i32 %v0_100063fc, i32 %v0_10006404, i32 9)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_10006418 = load i32, i32* @r29, align 4
  store i32 %v0_10006418, i32* %r3.global-to-local, align 4
  store i32 268461092, i32* @lr, align 4
  %v5_10006420 = call i32 @function_10005f04(i32 %v0_10006418, i32 %v0_10006418, i32 8)
  %v0_10006424 = load i32, i32* @r29, align 4
  store i32 %v0_10006424, i32* %r3.global-to-local, align 4
  %v0_10006428 = load i32, i32* @r28, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461108, i32* @lr, align 4
  %v5_10006430 = call i32 @function_10005f04(i32 %v0_10006424, i32 %v0_10006428, i32 9)
  %v0_1000643c = load i32, i32* @r27, align 4
  store i32 %v0_1000643c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268461128, i32* @lr, align 4
  %v4_10006444 = call i32 @function_10005f04(i32 %v0_1000643c, i32 ptrtoint (i32* @global_var_1000b0ac.126 to i32), i32 15)
  %v0_1000644c = load i32, i32* @r27, align 4
  store i32 %v0_1000644c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268461148, i32* @lr, align 4
  %v4_10006458 = call i32 @function_10005f04(i32 %v0_1000644c, i32 ptrtoint (i32* @global_var_1000b0b8.127 to i32), i32 15)
  store i32 %v4_10006458, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000645c

dec_label_pc_1000645c:                            ; preds = %dec_label_pc_10006aa4, %dec_label_pc_10006298
  %v3_1000645c = load i32, i32* @global_var_1001b76c.95, align 4
  store i32 %v3_1000645c, i32* @r31, align 4
  %v0_10006460 = load i32, i32* @r25, align 4
  %v2_10006460 = icmp slt i32 %v0_10006460, %v3_1000645c
  %v4_10006460 = icmp eq i32 %v0_10006460, %v3_1000645c
  store i1 %v2_10006460, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006460, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006460, label %dec_label_pc_10006680, label %dec_label_pc_10006468

dec_label_pc_10006468:                            ; preds = %dec_label_pc_1000645c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000646c = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_1000646c, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000647c

dec_label_pc_1000647c:                            ; preds = %dec_label_pc_100065ac.dec_label_pc_1000647c_crit_edge, %dec_label_pc_10006468
  %v0_1000647c = phi i32 [ %v0_1000647c.pre, %dec_label_pc_100065ac.dec_label_pc_1000647c_crit_edge ], [ 0, %dec_label_pc_10006468 ]
  store i32 %v0_1000647c, i32* %stack_var_-1888, align 4
  %v0_1000648c = call i32 @function_10005b38()
  %v1_1000648c = trunc i32 %v0_1000648c to i16
  store i32 %v0_1000648c, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_1000648c, i16* bitcast (i32* @global_var_1001b7e4.111 to i16*), align 4
  %v3_10006498 = load i32, i32* @global_var_1001b748.16, align 4
  store i32 %v3_10006498, i32* %r0.global-to-local, align 4
  store i32 %v3_10006498, i32* @global_var_1001b7ec.128, align 4
  br label %dec_label_pc_100064a0.preheader

dec_label_pc_100064a0.preheader:                  ; preds = %dec_label_pc_1000647c, %dec_label_pc_1000684c
  br label %dec_label_pc_100064a0

dec_label_pc_100064a0:                            ; preds = %dec_label_pc_100068e8, %dec_label_pc_100068dc, %dec_label_pc_100068d0, %dec_label_pc_100068c4, %dec_label_pc_100068b8, %dec_label_pc_100068b0, %dec_label_pc_100068a8, %dec_label_pc_100068a0, %dec_label_pc_10006894, %dec_label_pc_10006880, %dec_label_pc_10006874, %dec_label_pc_10006860, %dec_label_pc_100065a4, %dec_label_pc_1000659c, %dec_label_pc_10006594, %dec_label_pc_1000658c, %dec_label_pc_10006584, %dec_label_pc_1000657c, %dec_label_pc_10006574, %dec_label_pc_1000656c, %dec_label_pc_10006564, %dec_label_pc_1000655c, %dec_label_pc_10006554, %dec_label_pc_10006544, %dec_label_pc_10006514, %dec_label_pc_100064e4, %dec_label_pc_100064dc, %dec_label_pc_100064cc, %dec_label_pc_100064c4, %dec_label_pc_100064bc, %dec_label_pc_100064a0, %dec_label_pc_100064a0.preheader
  %v0_100064a0 = call i32 @function_10005b38()
  store i32 %v0_100064a0, i32* %r3.global-to-local, align 4
  %v1_100064a4 = urem i32 %v0_100064a0, 256
  store i32 %v1_100064a4, i32* %r11.global-to-local, align 4
  %v1_100064a8 = udiv i32 %v0_100064a0, 16777216
  store i32 %v1_100064a8, i32* %r10.global-to-local, align 4
  %v1_100064ac = icmp ult i32 %v1_100064a4, 127
  %v3_100064ac = icmp eq i32 %v1_100064a4, 127
  store i1 %v1_100064ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064ac, i1* %cr7_eq.global-to-local, align 1
  %v1_100064b0 = call i32 @__asm_rlwinm(i32 %v0_100064a0, i32 24, i32 24, i32 31)
  store i32 %v1_100064b0, i32* @r9, align 4
  %v1_100064b4 = call i32 @__asm_rlwinm(i32 %v0_100064a0, i32 16, i32 24, i32 31)
  store i32 %v1_100064b4, i32* %r3.global-to-local, align 4
  %v0_100064b8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100064b8, label %dec_label_pc_100064a0, label %dec_label_pc_100064bc

dec_label_pc_100064bc:                            ; preds = %dec_label_pc_100064a0
  %v0_100064bc = load i32, i32* %r11.global-to-local, align 4
  %v1_100064bc = icmp slt i32 %v0_100064bc, 0
  %v3_100064bc = icmp eq i32 %v0_100064bc, 0
  store i1 %v1_100064bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064bc, label %dec_label_pc_100064a0, label %dec_label_pc_100064c4

dec_label_pc_100064c4:                            ; preds = %dec_label_pc_100064bc
  %v1_100064c4 = icmp slt i32 %v0_100064bc, 3
  %v3_100064c4 = icmp eq i32 %v0_100064bc, 3
  store i1 %v1_100064c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064c4, label %dec_label_pc_100064a0, label %dec_label_pc_100064cc

dec_label_pc_100064cc:                            ; preds = %dec_label_pc_100064c4
  %v1_100064cc = add i32 %v0_100064bc, 241
  %v1_100064d0 = urem i32 %v1_100064cc, 256
  store i32 %v1_100064d0, i32* %r0.global-to-local, align 4
  %v1_100064d4 = icmp eq i32 %v1_100064d0, 0
  %v3_100064d4 = icmp eq i32 %v1_100064d0, 1
  store i1 %v1_100064d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064d4, i1* %cr7_eq.global-to-local, align 1
  %tmp100 = or i32 %v1_100064d0, 1
  %tmp101 = icmp eq i32 %tmp100, 1
  br i1 %tmp101, label %dec_label_pc_100064a0, label %dec_label_pc_100064dc

dec_label_pc_100064dc:                            ; preds = %dec_label_pc_100064cc
  %v1_100064dc = icmp slt i32 %v0_100064bc, 56
  %v3_100064dc = icmp eq i32 %v0_100064bc, 56
  store i1 %v1_100064dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064dc, label %dec_label_pc_100064a0, label %dec_label_pc_100064e4

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064dc
  %v1_100064e4 = icmp slt i32 %v0_100064bc, 10
  %v3_100064e4 = icmp eq i32 %v0_100064bc, 10
  store i1 %v1_100064e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064e4, label %dec_label_pc_100064a0, label %dec_label_pc_100064ec

dec_label_pc_100064ec:                            ; preds = %dec_label_pc_100064e4
  %v1_100064ec = icmp slt i32 %v0_100064bc, 192
  %v3_100064ec = icmp eq i32 %v0_100064bc, 192
  store i1 %v1_100064ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064ec, label %dec_label_pc_1000684c, label %dec_label_pc_100064f4

dec_label_pc_100064f4:                            ; preds = %dec_label_pc_100064ec
  %v1_100064f4 = icmp slt i32 %v0_100064bc, 172
  %v3_100064f4 = icmp eq i32 %v0_100064bc, 172
  store i1 %v1_100064f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064f4, label %dec_label_pc_10006858, label %dec_label_pc_100064fc

dec_label_pc_100064fc:                            ; preds = %dec_label_pc_100064f4
  %v1_100064fc = icmp slt i32 %v0_100064bc, 100
  %v3_100064fc = icmp eq i32 %v0_100064bc, 100
  store i1 %v1_100064fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064fc, label %dec_label_pc_1000686c, label %dec_label_pc_10006504

dec_label_pc_10006504:                            ; preds = %dec_label_pc_100064fc
  %v1_10006504 = icmp slt i32 %v0_100064bc, 169
  %v3_10006504 = icmp eq i32 %v0_100064bc, 169
  store i1 %v1_10006504, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006504, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006504, label %dec_label_pc_10006880, label %dec_label_pc_1000650c

dec_label_pc_1000650c:                            ; preds = %dec_label_pc_10006504
  %v1_1000650c = icmp slt i32 %v0_100064bc, 198
  %v3_1000650c = icmp eq i32 %v0_100064bc, 198
  store i1 %v1_1000650c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000650c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000650c, label %dec_label_pc_1000688c, label %dec_label_pc_10006514

dec_label_pc_10006514:                            ; preds = %dec_label_pc_1000650c
  %v1_10006514 = icmp ult i32 %v0_100064bc, 223
  %v2_10006514 = icmp ugt i32 %v0_100064bc, 223
  %v3_10006514 = icmp eq i32 %v0_100064bc, 223
  store i1 %v1_10006514, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006514, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006514, label %dec_label_pc_100064a0, label %dec_label_pc_1000651c

dec_label_pc_1000651c:                            ; preds = %dec_label_pc_10006514
  %v1_1000651c = icmp slt i32 %v0_100064bc, 106
  %v3_1000651c = icmp eq i32 %v0_100064bc, 106
  store i1 %v1_1000651c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000651c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000651c, label %dec_label_pc_100068a0, label %dec_label_pc_10006524

dec_label_pc_10006524:                            ; preds = %dec_label_pc_1000651c
  %v1_10006524 = icmp slt i32 %v0_100064bc, 150
  %v3_10006524 = icmp eq i32 %v0_100064bc, 150
  store i1 %v1_10006524, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006524, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006524, label %dec_label_pc_100068c4, label %dec_label_pc_1000652c

dec_label_pc_1000652c:                            ; preds = %dec_label_pc_10006524
  %v1_1000652c = icmp slt i32 %v0_100064bc, 49
  %v3_1000652c = icmp eq i32 %v0_100064bc, 49
  store i1 %v1_1000652c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000652c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000652c, label %dec_label_pc_100068d0, label %dec_label_pc_10006534

dec_label_pc_10006534:                            ; preds = %dec_label_pc_1000652c
  %v1_10006534 = icmp slt i32 %v0_100064bc, 178
  %v3_10006534 = icmp eq i32 %v0_100064bc, 178
  store i1 %v1_10006534, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006534, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006534, label %dec_label_pc_100068dc, label %dec_label_pc_1000653c

dec_label_pc_1000653c:                            ; preds = %dec_label_pc_10006534
  %v1_1000653c = icmp slt i32 %v0_100064bc, 160
  %v3_1000653c = icmp eq i32 %v0_100064bc, 160
  store i1 %v1_1000653c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000653c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000653c, label %dec_label_pc_100068e8, label %dec_label_pc_10006544

dec_label_pc_10006544:                            ; preds = %dec_label_pc_1000653c
  %v1_10006544 = add i32 %v0_100064bc, 250
  %v1_10006548 = urem i32 %v1_10006544, 256
  store i32 %v1_10006548, i32* %r0.global-to-local, align 4
  %v1_1000654c = icmp eq i32 %v1_10006548, 0
  %v3_1000654c = icmp eq i32 %v1_10006548, 1
  store i1 %v1_1000654c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000654c, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_10006548, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_100064a0, label %dec_label_pc_10006554

dec_label_pc_10006554:                            ; preds = %dec_label_pc_10006544
  %v1_10006554 = icmp slt i32 %v0_100064bc, 11
  %v3_10006554 = icmp eq i32 %v0_100064bc, 11
  store i1 %v1_10006554, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006554, label %dec_label_pc_100064a0, label %dec_label_pc_1000655c

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_10006554
  %v1_1000655c = icmp slt i32 %v0_100064bc, 21
  %v3_1000655c = icmp eq i32 %v0_100064bc, 21
  store i1 %v1_1000655c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000655c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000655c, label %dec_label_pc_100064a0, label %dec_label_pc_10006564

dec_label_pc_10006564:                            ; preds = %dec_label_pc_1000655c
  %v1_10006564 = icmp slt i32 %v0_100064bc, 22
  %v3_10006564 = icmp eq i32 %v0_100064bc, 22
  store i1 %v1_10006564, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006564, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006564, label %dec_label_pc_100064a0, label %dec_label_pc_1000656c

dec_label_pc_1000656c:                            ; preds = %dec_label_pc_10006564
  %v1_1000656c = icmp slt i32 %v0_100064bc, 26
  %v3_1000656c = icmp eq i32 %v0_100064bc, 26
  store i1 %v1_1000656c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000656c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000656c, label %dec_label_pc_100064a0, label %dec_label_pc_10006574

dec_label_pc_10006574:                            ; preds = %dec_label_pc_1000656c
  %v1_10006574 = icmp slt i32 %v0_100064bc, 28
  %v3_10006574 = icmp eq i32 %v0_100064bc, 28
  store i1 %v1_10006574, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006574, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006574, label %dec_label_pc_100064a0, label %dec_label_pc_1000657c

dec_label_pc_1000657c:                            ; preds = %dec_label_pc_10006574
  %v1_1000657c = icmp slt i32 %v0_100064bc, 29
  %v3_1000657c = icmp eq i32 %v0_100064bc, 29
  store i1 %v1_1000657c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000657c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000657c, label %dec_label_pc_100064a0, label %dec_label_pc_10006584

dec_label_pc_10006584:                            ; preds = %dec_label_pc_1000657c
  %v1_10006584 = icmp slt i32 %v0_100064bc, 30
  %v3_10006584 = icmp eq i32 %v0_100064bc, 30
  store i1 %v1_10006584, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006584, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006584, label %dec_label_pc_100064a0, label %dec_label_pc_1000658c

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_10006584
  %v1_1000658c = icmp slt i32 %v0_100064bc, 33
  %v3_1000658c = icmp eq i32 %v0_100064bc, 33
  store i1 %v1_1000658c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000658c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000658c, label %dec_label_pc_100064a0, label %dec_label_pc_10006594

dec_label_pc_10006594:                            ; preds = %dec_label_pc_1000658c
  %v1_10006594 = icmp slt i32 %v0_100064bc, 55
  %v3_10006594 = icmp eq i32 %v0_100064bc, 55
  store i1 %v1_10006594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006594, label %dec_label_pc_100064a0, label %dec_label_pc_1000659c

dec_label_pc_1000659c:                            ; preds = %dec_label_pc_10006594
  %v1_1000659c = icmp slt i32 %v0_100064bc, 214
  %v3_1000659c = icmp eq i32 %v0_100064bc, 214
  store i1 %v1_1000659c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000659c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000659c, label %dec_label_pc_100064a0, label %dec_label_pc_100065a4

dec_label_pc_100065a4:                            ; preds = %dec_label_pc_1000659c
  %v1_100065a4 = icmp slt i32 %v0_100064bc, 215
  %v3_100065a4 = icmp eq i32 %v0_100064bc, 215
  store i1 %v1_100065a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065a4, label %dec_label_pc_100064a0, label %dec_label_pc_100065a4.dec_label_pc_100065ac.loopexit_crit_edge

dec_label_pc_100065a4.dec_label_pc_100065ac.loopexit_crit_edge: ; preds = %dec_label_pc_100065a4
  %v0_100065b0.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_100065ac

dec_label_pc_100065ac:                            ; preds = %dec_label_pc_100068e8, %dec_label_pc_100068dc, %dec_label_pc_100068d0, %dec_label_pc_100068c4, %dec_label_pc_100068b8, %dec_label_pc_10006894, %dec_label_pc_10006880, %dec_label_pc_10006874, %dec_label_pc_10006860, %dec_label_pc_1000688c, %dec_label_pc_1000686c, %dec_label_pc_10006858, %dec_label_pc_100065a4.dec_label_pc_100065ac.loopexit_crit_edge, %dec_label_pc_1000684c.dec_label_pc_100065ac_crit_edge
  %v0_100065b8 = phi i32 [ %v0_100065b815, %dec_label_pc_1000684c.dec_label_pc_100065ac_crit_edge ], [ %v1_100064b4, %dec_label_pc_100065a4.dec_label_pc_100065ac.loopexit_crit_edge ], [ %v1_100064b4, %dec_label_pc_10006858 ], [ %v1_100064b4, %dec_label_pc_1000686c ], [ %v1_100064b4, %dec_label_pc_1000688c ], [ %v1_100064b4, %dec_label_pc_10006860 ], [ %v1_100064b4, %dec_label_pc_10006874 ], [ %v1_100064b4, %dec_label_pc_10006880 ], [ %v1_100064b4, %dec_label_pc_10006894 ], [ %v1_100064b4, %dec_label_pc_100068b8 ], [ %v1_100064b4, %dec_label_pc_100068c4 ], [ %v1_100064b4, %dec_label_pc_100068d0 ], [ %v1_100064b4, %dec_label_pc_100068dc ], [ %v1_100064b4, %dec_label_pc_100068e8 ]
  %v0_100065b0 = phi i32 [ %v0_1000684c, %dec_label_pc_1000684c.dec_label_pc_100065ac_crit_edge ], [ %v0_100065b0.pre.pre, %dec_label_pc_100065a4.dec_label_pc_100065ac.loopexit_crit_edge ], [ %v0_10006858, %dec_label_pc_10006858 ], [ %v0_1000686c, %dec_label_pc_1000686c ], [ %v0_1000688c, %dec_label_pc_1000688c ], [ %v0_10006858, %dec_label_pc_10006860 ], [ %v0_1000686c, %dec_label_pc_10006874 ], [ %v0_10006880, %dec_label_pc_10006880 ], [ %v0_1000688c, %dec_label_pc_10006894 ], [ %v0_100068a0, %dec_label_pc_100068b8 ], [ %v0_100068c4, %dec_label_pc_100068c4 ], [ %v0_100068d0, %dec_label_pc_100068d0 ], [ %v0_100068dc, %dec_label_pc_100068dc ], [ %v0_100068e8, %dec_label_pc_100068e8 ]
  %v0_100065ac = phi i32 [ %v0_100065ac.pre, %dec_label_pc_1000684c.dec_label_pc_100065ac_crit_edge ], [ %v0_100064bc, %dec_label_pc_100065a4.dec_label_pc_100065ac.loopexit_crit_edge ], [ 172, %dec_label_pc_10006858 ], [ 100, %dec_label_pc_1000686c ], [ 198, %dec_label_pc_1000688c ], [ 172, %dec_label_pc_10006860 ], [ 100, %dec_label_pc_10006874 ], [ 169, %dec_label_pc_10006880 ], [ 198, %dec_label_pc_10006894 ], [ 106, %dec_label_pc_100068b8 ], [ 150, %dec_label_pc_100068c4 ], [ 49, %dec_label_pc_100068d0 ], [ 178, %dec_label_pc_100068dc ], [ 160, %dec_label_pc_100068e8 ]
  %v1_100065ac = mul i32 %v0_100065ac, 16777216
  %v1_100065b0 = mul i32 %v0_100065b0, 65536
  %v2_100065b4 = or i32 %v1_100065ac, %v1_100065b0
  %v1_100065b8 = mul i32 %v0_100065b8, 256
  %v1_100065bc = load i32, i32* %r10.global-to-local, align 4
  %v2_100065bc = or i32 %v2_100065b4, %v1_100065bc
  store i32 %v2_100065bc, i32* %r0.global-to-local, align 4
  %v0_100065c0 = load i32, i32* @r23, align 4
  store i32 %v0_100065c0, i32* @r3, align 4
  %v2_100065c4 = or i32 %v2_100065bc, %v1_100065b8
  store i32 %v2_100065c4, i32* %r9.global-to-local, align 4
  store i32 %v2_100065c4, i32* @global_var_1001b7f0.129, align 4
  %v0_100065d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100065d0 = trunc i32 %v0_100065d0 to i16
  store i16 %v1_100065d0, i16* bitcast (i32* @global_var_1001b7ea.130 to i16*), align 4
  %v2_100065d4 = call i32 @function_100043cc(i32 %v0_100065c0, i32 20)
  %v3_100065d4 = trunc i32 %v2_100065d4 to i16
  %v3_100065d8 = load i64, i64* %stack_var_-1916, align 8
  %v4_100065d8 = trunc i64 %v3_100065d8 to i32
  store i32 %v4_100065d8, i32* %r9.global-to-local, align 4
  store i16 %v3_100065d4, i16* bitcast (i32* @global_var_1001b7ea.130 to i16*), align 4
  %v4_100065e8 = mul nsw i64 %v3_100065d8, 1717986919
  %v5_100065e8 = udiv i64 %v4_100065e8, 4294967296
  %v6_100065e8 = trunc i64 %v5_100065e8 to i32
  %tmp = icmp slt i32 %v4_100065d8, 0
  %v1_100065ec = zext i1 %tmp to i32
  %v2_100065ec = ashr i32 %v4_100065d8, 31
  %v3_100065ec = and i32 %v2_100065ec, -2
  %v4_100065ec = or i32 %v3_100065ec, %v1_100065ec
  store i32 %v4_100065ec, i32* %r11.global-to-local, align 4
  %v1_100065f043 = udiv i64 %v4_100065e8, 17179869184
  %v1_100065f0 = trunc i64 %v1_100065f043 to i32
  %v2_100065f0 = ashr i32 %v6_100065e8, 31
  %v3_100065f0 = and i32 %v2_100065f0, -1073741824
  %v4_100065f0 = or i32 %v3_100065f0, %v1_100065f0
  %v2_100065f4 = sub nsw i32 %v4_100065f0, %v4_100065ec
  %v1_100065f8 = mul i32 %v2_100065f4, 10
  %v2_100065fc = icmp slt i32 %v4_100065d8, %v1_100065f8
  %v4_100065fc = icmp eq i32 %v4_100065d8, %v1_100065f8
  store i1 %v2_100065fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100065fc, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_100065fc, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001b7f6.113, align 2
  %v3_1000660c = load i32, i32* @global_var_1001b7f0.129, align 4
  store i32 %v3_1000660c, i32* %r0.global-to-local, align 4
  %v0_10006610 = load i32, i32* @r24, align 4
  store i32 %v0_10006610, i32* @r4, align 4
  %v0_10006614 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006614 = trunc i32 %v0_10006614 to i16
  store i16 %v1_10006614, i16* bitcast (i32* @global_var_1001b804.131 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_1000660c, i32* @global_var_1001b7f8.132, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10006624 = load i32, i32* @r23, align 4
  store i32 %v0_10006624, i32* %r3.global-to-local, align 4
  %v4_10006628 = call i32 @function_10004430(i32 %v0_10006624, i32 %v0_10006610, i32 20, i32 20)
  %v5_10006628 = trunc i32 %v4_10006628 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10006628, i16* bitcast (i32* @global_var_1001b804.131 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006638 = load i32, i32* @global_var_1001b7f0.129, align 4
  store i32 %v3_10006638, i32* %r9.global-to-local, align 4
  %v0_1000663c = load i32, i32* @r23, align 4
  %v3_10006640 = load i16, i16* @global_var_1001b7f6.113, align 2
  %v4_10006640 = zext i16 %v3_10006640 to i32
  store i32 %v4_10006640, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006648 = load i32, i32* @global_var_1001b774.103, align 4
  store i32 %v3_10006648, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006650 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_10006650, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268461672, i32* @lr, align 4
  %v6_10006664 = call i32 @function_100092c8(i32 %v3_10006648, i32 %v0_1000663c, i32 40, i32 16384, i32 %v1_10006650, i32 16)
  store i32 %v6_10006664, i32* %r3.global-to-local, align 4
  %v3_10006668 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006668 = trunc i64 %v3_10006668 to i32
  %v1_1000666c = add i32 %v4_10006668, 1
  store i32 %v1_1000666c, i32* %r9.global-to-local, align 4
  %v1_10006670 = icmp slt i32 %v1_1000666c, 383
  %v3_10006670 = icmp eq i32 %v1_1000666c, 383
  store i1 %v1_10006670, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006670, i1* %cr7_eq.global-to-local, align 1
  %v5_10006674 = sext i32 %v1_1000666c to i64
  store i64 %v5_10006674, i64* %stack_var_-1916, align 8
  %tmp104 = icmp slt i32 %v1_1000666c, 384
  br i1 %tmp104, label %dec_label_pc_100065ac.dec_label_pc_1000647c_crit_edge, label %dec_label_pc_1000667c

dec_label_pc_100065ac.dec_label_pc_1000647c_crit_edge: ; preds = %dec_label_pc_100065ac
  %v0_1000647c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000647c

dec_label_pc_1000667c:                            ; preds = %dec_label_pc_100065ac
  %v0_1000667c = load i32, i32* @r31, align 4
  store i32 %v0_1000667c, i32* @r25, align 4
  br label %dec_label_pc_10006680

dec_label_pc_10006680:                            ; preds = %dec_label_pc_1000645c, %dec_label_pc_1000667c
  %v0_10006680 = call i32 @function_10008d44()
  store i32 %v0_10006680, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10006680, i32* %r26.global-to-local, align 4
  %v2_10006698 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_100066e4 = zext i8 %tmp56 to i32
  %v1_100066e8 = icmp ult i8 %tmp56, 6
  %v3_100066e8 = icmp eq i8 %tmp56, 6
  %v4_100066f0 = zext i16 %tmp55 to i32
  %v1_100066f8 = icmp ult i16 %tmp55, 23
  %v3_100066f8 = icmp eq i16 %tmp55, 23
  %v4_10006708 = zext i16 %tmp54 to i32
  %v1_10006718 = and i32 %tmp53, 131072
  %v3_10006718 = icmp eq i32 %v1_10006718, 0
  %v1_10006740 = add i32 %tmp52, -1
  %v2_10006744 = icmp slt i32 %v1_10006740, %tmp51
  %v4_10006744 = icmp eq i32 %v1_10006740, %tmp51
  %v1_10006720 = and i32 %tmp53, 1048576
  %v3_10006720 = icmp eq i32 %v1_10006720, 0
  %v1_10006728 = and i32 %tmp53, 262144
  %v3_10006728 = icmp eq i32 %v1_10006728, 0
  %v1_10006730 = and i32 %tmp53, 65536
  %v3_10006730 = icmp eq i32 %v1_10006730, 0
  %v1_10006700 = icmp ult i16 %tmp55, 2323
  %v3_10006700 = icmp eq i16 %tmp55, 2323
  br label %dec_label_pc_1000668c

dec_label_pc_1000668c:                            ; preds = %dec_label_pc_10006738, %dec_label_pc_10006730, %dec_label_pc_10006728, %dec_label_pc_10006708, %dec_label_pc_10006700, %dec_label_pc_100066e4, %dec_label_pc_100066d0, %dec_label_pc_10006720, %dec_label_pc_10006714, %dec_label_pc_100066c8, %dec_label_pc_10007828, %dec_label_pc_10006680
  %v1_10006694 = phi i32 [ %v0_10006680, %dec_label_pc_10006680 ], [ %v1_10006694.pre.pre, %dec_label_pc_10007828 ], [ %v0_100066bc, %dec_label_pc_100066c8 ], [ %v0_100066bc, %dec_label_pc_10006714 ], [ %v0_100066bc, %dec_label_pc_10006720 ], [ %v0_100066bc, %dec_label_pc_100066d0 ], [ %v0_100066bc, %dec_label_pc_100066e4 ], [ %v0_100066bc, %dec_label_pc_10006700 ], [ %v0_100066bc, %dec_label_pc_10006708 ], [ %v0_100066bc, %dec_label_pc_10006728 ], [ %v0_100066bc, %dec_label_pc_10006730 ], [ %v0_100066bc, %dec_label_pc_10006738 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10006694 = inttoptr i32 %v1_10006694 to i32*
  store i32 0, i32* %v2_10006694, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_100066a4 = load i32, i32* @global_var_1001b774.103, align 4
  store i32 %v3_100066a4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268461748, i32* @lr, align 4
  %v6_100066b0 = call i32 @function_10009250(i32 %v3_100066a4, i32 %v2_10006698, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_100066b0, i32* %r3.global-to-local, align 4
  %tmp105 = icmp slt i32 %v6_100066b0, 1
  br i1 %tmp105, label %dec_label_pc_10006900, label %dec_label_pc_100066bc

dec_label_pc_100066bc:                            ; preds = %dec_label_pc_1000668c
  %v0_100066bc = load i32, i32* %r26.global-to-local, align 4
  %v1_100066bc = inttoptr i32 %v0_100066bc to i32*
  %v2_100066bc = load i32, i32* %v1_100066bc, align 4
  store i32 %v2_100066bc, i32* %r0.global-to-local, align 4
  %v1_100066c0 = icmp slt i32 %v2_100066bc, 11
  %v3_100066c0 = icmp eq i32 %v2_100066bc, 11
  store i1 %v1_100066c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c0, label %dec_label_pc_10006900, label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %dec_label_pc_100066bc
  %v1_100066c8 = icmp ult i32 %v6_100066b0, 39
  %v3_100066c8 = icmp eq i32 %v6_100066b0, 39
  store i1 %v1_100066c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c8, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v6_100066b0, 40
  br i1 %tmp106, label %dec_label_pc_1000668c, label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066c8
  %v3_100066d4 = load i32, i32* @global_var_1001b748.16, align 4
  store i32 %v3_100066d4, i32* %r0.global-to-local, align 4
  store i32 %tmp57, i32* %r9.global-to-local, align 4
  %v2_100066dc = icmp slt i32 %tmp57, %v3_100066d4
  %v4_100066dc = icmp eq i32 %tmp57, %v3_100066d4
  store i1 %v2_100066dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100066dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100066dc, label %dec_label_pc_100066e4, label %dec_label_pc_1000668c

dec_label_pc_100066e4:                            ; preds = %dec_label_pc_100066d0
  store i32 %v4_100066e4, i32* %r0.global-to-local, align 4
  store i1 %v1_100066e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e8, label %dec_label_pc_100066f0, label %dec_label_pc_1000668c

dec_label_pc_100066f0:                            ; preds = %dec_label_pc_100066e4
  store i32 %v4_100066f0, i32* %r8.global-to-local, align 4
  store i32 %v4_100066f0, i32* %r0.global-to-local, align 4
  store i1 %v1_100066f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f8, label %dec_label_pc_10006708, label %dec_label_pc_10006700

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066f0
  store i1 %v1_10006700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006700, label %dec_label_pc_10006708, label %dec_label_pc_1000668c

dec_label_pc_10006708:                            ; preds = %dec_label_pc_10006700, %dec_label_pc_100066f0
  store i32 %v4_10006708, i32* %r0.global-to-local, align 4
  %v1_1000670c = load i32, i32* @r22, align 4
  %v2_1000670c = icmp slt i32 %v4_10006708, %v1_1000670c
  %v4_1000670c = icmp eq i32 %v4_10006708, %v1_1000670c
  store i1 %v2_1000670c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000670c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000670c, label %dec_label_pc_10006714, label %dec_label_pc_1000668c

dec_label_pc_10006714:                            ; preds = %dec_label_pc_10006708
  store i32 %tmp53, i32* %r0.global-to-local, align 4
  store i32 %v1_10006718, i32* %r10.global-to-local, align 4
  br i1 %v3_10006718, label %dec_label_pc_1000668c, label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_10006714
  store i32 %v1_10006720, i32* %r11.global-to-local, align 4
  br i1 %v3_10006720, label %dec_label_pc_1000668c, label %dec_label_pc_10006728

dec_label_pc_10006728:                            ; preds = %dec_label_pc_10006720
  store i32 %v1_10006728, i32* %r9.global-to-local, align 4
  br i1 %v3_10006728, label %dec_label_pc_10006730, label %dec_label_pc_1000668c

dec_label_pc_10006730:                            ; preds = %dec_label_pc_10006728
  store i32 %v1_10006730, i32* %r10.global-to-local, align 4
  br i1 %v3_10006730, label %dec_label_pc_10006738, label %dec_label_pc_1000668c

dec_label_pc_10006738:                            ; preds = %dec_label_pc_10006730
  store i32 %tmp52, i32* %r9.global-to-local, align 4
  store i32 %tmp51, i32* %r0.global-to-local, align 4
  store i32 %v1_10006740, i32* %r10.global-to-local, align 4
  store i1 %v2_10006744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006744, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006744, label %dec_label_pc_1000674c, label %dec_label_pc_1000668c

dec_label_pc_1000674c:                            ; preds = %dec_label_pc_10006738
  %v0_1000674c = load i32, i32* @r31, align 4
  %v1_1000674c = icmp slt i32 %v0_1000674c, 255
  %v2_1000674c = icmp sgt i32 %v0_1000674c, 255
  %v3_1000674c = icmp eq i32 %v0_1000674c, 255
  store i1 %v1_1000674c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000674c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000674c, label %dec_label_pc_10006900, label %dec_label_pc_10006754

dec_label_pc_10006754:                            ; preds = %dec_label_pc_1000674c
  %v3_1000675c = load i32, i32* @global_var_1001b770.102, align 4
  store i32 %v3_1000675c, i32* %r11.global-to-local, align 4
  %v1_10006760 = mul i32 %v0_1000674c, 256
  store i32 %v1_10006760, i32* %r9.global-to-local, align 4
  %v2_10006764 = mul i32 %v0_1000674c, 288
  store i32 %v2_10006764, i32* %r0.global-to-local, align 4
  %v2_10006768 = add i32 %v3_1000675c, %v2_10006764
  store i32 %v2_10006768, i32* @r3, align 4
  %v1_1000676c = add i32 %v2_10006768, 12
  %v2_1000676c = inttoptr i32 %v1_1000676c to i32*
  %v3_1000676c = load i32, i32* %v2_1000676c, align 4
  store i32 %v3_1000676c, i32* %r9.global-to-local, align 4
  %v1_10006770 = icmp slt i32 %v3_1000676c, 0
  %v3_10006770 = icmp eq i32 %v3_1000676c, 0
  store i1 %v1_10006770, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006770, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006770, label %dec_label_pc_10007824, label %dec_label_pc_10006778

dec_label_pc_10006778:                            ; preds = %dec_label_pc_10006754
  %v1_10006778 = sub i32 256, %v0_1000674c
  store i32 %v1_10006778, i32* %r11.global-to-local, align 4
  store i32 %v0_1000674c, i32* %r29.global-to-local, align 4
  store i32 %v1_10006778, i32* %ctr.global-to-local, align 4
  %v1_10006784 = add i32 %v2_10006768, 288
  store i32 %v1_10006784, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006788

dec_label_pc_10006788:                            ; preds = %dec_label_pc_10006790, %dec_label_pc_10006778
  %v0_10006790 = phi i32 [ %v1_10006798, %dec_label_pc_10006790 ], [ %v1_10006784, %dec_label_pc_10006778 ]
  %v0_1000678c = phi i32 [ %v1_1000678c, %dec_label_pc_10006790 ], [ %v1_10006778, %dec_label_pc_10006778 ]
  %v0_10006788 = phi i32 [ %v1_10006788, %dec_label_pc_10006790 ], [ %v0_1000674c, %dec_label_pc_10006778 ]
  %v1_10006788 = add i32 %v0_10006788, 1
  store i32 %v1_10006788, i32* @r29, align 4
  %v1_1000678c = add i32 %v0_1000678c, -1
  store i32 %v1_1000678c, i32* %ctr.global-to-local, align 4
  %v2_1000678c = icmp eq i32 %v1_1000678c, 0
  br i1 %v2_1000678c, label %dec_label_pc_10006900, label %dec_label_pc_10006790

dec_label_pc_10006790:                            ; preds = %dec_label_pc_10006788
  %v1_10006790 = add i32 %v0_10006790, 12
  %v2_10006790 = inttoptr i32 %v1_10006790 to i32*
  %v3_10006790 = load i32, i32* %v2_10006790, align 4
  store i32 %v3_10006790, i32* %r0.global-to-local, align 4
  store i32 %v0_10006790, i32* @r3, align 4
  %v1_10006798 = add i32 %v0_10006790, 288
  store i32 %v1_10006798, i32* %r9.global-to-local, align 4
  %v1_1000679c = icmp slt i32 %v3_10006790, 0
  %v3_1000679c = icmp eq i32 %v3_10006790, 0
  store i1 %v1_1000679c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000679c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000679c, label %dec_label_pc_10007828, label %dec_label_pc_10006788

dec_label_pc_10006844:                            ; preds = %dec_label_pc_1000620c, %dec_label_pc_10007814
  %v0_10006848 = call i32 @function_10009db8()
  store i32 %v0_10006848, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000684c

dec_label_pc_1000684c:                            ; preds = %dec_label_pc_100064ec, %dec_label_pc_10006844
  %v0_100065b815 = phi i32 [ %v0_10006848, %dec_label_pc_10006844 ], [ %v1_100064b4, %dec_label_pc_100064ec ]
  %v0_1000684c = load i32, i32* @r9, align 4
  %v1_1000684c = icmp slt i32 %v0_1000684c, 168
  %v3_1000684c = icmp eq i32 %v0_1000684c, 168
  store i1 %v1_1000684c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000684c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000684c, label %dec_label_pc_100064a0.preheader, label %dec_label_pc_1000684c.dec_label_pc_100065ac_crit_edge

dec_label_pc_1000684c.dec_label_pc_100065ac_crit_edge: ; preds = %dec_label_pc_1000684c
  %v0_100065ac.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100065ac

dec_label_pc_10006858:                            ; preds = %dec_label_pc_100064f4
  %v0_10006858 = load i32, i32* @r9, align 4
  %v1_10006858 = icmp ult i32 %v0_10006858, 15
  %v3_10006858 = icmp eq i32 %v0_10006858, 15
  store i1 %v1_10006858, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006858, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_10006858, 16
  br i1 %tmp107, label %dec_label_pc_100065ac, label %dec_label_pc_10006860

dec_label_pc_10006860:                            ; preds = %dec_label_pc_10006858
  %v1_10006860 = icmp ult i32 %v0_10006858, 31
  %v3_10006860 = icmp eq i32 %v0_10006858, 31
  store i1 %v1_10006860, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006860, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10006858, 32
  br i1 %tmp108, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_1000686c:                            ; preds = %dec_label_pc_100064fc
  %v0_1000686c = load i32, i32* @r9, align 4
  %v1_1000686c = icmp ult i32 %v0_1000686c, 63
  %v3_1000686c = icmp eq i32 %v0_1000686c, 63
  store i1 %v1_1000686c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000686c, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_1000686c, 64
  br i1 %tmp109, label %dec_label_pc_100065ac, label %dec_label_pc_10006874

dec_label_pc_10006874:                            ; preds = %dec_label_pc_1000686c
  %v1_10006874 = icmp ult i32 %v0_1000686c, 126
  %v3_10006874 = icmp eq i32 %v0_1000686c, 126
  store i1 %v1_10006874, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006874, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_1000686c, 127
  br i1 %tmp110, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_10006880:                            ; preds = %dec_label_pc_10006504
  %v0_10006880 = load i32, i32* @r9, align 4
  %v1_10006880 = icmp slt i32 %v0_10006880, 255
  %v3_10006880 = icmp eq i32 %v0_10006880, 255
  store i1 %v1_10006880, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006880, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006880, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_1000688c:                            ; preds = %dec_label_pc_1000650c
  %v0_1000688c = load i32, i32* @r9, align 4
  %v1_1000688c = icmp ult i32 %v0_1000688c, 17
  %v3_1000688c = icmp eq i32 %v0_1000688c, 17
  store i1 %v1_1000688c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000688c, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_1000688c, 18
  br i1 %tmp111, label %dec_label_pc_100065ac, label %dec_label_pc_10006894

dec_label_pc_10006894:                            ; preds = %dec_label_pc_1000688c
  %v1_10006894 = icmp eq i32 %v0_1000688c, 18
  %v3_10006894 = icmp eq i32 %v0_1000688c, 19
  store i1 %v1_10006894, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006894, i1* %cr7_eq.global-to-local, align 1
  %tmp112 = icmp ult i32 %v0_1000688c, 20
  br i1 %tmp112, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_100068a0:                            ; preds = %dec_label_pc_1000651c
  %v0_100068a0 = load i32, i32* @r9, align 4
  %v1_100068a0 = icmp slt i32 %v0_100068a0, 186
  %v3_100068a0 = icmp eq i32 %v0_100068a0, 186
  store i1 %v1_100068a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068a0, label %dec_label_pc_100064a0, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_100068a0
  %v1_100068a8 = icmp slt i32 %v0_100068a0, 187
  %v3_100068a8 = icmp eq i32 %v0_100068a0, 187
  store i1 %v1_100068a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068a8, label %dec_label_pc_100064a0, label %dec_label_pc_100068b0

dec_label_pc_100068b0:                            ; preds = %dec_label_pc_100068a8
  %v1_100068b0 = icmp slt i32 %v0_100068a0, 185
  %v3_100068b0 = icmp eq i32 %v0_100068a0, 185
  store i1 %v1_100068b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068b0, label %dec_label_pc_100064a0, label %dec_label_pc_100068b8

dec_label_pc_100068b8:                            ; preds = %dec_label_pc_100068b0
  %v1_100068b8 = icmp slt i32 %v0_100068a0, 184
  %v3_100068b8 = icmp eq i32 %v0_100068a0, 184
  store i1 %v1_100068b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068b8, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_100068c4:                            ; preds = %dec_label_pc_10006524
  %v0_100068c4 = load i32, i32* @r9, align 4
  %v1_100068c4 = icmp slt i32 %v0_100068c4, 31
  %v3_100068c4 = icmp eq i32 %v0_100068c4, 31
  store i1 %v1_100068c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068c4, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_100068d0:                            ; preds = %dec_label_pc_1000652c
  %v0_100068d0 = load i32, i32* @r9, align 4
  %v1_100068d0 = icmp slt i32 %v0_100068d0, 51
  %v3_100068d0 = icmp eq i32 %v0_100068d0, 51
  store i1 %v1_100068d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068d0, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_100068dc:                            ; preds = %dec_label_pc_10006534
  %v0_100068dc = load i32, i32* @r9, align 4
  %v1_100068dc = icmp slt i32 %v0_100068dc, 62
  %v3_100068dc = icmp eq i32 %v0_100068dc, 62
  store i1 %v1_100068dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068dc, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_100068e8:                            ; preds = %dec_label_pc_1000653c
  %v0_100068e8 = load i32, i32* @r9, align 4
  %v1_100068e8 = icmp slt i32 %v0_100068e8, 13
  %v3_100068e8 = icmp eq i32 %v0_100068e8, 13
  store i1 %v1_100068e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068e8, label %dec_label_pc_100064a0, label %dec_label_pc_100065ac

dec_label_pc_10006900:                            ; preds = %dec_label_pc_1000674c, %dec_label_pc_100066bc, %dec_label_pc_1000668c, %dec_label_pc_10006788
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006918133 = load i32, i32* @r1, align 4
  %v3_10006918134 = add i32 %v2_10006918133, 64
  %v4_10006918135 = inttoptr i32 %v3_10006918134 to i32*
  store i32 0, i32* %v4_10006918135, align 4
  %v0_1000691c136 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000691c137 = add i32 %v0_1000691c136, -1
  store i32 %v1_1000691c137, i32* %ctr.global-to-local, align 4
  %v2_1000691c138 = icmp eq i32 %v1_1000691c137, 0
  br i1 %v2_1000691c138, label %dec_label_pc_10006920, label %dec_label_pc_10006910.dec_label_pc_10006910_crit_edge

dec_label_pc_10006910.dec_label_pc_10006910_crit_edge: ; preds = %dec_label_pc_10006900, %dec_label_pc_10006910.dec_label_pc_10006910_crit_edge
  %v0_10006910.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006918.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006910 = add i32 %v0_10006910.pre, 64
  store i32 %v1_10006910, i32* %r11.global-to-local, align 4
  %v1_10006914 = add i32 %v0_10006910.pre, 4
  store i32 %v1_10006914, i32* %r9.global-to-local, align 4
  %v2_10006918 = load i32, i32* @r1, align 4
  %v3_10006918 = add i32 %v2_10006918, %v1_10006910
  %v4_10006918 = inttoptr i32 %v3_10006918 to i32*
  store i32 %v0_10006918.pre, i32* %v4_10006918, align 4
  %v0_1000691c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000691c = add i32 %v0_1000691c, -1
  store i32 %v1_1000691c, i32* %ctr.global-to-local, align 4
  %v2_1000691c = icmp eq i32 %v1_1000691c, 0
  br i1 %v2_1000691c, label %dec_label_pc_10006920, label %dec_label_pc_10006910.dec_label_pc_10006910_crit_edge

dec_label_pc_10006920:                            ; preds = %dec_label_pc_10006910.dec_label_pc_10006910_crit_edge, %dec_label_pc_10006900
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006938127 = load i32, i32* @r1, align 4
  %v3_10006938128 = add i32 %v2_10006938127, 192
  %v4_10006938129 = inttoptr i32 %v3_10006938128 to i32*
  store i32 0, i32* %v4_10006938129, align 4
  %v0_1000693c130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000693c131 = add i32 %v0_1000693c130, -1
  store i32 %v1_1000693c131, i32* %ctr.global-to-local, align 4
  %v2_1000693c132 = icmp eq i32 %v1_1000693c131, 0
  br i1 %v2_1000693c132, label %dec_label_pc_10006940, label %dec_label_pc_10006930.dec_label_pc_10006930_crit_edge

dec_label_pc_10006930.dec_label_pc_10006930_crit_edge: ; preds = %dec_label_pc_10006920, %dec_label_pc_10006930.dec_label_pc_10006930_crit_edge
  %v0_10006930.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006938.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006930 = add i32 %v0_10006930.pre, 192
  store i32 %v1_10006930, i32* %r11.global-to-local, align 4
  %v1_10006934 = add i32 %v0_10006930.pre, 4
  store i32 %v1_10006934, i32* %r9.global-to-local, align 4
  %v2_10006938 = load i32, i32* @r1, align 4
  %v3_10006938 = add i32 %v2_10006938, %v1_10006930
  %v4_10006938 = inttoptr i32 %v3_10006938 to i32*
  store i32 %v0_10006938.pre, i32* %v4_10006938, align 4
  %v0_1000693c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000693c = add i32 %v0_1000693c, -1
  store i32 %v1_1000693c, i32* %ctr.global-to-local, align 4
  %v2_1000693c = icmp eq i32 %v1_1000693c, 0
  br i1 %v2_1000693c, label %dec_label_pc_10006940, label %dec_label_pc_10006930.dec_label_pc_10006930_crit_edge

dec_label_pc_10006940:                            ; preds = %dec_label_pc_10006930.dec_label_pc_10006930_crit_edge, %dec_label_pc_10006920
  %v0_10006940 = load i32, i32* %r0.global-to-local, align 4
  %v5_10006940 = sext i32 %v0_10006940 to i64
  store i64 %v5_10006940, i64* %stack_var_-1916, align 8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v2_10006a74 = ptrtoint i32* %stack_var_-1872 to i32
  %v2_10006a78 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_10006a80 = ptrtoint i32* %stack_var_-1908 to i32
  %v2_1000766c = ptrtoint i32* %stack_var_-1920 to i32
  %v2_10007670 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_100069bc

dec_label_pc_1000695c:                            ; preds = %dec_label_pc_100069bc
  %v3_1000695c = load i32, i32* @global_var_1001b76c.95, align 4
  store i32 %v3_1000695c, i32* %r0.global-to-local, align 4
  %v1_10006960 = add i32 %v2_100069d4, 8
  %v2_10006960 = inttoptr i32 %v1_10006960 to i32*
  %v3_10006960 = load i32, i32* %v2_10006960, align 4
  store i32 %v3_10006960, i32* %r9.global-to-local, align 4
  %v2_10006964 = sub i32 %v3_1000695c, %v3_10006960
  store i32 %v2_10006964, i32* %r0.global-to-local, align 4
  %v2_10006968 = icmp ult i32 %v2_10006964, 30
  %v3_10006968 = icmp ugt i32 %v2_10006964, 30
  %v4_10006968 = icmp eq i32 %v2_10006964, 30
  store i1 %v2_10006968, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006968, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006968, label %dec_label_pc_10006a04, label %dec_label_pc_10006970

dec_label_pc_10006970:                            ; preds = %dec_label_pc_100069ec, %dec_label_pc_1000695c
  %v1_10006970 = icmp slt i32 %v3_100069d8, 1
  store i1 %v1_10006970, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069dc, i1* %cr7_eq.global-to-local, align 1
  %v1_10006bc8 = add i32 %v2_100069d4, 4
  %v2_10006bc8 = inttoptr i32 %v1_10006bc8 to i32*
  %v3_10006bc8 = load i32, i32* %v2_10006bc8, align 4
  store i32 %v3_10006bc8, i32* %r3.global-to-local, align 4
  br i1 %v3_100069dc, label %dec_label_pc_10006bc8, label %dec_label_pc_10006978

dec_label_pc_10006978:                            ; preds = %dec_label_pc_10006970
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006980 = call i32 @__asm_rlwinm(i32 %v3_10006bc8, i32 29, i32 3, i32 29)
  %v0_10006984 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006984 = icmp slt i32 %v0_10006984, %v3_10006bc8
  %v4_10006984 = icmp eq i32 %v0_10006984, %v3_10006bc8
  store i1 %v2_10006984, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006984, i1* %cr7_eq.global-to-local, align 1
  %v1_10006988 = load i32, i32* @r14, align 4
  %v2_10006988 = add i32 %v1_10006988, %v1_10006980
  store i32 %v2_10006988, i32* %r11.global-to-local, align 4
  %v1_1000698c = urem i32 %v3_10006bc8, 32
  store i32 %v1_1000698c, i32* %r10.global-to-local, align 4
  %v1_10006990 = add i32 %v2_10006988, 56
  %v2_10006990 = inttoptr i32 %v1_10006990 to i32*
  %v3_10006990 = load i32, i32* %v2_10006990, align 4
  %v0_10006994 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006994 = shl i32 %v0_10006994, %v1_1000698c
  store i32 %v3_10006994, i32* %r0.global-to-local, align 4
  %v2_10006998 = or i32 %v3_10006994, %v3_10006990
  store i32 %v2_10006998, i32* %r9.global-to-local, align 4
  store i32 %v2_10006998, i32* %v2_10006990, align 4
  br i1 %v2_10006984, label %dec_label_pc_100069a4, label %dec_label_pc_100069a8

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_10006978
  store i32 %v3_10006bc8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100069a8

dec_label_pc_100069a8:                            ; preds = %dec_label_pc_10006bc8, %dec_label_pc_10006978, %dec_label_pc_100069e4, %dec_label_pc_10006bf0, %dec_label_pc_10006bbc, %dec_label_pc_100069a4
  %v3_100069a8 = load i64, i64* %stack_var_-1916, align 8
  %v4_100069a8 = trunc i64 %v3_100069a8 to i32
  store i32 %v4_100069a8, i32* %r9.global-to-local, align 4
  %v1_100069ac = add i32 %v4_100069a8, 1
  store i32 %v1_100069ac, i32* %r0.global-to-local, align 4
  %v1_100069b0 = icmp slt i32 %v1_100069ac, 255
  %v2_100069b0 = icmp sgt i32 %v1_100069ac, 255
  %v3_100069b0 = icmp eq i32 %v1_100069ac, 255
  store i1 %v1_100069b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069b0, i1* %cr7_eq.global-to-local, align 1
  %v5_100069b4 = sext i32 %v1_100069ac to i64
  store i64 %v5_100069b4, i64* %stack_var_-1916, align 8
  br i1 %v2_100069b0, label %dec_label_pc_10006a54, label %dec_label_pc_100069bc

dec_label_pc_100069bc:                            ; preds = %dec_label_pc_10006a38, %dec_label_pc_100069a8, %dec_label_pc_10006940
  %v0_100069c0 = phi i32 [ 0, %dec_label_pc_10006940 ], [ %v1_100069ac, %dec_label_pc_100069a8 ], [ %v1_10006a44, %dec_label_pc_10006a38 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_100069c4 = load i32, i32* @global_var_1001b770.102, align 4
  store i32 %v3_100069c4, i32* %r9.global-to-local, align 4
  %v2_100069cc = mul i32 %v0_100069c0, 288
  store i32 %v2_100069cc, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_100069d4 = add i32 %v3_100069c4, %v2_100069cc
  store i32 %v2_100069d4, i32* @r29, align 4
  %v1_100069d8 = add i32 %v2_100069d4, 12
  %v2_100069d8 = inttoptr i32 %v1_100069d8 to i32*
  %v3_100069d8 = load i32, i32* %v2_100069d8, align 4
  store i32 %v3_100069d8, i32* %r10.global-to-local, align 4
  %v1_100069dc = icmp eq i32 %v3_100069d8, 0
  %v2_100069dc = icmp ugt i32 %v3_100069d8, 1
  %v3_100069dc = icmp eq i32 %v3_100069d8, 1
  store i1 %v1_100069dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100069dc, label %dec_label_pc_1000695c, label %dec_label_pc_100069e4

dec_label_pc_100069e4:                            ; preds = %dec_label_pc_100069bc
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_100069dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100069dc, label %dec_label_pc_100069a8, label %dec_label_pc_100069ec

dec_label_pc_100069ec:                            ; preds = %dec_label_pc_100069e4
  %v3_100069ec = load i32, i32* @global_var_1001b76c.95, align 4
  store i32 %v3_100069ec, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_100069f4 = add i32 %v2_100069d4, 8
  %v2_100069f4 = inttoptr i32 %v1_100069f4 to i32*
  %v3_100069f4 = load i32, i32* %v2_100069f4, align 4
  store i32 %v3_100069f4, i32* %r9.global-to-local, align 4
  %v2_100069f8 = sub i32 %v3_100069ec, %v3_100069f4
  store i32 %v2_100069f8, i32* %r0.global-to-local, align 4
  %v2_100069fc = icmp ult i32 %v2_100069f8, 5
  %v3_100069fc = icmp ugt i32 %v2_100069f8, 5
  %v4_100069fc = icmp eq i32 %v2_100069f8, 5
  store i1 %v2_100069fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100069fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100069fc, label %dec_label_pc_10006a04, label %dec_label_pc_10006970

dec_label_pc_10006a04:                            ; preds = %dec_label_pc_100069ec, %dec_label_pc_1000695c
  %v1_10006a04 = add i32 %v2_100069d4, 4
  %v2_10006a04 = inttoptr i32 %v1_10006a04 to i32*
  %v3_10006a04 = load i32, i32* %v2_10006a04, align 4
  store i32 %v3_10006a04, i32* %r3.global-to-local, align 4
  store i32 268462604, i32* @lr, align 4
  %v0_10006a08 = call i32 @function_10008628()
  store i32 %v0_10006a08, i32* %r3.global-to-local, align 4
  %v0_10006a0c = load i32, i32* @r29, align 4
  %v1_10006a0c = add i32 %v0_10006a0c, 12
  %v2_10006a0c = inttoptr i32 %v1_10006a0c to i32*
  %v3_10006a0c = load i32, i32* %v2_10006a0c, align 4
  store i32 %v3_10006a0c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006a14 = icmp ult i32 %v3_10006a0c, 2
  %v3_10006a14 = icmp eq i32 %v3_10006a0c, 2
  store i1 %v1_10006a14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a14, i1* %cr7_eq.global-to-local, align 1
  %v2_10006a18 = add i32 %v0_10006a0c, 4
  %v3_10006a18 = inttoptr i32 %v2_10006a18 to i32*
  store i32 -1, i32* %v3_10006a18, align 4
  %tmp114 = icmp ult i32 %v3_10006a0c, 3
  br i1 %tmp114, label %dec_label_pc_10006bbc, label %dec_label_pc_10006a20

dec_label_pc_10006a20:                            ; preds = %dec_label_pc_10006a04
  %v0_10006a20 = load i32, i32* @r29, align 4
  %v1_10006a20 = add i32 %v0_10006a20, 284
  %v2_10006a20 = inttoptr i32 %v1_10006a20 to i8*
  %v3_10006a20 = load i8, i8* %v2_10006a20, align 1
  %v4_10006a20 = zext i8 %v3_10006a20 to i32
  %v1_10006a24 = add nuw nsw i32 %v4_10006a20, 1
  %v1_10006a28 = urem i32 %v1_10006a24, 256
  store i32 %v1_10006a28, i32* %r9.global-to-local, align 4
  %v1_10006a2c = icmp ult i32 %v1_10006a28, 10
  %v3_10006a2c = icmp eq i32 %v1_10006a28, 10
  store i1 %v1_10006a2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a2c, i1* %cr7_eq.global-to-local, align 1
  %v1_10006a30 = trunc i32 %v1_10006a24 to i8
  store i8 %v1_10006a30, i8* %v2_10006a20, align 1
  %v0_10006a34 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006a34, label %dec_label_pc_10006bbc, label %dec_label_pc_10006a38

dec_label_pc_10006a38:                            ; preds = %dec_label_pc_10006a20
  %v0_10006a38 = load i32, i32* @r29, align 4
  store i32 %v0_10006a38, i32* @r3, align 4
  store i32 268462656, i32* @lr, align 4
  %v0_10006a3c = call i32 @function_10005e18()
  store i32 %v0_10006a3c, i32* %r3.global-to-local, align 4
  %v3_10006a40 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006a40 = trunc i64 %v3_10006a40 to i32
  store i32 %v4_10006a40, i32* %r9.global-to-local, align 4
  %v1_10006a44 = add i32 %v4_10006a40, 1
  store i32 %v1_10006a44, i32* %r0.global-to-local, align 4
  %v1_10006a48 = icmp slt i32 %v1_10006a44, 255
  %v3_10006a48 = icmp eq i32 %v1_10006a44, 255
  store i1 %v1_10006a48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a48, i1* %cr7_eq.global-to-local, align 1
  %v5_10006a4c = sext i32 %v1_10006a44 to i64
  store i64 %v5_10006a4c, i64* %stack_var_-1916, align 8
  %tmp115 = icmp slt i32 %v1_10006a44, 256
  br i1 %tmp115, label %dec_label_pc_100069bc, label %dec_label_pc_10006a54

dec_label_pc_10006a54:                            ; preds = %dec_label_pc_10006a38, %dec_label_pc_100069a8
  %v0_10006a54 = load i32, i32* %r30.global-to-local, align 4
  %v1_10006a54 = load i32, i32* @r31, align 4
  %v2_10006a54 = icmp slt i32 %v0_10006a54, %v1_10006a54
  %v4_10006a54 = icmp eq i32 %v0_10006a54, %v1_10006a54
  store i1 %v2_10006a54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006a54, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10006a54, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10006a54, label %dec_label_pc_10006a70, label %dec_label_pc_10006a74

dec_label_pc_10006a70:                            ; preds = %dec_label_pc_10006a54
  store i32 %v1_10006a54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006a74

dec_label_pc_10006a74:                            ; preds = %dec_label_pc_10006a54, %dec_label_pc_10006a70
  %v0_10006a84 = phi i32 [ %v0_10006a54, %dec_label_pc_10006a54 ], [ %v1_10006a54, %dec_label_pc_10006a70 ]
  store i32 %v2_10006a78, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_10006a80, i32* %r7.global-to-local, align 4
  %v1_10006a84 = add i32 %v0_10006a84, 1
  store i32 %v1_10006a84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006a8c.134 to i32), i32* @lr, align 4
  %v5_10006a88 = call i32 @function_100088f0(i32 %v1_10006a84, i32 %v2_10006a74, i32 %v2_10006a78, i32 0, i32 %v2_10006a80)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006a94.135 to i32), i32* @lr, align 4
  %v0_10006a90 = call i32 @function_100089f8()
  store i32 %v0_10006a90, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006a90, i32* @global_var_1001b76c.95, align 4
  %v0_10006a9c = load i32, i32* %r30.global-to-local, align 4
  %v5_10006a9c = sext i32 %v0_10006a9c to i64
  store i64 %v5_10006a9c, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_10006ab8

dec_label_pc_10006aa4:                            ; preds = %dec_label_pc_10006b14, %dec_label_pc_10007534, %dec_label_pc_10006af8, %dec_label_pc_10006ab8, %dec_label_pc_100077e8, %dec_label_pc_1000771c, %dec_label_pc_10007568
  %v3_10006aa4 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006aa4 = trunc i64 %v3_10006aa4 to i32
  store i32 %v4_10006aa4, i32* %r9.global-to-local, align 4
  %v1_10006aa8 = add i32 %v4_10006aa4, 1
  store i32 %v1_10006aa8, i32* %r0.global-to-local, align 4
  %v1_10006aac = icmp slt i32 %v1_10006aa8, 255
  %v2_10006aac = icmp sgt i32 %v1_10006aa8, 255
  %v3_10006aac = icmp eq i32 %v1_10006aa8, 255
  store i1 %v1_10006aac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006aac, i1* %cr7_eq.global-to-local, align 1
  %v5_10006ab0 = sext i32 %v1_10006aa8 to i64
  store i64 %v5_10006ab0, i64* %stack_var_-1916, align 8
  br i1 %v2_10006aac, label %dec_label_pc_1000645c, label %dec_label_pc_10006ab8

dec_label_pc_10006ab8:                            ; preds = %dec_label_pc_10006aa4, %dec_label_pc_10006a74
  %v0_10006abc = phi i32 [ %v1_10006aa8, %dec_label_pc_10006aa4 ], [ 0, %dec_label_pc_10006a74 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10006abc = mul i32 %v0_10006abc, 256
  store i32 %v1_10006abc, i32* %r11.global-to-local, align 4
  %v3_10006ac0 = load i32, i32* @global_var_1001b770.102, align 4
  store i32 %v3_10006ac0, i32* %r9.global-to-local, align 4
  %v2_10006ac8 = mul i32 %v0_10006abc, 288
  store i32 %v2_10006ac8, i32* %r0.global-to-local, align 4
  %v2_10006acc = add i32 %v3_10006ac0, %v2_10006ac8
  store i32 %v2_10006acc, i32* %r28.global-to-local, align 4
  %v1_10006ad0 = add i32 %v2_10006acc, 4
  %v2_10006ad0 = inttoptr i32 %v1_10006ad0 to i32*
  %v3_10006ad0 = load i32, i32* %v2_10006ad0, align 4
  store i32 %v3_10006ad0, i32* %r3.global-to-local, align 4
  %v1_10006ad4 = icmp slt i32 %v3_10006ad0, -1
  %v3_10006ad4 = icmp eq i32 %v3_10006ad0, -1
  store i1 %v1_10006ad4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ad4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ad4, label %dec_label_pc_10006aa4, label %dec_label_pc_10006adc

dec_label_pc_10006adc:                            ; preds = %dec_label_pc_10006ab8
  %v1_10006adc = call i32 @__asm_rlwinm(i32 %v3_10006ad0, i32 29, i32 3, i32 29)
  %v0_10006ae0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006ae0 = urem i32 %v0_10006ae0, 32
  store i32 %v1_10006ae0, i32* %r11.global-to-local, align 4
  %v1_10006ae4 = load i32, i32* @r14, align 4
  %v2_10006ae4 = add i32 %v1_10006ae4, %v1_10006adc
  store i32 %v2_10006ae4, i32* %r9.global-to-local, align 4
  %v1_10006ae8 = add i32 %v2_10006ae4, 184
  %v2_10006ae8 = inttoptr i32 %v1_10006ae8 to i32*
  %v3_10006ae8 = load i32, i32* %v2_10006ae8, align 4
  %v3_10006aec = lshr i32 %v3_10006ae8, %v1_10006ae0
  store i32 %v3_10006aec, i32* %r0.global-to-local, align 4
  %v1_10006af0 = urem i32 %v3_10006aec, 2
  store i32 %v1_10006af0, i32* %r11.global-to-local, align 4
  %v3_10006af0 = icmp eq i32 %v1_10006af0, 0
  br i1 %v3_10006af0, label %dec_label_pc_10006af8, label %dec_label_pc_1000765c

dec_label_pc_10006af8:                            ; preds = %dec_label_pc_10006adc, %dec_label_pc_100076f4
  %v0_10006af8 = phi i32 [ %v0_10006ae0, %dec_label_pc_10006adc ], [ %v0_10006af8.pre, %dec_label_pc_100076f4 ]
  %v1_10006af8 = call i32 @__asm_rlwinm(i32 %v0_10006af8, i32 29, i32 3, i32 29)
  %v0_10006afc = load i32, i32* %r3.global-to-local, align 4
  %v1_10006afc = urem i32 %v0_10006afc, 32
  store i32 %v1_10006afc, i32* %r11.global-to-local, align 4
  %v1_10006b00 = load i32, i32* @r14, align 4
  %v2_10006b00 = add i32 %v1_10006b00, %v1_10006af8
  store i32 %v2_10006b00, i32* %r9.global-to-local, align 4
  %v1_10006b04 = add i32 %v2_10006b00, 56
  %v2_10006b04 = inttoptr i32 %v1_10006b04 to i32*
  %v3_10006b04 = load i32, i32* %v2_10006b04, align 4
  %v3_10006b08 = lshr i32 %v3_10006b04, %v1_10006afc
  store i32 %v3_10006b08, i32* %r0.global-to-local, align 4
  %v1_10006b0c = urem i32 %v3_10006b08, 2
  store i32 %v1_10006b0c, i32* %r9.global-to-local, align 4
  %v3_10006b0c = icmp eq i32 %v1_10006b0c, 0
  br i1 %v3_10006b0c, label %dec_label_pc_10006aa4, label %dec_label_pc_10006b14.preheader

dec_label_pc_10006b14.preheader:                  ; preds = %dec_label_pc_10006af8
  %v0_10006b14.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006b14

dec_label_pc_10006b14:                            ; preds = %dec_label_pc_10006b14.preheader, %dec_label_pc_10006b80
  %v0_10007584 = phi i32 [ %v0_10006b14.pre, %dec_label_pc_10006b14.preheader ], [ %v0_10006b94, %dec_label_pc_10006b80 ]
  %v1_10006b14 = add i32 %v0_10007584, 12
  %v2_10006b14 = inttoptr i32 %v1_10006b14 to i32*
  %v3_10006b14 = load i32, i32* %v2_10006b14, align 4
  store i32 %v3_10006b14, i32* %r10.global-to-local, align 4
  %v1_10006b18 = icmp slt i32 %v3_10006b14, 0
  %v3_10006b18 = icmp eq i32 %v3_10006b14, 0
  store i1 %v1_10006b18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b18, label %dec_label_pc_10006aa4, label %dec_label_pc_10006b20

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006b14
  %v1_10006b20 = add i32 %v0_10007584, 24
  %v2_10006b20 = inttoptr i32 %v1_10006b20 to i32*
  %v3_10006b20 = load i32, i32* %v2_10006b20, align 4
  store i32 %v3_10006b20, i32* %r0.global-to-local, align 4
  %v1_10006b24 = add i32 %v0_10007584, 28
  store i32 %v1_10006b24, i32* %r30.global-to-local, align 4
  %v1_10006b28 = icmp slt i32 %v3_10006b20, 256
  %v3_10006b28 = icmp eq i32 %v3_10006b20, 256
  store i1 %v1_10006b28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b28, label %dec_label_pc_1000757c, label %dec_label_pc_10006b30

dec_label_pc_10006b30:                            ; preds = %dec_label_pc_10006b20, %dec_label_pc_1000757c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006b38 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006b38 = inttoptr i32 %v1_10006b38 to i32*
  store i32 0, i32* %v2_10006b38, align 4
  %v0_10006b3c = load i32, i32* %r28.global-to-local, align 4
  %v1_10006b3c = add i32 %v0_10006b3c, 24
  %v2_10006b3c = inttoptr i32 %v1_10006b3c to i32*
  %v3_10006b3c = load i32, i32* %v2_10006b3c, align 4
  store i32 %v3_10006b3c, i32* %r5.global-to-local, align 4
  %v1_10006b40 = add i32 %v0_10006b3c, 4
  %v2_10006b40 = inttoptr i32 %v1_10006b40 to i32*
  %v3_10006b40 = load i32, i32* %v2_10006b40, align 4
  store i32 %v3_10006b40, i32* %r3.global-to-local, align 4
  %v0_10006b44 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006b44 = add i32 %v0_10006b44, %v3_10006b3c
  store i32 %v2_10006b44, i32* @r29, align 4
  %v1_10006b48 = sub i32 256, %v3_10006b3c
  store i32 %v1_10006b48, i32* %r5.global-to-local, align 4
  store i32 268462932, i32* @lr, align 4
  %v4_10006b50 = call i32 @function_10009218(i32 %v3_10006b40, i32 %v2_10006b44, i32 %v1_10006b48, i32 16384)
  store i32 %v4_10006b50, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_10006b50, 1
  br i1 %tmp117, label %dec_label_pc_10007528, label %dec_label_pc_10006b5c

dec_label_pc_10006b5c:                            ; preds = %dec_label_pc_10006b30
  store i32 %v4_10006b50, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006b68

dec_label_pc_10006b68:                            ; preds = %dec_label_pc_10006b78, %dec_label_pc_10006b5c
  %v0_10006b7c39 = phi i32 [ %v1_10006b7c, %dec_label_pc_10006b78 ], [ %v4_10006b50, %dec_label_pc_10006b5c ]
  %v1_10006b74 = phi i32 [ %v1_10006b78, %dec_label_pc_10006b78 ], [ 0, %dec_label_pc_10006b5c ]
  %v1_10006b68 = load i32, i32* @r29, align 4
  %v2_10006b68 = add i32 %v1_10006b68, %v1_10006b74
  %v3_10006b68 = inttoptr i32 %v2_10006b68 to i8*
  %v4_10006b68 = load i8, i8* %v3_10006b68, align 1
  %v5_10006b68 = zext i8 %v4_10006b68 to i32
  store i32 %v5_10006b68, i32* %r0.global-to-local, align 4
  %v3_10006b6c = icmp eq i8 %v4_10006b68, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b6c, label %dec_label_pc_10006b74, label %dec_label_pc_10006b78

dec_label_pc_10006b74:                            ; preds = %dec_label_pc_10006b68
  %v0_10006b74 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006b74 = trunc i32 %v0_10006b74 to i8
  store i8 %v3_10006b74, i8* %v3_10006b68, align 1
  %v0_10006b78.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006b7c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006b78

dec_label_pc_10006b78:                            ; preds = %dec_label_pc_10006b68, %dec_label_pc_10006b74
  %v0_10006b7c = phi i32 [ %v0_10006b7c39, %dec_label_pc_10006b68 ], [ %v0_10006b7c.pre, %dec_label_pc_10006b74 ]
  %v0_10006b78 = phi i32 [ %v1_10006b74, %dec_label_pc_10006b68 ], [ %v0_10006b78.pre, %dec_label_pc_10006b74 ]
  %v1_10006b78 = add i32 %v0_10006b78, 1
  store i32 %v1_10006b78, i32* %r9.global-to-local, align 4
  %v1_10006b7c = add i32 %v0_10006b7c, -1
  store i32 %v1_10006b7c, i32* %ctr.global-to-local, align 4
  %v2_10006b7c = icmp eq i32 %v1_10006b7c, 0
  br i1 %v2_10006b7c, label %dec_label_pc_10006b80, label %dec_label_pc_10006b68

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_10006b78, %dec_label_pc_1000752c
  %v0_10006b80 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006b80 = add i32 %v0_10006b80, 24
  %v2_10006b80 = inttoptr i32 %v1_10006b80 to i32*
  %v3_10006b80 = load i32, i32* %v2_10006b80, align 4
  %v3_10006b84 = load i32, i32* @global_var_1001b76c.95, align 4
  store i32 %v3_10006b84, i32* %r0.global-to-local, align 4
  %v2_10006b88 = add i32 %v3_10006b80, %v4_10006b50
  store i32 %v2_10006b88, i32* %r5.global-to-local, align 4
  store i32 %v2_10006b88, i32* %v2_10006b80, align 4
  %v0_10006b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006b90 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006b90 = add i32 %v1_10006b90, 8
  %v3_10006b90 = inttoptr i32 %v2_10006b90 to i32*
  store i32 %v0_10006b90, i32* %v3_10006b90, align 4
  %v0_10006b94 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006b94 = add i32 %v0_10006b94, 12
  %v2_10006b94 = inttoptr i32 %v1_10006b94 to i32*
  %v3_10006b94 = load i32, i32* %v2_10006b94, align 4
  store i32 %v3_10006b94, i32* %r10.global-to-local, align 4
  %v1_10006b98 = icmp ult i32 %v3_10006b94, 10
  %v2_10006b98 = icmp ugt i32 %v3_10006b94, 10
  %v3_10006b98 = icmp eq i32 %v3_10006b94, 10
  store i1 %v1_10006b98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006b98, label %dec_label_pc_10006b14, label %dec_label_pc_10006ba0

dec_label_pc_10006ba0:                            ; preds = %dec_label_pc_10006b80
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10006ba4 = mul i32 %v3_10006b94, 4
  store i32 %v1_10006ba4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b0d0.136 to i32), i32* %r11.global-to-local, align 4
  %v2_10006bac = add i32 %v1_10006ba4, ptrtoint (i32* @global_var_1000b0d0.136 to i32)
  %v3_10006bac = inttoptr i32 %v2_10006bac to i32*
  %v4_10006bac = load i32, i32* %v3_10006bac, align 4
  %v2_10006bb0 = add i32 %v4_10006bac, ptrtoint (i32* @global_var_1000b0d0.136 to i32)
  store i32 %v2_10006bb0, i32* %r9.global-to-local, align 4
  store i32 %v2_10006bb0, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10006bb0)
  br label %dec_label_pc_10006bbc

dec_label_pc_10006bbc:                            ; preds = %dec_label_pc_10006a20, %dec_label_pc_10006a04, %dec_label_pc_10006ba0
  %v0_10006bbc = load i32, i32* %r27.global-to-local, align 4
  %v1_10006bbc = load i32, i32* @r29, align 4
  %v2_10006bbc = add i32 %v1_10006bbc, 12
  %v3_10006bbc = inttoptr i32 %v2_10006bbc to i32*
  store i32 %v0_10006bbc, i32* %v3_10006bbc, align 4
  %v0_10006bc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006bc0 = trunc i32 %v0_10006bc0 to i8
  %v2_10006bc0 = load i32, i32* @r29, align 4
  %v3_10006bc0 = add i32 %v2_10006bc0, 284
  %v4_10006bc0 = inttoptr i32 %v3_10006bc0 to i8*
  store i8 %v1_10006bc0, i8* %v4_10006bc0, align 1
  br label %dec_label_pc_100069a8

dec_label_pc_10006bc8:                            ; preds = %dec_label_pc_10006970
  %v1_10006bcc = call i32 @__asm_rlwinm(i32 %v3_10006bc8, i32 29, i32 3, i32 29)
  %v0_10006bd0 = load i32, i32* @r31, align 4
  %v2_10006bd0 = icmp slt i32 %v0_10006bd0, %v3_10006bc8
  %v4_10006bd0 = icmp eq i32 %v0_10006bd0, %v3_10006bc8
  store i1 %v2_10006bd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006bd0, i1* %cr7_eq.global-to-local, align 1
  %v1_10006bd4 = load i32, i32* @r14, align 4
  %v2_10006bd4 = add i32 %v1_10006bd4, %v1_10006bcc
  store i32 %v2_10006bd4, i32* %r11.global-to-local, align 4
  %v1_10006bd8 = urem i32 %v3_10006bc8, 32
  store i32 %v1_10006bd8, i32* %r0.global-to-local, align 4
  %v1_10006bdc = add i32 %v2_10006bd4, 184
  %v2_10006bdc = inttoptr i32 %v1_10006bdc to i32*
  %v3_10006bdc = load i32, i32* %v2_10006bdc, align 4
  %v0_10006be0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10006be0 = shl i32 %v0_10006be0, %v1_10006bd8
  store i32 %v3_10006be0, i32* %r0.global-to-local, align 4
  %v2_10006be4 = or i32 %v3_10006be0, %v3_10006bdc
  store i32 %v2_10006be4, i32* %r9.global-to-local, align 4
  store i32 %v2_10006be4, i32* %v2_10006bdc, align 4
  br i1 %v2_10006bd0, label %dec_label_pc_10006bf0, label %dec_label_pc_100069a8

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006bc8
  store i32 %v3_10006bc8, i32* @r31, align 4
  br label %dec_label_pc_100069a8

dec_label_pc_10007528:                            ; preds = %dec_label_pc_10006b30
  %v3_10006b54 = icmp eq i32 %v4_10006b50, 0
  br i1 %v3_10006b54, label %dec_label_pc_1000773c, label %dec_label_pc_1000752c

dec_label_pc_1000752c:                            ; preds = %dec_label_pc_10007528
  %v1_1000752c = icmp slt i32 %v4_10006b50, -1
  %v3_1000752c = icmp eq i32 %v4_10006b50, -1
  store i1 %v1_1000752c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000752c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000752c, label %dec_label_pc_10007534, label %dec_label_pc_10006b80

dec_label_pc_10007534:                            ; preds = %dec_label_pc_1000752c
  %v0_10007534 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007534 = inttoptr i32 %v0_10007534 to i32*
  %v2_10007534 = load i32, i32* %v1_10007534, align 4
  store i32 %v2_10007534, i32* %r0.global-to-local, align 4
  %v1_10007538 = icmp slt i32 %v2_10007534, 11
  %v3_10007538 = icmp eq i32 %v2_10007534, 11
  store i1 %v1_10007538, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007538, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007538, label %dec_label_pc_10006aa4, label %dec_label_pc_10007540

dec_label_pc_10007540:                            ; preds = %dec_label_pc_10007534, %dec_label_pc_1000773c
  %v0_10007540 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007540 = add i32 %v0_10007540, 4
  %v2_10007540 = inttoptr i32 %v1_10007540 to i32*
  %v3_10007540 = load i32, i32* %v2_10007540, align 4
  store i32 %v3_10007540, i32* %r3.global-to-local, align 4
  store i32 268465480, i32* @lr, align 4
  %v0_10007544 = call i32 @function_10008628()
  store i32 %v0_10007544, i32* %r3.global-to-local, align 4
  %v0_10007548 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007548 = add i32 %v0_10007548, 284
  %v2_10007548 = inttoptr i32 %v1_10007548 to i8*
  %v3_10007548 = load i8, i8* %v2_10007548, align 1
  %v4_10007548 = zext i8 %v3_10007548 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007550 = add nuw nsw i32 %v4_10007548, 1
  store i32 %v1_10007550, i32* %r9.global-to-local, align 4
  %v2_10007554 = add i32 %v0_10007548, 4
  %v3_10007554 = inttoptr i32 %v2_10007554 to i32*
  store i32 -1, i32* %v3_10007554, align 4
  %v0_10007558 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007558 = urem i32 %v0_10007558, 256
  store i32 %v1_10007558, i32* %r9.global-to-local, align 4
  %v1_1000755c = icmp ult i32 %v1_10007558, 9
  %v3_1000755c = icmp eq i32 %v1_10007558, 9
  store i1 %v1_1000755c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000755c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007560 = trunc i32 %v0_10007558 to i8
  %v2_10007560 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007560 = add i32 %v2_10007560, 284
  %v4_10007560 = inttoptr i32 %v3_10007560 to i8*
  store i8 %v1_10007560, i8* %v4_10007560, align 1
  %v0_10007564 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007564 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007564 = or i1 %v0_10007564, %v1_10007564
  br i1 %v2_10007564, label %dec_label_pc_100077e8, label %dec_label_pc_10007568

dec_label_pc_10007568:                            ; preds = %dec_label_pc_10007540
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007570 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007570 = add i32 %v1_10007570, 12
  %v3_10007570 = inttoptr i32 %v2_10007570 to i32*
  store i32 0, i32* %v3_10007570, align 4
  %v0_10007574 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007574 = trunc i32 %v0_10007574 to i8
  %v2_10007574 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007574 = add i32 %v2_10007574, 284
  %v4_10007574 = inttoptr i32 %v3_10007574 to i8*
  store i8 %v1_10007574, i8* %v4_10007574, align 1
  br label %dec_label_pc_10006aa4

dec_label_pc_1000757c:                            ; preds = %dec_label_pc_10006b20
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10006b24, i32* %r3.global-to-local, align 4
  %v1_10007584 = add i32 %v0_10007584, 92
  store i32 268465548, i32* @lr, align 4
  %v3_10007588 = call i32 @function_10008d88(i32 %v1_10006b24, i32 %v1_10007584, i32 192)
  store i32 %v3_10007588, i32* %r3.global-to-local, align 4
  %v0_1000758c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000758c = add i32 %v0_1000758c, 24
  %v2_1000758c = inttoptr i32 %v1_1000758c to i32*
  %v3_1000758c = load i32, i32* %v2_1000758c, align 4
  store i32 %v3_1000758c, i32* %r9.global-to-local, align 4
  %v1_10007590 = add i32 %v3_1000758c, -64
  store i32 %v1_10007590, i32* %r5.global-to-local, align 4
  store i32 %v1_10007590, i32* %v2_1000758c, align 4
  br label %dec_label_pc_10006b30

dec_label_pc_1000765c:                            ; preds = %dec_label_pc_10006adc
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_1000766c, i32* %r6.global-to-local, align 4
  store i32 %v2_10007670, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268465792, i32* @lr, align 4
  %v5_1000767c = call i32 @function_100091ac(i32 1, i32 4, i32 %v2_1000766c, i32 %v2_10007670, i32 %v2_10006ae4)
  store i32 %v5_1000767c, i32* %r3.global-to-local, align 4
  %v3_10007680 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10007680, i32* %r0.global-to-local, align 4
  %v2_10007684 = or i32 %v3_10007680, %v5_1000767c
  store i32 %v2_10007684, i32* %r9.global-to-local, align 4
  %v5_10007684 = icmp eq i32 %v2_10007684, 0
  br i1 %v5_10007684, label %dec_label_pc_1000768c, label %dec_label_pc_1000771c

dec_label_pc_1000768c:                            ; preds = %dec_label_pc_1000765c
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10007690 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007690 = add i32 %v1_10007690, 12
  %v3_10007690 = inttoptr i32 %v2_10007690 to i32*
  store i32 2, i32* %v3_10007690, align 4
  %v0_10007694 = call i32 @function_10005b38()
  %v3_1000769c = load i16, i16* @global_var_1001b768.98, align 2
  %v4_1000769c = zext i16 %v3_1000769c to i32
  store i32 %v4_1000769c, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100076a4 = load i32, i32* @global_var_1001b760.96, align 4
  store i32 %v3_100076a4, i32* %r10.global-to-local, align 4
  %v1_100076ac = icmp slt i32 %v3_100076a4, 0
  %v3_100076ac = icmp eq i32 %v3_100076a4, 0
  store i1 %v1_100076ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100076ac, i1* %cr7_eq.global-to-local, align 1
  %v2_100076a8 = urem i32 %v0_10007694, %v4_1000769c
  %v2_100076b0 = sub i32 %v0_10007694, %v2_100076a8
  store i32 %v2_100076b0, i32* %r0.global-to-local, align 4
  store i32 %v2_100076a8, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_100076a4, 1
  br i1 %tmp119, label %dec_label_pc_100076f0, label %dec_label_pc_100076c0

dec_label_pc_100076c0:                            ; preds = %dec_label_pc_1000768c
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_100076a4, i32* %ctr.global-to-local, align 4
  %v3_100076c8 = load i32, i32* @global_var_1001b764.97, align 4
  store i32 %v3_100076c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100076cc

dec_label_pc_100076cc:                            ; preds = %dec_label_pc_100076e8, %dec_label_pc_100076c0
  %v0_100076ec = phi i32 [ %v1_100076ec, %dec_label_pc_100076e8 ], [ %v3_100076a4, %dec_label_pc_100076c0 ]
  %v0_100076e8 = phi i32 [ %v1_100076e8, %dec_label_pc_100076e8 ], [ %v3_100076c8, %dec_label_pc_100076c0 ]
  store i32 %v0_100076e8, i32* %r9.global-to-local, align 4
  %v1_100076d0 = add i32 %v0_100076e8, 8
  %v2_100076d0 = inttoptr i32 %v1_100076d0 to i16*
  %v3_100076d0 = load i16, i16* %v2_100076d0, align 2
  %v4_100076d0 = zext i16 %v3_100076d0 to i32
  store i32 %v4_100076d0, i32* %r0.global-to-local, align 4
  %v2_100076d4 = icmp ult i32 %v4_100076d0, %v2_100076a8
  %v3_100076d4 = icmp ugt i32 %v4_100076d0, %v2_100076a8
  %v4_100076d4 = icmp eq i32 %v4_100076d0, %v2_100076a8
  br i1 %v3_100076d4, label %dec_label_pc_100076e8, label %dec_label_pc_100076dc

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_100076cc
  %v1_100076dc = add i32 %v0_100076e8, 10
  %v2_100076dc = inttoptr i32 %v1_100076dc to i16*
  %v3_100076dc = load i16, i16* %v2_100076dc, align 2
  %v4_100076dc = zext i16 %v3_100076dc to i32
  store i32 %v4_100076dc, i32* %r0.global-to-local, align 4
  %v2_100076e0 = icmp ult i32 %v4_100076dc, %v2_100076a8
  %v3_100076e0 = icmp ugt i32 %v4_100076dc, %v2_100076a8
  %v4_100076e0 = icmp eq i32 %v4_100076dc, %v2_100076a8
  br i1 %v3_100076e0, label %dec_label_pc_100076f4.loopexit, label %dec_label_pc_100076e8

dec_label_pc_100076e8:                            ; preds = %dec_label_pc_100076dc, %dec_label_pc_100076cc
  %v4_100076e07 = phi i1 [ %v4_100076e0, %dec_label_pc_100076dc ], [ %v4_100076d4, %dec_label_pc_100076cc ]
  %v2_100076e05 = phi i1 [ %v2_100076e0, %dec_label_pc_100076dc ], [ %v2_100076d4, %dec_label_pc_100076cc ]
  %v1_100076e8 = add i32 %v0_100076e8, 16
  store i32 %v1_100076e8, i32* %r0.global-to-local, align 4
  %v1_100076ec = add i32 %v0_100076ec, -1
  store i32 %v1_100076ec, i32* %ctr.global-to-local, align 4
  %v2_100076ec = icmp eq i32 %v1_100076ec, 0
  br i1 %v2_100076ec, label %dec_label_pc_100076f0.loopexit, label %dec_label_pc_100076cc

dec_label_pc_100076f0.loopexit:                   ; preds = %dec_label_pc_100076e8
  store i1 %v2_100076e05, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100076e07, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100076f0

dec_label_pc_100076f0:                            ; preds = %dec_label_pc_100076f0.loopexit, %dec_label_pc_1000768c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100076f4

dec_label_pc_100076f4.loopexit:                   ; preds = %dec_label_pc_100076dc
  store i1 %v2_100076e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100076e0, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100076f4

dec_label_pc_100076f4:                            ; preds = %dec_label_pc_100076f4.loopexit, %dec_label_pc_100076f0
  %v0_100076fc = phi i32 [ %v0_100076e8, %dec_label_pc_100076f4.loopexit ], [ 0, %dec_label_pc_100076f0 ]
  %v0_100076f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100076f4 = add i32 %v0_100076f4, 4
  %v2_100076f4 = inttoptr i32 %v1_100076f4 to i32*
  %v3_100076f4 = load i32, i32* %v2_100076f4, align 4
  store i32 %v3_100076f4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100076fc = inttoptr i32 %v0_100076f4 to i32*
  store i32 %v0_100076fc, i32* %v2_100076fc, align 4
  %v0_10007700 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007700 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007700 = add i32 %v1_10007700, 24
  %v3_10007700 = inttoptr i32 %v2_10007700 to i32*
  store i32 %v0_10007700, i32* %v3_10007700, align 4
  %v0_10006af8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006af8

dec_label_pc_1000771c:                            ; preds = %dec_label_pc_1000765c
  %v0_1000771c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000771c = add i32 %v0_1000771c, 4
  %v2_1000771c = inttoptr i32 %v1_1000771c to i32*
  %v3_1000771c = load i32, i32* %v2_1000771c, align 4
  store i32 %v3_1000771c, i32* %r3.global-to-local, align 4
  store i32 268465956, i32* @lr, align 4
  %v0_10007720 = call i32 @function_10008628()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000772c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000772c = add i32 %v1_1000772c, 4
  %v3_1000772c = inttoptr i32 %v2_1000772c to i32*
  store i32 -1, i32* %v3_1000772c, align 4
  %v0_10007730 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007730 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007730 = add i32 %v1_10007730, 12
  %v3_10007730 = inttoptr i32 %v2_10007730 to i32*
  store i32 %v0_10007730, i32* %v3_10007730, align 4
  %v0_10007734 = load i32, i32* @r31, align 4
  %v1_10007734 = trunc i32 %v0_10007734 to i8
  %v2_10007734 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007734 = add i32 %v2_10007734, 284
  %v4_10007734 = inttoptr i32 %v3_10007734 to i8*
  store i8 %v1_10007734, i8* %v4_10007734, align 1
  br label %dec_label_pc_10006aa4

dec_label_pc_1000773c:                            ; preds = %dec_label_pc_10007528
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10007740 = load i32, i32* %r26.global-to-local, align 4
  %v2_10007740 = inttoptr i32 %v1_10007740 to i32*
  store i32 104, i32* %v2_10007740, align 4
  br label %dec_label_pc_10007540

dec_label_pc_100077e8:                            ; preds = %dec_label_pc_10007540
  %v0_100077e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100077e8, i32* @r3, align 4
  store i32 268466160, i32* @lr, align 4
  %v0_100077ec = call i32 @function_10005e18()
  store i32 %v0_100077ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006aa4

dec_label_pc_10007814:                            ; preds = %dec_label_pc_10006238
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007818 = load i32, i32* @global_var_1001b774.103, align 4
  store i32 %v3_10007818, i32* %r3.global-to-local, align 4
  store i32 268466208, i32* @lr, align 4
  %v0_1000781c = call i32 @function_10008628()
  store i32 %v0_1000781c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006844

dec_label_pc_10007824:                            ; preds = %dec_label_pc_10006754
  store i32 %v0_1000674c, i32* @r29, align 4
  br label %dec_label_pc_10007828

dec_label_pc_10007828:                            ; preds = %dec_label_pc_10006790, %dec_label_pc_10007824
  %v1_10007828 = phi i32 [ %v2_10006768, %dec_label_pc_10007824 ], [ %v0_10006790, %dec_label_pc_10006790 ]
  %v2_10007828 = add i32 %v1_10007828, 16
  %v3_10007828 = inttoptr i32 %v2_10007828 to i32*
  store i32 %tmp51, i32* %v3_10007828, align 4
  %v0_1000782c = load i32, i32* @r29, align 4
  store i32 %v0_1000782c, i32* @r31, align 4
  %v0_10007830 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007830 = trunc i32 %v0_10007830 to i16
  %v2_10007830 = load i32, i32* @r3, align 4
  %v3_10007830 = add i32 %v2_10007830, 20
  %v4_10007830 = inttoptr i32 %v3_10007830 to i16*
  store i16 %v1_10007830, i16* %v4_10007830, align 2
  store i32 268466232, i32* @lr, align 4
  %v0_10007834 = call i32 @function_10005e18()
  store i32 %v0_10007834, i32* %r3.global-to-local, align 4
  %v1_10006694.pre.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000668c

; uselistorder directives
  uselistorder i32 %v1_100076ec, { 2, 1, 0 }
  uselistorder i32 %v1_100076e8, { 1, 0 }
  uselistorder i32 %v4_100076dc, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100076d0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100076e8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_100076a8, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_100076a4, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007558, { 1, 2, 0 }
  uselistorder i32 %v0_10007558, { 1, 0 }
  uselistorder i32 %v2_10007534, { 1, 0, 2 }
  uselistorder i32 %v1_10006bd8, { 1, 0 }
  uselistorder i32 %v1_10006ba4, { 1, 0 }
  uselistorder i32 %v3_10006b94, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10006b94, { 1, 0 }
  uselistorder i32 %v1_10006b7c, { 2, 1, 0 }
  uselistorder i32 %v1_10006b78, { 1, 0 }
  uselistorder i32 %v1_10006b74, { 1, 0 }
  uselistorder i32 %v4_10006b50, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_10006b3c, { 1, 0, 2 }
  uselistorder i32 %v1_10006b24, { 1, 0, 2 }
  uselistorder i32 %v3_10006b20, { 1, 0, 2 }
  uselistorder i32 %v3_10006b14, { 1, 0, 2 }
  uselistorder i32 %v0_10007584, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10006b0c, { 1, 0 }
  uselistorder i32 %v1_10006afc, { 1, 0 }
  uselistorder i32 %v1_10006af0, { 1, 0 }
  uselistorder i32 %v1_10006ae0, { 1, 0 }
  uselistorder i32 %v0_10006ae0, { 1, 0 }
  uselistorder i32 %v3_10006ad0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006abc, { 1, 0 }
  uselistorder i32 %v1_10006aa8, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006a44, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10006a28, { 1, 2, 0 }
  uselistorder i32 %v1_10006a24, { 1, 0 }
  uselistorder i32 %v3_10006a0c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100069f8, { 2, 1, 0, 3 }
  uselistorder i1 %v3_100069dc, { 2, 0, 1 }
  uselistorder i1 %v1_100069dc, { 1, 0, 2 }
  uselistorder i32 %v3_100069d8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_100069d4, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_100069ac, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_1000698c, { 1, 0 }
  uselistorder i32 %v3_10006bc8, { 5, 0, 8, 7, 9, 4, 1, 3, 2, 6, 10 }
  uselistorder i32 %v2_10006964, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000693c, { 1, 0 }
  uselistorder i32 %v1_1000691c, { 1, 0 }
  uselistorder i32 %v0_100068e8, { 1, 2, 0 }
  uselistorder i32 %v0_100068dc, { 1, 2, 0 }
  uselistorder i32 %v0_100068d0, { 1, 2, 0 }
  uselistorder i32 %v0_100068c4, { 1, 2, 0 }
  uselistorder i32 %v0_100068a0, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_1000688c, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006880, { 1, 2, 0 }
  uselistorder i32 %v0_1000686c, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006858, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_1000684c, { 1, 2, 0 }
  uselistorder i32 %v1_10006798, { 1, 0 }
  uselistorder i32 %v3_10006790, { 1, 0, 2 }
  uselistorder i32 %v1_1000678c, { 2, 1, 0 }
  uselistorder i32 %v1_10006788, { 1, 0 }
  uselistorder i32 %v0_10006790, { 0, 3, 2, 1 }
  uselistorder i32 %v3_1000676c, { 1, 0, 2 }
  uselistorder i32 %v0_1000674c, { 3, 1, 2, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_100066d4, { 1, 0, 2 }
  uselistorder i32 %v2_100066bc, { 1, 0, 2 }
  uselistorder i32 %v0_100066bc, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_100066b0, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_10006700, { 1, 0 }
  uselistorder i32 %v1_10006730, { 1, 0 }
  uselistorder i32 %v1_10006728, { 1, 0 }
  uselistorder i32 %v1_10006720, { 1, 0 }
  uselistorder i32 %v1_10006740, { 2, 1, 0 }
  uselistorder i32 %v1_10006718, { 1, 0 }
  uselistorder i32 %v4_10006708, { 1, 0, 2 }
  uselistorder i32 %v1_1000666c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100065f8, { 1, 0 }
  uselistorder i32 %v4_100065d8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006548, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100064d0, { 3, 1, 2, 0 }
  uselistorder i32 %v0_100064bc, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_100064a4, { 1, 2, 0 }
  uselistorder i32 %v0_100064a0, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_1000648c, { 1, 0 }
  uselistorder i32 %v3_1000645c, { 1, 0, 2 }
  uselistorder i32 %v0_100062cc, { 1, 0 }
  uselistorder i32 %v1_1000628c, { 3, 1, 2, 0 }
  uselistorder i32 %v5_1000627c, { 1, 0, 2 }
  uselistorder i32 %v3_10006220, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10006208, { 1, 0 }
  uselistorder i32 %v0_10006204, { 1, 0 }
  uselistorder i32 %v1_10006200, { 1, 0 }
  uselistorder i32 %v0_100061f0, { 1, 2, 0 }
  uselistorder i32 %v2_100061b0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000610c, { 2, 4, 3, 5, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp57, { 1, 2, 0 }
  uselistorder i8 %tmp56, { 2, 1, 0 }
  uselistorder i16 %tmp55, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp53, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 28, 25, 26, 27, 29, 52, 53, 30, 54, 55, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 57, 58, 41, 42, 43, 44, 45, 49, 46, 47, 48, 50, 51 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 31, 18, 2, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 58, 57, 60, 59, 62, 61, 63, 64, 65, 66, 67, 68, 69, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 6, 7, 1, 2, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 0, 1, 2, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 20, 15, 16, 17, 18, 3, 19, 21, 23, 22 }
  uselistorder i32* %r26.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 24, 13, 25, 27, 14, 15, 16, 17, 26, 28, 29, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 20, 21, 22, 17, 18, 19 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 35, 29, 30, 31, 32, 33, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 19, 20, 7, 8, 9, 17, 18, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 56, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 51, 52, 53, 54, 55 }
  uselistorder i1* %cr7_eq.global-to-local, { 57, 58, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 52, 53, 54, 55, 56 }
  uselistorder i16* @global_var_1001b768.98, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_100091ac, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009218, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_100088f0, { 1, 0 }
  uselistorder i32 ()* @function_10005e18, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009250, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_100092c8, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 16384, { 2, 25, 0, 26, 1, 27, 20, 21, 19, 22, 23, 24, 18, 3, 28, 4, 29, 6, 30, 5, 8, 31, 7, 9, 32, 10, 33, 34, 11, 35, 36, 12, 37, 38, 39, 13, 15, 14, 17, 16 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 2, 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 192, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @function_10005f04, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 15 }
  uselistorder i16* @global_var_1001b7f6.113, { 2, 0, 1 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 66, 0, 1, 2, 3, 4, 6, 5, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 ()* @function_10005b38, { 73, 24, 23, 72, 71, 70, 69, 68, 67, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009308, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 2048, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_100089f8, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10005b88, { 1, 0 }
  uselistorder i32 (i32)* @function_1000816c, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10008670, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007828, { 1, 0 }
  uselistorder label %dec_label_pc_10007540, { 1, 0 }
  uselistorder label %dec_label_pc_10006bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006b80, { 1, 0 }
  uselistorder label %dec_label_pc_10006b78, { 1, 0 }
  uselistorder label %dec_label_pc_10006b30, { 1, 0 }
  uselistorder label %dec_label_pc_10006b14, { 1, 0 }
  uselistorder label %dec_label_pc_10006af8, { 1, 0 }
  uselistorder label %dec_label_pc_10006aa4, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10006a74, { 1, 0 }
  uselistorder label %dec_label_pc_100069a8, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_10006930.dec_label_pc_10006930_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006910.dec_label_pc_10006910_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006900, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000684c, { 1, 0 }
  uselistorder label %dec_label_pc_10006844, { 1, 0 }
  uselistorder label %dec_label_pc_1000668c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10006680, { 1, 0 }
  uselistorder label %dec_label_pc_100065ac, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_100064a0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006288, { 1, 0 }
}

define i32 @function_1000783c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000783c:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000783c = icmp eq i32* %arg2, null
  %v1_10007844 = mul i32 %arg1, 8
  store i32 %v1_10007844, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b830.156 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_1000783c, label %dec_label_pc_1000785c, label %dec_label_pc_10007854

dec_label_pc_10007854:                            ; preds = %dec_label_pc_1000783c
  %v1_10007854 = add i32 %v1_10007844, add (i32 ptrtoint (i32* @global_var_1001b830.156 to i32), i32 4)
  %v2_10007854 = inttoptr i32 %v1_10007854 to i16*
  %v3_10007854 = load i16, i16* %v2_10007854, align 4
  %v4_10007854 = zext i16 %v3_10007854 to i32
  store i32 %v4_10007854, i32* %arg2, align 4
  %v0_1000785c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000785c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000785c

dec_label_pc_1000785c:                            ; preds = %dec_label_pc_1000783c, %dec_label_pc_10007854
  %v1_1000785c = phi i32 [ ptrtoint (i32* @global_var_1001b830.156 to i32), %dec_label_pc_1000783c ], [ %v1_1000785c.pre, %dec_label_pc_10007854 ]
  %v0_1000785c = phi i32 [ %v1_10007844, %dec_label_pc_1000783c ], [ %v0_1000785c.pre, %dec_label_pc_10007854 ]
  %v2_1000785c = add i32 %v0_1000785c, %v1_1000785c
  %v3_1000785c = inttoptr i32 %v2_1000785c to i32*
  %v4_1000785c = load i32, i32* %v3_1000785c, align 4
  store i32 %v4_1000785c, i32* %r3.global-to-local, align 4
  ret i32 %v4_1000785c

; uselistorder directives
  uselistorder i32 %v1_10007844, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000785c, { 1, 0 }
}

define i32 @function_10007864(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007864:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007868 = mul i32 %arg1, 8
  %v2_10007870 = add i32 %v1_10007868, ptrtoint (i32* @global_var_1001b830.156 to i32)
  %v1_10007878 = add i32 %v1_10007868, add (i32 ptrtoint (i32* @global_var_1001b830.156 to i32), i32 4)
  %v2_10007878 = inttoptr i32 %v1_10007878 to i16*
  %v3_10007878 = load i16, i16* %v2_10007878, align 4
  %v3_1000787c = icmp eq i16 %v3_10007878, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000787c, i1* %cr7_eq.global-to-local, align 1
  %v3_10007880 = load i32, i32* @global_var_1001b72c.157, align 4
  %v1_10007884 = udiv i32 %v3_10007880, 16777216
  store i32 %v1_10007884, i32* @r5, align 4
  %v1_10007888 = urem i32 %v3_10007880, 256
  store i32 %v1_10007888, i32* %r6.global-to-local, align 4
  %v1_1000788c = call i32 @__asm_rlwinm(i32 %v3_10007880, i32 24, i32 24, i32 31)
  %v1_10007890 = call i32 @__asm_rlwinm(i32 %v3_10007880, i32 16, i32 24, i32 31)
  %v0_10007894 = load i32, i32* @lr, align 4
  %v1_10007894 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007894 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007894 = or i1 %v1_10007894, %v2_10007894
  call void @__pseudo_cond_branch(i1 %v3_10007894, i32 %v0_10007894)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000789c = inttoptr i32 %v2_10007870 to i32*
  br label %dec_label_pc_1000789c

dec_label_pc_1000789c:                            ; preds = %dec_label_pc_1000789c, %dec_label_pc_10007864
  %v1_100078a8 = phi i32 [ %v1_100078dc, %dec_label_pc_1000789c ], [ 0, %dec_label_pc_10007864 ]
  %v2_1000789c = load i32, i32* %v1_1000789c, align 4
  %v2_100078a0 = add i32 %v2_1000789c, %v1_100078a8
  %v3_100078a0 = inttoptr i32 %v2_100078a0 to i8*
  %v4_100078a0 = load i8, i8* %v3_100078a0, align 1
  %v5_100078a0 = zext i8 %v4_100078a0 to i32
  %v0_100078a4 = load i32, i32* %r6.global-to-local, align 4
  %v2_100078a4 = xor i32 %v0_100078a4, %v5_100078a0
  %v3_100078a8 = trunc i32 %v2_100078a4 to i8
  store i8 %v3_100078a8, i8* %v3_100078a0, align 1
  %v2_100078ac = load i32, i32* %v1_1000789c, align 4
  %v0_100078b0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100078b0 = add i32 %v0_100078b0, %v2_100078ac
  %v3_100078b0 = inttoptr i32 %v2_100078b0 to i8*
  %v4_100078b0 = load i8, i8* %v3_100078b0, align 1
  %v5_100078b0 = zext i8 %v4_100078b0 to i32
  %v2_100078b4 = xor i32 %v5_100078b0, %v1_1000788c
  %v3_100078b8 = trunc i32 %v2_100078b4 to i8
  store i8 %v3_100078b8, i8* %v3_100078b0, align 1
  %v2_100078bc = load i32, i32* %v1_1000789c, align 4
  %v0_100078c0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100078c0 = add i32 %v0_100078c0, %v2_100078bc
  %v3_100078c0 = inttoptr i32 %v2_100078c0 to i8*
  %v4_100078c0 = load i8, i8* %v3_100078c0, align 1
  %v5_100078c0 = zext i8 %v4_100078c0 to i32
  %v2_100078c4 = xor i32 %v5_100078c0, %v1_10007890
  %v3_100078c8 = trunc i32 %v2_100078c4 to i8
  store i8 %v3_100078c8, i8* %v3_100078c0, align 1
  %v2_100078cc = load i32, i32* %v1_1000789c, align 4
  %v0_100078d0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100078d0 = add i32 %v0_100078d0, %v2_100078cc
  %v3_100078d0 = inttoptr i32 %v2_100078d0 to i8*
  %v4_100078d0 = load i8, i8* %v3_100078d0, align 1
  %v5_100078d0 = zext i8 %v4_100078d0 to i32
  %v0_100078d4 = load i32, i32* @r5, align 4
  %v2_100078d4 = xor i32 %v0_100078d4, %v5_100078d0
  %v3_100078d8 = trunc i32 %v2_100078d4 to i8
  store i8 %v3_100078d8, i8* %v3_100078d0, align 1
  %v0_100078dc = load i32, i32* %r10.global-to-local, align 4
  %v1_100078dc = add i32 %v0_100078dc, 1
  store i32 %v1_100078dc, i32* %r10.global-to-local, align 4
  %v3_100078e0 = load i16, i16* %v2_10007878, align 4
  %v4_100078e0 = zext i16 %v3_100078e0 to i32
  %v2_100078e4 = icmp slt i32 %v4_100078e0, %v1_100078dc
  %v3_100078e4 = icmp sgt i32 %v4_100078e0, %v1_100078dc
  %v4_100078e4 = icmp eq i32 %v4_100078e0, %v1_100078dc
  store i1 %v2_100078e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100078e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078e4, label %dec_label_pc_1000789c, label %dec_label_pc_100078ec

dec_label_pc_100078ec:                            ; preds = %dec_label_pc_1000789c
  ret i32 %v2_10007870

; uselistorder directives
  uselistorder i32 %v4_100078e0, { 2, 1, 0 }
  uselistorder i32 %v1_100078dc, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007880, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007868, { 1, 0 }
}

define i32 @function_100078f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100078f0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100078f4 = mul i32 %arg1, 8
  %v2_100078fc = add i32 %v1_100078f4, ptrtoint (i32* @global_var_1001b830.156 to i32)
  %v1_10007904 = add i32 %v1_100078f4, add (i32 ptrtoint (i32* @global_var_1001b830.156 to i32), i32 4)
  %v2_10007904 = inttoptr i32 %v1_10007904 to i16*
  %v3_10007904 = load i16, i16* %v2_10007904, align 4
  %v3_10007908 = icmp eq i16 %v3_10007904, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007908, i1* %cr7_eq.global-to-local, align 1
  %v3_1000790c = load i32, i32* @global_var_1001b72c.157, align 4
  %v1_10007910 = udiv i32 %v3_1000790c, 16777216
  store i32 %v1_10007910, i32* @r5, align 4
  %v1_10007914 = urem i32 %v3_1000790c, 256
  store i32 %v1_10007914, i32* %r6.global-to-local, align 4
  %v1_10007918 = call i32 @__asm_rlwinm(i32 %v3_1000790c, i32 24, i32 24, i32 31)
  %v1_1000791c = call i32 @__asm_rlwinm(i32 %v3_1000790c, i32 16, i32 24, i32 31)
  %v0_10007920 = load i32, i32* @lr, align 4
  %v1_10007920 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007920 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007920 = or i1 %v1_10007920, %v2_10007920
  call void @__pseudo_cond_branch(i1 %v3_10007920, i32 %v0_10007920)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007928 = inttoptr i32 %v2_100078fc to i32*
  br label %dec_label_pc_10007928

dec_label_pc_10007928:                            ; preds = %dec_label_pc_10007928, %dec_label_pc_100078f0
  %v1_10007934 = phi i32 [ %v1_10007968, %dec_label_pc_10007928 ], [ 0, %dec_label_pc_100078f0 ]
  %v2_10007928 = load i32, i32* %v1_10007928, align 4
  %v2_1000792c = add i32 %v2_10007928, %v1_10007934
  %v3_1000792c = inttoptr i32 %v2_1000792c to i8*
  %v4_1000792c = load i8, i8* %v3_1000792c, align 1
  %v5_1000792c = zext i8 %v4_1000792c to i32
  %v0_10007930 = load i32, i32* %r6.global-to-local, align 4
  %v2_10007930 = xor i32 %v0_10007930, %v5_1000792c
  %v3_10007934 = trunc i32 %v2_10007930 to i8
  store i8 %v3_10007934, i8* %v3_1000792c, align 1
  %v2_10007938 = load i32, i32* %v1_10007928, align 4
  %v0_1000793c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000793c = add i32 %v0_1000793c, %v2_10007938
  %v3_1000793c = inttoptr i32 %v2_1000793c to i8*
  %v4_1000793c = load i8, i8* %v3_1000793c, align 1
  %v5_1000793c = zext i8 %v4_1000793c to i32
  %v2_10007940 = xor i32 %v5_1000793c, %v1_10007918
  %v3_10007944 = trunc i32 %v2_10007940 to i8
  store i8 %v3_10007944, i8* %v3_1000793c, align 1
  %v2_10007948 = load i32, i32* %v1_10007928, align 4
  %v0_1000794c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000794c = add i32 %v0_1000794c, %v2_10007948
  %v3_1000794c = inttoptr i32 %v2_1000794c to i8*
  %v4_1000794c = load i8, i8* %v3_1000794c, align 1
  %v5_1000794c = zext i8 %v4_1000794c to i32
  %v2_10007950 = xor i32 %v5_1000794c, %v1_1000791c
  %v3_10007954 = trunc i32 %v2_10007950 to i8
  store i8 %v3_10007954, i8* %v3_1000794c, align 1
  %v2_10007958 = load i32, i32* %v1_10007928, align 4
  %v0_1000795c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000795c = add i32 %v0_1000795c, %v2_10007958
  %v3_1000795c = inttoptr i32 %v2_1000795c to i8*
  %v4_1000795c = load i8, i8* %v3_1000795c, align 1
  %v5_1000795c = zext i8 %v4_1000795c to i32
  %v0_10007960 = load i32, i32* @r5, align 4
  %v2_10007960 = xor i32 %v0_10007960, %v5_1000795c
  %v3_10007964 = trunc i32 %v2_10007960 to i8
  store i8 %v3_10007964, i8* %v3_1000795c, align 1
  %v0_10007968 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007968 = add i32 %v0_10007968, 1
  store i32 %v1_10007968, i32* %r10.global-to-local, align 4
  %v3_1000796c = load i16, i16* %v2_10007904, align 4
  %v4_1000796c = zext i16 %v3_1000796c to i32
  %v2_10007970 = icmp slt i32 %v4_1000796c, %v1_10007968
  %v3_10007970 = icmp sgt i32 %v4_1000796c, %v1_10007968
  %v4_10007970 = icmp eq i32 %v4_1000796c, %v1_10007968
  store i1 %v2_10007970, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007970, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007970, label %dec_label_pc_10007928, label %dec_label_pc_10007978

dec_label_pc_10007978:                            ; preds = %dec_label_pc_10007928
  ret i32 %v2_100078fc

; uselistorder directives
  uselistorder i32 %v4_1000796c, { 2, 1, 0 }
  uselistorder i32 %v1_10007968, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000790c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100078f4, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001b830.156 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001b830.156 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_1000797c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000797c:
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 5, i32* %r22.global-to-local, align 4
  store i32 6, i32* %r23.global-to-local, align 4
  store i32 16, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 7, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268466640, i32* @lr, align 4
  %v0_100079cc = call i32 @function_10009548()
  store i32 %v0_100079cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100079ec.159 to i32), i32* @lr, align 4
  %v4_100079e8 = call i32 @function_10007eec(i32 ptrtoint ([3 x i8]* @global_var_1000b10c.158 to i32), i32 2, i32 2)
  store i32 2, i32* @r3, align 4
  %v0_100079f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079f0, i32* @global_var_1001b838.160, align 4
  %v0_100079f4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100079f4 = trunc i32 %v0_100079f4 to i16
  store i16 %v1_100079f4, i16* bitcast (i32* @global_var_1001b83c.161 to i16*), align 4
  store i32 268466684, i32* @lr, align 4
  %v0_100079f8 = call i32 @function_10009548()
  store i32 %v0_100079f8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007a10.163 to i32), i32* @lr, align 4
  %v3_10007a0c = call i32 @function_10007eec(i32 ptrtoint (i32* @global_var_1000b110.162 to i32), i32 2, i32 2)
  store i32 29, i32* @r3, align 4
  %v0_10007a14 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a14, i32* @global_var_1001b840.164, align 4
  %v0_10007a18 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007a18 = trunc i32 %v0_10007a18 to i16
  store i16 %v1_10007a18, i16* bitcast (i32* @global_var_1001b844.165 to i16*), align 4
  store i32 268466720, i32* @lr, align 4
  %v0_10007a1c = call i32 @function_10009548()
  store i32 %v0_10007a1c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007a34.167 to i32), i32* @lr, align 4
  %v3_10007a30 = call i32 @function_10007eec(i32 ptrtoint (i32* @global_var_1000b278.166 to i32), i32 29, i32 29)
  store i32 6, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001b84c.168 to i16*), align 4
  %v0_10007a40 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a40, i32* @global_var_1001b848.169, align 4
  store i32 268466760, i32* @lr, align 4
  %v0_10007a44 = call i32 @function_10009548()
  store i32 %v0_10007a44, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007a5c.171 to i32), i32* @lr, align 4
  %v4_10007a58 = call i32 @function_10007eec(i32 ptrtoint ([7 x i8]* @global_var_1000b114.170 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10007a60 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a60, i32* @global_var_1001b850.172, align 4
  store i32 8, i32* %r27.global-to-local, align 4
  %v0_10007a68 = load i32, i32* %r23.global-to-local, align 4
  %v1_10007a68 = trunc i32 %v0_10007a68 to i16
  store i16 %v1_10007a68, i16* bitcast (i32* @global_var_1001b854.173 to i16*), align 4
  store i32 268466800, i32* @lr, align 4
  %v0_10007a6c = call i32 @function_10009548()
  store i32 %v0_10007a6c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007a84.175 to i32), i32* @lr, align 4
  %v4_10007a80 = call i32 @function_10007eec(i32 ptrtoint ([8 x i8]* @global_var_1000b11c.174 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10007a88 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a88, i32* @global_var_1001b858.176, align 4
  %v0_10007a8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10007a8c = trunc i32 %v0_10007a8c to i16
  store i16 %v1_10007a8c, i16* bitcast (i32* @global_var_1001b85c.177 to i16*), align 4
  store i32 268466836, i32* @lr, align 4
  %v0_10007a90 = call i32 @function_10009548()
  store i32 %v0_10007a90, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007aa8.179 to i32), i32* @lr, align 4
  %v4_10007aa4 = call i32 @function_10007eec(i32 ptrtoint ([8 x i8]* @global_var_1000b124.178 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_10007aac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007aac, i32* @global_var_1001b860.180, align 4
  %v0_10007ab0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007ab0 = trunc i32 %v0_10007ab0 to i16
  store i16 %v1_10007ab0, i16* bitcast (i32* @global_var_1001b864.181 to i16*), align 4
  store i32 268466872, i32* @lr, align 4
  %v0_10007ab4 = call i32 @function_10009548()
  store i32 %v0_10007ab4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007acc.183 to i32), i32* @lr, align 4
  %v4_10007ac8 = call i32 @function_10007eec(i32 ptrtoint ([4 x i8]* @global_var_1000b12c.182 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001b86c.184 to i16*), align 4
  %v0_10007ad8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ad8, i32* @global_var_1001b868.185, align 4
  store i32 268466912, i32* @lr, align 4
  %v0_10007adc = call i32 @function_10009548()
  store i32 %v0_10007adc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007af4.187 to i32), i32* @lr, align 4
  %v3_10007af0 = call i32 @function_10007eec(i32 ptrtoint (i32* @global_var_1000b130.186 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10007af8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007af8, i32* @global_var_1001b870.188, align 4
  %v0_10007afc = load i32, i32* %r21.global-to-local, align 4
  %v1_10007afc = trunc i32 %v0_10007afc to i16
  store i16 %v1_10007afc, i16* bitcast (i32* @global_var_1001b874.189 to i16*), align 4
  store i32 268466948, i32* @lr, align 4
  %v0_10007b00 = call i32 @function_10009548()
  store i32 %v0_10007b00, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007b18.191 to i32), i32* @lr, align 4
  %v3_10007b14 = call i32 @function_10007eec(i32 ptrtoint (i32* @global_var_1000b144.190 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001b87c.192 to i16*), align 4
  %v0_10007b24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b24, i32* @global_var_1001b878.193, align 4
  store i32 268466988, i32* @lr, align 4
  %v0_10007b28 = call i32 @function_10009548()
  store i32 %v0_10007b28, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007b40.195 to i32), i32* @lr, align 4
  %v4_10007b3c = call i32 @function_10007eec(i32 ptrtoint ([10 x i8]* @global_var_1000b160.194 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001b884.196 to i16*), align 4
  %v0_10007b4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b4c, i32* @global_var_1001b880.197, align 4
  store i32 268467028, i32* @lr, align 4
  %v0_10007b50 = call i32 @function_10009548()
  store i32 %v0_10007b50, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b68.199 to i32), i32* @lr, align 4
  %v4_10007b64 = call i32 @function_10007eec(i32 ptrtoint ([17 x i8]* @global_var_1000b16c.198 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10007b6c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b6c, i32* @global_var_1001b888.200, align 4
  %v0_10007b70 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007b70 = trunc i32 %v0_10007b70 to i16
  store i16 %v1_10007b70, i16* bitcast (i32* @global_var_1001b88c.201 to i16*), align 4
  store i32 268467064, i32* @lr, align 4
  %v0_10007b74 = call i32 @function_10009548()
  store i32 %v0_10007b74, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007b8c.203 to i32), i32* @lr, align 4
  %v4_10007b88 = call i32 @function_10007eec(i32 ptrtoint ([23 x i8]* @global_var_1000b180.202 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001b894.204 to i16*), align 4
  %v0_10007b98 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b98, i32* @global_var_1001b890.205, align 4
  store i32 268467104, i32* @lr, align 4
  %v0_10007b9c = call i32 @function_10009548()
  store i32 %v0_10007b9c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bb4.207 to i32), i32* @lr, align 4
  %v4_10007bb0 = call i32 @function_10007eec(i32 ptrtoint ([8 x i8]* @global_var_1000b198.206 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10007bb8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bb8, i32* @global_var_1001b898.208, align 4
  %v0_10007bbc = load i32, i32* %r26.global-to-local, align 4
  %v1_10007bbc = trunc i32 %v0_10007bbc to i16
  store i16 %v1_10007bbc, i16* bitcast (i32* @global_var_1001b89c.209 to i16*), align 4
  store i32 268467140, i32* @lr, align 4
  %v0_10007bc0 = call i32 @function_10009548()
  store i32 %v0_10007bc0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bd8.211 to i32), i32* @lr, align 4
  %v4_10007bd4 = call i32 @function_10007eec(i32 ptrtoint ([6 x i8]* @global_var_1000b1a0.210 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10007bdc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bdc, i32* @global_var_1001b8a0.212, align 4
  %v0_10007be0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007be0 = trunc i32 %v0_10007be0 to i16
  store i16 %v1_10007be0, i16* bitcast (i32* @global_var_1001b8a4.213 to i16*), align 4
  store i32 268467176, i32* @lr, align 4
  %v0_10007be4 = call i32 @function_10009548()
  store i32 %v0_10007be4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007bfc.215 to i32), i32* @lr, align 4
  %v4_10007bf8 = call i32 @function_10007eec(i32 ptrtoint ([5 x i8]* @global_var_1000b1a8.214 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001b8ac.216 to i16*), align 4
  %v0_10007c08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c08, i32* @global_var_1001b8a8.217, align 4
  store i32 268467216, i32* @lr, align 4
  %v0_10007c0c = call i32 @function_10009548()
  store i32 %v0_10007c0c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c24.219 to i32), i32* @lr, align 4
  %v4_10007c20 = call i32 @function_10007eec(i32 ptrtoint ([7 x i8]* @global_var_1000b1b0.218 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10007c28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c28, i32* @global_var_1001b8b0.220, align 4
  %v0_10007c2c = load i32, i32* %r23.global-to-local, align 4
  %v1_10007c2c = trunc i32 %v0_10007c2c to i16
  store i16 %v1_10007c2c, i16* bitcast (i32* @global_var_1001b8b4.221 to i16*), align 4
  store i32 268467252, i32* @lr, align 4
  %v0_10007c30 = call i32 @function_10009548()
  store i32 %v0_10007c30, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c48.223 to i32), i32* @lr, align 4
  %v4_10007c44 = call i32 @function_10007eec(i32 ptrtoint ([15 x i8]* @global_var_1000b1b8.222 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10007c4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c4c, i32* @global_var_1001b8b8.224, align 4
  %v0_10007c50 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007c50 = trunc i32 %v0_10007c50 to i16
  store i16 %v1_10007c50, i16* bitcast (i32* @global_var_1001b8bc.225 to i16*), align 4
  store i32 268467288, i32* @lr, align 4
  %v0_10007c54 = call i32 @function_10009548()
  store i32 %v0_10007c54, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c6c.227 to i32), i32* @lr, align 4
  %v4_10007c68 = call i32 @function_10007eec(i32 ptrtoint ([9 x i8]* @global_var_1000b1c8.226 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10007c70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c70, i32* @global_var_1001b918.228, align 4
  %v0_10007c74 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007c74 = trunc i32 %v0_10007c74 to i16
  store i16 %v1_10007c74, i16* bitcast (i32* @global_var_1001b91c.229 to i16*), align 4
  store i32 268467324, i32* @lr, align 4
  %v0_10007c78 = call i32 @function_10009548()
  store i32 %v0_10007c78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c90.231 to i32), i32* @lr, align 4
  %v4_10007c8c = call i32 @function_10007eec(i32 ptrtoint ([8 x i8]* @global_var_1000b1d4.230 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10007c94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c94, i32* @global_var_1001b920.232, align 4
  %v0_10007c98 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007c98 = trunc i32 %v0_10007c98 to i16
  store i16 %v1_10007c98, i16* bitcast (i32* @global_var_1001b924.233 to i16*), align 4
  store i32 268467360, i32* @lr, align 4
  %v0_10007c9c = call i32 @function_10009548()
  store i32 %v0_10007c9c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007cb4.235 to i32), i32* @lr, align 4
  %v4_10007cb0 = call i32 @function_10007eec(i32 ptrtoint ([17 x i8]* @global_var_1000b1dc.234 to i32), i32 16, i32 16)
  store i32 8, i32* @r3, align 4
  %v0_10007cb8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007cb8, i32* @global_var_1001b8c0.236, align 4
  %v0_10007cbc = load i32, i32* %r24.global-to-local, align 4
  %v1_10007cbc = trunc i32 %v0_10007cbc to i16
  store i16 %v1_10007cbc, i16* bitcast (i32* @global_var_1001b8c4.237 to i16*), align 4
  store i32 268467396, i32* @lr, align 4
  %v0_10007cc0 = call i32 @function_10009548()
  store i32 %v0_10007cc0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007cd8.239 to i32), i32* @lr, align 4
  %v4_10007cd4 = call i32 @function_10007eec(i32 ptrtoint ([9 x i8]* @global_var_1000b1f0.238 to i32), i32 8, i32 8)
  store i32 21, i32* @r3, align 4
  %v0_10007cdc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007cdc, i32* @global_var_1001b8c8.240, align 4
  %v0_10007ce0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007ce0 = trunc i32 %v0_10007ce0 to i16
  store i16 %v1_10007ce0, i16* bitcast (i32* @global_var_1001b8cc.241 to i16*), align 4
  store i32 268467432, i32* @lr, align 4
  %v0_10007ce4 = call i32 @function_10009548()
  store i32 %v0_10007ce4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007cfc.243 to i32), i32* @lr, align 4
  %v3_10007cf8 = call i32 @function_10007eec(i32 ptrtoint (i32* @global_var_1000b298.242 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001b8d4.244 to i16*), align 4
  %v0_10007d08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d08, i32* @global_var_1001b8d0.245, align 4
  store i32 268467472, i32* @lr, align 4
  %v0_10007d0c = call i32 @function_10009548()
  store i32 %v0_10007d0c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d24.247 to i32), i32* @lr, align 4
  %v4_10007d20 = call i32 @function_10007eec(i32 ptrtoint ([18 x i8]* @global_var_1000b1fc.246 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001b8dc.248 to i16*), align 4
  %v0_10007d30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d30, i32* @global_var_1001b8d8.249, align 4
  store i32 268467512, i32* @lr, align 4
  %v0_10007d34 = call i32 @function_10009548()
  store i32 %v0_10007d34, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d4c.251 to i32), i32* @lr, align 4
  %v4_10007d48 = call i32 @function_10007eec(i32 ptrtoint ([13 x i8]* @global_var_1000b210.250 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001b8e4.252 to i16*), align 4
  %v0_10007d58 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d58, i32* @global_var_1001b8e0.253, align 4
  store i32 268467552, i32* @lr, align 4
  %v0_10007d5c = call i32 @function_10009548()
  store i32 %v0_10007d5c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007d74.255 to i32), i32* @lr, align 4
  %v4_10007d70 = call i32 @function_10007eec(i32 ptrtoint ([15 x i8]* @global_var_1000b220.254 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10007d78 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d78, i32* @global_var_1001b8e8.256, align 4
  %v0_10007d7c = load i32, i32* %r25.global-to-local, align 4
  %v1_10007d7c = trunc i32 %v0_10007d7c to i16
  store i16 %v1_10007d7c, i16* bitcast (i32* @global_var_1001b8ec.257 to i16*), align 4
  store i32 268467588, i32* @lr, align 4
  %v0_10007d80 = call i32 @function_10009548()
  store i32 %v0_10007d80, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007d98.259 to i32), i32* @lr, align 4
  %v4_10007d94 = call i32 @function_10007eec(i32 ptrtoint ([20 x i8]* @global_var_1000b230.258 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10007d9c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d9c, i32* @global_var_1001b8f0.260, align 4
  %v0_10007da0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10007da0 = trunc i32 %v0_10007da0 to i16
  store i16 %v1_10007da0, i16* bitcast (i32* @global_var_1001b8f4.261 to i16*), align 4
  store i32 268467624, i32* @lr, align 4
  %v0_10007da4 = call i32 @function_10009548()
  store i32 %v0_10007da4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007dbc.263 to i32), i32* @lr, align 4
  %v4_10007db8 = call i32 @function_10007eec(i32 ptrtoint ([9 x i8]* @global_var_1000b244.262 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_10007dc0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007dc0, i32* @global_var_1001b8f8.264, align 4
  %v0_10007dc4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007dc4 = trunc i32 %v0_10007dc4 to i16
  store i16 %v1_10007dc4, i16* bitcast (i32* @global_var_1001b8fc.265 to i16*), align 4
  store i32 268467660, i32* @lr, align 4
  %v0_10007dc8 = call i32 @function_10009548()
  store i32 %v0_10007dc8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007de0.267 to i32), i32* @lr, align 4
  %v4_10007ddc = call i32 @function_10007eec(i32 ptrtoint ([6 x i8]* @global_var_1000b250.266 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10007de4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007de4, i32* @global_var_1001b900.268, align 4
  %v0_10007de8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007de8 = trunc i32 %v0_10007de8 to i16
  store i16 %v1_10007de8, i16* bitcast (i32* @global_var_1001b904.269 to i16*), align 4
  store i32 268467696, i32* @lr, align 4
  %v0_10007dec = call i32 @function_10009548()
  store i32 %v0_10007dec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e04.271 to i32), i32* @lr, align 4
  %v4_10007e00 = call i32 @function_10007eec(i32 ptrtoint ([7 x i8]* @global_var_1000b258.270 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10007e08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e08, i32* @global_var_1001b908.272, align 4
  %v0_10007e0c = load i32, i32* %r23.global-to-local, align 4
  %v1_10007e0c = trunc i32 %v0_10007e0c to i16
  store i16 %v1_10007e0c, i16* bitcast (i32* @global_var_1001b90c.273 to i16*), align 4
  store i32 268467732, i32* @lr, align 4
  %v0_10007e10 = call i32 @function_10009548()
  store i32 %v0_10007e10, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007e28.275 to i32), i32* @lr, align 4
  %v4_10007e24 = call i32 @function_10007eec(i32 ptrtoint ([24 x i8]* @global_var_1000b260.274 to i32), i32 23, i32 23)
  store i16 23, i16* bitcast (i32* @global_var_1001b914.276 to i16*), align 4
  %v0_10007e34 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e34, i32* @global_var_1001b910.277, align 4
  ret i32 %v4_10007e24

; uselistorder directives
  uselistorder i16 23, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 21, { 0, 1, 5, 6, 7, 8, 9, 10, 11, 2, 12, 3, 13, 4, 14 }
  uselistorder i32 (i32, i32, i32)* @function_10007eec, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
}

define i32 @function_10007e68(i8* %arg1) local_unnamed_addr {
dec_label_pc_10007e68:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10007e68 = load i8, i8* %arg1, align 1
  %v3_10007e74 = icmp eq i8 %v3_10007e68, 0
  %v0_10007e78 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007e74, i32 %v0_10007e78)
  br label %dec_label_pc_10007e7c

dec_label_pc_10007e7c:                            ; preds = %dec_label_pc_10007e7c, %dec_label_pc_10007e68
  %v0_10007e7c = phi i32 [ %v1_10007e7c, %dec_label_pc_10007e7c ], [ 0, %dec_label_pc_10007e68 ]
  %v1_10007e7c = add i32 %v0_10007e7c, 1
  %v2_10007e80 = add i32 %v1_10007e7c, %tmp
  %v3_10007e80 = inttoptr i32 %v2_10007e80 to i8*
  %v4_10007e80 = load i8, i8* %v3_10007e80, align 1
  %v3_10007e84 = icmp eq i8 %v4_10007e80, 0
  br i1 %v3_10007e84, label %dec_label_pc_10007e8c, label %dec_label_pc_10007e7c

dec_label_pc_10007e8c:                            ; preds = %dec_label_pc_10007e7c
  ret i32 %v1_10007e7c
}

define i32 @function_10007e90(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007e90:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10007e90 = load i8, i8* %arg1, align 1
  %v3_10007e94 = icmp eq i8 %v2_10007e90, 0
  br i1 %v3_10007e94, label %dec_label_pc_10007ee0, label %dec_label_pc_10007e9c

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e90
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007ea0

dec_label_pc_10007ea0:                            ; preds = %dec_label_pc_10007ea0, %dec_label_pc_10007e9c
  %v0_10007ea0 = phi i32 [ %v1_10007ea0, %dec_label_pc_10007ea0 ], [ 0, %dec_label_pc_10007e9c ]
  %v1_10007ea0 = add i32 %v0_10007ea0, 1
  store i32 %v1_10007ea0, i32* %r9.global-to-local, align 4
  %v2_10007ea4 = add i32 %v1_10007ea0, %tmp
  %v3_10007ea4 = inttoptr i32 %v2_10007ea4 to i8*
  %v4_10007ea4 = load i8, i8* %v3_10007ea4, align 1
  %v3_10007ea8 = icmp eq i8 %v4_10007ea4, 0
  br i1 %v3_10007ea8, label %dec_label_pc_10007eb0, label %dec_label_pc_10007ea0

dec_label_pc_10007eb0:                            ; preds = %dec_label_pc_10007ea0
  %v3_10007eb0 = icmp eq i32 %v1_10007ea0, -1
  br i1 %v3_10007eb0, label %dec_label_pc_10007ed8, label %dec_label_pc_10007eb8

dec_label_pc_10007eb8:                            ; preds = %dec_label_pc_10007eb0
  %phitmp = add i32 %v0_10007ea0, 2
  br label %dec_label_pc_10007ebc

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007ee0, %dec_label_pc_10007eb8
  %v0_10007ebc = phi i32 [ 1, %dec_label_pc_10007ee0 ], [ %phitmp, %dec_label_pc_10007eb8 ]
  store i32 %v0_10007ebc, i32* %ctr.global-to-local, align 4
  %v2_10007ecc.pre = load i32, i32* @r3, align 4
  %v2_10007ec48 = load i8, i8* %arg1, align 1
  %v1_10007ec810 = add i32 %tmp, 1
  store i32 %v1_10007ec810, i32* %r4.global-to-local, align 4
  %v3_10007ecc11 = inttoptr i32 %v2_10007ecc.pre to i8*
  store i8 %v2_10007ec48, i8* %v3_10007ecc11, align 1
  %v0_10007ed012 = load i32, i32* @r3, align 4
  %v1_10007ed013 = add i32 %v0_10007ed012, 1
  store i32 %v1_10007ed013, i32* %r3.global-to-local, align 4
  %v0_10007ed414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007ed415 = add i32 %v0_10007ed414, -1
  store i32 %v1_10007ed415, i32* %ctr.global-to-local, align 4
  %v2_10007ed416 = icmp eq i32 %v1_10007ed415, 0
  br i1 %v2_10007ed416, label %dec_label_pc_10007ed8.loopexit, label %dec_label_pc_10007ec4.dec_label_pc_10007ec4_crit_edge

dec_label_pc_10007ec4.dec_label_pc_10007ec4_crit_edge: ; preds = %dec_label_pc_10007ebc, %dec_label_pc_10007ec4.dec_label_pc_10007ec4_crit_edge
  %v1_10007ed017 = phi i32 [ %v1_10007ed0, %dec_label_pc_10007ec4.dec_label_pc_10007ec4_crit_edge ], [ %v1_10007ed013, %dec_label_pc_10007ebc ]
  %v0_10007ec4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10007ec4 = inttoptr i32 %v0_10007ec4.pre to i8*
  %v2_10007ec4 = load i8, i8* %v1_10007ec4, align 1
  %v1_10007ec8 = add i32 %v0_10007ec4.pre, 1
  store i32 %v1_10007ec8, i32* %r4.global-to-local, align 4
  %v3_10007ecc = inttoptr i32 %v1_10007ed017 to i8*
  store i8 %v2_10007ec4, i8* %v3_10007ecc, align 1
  %v0_10007ed0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007ed0 = add i32 %v0_10007ed0, 1
  store i32 %v1_10007ed0, i32* %r3.global-to-local, align 4
  %v0_10007ed4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007ed4 = add i32 %v0_10007ed4, -1
  store i32 %v1_10007ed4, i32* %ctr.global-to-local, align 4
  %v2_10007ed4 = icmp eq i32 %v1_10007ed4, 0
  br i1 %v2_10007ed4, label %dec_label_pc_10007ed8.loopexit, label %dec_label_pc_10007ec4.dec_label_pc_10007ec4_crit_edge

dec_label_pc_10007ed8.loopexit:                   ; preds = %dec_label_pc_10007ec4.dec_label_pc_10007ec4_crit_edge, %dec_label_pc_10007ebc
  %v0_10007ed8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007ed8

dec_label_pc_10007ed8:                            ; preds = %dec_label_pc_10007ed8.loopexit, %dec_label_pc_10007eb0
  %v0_10007ed8 = phi i32 [ %v0_10007ed8.pre, %dec_label_pc_10007ed8.loopexit ], [ -1, %dec_label_pc_10007eb0 ]
  store i32 %v0_10007ed8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007ed8

dec_label_pc_10007ee0:                            ; preds = %dec_label_pc_10007e90
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007ebc

; uselistorder directives
  uselistorder i32 %v0_10007ed8, { 1, 0 }
  uselistorder i32 %v1_10007ed4, { 1, 0 }
  uselistorder i32 %v1_10007ed0, { 1, 0 }
  uselistorder i32 %v1_10007ea0, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007ec4.dec_label_pc_10007ec4_crit_edge, { 1, 0 }
}

define i32 @function_10007eec(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007eec:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007eec = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10007ef4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007eec, i32 %v0_10007ef4)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007efc

dec_label_pc_10007efc:                            ; preds = %dec_label_pc_10007efc, %dec_label_pc_10007eec
  %v0_10007efc = phi i32 [ %v1_10007f04, %dec_label_pc_10007efc ], [ 0, %dec_label_pc_10007eec ]
  %v2_10007efc = add i32 %v0_10007efc, %arg2
  %v3_10007efc = inttoptr i32 %v2_10007efc to i8*
  %v4_10007efc = load i8, i8* %v3_10007efc, align 1
  %v4_10007f00 = add i32 %v0_10007efc, %arg1
  %v5_10007f00 = inttoptr i32 %v4_10007f00 to i8*
  store i8 %v4_10007efc, i8* %v5_10007f00, align 1
  %v0_10007f04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f04 = add i32 %v0_10007f04, 1
  store i32 %v1_10007f04, i32* %r9.global-to-local, align 4
  %v0_10007f08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007f08 = add i32 %v0_10007f08, -1
  store i32 %v1_10007f08, i32* %ctr.global-to-local, align 4
  %v2_10007f08 = icmp eq i32 %v1_10007f08, 0
  br i1 %v2_10007f08, label %dec_label_pc_10007f0c, label %dec_label_pc_10007efc

dec_label_pc_10007f0c:                            ; preds = %dec_label_pc_10007efc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10007f08, { 1, 0 }
  uselistorder i32 %v1_10007f04, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10007f10() local_unnamed_addr {
dec_label_pc_10007f10:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007f10 = load i32, i32* @r4, align 4
  store i32 %v0_10007f10, i32* %r0.global-to-local, align 4
  %v3_10007f10 = icmp eq i32 %v0_10007f10, 0
  store i32 %v0_10007f10, i32* %ctr.global-to-local, align 4
  %v0_10007f18 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007f10, i32 %v0_10007f18)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007f243 = load i32, i32* @r3, align 4
  %v5_10007f244 = inttoptr i32 %v2_10007f243 to i8*
  store i8 0, i8* %v5_10007f244, align 1
  %v0_10007f285 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f286 = add i32 %v0_10007f285, 1
  store i32 %v1_10007f286, i32* %r9.global-to-local, align 4
  %v0_10007f2c7 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007f2c8 = add i32 %v0_10007f2c7, -1
  store i32 %v1_10007f2c8, i32* %ctr.global-to-local, align 4
  %v2_10007f2c9 = icmp eq i32 %v1_10007f2c8, 0
  br i1 %v2_10007f2c9, label %dec_label_pc_10007f30, label %dec_label_pc_10007f24.dec_label_pc_10007f24_crit_edge

dec_label_pc_10007f24.dec_label_pc_10007f24_crit_edge: ; preds = %dec_label_pc_10007f10, %dec_label_pc_10007f24.dec_label_pc_10007f24_crit_edge
  %v1_10007f2810 = phi i32 [ %v1_10007f28, %dec_label_pc_10007f24.dec_label_pc_10007f24_crit_edge ], [ %v1_10007f286, %dec_label_pc_10007f10 ]
  %v0_10007f24.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10007f24.pre to i8
  %v2_10007f24 = load i32, i32* @r3, align 4
  %v4_10007f24 = add i32 %v2_10007f24, %v1_10007f2810
  %v5_10007f24 = inttoptr i32 %v4_10007f24 to i8*
  store i8 %extract.t, i8* %v5_10007f24, align 1
  %v0_10007f28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f28 = add i32 %v0_10007f28, 1
  store i32 %v1_10007f28, i32* %r9.global-to-local, align 4
  %v0_10007f2c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007f2c = add i32 %v0_10007f2c, -1
  store i32 %v1_10007f2c, i32* %ctr.global-to-local, align 4
  %v2_10007f2c = icmp eq i32 %v1_10007f2c, 0
  br i1 %v2_10007f2c, label %dec_label_pc_10007f30, label %dec_label_pc_10007f24.dec_label_pc_10007f24_crit_edge

dec_label_pc_10007f30:                            ; preds = %dec_label_pc_10007f24.dec_label_pc_10007f24_crit_edge, %dec_label_pc_10007f10
  %v0_10007f30 = load i32, i32* @r3, align 4
  ret i32 %v0_10007f30

; uselistorder directives
  uselistorder i32 %v1_10007f2c, { 1, 0 }
  uselistorder i32 %v1_10007f28, { 1, 0 }
  uselistorder i32 %v0_10007f10, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007f24.dec_label_pc_10007f24_crit_edge, { 1, 0 }
}

define i32 @function_10007f34(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007f34:
  %v3_10007f34 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10007f34, label %dec_label_pc_10007f40, label %dec_label_pc_10007f48

dec_label_pc_10007f40:                            ; preds = %dec_label_pc_10007f64, %dec_label_pc_10007f34, %dec_label_pc_10007f48
  ret i32 -1

dec_label_pc_10007f48:                            ; preds = %dec_label_pc_10007f34
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10007f40, label %dec_label_pc_10007f50

dec_label_pc_10007f50:                            ; preds = %dec_label_pc_10007f48
  br label %dec_label_pc_10007f6c

dec_label_pc_10007f60:                            ; preds = %dec_label_pc_10007f6c
  br label %dec_label_pc_10007f64

dec_label_pc_10007f64:                            ; preds = %dec_label_pc_10007f84, %dec_label_pc_10007f60
  %v0_10007f6c1 = phi i32 [ %v1_10007f70, %dec_label_pc_10007f84 ], [ 0, %dec_label_pc_10007f60 ]
  %v1_10007f64 = add i32 %v0_10007f88, 1
  %v1_10007f68 = add i32 %v0_10007f68, -1
  %v2_10007f68 = icmp eq i32 %v1_10007f68, 0
  br i1 %v2_10007f68, label %dec_label_pc_10007f40, label %dec_label_pc_10007f6c

dec_label_pc_10007f6c:                            ; preds = %dec_label_pc_10007f64, %dec_label_pc_10007f50
  %v0_10007f68 = phi i32 [ %v1_10007f68, %dec_label_pc_10007f64 ], [ %arg2, %dec_label_pc_10007f50 ]
  %v0_10007f88 = phi i32 [ %v1_10007f64, %dec_label_pc_10007f64 ], [ 0, %dec_label_pc_10007f50 ]
  %v0_10007f6c = phi i32 [ %v0_10007f6c1, %dec_label_pc_10007f64 ], [ 0, %dec_label_pc_10007f50 ]
  %v2_10007f6c = add i32 %v0_10007f6c, %arg3
  %v3_10007f6c = inttoptr i32 %v2_10007f6c to i8*
  %v4_10007f6c = load i8, i8* %v3_10007f6c, align 1
  %v1_10007f70 = add i32 %v0_10007f6c, 1
  %v2_10007f74 = add i32 %v0_10007f88, %arg1
  %v3_10007f74 = inttoptr i32 %v2_10007f74 to i8*
  %v4_10007f74 = load i8, i8* %v3_10007f74, align 1
  %v4_10007f7c = icmp eq i8 %v4_10007f74, %v4_10007f6c
  br i1 %v4_10007f7c, label %dec_label_pc_10007f84, label %dec_label_pc_10007f60

dec_label_pc_10007f84:                            ; preds = %dec_label_pc_10007f6c
  %v4_10007f78 = icmp eq i32 %v1_10007f70, %arg4
  br i1 %v4_10007f78, label %dec_label_pc_10007f88, label %dec_label_pc_10007f64

dec_label_pc_10007f88:                            ; preds = %dec_label_pc_10007f84
  %v1_10007f88 = add i32 %v0_10007f88, 1
  ret i32 %v1_10007f88

; uselistorder directives
  uselistorder i32 %v0_10007f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10007f40, { 0, 2, 1 }
}

define i32 @function_10007f90(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10007f90.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007f90

dec_label_pc_10007f90:                            ; preds = %dec_label_pc_10007fac, %dec_label_pc_10007f90, %bb
  %v0_10007f90 = phi i32 [ %v0_10007f90.pre, %bb ], [ %v1_10007f94, %dec_label_pc_10007f90 ], [ %v1_10007f94, %dec_label_pc_10007fac ]
  %v1_10007f90 = inttoptr i32 %v0_10007f90 to i8*
  %v2_10007f90 = load i8, i8* %v1_10007f90, align 1
  %v1_10007f94 = add i32 %v0_10007f90, 1
  %v3_10007fa0 = icmp eq i8 %v2_10007f90, 32
  br i1 %v3_10007fa0, label %dec_label_pc_10007f90, label %dec_label_pc_10007fac

dec_label_pc_10007fac:                            ; preds = %dec_label_pc_10007f90
  %v2_10007f90.off = add i8 %v2_10007f90, -9
  %tmp = icmp ult i8 %v2_10007f90.off, 2
  br i1 %tmp, label %dec_label_pc_10007f90, label %dec_label_pc_10007fb8

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007fac
  %v3_10007fb8 = icmp eq i8 %v2_10007f90, 45
  br i1 %v3_10007fb8, label %dec_label_pc_10008064, label %dec_label_pc_10007fc0

dec_label_pc_10007fc0:                            ; preds = %dec_label_pc_10007fb8
  %v3_10007fc0 = icmp eq i8 %v2_10007f90, 43
  br i1 %v3_10007fc0, label %dec_label_pc_100080bc, label %dec_label_pc_10007fc8

dec_label_pc_10007fc8:                            ; preds = %dec_label_pc_10007fc0, %dec_label_pc_100080bc
  %v0_1000805826 = phi i32 [ %v1_10007f94, %dec_label_pc_10007fc0 ], [ %v1_100080c0, %dec_label_pc_100080bc ]
  %v0_10007fe85.in = phi i8 [ %v2_10007f90, %dec_label_pc_10007fc0 ], [ %v2_100080bc, %dec_label_pc_100080bc ]
  br label %dec_label_pc_10007fd4

dec_label_pc_10007fd4:                            ; preds = %dec_label_pc_10008064, %dec_label_pc_10007fc8
  %v0_1000805825 = phi i32 [ %v1_1000806c, %dec_label_pc_10008064 ], [ %v0_1000805826, %dec_label_pc_10007fc8 ]
  %v0_10007fe84.in = phi i8 [ %v2_10008064, %dec_label_pc_10008064 ], [ %v0_10007fe85.in, %dec_label_pc_10007fc8 ]
  %v0_100080ac = phi i32 [ 1, %dec_label_pc_10008064 ], [ 0, %dec_label_pc_10007fc8 ]
  %v1_10007fe4 = phi i32 [ -2147483648, %dec_label_pc_10008064 ], [ 2147483647, %dec_label_pc_10007fc8 ]
  %v2_10007fd4 = udiv i32 %v1_10007fe4, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10007fe0 = mul i32 %v2_10007fd4, %arg1
  %v2_10007fe4 = sub i32 %v1_10007fe4, %v2_10007fe0
  br label %dec_label_pc_10007fe8

dec_label_pc_10007fe8:                            ; preds = %dec_label_pc_10008058, %dec_label_pc_10007fd4
  %v0_10008058 = phi i32 [ %v1_1000805c, %dec_label_pc_10008058 ], [ %v0_1000805825, %dec_label_pc_10007fd4 ]
  %v0_1000804c = phi i32 [ %v0_1000804417, %dec_label_pc_10008058 ], [ 0, %dec_label_pc_10007fd4 ]
  %v0_1000803c = phi i32 [ %v0_1000809c11, %dec_label_pc_10008058 ], [ 0, %dec_label_pc_10007fd4 ]
  %v0_10008034 = phi i32 [ %v0_100080909, %dec_label_pc_10008058 ], [ 0, %dec_label_pc_10007fd4 ]
  %v1_10008028.in = phi i8 [ %v2_10008058, %dec_label_pc_10008058 ], [ %v0_10007fe84.in, %dec_label_pc_10007fd4 ]
  %v1_10008028 = zext i8 %v1_10008028.in to i32
  %v1_10007fec = add nsw i32 %v1_10008028, -48
  %fold = add nuw nsw i32 %v1_10008028, 208
  %v1_10007ff4 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10007ff4, 10
  br i1 %tmp27, label %dec_label_pc_1000802c, label %dec_label_pc_10008000

dec_label_pc_10008000:                            ; preds = %dec_label_pc_10007fe8
  %v1_10008000 = add nuw nsw i32 %v1_10008028, 191
  %v1_10008004 = urem i32 %v1_10008000, 256
  %tmp28 = icmp ult i32 %v1_10008004, 26
  br i1 %tmp28, label %dec_label_pc_10008028, label %dec_label_pc_10008014

dec_label_pc_10008014:                            ; preds = %dec_label_pc_10008000
  %v1_10008014 = add nuw nsw i32 %v1_10008028, 159
  %v1_10008018 = urem i32 %v1_10008014, 256
  %v2_1000801c = icmp ugt i32 %v1_10008018, 25
  br i1 %v2_1000801c, label %dec_label_pc_10008090, label %dec_label_pc_10008024

dec_label_pc_10008024:                            ; preds = %dec_label_pc_10008014
  br label %dec_label_pc_10008028

dec_label_pc_10008028:                            ; preds = %dec_label_pc_10008000, %dec_label_pc_10008024
  %v0_10008028 = phi i32 [ 55, %dec_label_pc_10008000 ], [ 87, %dec_label_pc_10008024 ]
  %v2_10008028 = sub nsw i32 %v1_10008028, %v0_10008028
  br label %dec_label_pc_1000802c

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_10007fe8, %dec_label_pc_10008028
  %v1_10008054 = phi i32 [ %v1_10007fec, %dec_label_pc_10007fe8 ], [ %v2_10008028, %dec_label_pc_10008028 ]
  %v2_1000802c = icmp slt i32 %v1_10008054, %arg1
  br i1 %v2_1000802c, label %dec_label_pc_10008034, label %dec_label_pc_10008090

dec_label_pc_10008034:                            ; preds = %dec_label_pc_1000802c
  %v1_10008034 = icmp slt i32 %v0_10008034, 0
  br i1 %v1_10008034, label %dec_label_pc_10008078, label %dec_label_pc_1000803c

dec_label_pc_1000803c:                            ; preds = %dec_label_pc_10008034
  %v3_1000803c = icmp ugt i32 %v0_1000803c, %v2_10007fd4
  br i1 %v3_1000803c, label %dec_label_pc_10008078, label %dec_label_pc_10008044

dec_label_pc_10008044:                            ; preds = %dec_label_pc_1000803c
  %v4_10008044 = icmp eq i32 %v0_1000804c, %v2_10007fd4
  br i1 %v4_10008044, label %dec_label_pc_10008080, label %dec_label_pc_1000804c

dec_label_pc_1000804c:                            ; preds = %dec_label_pc_10008080, %dec_label_pc_10008044
  %v2_1000804c = mul i32 %v0_1000804c, %arg1
  %v2_10008054 = add i32 %v1_10008054, %v2_1000804c
  store i32 %v2_10008054, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008058

dec_label_pc_10008058:                            ; preds = %dec_label_pc_10008080, %dec_label_pc_10008078, %dec_label_pc_1000804c
  %v0_1000804417 = phi i32 [ %v2_10007fd4, %dec_label_pc_10008080 ], [ %v0_1000804c, %dec_label_pc_10008078 ], [ %v2_10008054, %dec_label_pc_1000804c ]
  %v0_1000809c11 = phi i32 [ %v2_10007fd4, %dec_label_pc_10008080 ], [ %v0_1000803c, %dec_label_pc_10008078 ], [ %v2_10008054, %dec_label_pc_1000804c ]
  %v0_100080909 = phi i32 [ -1, %dec_label_pc_10008080 ], [ -1, %dec_label_pc_10008078 ], [ 1, %dec_label_pc_1000804c ]
  %v1_10008058 = inttoptr i32 %v0_10008058 to i8*
  %v2_10008058 = load i8, i8* %v1_10008058, align 1
  %v1_1000805c = add i32 %v0_10008058, 1
  br label %dec_label_pc_10007fe8

dec_label_pc_10008064:                            ; preds = %dec_label_pc_10007fb8
  %v1_10008064 = inttoptr i32 %v1_10007f94 to i8*
  %v2_10008064 = load i8, i8* %v1_10008064, align 1
  %v1_1000806c = add i32 %v0_10007f90, 2
  br label %dec_label_pc_10007fd4

dec_label_pc_10008078:                            ; preds = %dec_label_pc_1000803c, %dec_label_pc_10008034
  br label %dec_label_pc_10008058

dec_label_pc_10008080:                            ; preds = %dec_label_pc_10008044
  %v3_10008080 = icmp sgt i32 %v1_10008054, %v2_10007fe4
  br i1 %v3_10008080, label %dec_label_pc_10008058, label %dec_label_pc_1000804c

dec_label_pc_10008090:                            ; preds = %dec_label_pc_1000802c, %dec_label_pc_10008014
  %v1_10008090 = icmp slt i32 %v0_10008034, 0
  br i1 %v1_10008090, label %dec_label_pc_100080ac, label %dec_label_pc_10008098

dec_label_pc_10008098:                            ; preds = %dec_label_pc_10008090
  %v3_10008098 = icmp eq i32 %v0_100080ac, 0
  %v0_100080a0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008098, i32 %v0_100080a0)
  %v0_100080a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100080a4 = sub i32 0, %v0_100080a4
  ret i32 %v1_100080a4

dec_label_pc_100080ac:                            ; preds = %dec_label_pc_10008090
  %v1_100080ac = xor i32 %v0_100080ac, 1
  %v2_100080b4 = sub nuw i32 -2147483648, %v1_100080ac
  ret i32 %v2_100080b4

dec_label_pc_100080bc:                            ; preds = %dec_label_pc_10007fc0
  %v1_100080bc = inttoptr i32 %v1_10007f94 to i8*
  %v2_100080bc = load i8, i8* %v1_100080bc, align 1
  %v1_100080c0 = add i32 %v0_10007f90, 2
  br label %dec_label_pc_10007fc8

; uselistorder directives
  uselistorder i32 %v2_10008054, { 1, 0, 2 }
  uselistorder i32 %v1_10008054, { 1, 0, 2 }
  uselistorder i32 %v1_10008028, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_1000804c, { 2, 0, 1 }
  uselistorder i32 %v0_10008058, { 1, 0 }
  uselistorder i32 %v2_10007fd4, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10007f94, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10007f90, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 11, 12, 13, 14, 1, 8, 15, 9, 16 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1000802c, { 1, 0 }
  uselistorder label %dec_label_pc_10008028, { 1, 0 }
  uselistorder label %dec_label_pc_10007fc8, { 1, 0 }
}

define i32 @function_100080c8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100080c8:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_100080f4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_100080fc

dec_label_pc_100080fc:                            ; preds = %dec_label_pc_10008128.dec_label_pc_100080fc_crit_edge, %dec_label_pc_100080c8
  %v0_10008100 = phi i32 [ %v0_10008100.pre, %dec_label_pc_10008128.dec_label_pc_100080fc_crit_edge ], [ %arg3, %dec_label_pc_100080c8 ]
  %v0_100080fc = phi i32 [ %v1_10008114, %dec_label_pc_10008128.dec_label_pc_100080fc_crit_edge ], [ %tmp, %dec_label_pc_100080c8 ]
  store i32 1, i32* @r5, align 4
  store i32 268468492, i32* @lr, align 4
  %v4_10008108 = call i32 @function_10008860(i32 %v0_10008100, i32 %v0_100080fc, i32 1)
  %v0_1000810c = load i32, i32* @r31, align 4
  %v3_10008110 = icmp eq i32 %v4_10008108, 1
  %v1_10008114 = add i32 %v0_1000810c, 1
  store i32 %v1_10008114, i32* @r31, align 4
  %v0_1000811c = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10008110, label %dec_label_pc_1000811c, label %dec_label_pc_10008134

dec_label_pc_1000811c:                            ; preds = %dec_label_pc_100080fc
  %v1_1000811c = add i32 %v0_1000811c, 1
  store i32 %v1_1000811c, i32* %r30.global-to-local, align 4
  %v0_10008120 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008120 = icmp sgt i32 %v0_10008120, %v1_1000811c
  br i1 %v3_10008120, label %dec_label_pc_10008128, label %dec_label_pc_10008134

dec_label_pc_10008128:                            ; preds = %dec_label_pc_1000811c
  %v1_10008128 = inttoptr i32 %v0_1000810c to i8*
  %v2_10008128 = load i8, i8* %v1_10008128, align 1
  %v3_1000812c = icmp eq i8 %v2_10008128, 10
  br i1 %v3_1000812c, label %dec_label_pc_10008134, label %dec_label_pc_10008128.dec_label_pc_100080fc_crit_edge

dec_label_pc_10008128.dec_label_pc_100080fc_crit_edge: ; preds = %dec_label_pc_10008128
  %v0_10008100.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100080fc

dec_label_pc_10008134:                            ; preds = %dec_label_pc_100080fc, %dec_label_pc_10008128, %dec_label_pc_1000811c
  %v1_1000813c = phi i32 [ %v1_1000811c, %dec_label_pc_10008128 ], [ %v1_1000811c, %dec_label_pc_1000811c ], [ %v0_1000811c, %dec_label_pc_100080fc ]
  %tmp12 = icmp slt i32 %v1_1000813c, 0
  %v1_10008134 = zext i1 %tmp12 to i32
  %v2_10008134 = ashr i32 %v1_1000813c, 31
  %v3_10008134 = and i32 %v2_10008134, -2
  %v4_10008134 = or i32 %v3_10008134, %v1_10008134
  %v2_1000813c = xor i32 %v4_10008134, %v1_1000813c
  %v2_10008144 = sub i32 %v4_10008134, %v2_1000813c
  %tmp13 = icmp slt i32 %v2_10008144, 0
  %v1_1000814c = zext i1 %tmp13 to i32
  %v2_1000814c = ashr i32 %v2_10008144, 31
  %v3_1000814c = and i32 %v2_1000814c, -2
  %v4_1000814c = or i32 %v3_1000814c, %v1_1000814c
  %v0_10008154 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008154 = and i32 %v4_1000814c, %v0_10008154
  store i32 %v0_100080f4, i32* @r31, align 4
  ret i32 %v2_10008154

; uselistorder directives
  uselistorder i32 %v2_10008144, { 1, 0 }
  uselistorder i32 %v4_10008134, { 1, 0 }
  uselistorder i32 %v1_1000813c, { 1, 2, 0 }
  uselistorder i32 %v1_10008114, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008860, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008134, { 1, 2, 0 }
}

define i32 @function_1000816c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000816c:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_10008184 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_1000818c = call i32 @function_10008d44()
  %v2_10008198 = inttoptr i32 %v0_1000818c to i32*
  store i32 0, i32* %v2_10008198, align 4
  store i32 268468648, i32* @lr, align 4
  %v3_100081a4 = call i32 @function_10009344(i32 2, i32 2, i32 0)
  store i32 %v3_100081a4, i32* @r3, align 4
  %v3_100081ac = icmp eq i32 %v3_100081a4, -1
  store i32 %v3_100081a4, i32* @r31, align 4
  br i1 %v3_100081ac, label %dec_label_pc_100081fc, label %dec_label_pc_100081c8

dec_label_pc_100081c8:                            ; preds = %dec_label_pc_1000816c
  %v2_10008178 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268468704, i32* @lr, align 4
  %v0_100081dc = call i32 @function_10009144()
  %v2_100081e4 = ptrtoint i32* %stack_var_-40 to i32
  %v0_100081e8 = load i32, i32* @r31, align 4
  store i32 268468720, i32* @lr, align 4
  %v3_100081ec = call i32 @function_10009178(i32 %v0_100081e8, i32 %v2_10008178, i32 %v2_100081e4)
  store i32 268468728, i32* @lr, align 4
  %v0_100081f4 = call i32 @function_10008628()
  br label %dec_label_pc_100081fc

dec_label_pc_100081fc:                            ; preds = %dec_label_pc_1000816c, %dec_label_pc_100081c8
  %v0_100081fc = phi i32 [ 0, %dec_label_pc_1000816c ], [ 134744072, %dec_label_pc_100081c8 ]
  store i32 %v0_10008184, i32* @r31, align 4
  ret i32 %v0_100081fc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_10009144, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009344, { 21, 19, 20, 18, 17, 16, 15, 14, 0, 13, 12, 1, 11, 10, 9, 8, 2, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_100081fc, { 1, 0 }
}

define i32 @function_10008218(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008218:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008218 = load i8, i8* %tmp, align 1
  %v3_10008224 = icmp eq i8 %v3_10008218, 0
  br i1 %v3_10008224, label %dec_label_pc_1000823c, label %dec_label_pc_1000822c

dec_label_pc_1000822c:                            ; preds = %dec_label_pc_10008218, %dec_label_pc_1000822c
  %v0_1000822c = phi i32 [ %v1_1000822c, %dec_label_pc_1000822c ], [ 0, %dec_label_pc_10008218 ]
  %v1_1000822c = add i32 %v0_1000822c, 1
  %v3_10008230 = add i32 %v1_1000822c, %arg3
  %v4_10008230 = inttoptr i32 %v3_10008230 to i8*
  %v5_10008230 = load i8, i8* %v4_10008230, align 1
  %v3_10008234 = icmp eq i8 %v5_10008230, 0
  br i1 %v3_10008234, label %dec_label_pc_1000823c, label %dec_label_pc_1000822c

dec_label_pc_1000823c:                            ; preds = %dec_label_pc_1000822c, %dec_label_pc_10008218
  %v0_1000826c11 = phi i32 [ 0, %dec_label_pc_10008218 ], [ %v1_1000822c, %dec_label_pc_1000822c ]
  %v1_1000823c = icmp slt i32 %arg2, 0
  %v1_10008240 = add i32 %arg2, 1
  br i1 %v1_1000823c, label %dec_label_pc_100082b8, label %dec_label_pc_10008254

dec_label_pc_10008254:                            ; preds = %dec_label_pc_1000823c, %dec_label_pc_100082b8, %dec_label_pc_100082ac
  %v2_100082608 = phi i32 [ %v1_10008264, %dec_label_pc_100082ac ], [ 0, %dec_label_pc_100082b8 ], [ 0, %dec_label_pc_1000823c ]
  %v0_100082586 = phi i32 [ %v1_1000825c, %dec_label_pc_100082ac ], [ %tmp16, %dec_label_pc_100082b8 ], [ %tmp16, %dec_label_pc_1000823c ]
  %v0_10008254 = phi i32 [ %v0_100082a0, %dec_label_pc_100082ac ], [ 1, %dec_label_pc_100082b8 ], [ %v1_10008240, %dec_label_pc_1000823c ]
  %v1_10008254 = add i32 %v0_10008254, -1
  %v2_10008254 = icmp eq i32 %v1_10008254, 0
  br i1 %v2_10008254, label %dec_label_pc_100082a4, label %dec_label_pc_10008258

dec_label_pc_10008258:                            ; preds = %dec_label_pc_10008254, %dec_label_pc_1000829c
  %v2_10008260 = phi i32 [ 0, %dec_label_pc_1000829c ], [ %v2_100082608, %dec_label_pc_10008254 ]
  %v0_10008258 = phi i32 [ %v1_1000825c, %dec_label_pc_1000829c ], [ %v0_100082586, %dec_label_pc_10008254 ]
  %v0_100082a0 = phi i32 [ %v1_100082a0, %dec_label_pc_1000829c ], [ %v1_10008254, %dec_label_pc_10008254 ]
  %v1_10008258 = inttoptr i32 %v0_10008258 to i8*
  %v2_10008258 = load i8, i8* %v1_10008258, align 1
  %v3_10008258 = zext i8 %v2_10008258 to i32
  %v1_1000825c = add i32 %v0_10008258, 1
  %v3_10008260 = add i32 %v2_10008260, %arg3
  %v4_10008260 = inttoptr i32 %v3_10008260 to i8*
  %v5_10008260 = load i8, i8* %v4_10008260, align 1
  %v6_10008260 = zext i8 %v5_10008260 to i32
  %v1_10008264 = add i32 %v2_10008260, 1
  %v1_10008268 = add nuw nsw i32 %v3_10008258, 191
  %v1_10008270 = urem i32 %v1_10008268, 256
  %v2_10008274 = icmp ugt i32 %v1_10008270, 25
  %v1_10008278 = add nuw nsw i32 %v6_10008260, 191
  %v1_1000827c = urem i32 %v1_10008278, 256
  %v2_10008280 = icmp ugt i32 %v1_1000827c, 25
  br i1 %v2_10008274, label %dec_label_pc_1000828c, label %dec_label_pc_10008288

dec_label_pc_10008288:                            ; preds = %dec_label_pc_10008258
  %v1_10008288 = or i32 %v3_10008258, 96
  br i1 %v2_10008280, label %dec_label_pc_10008294, label %dec_label_pc_10008290

dec_label_pc_1000828c:                            ; preds = %dec_label_pc_10008258
  br i1 %v2_10008280, label %dec_label_pc_10008294, label %dec_label_pc_10008290

dec_label_pc_10008290:                            ; preds = %dec_label_pc_10008288, %dec_label_pc_1000828c
  %v1_1000829414 = phi i32 [ %v1_10008288, %dec_label_pc_10008288 ], [ %v3_10008258, %dec_label_pc_1000828c ]
  %v1_10008290 = or i32 %v6_10008260, 96
  br label %dec_label_pc_10008294

dec_label_pc_10008294:                            ; preds = %dec_label_pc_10008288, %dec_label_pc_1000828c, %dec_label_pc_10008290
  %v1_10008294 = phi i32 [ %v1_10008288, %dec_label_pc_10008288 ], [ %v3_10008258, %dec_label_pc_1000828c ], [ %v1_1000829414, %dec_label_pc_10008290 ]
  %v0_10008294 = phi i32 [ %v6_10008260, %dec_label_pc_10008288 ], [ %v6_10008260, %dec_label_pc_1000828c ], [ %v1_10008290, %dec_label_pc_10008290 ]
  %v4_10008294 = icmp eq i32 %v0_10008294, %v1_10008294
  br i1 %v4_10008294, label %dec_label_pc_100082ac, label %dec_label_pc_1000829c

dec_label_pc_1000829c:                            ; preds = %dec_label_pc_10008294
  %v1_100082a0 = add i32 %v0_100082a0, -1
  %v2_100082a0 = icmp eq i32 %v1_100082a0, 0
  br i1 %v2_100082a0, label %dec_label_pc_100082a4, label %dec_label_pc_10008258

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_10008254, %dec_label_pc_1000829c
  ret i32 -1

dec_label_pc_100082ac:                            ; preds = %dec_label_pc_10008294
  %v4_1000826c.le = icmp eq i32 %v0_1000826c11, %v1_10008264
  br i1 %v4_1000826c.le, label %dec_label_pc_100082b0, label %dec_label_pc_10008254

dec_label_pc_100082b0:                            ; preds = %dec_label_pc_100082ac
  %v2_100082b0 = sub i32 %v1_1000825c, %tmp16
  ret i32 %v2_100082b0

dec_label_pc_100082b8:                            ; preds = %dec_label_pc_1000823c
  br label %dec_label_pc_10008254

; uselistorder directives
  uselistorder i32 %v1_100082a0, { 1, 0 }
  uselistorder i32 %v1_10008288, { 1, 0 }
  uselistorder i1 %v2_10008280, { 1, 0 }
  uselistorder i32 %v1_10008264, { 1, 0 }
  uselistorder i32 %v3_10008258, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100082a0, { 1, 0 }
  uselistorder i32 %v0_10008258, { 1, 0 }
  uselistorder i32 %v2_10008260, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 5, 6, 7, 0, 4, 1, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100082a4, { 1, 0 }
  uselistorder label %dec_label_pc_10008294, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008290, { 1, 0 }
  uselistorder label %dec_label_pc_10008258, { 1, 0 }
  uselistorder label %dec_label_pc_10008254, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000822c, { 1, 0 }
}

define i32 @function_100082c4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100082c4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100082c4 = load i8, i8* %arg1, align 1
  %v3_100082cc = icmp eq i8 %v2_100082c4, 0
  br i1 %v3_100082cc, label %dec_label_pc_100082e4, label %dec_label_pc_100082d4

dec_label_pc_100082d4:                            ; preds = %dec_label_pc_100082c4, %dec_label_pc_100082d4
  %v0_100082d4 = phi i32 [ %v1_100082d4, %dec_label_pc_100082d4 ], [ 0, %dec_label_pc_100082c4 ]
  %v1_100082d4 = add i32 %v0_100082d4, 1
  %v2_100082d8 = add i32 %v1_100082d4, %tmp
  %v3_100082d8 = inttoptr i32 %v2_100082d8 to i8*
  %v4_100082d8 = load i8, i8* %v3_100082d8, align 1
  %v3_100082dc = icmp eq i8 %v4_100082d8, 0
  br i1 %v3_100082dc, label %dec_label_pc_100082e4, label %dec_label_pc_100082d4

dec_label_pc_100082e4:                            ; preds = %dec_label_pc_100082d4, %dec_label_pc_100082c4
  %v0_10008304 = phi i32 [ 0, %dec_label_pc_100082c4 ], [ %v1_100082d4, %dec_label_pc_100082d4 ]
  %v1_100082e4 = inttoptr i32 %arg2 to i8*
  %v2_100082e4 = load i8, i8* %v1_100082e4, align 1
  %v3_100082ec = icmp eq i8 %v2_100082e4, 0
  br i1 %v3_100082ec, label %dec_label_pc_10008304, label %dec_label_pc_100082f4

dec_label_pc_100082f4:                            ; preds = %dec_label_pc_100082e4, %dec_label_pc_100082f4
  %v0_100082f4 = phi i32 [ %v1_100082f4, %dec_label_pc_100082f4 ], [ 0, %dec_label_pc_100082e4 ]
  %v1_100082f4 = add i32 %v0_100082f4, 1
  %v2_100082f8 = add i32 %v1_100082f4, %arg2
  %v3_100082f8 = inttoptr i32 %v2_100082f8 to i8*
  %v4_100082f8 = load i8, i8* %v3_100082f8, align 1
  %v3_100082fc = icmp eq i8 %v4_100082f8, 0
  br i1 %v3_100082fc, label %dec_label_pc_10008304, label %dec_label_pc_100082f4

dec_label_pc_10008304:                            ; preds = %dec_label_pc_100082f4, %dec_label_pc_100082e4
  %v0_10008308 = phi i32 [ 0, %dec_label_pc_100082e4 ], [ %v1_100082f4, %dec_label_pc_100082f4 ]
  %v4_10008304 = icmp eq i32 %v0_10008304, %v0_10008308
  br i1 %v4_10008304, label %dec_label_pc_1000831c, label %dec_label_pc_10008314

dec_label_pc_10008314:                            ; preds = %dec_label_pc_10008320, %dec_label_pc_10008304
  ret i32 0

dec_label_pc_1000831c:                            ; preds = %dec_label_pc_10008304
  %v2_1000831c = icmp eq i32 %v0_10008304, 0
  br i1 %v2_1000831c, label %dec_label_pc_1000833c, label %dec_label_pc_10008320

dec_label_pc_10008320:                            ; preds = %dec_label_pc_1000831c, %dec_label_pc_10008338
  %v0_10008338 = phi i32 [ %v1_10008338, %dec_label_pc_10008338 ], [ %v0_10008304, %dec_label_pc_1000831c ]
  %v0_10008328 = phi i32 [ %v1_1000832c, %dec_label_pc_10008338 ], [ %arg2, %dec_label_pc_1000831c ]
  %v0_10008320 = phi i32 [ %v1_10008324, %dec_label_pc_10008338 ], [ %tmp, %dec_label_pc_1000831c ]
  %v1_10008320 = inttoptr i32 %v0_10008320 to i8*
  %v2_10008320 = load i8, i8* %v1_10008320, align 1
  %v1_10008328 = inttoptr i32 %v0_10008328 to i8*
  %v2_10008328 = load i8, i8* %v1_10008328, align 1
  %v4_10008330 = icmp eq i8 %v2_10008320, %v2_10008328
  br i1 %v4_10008330, label %dec_label_pc_10008338, label %dec_label_pc_10008314

dec_label_pc_10008338:                            ; preds = %dec_label_pc_10008320
  %v1_1000832c = add i32 %v0_10008328, 1
  %v1_10008324 = add i32 %v0_10008320, 1
  %v1_10008338 = add i32 %v0_10008338, -1
  %v2_10008338 = icmp eq i32 %v1_10008338, 0
  br i1 %v2_10008338, label %dec_label_pc_1000833c, label %dec_label_pc_10008320

dec_label_pc_1000833c:                            ; preds = %dec_label_pc_10008338, %dec_label_pc_1000831c
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008338, { 1, 0 }
  uselistorder i32 %v0_10008320, { 1, 0 }
  uselistorder i32 %v0_10008328, { 1, 0 }
  uselistorder label %dec_label_pc_10008320, { 1, 0 }
  uselistorder label %dec_label_pc_100082f4, { 1, 0 }
  uselistorder label %dec_label_pc_100082d4, { 1, 0 }
}

define i32 @function_10008344(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008344:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008344 = icmp eq i32 %arg3, 0
  %v4_10008348 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008348, i32* %stack_var_-64, align 4
  %v5_10008348 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10008344, label %dec_label_pc_10008364, label %dec_label_pc_10008350

dec_label_pc_10008350:                            ; preds = %dec_label_pc_10008344
  %v0_10008350 = load i32, i32* %r3.global-to-local, align 4
  %v3_10008350 = icmp eq i32 %v0_10008350, 0
  store i1 %v3_10008350, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10008350, label %dec_label_pc_10008358, label %dec_label_pc_10008370

dec_label_pc_10008358:                            ; preds = %dec_label_pc_10008350
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_1000835c = add i32 %arg3, 1
  %v5_1000835c = inttoptr i32 %v4_1000835c to i8*
  store i8 0, i8* %v5_1000835c, align 1
  %v0_10008360 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008360 = trunc i32 %v0_10008360 to i8
  store i8 %v1_10008360, i8* %tmp, align 1
  br label %dec_label_pc_10008364

dec_label_pc_10008364:                            ; preds = %dec_label_pc_100083f0, %dec_label_pc_10008344, %dec_label_pc_10008358
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008370:                            ; preds = %dec_label_pc_10008350
  %v2_10008350 = icmp sgt i32 %v0_10008350, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008370.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10008350, %v3_10008370.not
  br i1 %brmerge, label %dec_label_pc_10008384, label %dec_label_pc_10008438

dec_label_pc_10008384:                            ; preds = %dec_label_pc_10008370, %dec_label_pc_10008438
  %v0_100083882 = phi i32 [ %v0_10008350, %dec_label_pc_10008370 ], [ %v1_10008438, %dec_label_pc_10008438 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10008370 ], [ 1, %dec_label_pc_10008438 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008388

dec_label_pc_10008388:                            ; preds = %dec_label_pc_100083b4.dec_label_pc_10008388_crit_edge, %dec_label_pc_10008384
  %v1_1000838c = phi i32 [ %v1_1000838c.pre, %dec_label_pc_100083b4.dec_label_pc_10008388_crit_edge ], [ 32, %dec_label_pc_10008384 ]
  %v0_1000838c = phi i32 [ %v0_1000838c.pre, %dec_label_pc_100083b4.dec_label_pc_10008388_crit_edge ], [ %v5_10008348, %dec_label_pc_10008384 ]
  %v1_1000839c = phi i32 [ %v0_10008388.pre, %dec_label_pc_100083b4.dec_label_pc_10008388_crit_edge ], [ %v0_100083882, %dec_label_pc_10008384 ]
  %v2_10008388 = udiv i32 %v1_1000839c, %arg2
  %v2_1000838c = add i32 %v0_1000838c, %v1_1000838c
  store i32 %v2_1000838c, i32* %r11.global-to-local, align 4
  %v1_10008390 = add i32 %v1_1000838c, -1
  store i32 %v1_10008390, i32* %r10.global-to-local, align 4
  %v2_10008394 = mul i32 %v2_10008388, %arg2
  %v3_10008398 = icmp ult i32 %v1_1000839c, %arg2
  store i1 %v3_10008398, i1* %cr6_eq.global-to-local, align 1
  %v2_1000839c = sub i32 %v1_1000839c, %v2_10008394
  store i32 %v2_1000839c, i32* %r9.global-to-local, align 4
  store i32 %v2_10008388, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_1000839c, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_1000839c
  %v0_100083b4.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_100083b4 = add i32 %v2_1000838c, 8
  %v4_100083b4 = inttoptr i32 %v3_100083b4 to i8*
  store i8 %v0_100083b4.off0, i8* %v4_100083b4, align 1
  %v0_100083b8 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100083b8, label %dec_label_pc_100083bc, label %dec_label_pc_100083b4.dec_label_pc_10008388_crit_edge

dec_label_pc_100083b4.dec_label_pc_10008388_crit_edge: ; preds = %dec_label_pc_10008388
  %v0_10008388.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000838c.pre = load i32, i32* @r1, align 4
  %v1_1000838c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008388

dec_label_pc_100083bc:                            ; preds = %dec_label_pc_10008388
  %v0_100083bc = load i32, i32* %r8.global-to-local, align 4
  %v3_100083bc = icmp eq i32 %v0_100083bc, 0
  br i1 %v3_100083bc, label %dec_label_pc_100083c4, label %dec_label_pc_10008424

dec_label_pc_100083c4:                            ; preds = %dec_label_pc_100083bc
  %v0_100083c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100083c4 = add i32 %v0_100083c4, 1
  store i32 %v1_100083c4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083c8

dec_label_pc_100083c8:                            ; preds = %dec_label_pc_10008424, %dec_label_pc_100083c4
  %v1_100083d0 = phi i32 [ %v1_100083cc.pre, %dec_label_pc_10008424 ], [ %v1_100083c4, %dec_label_pc_100083c4 ]
  %v2_100083c8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100083c8, i32* %r9.global-to-local, align 4
  %v2_100083cc = add i32 %v1_100083d0, %v2_100083c8
  %v3_100083cc = inttoptr i32 %v2_100083cc to i8*
  %v4_100083cc = load i8, i8* %v3_100083cc, align 1
  %v5_100083cc = zext i8 %v4_100083cc to i32
  store i32 %v5_100083cc, i32* %r0.global-to-local, align 4
  store i32 %v2_100083cc, i32* %r9.global-to-local, align 4
  %v3_100083d4 = icmp eq i8 %v4_100083cc, 0
  br i1 %v3_100083d4, label %dec_label_pc_1000844c, label %dec_label_pc_100083dc

dec_label_pc_100083dc:                            ; preds = %dec_label_pc_100083c8
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083e0

dec_label_pc_100083e0:                            ; preds = %dec_label_pc_100083e0, %dec_label_pc_100083dc
  %v0_100083e0 = phi i32 [ %v1_100083e0, %dec_label_pc_100083e0 ], [ 0, %dec_label_pc_100083dc ]
  %v1_100083e0 = add i32 %v0_100083e0, 1
  store i32 %v1_100083e0, i32* %r10.global-to-local, align 4
  %v2_100083e4 = add i32 %v1_100083e0, %v2_100083cc
  %v3_100083e4 = inttoptr i32 %v2_100083e4 to i8*
  %v4_100083e4 = load i8, i8* %v3_100083e4, align 1
  %v5_100083e4 = zext i8 %v4_100083e4 to i32
  store i32 %v5_100083e4, i32* %r0.global-to-local, align 4
  %v3_100083e8 = icmp eq i8 %v4_100083e4, 0
  br i1 %v3_100083e8, label %dec_label_pc_100083f0, label %dec_label_pc_100083e0

dec_label_pc_100083f0:                            ; preds = %dec_label_pc_100083e0
  %v3_100083f0 = icmp eq i32 %v1_100083e0, -1
  br i1 %v3_100083f0, label %dec_label_pc_10008364, label %dec_label_pc_100083f8

dec_label_pc_100083f8:                            ; preds = %dec_label_pc_100083f0
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_100083e0, 2
  br label %dec_label_pc_100083fc

dec_label_pc_100083fc:                            ; preds = %dec_label_pc_1000844c, %dec_label_pc_100083f8
  %v0_100083fc = phi i32 [ 1, %dec_label_pc_1000844c ], [ %phitmp, %dec_label_pc_100083f8 ]
  store i32 %v0_100083fc, i32* %r10.global-to-local, align 4
  store i32 %v0_100083fc, i32* %ctr.global-to-local, align 4
  %v2_1000840424 = load i8, i8* %v3_100083cc, align 1
  %v3_1000840425 = zext i8 %v2_1000840424 to i32
  store i32 %v3_1000840425, i32* %r0.global-to-local, align 4
  %v1_1000840826 = add i32 %v2_100083cc, 1
  store i32 %v1_1000840826, i32* %r9.global-to-local, align 4
  store i8 %v2_1000840424, i8* %tmp, align 1
  %v0_1000841028 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000841029 = add i32 %v0_1000841028, 1
  store i32 %v1_1000841029, i32* %r11.global-to-local, align 4
  %v0_1000841430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000841431 = add i32 %v0_1000841430, -1
  store i32 %v1_1000841431, i32* %ctr.global-to-local, align 4
  %v2_1000841432 = icmp eq i32 %v1_1000841431, 0
  br i1 %v2_1000841432, label %dec_label_pc_10008418, label %dec_label_pc_10008404.dec_label_pc_10008404_crit_edge

dec_label_pc_10008404.dec_label_pc_10008404_crit_edge: ; preds = %dec_label_pc_100083fc, %dec_label_pc_10008404.dec_label_pc_10008404_crit_edge
  %v1_1000841033 = phi i32 [ %v1_10008410, %dec_label_pc_10008404.dec_label_pc_10008404_crit_edge ], [ %v1_1000841029, %dec_label_pc_100083fc ]
  %v0_10008404.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008404 = inttoptr i32 %v0_10008404.pre to i8*
  %v2_10008404 = load i8, i8* %v1_10008404, align 1
  %v3_10008404 = zext i8 %v2_10008404 to i32
  store i32 %v3_10008404, i32* %r0.global-to-local, align 4
  %v1_10008408 = add i32 %v0_10008404.pre, 1
  store i32 %v1_10008408, i32* %r9.global-to-local, align 4
  %v3_1000840c = inttoptr i32 %v1_1000841033 to i8*
  store i8 %v2_10008404, i8* %v3_1000840c, align 1
  %v0_10008410 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008410 = add i32 %v0_10008410, 1
  store i32 %v1_10008410, i32* %r11.global-to-local, align 4
  %v0_10008414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008414 = add i32 %v0_10008414, -1
  store i32 %v1_10008414, i32* %ctr.global-to-local, align 4
  %v2_10008414 = icmp eq i32 %v1_10008414, 0
  br i1 %v2_10008414, label %dec_label_pc_10008418, label %dec_label_pc_10008404.dec_label_pc_10008404_crit_edge

dec_label_pc_10008418:                            ; preds = %dec_label_pc_10008404.dec_label_pc_10008404_crit_edge, %dec_label_pc_100083fc
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008424:                            ; preds = %dec_label_pc_100083bc
  %v0_10008424.pre = load i32, i32* @r1, align 4
  %v1_10008424.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008424 = add i32 %v1_10008424.pre, %v0_10008424.pre
  store i32 %v2_10008424, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_1000842c = add i32 %v2_10008424, 8
  %v4_1000842c = inttoptr i32 %v3_1000842c to i8*
  store i8 45, i8* %v4_1000842c, align 1
  %v1_100083cc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083c8

dec_label_pc_10008438:                            ; preds = %dec_label_pc_10008370
  %v1_10008438 = sub i32 0, %v0_10008350
  store i32 %v1_10008438, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008384

dec_label_pc_1000844c:                            ; preds = %dec_label_pc_100083c8
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083fc

; uselistorder directives
  uselistorder i32 %v1_10008438, { 1, 0 }
  uselistorder i32 %v1_10008414, { 1, 0 }
  uselistorder i32 %v1_10008410, { 1, 0 }
  uselistorder i32 %v0_100083fc, { 1, 0 }
  uselistorder i32 %v1_100083e0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008388, { 1, 0 }
  uselistorder i32 %v1_1000839c, { 1, 0, 2 }
  uselistorder i32 %v1_1000838c, { 1, 0 }
  uselistorder i32 %v0_10008350, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 8, 7, 2, 3, 5, 4, 9, 6, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008404.dec_label_pc_10008404_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008384, { 1, 0 }
  uselistorder label %dec_label_pc_10008364, { 0, 2, 1 }
}

define i32 @function_10008458(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008458:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10008468 = icmp eq i32 %arg2, -2143521772
  %v2_1000847c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000847c, i32* %stack_var_-32, align 4
  br i1 %v4_10008468, label %dec_label_pc_100084dc, label %dec_label_pc_1000849c

dec_label_pc_1000849c:                            ; preds = %dec_label_pc_10008458
  %v3_1000849c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000849c, label %dec_label_pc_100084b4, label %dec_label_pc_100084a4

dec_label_pc_100084a4:                            ; preds = %dec_label_pc_1000849c
  %v3_100084a8 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_100084a8, label %dec_label_pc_100084d0, label %dec_label_pc_100084fc

dec_label_pc_100084b4:                            ; preds = %dec_label_pc_1000849c
  %v1_100084b4 = xor i32 %arg2, -2143551488
  %v3_100084b8 = icmp eq i32 %v1_100084b4, 29717
  br i1 %v3_100084b8, label %dec_label_pc_100084ec, label %dec_label_pc_100084c0

dec_label_pc_100084c0:                            ; preds = %dec_label_pc_100084b4
  %v3_100084c4 = icmp eq i32 %v1_100084b4, 29718
  br i1 %v3_100084c4, label %dec_label_pc_100084f4, label %dec_label_pc_100084fc

dec_label_pc_100084d0:                            ; preds = %dec_label_pc_100084a4
  store i32 ptrtoint (i32* @global_var_100084d8.279 to i32), i32* @lr, align 4
  %v2_100084d4 = inttoptr i32 %arg3 to i32*
  %v3_100084d4 = call i32 @function_10008edc(i32* %v2_100084d4, i32 %arg1)
  br label %dec_label_pc_100084e4

dec_label_pc_100084dc:                            ; preds = %dec_label_pc_10008458
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100084e0

dec_label_pc_100084e0:                            ; preds = %dec_label_pc_100084f4, %dec_label_pc_100084ec, %dec_label_pc_100084dc
  store i32 268469476, i32* @lr, align 4
  %v0_100084e0 = call i32 @function_10008f78()
  br label %dec_label_pc_100084e4

dec_label_pc_100084e4:                            ; preds = %dec_label_pc_100084d0, %dec_label_pc_100084e0
  %storemerge = phi i32 [ %v0_100084e0, %dec_label_pc_100084e0 ], [ %v3_100084d4, %dec_label_pc_100084d0 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008528

dec_label_pc_100084ec:                            ; preds = %dec_label_pc_100084b4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100084e0

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084c0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100084e0

dec_label_pc_100084fc:                            ; preds = %dec_label_pc_100084c0, %dec_label_pc_100084a4
  %v0_1000850c = call i32 @__asm_mfcr()
  %v1_10008510 = and i32 %v0_1000850c, 268435456
  %v3_10008510 = icmp eq i32 %v1_10008510, 0
  store i32 %v0_1000850c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008510, label %dec_label_pc_10008528, label %dec_label_pc_1000851c

dec_label_pc_1000851c:                            ; preds = %dec_label_pc_100084fc
  %v0_1000851c = call i32 @function_10008d44()
  %v0_10008520 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008520 = inttoptr i32 %v0_1000851c to i32*
  store i32 %v0_10008520, i32* %v2_10008520, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008528

dec_label_pc_10008528:                            ; preds = %dec_label_pc_100084fc, %dec_label_pc_100084e4, %dec_label_pc_1000851c
  %v0_1000852c = phi i32 [ %v0_1000850c, %dec_label_pc_100084fc ], [ %storemerge, %dec_label_pc_100084e4 ], [ -1, %dec_label_pc_1000851c ]
  ret i32 %v0_1000852c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10008528, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100084e4, { 1, 0 }
}

define i32 @function_10008540(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008540:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10008554 = load i32, i32* @r4, align 4
  %v1_10008554 = add i32 %v0_10008554, -12
  %v2_10008558 = icmp ugt i32 %v1_10008554, 2
  %v2_10008560 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008560, i32* %stack_var_-32, align 4
  br i1 %v2_10008558, label %dec_label_pc_1000858c, label %dec_label_pc_1000857c

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_10008540
  store i32 268469636, i32* @lr, align 4
  %v2_10008580 = call i32 @function_100085c4(i32 3)
  store i32 %v2_10008580, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100085ac

dec_label_pc_1000858c:                            ; preds = %dec_label_pc_10008540
  %v0_10008590 = call i32 @__asm_mfcr()
  %v1_10008594 = and i32 %v0_10008590, 268435456
  %v3_10008594 = icmp eq i32 %v1_10008594, 0
  store i32 %v0_10008590, i32* %r31.global-to-local, align 4
  br i1 %v3_10008594, label %dec_label_pc_100085ac, label %dec_label_pc_100085a0

dec_label_pc_100085a0:                            ; preds = %dec_label_pc_1000858c
  %v0_100085a0 = call i32 @function_10008d44()
  %v0_100085a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100085a4 = inttoptr i32 %v0_100085a0 to i32*
  store i32 %v0_100085a4, i32* %v2_100085a4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100085ac

dec_label_pc_100085ac:                            ; preds = %dec_label_pc_1000858c, %dec_label_pc_1000857c, %dec_label_pc_100085a0
  %v0_100085b0 = phi i32 [ %v0_10008590, %dec_label_pc_1000858c ], [ %v2_10008580, %dec_label_pc_1000857c ], [ -1, %dec_label_pc_100085a0 ]
  ret i32 %v0_100085b0

; uselistorder directives
  uselistorder label %dec_label_pc_100085ac, { 2, 0, 1 }
}

define i32 @function_100085c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100085c4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100085dc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100085dc, i32* %stack_var_-32, align 4
  %v0_100085f8 = call i32 @__asm_mfcr()
  %v1_100085fc = and i32 %v0_100085f8, 268435456
  %v3_100085fc = icmp eq i32 %v1_100085fc, 0
  store i32 %v0_100085f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100085fc, label %dec_label_pc_10008614, label %dec_label_pc_10008608

dec_label_pc_10008608:                            ; preds = %dec_label_pc_100085c4
  %v0_10008608 = call i32 @function_10008d44()
  %v0_1000860c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000860c = inttoptr i32 %v0_10008608 to i32*
  store i32 %v0_1000860c, i32* %v2_1000860c, align 4
  br label %dec_label_pc_10008614

dec_label_pc_10008614:                            ; preds = %dec_label_pc_100085c4, %dec_label_pc_10008608
  %v0_10008624 = phi i32 [ %v0_100085f8, %dec_label_pc_100085c4 ], [ -1, %dec_label_pc_10008608 ]
  ret i32 %v0_10008624

; uselistorder directives
  uselistorder label %dec_label_pc_10008614, { 1, 0 }
}

define i32 @function_10008628() local_unnamed_addr {
dec_label_pc_10008628:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008640 = call i32 @__asm_mfcr()
  %v1_10008644 = and i32 %v0_10008640, 268435456
  %v3_10008644 = icmp eq i32 %v1_10008644, 0
  store i32 %v0_10008640, i32* %r31.global-to-local, align 4
  br i1 %v3_10008644, label %dec_label_pc_1000865c, label %dec_label_pc_10008650

dec_label_pc_10008650:                            ; preds = %dec_label_pc_10008628
  %v0_10008650 = call i32 @function_10008d44()
  %v0_10008654 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008654 = inttoptr i32 %v0_10008650 to i32*
  store i32 %v0_10008654, i32* %v2_10008654, align 4
  br label %dec_label_pc_1000865c

dec_label_pc_1000865c:                            ; preds = %dec_label_pc_10008628, %dec_label_pc_10008650
  %v0_1000866c = phi i32 [ %v0_10008640, %dec_label_pc_10008628 ], [ -1, %dec_label_pc_10008650 ]
  ret i32 %v0_1000866c

; uselistorder directives
  uselistorder label %dec_label_pc_1000865c, { 1, 0 }
}

define i32 @function_10008670() local_unnamed_addr {
dec_label_pc_10008670:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008688 = call i32 @__asm_mfcr()
  %v1_1000868c = and i32 %v0_10008688, 268435456
  %v3_1000868c = icmp eq i32 %v1_1000868c, 0
  store i32 %v0_10008688, i32* %r31.global-to-local, align 4
  br i1 %v3_1000868c, label %dec_label_pc_100086a4, label %dec_label_pc_10008698

dec_label_pc_10008698:                            ; preds = %dec_label_pc_10008670
  %v0_10008698 = call i32 @function_10008d44()
  %v0_1000869c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000869c = inttoptr i32 %v0_10008698 to i32*
  store i32 %v0_1000869c, i32* %v2_1000869c, align 4
  br label %dec_label_pc_100086a4

dec_label_pc_100086a4:                            ; preds = %dec_label_pc_10008670, %dec_label_pc_10008698
  %v0_100086b4 = phi i32 [ %v0_10008688, %dec_label_pc_10008670 ], [ -1, %dec_label_pc_10008698 ]
  ret i32 %v0_100086b4

; uselistorder directives
  uselistorder label %dec_label_pc_100086a4, { 1, 0 }
}

define i32 @function_100086b8() local_unnamed_addr {
dec_label_pc_100086b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100086d0 = call i32 @__asm_mfcr()
  %v1_100086d4 = and i32 %v0_100086d0, 268435456
  %v3_100086d4 = icmp eq i32 %v1_100086d4, 0
  store i32 %v0_100086d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100086d4, label %dec_label_pc_100086ec, label %dec_label_pc_100086e0

dec_label_pc_100086e0:                            ; preds = %dec_label_pc_100086b8
  %v0_100086e0 = call i32 @function_10008d44()
  %v0_100086e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100086e4 = inttoptr i32 %v0_100086e0 to i32*
  store i32 %v0_100086e4, i32* %v2_100086e4, align 4
  br label %dec_label_pc_100086ec

dec_label_pc_100086ec:                            ; preds = %dec_label_pc_100086b8, %dec_label_pc_100086e0
  %v0_100086fc = phi i32 [ %v0_100086d0, %dec_label_pc_100086b8 ], [ -1, %dec_label_pc_100086e0 ]
  ret i32 %v0_100086fc

; uselistorder directives
  uselistorder label %dec_label_pc_100086ec, { 1, 0 }
}

define i32 @function_10008700() local_unnamed_addr {
dec_label_pc_10008700:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008718 = call i32 @__asm_mfcr()
  %v1_1000871c = and i32 %v0_10008718, 268435456
  %v3_1000871c = icmp eq i32 %v1_1000871c, 0
  store i32 %v0_10008718, i32* %r31.global-to-local, align 4
  br i1 %v3_1000871c, label %dec_label_pc_10008734, label %dec_label_pc_10008728

dec_label_pc_10008728:                            ; preds = %dec_label_pc_10008700
  %v0_10008728 = call i32 @function_10008d44()
  %v0_1000872c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000872c = inttoptr i32 %v0_10008728 to i32*
  store i32 %v0_1000872c, i32* %v2_1000872c, align 4
  br label %dec_label_pc_10008734

dec_label_pc_10008734:                            ; preds = %dec_label_pc_10008700, %dec_label_pc_10008728
  %v0_10008744 = phi i32 [ %v0_10008718, %dec_label_pc_10008700 ], [ -1, %dec_label_pc_10008728 ]
  ret i32 %v0_10008744

; uselistorder directives
  uselistorder label %dec_label_pc_10008734, { 1, 0 }
}

define i32 @function_10008748(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008748:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008760 = call i32 @__asm_mfcr()
  %v1_10008764 = and i32 %v0_10008760, 268435456
  %v3_10008764 = icmp eq i32 %v1_10008764, 0
  store i32 %v0_10008760, i32* %r31.global-to-local, align 4
  br i1 %v3_10008764, label %dec_label_pc_1000877c, label %dec_label_pc_10008770

dec_label_pc_10008770:                            ; preds = %dec_label_pc_10008748
  %v0_10008770 = call i32 @function_10008d44()
  %v0_10008774 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008774 = inttoptr i32 %v0_10008770 to i32*
  store i32 %v0_10008774, i32* %v2_10008774, align 4
  br label %dec_label_pc_1000877c

dec_label_pc_1000877c:                            ; preds = %dec_label_pc_10008748, %dec_label_pc_10008770
  %v0_1000878c = phi i32 [ %v0_10008760, %dec_label_pc_10008748 ], [ -1, %dec_label_pc_10008770 ]
  ret i32 %v0_1000878c

; uselistorder directives
  uselistorder label %dec_label_pc_1000877c, { 1, 0 }
}

define i32 @function_10008790(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008790:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100087a4 = and i32 %arg2, 64
  %v3_100087a4 = icmp eq i32 %v1_100087a4, 0
  br i1 %v3_100087a4, label %dec_label_pc_100087d0, label %dec_label_pc_100087b4

dec_label_pc_100087b4:                            ; preds = %dec_label_pc_10008790
  %v2_100087bc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100087bc, i32* %stack_var_-32, align 4
  %v0_100087cc = load i32, i32* @r5, align 4
  br label %dec_label_pc_100087d0

dec_label_pc_100087d0:                            ; preds = %dec_label_pc_10008790, %dec_label_pc_100087b4
  %v0_100087d0 = phi i32 [ 0, %dec_label_pc_10008790 ], [ %v0_100087cc, %dec_label_pc_100087b4 ]
  store i32 %v0_100087d0, i32* @r5, align 4
  %v0_100087d8 = call i32 @__asm_mfcr()
  %v1_100087dc = and i32 %v0_100087d8, 268435456
  %v3_100087dc = icmp eq i32 %v1_100087dc, 0
  store i32 %v0_100087d8, i32* %r31.global-to-local, align 4
  br i1 %v3_100087dc, label %dec_label_pc_100087f4, label %dec_label_pc_100087e8

dec_label_pc_100087e8:                            ; preds = %dec_label_pc_100087d0
  %v0_100087e8 = call i32 @function_10008d44()
  %v0_100087ec = load i32, i32* %r31.global-to-local, align 4
  %v2_100087ec = inttoptr i32 %v0_100087e8 to i32*
  store i32 %v0_100087ec, i32* %v2_100087ec, align 4
  br label %dec_label_pc_100087f4

dec_label_pc_100087f4:                            ; preds = %dec_label_pc_100087d0, %dec_label_pc_100087e8
  %v0_10008804 = phi i32 [ %v0_100087d8, %dec_label_pc_100087d0 ], [ -1, %dec_label_pc_100087e8 ]
  ret i32 %v0_10008804

; uselistorder directives
  uselistorder label %dec_label_pc_100087f4, { 1, 0 }
  uselistorder label %dec_label_pc_100087d0, { 1, 0 }
}

define i32 @function_10008808(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008808:
  store i32 %arg1, i32* @r5, align 4
  %v2_10008814 = call i32 @function_10008790(i32 577, i32 577)
  ret i32 %v2_10008814
}

define i32 @function_10008818(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008818:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008830 = call i32 @__asm_mfcr()
  %v1_10008834 = and i32 %v0_10008830, 268435456
  %v3_10008834 = icmp eq i32 %v1_10008834, 0
  store i32 %v0_10008830, i32* %r31.global-to-local, align 4
  br i1 %v3_10008834, label %dec_label_pc_1000884c, label %dec_label_pc_10008840

dec_label_pc_10008840:                            ; preds = %dec_label_pc_10008818
  %v0_10008840 = call i32 @function_10008d44()
  %v0_10008844 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008844 = inttoptr i32 %v0_10008840 to i32*
  store i32 %v0_10008844, i32* %v2_10008844, align 4
  br label %dec_label_pc_1000884c

dec_label_pc_1000884c:                            ; preds = %dec_label_pc_10008818, %dec_label_pc_10008840
  %v0_1000885c = phi i32 [ %v0_10008830, %dec_label_pc_10008818 ], [ -1, %dec_label_pc_10008840 ]
  ret i32 %v0_1000885c

; uselistorder directives
  uselistorder label %dec_label_pc_1000884c, { 1, 0 }
}

define i32 @function_10008860(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008860:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008878 = call i32 @__asm_mfcr()
  %v1_1000887c = and i32 %v0_10008878, 268435456
  %v3_1000887c = icmp eq i32 %v1_1000887c, 0
  store i32 %v0_10008878, i32* %r31.global-to-local, align 4
  br i1 %v3_1000887c, label %dec_label_pc_10008894, label %dec_label_pc_10008888

dec_label_pc_10008888:                            ; preds = %dec_label_pc_10008860
  %v0_10008888 = call i32 @function_10008d44()
  %v0_1000888c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000888c = inttoptr i32 %v0_10008888 to i32*
  store i32 %v0_1000888c, i32* %v2_1000888c, align 4
  br label %dec_label_pc_10008894

dec_label_pc_10008894:                            ; preds = %dec_label_pc_10008860, %dec_label_pc_10008888
  %v0_100088a4 = phi i32 [ %v0_10008878, %dec_label_pc_10008860 ], [ -1, %dec_label_pc_10008888 ]
  ret i32 %v0_100088a4

; uselistorder directives
  uselistorder label %dec_label_pc_10008894, { 1, 0 }
}

define i32 @function_100088a8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100088a8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100088c0 = call i32 @__asm_mfcr()
  %v1_100088c4 = and i32 %v0_100088c0, 268435456
  %v3_100088c4 = icmp eq i32 %v1_100088c4, 0
  store i32 %v0_100088c0, i32* %r31.global-to-local, align 4
  br i1 %v3_100088c4, label %dec_label_pc_100088dc, label %dec_label_pc_100088d0

dec_label_pc_100088d0:                            ; preds = %dec_label_pc_100088a8
  %v0_100088d0 = call i32 @function_10008d44()
  %v0_100088d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100088d4 = inttoptr i32 %v0_100088d0 to i32*
  store i32 %v0_100088d4, i32* %v2_100088d4, align 4
  br label %dec_label_pc_100088dc

dec_label_pc_100088dc:                            ; preds = %dec_label_pc_100088a8, %dec_label_pc_100088d0
  %v0_100088ec = phi i32 [ %v0_100088c0, %dec_label_pc_100088a8 ], [ -1, %dec_label_pc_100088d0 ]
  ret i32 %v0_100088ec

; uselistorder directives
  uselistorder label %dec_label_pc_100088dc, { 1, 0 }
}

define i32 @function_100088f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100088f0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008908 = call i32 @__asm_mfcr()
  %v1_1000890c = and i32 %v0_10008908, 268435456
  %v3_1000890c = icmp eq i32 %v1_1000890c, 0
  store i32 %v0_10008908, i32* %r31.global-to-local, align 4
  br i1 %v3_1000890c, label %dec_label_pc_10008924, label %dec_label_pc_10008918

dec_label_pc_10008918:                            ; preds = %dec_label_pc_100088f0
  %v0_10008918 = call i32 @function_10008d44()
  %v0_1000891c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000891c = inttoptr i32 %v0_10008918 to i32*
  store i32 %v0_1000891c, i32* %v2_1000891c, align 4
  br label %dec_label_pc_10008924

dec_label_pc_10008924:                            ; preds = %dec_label_pc_100088f0, %dec_label_pc_10008918
  %v0_10008934 = phi i32 [ %v0_10008908, %dec_label_pc_100088f0 ], [ -1, %dec_label_pc_10008918 ]
  ret i32 %v0_10008934

; uselistorder directives
  uselistorder label %dec_label_pc_10008924, { 1, 0 }
}

define i32 @function_10008938(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008938:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008950 = call i32 @__asm_mfcr()
  %v1_10008954 = and i32 %v0_10008950, 268435456
  %v3_10008954 = icmp eq i32 %v1_10008954, 0
  store i32 %v0_10008950, i32* %r31.global-to-local, align 4
  br i1 %v3_10008954, label %dec_label_pc_1000896c, label %dec_label_pc_10008960

dec_label_pc_10008960:                            ; preds = %dec_label_pc_10008938
  %v0_10008960 = call i32 @function_10008d44()
  %v0_10008964 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008964 = inttoptr i32 %v0_10008960 to i32*
  store i32 %v0_10008964, i32* %v2_10008964, align 4
  br label %dec_label_pc_1000896c

dec_label_pc_1000896c:                            ; preds = %dec_label_pc_10008938, %dec_label_pc_10008960
  %v0_1000897c = phi i32 [ %v0_10008950, %dec_label_pc_10008938 ], [ -1, %dec_label_pc_10008960 ]
  ret i32 %v0_1000897c

; uselistorder directives
  uselistorder label %dec_label_pc_1000896c, { 1, 0 }
}

define i32 @function_10008980(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008980:
  %r31.global-to-local = alloca i32, align 4
  %v3_10008980 = icmp eq i32 %arg2, 0
  br i1 %v3_10008980, label %dec_label_pc_100089c0, label %dec_label_pc_100089a8

dec_label_pc_100089a8:                            ; preds = %dec_label_pc_10008980
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100089c0, label %dec_label_pc_100089b0

dec_label_pc_100089b0:                            ; preds = %dec_label_pc_100089a8
  %v0_100089b0 = call i32 @function_10008d44()
  %v2_100089b8 = inttoptr i32 %v0_100089b0 to i32*
  store i32 22, i32* %v2_100089b8, align 4
  %v0_100089e4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100089e0

dec_label_pc_100089c0:                            ; preds = %dec_label_pc_100089a8, %dec_label_pc_10008980
  %v0_100089c4 = call i32 @__asm_mfcr()
  %v1_100089c8 = and i32 %v0_100089c4, 268435456
  %v3_100089c8 = icmp eq i32 %v1_100089c8, 0
  store i32 %v0_100089c4, i32* %r31.global-to-local, align 4
  br i1 %v3_100089c8, label %dec_label_pc_100089e0, label %dec_label_pc_100089d4

dec_label_pc_100089d4:                            ; preds = %dec_label_pc_100089c0
  %v0_100089d4 = call i32 @function_10008d44()
  %v0_100089d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100089d8 = inttoptr i32 %v0_100089d4 to i32*
  store i32 %v0_100089d8, i32* %v2_100089d8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100089e0

dec_label_pc_100089e0:                            ; preds = %dec_label_pc_100089c0, %dec_label_pc_100089b0, %dec_label_pc_100089d4
  %v0_100089e4 = phi i32 [ %v0_100089c4, %dec_label_pc_100089c0 ], [ %v0_100089e4.pre, %dec_label_pc_100089b0 ], [ -1, %dec_label_pc_100089d4 ]
  ret i32 %v0_100089e4

; uselistorder directives
  uselistorder label %dec_label_pc_100089e0, { 2, 0, 1 }
}

define i32 @function_100089f8() local_unnamed_addr {
dec_label_pc_100089f8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008a10 = call i32 @__asm_mfcr()
  %v1_10008a14 = and i32 %v0_10008a10, 268435456
  %v3_10008a14 = icmp eq i32 %v1_10008a14, 0
  store i32 %v0_10008a10, i32* %r31.global-to-local, align 4
  br i1 %v3_10008a14, label %dec_label_pc_10008a2c, label %dec_label_pc_10008a20

dec_label_pc_10008a20:                            ; preds = %dec_label_pc_100089f8
  %v0_10008a20 = call i32 @function_10008d44()
  %v0_10008a24 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008a24 = inttoptr i32 %v0_10008a20 to i32*
  store i32 %v0_10008a24, i32* %v2_10008a24, align 4
  br label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_100089f8, %dec_label_pc_10008a20
  %v0_10008a3c = phi i32 [ %v0_10008a10, %dec_label_pc_100089f8 ], [ -1, %dec_label_pc_10008a20 ]
  ret i32 %v0_10008a3c

; uselistorder directives
  uselistorder label %dec_label_pc_10008a2c, { 1, 0 }
}

define i32 @function_10008a40(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008a40:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008a58 = call i32 @__asm_mfcr()
  %v1_10008a5c = and i32 %v0_10008a58, 268435456
  %v3_10008a5c = icmp eq i32 %v1_10008a5c, 0
  store i32 %v0_10008a58, i32* %r31.global-to-local, align 4
  br i1 %v3_10008a5c, label %dec_label_pc_10008a74, label %dec_label_pc_10008a68

dec_label_pc_10008a68:                            ; preds = %dec_label_pc_10008a40
  %v0_10008a68 = call i32 @function_10008d44()
  %v0_10008a6c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008a6c = inttoptr i32 %v0_10008a68 to i32*
  store i32 %v0_10008a6c, i32* %v2_10008a6c, align 4
  br label %dec_label_pc_10008a74

dec_label_pc_10008a74:                            ; preds = %dec_label_pc_10008a40, %dec_label_pc_10008a68
  %v0_10008a84 = phi i32 [ %v0_10008a58, %dec_label_pc_10008a40 ], [ -1, %dec_label_pc_10008a68 ]
  ret i32 %v0_10008a84

; uselistorder directives
  uselistorder label %dec_label_pc_10008a74, { 1, 0 }
}

define i32 @function_10008a88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008a88:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008aa0 = call i32 @__asm_mfcr()
  %v1_10008aa4 = and i32 %v0_10008aa0, 268435456
  %v3_10008aa4 = icmp eq i32 %v1_10008aa4, 0
  store i32 %v0_10008aa0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008aa4, label %dec_label_pc_10008abc, label %dec_label_pc_10008ab0

dec_label_pc_10008ab0:                            ; preds = %dec_label_pc_10008a88
  %v0_10008ab0 = call i32 @function_10008d44()
  %v0_10008ab4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008ab4 = inttoptr i32 %v0_10008ab0 to i32*
  store i32 %v0_10008ab4, i32* %v2_10008ab4, align 4
  br label %dec_label_pc_10008abc

dec_label_pc_10008abc:                            ; preds = %dec_label_pc_10008a88, %dec_label_pc_10008ab0
  %v0_10008acc = phi i32 [ %v0_10008aa0, %dec_label_pc_10008a88 ], [ -1, %dec_label_pc_10008ab0 ]
  ret i32 %v0_10008acc

; uselistorder directives
  uselistorder label %dec_label_pc_10008abc, { 1, 0 }
}

define i32 @function_10008ad0(i32* %arg1) local_unnamed_addr {
dec_label_pc_10008ad0:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008aec = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008aec, i32* @r30, align 4
  %v2_10008af4 = load i32, i32* %arg1, align 4
  store i32 %v2_10008aec, i32* @r3, align 4
  %v3_10008b00 = icmp eq i32 %v2_10008af4, -1
  br i1 %v3_10008b00, label %dec_label_pc_10008b08, label %dec_label_pc_10008b1c

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008ad0
  %v0_10008b08 = call i32 @function_10008d44()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008b14 = inttoptr i32 %v0_10008b08 to i32*
  store i32 9, i32* %v2_10008b14, align 4
  %v0_10008b60.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008b5c

dec_label_pc_10008b1c:                            ; preds = %dec_label_pc_10008ad0
  %v3_10008b1c = call i32 @function_1000a0ac(i32 %v2_10008aec, i32 ptrtoint ([3 x i8]* @global_var_1000a0a4.281 to i32))
  %v0_10008b24 = call i32 @function_1000a0a4()
  %v0_10008b2c = load i32, i32* @r31, align 4
  %v1_10008b2c = inttoptr i32 %v0_10008b2c to i32*
  %v2_10008b2c = load i32, i32* %v1_10008b2c, align 4
  store i32 %v2_10008b2c, i32* @r29, align 4
  store i32 -1, i32* %v1_10008b2c, align 4
  store i32 %v2_10008aec, i32* @r3, align 4
  %v2_10008b3c = call i32 @function_1000a0ac(i32 %v2_10008aec, i32 1)
  %v0_10008b40 = load i32, i32* @r31, align 4
  %v1_10008b40 = add i32 %v0_10008b40, 12
  %v2_10008b40 = inttoptr i32 %v1_10008b40 to i32*
  %v3_10008b40 = load i32, i32* %v2_10008b40, align 4
  store i32 %v3_10008b40, i32* @r3, align 4
  store i32 268471112, i32* @lr, align 4
  %v0_10008b44 = call i32 @function_10009710()
  %v0_10008b48 = load i32, i32* @r31, align 4
  store i32 %v0_10008b48, i32* @r3, align 4
  store i32 268471120, i32* @lr, align 4
  %v0_10008b4c = call i32 @function_10009710()
  store i32 268471128, i32* @lr, align 4
  %v0_10008b54 = call i32 @function_10008628()
  store i32 %v0_10008b54, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008b5c

dec_label_pc_10008b5c:                            ; preds = %dec_label_pc_10008b08, %dec_label_pc_10008b1c
  %v0_10008b60 = phi i32 [ %v0_10008b60.pre, %dec_label_pc_10008b08 ], [ %v0_10008b54, %dec_label_pc_10008b1c ]
  ret i32 %v0_10008b60

; uselistorder directives
  uselistorder i32 %v2_10008aec, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10008b5c, { 1, 0 }
}

define i32 @function_10008b74(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008b74:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10008b74 = load i32, i32* @lr, align 4
  store i32 %v0_10008b74, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268471188, i32* @lr, align 4
  %v2_10008b90 = call i32 @function_10008790(i32 18432, i32 18432)
  store i32 %v2_10008b90, i32* @r29, align 4
  %v1_10008b94 = icmp slt i32 %v2_10008b90, 0
  br i1 %v1_10008b94, label %dec_label_pc_10008c6c, label %dec_label_pc_10008b9c

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008b74
  %v2_10008b9c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10008b9c, i32* @r4, align 4
  store i32 268471204, i32* @lr, align 4
  %v1_10008ba0 = call i32 @function_1000a480(i32 %v2_10008b9c)
  %v1_10008ba4 = icmp slt i32 %v1_10008ba0, 0
  br i1 %v1_10008ba4, label %dec_label_pc_10008bc8, label %dec_label_pc_10008bac

dec_label_pc_10008bac:                            ; preds = %dec_label_pc_10008b9c
  %v0_10008bac = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268471232, i32* @lr, align 4
  %v2_10008bbc = call i32 @function_10008540(i32 %v0_10008bac)
  %tmp5 = icmp sgt i32 %v2_10008bbc, -1
  br i1 %tmp5, label %dec_label_pc_10008be8, label %dec_label_pc_10008bc8

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008bac, %dec_label_pc_10008b9c
  %v0_10008bc8 = call i32 @function_10008d44()
  store i32 0, i32* @r31, align 4
  store i32 %v0_10008bc8, i32* @r28, align 4
  %v1_10008bd8 = inttoptr i32 %v0_10008bc8 to i32*
  %v2_10008bd8 = load i32, i32* %v1_10008bd8, align 4
  store i32 %v2_10008bd8, i32* @r29, align 4
  store i32 268471264, i32* @lr, align 4
  %v0_10008bdc = call i32 @function_10008628()
  %v0_10008be0 = load i32, i32* @r29, align 4
  %v1_10008be0 = load i32, i32* @r28, align 4
  %v2_10008be0 = inttoptr i32 %v1_10008be0 to i32*
  store i32 %v0_10008be0, i32* %v2_10008be0, align 4
  br label %dec_label_pc_10008c6c

dec_label_pc_10008be8:                            ; preds = %dec_label_pc_10008bac
  store i32 48, i32* @r3, align 4
  store i32 268471280, i32* @lr, align 4
  %v0_10008bec = call i32 @function_10009548()
  store i32 %v0_10008bec, i32* %r31.global-to-local, align 4
  %v3_10008bf0 = icmp eq i32 %v0_10008bec, 0
  br i1 %v3_10008bf0, label %dec_label_pc_10008c44, label %dec_label_pc_10008bf8

dec_label_pc_10008bf8:                            ; preds = %dec_label_pc_10008be8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008bfc = load i32, i32* @r29, align 4
  %v2_10008bfc = inttoptr i32 %v0_10008bec to i32*
  store i32 %v0_10008bfc, i32* %v2_10008bfc, align 4
  %v0_10008c00 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008c00 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c00 = add i32 %v1_10008c00, 4
  %v3_10008c00 = inttoptr i32 %v2_10008c00 to i32*
  store i32 %v0_10008c00, i32* %v3_10008c00, align 4
  %v0_10008c04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008c04 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c04 = add i32 %v1_10008c04, 16
  %v3_10008c04 = inttoptr i32 %v2_10008c04 to i32*
  store i32 %v0_10008c04, i32* %v3_10008c04, align 4
  %v0_10008c08 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008c08 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c08 = add i32 %v1_10008c08, 8
  %v3_10008c08 = inttoptr i32 %v2_10008c08 to i32*
  store i32 %v0_10008c08, i32* %v3_10008c08, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10008c10 = icmp ugt i32 %tmp, 511
  %v1_10008c14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c14 = add i32 %v1_10008c14, 20
  %v3_10008c14 = inttoptr i32 %v2_10008c14 to i32*
  store i32 %tmp, i32* %v3_10008c14, align 4
  br i1 %v2_10008c10, label %dec_label_pc_10008c24, label %dec_label_pc_10008c1c

dec_label_pc_10008c1c:                            ; preds = %dec_label_pc_10008bf8
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10008c20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c20 = add i32 %v1_10008c20, 20
  %v3_10008c20 = inttoptr i32 %v2_10008c20 to i32*
  store i32 512, i32* %v3_10008c20, align 4
  br label %dec_label_pc_10008c24

dec_label_pc_10008c24:                            ; preds = %dec_label_pc_10008bf8, %dec_label_pc_10008c1c
  %v0_10008c24 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008c24 = add i32 %v0_10008c24, 20
  %v2_10008c24 = inttoptr i32 %v1_10008c24 to i32*
  %v3_10008c24 = load i32, i32* %v2_10008c24, align 4
  store i32 268471344, i32* @lr, align 4
  %v2_10008c2c = call i32 @function_100096a0(i32 1, i32 %v3_10008c24)
  %v3_10008c30 = icmp eq i32 %v2_10008c2c, 0
  %v1_10008c34 = load i32, i32* @r31, align 4
  %v2_10008c34 = add i32 %v1_10008c34, 12
  %v3_10008c34 = inttoptr i32 %v2_10008c34 to i32*
  store i32 %v2_10008c2c, i32* %v3_10008c34, align 4
  br i1 %v3_10008c30, label %dec_label_pc_10008c3c, label %dec_label_pc_10008c60

dec_label_pc_10008c3c:                            ; preds = %dec_label_pc_10008c24
  %v0_10008c3c = load i32, i32* @r31, align 4
  store i32 %v0_10008c3c, i32* @r3, align 4
  store i32 268471364, i32* @lr, align 4
  %v0_10008c40 = call i32 @function_10009710()
  br label %dec_label_pc_10008c44

dec_label_pc_10008c44:                            ; preds = %dec_label_pc_10008be8, %dec_label_pc_10008c3c
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10008c50.284 to i32), i32* @lr, align 4
  %v0_10008c4c = call i32 @function_10008628()
  %v0_10008c50 = call i32 @function_10008d44()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10008c58 = inttoptr i32 %v0_10008c50 to i32*
  store i32 12, i32* %v2_10008c58, align 4
  br label %dec_label_pc_10008c6c

dec_label_pc_10008c60:                            ; preds = %dec_label_pc_10008c24
  %v0_10008c68 = call i32 @function_1000a0a4()
  br label %dec_label_pc_10008c6c

dec_label_pc_10008c6c:                            ; preds = %dec_label_pc_10008b74, %dec_label_pc_10008c44, %dec_label_pc_10008bc8, %dec_label_pc_10008c60
  store i32 %v0_10008b74, i32* %r0.global-to-local, align 4
  %v0_10008c70 = load i32, i32* @r31, align 4
  ret i32 %v0_10008c70

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_100096a0, { 41, 42, 26, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 0, 27, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10008628, { 17, 16, 15, 35, 34, 33, 32, 30, 31, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 14, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10008c6c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10008c44, { 1, 0 }
  uselistorder label %dec_label_pc_10008c24, { 1, 0 }
}

define i32 @function_10008c84(i32* %arg1) local_unnamed_addr {
dec_label_pc_10008c84:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10008c88 = load i32, i32* @lr, align 4
  store i32 %v0_10008c88, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008ca0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008ca0, i32* @r3, align 4
  %v3_10008cac = call i32 @function_1000a0ac(i32 %v2_10008ca0, i32 ptrtoint ([3 x i8]* @global_var_1000a0a4.281 to i32))
  %v0_10008cb4 = call i32 @function_1000a0a4()
  br label %dec_label_pc_10008cb8

dec_label_pc_10008cb8:                            ; preds = %dec_label_pc_10008cf4, %dec_label_pc_10008c84
  %v0_10008cb8 = load i32, i32* @r31, align 4
  %v1_10008cb8 = add i32 %v0_10008cb8, 4
  %v2_10008cb8 = inttoptr i32 %v1_10008cb8 to i32*
  %v3_10008cb8 = load i32, i32* %v2_10008cb8, align 4
  store i32 %v3_10008cb8, i32* %r0.global-to-local, align 4
  %v1_10008cbc = add i32 %v0_10008cb8, 8
  %v2_10008cbc = inttoptr i32 %v1_10008cbc to i32*
  %v3_10008cbc = load i32, i32* %v2_10008cbc, align 4
  store i32 %v3_10008cbc, i32* %r9.global-to-local, align 4
  %v3_10008cc0 = icmp ugt i32 %v3_10008cbc, %v3_10008cb8
  br i1 %v3_10008cc0, label %dec_label_pc_10008cf4, label %dec_label_pc_10008cc8

dec_label_pc_10008cc8:                            ; preds = %dec_label_pc_10008cb8
  %v1_10008cc8 = inttoptr i32 %v0_10008cb8 to i32*
  %v2_10008cc8 = load i32, i32* %v1_10008cc8, align 4
  store i32 %v2_10008cc8, i32* @r3, align 4
  %v1_10008ccc = add i32 %v0_10008cb8, 12
  %v2_10008ccc = inttoptr i32 %v1_10008ccc to i32*
  %v3_10008ccc = load i32, i32* %v2_10008ccc, align 4
  %v1_10008cd0 = add i32 %v0_10008cb8, 20
  %v2_10008cd0 = inttoptr i32 %v1_10008cd0 to i32*
  %v3_10008cd0 = load i32, i32* %v2_10008cd0, align 4
  store i32 %v3_10008cd0, i32* @r5, align 4
  store i32 268471512, i32* @lr, align 4
  %v4_10008cd4 = inttoptr i32 %v2_10008cc8 to i32*
  %v5_10008cd4 = call i32 @function_1000a4f4(i32* %v4_10008cd4, i32 %v3_10008ccc, i32 %v3_10008cd0, i32 %v3_10008cbc)
  %v2_10008cd8 = icmp sgt i32 %v5_10008cd4, 0
  br i1 %v2_10008cd8, label %dec_label_pc_10008ce8, label %dec_label_pc_10008ce0

dec_label_pc_10008ce0:                            ; preds = %dec_label_pc_10008cc8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10008d20

dec_label_pc_10008ce8:                            ; preds = %dec_label_pc_10008cc8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008cec = load i32, i32* @r31, align 4
  %v2_10008cec = add i32 %v1_10008cec, 8
  %v3_10008cec = inttoptr i32 %v2_10008cec to i32*
  store i32 %v5_10008cd4, i32* %v3_10008cec, align 4
  %v0_10008cf0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008cf0 = load i32, i32* @r31, align 4
  %v2_10008cf0 = add i32 %v1_10008cf0, 4
  %v3_10008cf0 = inttoptr i32 %v2_10008cf0 to i32*
  store i32 %v0_10008cf0, i32* %v3_10008cf0, align 4
  %v0_10008cf4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008cf4

dec_label_pc_10008cf4:                            ; preds = %dec_label_pc_10008cb8, %dec_label_pc_10008ce8
  %v1_10008d08 = phi i32 [ %v0_10008cb8, %dec_label_pc_10008cb8 ], [ %v0_10008cf4.pre, %dec_label_pc_10008ce8 ]
  %v1_10008cf4 = add i32 %v1_10008d08, 4
  %v2_10008cf4 = inttoptr i32 %v1_10008cf4 to i32*
  %v3_10008cf4 = load i32, i32* %v2_10008cf4, align 4
  store i32 %v3_10008cf4, i32* %r9.global-to-local, align 4
  %v1_10008cf8 = add i32 %v1_10008d08, 12
  %v2_10008cf8 = inttoptr i32 %v1_10008cf8 to i32*
  %v3_10008cf8 = load i32, i32* %v2_10008cf8, align 4
  store i32 %v3_10008cf8, i32* %r11.global-to-local, align 4
  %v2_10008cfc = add i32 %v3_10008cf8, %v3_10008cf4
  store i32 %v2_10008cfc, i32* @r29, align 4
  %v1_10008d00 = add i32 %v2_10008cfc, 8
  %v2_10008d00 = inttoptr i32 %v1_10008d00 to i16*
  %v3_10008d00 = load i16, i16* %v2_10008d00, align 2
  %v4_10008d00 = zext i16 %v3_10008d00 to i32
  %v2_10008d04 = add i32 %v4_10008d00, %v3_10008cf4
  store i32 %v2_10008d04, i32* %r0.global-to-local, align 4
  store i32 %v2_10008d04, i32* %v2_10008cf4, align 4
  %v0_10008d0c = load i32, i32* @r29, align 4
  %v1_10008d0c = add i32 %v0_10008d0c, 4
  %v2_10008d0c = inttoptr i32 %v1_10008d0c to i32*
  %v3_10008d0c = load i32, i32* %v2_10008d0c, align 4
  store i32 %v3_10008d0c, i32* %r0.global-to-local, align 4
  %v1_10008d10 = load i32, i32* @r31, align 4
  %v2_10008d10 = add i32 %v1_10008d10, 16
  %v3_10008d10 = inttoptr i32 %v2_10008d10 to i32*
  store i32 %v3_10008d0c, i32* %v3_10008d10, align 4
  %v0_10008d14 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008d14 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008d14 = add i32 %v1_10008d14, %v0_10008d14
  %v3_10008d14 = inttoptr i32 %v2_10008d14 to i32*
  %v4_10008d14 = load i32, i32* %v3_10008d14, align 4
  store i32 %v4_10008d14, i32* %r0.global-to-local, align 4
  %v3_10008d18 = icmp eq i32 %v4_10008d14, 0
  br i1 %v3_10008d18, label %dec_label_pc_10008cb8, label %dec_label_pc_10008d20

dec_label_pc_10008d20:                            ; preds = %dec_label_pc_10008cf4, %dec_label_pc_10008ce0
  store i32 %v2_10008ca0, i32* @r3, align 4
  %v2_10008d28 = call i32 @function_1000a0ac(i32 %v2_10008ca0, i32 1)
  store i32 %v0_10008c88, i32* %r0.global-to-local, align 4
  %v0_10008d30 = load i32, i32* @r29, align 4
  ret i32 %v0_10008d30

; uselistorder directives
  uselistorder i32 %v1_10008d08, { 1, 0 }
  uselistorder i32 %v0_10008cb8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10008ca0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008cf4, { 1, 0 }
}

define i32 @function_10008d44() local_unnamed_addr {
dec_label_pc_10008d44:
  ret i32 ptrtoint (i32* @global_var_1001b79c.286 to i32)
}

define i32 @function_10008d50(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008d50:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10008d58 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268471652, i32* @lr, align 4
  %v1_10008d60 = call i32 @function_1000a934(i32 %v2_10008d58)
  %v3_10008d68 = load i32, i32* %stack_var_-24, align 4
  %v2_10008d6c = add i32 %v3_10008d68, %tmp
  %v1_10008d74 = mul i32 %v2_10008d6c, 10000
  %v1_10008d80 = and i32 %v1_10008d74, 2147483632
  ret i32 %v1_10008d80
}

define i32 @function_10008d88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008d88:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10008d88 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10008d88, label %dec_label_pc_10008d9c, label %dec_label_pc_10008d98

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d88
  %v0_10008d98 = call i32 @function_1000aaf8()
  store i32 %v0_10008d98, i32* @r3, align 4
  br label %dec_label_pc_10008d9c

dec_label_pc_10008d9c:                            ; preds = %dec_label_pc_10008d88, %dec_label_pc_10008d98
  %v1_10008d9c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008d9c, i32* %r9.global-to-local, align 4
  %v4_10008d9c = icmp eq i32 %v1_10008d9c, 0
  %v2_10008da0 = add i32 %arg3, %arg2
  store i32 %v2_10008da0, i32* %r4.global-to-local, align 4
  %v0_10008da4 = load i32, i32* @r3, align 4
  %v2_10008da4 = add i32 %v0_10008da4, %arg3
  store i32 %v2_10008da4, i32* %r10.global-to-local, align 4
  br i1 %v4_10008d9c, label %dec_label_pc_10008dcc, label %dec_label_pc_10008dac

dec_label_pc_10008dac:                            ; preds = %dec_label_pc_10008d9c
  %v1_10008dac = urem i32 %v2_10008da4, 4
  %v3_10008dac = icmp eq i32 %v1_10008dac, 0
  br i1 %v3_10008dac, label %dec_label_pc_10008db4, label %dec_label_pc_10008e00

dec_label_pc_10008db4:                            ; preds = %dec_label_pc_10008e18.dec_label_pc_10008db4_crit_edge, %dec_label_pc_10008dac
  %v1_10008dc0.pre = phi i32 [ %v1_10008dc0.pre.pre, %dec_label_pc_10008e18.dec_label_pc_10008db4_crit_edge ], [ %v2_10008da4, %dec_label_pc_10008dac ]
  %v0_10008db4 = phi i32 [ %v1_10008e18, %dec_label_pc_10008e18.dec_label_pc_10008db4_crit_edge ], [ %v1_10008d9c, %dec_label_pc_10008dac ]
  store i32 %v0_10008db4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008db8

dec_label_pc_10008db8:                            ; preds = %dec_label_pc_10008db8, %dec_label_pc_10008db4
  %v1_10008dc0 = phi i32 [ %v2_10008dc4, %dec_label_pc_10008db8 ], [ %v1_10008dc0.pre, %dec_label_pc_10008db4 ]
  %v0_10008db8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008db8 = add i32 %v0_10008db8, -4
  %v2_10008db8 = inttoptr i32 %v1_10008db8 to i32*
  %v3_10008db8 = load i32, i32* %v2_10008db8, align 4
  %v1_10008dbc = add i32 %v0_10008db8, -8
  %v2_10008dbc = inttoptr i32 %v1_10008dbc to i32*
  %v3_10008dbc = load i32, i32* %v2_10008dbc, align 4
  store i32 %v3_10008dbc, i32* %r9.global-to-local, align 4
  store i32 %v1_10008dbc, i32* %r4.global-to-local, align 4
  %v2_10008dc0 = add i32 %v1_10008dc0, -4
  %v3_10008dc0 = inttoptr i32 %v2_10008dc0 to i32*
  store i32 %v3_10008db8, i32* %v3_10008dc0, align 4
  %v0_10008dc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008dc4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008dc4 = add i32 %v1_10008dc4, -8
  %v3_10008dc4 = inttoptr i32 %v2_10008dc4 to i32*
  store i32 %v0_10008dc4, i32* %v3_10008dc4, align 4
  store i32 %v2_10008dc4, i32* %r10.global-to-local, align 4
  %v0_10008dc8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008dc8 = add i32 %v0_10008dc8, -1
  store i32 %v1_10008dc8, i32* %ctr.global-to-local, align 4
  %v2_10008dc8 = icmp eq i32 %v1_10008dc8, 0
  br i1 %v2_10008dc8, label %dec_label_pc_10008dcc, label %dec_label_pc_10008db8

dec_label_pc_10008dcc:                            ; preds = %dec_label_pc_10008db8, %dec_label_pc_10008e18, %dec_label_pc_10008d9c
  %v0_10008dcc = load i32, i32* @r11, align 4
  %v1_10008dcc = urem i32 %v0_10008dcc, 8
  store i32 %v1_10008dcc, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10008dcc, 4
  br i1 %tmp, label %dec_label_pc_10008de4, label %dec_label_pc_10008dd8

dec_label_pc_10008dd8:                            ; preds = %dec_label_pc_10008dcc
  %v0_10008dd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008dd8 = add i32 %v0_10008dd8, -4
  %v2_10008dd8 = inttoptr i32 %v1_10008dd8 to i32*
  %v3_10008dd8 = load i32, i32* %v2_10008dd8, align 4
  store i32 %v1_10008dd8, i32* %r4.global-to-local, align 4
  %v1_10008ddc = add nsw i32 %v1_10008dcc, -4
  store i32 %v1_10008ddc, i32* %r5.global-to-local, align 4
  %v1_10008de0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008de0 = add i32 %v1_10008de0, -4
  %v3_10008de0 = inttoptr i32 %v2_10008de0 to i32*
  store i32 %v3_10008dd8, i32* %v3_10008de0, align 4
  store i32 %v2_10008de0, i32* %r10.global-to-local, align 4
  %v0_10008de4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008de4

dec_label_pc_10008de4:                            ; preds = %dec_label_pc_10008dcc, %dec_label_pc_10008dd8
  %v0_10008dec = phi i32 [ %v1_10008dcc, %dec_label_pc_10008dcc ], [ %v0_10008de4.pre, %dec_label_pc_10008dd8 ]
  %v3_10008de4 = icmp eq i32 %v0_10008dec, 0
  br i1 %v3_10008de4, label %dec_label_pc_10008e24, label %dec_label_pc_10008dec

dec_label_pc_10008dec:                            ; preds = %dec_label_pc_10008de4
  store i32 %v0_10008dec, i32* %ctr.global-to-local, align 4
  %v2_10008df4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008df0

dec_label_pc_10008df0:                            ; preds = %dec_label_pc_10008df0, %dec_label_pc_10008dec
  %v2_10008df4 = phi i32 [ %v3_10008df4, %dec_label_pc_10008df0 ], [ %v2_10008df4.pre, %dec_label_pc_10008dec ]
  %v0_10008df0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008df0 = add i32 %v0_10008df0, -1
  %v2_10008df0 = inttoptr i32 %v1_10008df0 to i8*
  %v3_10008df0 = load i8, i8* %v2_10008df0, align 1
  store i32 %v1_10008df0, i32* %r4.global-to-local, align 4
  %v3_10008df4 = add i32 %v2_10008df4, -1
  %v4_10008df4 = inttoptr i32 %v3_10008df4 to i8*
  store i8 %v3_10008df0, i8* %v4_10008df4, align 1
  store i32 %v3_10008df4, i32* %r10.global-to-local, align 4
  %v0_10008df8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008df8 = add i32 %v0_10008df8, -1
  store i32 %v1_10008df8, i32* %ctr.global-to-local, align 4
  %v2_10008df8 = icmp eq i32 %v1_10008df8, 0
  br i1 %v2_10008df8, label %dec_label_pc_10008e24, label %dec_label_pc_10008df0

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008dac
  %v1_10008e00 = sub nsw i32 4, %v1_10008dac
  store i32 %v1_10008e00, i32* %ctr.global-to-local, align 4
  %v2_10008e08 = sub i32 %arg3, %v1_10008e00
  store i32 %v2_10008e08, i32* @r11, align 4
  %v1_10008e0c8 = add i32 %v2_10008da0, -1
  %v2_10008e0c9 = inttoptr i32 %v1_10008e0c8 to i8*
  %v3_10008e0c10 = load i8, i8* %v2_10008e0c9, align 1
  store i32 %v1_10008e0c8, i32* %r4.global-to-local, align 4
  %v3_10008e1012 = add i32 %v2_10008da4, -1
  %v4_10008e1013 = inttoptr i32 %v3_10008e1012 to i8*
  store i8 %v3_10008e0c10, i8* %v4_10008e1013, align 1
  store i32 %v3_10008e1012, i32* %r10.global-to-local, align 4
  %v0_10008e1414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e1415 = add i32 %v0_10008e1414, -1
  store i32 %v1_10008e1415, i32* %ctr.global-to-local, align 4
  %v2_10008e1416 = icmp eq i32 %v1_10008e1415, 0
  br i1 %v2_10008e1416, label %dec_label_pc_10008e18, label %dec_label_pc_10008e0c.dec_label_pc_10008e0c_crit_edge

dec_label_pc_10008e0c.dec_label_pc_10008e0c_crit_edge: ; preds = %dec_label_pc_10008e00, %dec_label_pc_10008e0c.dec_label_pc_10008e0c_crit_edge
  %v3_10008e1017 = phi i32 [ %v3_10008e10, %dec_label_pc_10008e0c.dec_label_pc_10008e0c_crit_edge ], [ %v3_10008e1012, %dec_label_pc_10008e00 ]
  %v0_10008e0c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008e0c = add i32 %v0_10008e0c.pre, -1
  %v2_10008e0c = inttoptr i32 %v1_10008e0c to i8*
  %v3_10008e0c = load i8, i8* %v2_10008e0c, align 1
  store i32 %v1_10008e0c, i32* %r4.global-to-local, align 4
  %v3_10008e10 = add i32 %v3_10008e1017, -1
  %v4_10008e10 = inttoptr i32 %v3_10008e10 to i8*
  store i8 %v3_10008e0c, i8* %v4_10008e10, align 1
  store i32 %v3_10008e10, i32* %r10.global-to-local, align 4
  %v0_10008e14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e14 = add i32 %v0_10008e14, -1
  store i32 %v1_10008e14, i32* %ctr.global-to-local, align 4
  %v2_10008e14 = icmp eq i32 %v1_10008e14, 0
  br i1 %v2_10008e14, label %dec_label_pc_10008e18, label %dec_label_pc_10008e0c.dec_label_pc_10008e0c_crit_edge

dec_label_pc_10008e18:                            ; preds = %dec_label_pc_10008e0c.dec_label_pc_10008e0c_crit_edge, %dec_label_pc_10008e00
  %v0_10008e18 = load i32, i32* @r11, align 4
  %v1_10008e18 = call i32 @__asm_rlwinm.(i32 %v0_10008e18, i32 29, i32 3, i32 31)
  store i32 %v1_10008e18, i32* %r9.global-to-local, align 4
  %v4_10008e18 = icmp eq i32 %v1_10008e18, 0
  br i1 %v4_10008e18, label %dec_label_pc_10008dcc, label %dec_label_pc_10008e18.dec_label_pc_10008db4_crit_edge

dec_label_pc_10008e18.dec_label_pc_10008db4_crit_edge: ; preds = %dec_label_pc_10008e18
  %v1_10008dc0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008db4

dec_label_pc_10008e24:                            ; preds = %dec_label_pc_10008df0, %dec_label_pc_10008de4
  %v0_10008e24 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10008e24

; uselistorder directives
  uselistorder i32 %v1_10008e18, { 1, 2, 0 }
  uselistorder i32 %v1_10008e14, { 1, 0 }
  uselistorder i32 %v3_10008e10, { 1, 2, 0 }
  uselistorder i32 %v1_10008df8, { 1, 0 }
  uselistorder i32 %v3_10008df4, { 1, 2, 0 }
  uselistorder i32 %v1_10008dcc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10008dc8, { 1, 0 }
  uselistorder i32 %v2_10008dc4, { 1, 2, 0 }
  uselistorder i32 %v1_10008dac, { 1, 0 }
  uselistorder i32 %v2_10008da4, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 7, 0, 9, 1, 8, 2, 5, 3, 6, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_10008e0c.dec_label_pc_10008e0c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008de4, { 1, 0 }
  uselistorder label %dec_label_pc_10008dcc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008d9c, { 1, 0 }
}

define i32 @function_10008e2c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008e2c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10008e2c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008e2c, i32* %r9.global-to-local, align 4
  %v4_10008e2c = icmp eq i32 %v1_10008e2c, 0
  %v1_10008e34 = add i32 %arg1, -4
  store i32 %v1_10008e34, i32* %r11.global-to-local, align 4
  %v1_10008e38 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10008e3c = call i32 @__asm_rlwimi(i32 %v1_10008e38, i32 16, i32 0, i32 15)
  %v2_10008e3c = trunc i32 %v1_10008e3c to i8
  br i1 %v4_10008e2c, label %dec_label_pc_10008e64, label %dec_label_pc_10008e44

dec_label_pc_10008e44:                            ; preds = %dec_label_pc_10008e2c
  %v0_10008e44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008e44 = urem i32 %v0_10008e44, 4
  %v3_10008e44 = icmp eq i32 %v1_10008e44, 0
  br i1 %v3_10008e44, label %dec_label_pc_10008e44.dec_label_pc_10008e4c_crit_edge, label %dec_label_pc_10008e94

dec_label_pc_10008e44.dec_label_pc_10008e4c_crit_edge: ; preds = %dec_label_pc_10008e44
  %v0_10008e4c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008e4c

dec_label_pc_10008e4c:                            ; preds = %dec_label_pc_10008eac.dec_label_pc_10008e4c_crit_edge, %dec_label_pc_10008e44.dec_label_pc_10008e4c_crit_edge
  %v0_10008e50.pre = phi i32 [ %v0_10008e44, %dec_label_pc_10008e44.dec_label_pc_10008e4c_crit_edge ], [ %v0_10008e50.pre.pre, %dec_label_pc_10008eac.dec_label_pc_10008e4c_crit_edge ]
  %v0_10008e4c = phi i32 [ %v0_10008e4c.pre, %dec_label_pc_10008e44.dec_label_pc_10008e4c_crit_edge ], [ %v1_10008eac, %dec_label_pc_10008eac.dec_label_pc_10008e4c_crit_edge ]
  store i32 %v0_10008e4c, i32* %ctr.global-to-local, align 4
  %v1_10008e54 = sext i8 %v2_10008e3c to i32
  br label %dec_label_pc_10008e50

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e50, %dec_label_pc_10008e4c
  %v0_10008e50 = phi i32 [ %v1_10008e5c, %dec_label_pc_10008e50 ], [ %v0_10008e50.pre, %dec_label_pc_10008e4c ]
  %v1_10008e50 = add i32 %v0_10008e50, 4
  store i32 %v1_10008e50, i32* %r9.global-to-local, align 4
  %v4_10008e54 = inttoptr i32 %v1_10008e50 to i32*
  store i32 %v1_10008e54, i32* %v4_10008e54, align 4
  %v2_10008e58 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008e58 = add i32 %v2_10008e58, 4
  %v4_10008e58 = inttoptr i32 %v3_10008e58 to i32*
  store i32 %v1_10008e54, i32* %v4_10008e58, align 4
  %v0_10008e5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e5c = add i32 %v0_10008e5c, 4
  store i32 %v1_10008e5c, i32* %r11.global-to-local, align 4
  %v0_10008e60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e60 = add i32 %v0_10008e60, -1
  store i32 %v1_10008e60, i32* %ctr.global-to-local, align 4
  %v2_10008e60 = icmp eq i32 %v1_10008e60, 0
  br i1 %v2_10008e60, label %dec_label_pc_10008e64, label %dec_label_pc_10008e50

dec_label_pc_10008e64:                            ; preds = %dec_label_pc_10008e50, %dec_label_pc_10008eac, %dec_label_pc_10008e2c
  %v0_10008e64 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008e64 = urem i32 %v0_10008e64, 8
  store i32 %v1_10008e64, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10008e64, 4
  br i1 %tmp, label %dec_label_pc_10008e78, label %dec_label_pc_10008e70

dec_label_pc_10008e70:                            ; preds = %dec_label_pc_10008e64
  %v1_10008e70 = sext i8 %v2_10008e3c to i32
  %v2_10008e70 = load i32, i32* %r11.global-to-local, align 4
  %v3_10008e70 = add i32 %v2_10008e70, 4
  %v4_10008e70 = inttoptr i32 %v3_10008e70 to i32*
  store i32 %v1_10008e70, i32* %v4_10008e70, align 4
  store i32 %v3_10008e70, i32* %r11.global-to-local, align 4
  %v0_10008e74 = load i32, i32* @r5, align 4
  %v1_10008e74 = add i32 %v0_10008e74, -4
  store i32 %v1_10008e74, i32* @r5, align 4
  br label %dec_label_pc_10008e78

dec_label_pc_10008e78:                            ; preds = %dec_label_pc_10008e64, %dec_label_pc_10008e70
  %v0_10008e78 = phi i32 [ %v1_10008e64, %dec_label_pc_10008e64 ], [ %v1_10008e74, %dec_label_pc_10008e70 ]
  %v3_10008e78 = icmp eq i32 %v0_10008e78, 0
  %v0_10008e7c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008e78, i32 %v0_10008e7c)
  %v0_10008e80 = load i32, i32* @r5, align 4
  store i32 %v0_10008e80, i32* %ctr.global-to-local, align 4
  %v0_10008e84 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008e84 = add i32 %v0_10008e84, 3
  store i32 %v1_10008e84, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008e88

dec_label_pc_10008e88:                            ; preds = %dec_label_pc_10008e88, %dec_label_pc_10008e78
  %v3_10008e88 = phi i32 [ %v4_10008e88, %dec_label_pc_10008e88 ], [ %v1_10008e84, %dec_label_pc_10008e78 ]
  %v4_10008e88 = add i32 %v3_10008e88, 1
  %v5_10008e88 = inttoptr i32 %v4_10008e88 to i8*
  store i8 %v2_10008e3c, i8* %v5_10008e88, align 1
  store i32 %v4_10008e88, i32* %r9.global-to-local, align 4
  %v0_10008e8c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e8c = add i32 %v0_10008e8c, -1
  store i32 %v1_10008e8c, i32* %ctr.global-to-local, align 4
  %v2_10008e8c = icmp eq i32 %v1_10008e8c, 0
  br i1 %v2_10008e8c, label %dec_label_pc_10008eb8, label %dec_label_pc_10008e88

dec_label_pc_10008e94:                            ; preds = %dec_label_pc_10008e44
  %v1_10008e94 = sub nsw i32 4, %v1_10008e44
  store i32 %v1_10008e94, i32* %ctr.global-to-local, align 4
  %v1_10008e9c = load i32, i32* %r5.global-to-local, align 4
  %v2_10008e9c = sub i32 %v1_10008e9c, %v1_10008e94
  store i32 %v2_10008e9c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008ea0

dec_label_pc_10008ea0:                            ; preds = %dec_label_pc_10008ea0, %dec_label_pc_10008e94
  %v3_10008ea0 = phi i32 [ %v1_10008ea4, %dec_label_pc_10008ea0 ], [ %v0_10008e44, %dec_label_pc_10008e94 ]
  %v4_10008ea0 = add i32 %v3_10008ea0, 4
  %v5_10008ea0 = inttoptr i32 %v4_10008ea0 to i8*
  store i8 %v2_10008e3c, i8* %v5_10008ea0, align 1
  %v0_10008ea4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008ea4 = add i32 %v0_10008ea4, 1
  store i32 %v1_10008ea4, i32* %r11.global-to-local, align 4
  %v0_10008ea8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ea8 = add i32 %v0_10008ea8, -1
  store i32 %v1_10008ea8, i32* %ctr.global-to-local, align 4
  %v2_10008ea8 = icmp eq i32 %v1_10008ea8, 0
  br i1 %v2_10008ea8, label %dec_label_pc_10008eac, label %dec_label_pc_10008ea0

dec_label_pc_10008eac:                            ; preds = %dec_label_pc_10008ea0
  %v0_10008eac = load i32, i32* %r5.global-to-local, align 4
  %v1_10008eac = call i32 @__asm_rlwinm.(i32 %v0_10008eac, i32 29, i32 3, i32 31)
  store i32 %v1_10008eac, i32* %r9.global-to-local, align 4
  %v4_10008eac = icmp eq i32 %v1_10008eac, 0
  br i1 %v4_10008eac, label %dec_label_pc_10008e64, label %dec_label_pc_10008eac.dec_label_pc_10008e4c_crit_edge

dec_label_pc_10008eac.dec_label_pc_10008e4c_crit_edge: ; preds = %dec_label_pc_10008eac
  %v0_10008e50.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008e4c

dec_label_pc_10008eb8:                            ; preds = %dec_label_pc_10008e88
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008eac, { 1, 2, 0 }
  uselistorder i32 %v1_10008ea8, { 1, 0 }
  uselistorder i32 %v1_10008ea4, { 1, 0 }
  uselistorder i32 %v1_10008e8c, { 1, 0 }
  uselistorder i32 %v4_10008e88, { 1, 2, 0 }
  uselistorder i32 %v1_10008e64, { 2, 1, 0 }
  uselistorder i32 %v1_10008e60, { 1, 0 }
  uselistorder i32 %v1_10008e5c, { 1, 0 }
  uselistorder i32 %v1_10008e44, { 1, 0 }
  uselistorder i32 %v0_10008e44, { 2, 1, 0 }
  uselistorder i8 %v2_10008e3c, { 2, 3, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_10008e78, { 1, 0 }
  uselistorder label %dec_label_pc_10008e64, { 1, 0, 2 }
}

define i32 @function_10008ebc(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10008ebc:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008ebc = add i32 %arg1, -1
  %v1_10008ec0 = sub i32 %v2_10008ebc, %tmp
  store i32 %v1_10008ec0, i32* %r9.global-to-local, align 4
  %v2_10008ec44 = load i8, i8* %arg2, align 1
  %v1_10008ec86 = add i32 %tmp, 1
  store i32 %v1_10008ec86, i32* %r4.global-to-local, align 4
  %v3_10008ecc7 = icmp eq i8 %v2_10008ec44, 0
  store i1 %v3_10008ecc7, i1* %cr7_eq.global-to-local, align 1
  %v5_10008ed08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10008ec44, i8* %v5_10008ed08, align 1
  %v0_10008ed49 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008ed49, label %dec_label_pc_10008ed8, label %dec_label_pc_10008ec4.dec_label_pc_10008ec4_crit_edge

dec_label_pc_10008ec4.dec_label_pc_10008ec4_crit_edge: ; preds = %dec_label_pc_10008ebc, %dec_label_pc_10008ec4.dec_label_pc_10008ec4_crit_edge
  %v0_10008ec4.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10008ed0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008ec4 = inttoptr i32 %v0_10008ec4.pre to i8*
  %v2_10008ec4 = load i8, i8* %v1_10008ec4, align 1
  %v1_10008ec8 = add i32 %v0_10008ec4.pre, 1
  store i32 %v1_10008ec8, i32* %r4.global-to-local, align 4
  %v3_10008ecc = icmp eq i8 %v2_10008ec4, 0
  store i1 %v3_10008ecc, i1* %cr7_eq.global-to-local, align 1
  %v4_10008ed0 = add i32 %v1_10008ec8, %v2_10008ed0.pre
  %v5_10008ed0 = inttoptr i32 %v4_10008ed0 to i8*
  store i8 %v2_10008ec4, i8* %v5_10008ed0, align 1
  %v0_10008ed4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008ed4, label %dec_label_pc_10008ed8, label %dec_label_pc_10008ec4.dec_label_pc_10008ec4_crit_edge

dec_label_pc_10008ed8:                            ; preds = %dec_label_pc_10008ec4.dec_label_pc_10008ec4_crit_edge, %dec_label_pc_10008ebc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008ec4.dec_label_pc_10008ec4_crit_edge, { 1, 0 }
}

define i32 @function_10008edc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008edc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008ee0 = load i32, i32* @lr, align 4
  store i32 %v0_10008ee0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008ef0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268472068, i32* @lr, align 4
  %v3_10008f00 = call i32 @function_10008458(i32 1076655123, i32 %v2_10008ef0, i32 %v2_10008ef0)
  %v2_10008f04 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008f04, i32* @r4, align 4
  store i32 %v3_10008f00, i32* @r30, align 4
  %v3_10008f08 = icmp eq i32 %v3_10008f00, 0
  %v0_10008f10 = load i32, i32* @r31, align 4
  br i1 %v3_10008f08, label %dec_label_pc_10008f18, label %dec_label_pc_10008f60

dec_label_pc_10008f18:                            ; preds = %dec_label_pc_10008edc
  %v1_10008f10 = add i32 %v0_10008f10, 17
  %v3_10008f30 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10008f30, i32* %r0.global-to-local, align 4
  %v2_10008f34 = add i32 %v0_10008f10, 4
  %v3_10008f34 = inttoptr i32 %v2_10008f34 to i32*
  store i32 %tmp7, i32* %v3_10008f34, align 4
  %v0_10008f38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f38 = load i32, i32* @r31, align 4
  %v2_10008f38 = inttoptr i32 %v1_10008f38 to i32*
  store i32 %v0_10008f38, i32* %v2_10008f38, align 4
  %v0_10008f3c = load i32, i32* %r11.global-to-local, align 4
  %v1_10008f3c = load i32, i32* @r31, align 4
  %v2_10008f3c = add i32 %v1_10008f3c, 8
  %v3_10008f3c = inttoptr i32 %v2_10008f3c to i32*
  store i32 %v0_10008f3c, i32* %v3_10008f3c, align 4
  %v0_10008f40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008f40 = load i32, i32* @r31, align 4
  %v2_10008f40 = add i32 %v1_10008f40, 12
  %v3_10008f40 = inttoptr i32 %v2_10008f40 to i32*
  store i32 %v0_10008f40, i32* %v3_10008f40, align 4
  %v3_10008f44 = load i32, i32* @r31, align 4
  %v4_10008f44 = add i32 %v3_10008f44, 16
  %v5_10008f44 = inttoptr i32 %v4_10008f44 to i8*
  store i8 %tmp4, i8* %v5_10008f44, align 1
  %v1_10008f48 = load i32, i32* @r31, align 4
  %v2_10008f48 = add i32 %v1_10008f48, 52
  %v3_10008f48 = inttoptr i32 %v2_10008f48 to i32*
  store i32 %tmp3, i32* %v3_10008f48, align 4
  %v1_10008f4c = load i32, i32* @r31, align 4
  %v2_10008f4c = add i32 %v1_10008f4c, 56
  %v3_10008f4c = inttoptr i32 %v2_10008f4c to i32*
  store i32 %tmp2, i32* %v3_10008f4c, align 4
  store i32 268472148, i32* @lr, align 4
  %v6_10008f50 = sext i8 %tmp4 to i32
  %v8_10008f50 = call i32 @function_1000ab94(i32 %v1_10008f10, i32 %v2_10008f04, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10008f50, i32 %tmp7)
  store i32 268472160, i32* @lr, align 4
  %v3_10008f5c = call i32 @function_10008e2c(i32 %v8_10008f50, i32 0, i32 13)
  %v0_10008f64.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008f60

dec_label_pc_10008f60:                            ; preds = %dec_label_pc_10008edc, %dec_label_pc_10008f18
  %v0_10008f64 = phi i32 [ %v3_10008f00, %dec_label_pc_10008edc ], [ %v0_10008f64.pre, %dec_label_pc_10008f18 ]
  store i32 %v0_10008ee0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008f64

; uselistorder directives
  uselistorder i32 %v2_10008ef0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 6, 23, 24, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 22, 25, 26, 2, 27, 28, 3, 29, 30, 4, 31, 32, 5 }
  uselistorder label %dec_label_pc_10008f60, { 1, 0 }
}

define i32 @function_10008f78() local_unnamed_addr {
dec_label_pc_10008f78:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008f78 = load i32, i32* @r4, align 4
  %v3_10008f78 = icmp eq i32 %v0_10008f78, 1
  %v0_10008f88 = load i32, i32* @r3, align 4
  store i32 %v0_10008f88, i32* %r27.global-to-local, align 4
  %v0_10008f90 = load i32, i32* @r5, align 4
  store i32 %v0_10008f90, i32* @r31, align 4
  br i1 %v3_10008f78, label %dec_label_pc_10008fb4, label %dec_label_pc_10008f98

dec_label_pc_10008f98:                            ; preds = %dec_label_pc_10008f78
  %v3_10008f98 = icmp eq i32 %v0_10008f78, 2
  br i1 %v3_10008f98, label %dec_label_pc_10008fd4, label %dec_label_pc_10008fa0

dec_label_pc_10008fa0:                            ; preds = %dec_label_pc_10008f98
  %v3_10008fa0 = icmp eq i32 %v0_10008f78, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10008fa0, label %dec_label_pc_10008fdc, label %dec_label_pc_10008fc0

dec_label_pc_10008fb4:                            ; preds = %dec_label_pc_10008f78
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10008fdc

dec_label_pc_10008fc0:                            ; preds = %dec_label_pc_10008fa0
  %v0_10008fc0 = call i32 @function_10008d44()
  store i32 -1, i32* @r28, align 4
  %v2_10008fcc = inttoptr i32 %v0_10008fc0 to i32*
  store i32 22, i32* %v2_10008fcc, align 4
  br label %dec_label_pc_100090c4

dec_label_pc_10008fd4:                            ; preds = %dec_label_pc_10008f98
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10008fdc

dec_label_pc_10008fdc:                            ; preds = %dec_label_pc_10008fa0, %dec_label_pc_10008fb4, %dec_label_pc_10008fd4
  %v1_10008fdc = inttoptr i32 %v0_10008f90 to i32*
  %v2_10008fdc = load i32, i32* %v1_10008fdc, align 4
  store i32 19, i32* @r5, align 4
  %v1_10008fe4 = add i32 %v0_10008f90, 4
  %v2_10008fe4 = inttoptr i32 %v1_10008fe4 to i32*
  %v3_10008fe4 = load i32, i32* %v2_10008fe4, align 4
  store i32 %v3_10008fe4, i32* %r9.global-to-local, align 4
  %v1_10008fe8 = add i32 %v0_10008f90, 17
  store i32 %v1_10008fe8, i32* @r4, align 4
  %v1_10008fec = add i32 %v0_10008f90, 8
  %v2_10008fec = inttoptr i32 %v1_10008fec to i32*
  %v3_10008fec = load i32, i32* %v2_10008fec, align 4
  %v2_10008ff0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008ff0, i32* @r3, align 4
  %v2_10008ff8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10008fdc, i32* %stack_var_-72, align 4
  store i32 268472360, i32* @lr, align 4
  %v0_10009024 = call i32 @function_1000aaf8()
  %v0_10009028 = load i32, i32* %r27.global-to-local, align 4
  %v0_1000902c = load i32, i32* @r30, align 4
  store i32 268472380, i32* @lr, align 4
  %v3_10009038 = call i32 @function_10008458(i32 %v0_10009028, i32 %v0_1000902c, i32 %v2_10008ff8)
  store i32 %v3_10009038, i32* @r28, align 4
  %v3_1000903c = icmp eq i32 %v3_10009038, 0
  br i1 %v3_1000903c, label %dec_label_pc_10009044, label %dec_label_pc_100090c4

dec_label_pc_10009044:                            ; preds = %dec_label_pc_10008fdc
  %v0_10009044 = load i32, i32* @r30, align 4
  %v3_10009048 = icmp eq i32 %v0_10009044, -2144570348
  br i1 %v3_10009048, label %dec_label_pc_10009050, label %dec_label_pc_100090c0

dec_label_pc_10009050:                            ; preds = %dec_label_pc_10009044
  %v0_10009050 = call i32 @function_10008d44()
  store i32 %v0_10009050, i32* @r29, align 4
  %v0_10009060 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009068 = inttoptr i32 %v0_10009050 to i32*
  %v2_10009068 = load i32, i32* %v1_10009068, align 4
  store i32 %v2_10009068, i32* @r30, align 4
  store i32 268472436, i32* @lr, align 4
  %v3_10009070 = call i32 @function_10008458(i32 %v0_10009060, i32 1076655123, i32 %v2_10008ff8)
  %v3_10009074 = icmp eq i32 %v3_10009070, 0
  br i1 %v3_10009074, label %dec_label_pc_10009084, label %dec_label_pc_1000907c

dec_label_pc_1000907c:                            ; preds = %dec_label_pc_10009050
  %v0_1000907c = load i32, i32* @r30, align 4
  %v1_1000907c = load i32, i32* @r29, align 4
  %v2_1000907c = inttoptr i32 %v1_1000907c to i32*
  store i32 %v0_1000907c, i32* %v2_1000907c, align 4
  br label %dec_label_pc_100090c4

dec_label_pc_10009084:                            ; preds = %dec_label_pc_10009050
  %v0_10009084 = load i32, i32* @r31, align 4
  %v1_10009084 = add i32 %v0_10009084, 8
  %v2_10009084 = inttoptr i32 %v1_10009084 to i32*
  %v3_10009084 = load i32, i32* %v2_10009084, align 4
  %v1_1000908c = call i32 @__asm_rlwinm(i32 %v3_10009084, i32 0, i32 19, i32 20)
  %v1_10009090 = call i32 @__asm_rlwinm(i32 %v3_10008fec, i32 0, i32 19, i32 20)
  store i32 %v1_10009090, i32* %r9.global-to-local, align 4
  %v4_10009094 = icmp eq i32 %v1_1000908c, %v1_10009090
  br i1 %v4_10009094, label %dec_label_pc_1000909c, label %dec_label_pc_100090b0

dec_label_pc_1000909c:                            ; preds = %dec_label_pc_10009084
  %v1_1000909c = and i32 %v3_10009084, 768
  store i32 %v1_1000909c, i32* %r9.global-to-local, align 4
  %v3_1000909c = icmp eq i32 %v1_1000909c, 0
  br i1 %v3_1000909c, label %dec_label_pc_100090c0, label %dec_label_pc_100090a4

dec_label_pc_100090a4:                            ; preds = %dec_label_pc_1000909c
  %v1_100090a4 = call i32 @__asm_rlwinm(i32 %v3_10008fec, i32 0, i32 22, i32 23)
  %v0_100090a8 = load i32, i32* %r9.global-to-local, align 4
  %v4_100090a8 = icmp eq i32 %v0_100090a8, %v1_100090a4
  br i1 %v4_100090a8, label %dec_label_pc_100090c0, label %dec_label_pc_100090b0

dec_label_pc_100090b0:                            ; preds = %dec_label_pc_10009084, %dec_label_pc_100090a4
  store i32 -1, i32* @r28, align 4
  %v1_100090b8 = load i32, i32* @r29, align 4
  %v2_100090b8 = inttoptr i32 %v1_100090b8 to i32*
  store i32 22, i32* %v2_100090b8, align 4
  br label %dec_label_pc_100090c4

dec_label_pc_100090c0:                            ; preds = %dec_label_pc_10009044, %dec_label_pc_100090a4, %dec_label_pc_1000909c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100090c4

dec_label_pc_100090c4:                            ; preds = %dec_label_pc_10008fdc, %dec_label_pc_100090b0, %dec_label_pc_1000907c, %dec_label_pc_10008fc0, %dec_label_pc_100090c0
  %v0_100090c8 = load i32, i32* @r28, align 4
  ret i32 %v0_100090c8

; uselistorder directives
  uselistorder i32 %v0_10008f90, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10008458, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100090c4, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100090c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100090b0, { 1, 0 }
  uselistorder label %dec_label_pc_10008fdc, { 2, 1, 0 }
}

define i32 @function_100090dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100090dc:
  %stack_var_-24 = alloca i32, align 4
  %v2_100090e4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100090e4, i32* @r4, align 4
  store i32 268472560, i32* @lr, align 4
  %v1_100090ec = bitcast i32* %stack_var_-24 to i8*
  %v2_100090ec = call i32 @function_1000abc8(i8* %v1_100090ec)
  %v3_100090f0 = icmp eq i32 %v2_100090ec, 0
  br i1 %v3_100090f0, label %dec_label_pc_10009100, label %dec_label_pc_100090fc

dec_label_pc_100090fc:                            ; preds = %dec_label_pc_100090dc
  %v3_100090fc = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009100

dec_label_pc_10009100:                            ; preds = %dec_label_pc_100090dc, %dec_label_pc_100090fc
  %v0_1000910c = phi i32 [ -1, %dec_label_pc_100090dc ], [ %v3_100090fc, %dec_label_pc_100090fc ]
  ret i32 %v0_1000910c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009100, { 1, 0 }
}

define i32 @function_10009110(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009110:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009124 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472628, i32* @lr, align 4
  %v2_10009130 = call i32 @function_1000a3fc(i32 2, i32 %v2_10009124)
  ret i32 %v2_10009130

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009144() local_unnamed_addr {
dec_label_pc_10009144:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000914c = load i32, i32* @r3, align 4
  store i32 %v0_1000914c, i32* %stack_var_-24, align 4
  %v2_10009158 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472680, i32* @lr, align 4
  %v2_10009164 = call i32 @function_1000a3fc(i32 3, i32 %v2_10009158)
  ret i32 %v2_10009164

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009178(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009178:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000918c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472732, i32* @lr, align 4
  %v2_10009198 = call i32 @function_1000a3fc(i32 6, i32 %v2_1000918c)
  ret i32 %v2_10009198

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100091ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100091ac:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100091c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472792, i32* @lr, align 4
  %v2_100091d4 = call i32 @function_1000a3fc(i32 15, i32 %v2_100091c0)
  ret i32 %v2_100091d4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 26, 13, 14, 5, 15, 6, 16, 7, 8, 9, 10, 11, 17, 12, 18, 19, 1, 20, 21, 2, 22, 23, 3, 24, 25, 4 }
}

define i32 @function_100091e8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100091e8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100091fc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472840, i32* @lr, align 4
  %v2_10009204 = call i32 @function_1000a3fc(i32 4, i32 %v2_100091fc)
  ret i32 %v2_10009204

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009218(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009218:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000922c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472896, i32* @lr, align 4
  %v2_1000923c = call i32 @function_1000a3fc(i32 10, i32 %v2_1000922c)
  ret i32 %v2_1000923c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009250(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009250:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009264 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472960, i32* @lr, align 4
  %v2_1000927c = call i32 @function_1000a3fc(i32 12, i32 %v2_10009264)
  ret i32 %v2_1000927c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009290(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009290:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100092a4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473016, i32* @lr, align 4
  %v2_100092b4 = call i32 @function_1000a3fc(i32 9, i32 %v2_100092a4)
  ret i32 %v2_100092b4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 5, 6, 7, 13, 14, 15, 1, 16, 2, 17, 3, 18, 8, 9, 10, 19, 11, 20, 33, 21, 22, 23, 24, 25, 26, 27, 4, 28, 29, 30, 31, 32, 34, 35, 36, 12 }
}

define i32 @function_100092c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100092c8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100092dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473080, i32* @lr, align 4
  %v2_100092f4 = call i32 @function_1000a3fc(i32 11, i32 %v2_100092dc)
  ret i32 %v2_100092f4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009308(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009308:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000931c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473140, i32* @lr, align 4
  %v2_10009330 = call i32 @function_1000a3fc(i32 14, i32 %v2_1000931c)
  ret i32 %v2_10009330

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009344(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009344:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009358 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473192, i32* @lr, align 4
  %v2_10009364 = call i32 @function_1000a3fc(i32 1, i32 %v2_10009358)
  ret i32 %v2_10009364

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a3fc, { 5, 1, 0, 4, 6, 10, 7, 9, 8, 3, 2 }
}

define i32 @function_10009378(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009378:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_100093a8, label %dec_label_pc_10009394

dec_label_pc_10009394:                            ; preds = %dec_label_pc_10009378
  %v0_10009394 = call i32 @function_10008d44()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100093a0 = inttoptr i32 %v0_10009394 to i32*
  store i32 22, i32* %v2_100093a0, align 4
  %v0_100093b4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100093b0

dec_label_pc_100093a8:                            ; preds = %dec_label_pc_10009378
  %v0_100093a8 = call i32 @function_100094f8()
  store i32 %v0_100093a8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100093b0

dec_label_pc_100093b0:                            ; preds = %dec_label_pc_10009394, %dec_label_pc_100093a8
  %v0_100093b4 = phi i32 [ %v0_100093b4.pre, %dec_label_pc_10009394 ], [ %v0_100093a8, %dec_label_pc_100093a8 ]
  ret i32 %v0_100093b4

; uselistorder directives
  uselistorder label %dec_label_pc_100093b0, { 1, 0 }
}

define i32 @function_100093c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100093c4:
  store i32 268473308, i32* @lr, align 4
  %v3_100093d8 = call i32 @function_10008e2c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_100093f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100093f0:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_100093f0 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_100093f0, label %dec_label_pc_1000941c, label %dec_label_pc_1000940c

dec_label_pc_1000940c:                            ; preds = %dec_label_pc_100093f0
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000941c, label %dec_label_pc_10009414

dec_label_pc_10009414:                            ; preds = %dec_label_pc_1000940c
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000944c.lr.ph, label %dec_label_pc_1000941c

dec_label_pc_1000941c:                            ; preds = %dec_label_pc_10009414, %dec_label_pc_1000940c, %dec_label_pc_100093f0
  %v0_1000941c = call i32 @function_10008d44()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009428 = inttoptr i32 %v0_1000941c to i32*
  store i32 22, i32* %v2_10009428, align 4
  %v0_100094bc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100094b8

dec_label_pc_1000944c.lr.ph:                      ; preds = %dec_label_pc_10009414
  %v2_1000943c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000943c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000944c22 = add i32 %v2_1000943c, 128
  %v3_1000944c23 = inttoptr i32 %v2_1000944c22 to i32*
  store i32 0, i32* %v3_1000944c23, align 4
  %v0_1000945024 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000945025 = add i32 %v0_1000945024, -1
  store i32 %v1_1000945025, i32* %r11.global-to-local, align 4
  %v1_1000945426 = mul i32 %v1_1000945025, 4
  %v1_1000945827 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000945828 = add i32 %v1_1000945827, %v1_1000945426
  store i32 %v2_1000945828, i32* %r9.global-to-local, align 4
  %v0_1000945c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000945c30 = add i32 %v0_1000945c29, -1
  store i32 %v1_1000945c30, i32* %ctr.global-to-local, align 4
  %v2_1000945c31 = icmp eq i32 %v1_1000945c30, 0
  br i1 %v2_1000945c31, label %dec_label_pc_10009460, label %dec_label_pc_1000944c.dec_label_pc_1000944c_crit_edge

dec_label_pc_1000944c.dec_label_pc_1000944c_crit_edge: ; preds = %dec_label_pc_1000944c.lr.ph, %dec_label_pc_1000944c.dec_label_pc_1000944c_crit_edge
  %v2_1000945832 = phi i32 [ %v2_10009458, %dec_label_pc_1000944c.dec_label_pc_1000944c_crit_edge ], [ %v2_1000945828, %dec_label_pc_1000944c.lr.ph ]
  %v0_1000944c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000944c = add i32 %v2_1000945832, 4
  %v3_1000944c = inttoptr i32 %v2_1000944c to i32*
  store i32 %v0_1000944c.pre, i32* %v3_1000944c, align 4
  %v0_10009450 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009450 = add i32 %v0_10009450, -1
  store i32 %v1_10009450, i32* %r11.global-to-local, align 4
  %v1_10009454 = mul i32 %v1_10009450, 4
  %v1_10009458 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009458 = add i32 %v1_10009458, %v1_10009454
  store i32 %v2_10009458, i32* %r9.global-to-local, align 4
  %v0_1000945c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000945c = add i32 %v0_1000945c, -1
  store i32 %v1_1000945c, i32* %ctr.global-to-local, align 4
  %v2_1000945c = icmp eq i32 %v1_1000945c, 0
  br i1 %v2_1000945c, label %dec_label_pc_10009460, label %dec_label_pc_1000944c.dec_label_pc_1000944c_crit_edge

dec_label_pc_10009460:                            ; preds = %dec_label_pc_1000944c.dec_label_pc_1000944c_crit_edge, %dec_label_pc_1000944c.lr.ph
  %v0_10009464.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009460 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10009460, i32* @r3, align 4
  store i32 %v0_10009464.pre, i32* @r4, align 4
  %v0_10009468 = call i32 @function_100094f8()
  %v1_1000946c = icmp slt i32 %v0_10009468, 0
  br i1 %v1_1000946c, label %dec_label_pc_100094b4, label %dec_label_pc_10009474

dec_label_pc_10009474:                            ; preds = %dec_label_pc_10009460
  %v0_10009478 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009480 = call i32 @function_100094d0(i32 ptrtoint (i32* @global_var_1001b928.289 to i32), i32 %v0_10009478)
  %v2_1000948c = ptrtoint i32* %stack_var_-156 to i32
  store i32 268473508, i32* @lr, align 4
  %v4_100094a0 = call i32 @function_1000ac88(i32 %v0_10009478, i32* nonnull %stack_var_-296, i32 %v2_1000948c)
  %v1_100094a4 = icmp slt i32 %v4_100094a0, 0
  br i1 %v1_100094a4, label %dec_label_pc_100094b4, label %dec_label_pc_100094ac

dec_label_pc_100094ac:                            ; preds = %dec_label_pc_10009474
  %v3_100094ac = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_100094ac, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100094b8

dec_label_pc_100094b4:                            ; preds = %dec_label_pc_10009474, %dec_label_pc_10009460
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100094b8

dec_label_pc_100094b8:                            ; preds = %dec_label_pc_100094ac, %dec_label_pc_1000941c, %dec_label_pc_100094b4
  %v0_100094bc = phi i32 [ %v3_100094ac, %dec_label_pc_100094ac ], [ %v0_100094bc.pre, %dec_label_pc_1000941c ], [ -1, %dec_label_pc_100094b4 ]
  ret i32 %v0_100094bc

; uselistorder directives
  uselistorder i32 %v1_1000945c, { 1, 0 }
  uselistorder i32 %v2_10009458, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100094b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000944c.dec_label_pc_1000944c_crit_edge, { 1, 0 }
}

define i32 @function_100094d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100094d0:
  %v1_100094d0 = add i32 %arg2, -1
  %v1_100094d4 = call i32 @__asm_rlwinm(i32 %v1_100094d0, i32 29, i32 3, i32 29)
  %v1_100094d8 = urem i32 %v1_100094d0, 32
  %v2_100094dc = add i32 %v1_100094d4, %arg1
  %v3_100094dc = inttoptr i32 %v2_100094dc to i32*
  %v4_100094dc = load i32, i32* %v3_100094dc, align 4
  %v3_100094e4 = shl i32 1, %v1_100094d8
  %v2_100094e8 = and i32 %v4_100094dc, %v3_100094e4
  %v2_100094ec = icmp ne i32 %v2_100094e8, 0
  %v5_100094f0 = zext i1 %v2_100094ec to i32
  ret i32 %v5_100094f0
}

define i32 @function_100094f8() local_unnamed_addr {
dec_label_pc_100094f8:
  %r0.global-to-local = alloca i32, align 4
  %v0_100094f8 = load i32, i32* @r4, align 4
  %v1_100094f8 = add i32 %v0_100094f8, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009500 = call i32 @__asm_rlwinm(i32 %v1_100094f8, i32 29, i32 3, i32 29)
  %v1_10009504 = urem i32 %v1_100094f8, 32
  %v1_10009508 = load i32, i32* @r3, align 4
  %v2_10009508 = add i32 %v1_10009508, %v1_10009500
  %v3_10009508 = inttoptr i32 %v2_10009508 to i32*
  %v4_10009508 = load i32, i32* %v3_10009508, align 4
  %v0_1000950c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000950c = shl i32 %v0_1000950c, %v1_10009504
  store i32 %v3_1000950c, i32* %r0.global-to-local, align 4
  %v2_10009510 = or i32 %v3_1000950c, %v4_10009508
  store i32 %v2_10009510, i32* %v3_10009508, align 4
  ret i32 0
}

define i32 @function_10009520(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009520:
  %v1_10009520 = add i32 %arg2, -1
  %v1_10009528 = call i32 @__asm_rlwinm(i32 %v1_10009520, i32 29, i32 3, i32 29)
  %v1_1000952c = urem i32 %v1_10009520, 32
  %v2_10009530 = add i32 %v1_10009528, %arg1
  %v3_10009530 = inttoptr i32 %v2_10009530 to i32*
  %v4_10009530 = load i32, i32* %v3_10009530, align 4
  %v3_10009534 = shl i32 -2, %v1_1000952c
  %v4_10009534 = sub nsw i32 32, %v1_1000952c
  %v5_10009534 = lshr i32 -2, %v4_10009534
  %v6_10009534 = or i32 %v5_10009534, %v3_10009534
  %v2_10009538 = and i32 %v6_10009534, %v4_10009530
  store i32 %v2_10009538, i32* %v3_10009530, align 4
  ret i32 0
}

define i32 @function_10009548() local_unnamed_addr {
dec_label_pc_10009548:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009548 = load i32, i32* @r3, align 4
  %v3_10009548 = icmp eq i32 %v0_10009548, 0
  br i1 %v3_10009548, label %dec_label_pc_10009564.thread, label %dec_label_pc_10009564

dec_label_pc_10009564.thread:                     ; preds = %dec_label_pc_10009548
  br label %dec_label_pc_10009570

dec_label_pc_10009564:                            ; preds = %dec_label_pc_10009548
  %v3_10009568 = icmp ugt i32 %v0_10009548, -8
  br i1 %v3_10009568, label %dec_label_pc_10009678, label %dec_label_pc_10009570

dec_label_pc_10009570:                            ; preds = %dec_label_pc_10009564.thread, %dec_label_pc_10009564
  %v0_1000957416 = phi i32 [ 1, %dec_label_pc_10009564.thread ], [ %v0_10009548, %dec_label_pc_10009564 ]
  %v1_10009574 = add i32 %v0_1000957416, 4
  store i32 ptrtoint (i32* @global_var_1001b808.290 to i32), i32* @r29, align 4
  store i32 %v1_10009574, i32* %stack_var_-40, align 4
  %v0_10009584 = call i32 @function_1000a0a4()
  %v2_1000958c = ptrtoint i32* %stack_var_-40 to i32
  %v3_10009594 = call i32 @function_10009940(i32* inttoptr (i32 268547888 to i32*), i32 %v2_1000958c)
  store i32 %v3_10009594, i32* %r31.global-to-local, align 4
  %v0_100095a0 = call i32 @function_1000a0a4()
  %v3_100095a4 = icmp eq i32 %v3_10009594, 0
  br i1 %v3_100095a4, label %dec_label_pc_100095ac, label %dec_label_pc_1000965c.thread

dec_label_pc_1000965c.thread:                     ; preds = %dec_label_pc_10009570
  br label %dec_label_pc_10009670

dec_label_pc_100095ac:                            ; preds = %dec_label_pc_10009570
  %v3_100095b0 = load i32, i32* @global_var_1001b78c.293, align 4
  store i32 %v3_100095b0, i32* %r31.global-to-local, align 4
  %v3_100095b4 = load i32, i32* %stack_var_-40, align 4
  %v2_100095b8 = icmp ult i32 %v3_100095b4, %v3_100095b0
  br i1 %v2_100095b8, label %dec_label_pc_100095d0, label %dec_label_pc_100095c0

dec_label_pc_100095c0:                            ; preds = %dec_label_pc_100095ac
  %v1_100095c4 = sub i32 0, %v3_100095b0
  %v2_100095c0 = add i32 %v3_100095b0, -1
  %v1_100095c8 = add i32 %v2_100095c0, %v3_100095b4
  %v2_100095cc = and i32 %v1_100095c8, %v1_100095c4
  store i32 %v2_100095cc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100095d0

dec_label_pc_100095d0:                            ; preds = %dec_label_pc_100095ac, %dec_label_pc_100095c0
  %v0_100095dc = call i32 @function_1000a0a4()
  %v0_100095e0 = load i32, i32* %r31.global-to-local, align 4
  store i32 268473832, i32* @lr, align 4
  %v1_100095e4 = call i32 @function_1000a8c4(i32 %v0_100095e0)
  %v3_100095e8 = icmp eq i32 %v1_100095e4, -1
  br i1 %v3_100095e8, label %dec_label_pc_10009608, label %dec_label_pc_100095f0

dec_label_pc_100095f0:                            ; preds = %dec_label_pc_100095d0
  %v1_100095f0 = add i32 %v1_100095e4, 3
  %v1_100095f4 = call i32 @__asm_rlwinm(i32 %v1_100095f0, i32 0, i32 0, i32 29)
  store i32 %v1_100095f4, i32* @r30, align 4
  %v4_100095f8 = icmp eq i32 %v1_100095f4, %v1_100095e4
  br i1 %v4_100095f8, label %dec_label_pc_10009608, label %dec_label_pc_10009600

dec_label_pc_10009600:                            ; preds = %dec_label_pc_100095f0
  %v2_10009600 = sub i32 %v1_100095f4, %v1_100095e4
  store i32 268473864, i32* @lr, align 4
  %v1_10009604 = call i32 @function_1000a8c4(i32 %v2_10009600)
  br label %dec_label_pc_10009608

dec_label_pc_10009608:                            ; preds = %dec_label_pc_100095f0, %dec_label_pc_100095d0, %dec_label_pc_10009600
  %v0_10009610 = call i32 @function_1000a0a4()
  %v0_10009614 = load i32, i32* @r30, align 4
  %v3_10009614 = icmp eq i32 %v0_10009614, -1
  br i1 %v3_10009614, label %dec_label_pc_10009678, label %dec_label_pc_1000965c

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_10009608
  store i32 ptrtoint (i32* @global_var_1001b808.290 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001b730 to i32), i32* @r29, align 4
  %v0_10009630 = call i32 @function_1000a0a4()
  %v0_10009634 = load i32, i32* @r31, align 4
  %v0_10009638 = load i32, i32* @r30, align 4
  %v0_1000963c = load i32, i32* @r29, align 4
  store i32 268473924, i32* @lr, align 4
  %v3_10009640 = inttoptr i32 %v0_1000963c to i32*
  %v4_10009640 = call i32 @function_10009ac4(i32* %v3_10009640, i32 %v0_10009638, i32 %v0_10009634)
  %v0_10009644 = load i32, i32* @r29, align 4
  %v2_1000964c = inttoptr i32 %v0_10009644 to i32*
  %v3_1000964c = call i32 @function_10009940(i32* %v2_1000964c, i32 %v2_1000958c)
  store i32 %v3_1000964c, i32* %r31.global-to-local, align 4
  %v0_10009658 = call i32 @function_1000a0a4()
  %v3_1000965c = icmp eq i32 %v3_1000964c, 0
  br i1 %v3_1000965c, label %dec_label_pc_10009670.thread, label %dec_label_pc_10009670

dec_label_pc_10009670.thread:                     ; preds = %dec_label_pc_1000965c
  br label %dec_label_pc_10009678

dec_label_pc_10009670:                            ; preds = %dec_label_pc_1000965c, %dec_label_pc_1000965c.thread
  %v0_10009670.pr6 = phi i32 [ %v3_10009594, %dec_label_pc_1000965c.thread ], [ %v3_1000964c, %dec_label_pc_1000965c ]
  %v3_10009664 = load i32, i32* %stack_var_-40, align 4
  %v2_10009668 = inttoptr i32 %v0_10009670.pr6 to i32*
  store i32 %v3_10009664, i32* %v2_10009668, align 4
  %v0_1000966c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000966c = add i32 %v0_1000966c, 4
  store i32 %v1_1000966c, i32* @r31, align 4
  %v3_10009670 = icmp eq i32 %v1_1000966c, 0
  br i1 %v3_10009670, label %dec_label_pc_10009678, label %dec_label_pc_10009688

dec_label_pc_10009678:                            ; preds = %dec_label_pc_10009670.thread, %dec_label_pc_10009670, %dec_label_pc_10009608, %dec_label_pc_10009564
  %v0_10009678 = call i32 @function_10008d44()
  %v2_10009680 = inttoptr i32 %v0_10009678 to i32*
  store i32 12, i32* %v2_10009680, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10009688

dec_label_pc_10009688:                            ; preds = %dec_label_pc_10009670, %dec_label_pc_10009678
  %v0_1000968c = phi i32 [ %v1_1000966c, %dec_label_pc_10009670 ], [ 0, %dec_label_pc_10009678 ]
  ret i32 %v0_1000968c

; uselistorder directives
  uselistorder i32 %v1_1000966c, { 1, 0, 2 }
  uselistorder i32 %v1_100095f4, { 1, 0, 2 }
  uselistorder i32 %v1_100095e4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100095b0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009594, { 1, 0, 2 }
  uselistorder i32 %v0_10009548, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_10009688, { 1, 0 }
  uselistorder label %dec_label_pc_10009678, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009608, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100095d0, { 1, 0 }
  uselistorder label %dec_label_pc_10009570, { 1, 0 }
}

define i32 @function_100096a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096a0:
  %v3_100096a0 = icmp eq i32 %arg1, 0
  %v2_100096b0 = mul i32 %arg2, %arg1
  store i32 %v2_100096b0, i32* @r31, align 4
  br i1 %v3_100096a0, label %dec_label_pc_100096dc, label %dec_label_pc_100096bc

dec_label_pc_100096bc:                            ; preds = %dec_label_pc_100096a0
  %v2_100096bc = udiv i32 %v2_100096b0, %arg1
  store i32 0, i32* @r30, align 4
  %v4_100096c4 = icmp eq i32 %v2_100096bc, %arg2
  br i1 %v4_100096c4, label %dec_label_pc_100096dc, label %dec_label_pc_100096cc

dec_label_pc_100096cc:                            ; preds = %dec_label_pc_100096bc
  %v0_100096cc = call i32 @function_10008d44()
  %v2_100096d4 = inttoptr i32 %v0_100096cc to i32*
  store i32 12, i32* %v2_100096d4, align 4
  br label %dec_label_pc_100096f8

dec_label_pc_100096dc:                            ; preds = %dec_label_pc_100096bc, %dec_label_pc_100096a0
  store i32 %v2_100096b0, i32* @r3, align 4
  store i32 268474084, i32* @lr, align 4
  %v0_100096e0 = call i32 @function_10009548()
  %v0_100096e4 = load i32, i32* @r31, align 4
  store i32 %v0_100096e0, i32* @r30, align 4
  %v3_100096e8 = icmp eq i32 %v0_100096e0, 0
  br i1 %v3_100096e8, label %dec_label_pc_100096f8, label %dec_label_pc_100096f4

dec_label_pc_100096f4:                            ; preds = %dec_label_pc_100096dc
  store i32 268474104, i32* @lr, align 4
  %v3_100096f4 = call i32 @function_10008e2c(i32 0, i32 %v0_100096e4, i32 %v0_100096e4)
  br label %dec_label_pc_100096f8

dec_label_pc_100096f8:                            ; preds = %dec_label_pc_100096dc, %dec_label_pc_100096cc, %dec_label_pc_100096f4
  %v0_100096fc = load i32, i32* @r30, align 4
  ret i32 %v0_100096fc

; uselistorder directives
  uselistorder i32 %v0_100096e4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100096f8, { 2, 0, 1 }
}

define i32 @function_10009710() local_unnamed_addr {
dec_label_pc_10009710:
  %v0_10009710 = load i32, i32* @r3, align 4
  %v3_10009710 = icmp eq i32 %v0_10009710, 0
  br i1 %v3_10009710, label %dec_label_pc_100097fc, label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_10009710
  %v1_1000972c = add i32 %v0_10009710, -4
  %v2_1000972c = inttoptr i32 %v1_1000972c to i32*
  %v3_1000972c = load i32, i32* %v2_1000972c, align 4
  store i32 %v3_1000972c, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10009740 = call i32 @function_1000a0a4()
  %v0_10009748 = load i32, i32* @r28, align 4
  store i32 268474196, i32* @lr, align 4
  %v4_10009750 = call i32 @function_10009ac4(i32* nonnull @global_var_1001b730, i32 %v1_1000972c, i32 %v0_10009748)
  %v3_10009758 = load i32, i32* @global_var_1001b78c.293, align 4
  store i32 %v4_10009750, i32* @r29, align 4
  %v1_10009760 = inttoptr i32 %v4_10009750 to i32*
  %v2_10009760 = load i32, i32* %v1_10009760, align 4
  store i32 %v2_10009760, i32* @r27, align 4
  %v1_10009764 = mul i32 %v3_10009758, 8
  %v2_10009768 = icmp ult i32 %v2_10009760, %v1_10009764
  br i1 %v2_10009768, label %dec_label_pc_1000979c, label %dec_label_pc_10009770

dec_label_pc_10009770:                            ; preds = %dec_label_pc_10009728
  store i32 ptrtoint (i32* @global_var_1001b9a8.294 to i32), i32* @r28, align 4
  %v0_10009780 = call i32 @function_1000a0a4()
  store i32 268474252, i32* @lr, align 4
  %v1_10009788 = call i32 @function_1000a8c4(i32 0)
  %v0_1000978c = load i32, i32* @r31, align 4
  %v4_1000978c = icmp eq i32 %v0_1000978c, %v1_10009788
  br i1 %v4_1000978c, label %dec_label_pc_100097a4, label %dec_label_pc_10009794

dec_label_pc_10009794:                            ; preds = %dec_label_pc_10009770
  %v0_10009798 = call i32 @function_1000a0a4()
  br label %dec_label_pc_1000979c

dec_label_pc_1000979c:                            ; preds = %dec_label_pc_10009728, %dec_label_pc_10009794
  br label %dec_label_pc_100097f8

dec_label_pc_100097a4:                            ; preds = %dec_label_pc_10009770
  %v0_100097a4 = load i32, i32* @r29, align 4
  %v1_100097a4 = add i32 %v0_100097a4, 4
  %v2_100097a4 = inttoptr i32 %v1_100097a4 to i32*
  %v3_100097a4 = load i32, i32* %v2_100097a4, align 4
  %v3_100097a8 = icmp eq i32 %v3_100097a4, 0
  br i1 %v3_100097a8, label %dec_label_pc_100097b8, label %dec_label_pc_100097b0

dec_label_pc_100097b0:                            ; preds = %dec_label_pc_100097a4
  %v1_100097b0 = add i32 %v0_100097a4, 8
  %v2_100097b0 = inttoptr i32 %v1_100097b0 to i32*
  %v3_100097b0 = load i32, i32* %v2_100097b0, align 4
  %v2_100097b4 = add i32 %v3_100097a4, 8
  %v3_100097b4 = inttoptr i32 %v2_100097b4 to i32*
  store i32 %v3_100097b0, i32* %v3_100097b4, align 4
  %v0_100097b8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100097b8

dec_label_pc_100097b8:                            ; preds = %dec_label_pc_100097a4, %dec_label_pc_100097b0
  %v0_100097b8 = phi i32 [ %v0_100097a4, %dec_label_pc_100097a4 ], [ %v0_100097b8.pre, %dec_label_pc_100097b0 ]
  %v1_100097b8 = add i32 %v0_100097b8, 8
  %v2_100097b8 = inttoptr i32 %v1_100097b8 to i32*
  %v3_100097b8 = load i32, i32* %v2_100097b8, align 4
  %v1_100097bc = add i32 %v0_100097b8, 4
  %v2_100097bc = inttoptr i32 %v1_100097bc to i32*
  %v3_100097bc = load i32, i32* %v2_100097bc, align 4
  %v3_100097c0 = icmp eq i32 %v3_100097b8, 0
  br i1 %v3_100097c0, label %dec_label_pc_100097d0, label %dec_label_pc_100097c8

dec_label_pc_100097c8:                            ; preds = %dec_label_pc_100097b8
  %v2_100097c8 = add i32 %v3_100097b8, 4
  %v3_100097c8 = inttoptr i32 %v2_100097c8 to i32*
  store i32 %v3_100097bc, i32* %v3_100097c8, align 4
  br label %dec_label_pc_100097d4

dec_label_pc_100097d0:                            ; preds = %dec_label_pc_100097b8
  store i32 %v3_100097bc, i32* @global_var_1001b730, align 4
  br label %dec_label_pc_100097d4

dec_label_pc_100097d4:                            ; preds = %dec_label_pc_100097c8, %dec_label_pc_100097d0
  %v0_100097dc = call i32 @function_1000a0a4()
  %v0_100097e0 = load i32, i32* @r27, align 4
  %v1_100097e0 = load i32, i32* @r29, align 4
  %v0_100097e8 = load i32, i32* @r31, align 4
  %v2_100097e0 = sub i32 12, %v0_100097e0
  %v1_100097e4 = add i32 %v2_100097e0, %v1_100097e0
  %v2_100097e8 = sub i32 %v1_100097e4, %v0_100097e8
  store i32 268474352, i32* @lr, align 4
  %v1_100097ec = call i32 @function_1000a8c4(i32 %v2_100097e8)
  br label %dec_label_pc_100097f8

dec_label_pc_100097f8:                            ; preds = %dec_label_pc_1000979c, %dec_label_pc_100097d4
  %v0_100097f8 = call i32 @function_1000a0a4()
  br label %dec_label_pc_100097fc

dec_label_pc_100097fc:                            ; preds = %dec_label_pc_10009710, %dec_label_pc_100097f8
  %.0 = phi i32 [ undef, %dec_label_pc_10009710 ], [ %v0_100097f8, %dec_label_pc_100097f8 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_100097b8, { 1, 0 }
  uselistorder i32 (i32)* @function_1000a8c4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100097fc, { 1, 0 }
  uselistorder label %dec_label_pc_100097f8, { 1, 0 }
  uselistorder label %dec_label_pc_100097d4, { 1, 0 }
  uselistorder label %dec_label_pc_100097b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000979c, { 1, 0 }
}

define i32 @function_10009810(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009810:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_10009810 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10009810, label %dec_label_pc_1000982c, label %dec_label_pc_10009838

dec_label_pc_1000982c:                            ; preds = %dec_label_pc_10009810
  store i32 ptrtoint ([3 x i8]* @global_var_10009830.298 to i32), i32* @lr, align 4
  %v0_1000982c = call i32 @function_10009710()
  br label %dec_label_pc_10009844

dec_label_pc_10009838:                            ; preds = %dec_label_pc_10009810
  %v3_10009838 = icmp eq i32 %arg1, 0
  br i1 %v3_10009838, label %dec_label_pc_10009844, label %dec_label_pc_10009850

dec_label_pc_10009844:                            ; preds = %dec_label_pc_10009838, %dec_label_pc_1000982c
  %storemerge = phi i32 [ 0, %dec_label_pc_1000982c ], [ %arg2, %dec_label_pc_10009838 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268474440, i32* @lr, align 4
  %v0_10009844 = call i32 @function_10009548()
  store i32 %v0_10009844, i32* @r28, align 4
  br label %dec_label_pc_10009928

dec_label_pc_10009850:                            ; preds = %dec_label_pc_10009838
  %v1_10009850 = add i32 %arg2, 7
  %v1_10009854 = add i32 %arg1, -4
  store i32 %v1_10009854, i32* %r27.global-to-local, align 4
  %v1_10009858 = call i32 @__asm_rlwinm(i32 %v1_10009850, i32 0, i32 0, i32 29)
  store i32 %v1_10009858, i32* @r31, align 4
  %v2_1000985c = inttoptr i32 %v1_10009854 to i32*
  %v3_1000985c = load i32, i32* %v2_1000985c, align 4
  store i32 %v3_1000985c, i32* @r30, align 4
  %v2_10009860 = icmp ugt i32 %v1_10009858, 11
  br i1 %v2_10009860, label %dec_label_pc_1000986c, label %dec_label_pc_10009868

dec_label_pc_10009868:                            ; preds = %dec_label_pc_10009850
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000986c

dec_label_pc_1000986c:                            ; preds = %dec_label_pc_10009850, %dec_label_pc_10009868
  %v0_100098ec = phi i32 [ %v1_10009858, %dec_label_pc_10009850 ], [ 12, %dec_label_pc_10009868 ]
  %v3_1000986c = icmp ugt i32 %v0_100098ec, %v3_1000985c
  br i1 %v3_1000986c, label %dec_label_pc_10009874, label %dec_label_pc_100098ec

dec_label_pc_10009874:                            ; preds = %dec_label_pc_1000986c
  %v0_10009880 = call i32 @function_1000a0a4()
  %v0_10009888 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009888 = load i32, i32* @r30, align 4
  %v2_10009888 = add i32 %v1_10009888, %v0_10009888
  %v1_1000988c = load i32, i32* @r31, align 4
  %v2_1000988c = sub i32 %v1_1000988c, %v1_10009888
  %v4_10009894 = call i32 @function_100099e0(i32* nonnull @global_var_1001b730, i32 %v2_10009888, i32 %v2_1000988c)
  store i32 %v4_10009894, i32* %r27.global-to-local, align 4
  %v0_100098a0 = call i32 @function_1000a0a4()
  %v3_100098a4 = icmp eq i32 %v4_10009894, 0
  br i1 %v3_100098a4, label %dec_label_pc_100098b8, label %dec_label_pc_100098ac

dec_label_pc_100098ac:                            ; preds = %dec_label_pc_10009874
  %v0_100098ac = load i32, i32* @r30, align 4
  %v2_100098ac = add i32 %v0_100098ac, %v4_10009894
  %v1_100098b0 = load i32, i32* @r28, align 4
  %v2_100098b0 = add i32 %v1_100098b0, -4
  %v3_100098b0 = inttoptr i32 %v2_100098b0 to i32*
  store i32 %v2_100098ac, i32* %v3_100098b0, align 4
  br label %dec_label_pc_10009928

dec_label_pc_100098b8:                            ; preds = %dec_label_pc_10009874
  %v0_100098b8 = load i32, i32* @r31, align 4
  %v1_100098b8 = add i32 %v0_100098b8, -4
  store i32 %v1_100098b8, i32* @r3, align 4
  store i32 268474560, i32* @lr, align 4
  %v0_100098bc = call i32 @function_10009548()
  store i32 %v0_100098bc, i32* @r3, align 4
  store i32 %v0_100098bc, i32* @r31, align 4
  %v3_100098c0 = icmp eq i32 %v0_100098bc, 0
  br i1 %v3_100098c0, label %dec_label_pc_100098c8, label %dec_label_pc_100098d0

dec_label_pc_100098c8:                            ; preds = %dec_label_pc_100098b8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009928

dec_label_pc_100098d0:                            ; preds = %dec_label_pc_100098b8
  %v0_100098d0 = load i32, i32* @r28, align 4
  store i32 %v0_100098d0, i32* @r4, align 4
  %v0_100098d4 = load i32, i32* @r30, align 4
  %v1_100098d4 = add i32 %v0_100098d4, -4
  store i32 %v1_100098d4, i32* @r5, align 4
  store i32 268474588, i32* @lr, align 4
  %v0_100098d8 = call i32 @function_1000aaf8()
  %v0_100098dc = load i32, i32* @r28, align 4
  store i32 %v0_100098dc, i32* @r3, align 4
  store i32 268474596, i32* @lr, align 4
  %v0_100098e0 = call i32 @function_10009710()
  %v0_100098e4 = load i32, i32* @r31, align 4
  store i32 %v0_100098e4, i32* @r28, align 4
  br label %dec_label_pc_10009928

dec_label_pc_100098ec:                            ; preds = %dec_label_pc_1000986c
  %v1_100098ec = add i32 %v0_100098ec, 28
  %v3_100098f0 = icmp ugt i32 %v1_100098ec, %v3_1000985c
  br i1 %v3_100098f0, label %dec_label_pc_10009928, label %dec_label_pc_100098f8

dec_label_pc_100098f8:                            ; preds = %dec_label_pc_100098ec
  store i32 ptrtoint (i32* @global_var_1001b808.290 to i32), i32* @r29, align 4
  %v0_10009904 = call i32 @function_1000a0a4()
  %v0_1000990c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000990c = load i32, i32* @r31, align 4
  %v2_1000990c = add i32 %v1_1000990c, %v0_1000990c
  %v1_10009910 = load i32, i32* @r30, align 4
  %v2_10009910 = sub i32 %v1_10009910, %v1_1000990c
  store i32 268474652, i32* @lr, align 4
  %v4_10009918 = call i32 @function_10009ac4(i32* nonnull @global_var_1001b730, i32 %v2_1000990c, i32 %v2_10009910)
  %v0_10009920 = call i32 @function_1000a0a4()
  %v0_10009924 = load i32, i32* @r31, align 4
  %v1_10009924 = load i32, i32* @r28, align 4
  %v2_10009924 = add i32 %v1_10009924, -4
  %v3_10009924 = inttoptr i32 %v2_10009924 to i32*
  store i32 %v0_10009924, i32* %v3_10009924, align 4
  br label %dec_label_pc_10009928

dec_label_pc_10009928:                            ; preds = %dec_label_pc_100098ec, %dec_label_pc_100098d0, %dec_label_pc_100098c8, %dec_label_pc_100098ac, %dec_label_pc_10009844, %dec_label_pc_100098f8
  %v0_1000992c = load i32, i32* @r28, align 4
  ret i32 %v0_1000992c

; uselistorder directives
  uselistorder i32 %v1_1000990c, { 1, 0 }
  uselistorder i32 %v4_10009894, { 1, 0, 2 }
  uselistorder i32 %v1_10009888, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001b730, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_10009548, { 2, 1, 0, 6, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 3, 8, 7, 5, 4 }
  uselistorder i32 ()* @function_10009710, { 4, 3, 7, 6, 5, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009928, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000986c, { 1, 0 }
}

define i32 @function_10009940(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009940:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10009940 = inttoptr i32 %arg2 to i32*
  %v2_10009940 = load i32, i32* %v1_10009940, align 4
  %v1_10009944 = add i32 %v2_10009940, 3
  store i32 %v1_10009944, i32* %r9.global-to-local, align 4
  %v1_10009948 = call i32 @__asm_rlwinm(i32 %v1_10009944, i32 0, i32 0, i32 29)
  %v2_1000994c = icmp ugt i32 %v1_10009948, 11
  br i1 %v2_1000994c, label %dec_label_pc_100099d0.preheader, label %dec_label_pc_10009954

dec_label_pc_10009954:                            ; preds = %dec_label_pc_10009940
  br label %dec_label_pc_100099d0.preheader

dec_label_pc_100099d0.preheader:                  ; preds = %dec_label_pc_10009940, %dec_label_pc_10009954
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10009954 ], [ %v1_10009948, %dec_label_pc_10009940 ]
  %v0_100099b4 = phi i32 [ 12, %dec_label_pc_10009954 ], [ %v1_10009948, %dec_label_pc_10009940 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_100099d05 = icmp eq i32 %storemerge2, 0
  br i1 %v3_100099d05, label %dec_label_pc_100099d8, label %dec_label_pc_10009960

dec_label_pc_10009960:                            ; preds = %dec_label_pc_100099d0.preheader, %dec_label_pc_100099cc
  %v0_100099cc = phi i32 [ %storemerge, %dec_label_pc_100099cc ], [ %storemerge2, %dec_label_pc_100099d0.preheader ]
  %v1_10009960 = inttoptr i32 %v0_100099cc to i32*
  %v2_10009960 = load i32, i32* %v1_10009960, align 4
  store i32 %v2_10009960, i32* %r10.global-to-local, align 4
  %v2_10009964 = icmp ult i32 %v2_10009960, %v0_100099b4
  br i1 %v2_10009964, label %dec_label_pc_100099cc, label %dec_label_pc_1000996c

dec_label_pc_1000996c:                            ; preds = %dec_label_pc_10009960
  %v1_1000996c = add i32 %v0_100099b4, 44
  %v2_10009970 = icmp ult i32 %v2_10009960, %v1_1000996c
  br i1 %v2_10009970, label %dec_label_pc_10009978, label %dec_label_pc_100099b4

dec_label_pc_10009978:                            ; preds = %dec_label_pc_1000996c
  %v1_10009978 = add i32 %v0_100099cc, 4
  %v2_10009978 = inttoptr i32 %v1_10009978 to i32*
  %v3_10009978 = load i32, i32* %v2_10009978, align 4
  store i32 %v3_10009978, i32* %r11.global-to-local, align 4
  %v3_1000997c = icmp eq i32 %v3_10009978, 0
  br i1 %v3_1000997c, label %dec_label_pc_1000998c, label %dec_label_pc_10009984

dec_label_pc_10009984:                            ; preds = %dec_label_pc_10009978
  %v1_10009984 = add i32 %v0_100099cc, 8
  %v2_10009984 = inttoptr i32 %v1_10009984 to i32*
  %v3_10009984 = load i32, i32* %v2_10009984, align 4
  %v2_10009988 = add i32 %v3_10009978, 8
  %v3_10009988 = inttoptr i32 %v2_10009988 to i32*
  store i32 %v3_10009984, i32* %v3_10009988, align 4
  %v0_1000998c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100099a8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000998c

dec_label_pc_1000998c:                            ; preds = %dec_label_pc_10009978, %dec_label_pc_10009984
  %v0_100099a8 = phi i32 [ %v2_10009960, %dec_label_pc_10009978 ], [ %v0_100099a8.pre, %dec_label_pc_10009984 ]
  %v0_1000998c = phi i32 [ %v0_100099cc, %dec_label_pc_10009978 ], [ %v0_1000998c.pre, %dec_label_pc_10009984 ]
  %v1_1000998c = add i32 %v0_1000998c, 8
  %v2_1000998c = inttoptr i32 %v1_1000998c to i32*
  %v3_1000998c = load i32, i32* %v2_1000998c, align 4
  %v1_10009990 = add i32 %v0_1000998c, 4
  %v2_10009990 = inttoptr i32 %v1_10009990 to i32*
  %v3_10009990 = load i32, i32* %v2_10009990, align 4
  %v3_10009994 = icmp eq i32 %v3_1000998c, 0
  store i32 %v0_100099a8, i32* %r11.global-to-local, align 4
  br i1 %v3_10009994, label %dec_label_pc_100099a8, label %dec_label_pc_1000999c

dec_label_pc_1000999c:                            ; preds = %dec_label_pc_1000998c
  %v2_100099a0 = add i32 %v3_1000998c, 4
  %v3_100099a0 = inttoptr i32 %v2_100099a0 to i32*
  store i32 %v3_10009990, i32* %v3_100099a0, align 4
  br label %dec_label_pc_100099bc

dec_label_pc_100099a8:                            ; preds = %dec_label_pc_1000998c
  store i32 %v3_10009990, i32* %arg1, align 4
  br label %dec_label_pc_100099bc

dec_label_pc_100099b4:                            ; preds = %dec_label_pc_1000996c
  %v2_100099b4 = sub i32 %v2_10009960, %v0_100099b4
  store i32 %v2_100099b4, i32* %v1_10009960, align 4
  br label %dec_label_pc_100099bc

dec_label_pc_100099bc:                            ; preds = %dec_label_pc_100099a8, %dec_label_pc_1000999c, %dec_label_pc_100099b4
  %v0_100099bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100099bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100099bc = sub i32 %v1_100099bc, %v0_100099bc
  store i32 %v2_100099bc, i32* %r9.global-to-local, align 4
  %v0_100099c0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100099c0, i32* %v1_10009940, align 4
  %v0_100099c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100099c4 = add i32 %v0_100099c4, 12
  ret i32 %v1_100099c4

dec_label_pc_100099cc:                            ; preds = %dec_label_pc_10009960
  %v1_100099cc = add i32 %v0_100099cc, 4
  %storemerge.in = inttoptr i32 %v1_100099cc to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_100099d0 = icmp eq i32 %storemerge, 0
  br i1 %v3_100099d0, label %dec_label_pc_100099d0.dec_label_pc_100099d8_crit_edge, label %dec_label_pc_10009960

dec_label_pc_100099d0.dec_label_pc_100099d8_crit_edge: ; preds = %dec_label_pc_100099cc
  br label %dec_label_pc_100099d8

dec_label_pc_100099d8:                            ; preds = %dec_label_pc_100099d0.dec_label_pc_100099d8_crit_edge, %dec_label_pc_100099d0.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000998c, { 1, 0 }
  uselistorder i32 %v2_10009960, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_100099cc, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_100099b4, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 6, 1, 2, 4, 5, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100099bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000998c, { 1, 0 }
  uselistorder label %dec_label_pc_10009960, { 1, 0 }
  uselistorder label %dec_label_pc_100099d0.preheader, { 1, 0 }
}

define i32 @function_100099e0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100099e0:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100099e0 = load i32, i32* %arg1, align 4
  store i32 %v2_100099e0, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_100099e8 = add i32 %arg3, 3
  %v3_10009a6c3 = icmp eq i32 %v2_100099e0, 0
  br i1 %v3_10009a6c3, label %dec_label_pc_10009a74, label %dec_label_pc_100099f0

dec_label_pc_100099f0:                            ; preds = %dec_label_pc_100099e0, %dec_label_pc_10009a68
  %v0_10009a68 = phi i32 [ %v3_10009a68, %dec_label_pc_10009a68 ], [ %v2_100099e0, %dec_label_pc_100099e0 ]
  %v1_100099f0 = inttoptr i32 %v0_10009a68 to i32*
  %v2_100099f0 = load i32, i32* %v1_100099f0, align 4
  %v2_100099f4 = sub i32 %v0_10009a68, %v2_100099f0
  %v1_100099f8 = add i32 %v2_100099f4, 12
  %v3_100099fc = icmp ugt i32 %v1_100099f8, %arg2
  br i1 %v3_100099fc, label %dec_label_pc_10009a68, label %dec_label_pc_10009a04

dec_label_pc_10009a04:                            ; preds = %dec_label_pc_100099f0
  %v4_100099fc = icmp eq i32 %v1_100099f8, %arg2
  br i1 %v4_100099fc, label %dec_label_pc_10009a0c, label %dec_label_pc_10009a74

dec_label_pc_10009a0c:                            ; preds = %dec_label_pc_10009a04
  %v1_10009a0c = call i32 @__asm_rlwinm(i32 %v1_100099e8, i32 0, i32 0, i32 29)
  %v2_10009a10 = icmp ult i32 %v2_100099f0, %v1_10009a0c
  br i1 %v2_10009a10, label %dec_label_pc_10009a74, label %dec_label_pc_10009a18

dec_label_pc_10009a18:                            ; preds = %dec_label_pc_10009a0c
  %v1_10009a18 = add i32 %v1_10009a0c, 44
  %v2_10009a1c = icmp ult i32 %v2_100099f0, %v1_10009a18
  br i1 %v2_10009a1c, label %dec_label_pc_10009a24, label %dec_label_pc_10009a58

dec_label_pc_10009a24:                            ; preds = %dec_label_pc_10009a18
  %v0_10009a24 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a24 = add i32 %v0_10009a24, 4
  %v2_10009a24 = inttoptr i32 %v1_10009a24 to i32*
  %v3_10009a24 = load i32, i32* %v2_10009a24, align 4
  %v3_10009a28 = icmp eq i32 %v3_10009a24, 0
  br i1 %v3_10009a28, label %dec_label_pc_10009a38, label %dec_label_pc_10009a30

dec_label_pc_10009a30:                            ; preds = %dec_label_pc_10009a24
  %v1_10009a30 = add i32 %v0_10009a24, 8
  %v2_10009a30 = inttoptr i32 %v1_10009a30 to i32*
  %v3_10009a30 = load i32, i32* %v2_10009a30, align 4
  %v2_10009a34 = add i32 %v3_10009a24, 8
  %v3_10009a34 = inttoptr i32 %v2_10009a34 to i32*
  store i32 %v3_10009a30, i32* %v3_10009a34, align 4
  %v0_10009a38.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009a38

dec_label_pc_10009a38:                            ; preds = %dec_label_pc_10009a24, %dec_label_pc_10009a30
  %v0_10009a38 = phi i32 [ %v0_10009a24, %dec_label_pc_10009a24 ], [ %v0_10009a38.pre, %dec_label_pc_10009a30 ]
  %v1_10009a38 = add i32 %v0_10009a38, 8
  %v2_10009a38 = inttoptr i32 %v1_10009a38 to i32*
  %v3_10009a38 = load i32, i32* %v2_10009a38, align 4
  %v1_10009a3c = add i32 %v0_10009a38, 4
  %v2_10009a3c = inttoptr i32 %v1_10009a3c to i32*
  %v3_10009a3c = load i32, i32* %v2_10009a3c, align 4
  %v3_10009a40 = icmp eq i32 %v3_10009a38, 0
  br i1 %v3_10009a40, label %dec_label_pc_10009a50, label %dec_label_pc_10009a48

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_10009a38
  %v2_10009a48 = add i32 %v3_10009a38, 4
  %v3_10009a48 = inttoptr i32 %v2_10009a48 to i32*
  store i32 %v3_10009a3c, i32* %v3_10009a48, align 4
  ret i32 %v2_100099f0

dec_label_pc_10009a50:                            ; preds = %dec_label_pc_10009a38
  %v1_10009a50 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009a50 = inttoptr i32 %v1_10009a50 to i32*
  store i32 %v3_10009a3c, i32* %v2_10009a50, align 4
  ret i32 %v2_100099f0

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a18
  %v2_10009a58 = sub i32 %v2_100099f0, %v1_10009a0c
  %v1_10009a60 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009a60 = inttoptr i32 %v1_10009a60 to i32*
  store i32 %v2_10009a58, i32* %v2_10009a60, align 4
  ret i32 %v1_10009a0c

dec_label_pc_10009a68:                            ; preds = %dec_label_pc_100099f0
  %v1_10009a68 = add i32 %v0_10009a68, 4
  %v2_10009a68 = inttoptr i32 %v1_10009a68 to i32*
  %v3_10009a68 = load i32, i32* %v2_10009a68, align 4
  store i32 %v3_10009a68, i32* %r11.global-to-local, align 4
  %v3_10009a6c = icmp eq i32 %v3_10009a68, 0
  br i1 %v3_10009a6c, label %dec_label_pc_10009a6c.dec_label_pc_10009a74.loopexit_crit_edge, label %dec_label_pc_100099f0

dec_label_pc_10009a6c.dec_label_pc_10009a74.loopexit_crit_edge: ; preds = %dec_label_pc_10009a68
  br label %dec_label_pc_10009a74

dec_label_pc_10009a74:                            ; preds = %dec_label_pc_100099e0, %dec_label_pc_10009a6c.dec_label_pc_10009a74.loopexit_crit_edge, %dec_label_pc_10009a04, %dec_label_pc_10009a0c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10009a68, { 1, 2, 0 }
  uselistorder i32 %v0_10009a38, { 1, 0 }
  uselistorder i32 %v1_10009a0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_100099f0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10009a68, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009a74, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009a38, { 1, 0 }
  uselistorder label %dec_label_pc_100099f0, { 1, 0 }
}

define i32 @function_10009a7c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009a7c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10009a7c = icmp eq i32 %arg3, 0
  %v2_10009a80 = add i32 %arg2, 4
  %v3_10009a80 = inttoptr i32 %v2_10009a80 to i32*
  store i32 %arg4, i32* %v3_10009a80, align 4
  %v2_10009a84 = add i32 %arg2, 8
  %v3_10009a84 = inttoptr i32 %v2_10009a84 to i32*
  store i32 %arg3, i32* %v3_10009a84, align 4
  br i1 %v3_10009a7c, label %dec_label_pc_10009a94, label %dec_label_pc_10009a8c

dec_label_pc_10009a8c:                            ; preds = %dec_label_pc_10009a7c
  %v2_10009a8c = add i32 %arg3, 4
  %v3_10009a8c = inttoptr i32 %v2_10009a8c to i32*
  store i32 %arg2, i32* %v3_10009a8c, align 4
  br label %dec_label_pc_10009a98

dec_label_pc_10009a94:                            ; preds = %dec_label_pc_10009a7c
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10009a98

dec_label_pc_10009a98:                            ; preds = %dec_label_pc_10009a8c, %dec_label_pc_10009a94
  %v3_10009a98 = icmp eq i32 %arg4, 0
  %v0_10009a9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009a98, i32 %v0_10009a9c)
  %v2_10009aa0 = add i32 %arg4, 8
  %v3_10009aa0 = inttoptr i32 %v2_10009aa0 to i32*
  store i32 %arg2, i32* %v3_10009aa0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_10009a98, { 1, 0 }
}

define i32 @function_10009aa8(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009aa8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10009aa8 = icmp eq i32 %arg3, 0
  br i1 %v3_10009aa8, label %dec_label_pc_10009ab8, label %dec_label_pc_10009ab0

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009aa8
  %v2_10009ab0 = add i32 %arg3, 4
  %v3_10009ab0 = inttoptr i32 %v2_10009ab0 to i32*
  store i32 %arg2, i32* %v3_10009ab0, align 4
  br label %dec_label_pc_10009abc

dec_label_pc_10009ab8:                            ; preds = %dec_label_pc_10009aa8
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10009abc

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009ab0, %dec_label_pc_10009ab8
  %v2_10009abc = add i32 %arg2, 8
  %v3_10009abc = inttoptr i32 %v2_10009abc to i32*
  store i32 %arg3, i32* %v3_10009abc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009abc, { 1, 0 }
}

define i32 @function_10009ac4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009ac4:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10009adc = load i32, i32* %arg1, align 4
  store i32 %v2_10009adc, i32* @r31, align 4
  %v2_10009ae0 = add i32 %arg3, %arg2
  store i32 %v2_10009ae0, i32* %r3.global-to-local, align 4
  %v3_10009af47 = icmp eq i32 %v2_10009adc, 0
  %v1_10009af88 = add i32 %v2_10009adc, 12
  %tmp69 = icmp uge i32 %v1_10009af88, %arg2
  %or.cond10 = or i1 %v3_10009af47, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10009b04, label %dec_label_pc_10009aec

dec_label_pc_10009aec:                            ; preds = %dec_label_pc_10009ac4, %dec_label_pc_10009aec
  %v0_10009b4c11 = phi i32 [ %v3_10009af0, %dec_label_pc_10009aec ], [ %v2_10009adc, %dec_label_pc_10009ac4 ]
  store i32 %v0_10009b4c11, i32* %r11.global-to-local, align 4
  %v1_10009af0 = add i32 %v0_10009b4c11, 4
  %v2_10009af0 = inttoptr i32 %v1_10009af0 to i32*
  %v3_10009af0 = load i32, i32* %v2_10009af0, align 4
  store i32 %v3_10009af0, i32* @r31, align 4
  %v3_10009af4 = icmp eq i32 %v3_10009af0, 0
  %v1_10009af8 = add i32 %v3_10009af0, 12
  %tmp6 = icmp uge i32 %v1_10009af8, %arg2
  %or.cond = or i1 %v3_10009af4, %tmp6
  br i1 %or.cond, label %dec_label_pc_10009b04, label %dec_label_pc_10009aec

dec_label_pc_10009b04:                            ; preds = %dec_label_pc_10009aec, %dec_label_pc_10009ac4
  %v0_10009b40.lcssa = phi i32 [ 0, %dec_label_pc_10009ac4 ], [ %v0_10009b4c11, %dec_label_pc_10009aec ]
  %v0_10009b4c.lcssa = phi i32 [ %v2_10009adc, %dec_label_pc_10009ac4 ], [ %v3_10009af0, %dec_label_pc_10009aec ]
  %v3_10009af4.lcssa = phi i1 [ %v3_10009af47, %dec_label_pc_10009ac4 ], [ %v3_10009af4, %dec_label_pc_10009aec ]
  br i1 %v3_10009af4.lcssa, label %dec_label_pc_10009bbc, label %dec_label_pc_10009b0c

dec_label_pc_10009b0c:                            ; preds = %dec_label_pc_10009b04
  %v1_10009b0c = inttoptr i32 %v0_10009b4c.lcssa to i32*
  %v2_10009b0c = load i32, i32* %v1_10009b0c, align 4
  %v2_10009b10 = sub i32 %v0_10009b4c.lcssa, %v2_10009b0c
  %v1_10009b14 = add i32 %v2_10009b10, 12
  %v3_10009b18 = icmp ugt i32 %v1_10009b14, %v2_10009ae0
  br i1 %v3_10009b18, label %dec_label_pc_10009bbc, label %dec_label_pc_10009b20

dec_label_pc_10009b20:                            ; preds = %dec_label_pc_10009b0c
  %v4_10009b18 = icmp eq i32 %v1_10009b14, %v2_10009ae0
  %v2_10009b24 = add i32 %v2_10009b0c, %arg3
  store i32 %v2_10009b24, i32* @r29, align 4
  br i1 %v4_10009b18, label %dec_label_pc_10009b2c, label %dec_label_pc_10009b5c

dec_label_pc_10009b2c:                            ; preds = %dec_label_pc_10009b20
  %v3_10009b2c = icmp eq i32 %v0_10009b40.lcssa, 0
  br i1 %v3_10009b2c, label %dec_label_pc_10009bb0, label %dec_label_pc_10009b34

dec_label_pc_10009b34:                            ; preds = %dec_label_pc_10009b2c
  %v1_10009b34 = add i32 %v0_10009b40.lcssa, 12
  %v4_10009b38 = icmp eq i32 %v1_10009b34, %arg2
  br i1 %v4_10009b38, label %dec_label_pc_10009b40, label %dec_label_pc_10009bb0

dec_label_pc_10009b40:                            ; preds = %dec_label_pc_10009b34
  %v1_10009b40 = inttoptr i32 %v0_10009b40.lcssa to i32*
  %v2_10009b40 = load i32, i32* %v1_10009b40, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10009b48 = add i32 %v0_10009b40.lcssa, 8
  %v2_10009b48 = inttoptr i32 %v1_10009b48 to i32*
  %v3_10009b48 = load i32, i32* %v2_10009b48, align 4
  %v2_10009b50 = add i32 %v2_10009b40, %v2_10009b24
  store i32 %v2_10009b50, i32* @r29, align 4
  %v5_10009b54 = call i32 @function_10009aa8(i32* %arg1, i32 %v0_10009b4c.lcssa, i32 %v3_10009b48, i32 %v2_10009ae0)
  store i32 %v5_10009b54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009bb0

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009b20
  %v1_10009b5c = add i32 %v0_10009b4c.lcssa, 4
  %v2_10009b5c = inttoptr i32 %v1_10009b5c to i32*
  %v3_10009b5c = load i32, i32* %v2_10009b5c, align 4
  %v3_10009b60 = icmp eq i32 %v3_10009b5c, 0
  br i1 %v3_10009b60, label %dec_label_pc_10009b98, label %dec_label_pc_10009b68

dec_label_pc_10009b68:                            ; preds = %dec_label_pc_10009b5c
  %v1_10009b68 = inttoptr i32 %v3_10009b5c to i32*
  %v2_10009b68 = load i32, i32* %v1_10009b68, align 4
  %v2_10009b6c = sub i32 %v3_10009b5c, %v2_10009b68
  %v1_10009b70 = add i32 %v2_10009b6c, 12
  %v4_10009b74 = icmp eq i32 %v2_10009ae0, %v1_10009b70
  br i1 %v4_10009b74, label %dec_label_pc_10009b7c, label %dec_label_pc_10009b98

dec_label_pc_10009b7c:                            ; preds = %dec_label_pc_10009b68
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10009b88 = add i32 %v2_10009b68, %v2_10009b24
  store i32 %v2_10009b88, i32* @r29, align 4
  store i32 %v3_10009b5c, i32* @r31, align 4
  %v5_10009b90 = call i32 @function_10009aa8(i32* %arg1, i32 %v3_10009b5c, i32 %v0_10009b40.lcssa, i32 %v2_10009ae0)
  store i32 %v5_10009b90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009bb0

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b68, %dec_label_pc_10009b5c
  %v2_10009b98 = add i32 %v0_10009b4c.lcssa, %arg3
  store i32 %v2_10009b98, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268475312, i32* @lr, align 4
  %v5_10009bac = call i32 @function_10009a7c(i32* %arg1, i32 %v2_10009b98, i32 %v0_10009b40.lcssa, i32 %v3_10009b5c)
  store i32 %v5_10009bac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009bb0

dec_label_pc_10009bb0:                            ; preds = %dec_label_pc_10009b34, %dec_label_pc_10009b2c, %dec_label_pc_10009b7c, %dec_label_pc_10009b40, %dec_label_pc_10009b98
  %v0_10009bb0 = load i32, i32* @r31, align 4
  store i32 %v0_10009bb0, i32* @r30, align 4
  %v0_10009bb4 = load i32, i32* @r29, align 4
  %v2_10009bb4 = inttoptr i32 %v0_10009bb0 to i32*
  store i32 %v0_10009bb4, i32* %v2_10009bb4, align 4
  br label %dec_label_pc_10009bd8

dec_label_pc_10009bbc:                            ; preds = %dec_label_pc_10009b0c, %dec_label_pc_10009b04
  %v2_10009bbc = add i32 %v2_10009ae0, -12
  %v3_10009bbc = inttoptr i32 %v2_10009bbc to i32*
  store i32 %arg3, i32* %v3_10009bbc, align 4
  %v0_10009bc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009bc0 = add i32 %v0_10009bc0, -12
  store i32 %v1_10009bc0, i32* @r30, align 4
  %v0_10009bc4 = load i32, i32* %r11.global-to-local, align 4
  %v0_10009bc8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10009bc8, i32* %r3.global-to-local, align 4
  %v0_10009bcc = load i32, i32* @r31, align 4
  store i32 268475352, i32* @lr, align 4
  %v4_10009bd4 = inttoptr i32 %v0_10009bc8 to i32*
  %v5_10009bd4 = call i32 @function_10009a7c(i32* %v4_10009bd4, i32 %v1_10009bc0, i32 %v0_10009bc4, i32 %v0_10009bcc)
  store i32 %v5_10009bd4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009bd8

dec_label_pc_10009bd8:                            ; preds = %dec_label_pc_10009bb0, %dec_label_pc_10009bbc
  %v0_10009bdc = load i32, i32* @r30, align 4
  store i32 %v0_10009bdc, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009bdc

; uselistorder directives
  uselistorder i32 %v3_10009b5c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10009b14, { 1, 0 }
  uselistorder i32 %v0_10009b4c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10009b40.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10009af0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10009ae0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 4, 9, 10, 11, 1, 2, 3, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_10009aa8, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009bd8, { 1, 0 }
  uselistorder label %dec_label_pc_10009bb0, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10009aec, { 1, 0 }
}

define i32 @function_10009bf0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009bf0:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10009c28 = load i32, i32* bitcast (i32** @global_var_1001b73c.301 to i32*), align 4
  %v2_10009c3427 = load i8, i8* %arg1, align 1
  %v3_10009c3428 = zext i8 %v2_10009c3427 to i32
  %v1_10009c3829 = mul nuw nsw i32 %v3_10009c3428, 2
  %v2_10009c3c30 = add i32 %v1_10009c3829, %v3_10009c28
  %v3_10009c3c31 = inttoptr i32 %v2_10009c3c30 to i16*
  %v4_10009c3c32 = load i16, i16* %v3_10009c3c31, align 2
  %v1_10009c4034 = and i16 %v4_10009c3c32, 32
  %v3_10009c4035 = icmp eq i16 %v1_10009c4034, 0
  br i1 %v3_10009c4035, label %dec_label_pc_10009c48, label %dec_label_pc_10009c30

dec_label_pc_10009c30:                            ; preds = %dec_label_pc_10009bf0, %dec_label_pc_10009c30
  %v0_10009c6836 = phi i32 [ %v1_10009c30, %dec_label_pc_10009c30 ], [ %tmp, %dec_label_pc_10009bf0 ]
  %v1_10009c30 = add i32 %v0_10009c6836, 1
  store i32 %v1_10009c30, i32* %r31.global-to-local, align 4
  %v1_10009c34 = inttoptr i32 %v1_10009c30 to i8*
  %v2_10009c34 = load i8, i8* %v1_10009c34, align 1
  %v3_10009c34 = zext i8 %v2_10009c34 to i32
  %v1_10009c38 = mul nuw nsw i32 %v3_10009c34, 2
  %v2_10009c3c = add i32 %v1_10009c38, %v3_10009c28
  %v3_10009c3c = inttoptr i32 %v2_10009c3c to i16*
  %v4_10009c3c = load i16, i16* %v3_10009c3c, align 2
  %v1_10009c40 = and i16 %v4_10009c3c, 32
  %v3_10009c40 = icmp eq i16 %v1_10009c40, 0
  br i1 %v3_10009c40, label %dec_label_pc_10009c48, label %dec_label_pc_10009c30

dec_label_pc_10009c48:                            ; preds = %dec_label_pc_10009c30, %dec_label_pc_10009bf0
  %v0_10009c68.lcssa = phi i32 [ %tmp, %dec_label_pc_10009bf0 ], [ %v1_10009c30, %dec_label_pc_10009c30 ]
  %v2_10009c34.lcssa = phi i8 [ %v2_10009c3427, %dec_label_pc_10009bf0 ], [ %v2_10009c34, %dec_label_pc_10009c30 ]
  %v3_10009c48 = icmp eq i8 %v2_10009c34.lcssa, 43
  br i1 %v3_10009c48, label %dec_label_pc_10009c68, label %dec_label_pc_10009c50

dec_label_pc_10009c50:                            ; preds = %dec_label_pc_10009c48
  %v3_10009c50 = icmp eq i8 %v2_10009c34.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_10009c50, label %dec_label_pc_10009c68, label %dec_label_pc_10009c6c

dec_label_pc_10009c68:                            ; preds = %dec_label_pc_10009c48, %dec_label_pc_10009c50
  %storemerge = phi i32 [ 1, %dec_label_pc_10009c50 ], [ 0, %dec_label_pc_10009c48 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_10009c68 = add i32 %v0_10009c68.lcssa, 1
  store i32 %v1_10009c68, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009c6c

dec_label_pc_10009c6c:                            ; preds = %dec_label_pc_10009c50, %dec_label_pc_10009c68
  %v1_10009c6c = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_10009c6c = icmp eq i32 %v1_10009c6c, 0
  br i1 %v4_10009c6c, label %dec_label_pc_10009c78, label %dec_label_pc_10009c6c.dec_label_pc_10009cb4_crit_edge

dec_label_pc_10009c6c.dec_label_pc_10009cb4_crit_edge: ; preds = %dec_label_pc_10009c6c
  %v0_10009cb4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009cb4

dec_label_pc_10009c78:                            ; preds = %dec_label_pc_10009c6c
  %v0_10009c78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009c78 = inttoptr i32 %v0_10009c78 to i8*
  %v2_10009c78 = load i8, i8* %v1_10009c78, align 1
  %v0_10009c7c = load i32, i32* %r30.global-to-local, align 4
  %v1_10009c7c = add i32 %v0_10009c7c, 10
  store i32 %v1_10009c7c, i32* %r30.global-to-local, align 4
  %v3_10009c80 = icmp eq i8 %v2_10009c78, 48
  br i1 %v3_10009c80, label %dec_label_pc_10009c88, label %dec_label_pc_10009ca8

dec_label_pc_10009c88:                            ; preds = %dec_label_pc_10009c78
  %v1_10009c88 = add i32 %v0_10009c78, 1
  %v2_10009c88 = inttoptr i32 %v1_10009c88 to i8*
  %v3_10009c88 = load i8, i8* %v2_10009c88, align 1
  %v4_10009c88 = zext i8 %v3_10009c88 to i32
  store i32 %v1_10009c88, i32* %r31.global-to-local, align 4
  %v1_10009c8c = add i32 %v0_10009c7c, 8
  store i32 %v1_10009c8c, i32* %r30.global-to-local, align 4
  %v1_10009c90 = or i32 %v4_10009c88, 32
  %v3_10009c98 = icmp eq i32 %v1_10009c90, 120
  br i1 %v3_10009c98, label %dec_label_pc_10009ca0, label %dec_label_pc_10009ca8

dec_label_pc_10009ca0:                            ; preds = %dec_label_pc_10009c88
  %v1_10009ca0 = mul i32 %v1_10009c8c, 2
  store i32 %v1_10009ca0, i32* %r30.global-to-local, align 4
  %v1_10009ca4 = add i32 %v0_10009c78, 2
  store i32 %v1_10009ca4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009ca8

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009c88, %dec_label_pc_10009c78, %dec_label_pc_10009ca0
  %v0_10009d5c15 = phi i32 [ %v1_10009c88, %dec_label_pc_10009ca0 ], [ %tmp, %dec_label_pc_10009c78 ], [ %v1_10009c88, %dec_label_pc_10009c88 ]
  %v0_10009ca8 = phi i32 [ %v1_10009ca0, %dec_label_pc_10009ca0 ], [ %v1_10009c7c, %dec_label_pc_10009c78 ], [ %v1_10009c8c, %dec_label_pc_10009c88 ]
  %tmp22 = icmp slt i32 %v0_10009ca8, 17
  br i1 %tmp22, label %dec_label_pc_10009cb4, label %dec_label_pc_10009cb0

dec_label_pc_10009cb0:                            ; preds = %dec_label_pc_10009ca8
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009cb4

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009c6c.dec_label_pc_10009cb4_crit_edge, %dec_label_pc_10009ca8, %dec_label_pc_10009cb0
  %v0_10009d5c14 = phi i32 [ %tmp, %dec_label_pc_10009c6c.dec_label_pc_10009cb4_crit_edge ], [ %v0_10009d5c15, %dec_label_pc_10009ca8 ], [ %v0_10009d5c15, %dec_label_pc_10009cb0 ]
  %v1_10009cc8 = phi i32 [ %v0_10009cb4.pre, %dec_label_pc_10009c6c.dec_label_pc_10009cb4_crit_edge ], [ %v0_10009ca8, %dec_label_pc_10009ca8 ], [ 16, %dec_label_pc_10009cb0 ]
  %v1_10009cb4 = add i32 %v1_10009cc8, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10009cbc = icmp ugt i32 %v1_10009cb4, 34
  br i1 %v2_10009cbc, label %dec_label_pc_10009d54, label %dec_label_pc_10009cc4

dec_label_pc_10009cc4:                            ; preds = %dec_label_pc_10009cb4
  %v2_10009cc8 = udiv i32 -1, %v1_10009cc8
  store i32 %v2_10009cc8, i32* @r29, align 4
  %v2_10009ccc = mul i32 %v2_10009cc8, %v1_10009cc8
  %v1_10009cd0 = sub i32 -1, %v2_10009ccc
  %v1_10009cd4 = urem i32 %v1_10009cd0, 256
  store i32 %v1_10009cd4, i32* @r27, align 4
  %v0_10009ce0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009ce0

dec_label_pc_10009cdc:                            ; preds = %dec_label_pc_10009d48, %dec_label_pc_10009d30
  %v1_10009ce4.pre = phi i32 [ %v1_10009ce8, %dec_label_pc_10009d48 ], [ %v1_10009ce4.pre.pre, %dec_label_pc_10009d30 ]
  %v0_10009ce4.pre = phi i32 [ %v2_10009d4c, %dec_label_pc_10009d48 ], [ %v0_10009ce4.pre.pre, %dec_label_pc_10009d30 ]
  %v0_10009cdc = phi i32 [ %v1_10009cec, %dec_label_pc_10009d48 ], [ %v0_10009cdc.pre, %dec_label_pc_10009d30 ]
  br label %dec_label_pc_10009ce0

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009cc4, %dec_label_pc_10009cdc
  %v0_10009d5c12 = phi i32 [ %v0_10009d5c14, %dec_label_pc_10009cc4 ], [ %v0_10009cdc, %dec_label_pc_10009cdc ]
  %v0_10009cec = phi i32 [ %v0_10009ce0.pre, %dec_label_pc_10009cc4 ], [ %v0_10009cdc, %dec_label_pc_10009cdc ]
  %v1_10009ce8 = phi i32 [ %v2_10009cc8, %dec_label_pc_10009cc4 ], [ %v1_10009ce4.pre, %dec_label_pc_10009cdc ]
  %v0_10009d48 = phi i32 [ 0, %dec_label_pc_10009cc4 ], [ %v0_10009ce4.pre, %dec_label_pc_10009cdc ]
  %v1_10009ce0 = inttoptr i32 %v0_10009cec to i8*
  %v2_10009ce0 = load i8, i8* %v1_10009ce0, align 1
  %v3_10009ce0 = zext i8 %v2_10009ce0 to i32
  %v3_10009ce4 = icmp ugt i32 %v0_10009d48, %v1_10009ce8
  %v1_10009cec = add i32 %v0_10009cec, 1
  store i32 %v1_10009cec, i32* %r31.global-to-local, align 4
  %v1_10009cf0 = add nsw i32 %v3_10009ce0, -48
  %v1_10009cf4 = or i32 %v3_10009ce0, 32
  %v1_10009cf8 = urem i32 %v1_10009cf0, 256
  %tmp23 = icmp ult i32 %v1_10009cf8, 10
  br i1 %tmp23, label %dec_label_pc_10009d18, label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009ce0
  %tmp24 = icmp ult i32 %v1_10009cf4, 97
  br i1 %tmp24, label %dec_label_pc_10009d18, label %dec_label_pc_10009d14

dec_label_pc_10009d14:                            ; preds = %dec_label_pc_10009d08
  %v1_10009d08 = add nsw i32 %v1_10009cf4, -87
  %v1_10009d14 = urem i32 %v1_10009d08, 256
  br label %dec_label_pc_10009d18

dec_label_pc_10009d18:                            ; preds = %dec_label_pc_10009d08, %dec_label_pc_10009ce0, %dec_label_pc_10009d14
  %v1_10009d4c = phi i32 [ 40, %dec_label_pc_10009d08 ], [ %v1_10009cf8, %dec_label_pc_10009ce0 ], [ %v1_10009d14, %dec_label_pc_10009d14 ]
  %v1_10009d18 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009d18 = icmp slt i32 %v1_10009d4c, %v1_10009d18
  br i1 %v2_10009d18, label %dec_label_pc_10009d20, label %dec_label_pc_10009d54

dec_label_pc_10009d20:                            ; preds = %dec_label_pc_10009d18
  br i1 %v3_10009ce4, label %dec_label_pc_10009d30, label %dec_label_pc_10009d24

dec_label_pc_10009d24:                            ; preds = %dec_label_pc_10009d20
  %v1_10009d24 = load i32, i32* @r27, align 4
  %v0_10009d28.not = icmp ne i32 %v0_10009d48, %v1_10009ce8
  %tmp25 = icmp ule i32 %v1_10009d4c, %v1_10009d24
  %or.cond = or i1 %tmp25, %v0_10009d28.not
  br i1 %or.cond, label %dec_label_pc_10009d48, label %dec_label_pc_10009d30

dec_label_pc_10009d30:                            ; preds = %dec_label_pc_10009d24, %dec_label_pc_10009d20
  %v0_10009d30 = call i32 @function_10008d44()
  %v0_10009d34 = load i32, i32* @r28, align 4
  %v1_10009d34 = load i32, i32* @r26, align 4
  %v2_10009d34 = and i32 %v1_10009d34, %v0_10009d34
  store i32 %v2_10009d34, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10009d40 = inttoptr i32 %v0_10009d30 to i32*
  store i32 34, i32* %v2_10009d40, align 4
  %v0_10009cdc.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009ce4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009ce4.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009cdc

dec_label_pc_10009d48:                            ; preds = %dec_label_pc_10009d24
  %v2_10009d48 = mul i32 %v1_10009d18, %v0_10009d48
  %v2_10009d4c = add i32 %v2_10009d48, %v1_10009d4c
  store i32 %v2_10009d4c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009cdc

dec_label_pc_10009d54:                            ; preds = %dec_label_pc_10009d18, %dec_label_pc_10009cb4
  %v0_10009d5c = phi i32 [ %v0_10009d5c14, %dec_label_pc_10009cb4 ], [ %v0_10009d5c12, %dec_label_pc_10009d18 ]
  %v0_10009d54 = load i32, i32* @r25, align 4
  %v3_10009d54 = icmp eq i32 %v0_10009d54, 0
  br i1 %v3_10009d54, label %dec_label_pc_10009d60, label %dec_label_pc_10009d5c

dec_label_pc_10009d5c:                            ; preds = %dec_label_pc_10009d54
  %v2_10009d5c = inttoptr i32 %v0_10009d54 to i32*
  store i32 %v0_10009d5c, i32* %v2_10009d5c, align 4
  br label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %dec_label_pc_10009d54, %dec_label_pc_10009d5c
  %v0_10009d60 = load i32, i32* @r26, align 4
  %v3_10009d60 = icmp eq i32 %v0_10009d60, 0
  %v0_10009d64 = load i32, i32* @r28, align 4
  %v1_10009d64 = sub i32 0, %v0_10009d64
  %tmp40 = lshr i32 %v1_10009d64, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_10009da4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_10009d60, label %dec_label_pc_10009d94, label %dec_label_pc_10009d7c

dec_label_pc_10009d7c:                            ; preds = %dec_label_pc_10009d60
  %v3_10009d7c = icmp ugt i32 %v0_10009da4.pre.pre, %tmp41
  br i1 %v3_10009d7c, label %dec_label_pc_10009d84, label %dec_label_pc_10009d94

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d7c
  %v0_10009d84 = call i32 @function_10008d44()
  %v2_10009d8c = inttoptr i32 %v0_10009d84 to i32*
  store i32 34, i32* %v2_10009d8c, align 4
  %v0_10009d90 = load i32, i32* @r31, align 4
  store i32 %v0_10009d90, i32* %r8.global-to-local, align 4
  %v0_10009d94.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009d94

dec_label_pc_10009d94:                            ; preds = %dec_label_pc_10009d60, %dec_label_pc_10009d7c, %dec_label_pc_10009d84
  %v0_10009da4.pre = phi i32 [ %v0_10009da4.pre.pre, %dec_label_pc_10009d7c ], [ %v0_10009d90, %dec_label_pc_10009d84 ], [ %v0_10009da4.pre.pre, %dec_label_pc_10009d60 ]
  %v0_10009d94 = phi i32 [ %v0_10009d64, %dec_label_pc_10009d7c ], [ %v0_10009d94.pre, %dec_label_pc_10009d84 ], [ %v0_10009d64, %dec_label_pc_10009d60 ]
  %v3_10009d94 = icmp eq i32 %v0_10009d94, 0
  br i1 %v3_10009d94, label %dec_label_pc_10009da0, label %dec_label_pc_10009d9c

dec_label_pc_10009d9c:                            ; preds = %dec_label_pc_10009d94
  %v1_10009d9c = sub i32 0, %v0_10009da4.pre
  store i32 %v1_10009d9c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009da0

dec_label_pc_10009da0:                            ; preds = %dec_label_pc_10009d94, %dec_label_pc_10009d9c
  %v0_10009da4 = phi i32 [ %v1_10009d9c, %dec_label_pc_10009d9c ], [ %v0_10009da4.pre, %dec_label_pc_10009d94 ]
  ret i32 %v0_10009da4

; uselistorder directives
  uselistorder i32 %v0_10009da4.pre, { 1, 0 }
  uselistorder i32 %v0_10009da4.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10009d4c, { 1, 0 }
  uselistorder i32 %v1_10009cf8, { 1, 0 }
  uselistorder i32 %v1_10009cf4, { 1, 0 }
  uselistorder i32 %v1_10009cec, { 1, 0 }
  uselistorder i32 %v3_10009ce0, { 1, 0 }
  uselistorder i32 %v0_10009d48, { 1, 0, 2 }
  uselistorder i32 %v1_10009ce8, { 0, 2, 1 }
  uselistorder i32 %v0_10009cdc, { 1, 0 }
  uselistorder i32 %v2_10009cc8, { 1, 0, 2 }
  uselistorder i32 %v1_10009ca0, { 1, 0 }
  uselistorder i32 %v1_10009c8c, { 1, 0, 2 }
  uselistorder i8 %v2_10009c34.lcssa, { 1, 0 }
  uselistorder i32 %v1_10009c30, { 0, 2, 3, 1 }
  uselistorder i32 %v3_10009c28, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 26, { 3, 0, 1, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009da0, { 1, 0 }
  uselistorder label %dec_label_pc_10009d94, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009d60, { 1, 0 }
  uselistorder label %dec_label_pc_10009d18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10009cb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009ca8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10009c68, { 1, 0 }
  uselistorder label %dec_label_pc_10009c30, { 1, 0 }
}

define i32 @function_10009db8() local_unnamed_addr {
dec_label_pc_10009db8:
  %stack_var_-40 = alloca i32, align 4
  %v2_10009dd0 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10009ddc = load i32, i32* @r3, align 4
  store i32 %v0_10009ddc, i32* @r31, align 4
  store i32 %v2_10009dd0, i32* @r3, align 4
  %v3_10009de8 = call i32 @function_1000a0ac(i32 %v2_10009dd0, i32 ptrtoint ([3 x i8]* @global_var_1000a0a4.281 to i32))
  %v0_10009df0 = call i32 @function_1000a0a4()
  %v3_10009df8 = load i32, i32* @global_var_1001b780.304, align 4
  %v3_10009dfc = icmp eq i32 %v3_10009df8, 0
  br i1 %v3_10009dfc, label %dec_label_pc_10009e10, label %dec_label_pc_10009e04

dec_label_pc_10009e04:                            ; preds = %dec_label_pc_10009db8
  %v0_10009e04 = load i32, i32* @r31, align 4
  %v3_10009e0c = call i32 @unknown_0(i32 %v0_10009e04, i32 268566528)
  br label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009db8, %dec_label_pc_10009e04
  store i32 %v2_10009dd0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_10009e18 = call i32 @function_1000a0ac(i32 %v2_10009dd0, i32 1)
  store i32 %v2_10009e18, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009e20.306 to i32), i32* @lr, align 4
  %v1_10009e1c = call i32 @function_1000a010(i32 %v2_10009e18)
  %v0_10009e34 = load i32, i32* @r31, align 4
  %v1_10009e38 = call i32 @function_1000a444(i32 %v0_10009e34)
  ret i32 %v1_10009e38

; uselistorder directives
  uselistorder i32 %v2_10009dd0, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000a0ac, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_10009e10, { 1, 0 }
}

define i32 @function_10009e3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009e3c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10009e3c = icmp eq i32 %arg1, 0
  br i1 %v3_10009e3c, label %dec_label_pc_10009ff0, label %dec_label_pc_10009e6c.lr.ph

dec_label_pc_10009e6c.lr.ph:                      ; preds = %dec_label_pc_10009e3c
  %v2_10009e60 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10009e60, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009e6c42 = add i32 %v2_10009e60, 132
  %v3_10009e6c43 = inttoptr i32 %v2_10009e6c42 to i32*
  store i32 0, i32* %v3_10009e6c43, align 4
  %v0_10009e7044 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e7045 = add i32 %v0_10009e7044, -1
  store i32 %v1_10009e7045, i32* %r11.global-to-local, align 4
  %v1_10009e7446 = mul i32 %v1_10009e7045, 4
  %v1_10009e7847 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009e7848 = add i32 %v1_10009e7847, %v1_10009e7446
  %v0_10009e7c49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e7c50 = add i32 %v0_10009e7c49, -1
  store i32 %v1_10009e7c50, i32* %ctr.global-to-local, align 4
  %v2_10009e7c51 = icmp eq i32 %v1_10009e7c50, 0
  br i1 %v2_10009e7c51, label %dec_label_pc_10009e80, label %dec_label_pc_10009e6c.dec_label_pc_10009e6c_crit_edge

dec_label_pc_10009e6c.dec_label_pc_10009e6c_crit_edge: ; preds = %dec_label_pc_10009e6c.lr.ph, %dec_label_pc_10009e6c.dec_label_pc_10009e6c_crit_edge
  %v2_10009e7852 = phi i32 [ %v2_10009e78, %dec_label_pc_10009e6c.dec_label_pc_10009e6c_crit_edge ], [ %v2_10009e7848, %dec_label_pc_10009e6c.lr.ph ]
  %v0_10009e6c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009e6c = add i32 %v2_10009e7852, 8
  %v3_10009e6c = inttoptr i32 %v2_10009e6c to i32*
  store i32 %v0_10009e6c.pre, i32* %v3_10009e6c, align 4
  %v0_10009e70 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e70 = add i32 %v0_10009e70, -1
  store i32 %v1_10009e70, i32* %r11.global-to-local, align 4
  %v1_10009e74 = mul i32 %v1_10009e70, 4
  %v1_10009e78 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009e78 = add i32 %v1_10009e78, %v1_10009e74
  %v0_10009e7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e7c = add i32 %v0_10009e7c, -1
  store i32 %v1_10009e7c, i32* %ctr.global-to-local, align 4
  %v2_10009e7c = icmp eq i32 %v1_10009e7c, 0
  br i1 %v2_10009e7c, label %dec_label_pc_10009e80, label %dec_label_pc_10009e6c.dec_label_pc_10009e6c_crit_edge

dec_label_pc_10009e80:                            ; preds = %dec_label_pc_10009e6c.dec_label_pc_10009e6c_crit_edge, %dec_label_pc_10009e6c.lr.ph
  %v0_10009e94.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10009e80 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10009e80, i32* @r29, align 4
  store i32 %v2_10009e80, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10009e94.pre, i32* %stack_var_-440, align 4
  %v0_10009e98 = call i32 @function_100094f8()
  store i32 %v0_10009e98, i32* %r3.global-to-local, align 4
  %v1_10009e9c = icmp slt i32 %v0_10009e98, 0
  br i1 %v1_10009e9c, label %dec_label_pc_10009ff8, label %dec_label_pc_10009ea4

dec_label_pc_10009ea4:                            ; preds = %dec_label_pc_10009e80
  %v2_10009ea4 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10009ea4, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268476088, i32* @lr, align 4
  %v3_10009eb4 = call i32 @function_10008980(i32 0, i32 %v2_10009e80, i32 %v2_10009ea4)
  store i32 %v3_10009eb4, i32* %r3.global-to-local, align 4
  %v3_10009eb8 = icmp eq i32 %v3_10009eb4, 0
  br i1 %v3_10009eb8, label %dec_label_pc_10009ec0, label %dec_label_pc_10009ff8

dec_label_pc_10009ec0:                            ; preds = %dec_label_pc_10009ea4
  store i32 %v2_10009ea4, i32* %r3.global-to-local, align 4
  %v2_10009ec8 = call i32 @function_100094d0(i32 %v2_10009ea4, i32 17)
  store i32 %v2_10009ec8, i32* %r3.global-to-local, align 4
  %v3_10009ecc = icmp eq i32 %v2_10009ec8, 0
  br i1 %v3_10009ecc, label %dec_label_pc_10009eec.lr.ph, label %dec_label_pc_10009fb8

dec_label_pc_10009eec.lr.ph:                      ; preds = %dec_label_pc_10009ec0
  store i32 %v2_10009e60, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10009e6c43, align 4
  %v0_10009ef033 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ef034 = add i32 %v0_10009ef033, -1
  store i32 %v1_10009ef034, i32* %r11.global-to-local, align 4
  %v1_10009ef435 = mul i32 %v1_10009ef034, 4
  %v1_10009ef836 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ef837 = add i32 %v1_10009ef836, %v1_10009ef435
  %v0_10009efc38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009efc39 = add i32 %v0_10009efc38, -1
  store i32 %v1_10009efc39, i32* %ctr.global-to-local, align 4
  %v2_10009efc40 = icmp eq i32 %v1_10009efc39, 0
  br i1 %v2_10009efc40, label %dec_label_pc_10009f00, label %dec_label_pc_10009eec.dec_label_pc_10009eec_crit_edge

dec_label_pc_10009eec.dec_label_pc_10009eec_crit_edge: ; preds = %dec_label_pc_10009eec.lr.ph, %dec_label_pc_10009eec.dec_label_pc_10009eec_crit_edge
  %v2_10009ef841 = phi i32 [ %v2_10009ef8, %dec_label_pc_10009eec.dec_label_pc_10009eec_crit_edge ], [ %v2_10009ef837, %dec_label_pc_10009eec.lr.ph ]
  %v0_10009eec.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009eec = add i32 %v2_10009ef841, 8
  %v3_10009eec = inttoptr i32 %v2_10009eec to i32*
  store i32 %v0_10009eec.pre, i32* %v3_10009eec, align 4
  %v0_10009ef0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ef0 = add i32 %v0_10009ef0, -1
  store i32 %v1_10009ef0, i32* %r11.global-to-local, align 4
  %v1_10009ef4 = mul i32 %v1_10009ef0, 4
  %v1_10009ef8 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ef8 = add i32 %v1_10009ef8, %v1_10009ef4
  %v0_10009efc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009efc = add i32 %v0_10009efc, -1
  store i32 %v1_10009efc, i32* %ctr.global-to-local, align 4
  %v2_10009efc = icmp eq i32 %v1_10009efc, 0
  br i1 %v2_10009efc, label %dec_label_pc_10009f00, label %dec_label_pc_10009eec.dec_label_pc_10009eec_crit_edge

dec_label_pc_10009f00:                            ; preds = %dec_label_pc_10009eec.dec_label_pc_10009eec_crit_edge, %dec_label_pc_10009eec.lr.ph
  store i32 %v2_10009e80, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_10009f08 = call i32 @function_100094f8()
  store i32 %v0_10009f08, i32* %r3.global-to-local, align 4
  %v1_10009f0c = icmp slt i32 %v0_10009f08, 0
  br i1 %v1_10009f0c, label %dec_label_pc_10009ff8, label %dec_label_pc_10009f14

dec_label_pc_10009f14:                            ; preds = %dec_label_pc_10009f00
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10009f1c = ptrtoint i32* %stack_var_-176 to i32
  store i32 268476196, i32* @lr, align 4
  %v4_10009f20 = call i32 @function_1000ac88(i32 17, i32* null, i32 %v2_10009f1c)
  store i32 %v4_10009f20, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10009f20, -1
  br i1 %tmp30, label %dec_label_pc_10009f54, label %dec_label_pc_10009f2c

dec_label_pc_10009f2c:                            ; preds = %dec_label_pc_10009f14
  %v0_10009f2c = call i32 @function_10008d44()
  store i32 %v0_10009f2c, i32* %r3.global-to-local, align 4
  %v1_10009f34 = inttoptr i32 %v0_10009f2c to i32*
  %v2_10009f34 = load i32, i32* %v1_10009f34, align 4
  store i32 %v2_10009f34, i32* @r28, align 4
  store i32 %v0_10009f2c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476232, i32* @lr, align 4
  %v3_10009f44 = call i32 @function_10008980(i32 2, i32 %v2_10009ea4, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10009f4c = load i32, i32* @r28, align 4
  %v1_10009f4c = load i32, i32* @r29, align 4
  %v2_10009f4c = inttoptr i32 %v1_10009f4c to i32*
  store i32 %v0_10009f4c, i32* %v2_10009f4c, align 4
  %v0_1000a00c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009ffc

dec_label_pc_10009f54:                            ; preds = %dec_label_pc_10009f14
  %v3_10009f54 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_10009ea4, i32* @r28, align 4
  %v3_10009f60 = icmp eq i32 %v3_10009f54, 1
  br i1 %v3_10009f60, label %dec_label_pc_10009f68, label %dec_label_pc_10009f9c

dec_label_pc_10009f68:                            ; preds = %dec_label_pc_10009f54
  store i32 %v2_10009e60, i32* %r3.global-to-local, align 4
  store i32 268476276, i32* @lr, align 4
  %v2_10009f70 = call i32 @function_1000a87c(i32 %v2_10009e60, i32 %v2_10009e60)
  store i32 %v2_10009f70, i32* %r3.global-to-local, align 4
  store i32 %v2_10009f70, i32* @r31, align 4
  %v0_10009f78 = call i32 @function_10008d44()
  store i32 %v0_10009f78, i32* %r3.global-to-local, align 4
  store i32 %v0_10009f78, i32* @r29, align 4
  %v1_10009f88 = inttoptr i32 %v0_10009f78 to i32*
  %v2_10009f88 = load i32, i32* %v1_10009f88, align 4
  store i32 %v2_10009f88, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476308, i32* @lr, align 4
  %v3_10009f90 = call i32 @function_10008980(i32 2, i32 %v2_10009ea4, i32 0)
  store i32 %v3_10009f90, i32* %r3.global-to-local, align 4
  %v0_10009f94 = load i32, i32* @r28, align 4
  %v1_10009f94 = load i32, i32* @r29, align 4
  %v2_10009f94 = inttoptr i32 %v1_10009f94 to i32*
  store i32 %v0_10009f94, i32* %v2_10009f94, align 4
  %v0_10009fc4.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009fc4

dec_label_pc_10009f9c:                            ; preds = %dec_label_pc_10009f54
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476332, i32* @lr, align 4
  %v3_10009fa8 = call i32 @function_10008980(i32 2, i32 %v2_10009ea4, i32 0)
  br label %dec_label_pc_10009fb8

dec_label_pc_10009fb8:                            ; preds = %dec_label_pc_10009ec0, %dec_label_pc_10009f9c
  store i32 %v2_10009e60, i32* %r3.global-to-local, align 4
  store i32 268476352, i32* @lr, align 4
  %v2_10009fbc = call i32 @function_1000a87c(i32 %v2_10009e60, i32 %v2_10009e60)
  store i32 %v2_10009fbc, i32* %r3.global-to-local, align 4
  store i32 %v2_10009fbc, i32* @r31, align 4
  br label %dec_label_pc_10009fc4

dec_label_pc_10009fc4:                            ; preds = %dec_label_pc_10009f68, %dec_label_pc_10009fb8
  %v0_10009fc4 = phi i32 [ %v0_10009fc4.pr, %dec_label_pc_10009f68 ], [ %v2_10009fbc, %dec_label_pc_10009fb8 ]
  %v3_10009fc4 = icmp eq i32 %v0_10009fc4, 0
  br i1 %v3_10009fc4, label %dec_label_pc_10009ff0, label %dec_label_pc_10009fcc

dec_label_pc_10009fcc:                            ; preds = %dec_label_pc_10009fc4
  %v3_10009fdc = load i32, i32* %stack_var_-440, align 4
  %v0_10009fe0 = call i32 @__asm_mfcr()
  store i32 %v0_10009fe0, i32* %r3.global-to-local, align 4
  %v1_10009fe4 = call i32 @__asm_rlwinm(i32 %v0_10009fe0, i32 30, i32 31, i32 31)
  %v2_10009fe8 = add i32 %v3_10009fdc, %v1_10009fe4
  store i32 %v2_10009fe8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009ffc

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fc4, %dec_label_pc_10009e3c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009ffc

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009ea4, %dec_label_pc_10009f00, %dec_label_pc_10009e80
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009ffc

dec_label_pc_10009ffc:                            ; preds = %dec_label_pc_10009ff0, %dec_label_pc_10009fcc, %dec_label_pc_10009f2c, %dec_label_pc_10009ff8
  %v0_1000a00c = phi i32 [ 0, %dec_label_pc_10009ff0 ], [ %v2_10009fe8, %dec_label_pc_10009fcc ], [ %v0_1000a00c.pre, %dec_label_pc_10009f2c ], [ -1, %dec_label_pc_10009ff8 ]
  ret i32 %v0_1000a00c

; uselistorder directives
  uselistorder i32 %v1_10009efc, { 1, 0 }
  uselistorder i32 %v2_10009ea4, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_10009e7c, { 1, 0 }
  uselistorder i32 %v2_10009e60, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 0, 7, 1, 8, 9, 10, 11, 3, 12, 14, 15, 13, 16, 17, 18, 19, 23, 22, 21, 24, 20, 2 }
  uselistorder i32* %r11.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000a87c, { 1, 0 }
  uselistorder i32 17, { 2, 33, 34, 3, 35, 4, 17, 18, 5, 6, 19, 20, 21, 7, 22, 8, 9, 10, 11, 23, 0, 24, 1, 25, 26, 12, 27, 13, 28, 29, 30, 31, 32, 14, 15, 16 }
  uselistorder label %dec_label_pc_10009ffc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009ff8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009fc4, { 1, 0 }
  uselistorder label %dec_label_pc_10009fb8, { 1, 0 }
  uselistorder label %dec_label_pc_10009eec.dec_label_pc_10009eec_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009e6c.dec_label_pc_10009e6c_crit_edge, { 1, 0 }
}

define i32 @function_1000a010(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a060:
  %v3_1000a064 = load i32, i32* @global_var_1001b790.308, align 4
  %v3_1000a068 = icmp eq i32 %v3_1000a064, 0
  br i1 %v3_1000a068, label %dec_label_pc_1000a078, label %dec_label_pc_1000a070

dec_label_pc_1000a070:                            ; preds = %dec_label_pc_1000a060
  %v2_1000a074 = load i32, i32* @r4, align 4
  %v3_1000a074 = call i32 @unknown_0(i32 268566528, i32 %v2_1000a074)
  store i32 %v3_1000a074, i32* @r3, align 4
  br label %dec_label_pc_1000a078

dec_label_pc_1000a078:                            ; preds = %dec_label_pc_1000a060, %dec_label_pc_1000a070
  %v3_1000a07c = load i32, i32* @global_var_1001b794.309, align 4
  %v3_1000a080 = icmp eq i32 %v3_1000a07c, 0
  br i1 %v3_1000a080, label %dec_label_pc_1000a078.dec_label_pc_1000a090_crit_edge, label %dec_label_pc_1000a088

dec_label_pc_1000a078.dec_label_pc_1000a090_crit_edge: ; preds = %dec_label_pc_1000a078
  %v0_1000a0a0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a090

dec_label_pc_1000a088:                            ; preds = %dec_label_pc_1000a078
  %v2_1000a08c = load i32, i32* @r4, align 4
  %v3_1000a08c = call i32 @unknown_0(i32 268566528, i32 %v2_1000a08c)
  br label %dec_label_pc_1000a090

dec_label_pc_1000a090:                            ; preds = %dec_label_pc_1000a078.dec_label_pc_1000a090_crit_edge, %dec_label_pc_1000a088
  %v0_1000a0a0 = phi i32 [ %v0_1000a0a0.pre, %dec_label_pc_1000a078.dec_label_pc_1000a090_crit_edge ], [ %v3_1000a08c, %dec_label_pc_1000a088 ]
  ret i32 %v0_1000a0a0

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a090, { 1, 0 }
  uselistorder label %dec_label_pc_1000a078, { 1, 0 }
}

define i32 @function_1000a0a4() local_unnamed_addr {
dec_label_pc_1000a0a4:
  ret i32 0
}

define i32 @function_1000a0ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a0ac:
  %v0_1000a0ac = load i32, i32* @r3, align 4
  ret i32 %v0_1000a0ac
}

define i32 @function_1000a0b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a0b0:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268476628, i32* @lr, align 4
  %v1_1000a0d0 = call i32 @function_10008540(i32 1)
  %v3_1000a0d4 = icmp eq i32 %v1_1000a0d0, -1
  br i1 %v3_1000a0d4, label %dec_label_pc_1000a0dc, label %dec_label_pc_1000a0fc

dec_label_pc_1000a0dc:                            ; preds = %dec_label_pc_1000a0b0
  %v0_1000a0e0 = load i32, i32* @r30, align 4
  store i32 268476656, i32* @lr, align 4
  %v3_1000a0ec = call i32 @function_10008790(i32 ptrtoint ([10 x i8]* @global_var_1000b2b0.310 to i32), i32 %v0_1000a0e0)
  %v1_1000a0f0 = load i32, i32* @r31, align 4
  %v4_1000a0f0 = icmp eq i32 %v3_1000a0ec, %v1_1000a0f0
  br i1 %v4_1000a0f0, label %dec_label_pc_1000a0fc, label %dec_label_pc_1000a0f8

dec_label_pc_1000a0f8:                            ; preds = %dec_label_pc_1000a0dc
  %v1_1000a0f8 = call i32 @function_1000ad4c(i32 %v3_1000a0ec)
  br label %dec_label_pc_1000a0fc

dec_label_pc_1000a0fc:                            ; preds = %dec_label_pc_1000a0b0, %dec_label_pc_1000a0dc, %dec_label_pc_1000a0f8
  %v0_1000a10c = phi i32 [ %v1_1000a0d0, %dec_label_pc_1000a0b0 ], [ %v3_1000a0ec, %dec_label_pc_1000a0dc ], [ %v1_1000a0f8, %dec_label_pc_1000a0f8 ]
  ret i32 %v0_1000a10c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008790, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_10008540, { 0, 5, 11, 10, 13, 12, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000a0fc, { 2, 1, 0 }
}

define i32 @function_1000a110(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a110:
  %v3_1000a130 = load i32, i32* @global_var_1001b798.311, align 4
  %v3_1000a134 = icmp eq i32 %v3_1000a130, 0
  br i1 %v3_1000a134, label %dec_label_pc_1000a158, label %dec_label_pc_1000a17c

dec_label_pc_1000a158:                            ; preds = %dec_label_pc_1000a110
  store i32 1, i32* @global_var_1001b798.311, align 4
  store i32 4096, i32* @global_var_1001b78c.293, align 4
  br label %dec_label_pc_1000a17c

dec_label_pc_1000a17c:                            ; preds = %dec_label_pc_1000a158, %dec_label_pc_1000a110
  %v0_1000a18c = load i32, i32* @r3, align 4
  ret i32 %v0_1000a18c
}

define i32 @function_1000a190(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a190:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000a1a8 = mul i32 %arg2, 4
  %v2_1000a1ac = add i32 %tmp, %v1_1000a1a8
  %v0_1000a1b0 = load i32, i32* @r9, align 4
  store i32 %v0_1000a1b0, i32* @global_var_1001b784.313, align 4
  %v1_1000a1b4 = add i32 %v2_1000a1ac, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a1b4, i32* @global_var_1001b788.314, align 4
  store i32 %arg6, i32* @global_var_1001b794.309, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000a1d4 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000a1dc = icmp eq i32 %v1_1000a1b4, %v2_1000a1d4
  br i1 %v4_1000a1dc, label %dec_label_pc_1000a1e4, label %dec_label_pc_1000a1e8

dec_label_pc_1000a1e4:                            ; preds = %dec_label_pc_1000a190
  store i32 %v2_1000a1ac, i32* @global_var_1001b788.314, align 4
  br label %dec_label_pc_1000a1e8

dec_label_pc_1000a1e8:                            ; preds = %dec_label_pc_1000a190, %dec_label_pc_1000a1e4
  %v2_1000a1e8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268476920, i32* @lr, align 4
  %v3_1000a1f4 = call i32 @function_10008e2c(i32 %v2_1000a1e8, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001b788.314, align 4
  br label %dec_label_pc_1000a204

dec_label_pc_1000a204:                            ; preds = %dec_label_pc_1000a204, %dec_label_pc_1000a1e8
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000a1e8 ], [ %v1_1000a208, %dec_label_pc_1000a204 ]
  %v1_1000a204 = inttoptr i32 %storemerge to i32*
  %v2_1000a204 = load i32, i32* %v1_1000a204, align 4
  %v1_1000a208 = add i32 %storemerge, 4
  %v3_1000a20c = icmp eq i32 %v2_1000a204, 0
  br i1 %v3_1000a20c, label %dec_label_pc_1000a214, label %dec_label_pc_1000a204

dec_label_pc_1000a214:                            ; preds = %dec_label_pc_1000a204
  store i32 %v1_1000a208, i32* %r29.global-to-local, align 4
  %v1_1000a24012 = inttoptr i32 %v1_1000a208 to i32*
  %v2_1000a24013 = load i32, i32* %v1_1000a24012, align 4
  %v3_1000a24416 = icmp eq i32 %v2_1000a24013, 0
  br i1 %v3_1000a24416, label %dec_label_pc_1000a24c, label %dec_label_pc_1000a21c

dec_label_pc_1000a21c:                            ; preds = %dec_label_pc_1000a214, %dec_label_pc_1000a23c
  %v0_1000a230 = phi i32 [ %v1_1000a23c, %dec_label_pc_1000a23c ], [ %v1_1000a208, %dec_label_pc_1000a214 ]
  %v0_1000a224 = phi i32 [ %v2_1000a240, %dec_label_pc_1000a23c ], [ %v2_1000a24013, %dec_label_pc_1000a214 ]
  %v2_1000a21c = icmp ugt i32 %v0_1000a224, 14
  br i1 %v2_1000a21c, label %dec_label_pc_1000a23c, label %dec_label_pc_1000a224

dec_label_pc_1000a224:                            ; preds = %dec_label_pc_1000a21c
  %v1_1000a224 = mul i32 %v0_1000a224, 8
  %v2_1000a22c = add i32 %v1_1000a224, %v2_1000a1e8
  store i32 %v2_1000a22c, i32* @r3, align 4
  store i32 %v0_1000a230, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268476988, i32* @lr, align 4
  %v0_1000a238 = call i32 @function_1000aaf8()
  %v0_1000a23c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a23c

dec_label_pc_1000a23c:                            ; preds = %dec_label_pc_1000a21c, %dec_label_pc_1000a224
  %v0_1000a23c = phi i32 [ %v0_1000a230, %dec_label_pc_1000a21c ], [ %v0_1000a23c.pre, %dec_label_pc_1000a224 ]
  %v1_1000a23c = add i32 %v0_1000a23c, 8
  store i32 %v1_1000a23c, i32* %r29.global-to-local, align 4
  %v1_1000a240 = inttoptr i32 %v1_1000a23c to i32*
  %v2_1000a240 = load i32, i32* %v1_1000a240, align 4
  %v3_1000a244 = icmp eq i32 %v2_1000a240, 0
  br i1 %v3_1000a244, label %dec_label_pc_1000a24c, label %dec_label_pc_1000a21c

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a23c, %dec_label_pc_1000a214
  %v1_1000a250 = call i32 @function_1000ae9c(i32 %v2_1000a1e8)
  store i32 %v1_1000a250, i32* @r3, align 4
  store i32 268477016, i32* @lr, align 4
  %v1_1000a254 = call i32 @function_1000a110(i32 %v1_1000a250)
  %v3_1000a25c = icmp eq i32 %tmp27, 0
  br i1 %v3_1000a25c, label %dec_label_pc_1000a264, label %dec_label_pc_1000a268

dec_label_pc_1000a264:                            ; preds = %dec_label_pc_1000a24c
  br label %dec_label_pc_1000a268

dec_label_pc_1000a268:                            ; preds = %dec_label_pc_1000a24c, %dec_label_pc_1000a264
  %v0_1000a270 = phi i32 [ %tmp27, %dec_label_pc_1000a24c ], [ 4096, %dec_label_pc_1000a264 ]
  store i32 %v0_1000a270, i32* @global_var_1001b78c.293, align 4
  %v3_1000a274 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000a274, label %dec_label_pc_1000a27c, label %dec_label_pc_1000a2b0

dec_label_pc_1000a27c:                            ; preds = %dec_label_pc_1000a268
  store i32 268477056, i32* @lr, align 4
  %v1_1000a27c = call i32 @function_1000a7b4(i32 268566528)
  store i32 %v1_1000a27c, i32* %r29.global-to-local, align 4
  store i32 268477064, i32* @lr, align 4
  %v0_1000a284 = call i32 @function_1000a724()
  %v4_1000a288 = icmp eq i32 %v1_1000a27c, %v0_1000a284
  br i1 %v4_1000a288, label %dec_label_pc_1000a290, label %dec_label_pc_1000a2cc

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a27c
  store i32 268477076, i32* @lr, align 4
  %v1_1000a290 = call i32 @function_1000a76c(i32 %v0_1000a284)
  store i32 %v1_1000a290, i32* %r29.global-to-local, align 4
  store i32 268477084, i32* @lr, align 4
  %v0_1000a298 = call i32 @function_1000a6dc()
  %v4_1000a29c = icmp eq i32 %v1_1000a290, %v0_1000a298
  br i1 %v4_1000a29c, label %dec_label_pc_1000a2a4.thread, label %dec_label_pc_1000a2cc

dec_label_pc_1000a2a4.thread:                     ; preds = %dec_label_pc_1000a290
  br label %dec_label_pc_1000a2fc

dec_label_pc_1000a2b0:                            ; preds = %dec_label_pc_1000a268
  %v4_1000a2b4 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000a2b4, label %dec_label_pc_1000a2bc, label %dec_label_pc_1000a2cc

dec_label_pc_1000a2bc:                            ; preds = %dec_label_pc_1000a2b0
  br label %dec_label_pc_1000a2cc

dec_label_pc_1000a2cc:                            ; preds = %dec_label_pc_1000a2bc, %dec_label_pc_1000a2b0, %dec_label_pc_1000a290, %dec_label_pc_1000a27c
  store i32 268477148, i32* @lr, align 4
  %v2_1000a2d8 = call i32 @function_1000a0b0(i32 0, i32 32768)
  store i32 268477164, i32* @lr, align 4
  %v2_1000a2e8 = call i32 @function_1000a0b0(i32 1, i32 32770)
  store i32 268477180, i32* @lr, align 4
  %v2_1000a2f8 = call i32 @function_1000a0b0(i32 2, i32 32770)
  br label %dec_label_pc_1000a2fc

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2a4.thread, %dec_label_pc_1000a2cc
  %v0_1000a308 = load i32, i32* @r30, align 4
  %v1_1000a308 = inttoptr i32 %v0_1000a308 to i32*
  %v2_1000a308 = load i32, i32* %v1_1000a308, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a308, i32* inttoptr (i32 268547892 to i32*), align 4
  %v0_1000a328 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000a328, i32* @global_var_1001b790.308, align 4
  br i1 false, label %dec_label_pc_1000a330, label %dec_label_pc_1000a3a8

dec_label_pc_1000a330:                            ; preds = %dec_label_pc_1000a2fc, %dec_label_pc_1000a330
  br i1 undef, label %dec_label_pc_1000a330, label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a330, %dec_label_pc_1000a2fc
  %v0_1000a354 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a354)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000a3b8 = call i32 @function_10008d44()
  %v2_1000a3c0 = inttoptr i32 %v0_1000a3b8 to i32*
  store i32 0, i32* %v2_1000a3c0, align 4
  %v0_1000a3ec = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a3ec)
  %v0_1000a3f8 = call i32 @function_10009db8()
  ret i32 %v0_1000a3f8

; uselistorder directives
  uselistorder i32 %v2_1000a240, { 1, 0 }
  uselistorder i32 %v1_1000a23c, { 2, 1, 0 }
  uselistorder i32 %v1_1000a208, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000a1e8, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_10009db8, { 0, 3, 2, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000a0b0, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 40, 0, 5, 6, 21, 7, 8, 22, 23, 9, 10, 24, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 1, 27, 28, 29, 2, 30, 31, 32, 33, 34, 3, 35, 36, 37, 38, 39, 4 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000a330, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a268, { 1, 0 }
  uselistorder label %dec_label_pc_1000a23c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a21c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1e8, { 1, 0 }
}

define i32 @function_1000a3fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a3fc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a414 = call i32 @__asm_mfcr()
  %v1_1000a418 = and i32 %v0_1000a414, 268435456
  %v3_1000a418 = icmp eq i32 %v1_1000a418, 0
  store i32 %v0_1000a414, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a418, label %dec_label_pc_1000a430, label %dec_label_pc_1000a424

dec_label_pc_1000a424:                            ; preds = %dec_label_pc_1000a3fc
  %v0_1000a424 = call i32 @function_10008d44()
  %v0_1000a428 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a428 = inttoptr i32 %v0_1000a424 to i32*
  store i32 %v0_1000a428, i32* %v2_1000a428, align 4
  br label %dec_label_pc_1000a430

dec_label_pc_1000a430:                            ; preds = %dec_label_pc_1000a3fc, %dec_label_pc_1000a424
  %v0_1000a440 = phi i32 [ %v0_1000a414, %dec_label_pc_1000a3fc ], [ -1, %dec_label_pc_1000a424 ]
  ret i32 %v0_1000a440

; uselistorder directives
  uselistorder label %dec_label_pc_1000a430, { 1, 0 }
}

define i32 @function_1000a444(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a444:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000a458

dec_label_pc_1000a458:                            ; preds = %dec_label_pc_1000a458.backedge, %dec_label_pc_1000a444
  %v0_1000a464 = call i32 @__asm_mfcr()
  %v1_1000a468 = and i32 %v0_1000a464, 268435456
  %v3_1000a468 = icmp eq i32 %v1_1000a468, 0
  store i32 %v0_1000a464, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a468, label %dec_label_pc_1000a458.backedge, label %dec_label_pc_1000a474

dec_label_pc_1000a474:                            ; preds = %dec_label_pc_1000a458
  %v0_1000a474 = call i32 @function_10008d44()
  %v0_1000a478 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a478 = inttoptr i32 %v0_1000a474 to i32*
  store i32 %v0_1000a478, i32* %v2_1000a478, align 4
  br label %dec_label_pc_1000a458.backedge

dec_label_pc_1000a458.backedge:                   ; preds = %dec_label_pc_1000a474, %dec_label_pc_1000a458
  br label %dec_label_pc_1000a458
}

define i32 @function_1000a480(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a480:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000a48c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000a48c, i32* @r29, align 4
  %v0_1000a494 = load i32, i32* @r4, align 4
  store i32 %v0_1000a494, i32* @r30, align 4
  %v0_1000a4a4 = call i32 @__asm_mfcr()
  %v1_1000a4a8 = and i32 %v0_1000a4a4, 268435456
  %v3_1000a4a8 = icmp eq i32 %v1_1000a4a8, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000a4a4, i32* @r31, align 4
  br i1 %v3_1000a4a8, label %dec_label_pc_1000a4c4, label %dec_label_pc_1000a4b8

dec_label_pc_1000a4b8:                            ; preds = %dec_label_pc_1000a480
  %v0_1000a4b8 = call i32 @function_10008d44()
  %v0_1000a4bc = load i32, i32* @r31, align 4
  %v2_1000a4bc = inttoptr i32 %v0_1000a4b8 to i32*
  store i32 %v0_1000a4bc, i32* %v2_1000a4bc, align 4
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a480
  %v3_1000a4c4 = icmp eq i32 %v0_1000a4a4, 0
  store i32 %v0_1000a4a4, i32* @r28, align 4
  br i1 %v3_1000a4c4, label %dec_label_pc_1000a4d8, label %dec_label_pc_1000a4dc

dec_label_pc_1000a4d8:                            ; preds = %dec_label_pc_1000a4c4
  %v0_1000a4cc = load i32, i32* @r30, align 4
  store i32 268477660, i32* @lr, align 4
  %v4_1000a4d8 = call i32 @function_1000aa48(i32* nonnull %stack_var_-104, i32 %v0_1000a4cc, i32 0)
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a4dc:                            ; preds = %dec_label_pc_1000a4c4, %dec_label_pc_1000a4b8, %dec_label_pc_1000a4d8
  %v0_1000a4e0 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a4e0

; uselistorder directives
  uselistorder i32 %v0_1000a4a4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a4dc, { 2, 0, 1 }
}

define i32 @function_1000a4f4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a4f4:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000a508 = call i32 @function_1000a584()
  store i32 %v0_1000a508, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000a508, 1
  br i1 %tmp18, label %dec_label_pc_1000a56c, label %dec_label_pc_1000a514

dec_label_pc_1000a514:                            ; preds = %dec_label_pc_1000a4f4
  %v0_1000a514 = load i32, i32* @r31, align 4
  %v2_1000a514 = add i32 %v0_1000a514, %v0_1000a508
  store i32 %v2_1000a514, i32* %r29.global-to-local, align 4
  %v2_1000a55c3 = icmp ult i32 %v0_1000a514, %v2_1000a514
  br i1 %v2_1000a55c3, label %dec_label_pc_1000a51c, label %dec_label_pc_1000a56c

dec_label_pc_1000a51c:                            ; preds = %dec_label_pc_1000a514, %dec_label_pc_1000a51c
  %v1_1000a52c = phi i32 [ %v2_1000a558, %dec_label_pc_1000a51c ], [ %v0_1000a514, %dec_label_pc_1000a514 ]
  %v1_1000a56010.in = phi i32 [ %v2_1000a558, %dec_label_pc_1000a51c ], [ %v0_1000a514, %dec_label_pc_1000a514 ]
  %v1_1000a56411.in = phi i32 [ %v2_1000a558, %dec_label_pc_1000a51c ], [ %v0_1000a514, %dec_label_pc_1000a514 ]
  %v1_1000a56010 = add i32 %v1_1000a56010.in, 11
  %v1_1000a56411 = add i32 %v1_1000a56411.in, 19
  %v1_1000a51c = add i32 %v1_1000a52c, 4
  %v2_1000a51c = inttoptr i32 %v1_1000a51c to i32*
  %v3_1000a51c = load i32, i32* %v2_1000a51c, align 4
  store i32 %v3_1000a51c, i32* %r11.global-to-local, align 4
  %v1_1000a520 = add i32 %v1_1000a52c, 12
  %v2_1000a520 = inttoptr i32 %v1_1000a520 to i32*
  %v3_1000a520 = load i32, i32* %v2_1000a520, align 4
  %v1_1000a524 = add i32 %v1_1000a52c, 16
  %v2_1000a524 = inttoptr i32 %v1_1000a524 to i16*
  %v3_1000a524 = load i16, i16* %v2_1000a524, align 2
  %v4_1000a524 = zext i16 %v3_1000a524 to i32
  store i32 %v4_1000a524, i32* %r5.global-to-local, align 4
  %v1_1000a528 = add i32 %v1_1000a52c, 18
  %v2_1000a528 = inttoptr i32 %v1_1000a528 to i8*
  %v3_1000a528 = load i8, i8* %v2_1000a528, align 1
  %v4_1000a528 = zext i8 %v3_1000a528 to i32
  store i32 %v4_1000a528, i32* %r9.global-to-local, align 4
  store i32 %v3_1000a520, i32* %v2_1000a51c, align 4
  %v0_1000a530 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a530 = load i32, i32* @r31, align 4
  %v2_1000a530 = inttoptr i32 %v1_1000a530 to i32*
  store i32 %v0_1000a530, i32* %v2_1000a530, align 4
  %v0_1000a534 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a534 = trunc i32 %v0_1000a534 to i8
  %v2_1000a534 = load i32, i32* @r31, align 4
  %v3_1000a534 = add i32 %v2_1000a534, 10
  %v4_1000a534 = inttoptr i32 %v3_1000a534 to i8*
  store i8 %v1_1000a534, i8* %v4_1000a534, align 1
  %v0_1000a538 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a538 = trunc i32 %v0_1000a538 to i16
  %v2_1000a538 = load i32, i32* @r31, align 4
  %v3_1000a538 = add i32 %v2_1000a538, 8
  %v4_1000a538 = inttoptr i32 %v3_1000a538 to i16*
  store i16 %v1_1000a538, i16* %v4_1000a538, align 2
  %v0_1000a53c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a53c = add i32 %v0_1000a53c, -19
  store i32 %v1_1000a53c, i32* %r5.global-to-local, align 4
  store i32 268477764, i32* @lr, align 4
  %v3_1000a540 = call i32 @function_10008d88(i32 %v1_1000a56010, i32 %v1_1000a56411, i32 %v1_1000a53c)
  %v0_1000a544 = load i32, i32* @r31, align 4
  %v1_1000a544 = add i32 %v0_1000a544, 8
  %v2_1000a544 = inttoptr i32 %v1_1000a544 to i16*
  %v3_1000a544 = load i16, i16* %v2_1000a544, align 2
  %v4_1000a544 = zext i16 %v3_1000a544 to i32
  store i32 %v4_1000a544, i32* %r5.global-to-local, align 4
  store i32 268477780, i32* @lr, align 4
  %v3_1000a550 = call i32 @function_10008d88(i32 %v0_1000a544, i32 %v0_1000a544, i32 %v4_1000a544)
  %v0_1000a554 = load i32, i32* @r31, align 4
  %v1_1000a554 = add i32 %v0_1000a554, 8
  %v2_1000a554 = inttoptr i32 %v1_1000a554 to i16*
  %v3_1000a554 = load i16, i16* %v2_1000a554, align 2
  %v4_1000a554 = zext i16 %v3_1000a554 to i32
  %v2_1000a558 = add i32 %v4_1000a554, %v0_1000a554
  store i32 %v2_1000a558, i32* @r31, align 4
  %v1_1000a55c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a55c = icmp ult i32 %v2_1000a558, %v1_1000a55c
  br i1 %v2_1000a55c, label %dec_label_pc_1000a51c, label %dec_label_pc_1000a55c.dec_label_pc_1000a56c.loopexit_crit_edge

dec_label_pc_1000a55c.dec_label_pc_1000a56c.loopexit_crit_edge: ; preds = %dec_label_pc_1000a51c
  %v0_1000a570.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a56c

dec_label_pc_1000a56c:                            ; preds = %dec_label_pc_1000a514, %dec_label_pc_1000a55c.dec_label_pc_1000a56c.loopexit_crit_edge, %dec_label_pc_1000a4f4
  %v0_1000a570 = phi i32 [ %v0_1000a508, %dec_label_pc_1000a4f4 ], [ %v0_1000a570.pre.pre, %dec_label_pc_1000a55c.dec_label_pc_1000a56c.loopexit_crit_edge ], [ %v0_1000a508, %dec_label_pc_1000a514 ]
  ret i32 %v0_1000a570

; uselistorder directives
  uselistorder i32 %v2_1000a558, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000a544, { 1, 0, 2 }
  uselistorder i32 %v1_1000a52c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000a514, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000a508, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10008d88, { 1, 0, 2 }
  uselistorder i32 11, { 0, 29, 28, 1, 9, 10, 11, 12, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 4, 24, 25, 7, 5, 26, 27, 8, 6 }
  uselistorder label %dec_label_pc_1000a56c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a51c, { 1, 0 }
}

define i32 @function_1000a584() local_unnamed_addr {
dec_label_pc_1000a584:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a588 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a588, i32* %stack_var_-48, align 4
  %v5_1000a588 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000a588, i32* %r9.global-to-local, align 4
  %v0_1000a594 = load i32, i32* @r5, align 4
  %v1_1000a594 = add i32 %v0_1000a594, 30
  %v1_1000a598 = call i32 @__asm_rlwinm(i32 %v1_1000a594, i32 0, i32 0, i32 27)
  store i32 %v5_1000a588, i32* @r31, align 4
  %v1_1000a5a8 = load i32, i32* @r1, align 4
  %v3_1000a5a8 = sub i32 %v1_1000a5a8, %v1_1000a598
  %v4_1000a5a8 = inttoptr i32 %v3_1000a5a8 to i32*
  store i32 %v4_1000a588, i32* %v4_1000a5a8, align 4
  %v0_1000a5ac = load i32, i32* @r4, align 4
  store i32 %v0_1000a5ac, i32* @r28, align 4
  %v0_1000a5b0 = load i32, i32* @r5, align 4
  store i32 %v0_1000a5b0, i32* @r23, align 4
  %v0_1000a5b4 = load i32, i32* @r3, align 4
  store i32 %v0_1000a5b4, i32* @r22, align 4
  %v1_1000a5b8 = add i32 %v3_1000a5a8, 23
  %v1_1000a5bc = call i32 @__asm_rlwinm(i32 %v1_1000a5b8, i32 0, i32 0, i32 27)
  store i32 %v1_1000a5bc, i32* @r27, align 4
  store i32 %v1_1000a5bc, i32* %r4.global-to-local, align 4
  %v0_1000a5cc = call i32 @__asm_mfcr()
  %v1_1000a5d0 = and i32 %v0_1000a5cc, 268435456
  store i32 %v1_1000a5d0, i32* %r9.global-to-local, align 4
  %v3_1000a5d0 = icmp eq i32 %v1_1000a5d0, 0
  store i32 %v0_1000a5cc, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a5d0, label %dec_label_pc_1000a5e8, label %dec_label_pc_1000a5dc

dec_label_pc_1000a5dc:                            ; preds = %dec_label_pc_1000a584
  %v0_1000a5dc = call i32 @function_10008d44()
  %v0_1000a5e0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a5e0 = inttoptr i32 %v0_1000a5dc to i32*
  store i32 %v0_1000a5e0, i32* %v2_1000a5e0, align 4
  br label %dec_label_pc_1000a5f4

dec_label_pc_1000a5e8:                            ; preds = %dec_label_pc_1000a584
  %v3_1000a5e8 = icmp eq i32 %v0_1000a5cc, -1
  store i32 %v0_1000a5cc, i32* @r24, align 4
  br i1 %v3_1000a5e8, label %dec_label_pc_1000a5f4, label %dec_label_pc_1000a5fc

dec_label_pc_1000a5f4:                            ; preds = %dec_label_pc_1000a5e8, %dec_label_pc_1000a5dc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a6c0

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5e8
  %v0_1000a5fc = load i32, i32* @r28, align 4
  store i32 %v0_1000a5fc, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a5bc, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000a6a412 = add i32 %v0_1000a5cc, %v1_1000a5bc
  %v1_1000a6a813 = load i32, i32* @r23, align 4
  %v2_1000a6a814 = add i32 %v1_1000a6a813, %v0_1000a5fc
  store i32 %v2_1000a6a814, i32* %r10.global-to-local, align 4
  %v2_1000a6ac15 = icmp ult i32 %v1_1000a5bc, %v2_1000a6a412
  %v1_1000a6b017 = add i32 %v0_1000a5fc, 19
  store i32 %v1_1000a6b017, i32* @r3, align 4
  %v1_1000a6b418 = add i32 %v1_1000a5bc, 19
  store i32 %v1_1000a6b418, i32* @r4, align 4
  br i1 %v2_1000a6ac15, label %dec_label_pc_1000a610, label %dec_label_pc_1000a6bc

dec_label_pc_1000a610:                            ; preds = %dec_label_pc_1000a5fc, %dec_label_pc_1000a658
  %v0_1000a61019 = phi i32 [ %v2_1000a6a0, %dec_label_pc_1000a658 ], [ %v1_1000a5bc, %dec_label_pc_1000a5fc ]
  %v1_1000a610 = add i32 %v0_1000a61019, 16
  %v2_1000a610 = inttoptr i32 %v1_1000a610 to i16*
  %v3_1000a610 = load i16, i16* %v2_1000a610, align 2
  %v4_1000a610 = zext i16 %v3_1000a610 to i32
  %v1_1000a614 = add nuw nsw i32 %v4_1000a610, 7
  store i32 %v1_1000a614, i32* %r9.global-to-local, align 4
  %v1_1000a618 = call i32 @__asm_rlwinm(i32 %v1_1000a614, i32 0, i32 0, i32 28)
  %v0_1000a61c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a61c = add i32 %v1_1000a618, %v0_1000a61c
  store i32 %v3_1000a61c, i32* %r11.global-to-local, align 4
  %v1_1000a620 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000a620 = icmp ugt i32 %v3_1000a61c, %v1_1000a620
  br i1 %v3_1000a620, label %dec_label_pc_1000a628, label %dec_label_pc_1000a658

dec_label_pc_1000a628:                            ; preds = %dec_label_pc_1000a610
  %v0_1000a628 = load i32, i32* @r22, align 4
  %v0_1000a62c = load i32, i32* @r25, align 4
  %v0_1000a630 = load i32, i32* @r26, align 4
  store i32 268478012, i32* @lr, align 4
  %v4_1000a638 = call i32 @function_1000a7fc(i32 %v0_1000a628, i32 %v0_1000a62c, i32 %v0_1000a630, i32 0)
  %v0_1000a63c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a63c = load i32, i32* @r28, align 4
  %v4_1000a63c = icmp eq i32 %v0_1000a63c, %v1_1000a63c
  br i1 %v4_1000a63c, label %dec_label_pc_1000a644, label %dec_label_pc_1000a6bc

dec_label_pc_1000a644:                            ; preds = %dec_label_pc_1000a628
  %v0_1000a644 = call i32 @function_10008d44()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000a650 = inttoptr i32 %v0_1000a644 to i32*
  store i32 22, i32* %v2_1000a650, align 4
  %v0_1000a6c4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a6c0

dec_label_pc_1000a658:                            ; preds = %dec_label_pc_1000a610
  %v2_1000a618 = trunc i32 %v1_1000a618 to i16
  %v0_1000a658 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a658 = inttoptr i32 %v0_1000a658 to i32*
  %v2_1000a658 = load i32, i32* %v1_1000a658, align 4
  store i32 %v2_1000a658, i32* %r9.global-to-local, align 4
  %v1_1000a65c = add i32 %v0_1000a658, 4
  %v2_1000a65c = inttoptr i32 %v1_1000a65c to i32*
  %v3_1000a65c = load i32, i32* %v2_1000a65c, align 4
  store i32 %v3_1000a65c, i32* %r10.global-to-local, align 4
  %v1_1000a660 = add i32 %v0_1000a658, 8
  %v2_1000a660 = inttoptr i32 %v1_1000a660 to i32*
  %v3_1000a660 = load i32, i32* %v2_1000a660, align 4
  store i32 %v3_1000a660, i32* @r25, align 4
  %v1_1000a664 = add i32 %v0_1000a658, 12
  %v2_1000a664 = inttoptr i32 %v1_1000a664 to i32*
  %v3_1000a664 = load i32, i32* %v2_1000a664, align 4
  store i32 %v3_1000a664, i32* @r26, align 4
  %v2_1000a668 = inttoptr i32 %v0_1000a61c to i32*
  store i32 %v2_1000a658, i32* %v2_1000a668, align 4
  %v0_1000a66c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a66c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a66c = add i32 %v1_1000a66c, 4
  %v3_1000a66c = inttoptr i32 %v2_1000a66c to i32*
  store i32 %v0_1000a66c, i32* %v3_1000a66c, align 4
  %v0_1000a670 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a670 = add i32 %v0_1000a670, 8
  %v2_1000a670 = inttoptr i32 %v1_1000a670 to i32*
  %v3_1000a670 = load i32, i32* %v2_1000a670, align 4
  store i32 %v3_1000a670, i32* %r9.global-to-local, align 4
  %v1_1000a674 = add i32 %v0_1000a670, 12
  %v2_1000a674 = inttoptr i32 %v1_1000a674 to i32*
  %v3_1000a674 = load i32, i32* %v2_1000a674, align 4
  store i32 %v3_1000a674, i32* %r10.global-to-local, align 4
  %v3_1000a678 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000a678 = add i32 %v3_1000a678, 16
  %v5_1000a678 = inttoptr i32 %v4_1000a678 to i16*
  store i16 %v2_1000a618, i16* %v5_1000a678, align 2
  %v0_1000a67c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a67c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a67c = add i32 %v1_1000a67c, 8
  %v3_1000a67c = inttoptr i32 %v2_1000a67c to i32*
  store i32 %v0_1000a67c, i32* %v3_1000a67c, align 4
  %v0_1000a680 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a680 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a680 = add i32 %v1_1000a680, 12
  %v3_1000a680 = inttoptr i32 %v2_1000a680 to i32*
  store i32 %v0_1000a680, i32* %v3_1000a680, align 4
  %v0_1000a684 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a684 = add i32 %v0_1000a684, 18
  %v2_1000a684 = inttoptr i32 %v1_1000a684 to i8*
  %v3_1000a684 = load i8, i8* %v2_1000a684, align 1
  %v2_1000a688 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a688 = add i32 %v2_1000a688, 18
  %v4_1000a688 = inttoptr i32 %v3_1000a688 to i8*
  store i8 %v3_1000a684, i8* %v4_1000a688, align 1
  %v0_1000a68c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a68c, i32* %r29.global-to-local, align 4
  %v0_1000a690 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a690 = add i32 %v0_1000a690, 16
  %v2_1000a690 = inttoptr i32 %v1_1000a690 to i16*
  %v3_1000a690 = load i16, i16* %v2_1000a690, align 2
  %v4_1000a690 = zext i16 %v3_1000a690 to i32
  %v1_1000a694 = add nsw i32 %v4_1000a690, -19
  store i32 %v1_1000a694, i32* @r5, align 4
  store i32 268478108, i32* @lr, align 4
  %v0_1000a698 = call i32 @function_1000aaf8()
  %v0_1000a69c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a69c = add i32 %v0_1000a69c, 16
  %v2_1000a69c = inttoptr i32 %v1_1000a69c to i16*
  %v3_1000a69c = load i16, i16* %v2_1000a69c, align 2
  %v4_1000a69c = zext i16 %v3_1000a69c to i32
  %v2_1000a6a0 = add i32 %v4_1000a69c, %v0_1000a69c
  store i32 %v2_1000a6a0, i32* %r30.global-to-local, align 4
  %v1_1000a6a4.pre = load i32, i32* @r24, align 4
  %v0_1000a6a8.pre = load i32, i32* @r28, align 4
  %v0_1000a6b0.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a6a4 = add i32 %v1_1000a6a4.pre, %v1_1000a5bc
  %v1_1000a6a8 = load i32, i32* @r23, align 4
  %v2_1000a6a8 = add i32 %v1_1000a6a8, %v0_1000a6a8.pre
  store i32 %v2_1000a6a8, i32* %r10.global-to-local, align 4
  %v2_1000a6ac = icmp ult i32 %v2_1000a6a0, %v2_1000a6a4
  %v1_1000a6b0 = add i32 %v0_1000a6b0.pre, 19
  store i32 %v1_1000a6b0, i32* @r3, align 4
  %v1_1000a6b4 = add i32 %v2_1000a6a0, 19
  store i32 %v1_1000a6b4, i32* @r4, align 4
  br i1 %v2_1000a6ac, label %dec_label_pc_1000a610, label %dec_label_pc_1000a6bc

dec_label_pc_1000a6bc:                            ; preds = %dec_label_pc_1000a5fc, %dec_label_pc_1000a658, %dec_label_pc_1000a628
  %v1_1000a6bc = phi i32 [ %v0_1000a63c, %dec_label_pc_1000a628 ], [ %v0_1000a5fc, %dec_label_pc_1000a5fc ], [ %v0_1000a6b0.pre, %dec_label_pc_1000a658 ]
  %v0_1000a6bc = phi i32 [ %v1_1000a63c, %dec_label_pc_1000a628 ], [ %v0_1000a5fc, %dec_label_pc_1000a5fc ], [ %v0_1000a6a8.pre, %dec_label_pc_1000a658 ]
  %v2_1000a6bc = sub i32 %v1_1000a6bc, %v0_1000a6bc
  store i32 %v2_1000a6bc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a6c0

dec_label_pc_1000a6c0:                            ; preds = %dec_label_pc_1000a644, %dec_label_pc_1000a5f4, %dec_label_pc_1000a6bc
  %v0_1000a6c4 = phi i32 [ %v0_1000a6c4.pre, %dec_label_pc_1000a644 ], [ -1, %dec_label_pc_1000a5f4 ], [ %v2_1000a6bc, %dec_label_pc_1000a6bc ]
  %v0_1000a6c0 = load i32, i32* @r1, align 4
  %v1_1000a6c0 = inttoptr i32 %v0_1000a6c0 to i32*
  %v2_1000a6c0 = load i32, i32* %v1_1000a6c0, align 4
  store i32 %v2_1000a6c0, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000a6c4

; uselistorder directives
  uselistorder i32 %v2_1000a6a0, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000a658, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a618, { 1, 0 }
  uselistorder i32 %v0_1000a5cc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000a5bc, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 8, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 1, 13, 2, 14, 15 }
  uselistorder i32 22, { 0, 1, 2, 3, 11, 4, 5, 6, 7, 12, 13, 14, 8, 15, 9, 16, 10, 17 }
  uselistorder i32 7, { 28, 42, 10, 11, 21, 12, 13, 22, 14, 15, 23, 16, 17, 24, 25, 18, 26, 27, 0, 29, 1, 30, 2, 31, 19, 32, 20, 33, 3, 34, 4, 35, 36, 37, 5, 38, 39, 6, 40, 41, 7, 8, 9, 43 }
  uselistorder i32 19, { 21, 22, 1, 2, 0, 14, 15, 16, 3, 6, 7, 17, 8, 9, 18, 19, 20, 10, 11, 12, 13, 23, 24, 25, 26, 4, 5 }
  uselistorder i32* @r26, { 15, 16, 17, 8, 9, 10, 24, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32* @r25, { 21, 22, 23, 14, 15, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 24, 25, 26, 27, 0, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* @r24, { 0, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 16, 19, 1, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r27, { 27, 19, 20, 42, 43, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 23, 21, 22, 2, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 1, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32 23, { 8, 5, 9, 0, 1, 6, 7, 2, 3, 4 }
  uselistorder i32* @r22, { 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* @r23, { 13, 0, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r1, { 7, 8, 2, 3, 4, 1, 5, 0, 9, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 14, 15, 16, 25, 21, 23, 22, 24, 0, 27, 26, 1, 2, 3, 19, 20, 17, 18, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 28 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 9, 10, 6, 2, 1, 0, 7, 8, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000a6c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a6bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a610, { 1, 0 }
}

define i32 @function_1000a6dc() local_unnamed_addr {
dec_label_pc_1000a6dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a6f4 = call i32 @__asm_mfcr()
  %v1_1000a6f8 = and i32 %v0_1000a6f4, 268435456
  %v3_1000a6f8 = icmp eq i32 %v1_1000a6f8, 0
  store i32 %v0_1000a6f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a6f8, label %dec_label_pc_1000a710, label %dec_label_pc_1000a704

dec_label_pc_1000a704:                            ; preds = %dec_label_pc_1000a6dc
  %v0_1000a704 = call i32 @function_10008d44()
  %v0_1000a708 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a708 = inttoptr i32 %v0_1000a704 to i32*
  store i32 %v0_1000a708, i32* %v2_1000a708, align 4
  br label %dec_label_pc_1000a710

dec_label_pc_1000a710:                            ; preds = %dec_label_pc_1000a6dc, %dec_label_pc_1000a704
  %v0_1000a720 = phi i32 [ %v0_1000a6f4, %dec_label_pc_1000a6dc ], [ -1, %dec_label_pc_1000a704 ]
  ret i32 %v0_1000a720

; uselistorder directives
  uselistorder label %dec_label_pc_1000a710, { 1, 0 }
}

define i32 @function_1000a724() local_unnamed_addr {
dec_label_pc_1000a724:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a73c = call i32 @__asm_mfcr()
  %v1_1000a740 = and i32 %v0_1000a73c, 268435456
  %v3_1000a740 = icmp eq i32 %v1_1000a740, 0
  store i32 %v0_1000a73c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a740, label %dec_label_pc_1000a758, label %dec_label_pc_1000a74c

dec_label_pc_1000a74c:                            ; preds = %dec_label_pc_1000a724
  %v0_1000a74c = call i32 @function_10008d44()
  %v0_1000a750 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a750 = inttoptr i32 %v0_1000a74c to i32*
  store i32 %v0_1000a750, i32* %v2_1000a750, align 4
  br label %dec_label_pc_1000a758

dec_label_pc_1000a758:                            ; preds = %dec_label_pc_1000a724, %dec_label_pc_1000a74c
  %v0_1000a768 = phi i32 [ %v0_1000a73c, %dec_label_pc_1000a724 ], [ -1, %dec_label_pc_1000a74c ]
  ret i32 %v0_1000a768

; uselistorder directives
  uselistorder label %dec_label_pc_1000a758, { 1, 0 }
}

define i32 @function_1000a76c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a76c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a784 = call i32 @__asm_mfcr()
  %v1_1000a788 = and i32 %v0_1000a784, 268435456
  %v3_1000a788 = icmp eq i32 %v1_1000a788, 0
  store i32 %v0_1000a784, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a788, label %dec_label_pc_1000a7a0, label %dec_label_pc_1000a794

dec_label_pc_1000a794:                            ; preds = %dec_label_pc_1000a76c
  %v0_1000a794 = call i32 @function_10008d44()
  %v0_1000a798 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a798 = inttoptr i32 %v0_1000a794 to i32*
  store i32 %v0_1000a798, i32* %v2_1000a798, align 4
  br label %dec_label_pc_1000a7a0

dec_label_pc_1000a7a0:                            ; preds = %dec_label_pc_1000a76c, %dec_label_pc_1000a794
  %v0_1000a7b0 = phi i32 [ %v0_1000a784, %dec_label_pc_1000a76c ], [ -1, %dec_label_pc_1000a794 ]
  ret i32 %v0_1000a7b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a7a0, { 1, 0 }
}

define i32 @function_1000a7b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a7b4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a7cc = call i32 @__asm_mfcr()
  %v1_1000a7d0 = and i32 %v0_1000a7cc, 268435456
  %v3_1000a7d0 = icmp eq i32 %v1_1000a7d0, 0
  store i32 %v0_1000a7cc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a7d0, label %dec_label_pc_1000a7e8, label %dec_label_pc_1000a7dc

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a7b4
  %v0_1000a7dc = call i32 @function_10008d44()
  %v0_1000a7e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a7e0 = inttoptr i32 %v0_1000a7dc to i32*
  store i32 %v0_1000a7e0, i32* %v2_1000a7e0, align 4
  br label %dec_label_pc_1000a7e8

dec_label_pc_1000a7e8:                            ; preds = %dec_label_pc_1000a7b4, %dec_label_pc_1000a7dc
  %v0_1000a7f8 = phi i32 [ %v0_1000a7cc, %dec_label_pc_1000a7b4 ], [ -1, %dec_label_pc_1000a7dc ]
  ret i32 %v0_1000a7f8

; uselistorder directives
  uselistorder label %dec_label_pc_1000a7e8, { 1, 0 }
}

define i32 @function_1000a7fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a7fc:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a7fc = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000a828 = call i32 @__asm_mfcr()
  %v1_1000a82c = and i32 %v0_1000a828, 268435456
  %v3_1000a82c = icmp eq i32 %v1_1000a82c, 0
  store i32 %v0_1000a828, i32* %r31.global-to-local, align 4
  store i32 %v0_1000a828, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a82c, label %dec_label_pc_1000a850, label %dec_label_pc_1000a840

dec_label_pc_1000a840:                            ; preds = %dec_label_pc_1000a7fc
  %v0_1000a840 = call i32 @function_10008d44()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000a848 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a848 = inttoptr i32 %v0_1000a840 to i32*
  store i32 %v0_1000a848, i32* %v2_1000a848, align 4
  %v0_1000a854.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a854

dec_label_pc_1000a850:                            ; preds = %dec_label_pc_1000a7fc
  %v3_1000a838 = icmp eq i32 %v0_1000a828, 0
  br i1 %v3_1000a838, label %dec_label_pc_1000a860, label %dec_label_pc_1000a854

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a850, %dec_label_pc_1000a840
  %v0_1000a854 = phi i32 [ %v0_1000a828, %dec_label_pc_1000a850 ], [ %v0_1000a854.pre, %dec_label_pc_1000a840 ]
  %tmp = icmp slt i32 %v0_1000a854, 0
  %v1_1000a858 = zext i1 %tmp to i32
  %v2_1000a858 = ashr i32 %v0_1000a854, 31
  %v3_1000a858 = and i32 %v2_1000a858, -2
  %v4_1000a858 = or i32 %v3_1000a858, %v1_1000a858
  br label %dec_label_pc_1000a868

dec_label_pc_1000a860:                            ; preds = %dec_label_pc_1000a850
  %v3_1000a860 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a868

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000a854, %dec_label_pc_1000a860
  %v0_1000a878 = phi i32 [ %v4_1000a858, %dec_label_pc_1000a854 ], [ %v3_1000a860, %dec_label_pc_1000a860 ]
  store i32 %v0_1000a7fc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a878

; uselistorder directives
  uselistorder i32 %v0_1000a854, { 1, 0 }
  uselistorder i32 %v0_1000a828, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 13, 2, 11, 3, 12, 4, 5 }
  uselistorder label %dec_label_pc_1000a868, { 1, 0 }
}

define i32 @function_1000a87c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a87c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a894 = call i32 @__asm_mfcr()
  %v1_1000a898 = and i32 %v0_1000a894, 268435456
  %v3_1000a898 = icmp eq i32 %v1_1000a898, 0
  store i32 %v0_1000a894, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a898, label %dec_label_pc_1000a8b0, label %dec_label_pc_1000a8a4

dec_label_pc_1000a8a4:                            ; preds = %dec_label_pc_1000a87c
  %v0_1000a8a4 = call i32 @function_10008d44()
  %v0_1000a8a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a8a8 = inttoptr i32 %v0_1000a8a4 to i32*
  store i32 %v0_1000a8a8, i32* %v2_1000a8a8, align 4
  br label %dec_label_pc_1000a8b0

dec_label_pc_1000a8b0:                            ; preds = %dec_label_pc_1000a87c, %dec_label_pc_1000a8a4
  %v0_1000a8c0 = phi i32 [ %v0_1000a894, %dec_label_pc_1000a87c ], [ -1, %dec_label_pc_1000a8a4 ]
  ret i32 %v0_1000a8c0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a8b0, { 1, 0 }
}

define i32 @function_1000a8c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a8c4:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000a8e0 = load i32, i32* @global_var_1001b7b0.319, align 4
  %v3_1000a8e4 = icmp eq i32 %v3_1000a8e0, 0
  br i1 %v3_1000a8e4, label %dec_label_pc_1000a8ec, label %dec_label_pc_1000a8f8

dec_label_pc_1000a8ec:                            ; preds = %dec_label_pc_1000a8c4
  store i32 268478704, i32* @lr, align 4
  %v1_1000a8ec = call i32 @function_1000aeb8(i32 0)
  %v1_1000a8f0 = icmp slt i32 %v1_1000a8ec, 0
  br i1 %v1_1000a8f0, label %dec_label_pc_1000a918, label %dec_label_pc_1000a8ec.dec_label_pc_1000a8f8_crit_edge

dec_label_pc_1000a8ec.dec_label_pc_1000a8f8_crit_edge: ; preds = %dec_label_pc_1000a8ec
  %v0_1000a8f8.pre = load i32, i32* @r30, align 4
  %v3_1000a8fc.pre = load i32, i32* @global_var_1001b7b0.319, align 4
  br label %dec_label_pc_1000a8f8

dec_label_pc_1000a8f8:                            ; preds = %dec_label_pc_1000a8ec.dec_label_pc_1000a8f8_crit_edge, %dec_label_pc_1000a8c4
  %v3_1000a8fc = phi i32 [ %v3_1000a8fc.pre, %dec_label_pc_1000a8ec.dec_label_pc_1000a8f8_crit_edge ], [ %v3_1000a8e0, %dec_label_pc_1000a8c4 ]
  %v1_1000a904 = phi i32 [ %v0_1000a8f8.pre, %dec_label_pc_1000a8ec.dec_label_pc_1000a8f8_crit_edge ], [ %arg1, %dec_label_pc_1000a8c4 ]
  %v3_1000a8f8 = icmp eq i32 %v1_1000a904, 0
  store i32 %v3_1000a8fc, i32* @r31, align 4
  br i1 %v3_1000a8f8, label %dec_label_pc_1000a91c, label %dec_label_pc_1000a90c

dec_label_pc_1000a90c:                            ; preds = %dec_label_pc_1000a8f8
  %v2_1000a904 = add i32 %v1_1000a904, %v3_1000a8fc
  store i32 268478736, i32* @lr, align 4
  %v1_1000a90c = call i32 @function_1000aeb8(i32 %v2_1000a904)
  %tmp6 = icmp sgt i32 %v1_1000a90c, -1
  br i1 %tmp6, label %dec_label_pc_1000a90c.dec_label_pc_1000a91c_crit_edge, label %dec_label_pc_1000a918

dec_label_pc_1000a90c.dec_label_pc_1000a91c_crit_edge: ; preds = %dec_label_pc_1000a90c
  %v0_1000a920.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a91c

dec_label_pc_1000a918:                            ; preds = %dec_label_pc_1000a90c, %dec_label_pc_1000a8ec
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000a91c

dec_label_pc_1000a91c:                            ; preds = %dec_label_pc_1000a90c.dec_label_pc_1000a91c_crit_edge, %dec_label_pc_1000a8f8, %dec_label_pc_1000a918
  %v0_1000a920 = phi i32 [ %v0_1000a920.pre, %dec_label_pc_1000a90c.dec_label_pc_1000a91c_crit_edge ], [ %v3_1000a8fc, %dec_label_pc_1000a8f8 ], [ -1, %dec_label_pc_1000a918 ]
  ret i32 %v0_1000a920

; uselistorder directives
  uselistorder i32 %v3_1000a8fc, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000aeb8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a91c, { 2, 0, 1 }
}

define i32 @function_1000a934(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a934:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a94c = call i32 @__asm_mfcr()
  %v1_1000a950 = and i32 %v0_1000a94c, 268435456
  %v3_1000a950 = icmp eq i32 %v1_1000a950, 0
  store i32 %v0_1000a94c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a950, label %dec_label_pc_1000a968, label %dec_label_pc_1000a95c

dec_label_pc_1000a95c:                            ; preds = %dec_label_pc_1000a934
  %v0_1000a95c = call i32 @function_10008d44()
  %v0_1000a960 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a960 = inttoptr i32 %v0_1000a95c to i32*
  store i32 %v0_1000a960, i32* %v2_1000a960, align 4
  br label %dec_label_pc_1000a968

dec_label_pc_1000a968:                            ; preds = %dec_label_pc_1000a934, %dec_label_pc_1000a95c
  %v0_1000a978 = phi i32 [ %v0_1000a94c, %dec_label_pc_1000a934 ], [ -1, %dec_label_pc_1000a95c ]
  ret i32 %v0_1000a978

; uselistorder directives
  uselistorder label %dec_label_pc_1000a968, { 1, 0 }
}

define i32 @function_1000a97c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a97c:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268478884, i32* @lr, align 4
  %v3_1000a9a0 = call i32 @function_10008e2c(i32 %arg2, i32 0, i32 104)
  %v2_1000a9a4 = load i32, i32* %arg1, align 4
  %v1_1000a9a8 = add i32 %tmp, 4
  %v2_1000a9a8 = inttoptr i32 %v1_1000a9a8 to i32*
  %v3_1000a9a8 = load i32, i32* %v2_1000a9a8, align 4
  store i32 %v3_1000a9a8, i32* %r10.global-to-local, align 4
  %v1_1000a9ac = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9ac = inttoptr i32 %v1_1000a9ac to i32*
  store i32 %v2_1000a9a4, i32* %v2_1000a9ac, align 4
  %v0_1000a9b0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a9b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9b0 = add i32 %v1_1000a9b0, 4
  %v3_1000a9b0 = inttoptr i32 %v2_1000a9b0 to i32*
  store i32 %v0_1000a9b0, i32* %v3_1000a9b0, align 4
  %v0_1000a9b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9b4 = add i32 %v0_1000a9b4, 8
  %v2_1000a9b4 = inttoptr i32 %v1_1000a9b4 to i32*
  %v3_1000a9b4 = load i32, i32* %v2_1000a9b4, align 4
  %v1_1000a9b8 = add i32 %v0_1000a9b4, 12
  %v2_1000a9b8 = inttoptr i32 %v1_1000a9b8 to i32*
  %v3_1000a9b8 = load i32, i32* %v2_1000a9b8, align 4
  store i32 %v3_1000a9b8, i32* %r10.global-to-local, align 4
  %v1_1000a9bc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9bc = add i32 %v1_1000a9bc, 8
  %v3_1000a9bc = inttoptr i32 %v2_1000a9bc to i32*
  store i32 %v3_1000a9b4, i32* %v3_1000a9bc, align 4
  %v0_1000a9c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a9c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9c0 = add i32 %v1_1000a9c0, 12
  %v3_1000a9c0 = inttoptr i32 %v2_1000a9c0 to i32*
  store i32 %v0_1000a9c0, i32* %v3_1000a9c0, align 4
  %v0_1000a9c4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9c4 = add i32 %v0_1000a9c4, 16
  %v2_1000a9c4 = inttoptr i32 %v1_1000a9c4 to i32*
  %v3_1000a9c4 = load i32, i32* %v2_1000a9c4, align 4
  %v1_1000a9c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9c8 = add i32 %v1_1000a9c8, 16
  %v3_1000a9c8 = inttoptr i32 %v2_1000a9c8 to i32*
  store i32 %v3_1000a9c4, i32* %v3_1000a9c8, align 4
  %v0_1000a9cc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9cc = add i32 %v0_1000a9cc, 20
  %v2_1000a9cc = inttoptr i32 %v1_1000a9cc to i32*
  %v3_1000a9cc = load i32, i32* %v2_1000a9cc, align 4
  %v1_1000a9d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9d0 = add i32 %v1_1000a9d0, 20
  %v3_1000a9d0 = inttoptr i32 %v2_1000a9d0 to i32*
  store i32 %v3_1000a9cc, i32* %v3_1000a9d0, align 4
  %v0_1000a9d4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9d4 = add i32 %v0_1000a9d4, 24
  %v2_1000a9d4 = inttoptr i32 %v1_1000a9d4 to i32*
  %v3_1000a9d4 = load i32, i32* %v2_1000a9d4, align 4
  %v1_1000a9d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9d8 = add i32 %v1_1000a9d8, 24
  %v3_1000a9d8 = inttoptr i32 %v2_1000a9d8 to i32*
  store i32 %v3_1000a9d4, i32* %v3_1000a9d8, align 4
  %v0_1000a9dc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9dc = add i32 %v0_1000a9dc, 28
  %v2_1000a9dc = inttoptr i32 %v1_1000a9dc to i32*
  %v3_1000a9dc = load i32, i32* %v2_1000a9dc, align 4
  %v1_1000a9e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9e0 = add i32 %v1_1000a9e0, 28
  %v3_1000a9e0 = inttoptr i32 %v2_1000a9e0 to i32*
  store i32 %v3_1000a9dc, i32* %v3_1000a9e0, align 4
  %v0_1000a9e4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9e4 = add i32 %v0_1000a9e4, 32
  %v2_1000a9e4 = inttoptr i32 %v1_1000a9e4 to i32*
  %v3_1000a9e4 = load i32, i32* %v2_1000a9e4, align 4
  %v1_1000a9e8 = add i32 %v0_1000a9e4, 36
  %v2_1000a9e8 = inttoptr i32 %v1_1000a9e8 to i32*
  %v3_1000a9e8 = load i32, i32* %v2_1000a9e8, align 4
  store i32 %v3_1000a9e8, i32* %r10.global-to-local, align 4
  %v1_1000a9ec = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9ec = add i32 %v1_1000a9ec, 32
  %v3_1000a9ec = inttoptr i32 %v2_1000a9ec to i32*
  store i32 %v3_1000a9e4, i32* %v3_1000a9ec, align 4
  %v0_1000a9f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a9f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9f0 = add i32 %v1_1000a9f0, 36
  %v3_1000a9f0 = inttoptr i32 %v2_1000a9f0 to i32*
  store i32 %v0_1000a9f0, i32* %v3_1000a9f0, align 4
  %v0_1000a9f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9f4 = add i32 %v0_1000a9f4, 48
  %v2_1000a9f4 = inttoptr i32 %v1_1000a9f4 to i32*
  %v3_1000a9f4 = load i32, i32* %v2_1000a9f4, align 4
  %v1_1000a9f8 = add i32 %v0_1000a9f4, 52
  %v2_1000a9f8 = inttoptr i32 %v1_1000a9f8 to i32*
  %v3_1000a9f8 = load i32, i32* %v2_1000a9f8, align 4
  store i32 %v3_1000a9f8, i32* %r10.global-to-local, align 4
  %v1_1000a9fc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a9fc = add i32 %v1_1000a9fc, 48
  %v3_1000a9fc = inttoptr i32 %v2_1000a9fc to i32*
  store i32 %v3_1000a9f4, i32* %v3_1000a9fc, align 4
  %v0_1000aa00 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000aa00 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa00 = add i32 %v1_1000aa00, 52
  %v3_1000aa00 = inttoptr i32 %v2_1000aa00 to i32*
  store i32 %v0_1000aa00, i32* %v3_1000aa00, align 4
  %v0_1000aa04 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa04 = add i32 %v0_1000aa04, 56
  %v2_1000aa04 = inttoptr i32 %v1_1000aa04 to i32*
  %v3_1000aa04 = load i32, i32* %v2_1000aa04, align 4
  %v1_1000aa08 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa08 = add i32 %v1_1000aa08, 56
  %v3_1000aa08 = inttoptr i32 %v2_1000aa08 to i32*
  store i32 %v3_1000aa04, i32* %v3_1000aa08, align 4
  %v0_1000aa0c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa0c = add i32 %v0_1000aa0c, 64
  %v2_1000aa0c = inttoptr i32 %v1_1000aa0c to i32*
  %v3_1000aa0c = load i32, i32* %v2_1000aa0c, align 4
  %v1_1000aa10 = add i32 %v0_1000aa0c, 68
  %v2_1000aa10 = inttoptr i32 %v1_1000aa10 to i32*
  %v3_1000aa10 = load i32, i32* %v2_1000aa10, align 4
  store i32 %v3_1000aa10, i32* %r10.global-to-local, align 4
  %v1_1000aa14 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa14 = add i32 %v1_1000aa14, 64
  %v3_1000aa14 = inttoptr i32 %v2_1000aa14 to i32*
  store i32 %v3_1000aa0c, i32* %v3_1000aa14, align 4
  %v0_1000aa18 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000aa18 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa18 = add i32 %v1_1000aa18, 68
  %v3_1000aa18 = inttoptr i32 %v2_1000aa18 to i32*
  store i32 %v0_1000aa18, i32* %v3_1000aa18, align 4
  %v0_1000aa1c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa1c = add i32 %v0_1000aa1c, 72
  %v2_1000aa1c = inttoptr i32 %v1_1000aa1c to i32*
  %v3_1000aa1c = load i32, i32* %v2_1000aa1c, align 4
  %v1_1000aa20 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa20 = add i32 %v1_1000aa20, 72
  %v3_1000aa20 = inttoptr i32 %v2_1000aa20 to i32*
  store i32 %v3_1000aa1c, i32* %v3_1000aa20, align 4
  %v0_1000aa24 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa24 = add i32 %v0_1000aa24, 80
  %v2_1000aa24 = inttoptr i32 %v1_1000aa24 to i32*
  %v3_1000aa24 = load i32, i32* %v2_1000aa24, align 4
  %v1_1000aa28 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa28 = add i32 %v1_1000aa28, 80
  %v3_1000aa28 = inttoptr i32 %v2_1000aa28 to i32*
  store i32 %v3_1000aa24, i32* %v3_1000aa28, align 4
  %v0_1000aa2c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa2c = add i32 %v0_1000aa2c, 88
  %v2_1000aa2c = inttoptr i32 %v1_1000aa2c to i32*
  %v3_1000aa2c = load i32, i32* %v2_1000aa2c, align 4
  %v1_1000aa30 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa30 = add i32 %v1_1000aa30, 88
  %v3_1000aa30 = inttoptr i32 %v2_1000aa30 to i32*
  store i32 %v3_1000aa2c, i32* %v3_1000aa30, align 4
  ret i32 %v3_1000a9a0

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000aa48(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000aa48:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000aa4c = load i32, i32* @lr, align 4
  store i32 %v0_1000aa4c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268479088, i32* @lr, align 4
  %v3_1000aa6c = call i32 @function_10008e2c(i32 %arg2, i32 0, i32 88)
  %v0_1000aa70 = load i32, i32* @r28, align 4
  %v1_1000aa70 = inttoptr i32 %v0_1000aa70 to i32*
  %v2_1000aa70 = load i32, i32* %v1_1000aa70, align 4
  store i32 %v2_1000aa70, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000aa78 = load i32, i32* @r29, align 4
  %v2_1000aa78 = add i32 %v1_1000aa78, 4
  %v3_1000aa78 = inttoptr i32 %v2_1000aa78 to i32*
  store i32 %v2_1000aa70, i32* %v3_1000aa78, align 4
  %v0_1000aa7c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000aa7c = load i32, i32* @r29, align 4
  %v2_1000aa7c = inttoptr i32 %v1_1000aa7c to i32*
  store i32 %v0_1000aa7c, i32* %v2_1000aa7c, align 4
  %v0_1000aa80 = load i32, i32* @r28, align 4
  %v1_1000aa80 = add i32 %v0_1000aa80, 4
  %v2_1000aa80 = inttoptr i32 %v1_1000aa80 to i32*
  %v3_1000aa80 = load i32, i32* %v2_1000aa80, align 4
  store i32 %v3_1000aa80, i32* %r0.global-to-local, align 4
  %v1_1000aa84 = load i32, i32* @r29, align 4
  %v2_1000aa84 = add i32 %v1_1000aa84, 12
  %v3_1000aa84 = inttoptr i32 %v2_1000aa84 to i32*
  store i32 %v3_1000aa80, i32* %v3_1000aa84, align 4
  %v0_1000aa88 = load i32, i32* @r28, align 4
  %v1_1000aa88 = add i32 %v0_1000aa88, 8
  %v2_1000aa88 = inttoptr i32 %v1_1000aa88 to i32*
  %v3_1000aa88 = load i32, i32* %v2_1000aa88, align 4
  store i32 %v3_1000aa88, i32* %r0.global-to-local, align 4
  %v1_1000aa8c = load i32, i32* @r29, align 4
  %v2_1000aa8c = add i32 %v1_1000aa8c, 16
  %v3_1000aa8c = inttoptr i32 %v2_1000aa8c to i32*
  store i32 %v3_1000aa88, i32* %v3_1000aa8c, align 4
  %v0_1000aa90 = load i32, i32* @r28, align 4
  %v1_1000aa90 = add i32 %v0_1000aa90, 12
  %v2_1000aa90 = inttoptr i32 %v1_1000aa90 to i16*
  %v3_1000aa90 = load i16, i16* %v2_1000aa90, align 2
  %v4_1000aa90 = zext i16 %v3_1000aa90 to i32
  store i32 %v4_1000aa90, i32* %r0.global-to-local, align 4
  %v1_1000aa94 = load i32, i32* @r29, align 4
  %v2_1000aa94 = add i32 %v1_1000aa94, 20
  %v3_1000aa94 = inttoptr i32 %v2_1000aa94 to i32*
  store i32 %v4_1000aa90, i32* %v3_1000aa94, align 4
  %v0_1000aa98 = load i32, i32* @r28, align 4
  %v1_1000aa98 = add i32 %v0_1000aa98, 16
  %v2_1000aa98 = inttoptr i32 %v1_1000aa98 to i32*
  %v3_1000aa98 = load i32, i32* %v2_1000aa98, align 4
  store i32 %v3_1000aa98, i32* %r0.global-to-local, align 4
  %v1_1000aa9c = load i32, i32* @r29, align 4
  %v2_1000aa9c = add i32 %v1_1000aa9c, 24
  %v3_1000aa9c = inttoptr i32 %v2_1000aa9c to i32*
  store i32 %v3_1000aa98, i32* %v3_1000aa9c, align 4
  %v0_1000aaa0 = load i32, i32* @r28, align 4
  %v1_1000aaa0 = add i32 %v0_1000aaa0, 20
  %v2_1000aaa0 = inttoptr i32 %v1_1000aaa0 to i32*
  %v3_1000aaa0 = load i32, i32* %v2_1000aaa0, align 4
  store i32 %v3_1000aaa0, i32* %r0.global-to-local, align 4
  %v1_1000aaa4 = load i32, i32* @r29, align 4
  %v2_1000aaa4 = add i32 %v1_1000aaa4, 28
  %v3_1000aaa4 = inttoptr i32 %v2_1000aaa4 to i32*
  store i32 %v3_1000aaa0, i32* %v3_1000aaa4, align 4
  %v0_1000aaa8 = load i32, i32* @r28, align 4
  %v1_1000aaa8 = add i32 %v0_1000aaa8, 24
  %v2_1000aaa8 = inttoptr i32 %v1_1000aaa8 to i32*
  %v3_1000aaa8 = load i32, i32* %v2_1000aaa8, align 4
  store i32 %v3_1000aaa8, i32* %r0.global-to-local, align 4
  %v0_1000aaac = load i32, i32* %r9.global-to-local, align 4
  %v1_1000aaac = load i32, i32* @r29, align 4
  %v2_1000aaac = add i32 %v1_1000aaac, 32
  %v3_1000aaac = inttoptr i32 %v2_1000aaac to i32*
  store i32 %v0_1000aaac, i32* %v3_1000aaac, align 4
  %v0_1000aab0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000aab0 = load i32, i32* @r29, align 4
  %v2_1000aab0 = add i32 %v1_1000aab0, 36
  %v3_1000aab0 = inttoptr i32 %v2_1000aab0 to i32*
  store i32 %v0_1000aab0, i32* %v3_1000aab0, align 4
  %v0_1000aab4 = load i32, i32* @r28, align 4
  %v1_1000aab4 = add i32 %v0_1000aab4, 28
  %v2_1000aab4 = inttoptr i32 %v1_1000aab4 to i32*
  %v3_1000aab4 = load i32, i32* %v2_1000aab4, align 4
  store i32 %v3_1000aab4, i32* %r0.global-to-local, align 4
  %v1_1000aab8 = load i32, i32* @r29, align 4
  %v2_1000aab8 = add i32 %v1_1000aab8, 44
  %v3_1000aab8 = inttoptr i32 %v2_1000aab8 to i32*
  store i32 %v3_1000aab4, i32* %v3_1000aab8, align 4
  %v0_1000aabc = load i32, i32* @r28, align 4
  %v1_1000aabc = add i32 %v0_1000aabc, 32
  %v2_1000aabc = inttoptr i32 %v1_1000aabc to i32*
  %v3_1000aabc = load i32, i32* %v2_1000aabc, align 4
  store i32 %v3_1000aabc, i32* %r0.global-to-local, align 4
  %v1_1000aac0 = load i32, i32* @r29, align 4
  %v2_1000aac0 = add i32 %v1_1000aac0, 48
  %v3_1000aac0 = inttoptr i32 %v2_1000aac0 to i32*
  store i32 %v3_1000aabc, i32* %v3_1000aac0, align 4
  %v0_1000aac4 = load i32, i32* @r28, align 4
  %v1_1000aac4 = add i32 %v0_1000aac4, 36
  %v2_1000aac4 = inttoptr i32 %v1_1000aac4 to i32*
  %v3_1000aac4 = load i32, i32* %v2_1000aac4, align 4
  store i32 %v3_1000aac4, i32* %r0.global-to-local, align 4
  %v1_1000aac8 = load i32, i32* @r29, align 4
  %v2_1000aac8 = add i32 %v1_1000aac8, 52
  %v3_1000aac8 = inttoptr i32 %v2_1000aac8 to i32*
  store i32 %v3_1000aac4, i32* %v3_1000aac8, align 4
  %v0_1000aacc = load i32, i32* @r28, align 4
  %v1_1000aacc = add i32 %v0_1000aacc, 40
  %v2_1000aacc = inttoptr i32 %v1_1000aacc to i32*
  %v3_1000aacc = load i32, i32* %v2_1000aacc, align 4
  store i32 %v3_1000aacc, i32* %r0.global-to-local, align 4
  %v1_1000aad0 = load i32, i32* @r29, align 4
  %v2_1000aad0 = add i32 %v1_1000aad0, 56
  %v3_1000aad0 = inttoptr i32 %v2_1000aad0 to i32*
  store i32 %v3_1000aacc, i32* %v3_1000aad0, align 4
  %v0_1000aad4 = load i32, i32* @r28, align 4
  %v1_1000aad4 = add i32 %v0_1000aad4, 48
  %v2_1000aad4 = inttoptr i32 %v1_1000aad4 to i32*
  %v3_1000aad4 = load i32, i32* %v2_1000aad4, align 4
  store i32 %v3_1000aad4, i32* %r0.global-to-local, align 4
  %v1_1000aad8 = load i32, i32* @r29, align 4
  %v2_1000aad8 = add i32 %v1_1000aad8, 64
  %v3_1000aad8 = inttoptr i32 %v2_1000aad8 to i32*
  store i32 %v3_1000aad4, i32* %v3_1000aad8, align 4
  %v0_1000aadc = load i32, i32* @r28, align 4
  %v1_1000aadc = add i32 %v0_1000aadc, 56
  %v2_1000aadc = inttoptr i32 %v1_1000aadc to i32*
  %v3_1000aadc = load i32, i32* %v2_1000aadc, align 4
  %v1_1000aae0 = load i32, i32* @r29, align 4
  %v2_1000aae0 = add i32 %v1_1000aae0, 72
  %v3_1000aae0 = inttoptr i32 %v2_1000aae0 to i32*
  store i32 %v3_1000aadc, i32* %v3_1000aae0, align 4
  store i32 %v0_1000aa4c, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000aa6c

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 5, 6, 7, 8, 20, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 7, 0, 4, 1, 5, 6, 3, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 2, 3, 0, 1 }
  uselistorder i32 24, { 21, 22, 6, 7, 0, 1, 8, 46, 47, 48, 41, 42, 43, 9, 10, 11, 12, 13, 15, 16, 17, 18, 14, 19, 20, 2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 5 }
  uselistorder i32 20, { 26, 27, 17, 18, 19, 20, 28, 29, 30, 31, 21, 5, 0, 1, 22, 23, 2, 24, 25, 32, 33, 6, 34, 35, 36, 37, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 8, 48, 49, 50, 51, 52, 53, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 10, 63, 64, 65, 66, 67, 11, 68, 69, 70, 71, 12, 72, 13, 73, 74, 3, 14, 75, 76, 77, 4, 15, 78, 79, 80, 81, 82, 83, 16, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 }
  uselistorder i32 16, { 67, 68, 54, 55, 69, 70, 71, 72, 73, 20, 66, 56, 151, 152, 74, 75, 46, 47, 48, 57, 49, 50, 58, 59, 107, 104, 60, 61, 51, 23, 63, 64, 18, 0, 19, 1, 2, 65, 3, 62, 52, 53, 24, 135, 136, 137, 138, 139, 76, 77, 26, 78, 79, 4, 80, 81, 82, 25, 83, 84, 28, 85, 86, 87, 88, 89, 27, 32, 90, 91, 92, 5, 93, 94, 6, 7, 21, 96, 95, 29, 31, 30, 36, 97, 98, 99, 8, 100, 101, 9, 10, 22, 103, 102, 33, 35, 34, 11, 37, 105, 12, 13, 106, 108, 109, 38, 110, 111, 112, 113, 114, 14, 115, 39, 116, 117, 118, 15, 119, 122, 123, 120, 121, 124, 125, 16, 126, 40, 127, 128, 129, 17, 130, 133, 134, 131, 132, 140, 141, 142, 143, 41, 144, 145, 146, 43, 147, 42, 148, 45, 149, 44, 150 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000aaf8() local_unnamed_addr {
dec_label_pc_1000aaf8:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000aaf8 = load i32, i32* @r5, align 4
  %v1_1000aaf8 = call i32 @__asm_rlwinm.(i32 %v0_1000aaf8, i32 29, i32 3, i32 31)
  store i32 %v1_1000aaf8, i32* %r9.global-to-local, align 4
  %v4_1000aaf8 = icmp eq i32 %v1_1000aaf8, 0
  %v0_1000aafc = load i32, i32* @r4, align 4
  %v1_1000aafc = add i32 %v0_1000aafc, -4
  store i32 %v1_1000aafc, i32* %r4.global-to-local, align 4
  %v0_1000ab00 = load i32, i32* @r3, align 4
  %v1_1000ab00 = add i32 %v0_1000ab00, -4
  store i32 %v1_1000ab00, i32* @r11, align 4
  br i1 %v4_1000aaf8, label %dec_label_pc_1000ab28, label %dec_label_pc_1000ab08

dec_label_pc_1000ab08:                            ; preds = %dec_label_pc_1000aaf8
  %v1_1000ab08 = urem i32 %v1_1000ab00, 4
  %v3_1000ab08 = icmp eq i32 %v1_1000ab08, 0
  br i1 %v3_1000ab08, label %dec_label_pc_1000ab10, label %dec_label_pc_1000ab64

dec_label_pc_1000ab10:                            ; preds = %dec_label_pc_1000ab84.dec_label_pc_1000ab10_crit_edge, %dec_label_pc_1000ab08
  %v1_1000ab1c.pre = phi i32 [ %v1_1000ab00, %dec_label_pc_1000ab08 ], [ %v1_1000ab1c.pre.pre, %dec_label_pc_1000ab84.dec_label_pc_1000ab10_crit_edge ]
  %v0_1000ab10 = phi i32 [ %v1_1000aaf8, %dec_label_pc_1000ab08 ], [ %v1_1000ab84, %dec_label_pc_1000ab84.dec_label_pc_1000ab10_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000ab08 ], [ %v2_1000ab6c, %dec_label_pc_1000ab84.dec_label_pc_1000ab10_crit_edge ]
  store i32 %v0_1000ab10, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ab14

dec_label_pc_1000ab14:                            ; preds = %dec_label_pc_1000ab14, %dec_label_pc_1000ab10
  %v1_1000ab1c = phi i32 [ %v2_1000ab20, %dec_label_pc_1000ab14 ], [ %v1_1000ab1c.pre, %dec_label_pc_1000ab10 ]
  %v0_1000ab14 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ab14 = add i32 %v0_1000ab14, 4
  %v2_1000ab14 = inttoptr i32 %v1_1000ab14 to i32*
  %v3_1000ab14 = load i32, i32* %v2_1000ab14, align 4
  %v1_1000ab18 = add i32 %v0_1000ab14, 8
  %v2_1000ab18 = inttoptr i32 %v1_1000ab18 to i32*
  %v3_1000ab18 = load i32, i32* %v2_1000ab18, align 4
  store i32 %v3_1000ab18, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ab18, i32* %r4.global-to-local, align 4
  %v2_1000ab1c = add i32 %v1_1000ab1c, 4
  %v3_1000ab1c = inttoptr i32 %v2_1000ab1c to i32*
  store i32 %v3_1000ab14, i32* %v3_1000ab1c, align 4
  %v0_1000ab20 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ab20 = load i32, i32* @r11, align 4
  %v2_1000ab20 = add i32 %v1_1000ab20, 8
  %v3_1000ab20 = inttoptr i32 %v2_1000ab20 to i32*
  store i32 %v0_1000ab20, i32* %v3_1000ab20, align 4
  store i32 %v2_1000ab20, i32* @r11, align 4
  %v0_1000ab24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab24 = add i32 %v0_1000ab24, -1
  store i32 %v1_1000ab24, i32* %ctr.global-to-local, align 4
  %v2_1000ab24 = icmp eq i32 %v1_1000ab24, 0
  br i1 %v2_1000ab24, label %dec_label_pc_1000ab28, label %dec_label_pc_1000ab14

dec_label_pc_1000ab28:                            ; preds = %dec_label_pc_1000ab14, %dec_label_pc_1000ab84, %dec_label_pc_1000aaf8
  %.1 = phi i32 [ undef, %dec_label_pc_1000aaf8 ], [ %v2_1000ab6c, %dec_label_pc_1000ab84 ], [ %.0, %dec_label_pc_1000ab14 ]
  %v1_1000ab28 = urem i32 %.1, 8
  store i32 %v1_1000ab28, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000ab28, 4
  br i1 %tmp, label %dec_label_pc_1000ab40, label %dec_label_pc_1000ab34

dec_label_pc_1000ab34:                            ; preds = %dec_label_pc_1000ab28
  %v0_1000ab34 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ab34 = add i32 %v0_1000ab34, 4
  %v2_1000ab34 = inttoptr i32 %v1_1000ab34 to i32*
  %v3_1000ab34 = load i32, i32* %v2_1000ab34, align 4
  store i32 %v1_1000ab34, i32* %r4.global-to-local, align 4
  %v1_1000ab38 = add nsw i32 %v1_1000ab28, -4
  store i32 %v1_1000ab38, i32* @r5, align 4
  %v1_1000ab3c = load i32, i32* @r11, align 4
  %v2_1000ab3c = add i32 %v1_1000ab3c, 4
  %v3_1000ab3c = inttoptr i32 %v2_1000ab3c to i32*
  store i32 %v3_1000ab34, i32* %v3_1000ab3c, align 4
  store i32 %v2_1000ab3c, i32* @r11, align 4
  %v0_1000ab40.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000ab40

dec_label_pc_1000ab40:                            ; preds = %dec_label_pc_1000ab28, %dec_label_pc_1000ab34
  %v0_1000ab40 = phi i32 [ %v1_1000ab28, %dec_label_pc_1000ab28 ], [ %v0_1000ab40.pre, %dec_label_pc_1000ab34 ]
  %v3_1000ab40 = icmp eq i32 %v0_1000ab40, 0
  %v0_1000ab44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ab40, i32 %v0_1000ab44)
  %v0_1000ab48 = load i32, i32* @r5, align 4
  store i32 %v0_1000ab48, i32* %ctr.global-to-local, align 4
  %v0_1000ab4c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ab4c = add i32 %v0_1000ab4c, 3
  store i32 %v1_1000ab4c, i32* %r4.global-to-local, align 4
  %v0_1000ab50 = load i32, i32* @r11, align 4
  %v1_1000ab50 = add i32 %v0_1000ab50, 3
  store i32 %v1_1000ab50, i32* %r9.global-to-local, align 4
  %v1_1000ab549 = add i32 %v0_1000ab4c, 4
  %v2_1000ab5410 = inttoptr i32 %v1_1000ab549 to i8*
  %v3_1000ab5411 = load i8, i8* %v2_1000ab5410, align 1
  store i32 %v1_1000ab549, i32* %r4.global-to-local, align 4
  %v3_1000ab5813 = add i32 %v0_1000ab50, 4
  %v4_1000ab5814 = inttoptr i32 %v3_1000ab5813 to i8*
  store i8 %v3_1000ab5411, i8* %v4_1000ab5814, align 1
  store i32 %v3_1000ab5813, i32* %r9.global-to-local, align 4
  %v0_1000ab5c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab5c16 = add i32 %v0_1000ab5c15, -1
  store i32 %v1_1000ab5c16, i32* %ctr.global-to-local, align 4
  %v2_1000ab5c17 = icmp eq i32 %v1_1000ab5c16, 0
  br i1 %v2_1000ab5c17, label %dec_label_pc_1000ab90, label %dec_label_pc_1000ab54.dec_label_pc_1000ab54_crit_edge

dec_label_pc_1000ab54.dec_label_pc_1000ab54_crit_edge: ; preds = %dec_label_pc_1000ab40, %dec_label_pc_1000ab54.dec_label_pc_1000ab54_crit_edge
  %v3_1000ab5818 = phi i32 [ %v3_1000ab58, %dec_label_pc_1000ab54.dec_label_pc_1000ab54_crit_edge ], [ %v3_1000ab5813, %dec_label_pc_1000ab40 ]
  %v0_1000ab54.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ab54 = add i32 %v0_1000ab54.pre, 1
  %v2_1000ab54 = inttoptr i32 %v1_1000ab54 to i8*
  %v3_1000ab54 = load i8, i8* %v2_1000ab54, align 1
  store i32 %v1_1000ab54, i32* %r4.global-to-local, align 4
  %v3_1000ab58 = add i32 %v3_1000ab5818, 1
  %v4_1000ab58 = inttoptr i32 %v3_1000ab58 to i8*
  store i8 %v3_1000ab54, i8* %v4_1000ab58, align 1
  store i32 %v3_1000ab58, i32* %r9.global-to-local, align 4
  %v0_1000ab5c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab5c = add i32 %v0_1000ab5c, -1
  store i32 %v1_1000ab5c, i32* %ctr.global-to-local, align 4
  %v2_1000ab5c = icmp eq i32 %v1_1000ab5c, 0
  br i1 %v2_1000ab5c, label %dec_label_pc_1000ab90, label %dec_label_pc_1000ab54.dec_label_pc_1000ab54_crit_edge

dec_label_pc_1000ab64:                            ; preds = %dec_label_pc_1000ab08
  %v1_1000ab64 = sub nsw i32 4, %v1_1000ab08
  store i32 %v1_1000ab64, i32* %ctr.global-to-local, align 4
  %v1_1000ab6c = load i32, i32* @r5, align 4
  %v2_1000ab6c = sub i32 %v1_1000ab6c, %v1_1000ab64
  br label %dec_label_pc_1000ab70

dec_label_pc_1000ab70:                            ; preds = %dec_label_pc_1000ab70.dec_label_pc_1000ab70_crit_edge, %dec_label_pc_1000ab64
  %v2_1000ab78 = phi i32 [ %v1_1000ab7c, %dec_label_pc_1000ab70.dec_label_pc_1000ab70_crit_edge ], [ %v1_1000ab00, %dec_label_pc_1000ab64 ]
  %v0_1000ab70 = phi i32 [ %v0_1000ab70.pre, %dec_label_pc_1000ab70.dec_label_pc_1000ab70_crit_edge ], [ %v1_1000aafc, %dec_label_pc_1000ab64 ]
  %v1_1000ab70 = add i32 %v0_1000ab70, 4
  %v2_1000ab70 = inttoptr i32 %v1_1000ab70 to i8*
  %v3_1000ab70 = load i8, i8* %v2_1000ab70, align 1
  %v1_1000ab74 = add i32 %v0_1000ab70, 1
  store i32 %v1_1000ab74, i32* %r4.global-to-local, align 4
  %v3_1000ab78 = add i32 %v2_1000ab78, 4
  %v4_1000ab78 = inttoptr i32 %v3_1000ab78 to i8*
  store i8 %v3_1000ab70, i8* %v4_1000ab78, align 1
  %v0_1000ab7c = load i32, i32* @r11, align 4
  %v1_1000ab7c = add i32 %v0_1000ab7c, 1
  store i32 %v1_1000ab7c, i32* @r11, align 4
  %v0_1000ab80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab80 = add i32 %v0_1000ab80, -1
  store i32 %v1_1000ab80, i32* %ctr.global-to-local, align 4
  %v2_1000ab80 = icmp eq i32 %v1_1000ab80, 0
  br i1 %v2_1000ab80, label %dec_label_pc_1000ab84, label %dec_label_pc_1000ab70.dec_label_pc_1000ab70_crit_edge

dec_label_pc_1000ab70.dec_label_pc_1000ab70_crit_edge: ; preds = %dec_label_pc_1000ab70
  %v0_1000ab70.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ab70

dec_label_pc_1000ab84:                            ; preds = %dec_label_pc_1000ab70
  %v1_1000ab84 = call i32 @__asm_rlwinm.(i32 %v2_1000ab6c, i32 29, i32 3, i32 31)
  store i32 %v1_1000ab84, i32* %r9.global-to-local, align 4
  %v4_1000ab84 = icmp eq i32 %v1_1000ab84, 0
  br i1 %v4_1000ab84, label %dec_label_pc_1000ab28, label %dec_label_pc_1000ab84.dec_label_pc_1000ab10_crit_edge

dec_label_pc_1000ab84.dec_label_pc_1000ab10_crit_edge: ; preds = %dec_label_pc_1000ab84
  %v1_1000ab1c.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000ab10

dec_label_pc_1000ab90:                            ; preds = %dec_label_pc_1000ab54.dec_label_pc_1000ab54_crit_edge, %dec_label_pc_1000ab40
  %v0_1000ab90 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ab90

; uselistorder directives
  uselistorder i32 %v1_1000ab84, { 1, 2, 0 }
  uselistorder i32 %v1_1000ab80, { 1, 0 }
  uselistorder i32 %v1_1000ab7c, { 1, 0 }
  uselistorder i32 %v0_1000ab70, { 1, 0 }
  uselistorder i32 %v2_1000ab6c, { 2, 1, 0 }
  uselistorder i32 %v1_1000ab5c, { 1, 0 }
  uselistorder i32 %v3_1000ab58, { 1, 2, 0 }
  uselistorder i32 %v1_1000ab28, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000ab24, { 1, 0 }
  uselistorder i32 %v2_1000ab20, { 1, 2, 0 }
  uselistorder i32 %v1_1000ab08, { 1, 0 }
  uselistorder i32 %v1_1000ab00, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 30, 31, 26, 28, 27, 29, 3, 4, 34, 35, 32, 33, 36, 37, 24, 25, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 18, 19, 22, 23, 2 }
  uselistorder label %dec_label_pc_1000ab54.dec_label_pc_1000ab54_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab40, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab28, { 1, 0, 2 }
}

define i32 @function_1000ab94(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000ab94:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268479408, i32* @lr, align 4
  %v0_1000abac = call i32 @function_1000aaf8()
  %v0_1000abb4 = load i32, i32* @r28, align 4
  %v1_1000abb4 = load i32, i32* @r29, align 4
  %v2_1000abb4 = add i32 %v1_1000abb4, %v0_1000abb4
  ret i32 %v2_1000abb4

; uselistorder directives
  uselistorder i32* @r28, { 7, 8, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 68, 69, 70, 71, 72, 73, 290, 291, 292, 293, 294, 2, 43, 44, 45, 6, 46, 254, 255, 256, 257, 258, 259, 260, 261, 262, 276, 277, 278, 279, 9, 10, 11, 12, 13, 74, 75, 14, 15, 16, 17, 18, 25, 26, 27, 28, 19, 3, 20, 21, 22, 23, 24, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 76, 77, 78, 79, 80, 81, 82, 4, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 280, 281, 283, 284, 5, 285, 286, 287, 288, 289 }
}

define i32 @function_1000abc8(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000abc8:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000abc8 = icmp eq i8* %arg1, null
  br i1 %v3_1000abc8, label %dec_label_pc_1000ac80, label %dec_label_pc_1000abd0

dec_label_pc_1000abd0:                            ; preds = %dec_label_pc_1000abc8
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000abe4.pre = load i32, i32* bitcast (i32** @global_var_1001b73c.301 to i32*), align 4
  br label %dec_label_pc_1000abe0

dec_label_pc_1000abe0:                            ; preds = %dec_label_pc_1000abd0, %dec_label_pc_1000ac58
  %v0_1000ac58 = phi i32 [ 0, %dec_label_pc_1000abd0 ], [ %v2_1000ac60, %dec_label_pc_1000ac58 ]
  %v0_1000ac5c = phi i32 [ 1, %dec_label_pc_1000abd0 ], [ %v1_1000ac5c, %dec_label_pc_1000ac58 ]
  %v0_1000abe0 = phi i32 [ %tmp, %dec_label_pc_1000abd0 ], [ %v0_1000abe03, %dec_label_pc_1000ac58 ]
  %v1_1000abe0 = inttoptr i32 %v0_1000abe0 to i8*
  %v2_1000abe0 = load i8, i8* %v1_1000abe0, align 1
  %v3_1000abe0 = zext i8 %v2_1000abe0 to i32
  %v1_1000abe8 = mul nuw nsw i32 %v3_1000abe0, 2
  %v2_1000abec = add i32 %v1_1000abe8, %v3_1000abe4.pre
  %v3_1000abec = inttoptr i32 %v2_1000abec to i16*
  %v4_1000abec = load i16, i16* %v3_1000abec, align 2
  %v1_1000abf0 = and i16 %v4_1000abec, 8
  %v3_1000abf0 = icmp eq i16 %v1_1000abf0, 0
  br i1 %v3_1000abf0, label %dec_label_pc_1000ac80, label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abe0
  br label %dec_label_pc_1000ac10

dec_label_pc_1000ac00:                            ; preds = %dec_label_pc_1000ac10
  %v1_1000ac14 = mul i32 %v1_1000ac60, 10
  %v2_1000ac1c = add i32 %v3_1000ac10, %v1_1000ac14
  %v1_1000ac00 = add i32 %v2_1000ac1c, -48
  %v1_1000ac04 = add i32 %v0_1000ac48, 1
  %v2_1000ac08 = icmp sgt i32 %v1_1000ac00, 255
  br i1 %v2_1000ac08, label %dec_label_pc_1000ac80, label %dec_label_pc_1000ac10

dec_label_pc_1000ac10:                            ; preds = %dec_label_pc_1000ac00, %dec_label_pc_1000abf8
  %v1_1000ac60 = phi i32 [ %v1_1000ac00, %dec_label_pc_1000ac00 ], [ 0, %dec_label_pc_1000abf8 ]
  %v0_1000ac48 = phi i32 [ %v1_1000ac04, %dec_label_pc_1000ac00 ], [ %v0_1000abe0, %dec_label_pc_1000abf8 ]
  %v1_1000ac10 = inttoptr i32 %v0_1000ac48 to i8*
  %v2_1000ac10 = load i8, i8* %v1_1000ac10, align 1
  %v3_1000ac10 = zext i8 %v2_1000ac10 to i32
  %v1_1000ac18 = mul nuw nsw i32 %v3_1000ac10, 2
  %v2_1000ac20 = add i32 %v1_1000ac18, %v3_1000abe4.pre
  %v3_1000ac20 = inttoptr i32 %v2_1000ac20 to i16*
  %v4_1000ac20 = load i16, i16* %v3_1000ac20, align 2
  %v5_1000ac20 = zext i16 %v4_1000ac20 to i32
  %v1_1000ac24 = and i32 %v5_1000ac20, 8
  %v3_1000ac24 = icmp eq i32 %v1_1000ac24, 0
  br i1 %v3_1000ac24, label %dec_label_pc_1000ac2c, label %dec_label_pc_1000ac00

dec_label_pc_1000ac2c:                            ; preds = %dec_label_pc_1000ac10
  %v2_1000ac2c = icmp sgt i32 %v0_1000ac5c, 3
  br i1 %v2_1000ac2c, label %dec_label_pc_1000ac44, label %dec_label_pc_1000ac34

dec_label_pc_1000ac34:                            ; preds = %dec_label_pc_1000ac2c
  %v3_1000ac34 = icmp eq i8 %v2_1000ac10, 46
  br i1 %v3_1000ac34, label %dec_label_pc_1000ac3c, label %dec_label_pc_1000ac80

dec_label_pc_1000ac3c:                            ; preds = %dec_label_pc_1000ac34
  %v1_1000ac3c = add i32 %v0_1000ac48, 1
  br label %dec_label_pc_1000ac58

dec_label_pc_1000ac44:                            ; preds = %dec_label_pc_1000ac2c
  %v3_1000ac44 = icmp eq i8 %v2_1000ac10, 0
  %v1_1000ac48 = add i32 %v0_1000ac48, 1
  br i1 %v3_1000ac44, label %dec_label_pc_1000ac58, label %dec_label_pc_1000ac50

dec_label_pc_1000ac50:                            ; preds = %dec_label_pc_1000ac44
  %v1_1000ac50 = and i32 %v5_1000ac20, 32
  %v3_1000ac50 = icmp eq i32 %v1_1000ac50, 0
  br i1 %v3_1000ac50, label %dec_label_pc_1000ac80, label %dec_label_pc_1000ac58

dec_label_pc_1000ac58:                            ; preds = %dec_label_pc_1000ac50, %dec_label_pc_1000ac44, %dec_label_pc_1000ac3c
  %v0_1000abe03 = phi i32 [ %v1_1000ac48, %dec_label_pc_1000ac50 ], [ %v1_1000ac48, %dec_label_pc_1000ac44 ], [ %v1_1000ac3c, %dec_label_pc_1000ac3c ]
  %v1_1000ac58 = mul i32 %v0_1000ac58, 256
  %v1_1000ac5c = add nuw nsw i32 %v0_1000ac5c, 1
  %v2_1000ac60 = or i32 %v1_1000ac60, %v1_1000ac58
  store i32 %v2_1000ac60, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000ac5c, 5
  br i1 %tmp10, label %dec_label_pc_1000abe0, label %dec_label_pc_1000ac6c

dec_label_pc_1000ac6c:                            ; preds = %dec_label_pc_1000ac58
  %v0_1000ac6c = load i32, i32* @r4, align 4
  %v3_1000ac6c = icmp eq i32 %v0_1000ac6c, 0
  %v0_1000ac74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ac6c, i32 %v0_1000ac74)
  %v0_1000ac78 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ac78 = load i32, i32* @r4, align 4
  %v2_1000ac78 = inttoptr i32 %v1_1000ac78 to i32*
  store i32 %v0_1000ac78, i32* %v2_1000ac78, align 4
  ret i32 1

dec_label_pc_1000ac80:                            ; preds = %dec_label_pc_1000ac34, %dec_label_pc_1000ac50, %dec_label_pc_1000abe0, %dec_label_pc_1000ac00, %dec_label_pc_1000abc8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000ac60, { 1, 0 }
  uselistorder i32 %v1_1000ac5c, { 1, 0 }
  uselistorder i32 %v0_1000ac48, { 0, 1, 3, 2 }
  uselistorder i32 5, { 20, 21, 22, 35, 23, 24, 36, 37, 2, 1, 0, 38, 3, 4, 39, 25, 26, 27, 28, 40, 5, 7, 41, 29, 42, 6, 30, 43, 8, 31, 44, 9, 32, 45, 10, 12, 46, 11, 47, 33, 48, 14, 49, 13, 34, 50, 16, 51, 15, 19, 52, 18, 53, 17, 54, 55, 56, 57, 58 }
  uselistorder i8 0, { 3, 7, 0, 8, 9, 5, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 4, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i8 46, { 1, 2, 0 }
  uselistorder i32 8, { 119, 3, 133, 134, 56, 38, 39, 57, 58, 59, 60, 61, 62, 137, 138, 11, 135, 136, 12, 123, 122, 120, 121, 104, 105, 106, 124, 125, 126, 127, 128, 129, 4, 40, 41, 42, 5, 139, 6, 63, 64, 65, 66, 67, 68, 28, 29, 43, 30, 31, 44, 32, 33, 45, 46, 7, 8, 9, 47, 48, 50, 51, 34, 52, 15, 53, 55, 54, 49, 89, 69, 70, 71, 72, 73, 74, 75, 35, 76, 77, 78, 79, 80, 81, 82, 83, 36, 84, 85, 86, 87, 88, 90, 16, 91, 92, 93, 94, 95, 13, 96, 97, 98, 99, 14, 100, 101, 102, 103, 17, 107, 18, 108, 19, 109, 20, 110, 21, 111, 22, 112, 23, 113, 114, 24, 115, 25, 116, 26, 117, 27, 118, 0, 1, 10, 130, 131, 37, 132, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 68, 30, 9, 29, 2, 3, 6, 5, 0, 10, 17, 18, 19, 20, 21, 11, 22, 23, 24, 12, 13, 25, 26, 27, 4, 28, 14, 1, 15, 7, 31, 32, 33, 34, 35, 8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 16, 67 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 8, 7, 3, 9, 10, 11, 12 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac80, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000abe0, { 1, 0 }
}

define i32 @function_1000ac88(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ac88:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000ac8c = load i32, i32* @lr, align 4
  store i32 %v0_1000ac8c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000ac98 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000aca8 = add i32 %tmp, 4
  store i32 %v1_1000aca8, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000acb0 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000acb0, i32* @r3, align 4
  br i1 %v3_1000ac98, label %dec_label_pc_1000acd8, label %dec_label_pc_1000acb8

dec_label_pc_1000acb8:                            ; preds = %dec_label_pc_1000ac88
  %v2_1000acb8 = load i32, i32* %arg2, align 4
  store i32 %v2_1000acb8, i32* %r0.global-to-local, align 4
  store i32 268479684, i32* @lr, align 4
  %v0_1000acc0 = call i32 @function_1000aaf8()
  %v0_1000acc4 = load i32, i32* @r31, align 4
  %v1_1000acc4 = add i32 %v0_1000acc4, 132
  %v2_1000acc4 = inttoptr i32 %v1_1000acc4 to i32*
  %v3_1000acc4 = load i32, i32* %v2_1000acc4, align 4
  store i32 %v3_1000acc4, i32* %r0.global-to-local, align 4
  %v1_1000acd0 = add i32 %v0_1000acc4, 136
  %v2_1000acd0 = inttoptr i32 %v1_1000acd0 to i32*
  %v3_1000acd0 = load i32, i32* %v2_1000acd0, align 4
  store i32 %v3_1000acd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000acd8

dec_label_pc_1000acd8:                            ; preds = %dec_label_pc_1000ac88, %dec_label_pc_1000acb8
  store i32 268479736, i32* @lr, align 4
  %v0_1000acf4 = call i32 @function_1000aeec()
  %v0_1000acf8 = load i32, i32* @r30, align 4
  %v3_1000acf8 = icmp eq i32 %v0_1000acf8, 0
  store i32 %v0_1000acf4, i32* @r31, align 4
  br i1 %v3_1000acf8, label %dec_label_pc_1000ad34, label %dec_label_pc_1000ad08

dec_label_pc_1000ad08:                            ; preds = %dec_label_pc_1000acd8
  %v1_1000ad00 = icmp slt i32 %v0_1000acf4, 0
  %v1_1000ad08 = add i32 %v0_1000acf8, 4
  store i32 %v1_1000ad08, i32* @r3, align 4
  %v2_1000ad0c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000ad0c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000ad00, label %dec_label_pc_1000ad34, label %dec_label_pc_1000ad18

dec_label_pc_1000ad18:                            ; preds = %dec_label_pc_1000ad08
  %v3_1000ad18 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000ad18, i32* %r0.global-to-local, align 4
  %v2_1000ad1c = inttoptr i32 %v0_1000acf8 to i32*
  store i32 %v3_1000ad18, i32* %v2_1000ad1c, align 4
  store i32 268479780, i32* @lr, align 4
  %v0_1000ad20 = call i32 @function_1000aaf8()
  %v1_1000ad2c = load i32, i32* @r30, align 4
  %v2_1000ad2c = add i32 %v1_1000ad2c, 136
  %v3_1000ad2c = inttoptr i32 %v2_1000ad2c to i32*
  %v0_1000ad30 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ad30 = load i32, i32* @r30, align 4
  %v2_1000ad30 = add i32 %v1_1000ad30, 132
  %v3_1000ad30 = inttoptr i32 %v2_1000ad30 to i32*
  store i32 %v0_1000ad30, i32* %v3_1000ad30, align 4
  %v0_1000ad38.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ad34

dec_label_pc_1000ad34:                            ; preds = %dec_label_pc_1000ad08, %dec_label_pc_1000acd8, %dec_label_pc_1000ad18
  %v0_1000ad38 = phi i32 [ %v0_1000acf4, %dec_label_pc_1000ad08 ], [ %v0_1000acf4, %dec_label_pc_1000acd8 ], [ %v0_1000ad38.pre, %dec_label_pc_1000ad18 ]
  store i32 %v0_1000ac8c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ad38

; uselistorder directives
  uselistorder i32 %v0_1000acf4, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000aaf8, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 145, 146, 147, 148, 0, 127, 1, 31, 32, 33, 149, 152, 150, 151, 128, 129, 130, 122, 123, 124, 125, 126, 131, 132, 136, 133, 134, 135, 7, 8, 9, 10, 11, 12, 13, 2, 14, 34, 3, 15, 22, 16, 17, 18, 4, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 5, 42, 43, 6, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 138, 139, 137, 140, 141, 142, 143, 144 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r31, { 1, 280, 281, 282, 257, 2, 258, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 289, 290, 283, 7, 284, 285, 286, 287, 288, 65, 66, 259, 260, 261, 262, 263, 264, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 267, 271, 268, 269, 270, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 85, 3, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 18, 19, 20, 21, 100, 101, 102, 103, 104, 22, 23, 24, 25, 26, 27, 37, 38, 39, 40, 41, 42, 43, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 4, 67, 68, 69, 70, 71, 72, 73, 74, 105, 106, 107, 108, 109, 110, 111, 112, 113, 0, 5, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 6, 272, 273, 274, 275, 276, 277, 278, 279 }
  uselistorder label %dec_label_pc_1000ad34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000acd8, { 1, 0 }
}

define i32 @function_1000ad4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ad80.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000ad64 = call i32 @function_1000a0a4()
  %v2_1000ad6c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000ad6c, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000ad8433 = add i32 %v2_1000ad6c, 124
  %v4_1000ad8434 = inttoptr i32 %v3_1000ad8433 to i32*
  store i32 0, i32* %v4_1000ad8434, align 4
  %v0_1000ad8835 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ad8836 = add i32 %v0_1000ad8835, -1
  store i32 %v1_1000ad8836, i32* %r9.global-to-local, align 4
  %v0_1000ad8c37 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ad8c38 = add i32 %v0_1000ad8c37, -1
  store i32 %v1_1000ad8c38, i32* %ctr.global-to-local, align 4
  %v2_1000ad8c39 = icmp eq i32 %v1_1000ad8c38, 0
  br i1 %v2_1000ad8c39, label %dec_label_pc_1000ad90, label %dec_label_pc_1000ad80.dec_label_pc_1000ad80_crit_edge

dec_label_pc_1000ad80.dec_label_pc_1000ad80_crit_edge: ; preds = %dec_label_pc_1000ad80.lr.ph, %dec_label_pc_1000ad80.dec_label_pc_1000ad80_crit_edge
  %v1_1000ad8840 = phi i32 [ %v1_1000ad88, %dec_label_pc_1000ad80.dec_label_pc_1000ad80_crit_edge ], [ %v1_1000ad8836, %dec_label_pc_1000ad80.lr.ph ]
  %v0_1000ad84.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ad84.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ad80 = mul i32 %v1_1000ad8840, 4
  %v3_1000ad84 = add i32 %v1_1000ad80, %v1_1000ad84.pre
  %v4_1000ad84 = inttoptr i32 %v3_1000ad84 to i32*
  store i32 %v0_1000ad84.pre, i32* %v4_1000ad84, align 4
  %v0_1000ad88 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ad88 = add i32 %v0_1000ad88, -1
  store i32 %v1_1000ad88, i32* %r9.global-to-local, align 4
  %v0_1000ad8c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ad8c = add i32 %v0_1000ad8c, -1
  store i32 %v1_1000ad8c, i32* %ctr.global-to-local, align 4
  %v2_1000ad8c = icmp eq i32 %v1_1000ad8c, 0
  br i1 %v2_1000ad8c, label %dec_label_pc_1000ad90, label %dec_label_pc_1000ad80.dec_label_pc_1000ad80_crit_edge

dec_label_pc_1000ad90:                            ; preds = %dec_label_pc_1000ad80.dec_label_pc_1000ad80_crit_edge, %dec_label_pc_1000ad80.lr.ph
  store i32 %v2_1000ad6c, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000ad98 = call i32 @function_100094f8()
  %v3_1000ad9c = icmp eq i32 %v0_1000ad98, 0
  br i1 %v3_1000ad9c, label %dec_label_pc_1000ada4, label %dec_label_pc_1000adb4

dec_label_pc_1000ada4:                            ; preds = %dec_label_pc_1000ad90
  store i32 268479924, i32* @lr, align 4
  %v3_1000adb0 = call i32 @function_10008980(i32 1, i32 %v2_1000ad6c, i32 0)
  br label %dec_label_pc_1000adb4

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ad90, %dec_label_pc_1000ada4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000adb8 = load i32, i32* @global_var_1001b7a4.322, align 4
  %v3_1000adbc = icmp eq i32 %v3_1000adb8, 0
  br i1 %v3_1000adbc, label %dec_label_pc_1000adc4, label %dec_label_pc_1000adec

dec_label_pc_1000adc4:                            ; preds = %dec_label_pc_1000adb4
  store i32 1, i32* @global_var_1001b7a4.322, align 4
  br label %dec_label_pc_1000adcc

dec_label_pc_1000adcc:                            ; preds = %dec_label_pc_1000ae48, %dec_label_pc_1000adc4
  store i32 ptrtoint (i32* @global_var_1001b708.320 to i32), i32* %r29.global-to-local, align 4
  %v0_1000add8 = call i32 @function_1000a0a4()
  store i32 268479972, i32* @lr, align 4
  %v1_1000ade0 = call i32 @function_1000af34(i32 6)
  %v0_1000ade8 = call i32 @function_1000a0a4()
  %v3_1000adf0.pre = load i32, i32* @global_var_1001b7a4.322, align 4
  br label %dec_label_pc_1000adec

dec_label_pc_1000adec:                            ; preds = %dec_label_pc_1000adb4, %dec_label_pc_1000adcc
  %v0_1000ae64 = phi i32 [ %v3_1000adb8, %dec_label_pc_1000adb4 ], [ %v3_1000adf0.pre, %dec_label_pc_1000adcc ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000adf4 = icmp eq i32 %v0_1000ae64, 1
  br i1 %v3_1000adf4, label %dec_label_pc_1000ae34.lr.ph, label %dec_label_pc_1000ae64

dec_label_pc_1000ae34.lr.ph:                      ; preds = %dec_label_pc_1000adec
  %v2_1000ae00 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001b7a4.322, align 4
  store i32 ptrtoint (i32* @global_var_1000ae14.324 to i32), i32* @lr, align 4
  %v3_1000ae10 = call i32 @function_10008e2c(i32 %v2_1000ae00, i32 0, i32 140)
  store i32 %v2_1000ad6c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000ad8433, i32* %r9.global-to-local, align 4
  %v2_1000ae3c25 = add i32 %v2_1000ad6c, 256
  %v3_1000ae3c26 = inttoptr i32 %v2_1000ae3c25 to i32*
  store i32 -1, i32* %v3_1000ae3c26, align 4
  %v0_1000ae4027 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae4028 = add i32 %v0_1000ae4027, -1
  store i32 %v1_1000ae4028, i32* %r11.global-to-local, align 4
  %v0_1000ae4429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae4430 = add i32 %v0_1000ae4429, -1
  store i32 %v1_1000ae4430, i32* %ctr.global-to-local, align 4
  %v2_1000ae4431 = icmp eq i32 %v1_1000ae4430, 0
  br i1 %v2_1000ae4431, label %dec_label_pc_1000ae48, label %dec_label_pc_1000ae34.dec_label_pc_1000ae34_crit_edge

dec_label_pc_1000ae34.dec_label_pc_1000ae34_crit_edge: ; preds = %dec_label_pc_1000ae34.lr.ph, %dec_label_pc_1000ae34.dec_label_pc_1000ae34_crit_edge
  %v1_1000ae4032 = phi i32 [ %v1_1000ae40, %dec_label_pc_1000ae34.dec_label_pc_1000ae34_crit_edge ], [ %v1_1000ae4028, %dec_label_pc_1000ae34.lr.ph ]
  %v1_1000ae38.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000ae3c.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ae34 = mul i32 %v1_1000ae4032, 4
  %v2_1000ae38 = add i32 %v1_1000ae34, %v1_1000ae38.pre
  store i32 %v2_1000ae38, i32* %r9.global-to-local, align 4
  %v2_1000ae3c = add i32 %v2_1000ae38, 132
  %v3_1000ae3c = inttoptr i32 %v2_1000ae3c to i32*
  store i32 %v0_1000ae3c.pre, i32* %v3_1000ae3c, align 4
  %v0_1000ae40 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae40 = add i32 %v0_1000ae40, -1
  store i32 %v1_1000ae40, i32* %r11.global-to-local, align 4
  %v0_1000ae44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae44 = add i32 %v0_1000ae44, -1
  store i32 %v1_1000ae44, i32* %ctr.global-to-local, align 4
  %v2_1000ae44 = icmp eq i32 %v1_1000ae44, 0
  br i1 %v2_1000ae44, label %dec_label_pc_1000ae48, label %dec_label_pc_1000ae34.dec_label_pc_1000ae34_crit_edge

dec_label_pc_1000ae48:                            ; preds = %dec_label_pc_1000ae34.dec_label_pc_1000ae34_crit_edge, %dec_label_pc_1000ae34.lr.ph
  store i32 268480096, i32* @lr, align 4
  %v4_1000ae5c = call i32 @function_1000ac88(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000adcc

dec_label_pc_1000ae64:                            ; preds = %dec_label_pc_1000adec
  %v3_1000ae64 = icmp eq i32 %v0_1000ae64, 2
  br i1 %v3_1000ae64, label %dec_label_pc_1000ae6c, label %dec_label_pc_1000ae78

dec_label_pc_1000ae6c:                            ; preds = %dec_label_pc_1000ae64
  store i32 3, i32* @global_var_1001b7a4.322, align 4
  br label %dec_label_pc_1000ae78

dec_label_pc_1000ae78:                            ; preds = %dec_label_pc_1000ae64, %dec_label_pc_1000ae6c
  %v3_1000ae78 = phi i32 [ %v0_1000ae64, %dec_label_pc_1000ae64 ], [ 3, %dec_label_pc_1000ae6c ]
  %v1_1000ae80 = icmp ne i32 %v3_1000ae78, 3
  call void @__pseudo_cond_branch(i1 %v1_1000ae80, i32 268480148)
  store i32 4, i32* @global_var_1001b7a4.322, align 4
  %v1_1000ae90 = call i32 @function_1000a444(i32 127)
  ret i32 %v1_1000ae90

; uselistorder directives
  uselistorder i32 %v1_1000ae44, { 1, 0 }
  uselistorder i32 %v1_1000ae40, { 1, 0 }
  uselistorder i32 %v1_1000ad8c, { 1, 0 }
  uselistorder i32 %v1_1000ad88, { 1, 0 }
  uselistorder i32 %v2_1000ad6c, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 3, 5, 6, 8, 7, 2, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000a444, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 5, 30, 93, 96, 97, 98, 99, 91, 94, 95, 47, 101, 100, 7, 102, 103, 104, 66, 67, 1, 6, 31, 32, 48, 49, 50, 51, 2, 53, 54, 55, 56, 57, 8, 58, 33, 59, 9, 52, 90, 34, 60, 61, 63, 62, 64, 35, 36, 37, 65, 3, 68, 69, 70, 71, 10, 38, 11, 72, 73, 13, 39, 12, 74, 75, 40, 76, 14, 15, 16, 77, 78, 41, 79, 17, 18, 19, 80, 21, 42, 4, 20, 81, 23, 82, 43, 22, 83, 84, 85, 24, 44, 25, 86, 87, 26, 45, 27, 88, 89, 28, 46, 29, 92 }
  uselistorder i32 (i32, i32*, i32)* @function_1000ac88, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 70, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 76, 77, 78, 12, 71, 13, 80, 14, 15, 16, 17, 18, 81, 19, 74, 82, 75, 83, 79, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 72, 31, 32, 33, 34, 35, 36, 37, 38, 73, 39, 40, 41, 42, 43, 44, 45, 46, 47, 84, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 (i32, i32, i32)* @function_10008e2c, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 196, 37, 0, 1, 55, 56, 197, 57, 198, 58, 199, 27, 2, 3, 4, 38, 97, 109, 200, 98, 28, 59, 39, 60, 30, 29, 31, 61, 62, 99, 41, 40, 100, 101, 63, 102, 5, 6, 103, 104, 35, 105, 42, 106, 64, 188, 68, 67, 66, 65, 43, 7, 8, 107, 108, 69, 44, 70, 71, 73, 72, 74, 46, 45, 32, 36, 110, 173, 9, 33, 174, 10, 111, 112, 113, 114, 115, 116, 117, 11, 12, 13, 14, 15, 16, 75, 118, 47, 119, 120, 121, 122, 123, 17, 18, 19, 20, 21, 22, 76, 124, 48, 125, 126, 127, 128, 129, 77, 131, 130, 23, 24, 78, 132, 49, 133, 134, 135, 136, 137, 79, 139, 138, 25, 26, 80, 140, 50, 141, 142, 143, 144, 145, 146, 147, 81, 148, 149, 51, 150, 151, 152, 153, 154, 83, 155, 82, 156, 157, 158, 159, 161, 162, 163, 160, 84, 164, 52, 165, 166, 167, 85, 86, 169, 170, 171, 168, 87, 172, 53, 175, 176, 177, 178, 179, 180, 181, 88, 182, 54, 89, 90, 183, 184, 91, 92, 185, 186, 187, 93, 94, 189, 190, 95, 96, 191, 192, 193, 194, 34, 195 }
  uselistorder i32* @global_var_1001b7a4.322, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 39, 40, 0, 41, 2, 1, 3, 38, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 6, 30, 31, 4, 32, 5, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32)* @function_10008980, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_100094f8, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 73, 74, 75, 70, 71, 76, 32, 1, 33, 8, 34, 83, 82, 4, 5, 77, 79, 80, 69, 78, 9, 6, 72, 10, 11, 12, 7, 35, 36, 81, 13, 14, 15, 37, 19, 20, 21, 16, 17, 18, 3, 64, 65, 66, 67, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 0, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68 }
  uselistorder i32 6, { 12, 13, 61, 1, 14, 15, 26, 16, 17, 27, 18, 19, 28, 29, 30, 2, 31, 0, 32, 33, 34, 35, 20, 3, 36, 37, 21, 4, 38, 22, 39, 23, 40, 41, 42, 5, 43, 44, 45, 6, 46, 47, 48, 49, 50, 24, 7, 51, 52, 53, 54, 55, 25, 8, 56, 57, 58, 9, 10, 11, 59, 60 }
  uselistorder i32 4, { 126, 0, 1, 356, 357, 358, 359, 360, 66, 67, 361, 362, 127, 363, 364, 2, 188, 189, 147, 148, 190, 191, 193, 365, 372, 3, 4, 5, 6, 7, 335, 337, 336, 333, 334, 304, 305, 306, 307, 338, 339, 340, 341, 342, 343, 344, 345, 346, 8, 149, 9, 75, 150, 151, 366, 367, 368, 128, 369, 370, 371, 10, 192, 129, 11, 194, 195, 196, 197, 198, 130, 131, 152, 132, 153, 154, 155, 78, 74, 156, 157, 158, 159, 12, 161, 162, 168, 169, 160, 170, 69, 171, 68, 76, 173, 77, 174, 175, 176, 177, 178, 172, 163, 164, 165, 166, 167, 297, 179, 133, 80, 79, 81, 180, 181, 182, 70, 183, 71, 184, 185, 186, 187, 72, 199, 200, 13, 201, 202, 203, 82, 204, 205, 14, 15, 83, 206, 84, 86, 85, 207, 208, 16, 209, 210, 91, 211, 212, 17, 18, 90, 213, 87, 89, 88, 214, 215, 216, 217, 19, 218, 219, 220, 221, 134, 222, 20, 223, 224, 21, 225, 93, 226, 92, 135, 227, 228, 229, 230, 22, 231, 232, 233, 234, 136, 235, 23, 236, 237, 24, 238, 95, 239, 94, 137, 240, 241, 242, 25, 243, 244, 245, 246, 100, 247, 248, 26, 27, 99, 249, 250, 28, 96, 98, 97, 251, 252, 29, 253, 254, 105, 255, 30, 31, 256, 104, 257, 101, 258, 103, 102, 259, 260, 261, 262, 32, 264, 265, 138, 266, 267, 268, 110, 269, 33, 34, 139, 263, 109, 106, 108, 107, 270, 271, 272, 273, 274, 140, 141, 35, 276, 277, 142, 278, 279, 280, 115, 281, 36, 37, 143, 275, 114, 111, 113, 112, 282, 283, 284, 121, 38, 39, 285, 286, 40, 287, 288, 289, 120, 41, 42, 116, 290, 117, 119, 118, 291, 292, 293, 294, 295, 296, 144, 123, 122, 298, 299, 300, 301, 302, 303, 145, 125, 124, 43, 308, 309, 44, 45, 310, 311, 46, 47, 312, 313, 48, 49, 314, 315, 50, 51, 316, 317, 52, 53, 318, 319, 54, 320, 55, 321, 322, 56, 57, 323, 324, 58, 59, 325, 326, 60, 61, 327, 328, 62, 63, 329, 330, 64, 331, 332, 347, 348, 349, 350, 351, 352, 73, 353, 65, 354, 355, 146 }
  uselistorder i32 32, { 15, 16, 42, 31, 32, 22, 23, 11, 12, 29, 30, 24, 0, 1, 2, 13, 33, 14, 34, 3, 4, 5, 6, 18, 25, 19, 26, 17, 7, 8, 9, 10, 20, 21, 27, 28, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 31, { 1, 2, 26, 27, 15, 28, 29, 3, 4, 0, 5, 30, 31, 16, 17, 18, 19, 22, 23, 20, 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25 }
  uselistorder i32 ()* @function_1000a0a4, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000ae78, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae34.dec_label_pc_1000ae34_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000adec, { 1, 0 }
  uselistorder label %dec_label_pc_1000adb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad80.dec_label_pc_1000ad80_crit_edge, { 1, 0 }
}

define i32 @function_1000ae9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ae9c:
  %v1_1000ae9c = add i32 %arg1, 28
  %v2_1000ae9c = inttoptr i32 %v1_1000ae9c to i32*
  %v3_1000ae9c = load i32, i32* %v2_1000ae9c, align 4
  store i32 %v3_1000ae9c, i32* @global_var_1001b7a8.325, align 4
  %v1_1000aeac = add i32 %arg1, 44
  %v2_1000aeac = inttoptr i32 %v1_1000aeac to i32*
  %v3_1000aeac = load i32, i32* %v2_1000aeac, align 4
  store i32 %v3_1000aeac, i32* @global_var_1001b7ac.326, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 43, 14, 15, 5, 6, 16, 13, 42, 7, 9, 10, 11, 12, 8, 3, 4, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 33, 34, 35, 1, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000aeb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aeb8:
  store i32 %arg1, i32* @global_var_1001b7b0.319, align 4
  %v0_1000aee0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000aee0)
  %v1_1000aee8 = call i32 @function_1000af64(i32 12)
  ret i32 %v1_1000aee8

; uselistorder directives
  uselistorder i32 12, { 16, 44, 45, 24, 25, 46, 47, 48, 49, 103, 104, 105, 106, 6, 101, 107, 0, 1, 7, 102, 5, 17, 18, 8, 26, 50, 51, 19, 52, 53, 54, 20, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 9, 39, 22, 23, 40, 10, 41, 43, 42, 34, 97, 55, 56, 57, 58, 59, 60, 11, 61, 62, 63, 64, 65, 66, 67, 12, 68, 69, 70, 71, 72, 73, 74, 75, 76, 13, 77, 78, 79, 80, 81, 82, 83, 84, 85, 14, 86, 15, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001b7b0.319, { 1, 0, 2 }
}

define i32 @function_1000aeec() local_unnamed_addr {
dec_label_pc_1000aeec:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000af04 = call i32 @__asm_mfcr()
  %v1_1000af08 = and i32 %v0_1000af04, 268435456
  %v3_1000af08 = icmp eq i32 %v1_1000af08, 0
  store i32 %v0_1000af04, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af08, label %dec_label_pc_1000af20, label %dec_label_pc_1000af14

dec_label_pc_1000af14:                            ; preds = %dec_label_pc_1000aeec
  %v0_1000af14 = call i32 @function_10008d44()
  %v0_1000af18 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af18 = inttoptr i32 %v0_1000af14 to i32*
  store i32 %v0_1000af18, i32* %v2_1000af18, align 4
  br label %dec_label_pc_1000af20

dec_label_pc_1000af20:                            ; preds = %dec_label_pc_1000aeec, %dec_label_pc_1000af14
  %v0_1000af30 = phi i32 [ %v0_1000af04, %dec_label_pc_1000aeec ], [ -1, %dec_label_pc_1000af14 ]
  ret i32 %v0_1000af30

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 36, 51, 27, 28, 35, 37, 29, 52, 41, 39, 42, 40, 38, 53, 54, 30, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 47, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 46, 40, 32, 3, 45, 44, 36, 30, 43, 2, 14, 16, 13, 15, 21, 1, 0, 42, 41, 35, 34, 33, 31, 29, 28, 27, 26, 25, 24, 23, 22, 20, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000af20, { 1, 0 }
}

define i32 @function_1000af34(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af34:
  %v0_1000af34 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268480332, i32* @lr, align 4
  %v0_1000af48 = call i32 @function_100086b8()
  %v0_1000af50 = load i32, i32* @r29, align 4
  store i32 %v0_1000af34, i32* @lr, align 4
  %v2_1000af60 = call i32 @function_10008748(i32 %v0_1000af48, i32 %v0_1000af50)
  ret i32 %v2_1000af60

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008748, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_100086b8, { 0, 3, 2, 1 }
}

define i32 @function_1000af64(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af64:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000af78 = call i32 @function_10008d44()
  %v0_1000af7c = load i32, i32* @r29, align 4
  %v2_1000af7c = inttoptr i32 %v0_1000af78 to i32*
  store i32 %v0_1000af7c, i32* %v2_1000af7c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10008d44, { 24, 15, 52, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 5, 7, 6, 37, 36, 21, 22, 51, 50, 49, 48, 30, 29, 28, 47, 35, 26, 1, 0, 46, 45, 27, 25, 44, 4, 17, 19, 16, 18, 23, 3, 2, 43, 42, 41, 40, 39, 38, 20 }
  uselistorder i32* @r29, { 292, 293, 313, 314, 315, 11, 12, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 316, 317, 318, 319, 320, 0, 60, 294, 295, 296, 297, 291, 298, 1, 299, 300, 301, 302, 303, 304, 13, 14, 15, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 2, 117, 3, 118, 4, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 5, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 6, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 7, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 8, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 9, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 306, 305, 307, 308, 309, 10, 310, 311, 312 }
}

define i32 @function_1000af98(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af98:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001b5c0.307 to i32), i32* %r31.global-to-local, align 4
  %v3_1000afb4 = load i32, i32* @global_var_1001b5c0.307, align 4
  %v3_1000afb8 = icmp eq i32 %v3_1000afb4, -1
  br i1 %v3_1000afb8, label %dec_label_pc_1000afd4, label %dec_label_pc_1000afc0

dec_label_pc_1000afc0:                            ; preds = %dec_label_pc_1000af98, %dec_label_pc_1000afc0
  %v0_1000afc0 = phi i32 [ %v3_1000afc8, %dec_label_pc_1000afc0 ], [ %v3_1000afb4, %dec_label_pc_1000af98 ]
  call void @__pseudo_call(i32 %v0_1000afc0)
  %v0_1000afc8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000afc8 = add i32 %v0_1000afc8, -4
  %v2_1000afc8 = inttoptr i32 %v1_1000afc8 to i32*
  %v3_1000afc8 = load i32, i32* %v2_1000afc8, align 4
  store i32 %v1_1000afc8, i32* %r31.global-to-local, align 4
  %v3_1000afcc = icmp eq i32 %v3_1000afc8, -1
  br i1 %v3_1000afcc, label %dec_label_pc_1000afd4, label %dec_label_pc_1000afc0

dec_label_pc_1000afd4:                            ; preds = %dec_label_pc_1000afc0, %dec_label_pc_1000af98
  %v0_1000afe4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000afe4

; uselistorder directives
  uselistorder i32 %v3_1000afc8, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 133, 134, 0, 36, 89, 249, 10, 11, 12, 250, 90, 251, 8, 9, 91, 92, 13, 93, 37, 38, 242, 76, 39, 185, 40, 41, 42, 43, 44, 186, 187, 188, 189, 190, 195, 45, 262, 260, 46, 252, 253, 77, 94, 254, 16, 17, 95, 259, 14, 15, 176, 3, 78, 243, 244, 32, 135, 258, 255, 47, 136, 96, 137, 18, 19, 138, 139, 140, 35, 48, 141, 142, 74, 97, 98, 99, 100, 191, 192, 20, 21, 22, 101, 193, 194, 102, 79, 75, 196, 197, 49, 50, 51, 52, 256, 257, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 261, 66, 143, 103, 23, 198, 199, 104, 1, 105, 106, 144, 67, 68, 107, 2, 108, 24, 109, 69, 110, 25, 200, 80, 145, 111, 81, 146, 147, 148, 112, 149, 150, 70, 153, 113, 27, 114, 26, 115, 154, 116, 71, 155, 156, 157, 117, 118, 151, 152, 82, 158, 84, 159, 160, 83, 161, 162, 163, 164, 165, 85, 166, 167, 72, 168, 169, 119, 28, 120, 29, 170, 171, 172, 173, 73, 174, 175, 121, 122, 177, 178, 179, 180, 181, 182, 183, 184, 33, 34, 201, 202, 203, 204, 205, 123, 124, 206, 207, 208, 209, 210, 211, 212, 214, 213, 30, 215, 216, 218, 217, 31, 219, 220, 125, 221, 222, 126, 223, 224, 225, 226, 227, 4, 228, 5, 229, 230, 6, 231, 7, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 127, 128, 245, 129, 246, 130, 131, 247, 248, 132, 86, 87, 88 }
  uselistorder i32 1, { 76, 488, 942, 598, 599, 661, 660, 315, 311, 314, 313, 310, 312, 664, 663, 662, 12, 0, 928, 929, 930, 931, 522, 13, 943, 944, 945, 946, 493, 492, 491, 14, 15, 10, 11, 9, 108, 354, 665, 69, 70, 337, 338, 489, 490, 667, 666, 472, 471, 473, 470, 469, 474, 600, 72, 73, 75, 74, 668, 418, 335, 601, 669, 19, 17, 16, 18, 602, 544, 950, 947, 673, 672, 671, 670, 415, 412, 417, 416, 414, 413, 603, 949, 674, 802, 803, 804, 597, 805, 523, 20, 21, 22, 411, 409, 410, 23, 24, 33, 32, 31, 190, 505, 675, 483, 948, 487, 604, 605, 678, 677, 676, 461, 458, 459, 460, 457, 462, 65, 545, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 769, 692, 691, 453, 454, 694, 693, 35, 34, 36, 857, 496, 39, 38, 37, 951, 952, 451, 449, 452, 450, 464, 465, 463, 466, 467, 468, 695, 606, 696, 41, 40, 42, 607, 697, 304, 305, 546, 698, 43, 118, 198, 494, 317, 120, 336, 139, 352, 117, 699, 213, 71, 484, 486, 485, 478, 700, 138, 701, 255, 770, 702, 119, 813, 814, 497, 498, 507, 815, 816, 506, 817, 705, 704, 703, 55, 51, 52, 56, 50, 54, 57, 53, 1, 807, 806, 808, 809, 858, 859, 495, 860, 861, 707, 706, 818, 819, 820, 608, 821, 27, 28, 29, 30, 925, 926, 525, 524, 927, 191, 766, 768, 767, 609, 822, 499, 476, 475, 477, 932, 351, 350, 823, 824, 500, 501, 508, 825, 46, 47, 48, 49, 862, 109, 110, 111, 112, 113, 114, 115, 116, 883, 77, 80, 79, 78, 863, 306, 309, 308, 307, 44, 45, 509, 547, 771, 772, 610, 773, 774, 611, 775, 776, 778, 782, 783, 779, 780, 781, 784, 612, 785, 613, 614, 786, 615, 616, 787, 793, 794, 532, 655, 715, 714, 713, 712, 711, 710, 709, 708, 132, 124, 123, 127, 136, 125, 137, 130, 131, 121, 122, 129, 128, 135, 126, 134, 133, 788, 789, 617, 790, 791, 618, 792, 349, 341, 344, 345, 346, 339, 340, 343, 342, 348, 347, 777, 619, 455, 456, 919, 620, 510, 482, 480, 481, 479, 864, 716, 68, 66, 67, 549, 795, 548, 796, 621, 622, 623, 798, 799, 797, 526, 800, 624, 625, 626, 627, 628, 629, 801, 533, 727, 726, 725, 724, 658, 723, 722, 721, 720, 719, 718, 717, 63, 60, 61, 5, 6, 7, 8, 58, 59, 62, 64, 630, 631, 550, 632, 552, 551, 527, 729, 728, 633, 531, 810, 634, 811, 812, 502, 635, 534, 736, 735, 734, 733, 732, 731, 730, 194, 195, 196, 197, 826, 636, 827, 828, 829, 830, 831, 3, 528, 832, 833, 2, 834, 835, 836, 837, 739, 738, 656, 657, 737, 193, 192, 902, 905, 903, 529, 904, 353, 906, 907, 908, 637, 638, 838, 839, 840, 841, 639, 511, 535, 842, 553, 554, 740, 186, 179, 189, 182, 188, 180, 181, 178, 165, 176, 177, 173, 174, 175, 171, 172, 168, 169, 167, 166, 170, 185, 187, 164, 163, 183, 184, 843, 844, 845, 640, 512, 536, 846, 555, 556, 557, 741, 265, 262, 266, 276, 256, 258, 268, 267, 279, 269, 263, 277, 278, 273, 274, 275, 271, 264, 272, 270, 280, 261, 260, 259, 257, 847, 848, 849, 850, 641, 503, 513, 537, 851, 558, 559, 560, 561, 562, 745, 744, 743, 742, 289, 284, 293, 299, 282, 286, 296, 287, 297, 294, 298, 300, 301, 302, 290, 285, 283, 303, 295, 288, 292, 291, 281, 852, 853, 854, 855, 642, 504, 514, 538, 856, 563, 564, 565, 566, 567, 568, 569, 570, 571, 749, 748, 747, 746, 148, 143, 152, 158, 141, 145, 155, 146, 156, 153, 157, 159, 160, 161, 149, 144, 142, 162, 154, 147, 151, 150, 140, 865, 866, 867, 868, 869, 870, 873, 871, 872, 874, 875, 876, 643, 877, 515, 539, 878, 879, 880, 530, 881, 882, 752, 751, 750, 430, 419, 428, 420, 435, 444, 434, 442, 437, 438, 439, 440, 429, 441, 443, 424, 425, 445, 446, 447, 432, 431, 448, 433, 436, 427, 426, 423, 422, 421, 884, 885, 886, 644, 516, 540, 887, 754, 753, 84, 82, 93, 101, 102, 95, 103, 97, 88, 106, 98, 94, 104, 105, 96, 99, 90, 100, 87, 86, 85, 81, 83, 107, 92, 91, 89, 888, 889, 890, 892, 893, 891, 517, 541, 894, 572, 573, 574, 755, 397, 384, 395, 404, 383, 382, 399, 407, 402, 400, 393, 385, 401, 405, 406, 389, 390, 398, 396, 403, 386, 408, 394, 392, 391, 387, 388, 895, 896, 897, 899, 900, 898, 518, 542, 901, 575, 576, 577, 760, 759, 758, 757, 756, 249, 234, 247, 253, 233, 228, 251, 252, 232, 241, 244, 235, 248, 254, 230, 231, 239, 240, 250, 229, 236, 246, 245, 243, 242, 237, 238, 909, 910, 645, 911, 912, 913, 646, 647, 543, 914, 578, 579, 761, 371, 366, 359, 368, 377, 355, 356, 380, 370, 372, 373, 375, 364, 367, 378, 379, 365, 369, 374, 376, 361, 360, 381, 363, 362, 357, 358, 915, 582, 916, 917, 580, 918, 648, 649, 581, 762, 210, 201, 199, 211, 209, 212, 203, 206, 207, 208, 202, 205, 204, 200, 920, 585, 921, 922, 583, 923, 650, 651, 584, 763, 225, 216, 214, 226, 224, 227, 218, 221, 222, 223, 217, 220, 219, 215, 4, 586, 587, 588, 589, 590, 591, 592, 593, 594, 924, 595, 596, 321, 320, 319, 322, 519, 318, 520, 26, 933, 652, 937, 653, 938, 934, 935, 936, 939, 940, 326, 330, 334, 323, 333, 324, 329, 328, 327, 325, 332, 331, 941, 654, 521, 25, 765, 764, 316, 659 }
  uselistorder label %dec_label_pc_1000afc0, { 1, 0 }
}

define i32 @function_1000afe8() local_unnamed_addr {
dec_label_pc_1000afe8:
  %v0_1000b000 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b000

; uselistorder directives
  uselistorder i32* @r3, { 11, 12, 173, 174, 175, 13, 21, 176, 97, 0, 98, 31, 183, 18, 19, 3, 25, 177, 179, 30, 180, 181, 182, 164, 29, 165, 9, 20, 167, 169, 168, 178, 32, 155, 33, 34, 99, 26, 15, 100, 101, 102, 103, 104, 105, 106, 107, 108, 14, 28, 4, 16, 109, 1, 2, 5, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 67, 6, 68, 69, 17, 156, 157, 158, 10, 159, 160, 7, 76, 77, 78, 79, 80, 81, 82, 83, 23, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 148, 149, 8, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 161, 162, 163, 166, 170, 171, 172, 22, 24, 27 }
}

define i32 @function_1000b004() local_unnamed_addr {
entry:
  store i32 268480532, i32* @lr, align 4
  %v0_1000b010 = call i32 @function_100000b8()
  ret i32 %v0_1000b010

; uselistorder directives
  uselistorder i32 0, { 810, 203, 811, 38, 204, 142, 812, 205, 813, 814, 36, 37, 815, 816, 817, 0, 753, 754, 755, 77, 76, 756, 818, 819, 820, 39, 821, 822, 823, 824, 514, 206, 207, 385, 760, 761, 143, 762, 825, 19, 515, 516, 826, 827, 828, 829, 208, 517, 518, 519, 520, 521, 522, 523, 78, 531, 532, 830, 831, 209, 849, 850, 210, 855, 857, 135, 858, 211, 856, 1, 832, 833, 79, 834, 835, 212, 144, 213, 836, 837, 42, 43, 838, 839, 840, 214, 843, 844, 845, 40, 41, 846, 847, 848, 490, 491, 492, 493, 494, 80, 495, 496, 497, 202, 498, 81, 765, 767, 23, 768, 44, 769, 766, 763, 764, 2, 737, 733, 734, 735, 736, 136, 3, 772, 770, 771, 137, 773, 774, 738, 739, 740, 741, 742, 215, 743, 744, 775, 776, 216, 777, 145, 778, 787, 788, 82, 779, 780, 781, 782, 783, 784, 785, 786, 4, 5, 377, 386, 387, 388, 45, 46, 389, 6, 217, 757, 390, 391, 392, 393, 394, 395, 396, 397, 218, 398, 859, 860, 861, 862, 863, 864, 865, 866, 524, 525, 47, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 399, 499, 615, 841, 842, 400, 401, 545, 629, 402, 851, 83, 852, 808, 803, 809, 804, 696, 853, 854, 403, 404, 546, 547, 548, 48, 84, 549, 550, 64, 551, 553, 552, 140, 500, 501, 7, 68, 24, 69, 25, 630, 70, 631, 26, 27, 632, 71, 28, 85, 219, 220, 20, 21, 554, 746, 747, 748, 749, 89, 87, 86, 750, 88, 91, 90, 384, 92, 555, 49, 556, 557, 558, 789, 93, 790, 791, 559, 560, 50, 94, 561, 8, 95, 657, 96, 633, 405, 406, 99, 407, 408, 409, 410, 411, 134, 412, 221, 413, 414, 417, 415, 98, 416, 222, 418, 419, 420, 421, 422, 100, 423, 424, 149, 425, 426, 378, 72, 428, 429, 430, 431, 432, 433, 53, 54, 434, 435, 51, 52, 436, 437, 438, 439, 440, 441, 148, 146, 446, 447, 223, 448, 442, 443, 444, 445, 449, 22, 379, 380, 450, 451, 97, 452, 453, 454, 459, 460, 461, 462, 147, 463, 464, 101, 465, 466, 467, 468, 469, 470, 455, 102, 456, 457, 103, 458, 224, 427, 634, 471, 141, 472, 473, 225, 474, 475, 476, 477, 478, 150, 479, 480, 55, 56, 481, 482, 483, 57, 58, 484, 485, 486, 9, 487, 226, 227, 228, 488, 229, 17, 16, 15, 14, 13, 12, 151, 489, 503, 105, 502, 104, 504, 505, 107, 506, 106, 507, 10, 230, 231, 18, 510, 508, 509, 138, 511, 512, 152, 232, 513, 29, 562, 573, 563, 11, 564, 565, 566, 567, 139, 568, 569, 570, 571, 572, 30, 108, 63, 62, 109, 574, 59, 235, 575, 233, 234, 153, 576, 74, 697, 698, 73, 699, 110, 700, 75, 701, 111, 577, 112, 578, 236, 579, 580, 581, 237, 582, 583, 584, 585, 238, 586, 587, 588, 154, 155, 156, 157, 158, 159, 160, 161, 589, 590, 113, 591, 592, 239, 593, 594, 595, 596, 597, 598, 240, 599, 600, 601, 170, 162, 163, 164, 165, 166, 167, 168, 169, 114, 602, 603, 241, 604, 605, 606, 607, 242, 610, 611, 60, 609, 608, 243, 612, 613, 614, 171, 172, 173, 174, 175, 176, 177, 115, 616, 617, 244, 618, 619, 620, 621, 245, 624, 625, 61, 623, 622, 246, 626, 627, 628, 178, 179, 180, 635, 636, 247, 637, 638, 117, 116, 639, 248, 640, 641, 642, 643, 644, 645, 646, 118, 647, 648, 649, 181, 650, 651, 249, 652, 65, 66, 653, 119, 654, 655, 656, 250, 182, 183, 184, 185, 120, 658, 251, 659, 660, 661, 662, 252, 663, 664, 665, 187, 186, 666, 253, 667, 668, 121, 669, 254, 670, 671, 672, 673, 674, 675, 676, 677, 678, 255, 679, 680, 681, 188, 189, 190, 191, 682, 122, 683, 256, 684, 685, 686, 687, 688, 689, 690, 691, 692, 257, 693, 694, 695, 192, 193, 194, 195, 702, 703, 704, 705, 123, 706, 258, 707, 708, 709, 710, 711, 259, 712, 713, 714, 196, 197, 198, 199, 127, 126, 715, 716, 260, 31, 125, 124, 717, 718, 719, 261, 32, 720, 721, 722, 723, 128, 200, 132, 131, 724, 725, 33, 130, 129, 726, 727, 728, 34, 729, 730, 731, 732, 133, 201, 745, 751, 752, 758, 759, 792, 67, 793, 794, 262, 795, 796, 797, 798, 799, 800, 801, 802, 805, 35, 806, 807, 867, 868, 869, 381, 382, 383, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888 }
  uselistorder i32* @lr, { 8, 678, 679, 680, 649, 681, 682, 683, 684, 685, 686, 687, 688, 646, 10, 689, 298, 299, 9, 650, 651, 300, 301, 302, 303, 304, 305, 698, 699, 703, 704, 705, 706, 707, 708, 709, 711, 700, 702, 690, 691, 692, 693, 694, 695, 696, 697, 652, 654, 653, 615, 616, 617, 618, 619, 620, 655, 656, 657, 658, 662, 659, 660, 661, 11, 12, 595, 560, 561, 596, 442, 13, 226, 14, 15, 597, 598, 647, 16, 17, 18, 19, 20, 21, 22, 710, 23, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 701, 24, 25, 26, 27, 28, 29, 320, 644, 321, 663, 473, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 506, 474, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 125, 126, 127, 128, 129, 130, 131, 132, 100, 101, 102, 103, 104, 105, 475, 476, 477, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 0, 251, 252, 253, 254, 255, 256, 273, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 4, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 5, 351, 352, 353, 354, 355, 356, 1, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 416, 417, 418, 419, 420, 421, 422, 2, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 454, 447, 448, 449, 450, 451, 452, 453, 3, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 580, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 599, 601, 602, 603, 600, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
